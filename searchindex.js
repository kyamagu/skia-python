Search.setIndex({"docnames": ["development", "index", "install", "reference", "reference/skia", "reference/skia.AlphaType", "reference/skia.ApplyPerspectiveClip", "reference/skia.AutoCanvasRestore", "reference/skia.BBHFactory", "reference/skia.BBoxHierarchy", "reference/skia.BBoxHierarchy.Metadata", "reference/skia.Bitmap", "reference/skia.Bitmap.AllocFlags", "reference/skia.BlendMode", "reference/skia.BlendModeCoeff", "reference/skia.BlurMaskFilter", "reference/skia.BlurStyle", "reference/skia.Budgeted", "reference/skia.Canvas", "reference/skia.Canvas.Lattice", "reference/skia.Canvas.Lattice.RectType", "reference/skia.Canvas.PointMode", "reference/skia.Canvas.QuadAAFlags", "reference/skia.Canvas.SaveLayerFlags", "reference/skia.Canvas.SaveLayerRec", "reference/skia.Canvas.SrcRectConstraint", "reference/skia.ClipOp", "reference/skia.Codec", "reference/skia.Codec.DisposalMethod", "reference/skia.Codec.FrameInfo", "reference/skia.Codec.Options", "reference/skia.Codec.Result", "reference/skia.Codec.ScanlineOrder", "reference/skia.Codec.SelectionPolicy", "reference/skia.Codec.ZeroInitialized", "reference/skia.Color4f", "reference/skia.ColorChannel", "reference/skia.ColorChannelFlag", "reference/skia.ColorFilter", "reference/skia.ColorFilter.Type", "reference/skia.ColorFilters", "reference/skia.ColorInfo", "reference/skia.ColorMatrix", "reference/skia.ColorMatrixFilter", "reference/skia.ColorMatrixFilter.Type", "reference/skia.ColorSpace", "reference/skia.ColorType", "reference/skia.ConvergeMode", "reference/skia.CornerPathEffect", "reference/skia.CubicResampler", "reference/skia.DashPathEffect", "reference/skia.Data", "reference/skia.DiscretePathEffect", "reference/skia.Document", "reference/skia.Drawable", "reference/skia.Drawable.Type", "reference/skia.DynamicMemoryWStream", "reference/skia.EncodedImageFormat", "reference/skia.EncodedOrigin", "reference/skia.FILEStream", "reference/skia.FILEWStream", "reference/skia.FilterMode", "reference/skia.Flattanable", "reference/skia.Flattanable.Type", "reference/skia.Font", "reference/skia.Font.Edging", "reference/skia.FontArguments", "reference/skia.FontArguments.VariationPosition", "reference/skia.FontArguments.VariationPosition.Coordinate", "reference/skia.FontArguments.VariationPosition.Coordinates", "reference/skia.FontHinting", "reference/skia.FontMetrics", "reference/skia.FontMetrics.FontMetricsFlags", "reference/skia.FontMgr", "reference/skia.FontParameters", "reference/skia.FontParameters.Variation", "reference/skia.FontParameters.Variation.Axis", "reference/skia.FontStyle", "reference/skia.FontStyle.Slant", "reference/skia.FontStyle.Weight", "reference/skia.FontStyle.Width", "reference/skia.FontStyleSet", "reference/skia.GrBackendApi", "reference/skia.GrBackendFormat", "reference/skia.GrBackendRenderTarget", "reference/skia.GrBackendRenderTargets", "reference/skia.GrBackendSemaphore", "reference/skia.GrBackendTexture", "reference/skia.GrColorType", "reference/skia.GrContext", "reference/skia.GrContextOptions", "reference/skia.GrContext_Base", "reference/skia.GrDirectContext", "reference/skia.GrDirectContexts", "reference/skia.GrFlushInfo", "reference/skia.GrGLBackendState", "reference/skia.GrGLFormat", "reference/skia.GrGLFramebufferInfo", "reference/skia.GrGLInterface", "reference/skia.GrGLTextureInfo", "reference/skia.GrImageContext", "reference/skia.GrMipmapped", "reference/skia.GrMockOptions", "reference/skia.GrMockRenderTargetInfo", "reference/skia.GrMockTextureInfo", "reference/skia.GrProtected", "reference/skia.GrPurgeResourceOptions", "reference/skia.GrRecordingContext", "reference/skia.GrRenderable", "reference/skia.GrSemaphoresSubmitted", "reference/skia.GrSurfaceOrigin", "reference/skia.GrSyncCpu", "reference/skia.GrTextureType", "reference/skia.GrVkAlloc", "reference/skia.GrVkBackendContext", "reference/skia.GrVkDrawableInfo", "reference/skia.GrVkImageInfo", "reference/skia.GrVkYcbcrConversionInfo", "reference/skia.GradientShader", "reference/skia.GradientShader.Flags", "reference/skia.HighContrastConfig", "reference/skia.HighContrastConfig.InvertStyle", "reference/skia.HighContrastFilter", "reference/skia.IPoint", "reference/skia.IRect", "reference/skia.ISize", "reference/skia.Image", "reference/skia.Image.BitDepth", "reference/skia.Image.CachingHint", "reference/skia.Image.CompressionType", "reference/skia.Image.LegacyBitmapMode", "reference/skia.ImageFilter", "reference/skia.ImageFilter.CropRect", "reference/skia.ImageFilter.MapDirection", "reference/skia.ImageFilter.Type", "reference/skia.ImageFilters", "reference/skia.ImageInfo", "reference/skia.Line2DPathEffect", "reference/skia.LumaColorFilter", "reference/skia.M44", "reference/skia.MaskFilter", "reference/skia.MaskFilter.Type", "reference/skia.Matrix", "reference/skia.Matrix.ScaleToFit", "reference/skia.Matrix.TypeMask", "reference/skia.MemoryStream", "reference/skia.MipmapBuilder", "reference/skia.MipmapMode", "reference/skia.NullWStream", "reference/skia.OpBuilder", "reference/skia.OverdrawColorFilter", "reference/skia.PDF", "reference/skia.PDF.AttributeList", "reference/skia.PDF.Metadata", "reference/skia.PDF.StructureElementNode", "reference/skia.Paint", "reference/skia.Paint.Cap", "reference/skia.Paint.Join", "reference/skia.Paint.Style", "reference/skia.Path", "reference/skia.Path.AddPathMode", "reference/skia.Path.ArcSize", "reference/skia.Path.Iter", "reference/skia.Path.RawIter", "reference/skia.Path.SegmentMask", "reference/skia.Path.Verb", "reference/skia.Path1DPathEffect", "reference/skia.Path1DPathEffect.Style", "reference/skia.Path2DPathEffect", "reference/skia.PathBuilder", "reference/skia.PathBuilder.ArcSize", "reference/skia.PathDirection", "reference/skia.PathEffect", "reference/skia.PathEffect.Type", "reference/skia.PathFillType", "reference/skia.PathMeasure", "reference/skia.PathMeasure.GetPosAndTan", "reference/skia.PathOp", "reference/skia.PathSegmentMask", "reference/skia.PathVerb", "reference/skia.PerlinNoiseShader", "reference/skia.Picture", "reference/skia.PictureRecorder", "reference/skia.PixelGeometry", "reference/skia.PixelRef", "reference/skia.Pixmap", "reference/skia.Point", "reference/skia.Point3", "reference/skia.RRect", "reference/skia.RRect.Corner", "reference/skia.RRect.Type", "reference/skia.RSXform", "reference/skia.RTreeFactory", "reference/skia.Rect", "reference/skia.RefCnt", "reference/skia.RefCntBase", "reference/skia.Region", "reference/skia.Region.Cliperator", "reference/skia.Region.Iterator", "reference/skia.Region.Op", "reference/skia.Region.Spanerator", "reference/skia.RuntimeBlendBuilder", "reference/skia.RuntimeColorFilterBuilder", "reference/skia.RuntimeEffect", "reference/skia.RuntimeEffect.ChildType", "reference/skia.RuntimeEffect.UniformType", "reference/skia.RuntimeEffectBuilder", "reference/skia.RuntimeEffectBuilderChild", "reference/skia.RuntimeEffectBuilderUniform", "reference/skia.RuntimeEffectChild", "reference/skia.RuntimeEffectChildPtr", "reference/skia.RuntimeEffectResult", "reference/skia.RuntimeEffectUniform", "reference/skia.RuntimeShaderBuilder", "reference/skia.SVGCanvas", "reference/skia.SVGDOM", "reference/skia.SamplingOptions", "reference/skia.Shader", "reference/skia.Shader.Type", "reference/skia.ShaderMaskFilter", "reference/skia.Shaders", "reference/skia.Size", "reference/skia.SpanRuntimeEffectChild", "reference/skia.SpanRuntimeEffectChildPtr", "reference/skia.SpanRuntimeEffectUniform", "reference/skia.Stream", "reference/skia.StreamAsset", "reference/skia.StreamMemory", "reference/skia.StreamRewindable", "reference/skia.StreamSeekable", "reference/skia.String", "reference/skia.StrokeRec", "reference/skia.StrokeRec.InitStyle", "reference/skia.StrokeRec.Style", "reference/skia.Surface", "reference/skia.Surface.AsyncReadResult", "reference/skia.Surface.BackendHandleAccess", "reference/skia.Surface.BackendSurfaceAccess", "reference/skia.Surface.ContentChangeMode", "reference/skia.Surface.RescaleGamma", "reference/skia.SurfaceCharacterization", "reference/skia.SurfaceProps", "reference/skia.SurfaceProps.Flags", "reference/skia.Surfaces", "reference/skia.Surfaces.AsyncReadResult", "reference/skia.Surfaces.BackendHandleAccess", "reference/skia.Surfaces.BackendSurfaceAccess", "reference/skia.Surfaces.ContentChangeMode", "reference/skia.Surfaces.RescaleGamma", "reference/skia.TableColorFilter", "reference/skia.TableMaskFilter", "reference/skia.TextBlob", "reference/skia.TextBlob.Iter", "reference/skia.TextBlob.Iter.Run", "reference/skia.TextBlobBuilder", "reference/skia.TextEncoding", "reference/skia.TileMode", "reference/skia.TrimPathEffect", "reference/skia.TrimPathEffect.Mode", "reference/skia.Typeface", "reference/skia.Typeface.SerializeBehavior", "reference/skia.Unicode", "reference/skia.V2", "reference/skia.V3", "reference/skia.V4", "reference/skia.VectorRuntimeEffectChild", "reference/skia.VectorRuntimeEffectChildPtr", "reference/skia.Vertices", "reference/skia.Vertices.VertexMode", "reference/skia.VkFormat", "reference/skia.VkImageLayout", "reference/skia.WStream", "reference/skia.YUVAInfo", "reference/skia.YUVAInfo.PlaneConfig", "reference/skia.YUVAInfo.Siting", "reference/skia.YUVAInfo.Subsampling", "reference/skia.YUVAPixmapInfo", "reference/skia.YUVAPixmapInfo.DataType", "reference/skia.YUVAPixmapInfo.SupportedDataTypes", "reference/skia.YUVAPixmaps", "reference/skia.YUVColorSpace", "reference/skia.gpuBackendApi", "reference/skia.textlayout_FontCollection", "reference/skia.textlayout_Paragraph", "reference/skia.textlayout_ParagraphBuilder", "reference/skia.textlayout_ParagraphStyle", "reference/skia.textlayout_StrutStyle", "reference/skia.textlayout_TextAlign", "reference/skia.textlayout_TextDecoration", "reference/skia.textlayout_TextDecorationMode", "reference/skia.textlayout_TextDecorationStyle", "reference/skia.textlayout_TextStyle", "reference/skia.textlayout_TypefaceFontProvider", "tutorial/canvas", "tutorial/index", "tutorial/overview", "tutorial/paint", "tutorial/path"], "filenames": ["development.rst", "index.rst", "install.rst", "reference.rst", "reference/skia.rst", "reference/skia.AlphaType.rst", "reference/skia.ApplyPerspectiveClip.rst", "reference/skia.AutoCanvasRestore.rst", "reference/skia.BBHFactory.rst", "reference/skia.BBoxHierarchy.rst", "reference/skia.BBoxHierarchy.Metadata.rst", "reference/skia.Bitmap.rst", "reference/skia.Bitmap.AllocFlags.rst", "reference/skia.BlendMode.rst", "reference/skia.BlendModeCoeff.rst", "reference/skia.BlurMaskFilter.rst", "reference/skia.BlurStyle.rst", "reference/skia.Budgeted.rst", "reference/skia.Canvas.rst", "reference/skia.Canvas.Lattice.rst", "reference/skia.Canvas.Lattice.RectType.rst", "reference/skia.Canvas.PointMode.rst", "reference/skia.Canvas.QuadAAFlags.rst", "reference/skia.Canvas.SaveLayerFlags.rst", "reference/skia.Canvas.SaveLayerRec.rst", "reference/skia.Canvas.SrcRectConstraint.rst", "reference/skia.ClipOp.rst", "reference/skia.Codec.rst", "reference/skia.Codec.DisposalMethod.rst", "reference/skia.Codec.FrameInfo.rst", "reference/skia.Codec.Options.rst", "reference/skia.Codec.Result.rst", "reference/skia.Codec.ScanlineOrder.rst", "reference/skia.Codec.SelectionPolicy.rst", "reference/skia.Codec.ZeroInitialized.rst", "reference/skia.Color4f.rst", "reference/skia.ColorChannel.rst", "reference/skia.ColorChannelFlag.rst", "reference/skia.ColorFilter.rst", "reference/skia.ColorFilter.Type.rst", "reference/skia.ColorFilters.rst", "reference/skia.ColorInfo.rst", "reference/skia.ColorMatrix.rst", "reference/skia.ColorMatrixFilter.rst", "reference/skia.ColorMatrixFilter.Type.rst", "reference/skia.ColorSpace.rst", "reference/skia.ColorType.rst", "reference/skia.ConvergeMode.rst", "reference/skia.CornerPathEffect.rst", "reference/skia.CubicResampler.rst", "reference/skia.DashPathEffect.rst", "reference/skia.Data.rst", "reference/skia.DiscretePathEffect.rst", "reference/skia.Document.rst", "reference/skia.Drawable.rst", "reference/skia.Drawable.Type.rst", "reference/skia.DynamicMemoryWStream.rst", "reference/skia.EncodedImageFormat.rst", "reference/skia.EncodedOrigin.rst", "reference/skia.FILEStream.rst", "reference/skia.FILEWStream.rst", "reference/skia.FilterMode.rst", "reference/skia.Flattanable.rst", "reference/skia.Flattanable.Type.rst", "reference/skia.Font.rst", "reference/skia.Font.Edging.rst", "reference/skia.FontArguments.rst", "reference/skia.FontArguments.VariationPosition.rst", "reference/skia.FontArguments.VariationPosition.Coordinate.rst", "reference/skia.FontArguments.VariationPosition.Coordinates.rst", "reference/skia.FontHinting.rst", "reference/skia.FontMetrics.rst", "reference/skia.FontMetrics.FontMetricsFlags.rst", "reference/skia.FontMgr.rst", "reference/skia.FontParameters.rst", "reference/skia.FontParameters.Variation.rst", "reference/skia.FontParameters.Variation.Axis.rst", "reference/skia.FontStyle.rst", "reference/skia.FontStyle.Slant.rst", "reference/skia.FontStyle.Weight.rst", "reference/skia.FontStyle.Width.rst", "reference/skia.FontStyleSet.rst", "reference/skia.GrBackendApi.rst", "reference/skia.GrBackendFormat.rst", "reference/skia.GrBackendRenderTarget.rst", "reference/skia.GrBackendRenderTargets.rst", "reference/skia.GrBackendSemaphore.rst", "reference/skia.GrBackendTexture.rst", "reference/skia.GrColorType.rst", "reference/skia.GrContext.rst", "reference/skia.GrContextOptions.rst", "reference/skia.GrContext_Base.rst", "reference/skia.GrDirectContext.rst", "reference/skia.GrDirectContexts.rst", "reference/skia.GrFlushInfo.rst", "reference/skia.GrGLBackendState.rst", "reference/skia.GrGLFormat.rst", "reference/skia.GrGLFramebufferInfo.rst", "reference/skia.GrGLInterface.rst", "reference/skia.GrGLTextureInfo.rst", "reference/skia.GrImageContext.rst", "reference/skia.GrMipmapped.rst", "reference/skia.GrMockOptions.rst", "reference/skia.GrMockRenderTargetInfo.rst", "reference/skia.GrMockTextureInfo.rst", "reference/skia.GrProtected.rst", "reference/skia.GrPurgeResourceOptions.rst", "reference/skia.GrRecordingContext.rst", "reference/skia.GrRenderable.rst", "reference/skia.GrSemaphoresSubmitted.rst", "reference/skia.GrSurfaceOrigin.rst", "reference/skia.GrSyncCpu.rst", "reference/skia.GrTextureType.rst", "reference/skia.GrVkAlloc.rst", "reference/skia.GrVkBackendContext.rst", "reference/skia.GrVkDrawableInfo.rst", "reference/skia.GrVkImageInfo.rst", "reference/skia.GrVkYcbcrConversionInfo.rst", "reference/skia.GradientShader.rst", "reference/skia.GradientShader.Flags.rst", "reference/skia.HighContrastConfig.rst", "reference/skia.HighContrastConfig.InvertStyle.rst", "reference/skia.HighContrastFilter.rst", "reference/skia.IPoint.rst", "reference/skia.IRect.rst", "reference/skia.ISize.rst", "reference/skia.Image.rst", "reference/skia.Image.BitDepth.rst", "reference/skia.Image.CachingHint.rst", "reference/skia.Image.CompressionType.rst", "reference/skia.Image.LegacyBitmapMode.rst", "reference/skia.ImageFilter.rst", "reference/skia.ImageFilter.CropRect.rst", "reference/skia.ImageFilter.MapDirection.rst", "reference/skia.ImageFilter.Type.rst", "reference/skia.ImageFilters.rst", "reference/skia.ImageInfo.rst", "reference/skia.Line2DPathEffect.rst", "reference/skia.LumaColorFilter.rst", "reference/skia.M44.rst", "reference/skia.MaskFilter.rst", "reference/skia.MaskFilter.Type.rst", "reference/skia.Matrix.rst", "reference/skia.Matrix.ScaleToFit.rst", "reference/skia.Matrix.TypeMask.rst", "reference/skia.MemoryStream.rst", "reference/skia.MipmapBuilder.rst", "reference/skia.MipmapMode.rst", "reference/skia.NullWStream.rst", "reference/skia.OpBuilder.rst", "reference/skia.OverdrawColorFilter.rst", "reference/skia.PDF.rst", "reference/skia.PDF.AttributeList.rst", "reference/skia.PDF.Metadata.rst", "reference/skia.PDF.StructureElementNode.rst", "reference/skia.Paint.rst", "reference/skia.Paint.Cap.rst", "reference/skia.Paint.Join.rst", "reference/skia.Paint.Style.rst", "reference/skia.Path.rst", "reference/skia.Path.AddPathMode.rst", "reference/skia.Path.ArcSize.rst", "reference/skia.Path.Iter.rst", "reference/skia.Path.RawIter.rst", "reference/skia.Path.SegmentMask.rst", "reference/skia.Path.Verb.rst", "reference/skia.Path1DPathEffect.rst", "reference/skia.Path1DPathEffect.Style.rst", "reference/skia.Path2DPathEffect.rst", "reference/skia.PathBuilder.rst", "reference/skia.PathBuilder.ArcSize.rst", "reference/skia.PathDirection.rst", "reference/skia.PathEffect.rst", "reference/skia.PathEffect.Type.rst", "reference/skia.PathFillType.rst", "reference/skia.PathMeasure.rst", "reference/skia.PathMeasure.GetPosAndTan.rst", "reference/skia.PathOp.rst", "reference/skia.PathSegmentMask.rst", "reference/skia.PathVerb.rst", "reference/skia.PerlinNoiseShader.rst", "reference/skia.Picture.rst", "reference/skia.PictureRecorder.rst", "reference/skia.PixelGeometry.rst", "reference/skia.PixelRef.rst", "reference/skia.Pixmap.rst", "reference/skia.Point.rst", "reference/skia.Point3.rst", "reference/skia.RRect.rst", "reference/skia.RRect.Corner.rst", "reference/skia.RRect.Type.rst", "reference/skia.RSXform.rst", "reference/skia.RTreeFactory.rst", "reference/skia.Rect.rst", "reference/skia.RefCnt.rst", "reference/skia.RefCntBase.rst", "reference/skia.Region.rst", "reference/skia.Region.Cliperator.rst", "reference/skia.Region.Iterator.rst", "reference/skia.Region.Op.rst", "reference/skia.Region.Spanerator.rst", "reference/skia.RuntimeBlendBuilder.rst", "reference/skia.RuntimeColorFilterBuilder.rst", "reference/skia.RuntimeEffect.rst", "reference/skia.RuntimeEffect.ChildType.rst", "reference/skia.RuntimeEffect.UniformType.rst", "reference/skia.RuntimeEffectBuilder.rst", "reference/skia.RuntimeEffectBuilderChild.rst", "reference/skia.RuntimeEffectBuilderUniform.rst", "reference/skia.RuntimeEffectChild.rst", "reference/skia.RuntimeEffectChildPtr.rst", "reference/skia.RuntimeEffectResult.rst", "reference/skia.RuntimeEffectUniform.rst", "reference/skia.RuntimeShaderBuilder.rst", "reference/skia.SVGCanvas.rst", "reference/skia.SVGDOM.rst", "reference/skia.SamplingOptions.rst", "reference/skia.Shader.rst", "reference/skia.Shader.Type.rst", "reference/skia.ShaderMaskFilter.rst", "reference/skia.Shaders.rst", "reference/skia.Size.rst", "reference/skia.SpanRuntimeEffectChild.rst", "reference/skia.SpanRuntimeEffectChildPtr.rst", "reference/skia.SpanRuntimeEffectUniform.rst", "reference/skia.Stream.rst", "reference/skia.StreamAsset.rst", "reference/skia.StreamMemory.rst", "reference/skia.StreamRewindable.rst", "reference/skia.StreamSeekable.rst", "reference/skia.String.rst", "reference/skia.StrokeRec.rst", "reference/skia.StrokeRec.InitStyle.rst", "reference/skia.StrokeRec.Style.rst", "reference/skia.Surface.rst", "reference/skia.Surface.AsyncReadResult.rst", "reference/skia.Surface.BackendHandleAccess.rst", "reference/skia.Surface.BackendSurfaceAccess.rst", "reference/skia.Surface.ContentChangeMode.rst", "reference/skia.Surface.RescaleGamma.rst", "reference/skia.SurfaceCharacterization.rst", "reference/skia.SurfaceProps.rst", "reference/skia.SurfaceProps.Flags.rst", "reference/skia.Surfaces.rst", "reference/skia.Surfaces.AsyncReadResult.rst", "reference/skia.Surfaces.BackendHandleAccess.rst", "reference/skia.Surfaces.BackendSurfaceAccess.rst", "reference/skia.Surfaces.ContentChangeMode.rst", "reference/skia.Surfaces.RescaleGamma.rst", "reference/skia.TableColorFilter.rst", "reference/skia.TableMaskFilter.rst", "reference/skia.TextBlob.rst", "reference/skia.TextBlob.Iter.rst", "reference/skia.TextBlob.Iter.Run.rst", "reference/skia.TextBlobBuilder.rst", "reference/skia.TextEncoding.rst", "reference/skia.TileMode.rst", "reference/skia.TrimPathEffect.rst", "reference/skia.TrimPathEffect.Mode.rst", "reference/skia.Typeface.rst", "reference/skia.Typeface.SerializeBehavior.rst", "reference/skia.Unicode.rst", "reference/skia.V2.rst", "reference/skia.V3.rst", "reference/skia.V4.rst", "reference/skia.VectorRuntimeEffectChild.rst", "reference/skia.VectorRuntimeEffectChildPtr.rst", "reference/skia.Vertices.rst", "reference/skia.Vertices.VertexMode.rst", "reference/skia.VkFormat.rst", "reference/skia.VkImageLayout.rst", "reference/skia.WStream.rst", "reference/skia.YUVAInfo.rst", "reference/skia.YUVAInfo.PlaneConfig.rst", "reference/skia.YUVAInfo.Siting.rst", "reference/skia.YUVAInfo.Subsampling.rst", "reference/skia.YUVAPixmapInfo.rst", "reference/skia.YUVAPixmapInfo.DataType.rst", "reference/skia.YUVAPixmapInfo.SupportedDataTypes.rst", "reference/skia.YUVAPixmaps.rst", "reference/skia.YUVColorSpace.rst", "reference/skia.gpuBackendApi.rst", "reference/skia.textlayout_FontCollection.rst", "reference/skia.textlayout_Paragraph.rst", "reference/skia.textlayout_ParagraphBuilder.rst", "reference/skia.textlayout_ParagraphStyle.rst", "reference/skia.textlayout_StrutStyle.rst", "reference/skia.textlayout_TextAlign.rst", "reference/skia.textlayout_TextDecoration.rst", "reference/skia.textlayout_TextDecorationMode.rst", "reference/skia.textlayout_TextDecorationStyle.rst", "reference/skia.textlayout_TextStyle.rst", "reference/skia.textlayout_TypefaceFontProvider.rst", "tutorial/canvas.rst", "tutorial/index.rst", "tutorial/overview.rst", "tutorial/paint.rst", "tutorial/path.rst"], "titles": ["Development", "skia-python", "Install", "Reference", "skia", "AlphaType", "ApplyPerspectiveClip", "AutoCanvasRestore", "BBHFactory", "BBoxHierarchy", "BBoxHierarchy.Metadata", "Bitmap", "Bitmap.AllocFlags", "BlendMode", "BlendModeCoeff", "BlurMaskFilter", "BlurStyle", "Budgeted", "Canvas", "Canvas.Lattice", "Canvas.Lattice.RectType", "Canvas.PointMode", "Canvas.QuadAAFlags", "Canvas.SaveLayerFlags", "Canvas.SaveLayerRec", "Canvas.SrcRectConstraint", "ClipOp", "Codec", "Codec.DisposalMethod", "Codec.FrameInfo", "Codec.Options", "Codec.Result", "Codec.ScanlineOrder", "Codec.SelectionPolicy", "Codec.ZeroInitialized", "Color4f", "ColorChannel", "ColorChannelFlag", "ColorFilter", "ColorFilter.Type", "ColorFilters", "ColorInfo", "ColorMatrix", "ColorMatrixFilter", "ColorMatrixFilter.Type", "ColorSpace", "ColorType", "ConvergeMode", "CornerPathEffect", "CubicResampler", "DashPathEffect", "Data", "DiscretePathEffect", "Document", "Drawable", "Drawable.Type", "DynamicMemoryWStream", "EncodedImageFormat", "EncodedOrigin", "FILEStream", "FILEWStream", "FilterMode", "Flattanable", "Flattanable.Type", "Font", "Font.Edging", "FontArguments", "FontArguments.VariationPosition", "FontArguments.VariationPosition.Coordinate", "FontArguments.VariationPosition.Coordinates", "FontHinting", "FontMetrics", "FontMetrics.FontMetricsFlags", "FontMgr", "FontParameters", "FontParameters.Variation", "FontParameters.Variation.Axis", "FontStyle", "FontStyle.Slant", "FontStyle.Weight", "FontStyle.Width", "FontStyleSet", "GrBackendApi", "GrBackendFormat", "GrBackendRenderTarget", "GrBackendRenderTargets", "GrBackendSemaphore", "GrBackendTexture", "GrColorType", "GrContext", "GrContextOptions", "GrContext_Base", "GrDirectContext", "GrDirectContexts", "GrFlushInfo", "GrGLBackendState", "GrGLFormat", "GrGLFramebufferInfo", "GrGLInterface", "GrGLTextureInfo", "GrImageContext", "GrMipmapped", "GrMockOptions", "GrMockRenderTargetInfo", "GrMockTextureInfo", "GrProtected", "GrPurgeResourceOptions", "GrRecordingContext", "GrRenderable", "GrSemaphoresSubmitted", "GrSurfaceOrigin", "GrSyncCpu", "GrTextureType", "GrVkAlloc", "GrVkBackendContext", "GrVkDrawableInfo", "GrVkImageInfo", "GrVkYcbcrConversionInfo", "GradientShader", "GradientShader.Flags", "HighContrastConfig", "HighContrastConfig.InvertStyle", "HighContrastFilter", "IPoint", "IRect", "ISize", "Image", "Image.BitDepth", "Image.CachingHint", "Image.CompressionType", "Image.LegacyBitmapMode", "ImageFilter", "ImageFilter.CropRect", "ImageFilter.MapDirection", "ImageFilter.Type", "ImageFilters", "ImageInfo", "Line2DPathEffect", "LumaColorFilter", "M44", "MaskFilter", "MaskFilter.Type", "Matrix", "Matrix.ScaleToFit", "Matrix.TypeMask", "MemoryStream", "MipmapBuilder", "MipmapMode", "NullWStream", "OpBuilder", "OverdrawColorFilter", "PDF", "PDF.AttributeList", "PDF.Metadata", "PDF.StructureElementNode", "Paint", "Paint.Cap", "Paint.Join", "Paint.Style", "Path", "Path.AddPathMode", "Path.ArcSize", "Path.Iter", "Path.RawIter", "Path.SegmentMask", "Path.Verb", "Path1DPathEffect", "Path1DPathEffect.Style", "Path2DPathEffect", "PathBuilder", "PathBuilder.ArcSize", "PathDirection", "PathEffect", "PathEffect.Type", "PathFillType", "PathMeasure", "PathMeasure.GetPosAndTan", "PathOp", "PathSegmentMask", "PathVerb", "PerlinNoiseShader", "Picture", "PictureRecorder", "PixelGeometry", "PixelRef", "Pixmap", "Point", "Point3", "RRect", "RRect.Corner", "RRect.Type", "RSXform", "RTreeFactory", "Rect", "RefCnt", "RefCntBase", "Region", "Region.Cliperator", "Region.Iterator", "Region.Op", "Region.Spanerator", "RuntimeBlendBuilder", "RuntimeColorFilterBuilder", "RuntimeEffect", "RuntimeEffect.ChildType", "RuntimeEffect.UniformType", "RuntimeEffectBuilder", "RuntimeEffectBuilderChild", "RuntimeEffectBuilderUniform", "RuntimeEffectChild", "RuntimeEffectChildPtr", "RuntimeEffectResult", "RuntimeEffectUniform", "RuntimeShaderBuilder", "SVGCanvas", "SVGDOM", "SamplingOptions", "Shader", "Shader.Type", "ShaderMaskFilter", "Shaders", "Size", "SpanRuntimeEffectChild", "SpanRuntimeEffectChildPtr", "SpanRuntimeEffectUniform", "Stream", "StreamAsset", "StreamMemory", "StreamRewindable", "StreamSeekable", "String", "StrokeRec", "StrokeRec.InitStyle", "StrokeRec.Style", "Surface", "Surface.AsyncReadResult", "Surface.BackendHandleAccess", "Surface.BackendSurfaceAccess", "Surface.ContentChangeMode", "Surface.RescaleGamma", "SurfaceCharacterization", "SurfaceProps", "SurfaceProps.Flags", "Surfaces", "Surfaces.AsyncReadResult", "Surfaces.BackendHandleAccess", "Surfaces.BackendSurfaceAccess", "Surfaces.ContentChangeMode", "Surfaces.RescaleGamma", "TableColorFilter", "TableMaskFilter", "TextBlob", "TextBlob.Iter", "TextBlob.Iter.Run", "TextBlobBuilder", "TextEncoding", "TileMode", "TrimPathEffect", "TrimPathEffect.Mode", "Typeface", "Typeface.SerializeBehavior", "Unicode", "V2", "V3", "V4", "VectorRuntimeEffectChild", "VectorRuntimeEffectChildPtr", "Vertices", "Vertices.VertexMode", "VkFormat", "VkImageLayout", "WStream", "YUVAInfo", "YUVAInfo.PlaneConfig", "YUVAInfo.Siting", "YUVAInfo.Subsampling", "YUVAPixmapInfo", "YUVAPixmapInfo.DataType", "YUVAPixmapInfo.SupportedDataTypes", "YUVAPixmaps", "YUVColorSpace", "gpuBackendApi", "textlayout_FontCollection", "textlayout_Paragraph", "textlayout_ParagraphBuilder", "textlayout_ParagraphStyle", "textlayout_StrutStyle", "textlayout_TextAlign", "textlayout_TextDecoration", "textlayout_TextDecorationMode", "textlayout_TextDecorationStyle", "textlayout_TextStyle", "textlayout_TypefaceFontProvider", "Canvas Creation", "Tutorial", "Overview", "Paint Overview", "Path Overview"], "terms": {"skia": [0, 2, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297], "i": [0, 1, 2, 4, 5, 7, 9, 11, 12, 14, 18, 19, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 41, 43, 45, 48, 50, 51, 52, 53, 54, 56, 59, 62, 64, 69, 71, 72, 73, 76, 81, 82, 84, 85, 89, 91, 92, 93, 94, 98, 100, 107, 114, 116, 118, 122, 123, 124, 126, 130, 131, 135, 136, 138, 140, 142, 145, 149, 151, 153, 154, 155, 159, 160, 162, 163, 169, 172, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 203, 214, 215, 217, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 243, 244, 245, 249, 251, 254, 257, 259, 261, 265, 266, 272, 273, 274, 275, 276, 278, 279, 282, 292, 293, 294, 295, 296, 297], "built": [0, 2, 11, 18, 126, 185, 251, 254], "upon": [0, 54, 234, 243], "pybind11": [0, 2], "ar": [0, 2, 4, 5, 9, 11, 14, 18, 19, 27, 28, 31, 32, 35, 38, 41, 43, 45, 53, 54, 59, 62, 64, 71, 72, 73, 81, 89, 91, 92, 93, 94, 95, 98, 100, 107, 114, 118, 123, 124, 125, 126, 131, 135, 136, 140, 142, 145, 146, 151, 153, 155, 159, 162, 163, 169, 172, 175, 181, 182, 183, 185, 186, 187, 188, 193, 194, 195, 196, 203, 215, 217, 221, 225, 226, 227, 228, 229, 234, 243, 249, 251, 254, 257, 259, 261, 272, 273, 274, 275, 276, 277, 278, 279, 282, 292, 293, 295, 296, 297], "mostli": 0, "plain": 0, "convers": [0, 11, 122, 126, 185, 186], "from": [0, 4, 11, 13, 18, 19, 27, 29, 31, 32, 35, 41, 45, 48, 52, 58, 64, 71, 73, 89, 92, 93, 94, 123, 124, 126, 135, 136, 139, 142, 147, 153, 155, 159, 162, 163, 169, 172, 177, 180, 181, 182, 185, 186, 187, 188, 193, 196, 214, 234, 235, 243, 244, 251, 254, 259, 276, 292, 293, 295, 296, 297], "c": [0, 2, 4, 11, 40, 41, 46, 49, 126, 136, 142, 159, 188, 193, 220, 240, 296], "api": [0, 1, 18, 32, 35, 53, 82, 84, 85, 89, 91, 92, 93, 94, 100, 107, 126, 225, 234, 243, 281, 294], "function": [0, 9, 11, 14, 18, 24, 27, 35, 40, 41, 45, 54, 56, 60, 64, 69, 73, 77, 83, 84, 85, 87, 89, 92, 93, 94, 97, 99, 103, 104, 120, 123, 124, 125, 126, 132, 135, 136, 142, 145, 148, 151, 153, 155, 159, 162, 163, 169, 175, 180, 181, 182, 185, 186, 187, 188, 191, 193, 196, 198, 201, 202, 203, 206, 210, 213, 216, 217, 220, 221, 223, 230, 231, 234, 241, 243, 251, 259, 262, 263, 264, 265, 266, 271, 272, 276, 282, 292], "name": [0, 4, 5, 6, 12, 13, 14, 16, 17, 20, 21, 22, 23, 25, 26, 28, 31, 32, 33, 34, 36, 37, 38, 39, 43, 44, 46, 47, 54, 55, 57, 58, 61, 62, 63, 65, 70, 72, 73, 78, 79, 80, 82, 88, 95, 96, 101, 105, 106, 108, 109, 110, 111, 112, 119, 121, 127, 128, 129, 130, 131, 133, 134, 138, 140, 141, 143, 144, 147, 152, 153, 156, 157, 158, 159, 160, 161, 164, 165, 167, 170, 171, 172, 173, 174, 176, 177, 178, 179, 183, 189, 190, 199, 201, 202, 204, 205, 206, 207, 208, 209, 212, 213, 217, 218, 232, 233, 236, 237, 238, 239, 242, 245, 246, 247, 248, 255, 256, 258, 259, 260, 268, 269, 270, 273, 274, 275, 277, 280, 281, 287, 288, 289, 290, 292], "remain": [0, 11, 19, 27, 66, 76, 126, 142, 188, 214, 250, 276, 279, 297], "same": [0, 4, 11, 18, 24, 27, 32, 38, 41, 45, 50, 51, 52, 54, 59, 64, 89, 92, 93, 94, 126, 131, 135, 136, 142, 145, 151, 155, 159, 174, 182, 187, 188, 196, 217, 225, 226, 227, 228, 229, 231, 234, 243, 259, 276, 293], "A": [0, 18, 27, 31, 35, 40, 50, 89, 92, 93, 95, 135, 142, 151, 153, 154, 159, 191, 234, 243, 249, 260, 272, 273, 275, 276, 277, 296, 297], "few": [0, 2, 126, 196], "differ": [0, 4, 11, 18, 27, 36, 47, 52, 54, 126, 142, 159, 188, 196, 225, 234, 243, 249, 275, 296], "all": [0, 4, 9, 11, 18, 19, 27, 32, 34, 35, 38, 43, 50, 53, 54, 59, 62, 64, 69, 73, 81, 89, 91, 92, 93, 94, 98, 100, 107, 114, 124, 126, 131, 135, 136, 140, 142, 144, 145, 149, 155, 159, 172, 181, 185, 188, 193, 194, 195, 196, 203, 215, 217, 225, 226, 227, 228, 229, 234, 243, 249, 251, 257, 259, 261, 265, 266, 272, 276, 278, 282, 292, 293, 295, 296], "resid": [0, 126, 234, 243], "modul": [0, 3, 4, 217], "remov": [0, 18, 69, 155, 159, 230, 265, 266], "class": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295], "prefix": 0, "sk": [0, 142], "e": [0, 14, 27, 28, 29, 31, 35, 40, 48, 54, 89, 92, 93, 114, 122, 126, 131, 135, 142, 153, 155, 183, 187, 217, 231, 234, 241, 243, 250, 257, 273, 275, 295, 296], "g": [0, 4, 11, 27, 29, 31, 35, 48, 54, 89, 92, 93, 114, 122, 126, 135, 138, 142, 153, 155, 183, 217, 234, 241, 243, 249, 250, 257, 273, 275, 280, 295, 296], "skcanva": [0, 7, 18, 53, 54, 135, 151, 181, 182, 283], "canva": [0, 1, 4, 7, 11, 53, 54, 126, 131, 135, 139, 151, 154, 155, 159, 169, 172, 181, 182, 185, 196, 214, 215, 234, 243, 267, 283, 294, 296, 297], "some": [0, 11, 18, 27, 45, 54, 64, 89, 92, 93, 126, 131, 159, 181, 185, 214, 217, 234, 243, 250, 259, 295, 296], "method": [0, 295], "signatur": [0, 155, 259], "adapt": 0, "style": [0, 18, 64, 73, 140, 155, 166, 231, 259, 284, 291, 292, 295, 296, 297], "surfac": [0, 11, 18, 41, 89, 92, 93, 107, 110, 126, 135, 136, 159, 185, 241, 254, 293, 295], "__init__": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292], "accept": [0, 126, 131, 135], "addit": [0, 11, 30, 64, 126, 155, 159, 172, 185, 234, 243, 274], "arg": [0, 2, 8, 9, 10, 11, 15, 18, 19, 24, 27, 35, 38, 40, 41, 43, 45, 48, 49, 50, 52, 53, 54, 56, 60, 62, 64, 69, 73, 74, 75, 77, 81, 83, 84, 85, 87, 89, 91, 92, 93, 97, 99, 100, 103, 104, 107, 115, 118, 120, 122, 123, 124, 125, 126, 131, 132, 135, 136, 137, 138, 140, 142, 145, 148, 150, 151, 153, 155, 159, 162, 163, 166, 168, 169, 172, 175, 180, 182, 184, 185, 186, 187, 188, 191, 193, 194, 195, 196, 198, 201, 202, 203, 206, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 241, 243, 244, 249, 250, 257, 259, 262, 263, 264, 265, 266, 271, 272, 276, 282, 283, 292], "paint": [0, 1, 7, 11, 18, 24, 38, 64, 126, 131, 159, 172, 181, 217, 231, 234, 243, 251, 259, 283, 291, 293, 294, 295, 297], "implicitli": [0, 11, 136, 155], "convert": [0, 4, 11, 18, 31, 35, 38, 41, 43, 45, 51, 64, 123, 124, 126, 136, 153, 155, 185, 186, 187, 193, 234, 243, 295], "dict": [0, 153, 155], "take": [0, 11, 32, 34, 64, 89, 92, 93, 135, 142, 155, 159, 231, 234, 243, 257, 259, 276], "void": [0, 234, 243], "ptr": [0, 51, 217], "us": [0, 2, 7, 11, 14, 18, 24, 27, 29, 30, 32, 34, 35, 37, 45, 46, 47, 51, 52, 53, 56, 64, 66, 73, 82, 89, 91, 92, 93, 94, 100, 101, 107, 122, 126, 131, 135, 136, 138, 139, 140, 142, 150, 151, 153, 155, 159, 168, 169, 180, 181, 182, 183, 184, 185, 186, 193, 196, 198, 217, 234, 237, 243, 246, 251, 254, 259, 267, 275, 276, 279, 281, 292, 293, 295, 296, 297], "buffer": [0, 11, 18, 27, 29, 38, 43, 51, 54, 56, 59, 60, 62, 89, 92, 93, 126, 131, 136, 140, 142, 145, 148, 159, 172, 185, 188, 196, 214, 217, 225, 226, 227, 228, 229, 234, 243, 251, 271, 276, 279], "protocol": [0, 11, 51, 185], "return": [0, 4, 7, 9, 11, 18, 27, 29, 30, 31, 32, 35, 38, 41, 43, 45, 51, 53, 54, 56, 59, 60, 62, 64, 69, 71, 73, 76, 81, 84, 85, 89, 91, 92, 93, 94, 98, 100, 107, 118, 122, 123, 124, 125, 126, 130, 131, 135, 136, 140, 142, 145, 146, 148, 149, 151, 155, 159, 162, 163, 169, 172, 175, 179, 181, 182, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 200, 203, 214, 215, 217, 221, 225, 226, 227, 228, 229, 231, 234, 243, 250, 251, 254, 256, 257, 259, 261, 265, 266, 271, 272, 276, 279, 282, 292, 296], "raw": [0, 126, 155], "memori": [0, 9, 11, 12, 18, 27, 34, 45, 56, 89, 92, 93, 126, 136, 153, 159, 184, 185, 188, 196, 225, 234, 243, 251, 259, 272, 276, 279, 293, 297], "address": [0, 11, 18, 56, 59, 60, 126, 136, 145, 148, 185, 225, 226, 227, 228, 229, 234, 243, 271, 295], "wrap": [0, 11, 18, 89, 92, 93, 114, 116, 126, 136, 159, 185, 234, 243, 279], "memoryview": [0, 11, 18, 35, 51, 126, 159, 185, 193, 234, 243, 251], "numpi": [0, 2, 18, 126, 142, 185, 234, 243, 293, 295], "export": [0, 2, 18, 126, 234, 243, 295], "ad": [0, 82, 124, 126, 135, 149, 159, 169, 171, 182, 186, 188, 193, 254, 297], "imag": [0, 11, 13, 18, 19, 27, 29, 30, 31, 32, 33, 58, 89, 92, 93, 107, 110, 131, 135, 136, 146, 153, 155, 180, 185, 217, 234, 243, 256, 272, 276, 293, 294, 295, 296], "support": [0, 2, 11, 18, 27, 30, 31, 41, 51, 53, 59, 64, 76, 82, 89, 92, 93, 107, 114, 126, 135, 136, 145, 153, 159, 185, 196, 225, 226, 227, 228, 229, 234, 243, 259, 274, 276, 278, 295, 296], "bitmap": [0, 4, 18, 19, 20, 64, 72, 126, 130, 131, 135, 136, 184, 185, 217, 234, 243, 295], "pixmap": [0, 11, 18, 27, 89, 92, 93, 126, 136, 234, 243, 272, 273, 276, 278, 279, 295], "happen": [0, 1, 89, 92, 93, 126, 131, 135, 234, 243, 259], "github": [0, 1, 2], "feel": 0, "free": [0, 11, 89, 92, 93, 175, 181, 279], "post": [0, 131], "issu": [0, 94, 234, 243], "make": [0, 4, 18, 20, 27, 30, 45, 48, 50, 52, 59, 89, 92, 93, 122, 123, 124, 125, 126, 136, 137, 138, 142, 145, 153, 155, 159, 166, 168, 186, 187, 191, 193, 196, 197, 198, 214, 217, 219, 221, 234, 243, 249, 254, 257, 284, 293, 296, 297], "pr": 0, "bind": [1, 2, 4, 89, 92, 93], "graphic": [1, 18, 114, 116], "librari": [1, 2, 293], "an": [1, 4, 11, 14, 17, 18, 27, 29, 31, 32, 35, 41, 45, 48, 50, 51, 59, 64, 69, 71, 73, 84, 85, 89, 92, 93, 94, 95, 124, 126, 131, 135, 136, 138, 140, 142, 145, 151, 153, 155, 159, 162, 163, 169, 174, 175, 180, 181, 182, 185, 186, 188, 193, 195, 196, 198, 214, 217, 225, 226, 227, 228, 229, 231, 234, 241, 243, 251, 254, 259, 265, 266, 267, 276, 279, 292, 293, 295, 296, 297], "open": [1, 18, 21, 51, 59, 126, 145, 159, 162, 225, 226, 227, 228, 229, 295, 297], "sourc": [1, 4, 11, 13, 18, 19, 27, 38, 41, 43, 45, 126, 131, 135, 136, 142, 155, 185, 217, 225, 234, 243, 296], "2d": [1, 118, 142], "which": [1, 4, 11, 18, 27, 30, 31, 32, 38, 40, 41, 52, 54, 71, 73, 89, 92, 93, 114, 126, 131, 135, 136, 142, 153, 155, 159, 175, 180, 181, 182, 185, 225, 234, 243, 259, 260, 292, 293, 296, 297], "provid": [1, 11, 18, 27, 41, 51, 89, 92, 93, 94, 120, 122, 126, 135, 142, 153, 162, 180, 185, 186, 188, 196, 200, 214, 234, 243, 251], "common": [1, 18, 32, 124, 159, 169, 193, 196, 250, 297], "work": [1, 18, 52, 89, 92, 93, 94, 126, 159, 234, 243], "across": [1, 18, 54, 126, 185, 234, 243, 257], "varieti": 1, "hardwar": [1, 126], "softwar": [1, 234, 243], "platform": [1, 2, 11, 18, 64, 126, 234, 243, 259, 293], "develop": 1, "instal": [1, 131, 293], "pypi": 1, "distribut": [1, 118, 155], "build": [1, 11, 53, 126, 136, 155, 181, 188, 254, 284], "instruct": [1, 33, 64], "test": [1, 45, 52, 82, 124, 126, 155, 159, 188, 193, 196], "tutori": 1, "overview": [1, 294], "creation": [1, 114, 234, 243, 294], "path": [1, 2, 4, 18, 50, 51, 52, 59, 60, 64, 73, 126, 145, 149, 155, 166, 168, 169, 172, 174, 175, 177, 196, 225, 226, 227, 228, 229, 231, 257, 259, 292, 294, 295], "notebook": [1, 295], "exampl": [1, 4, 7, 27, 32, 35, 50, 73, 123, 124, 136, 140, 142, 155, 159, 162, 172, 181, 186, 187, 193, 196, 234, 251, 252, 259, 293, 295, 296, 297], "design": [1, 66, 124, 193, 259], "contribut": [1, 142, 159], "refer": [1, 9, 11, 18, 38, 43, 51, 53, 54, 62, 73, 81, 89, 91, 92, 93, 98, 100, 107, 126, 131, 136, 140, 142, 155, 159, 169, 172, 181, 182, 185, 188, 194, 195, 203, 215, 217, 234, 243, 259, 261, 282, 292, 296], "index": [1, 11, 27, 29, 30, 64, 66, 69, 73, 81, 116, 126, 131, 136, 142, 159, 185, 189, 259, 265, 266, 292], "search": [1, 9], "page": [1, 2, 53, 151, 293], "binari": [2, 126, 159, 188, 193, 196], "packag": [2, 234, 243, 293], "avail": [2, 4, 11, 18, 37, 126, 131, 234, 243, 259, 296], "pip": [2, 293], "python": [2, 4, 51, 53, 126, 155, 294], "x86_64": 2, "aarch64": 2, "arm64": 2, "For": [2, 4, 14, 18, 27, 32, 33, 45, 50, 53, 64, 89, 92, 93, 126, 131, 136, 142, 155, 159, 172, 185, 234, 243, 257, 295, 296], "must": [2, 9, 11, 18, 27, 30, 34, 38, 43, 48, 51, 53, 54, 59, 62, 66, 73, 81, 84, 85, 89, 91, 92, 93, 98, 100, 107, 114, 118, 126, 131, 135, 136, 140, 142, 145, 159, 172, 180, 181, 182, 185, 194, 195, 203, 214, 215, 217, 225, 226, 227, 228, 229, 234, 236, 243, 245, 251, 257, 259, 261, 276, 279, 282, 292, 293], "opengl": [2, 18, 89, 92, 93, 142, 294], "fontconfig": 2, "apt": 2, "get": [2, 18, 27, 30, 32, 52, 84, 85, 89, 92, 93, 94, 107, 142, 159, 176, 225, 259, 276, 279], "libfontconfig1": 2, "libgl1": 2, "mesa": 2, "glx": 2, "dri": 2, "Or": [2, 11, 185], "yum": 2, "libgl": 2, "driver": [2, 89, 92, 93, 94, 234, 243], "unsupport": 2, "check": [2, 4, 11, 18, 45, 64, 89, 91, 92, 93, 100, 107, 124, 136, 155, 159, 185, 188, 193, 234, 243, 278, 295], "first": [2, 4, 18, 27, 30, 38, 43, 59, 64, 89, 92, 93, 135, 142, 145, 149, 159, 169, 172, 177, 193, 225, 226, 227, 228, 229, 276, 296, 297], "clone": [2, 259], "repo": 2, "git": 2, "recurs": [2, 131], "http": [2, 118, 180, 293], "com": 2, "kyamagu": 2, "cd": 2, "The": [2, 4, 11, 18, 19, 27, 28, 29, 30, 31, 32, 34, 43, 51, 53, 54, 56, 59, 60, 64, 66, 71, 76, 89, 91, 92, 93, 94, 100, 107, 114, 118, 124, 126, 131, 135, 136, 140, 142, 145, 148, 149, 151, 153, 155, 159, 166, 169, 172, 175, 177, 180, 181, 182, 185, 186, 188, 193, 196, 214, 217, 225, 226, 227, 228, 229, 234, 235, 241, 243, 244, 251, 257, 259, 271, 272, 276, 279, 293, 295, 296], "repositori": 2, "bundl": 2, "its": [2, 4, 11, 18, 29, 54, 64, 73, 89, 92, 93, 124, 126, 135, 138, 142, 149, 151, 159, 166, 181, 185, 188, 193, 195, 214, 217, 225, 234, 241, 243, 249, 254, 256, 259, 279, 292, 297], "tool": 2, "depot_tool": 2, "submodul": 2, "actual": [2, 11, 32, 51, 59, 66, 89, 92, 93, 94, 126, 131, 138, 145, 225, 226, 227, 228, 229, 234, 243, 260, 272, 276, 293, 295], "ci": 2, "procedur": 2, "implement": [2, 11, 18, 27, 31, 38, 43, 54, 56, 59, 60, 62, 89, 92, 93, 126, 131, 135, 136, 140, 145, 148, 155, 159, 169, 172, 185, 188, 217, 225, 226, 227, 228, 229, 271, 296], "script": 2, "build_": 2, "o": [2, 126, 142, 217, 294, 295], "sh": 2, "compil": [2, 11, 159, 185, 186, 188, 193], "time": [2, 11, 18, 27, 32, 52, 54, 56, 64, 89, 92, 93, 136, 142, 159, 162, 163, 181, 185, 186, 198, 234, 243], "requir": [2, 4, 11, 18, 27, 30, 31, 38, 41, 45, 64, 89, 92, 93, 94, 126, 131, 136, 142, 155, 185, 186, 234, 243, 251, 297], "run": [2, 196, 251, 252, 254, 259, 295], "type": [2, 4, 11, 18, 19, 27, 32, 37, 38, 43, 45, 51, 54, 62, 64, 89, 92, 93, 107, 126, 131, 136, 140, 142, 159, 162, 163, 172, 180, 185, 188, 207, 208, 209, 210, 212, 217, 234, 243, 250, 259, 276, 277, 278, 296], "inform": [2, 18, 29, 89, 92, 93, 153, 159], "rtti": 2, "enabl": [2, 89, 92, 93], "frtti": 2, "flag": [2, 11, 64, 89, 92, 93, 118, 126, 159, 169, 175, 180, 214, 234, 241, 243], "clang": 2, "gcc": 2, "gr": 2, "cl": [2, 142], "ex": 2, "visual": [2, 142], "md": 2, "set": [2, 4, 11, 18, 24, 27, 30, 41, 45, 50, 52, 54, 59, 64, 66, 71, 72, 73, 76, 84, 85, 89, 92, 93, 95, 114, 123, 124, 125, 126, 136, 138, 142, 145, 150, 153, 155, 158, 159, 162, 163, 180, 185, 186, 187, 188, 191, 193, 196, 197, 198, 200, 221, 225, 226, 227, 228, 229, 230, 234, 243, 250, 254, 259, 267, 272, 276, 292, 296], "gn": 2, "should": [2, 11, 17, 18, 27, 28, 29, 32, 33, 48, 51, 53, 54, 64, 89, 91, 92, 93, 94, 100, 107, 116, 126, 131, 135, 153, 154, 159, 180, 185, 217, 225, 231, 234, 243, 272, 276, 293, 295], "includ": [2, 4, 11, 18, 27, 124, 126, 135, 136, 142, 153, 155, 159, 181, 185, 193, 234, 243, 257, 260, 293], "skia_enable_tool": 2, "true": [2, 4, 7, 9, 11, 18, 27, 35, 38, 43, 45, 51, 53, 54, 56, 59, 60, 62, 64, 71, 73, 81, 84, 85, 89, 91, 92, 93, 98, 100, 107, 123, 124, 125, 126, 131, 135, 136, 140, 142, 145, 148, 149, 153, 155, 159, 162, 169, 172, 175, 180, 181, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 200, 203, 215, 217, 221, 225, 226, 227, 228, 229, 231, 234, 243, 251, 259, 261, 271, 272, 276, 282, 292, 293, 295, 296, 297], "h": [2, 4, 124, 142, 193], "header": 2, "detail": [2, 89, 92, 93, 126, 234, 243, 294], "offici": 2, "prerequisit": 2, "3": [2, 5, 11, 13, 14, 16, 27, 28, 31, 36, 37, 38, 39, 41, 43, 44, 46, 47, 54, 55, 57, 58, 62, 63, 70, 77, 80, 82, 96, 112, 126, 129, 131, 134, 136, 140, 141, 142, 143, 155, 159, 165, 172, 173, 174, 175, 176, 177, 179, 183, 185, 188, 189, 190, 196, 199, 203, 205, 217, 218, 231, 233, 255, 256, 272, 273, 275, 276, 277, 280, 281, 287, 288, 290, 293, 296, 297], "onli": [2, 4, 9, 11, 18, 25, 27, 30, 38, 43, 47, 50, 51, 53, 54, 62, 64, 73, 81, 89, 91, 92, 93, 98, 100, 107, 126, 130, 131, 135, 140, 142, 155, 159, 172, 181, 185, 188, 194, 195, 203, 215, 217, 234, 243, 251, 256, 259, 261, 274, 275, 282, 292, 293, 296], "glibc": 2, "2": [2, 4, 5, 11, 13, 14, 16, 18, 19, 20, 21, 22, 23, 27, 28, 31, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 50, 54, 55, 57, 58, 62, 63, 64, 65, 70, 71, 72, 77, 78, 80, 82, 88, 95, 96, 112, 120, 121, 126, 129, 131, 134, 136, 140, 141, 142, 143, 144, 147, 155, 156, 157, 158, 159, 164, 165, 166, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 185, 186, 188, 189, 190, 196, 199, 203, 204, 205, 214, 217, 218, 231, 233, 234, 236, 241, 242, 243, 245, 255, 256, 257, 259, 260, 267, 268, 272, 273, 275, 276, 277, 281, 287, 288, 290, 293, 296], "17": [2, 13, 88, 96], "10": [2, 7, 13, 14, 46, 50, 57, 88, 96, 159, 180, 203, 205, 272, 273, 277, 295, 296], "93": 2, "depend": [2, 11, 13, 18, 89, 92, 93, 126, 159, 162, 163, 169, 234, 243, 251, 272], "y": [2, 11, 18, 19, 27, 32, 54, 64, 71, 123, 124, 126, 135, 136, 139, 142, 143, 159, 169, 180, 181, 185, 186, 187, 188, 193, 196, 197, 198, 200, 234, 243, 251, 254, 272, 273, 275, 277, 280, 283, 296], "dev": [2, 52, 118], "devel": 2, "up": [2, 11, 27, 50, 94, 114, 159, 169, 185, 188, 193, 197, 198, 234, 243, 296], "At": 2, "thi": [2, 4, 7, 9, 11, 12, 18, 24, 27, 28, 29, 30, 31, 32, 33, 34, 38, 43, 45, 50, 51, 52, 53, 54, 56, 59, 62, 64, 73, 76, 81, 84, 85, 89, 91, 92, 93, 94, 98, 100, 107, 114, 118, 122, 124, 126, 131, 135, 136, 138, 140, 142, 145, 146, 151, 153, 155, 159, 169, 172, 175, 180, 181, 182, 183, 184, 185, 186, 188, 193, 194, 195, 196, 203, 215, 217, 225, 226, 227, 228, 229, 230, 231, 234, 243, 251, 254, 257, 259, 260, 261, 272, 276, 279, 282, 292, 293, 295, 296], "point": [2, 4, 11, 18, 21, 35, 45, 50, 59, 61, 64, 89, 92, 93, 118, 123, 135, 142, 145, 151, 155, 159, 162, 163, 166, 169, 175, 179, 185, 187, 188, 191, 193, 196, 197, 198, 225, 226, 227, 228, 229, 251, 254, 259, 267, 276, 277, 295, 297], "execut": [2, 11, 18, 89, 92, 93, 293], "note": [2, 9, 27, 29, 38, 43, 50, 52, 53, 54, 62, 64, 73, 81, 89, 91, 92, 93, 94, 98, 100, 107, 126, 131, 135, 138, 140, 142, 172, 181, 186, 194, 195, 203, 215, 217, 225, 231, 234, 243, 257, 259, 261, 275, 282, 292, 295], "rel": [2, 59, 64, 118, 142, 145, 159, 196, 225, 226, 227, 228, 229, 234, 243, 254, 259, 274, 295, 296], "new": [2, 9, 18, 24, 35, 38, 41, 43, 45, 51, 53, 54, 62, 73, 81, 89, 91, 92, 93, 94, 95, 98, 100, 107, 126, 131, 136, 140, 146, 155, 159, 169, 172, 181, 182, 186, 187, 194, 195, 198, 203, 214, 215, 217, 231, 234, 243, 251, 254, 259, 261, 282, 292, 297], "pwd": 2, "sync": [2, 89, 92, 93, 234, 243], "dep": 2, "bin": 2, "gen": 2, "out": [2, 4, 7, 11, 18, 27, 35, 53, 89, 92, 93, 142, 155, 159, 185, 195, 214, 296], "releas": [2, 11, 89, 92, 93, 114, 126, 136, 159, 185, 195], "is_official_build": 2, "skia_use_system_libjpeg_turbo": 2, "fals": [2, 4, 11, 18, 27, 45, 51, 59, 64, 71, 83, 84, 85, 89, 92, 93, 124, 126, 135, 142, 145, 155, 159, 169, 172, 175, 181, 185, 186, 187, 188, 193, 196, 198, 225, 226, 227, 228, 229, 231, 234, 243, 259, 272, 276, 293], "skia_use_system_libwebp": 2, "skia_use_system_libpng": 2, "skia_use_system_icu": 2, "skia_use_system_harfbuzz": 2, "extra_cflags_cc": 2, "extra_ldflag": 2, "lrt": 2, "ninja": 2, "Then": 2, "desir": [2, 27, 66, 89, 92, 93, 124, 185, 234, 243], "version": [2, 18, 27, 40, 56, 126, 155, 234, 243], "skia_path": 2, "skia_out_path": 2, "m": [2, 135, 142, 291], "wheel": 2, "setup": 2, "py": [2, 11, 18, 142, 159, 162, 185], "bdist_wheel": 2, "xcode": 2, "command": [2, 18, 89, 92, 93, 94, 126, 151, 181, 182, 214, 234, 243, 293, 295], "line": [2, 4, 18, 21, 27, 64, 71, 142, 159, 160, 169, 186, 196, 200, 251, 295, 297], "python3": 2, "here": [2, 73, 82, 180, 234, 243, 292, 293], "can": [2, 4, 11, 18, 27, 29, 30, 32, 36, 38, 41, 43, 45, 47, 48, 51, 52, 53, 54, 59, 73, 76, 89, 92, 93, 94, 95, 107, 110, 116, 122, 126, 131, 135, 136, 142, 145, 151, 153, 155, 172, 177, 180, 181, 184, 185, 186, 188, 225, 226, 227, 228, 229, 234, 241, 243, 259, 260, 267, 276, 279, 292, 293, 295, 296, 297], "gener": [2, 11, 18, 27, 31, 54, 94, 118, 126, 142, 155, 159, 162, 181, 182, 185, 188, 193, 214, 296], "step": [2, 11], "abov": [2, 18, 71, 250, 276, 295], "env": 2, "skia_use_system_expat": 2, "skia_use_system_zlib": 2, "ehsc": 2, "target_cpu": 2, "pytest": 2, "glfw": [2, 293], "altern": [2, 95, 256, 293, 295], "tox": 2, "under": [2, 135], "variou": [2, 31, 48, 155, 295, 296], "onc": [2, 11, 18, 32, 89, 92, 93, 155, 217, 259, 297], "sphinx": 2, "rtd": 2, "theme": 2, "build_sphinx": 2, "alphatypeisopaqu": 4, "alphatyp": [4, 11, 18, 41, 89, 92, 93, 126, 136, 185, 234, 243, 295], "bool": [4, 7, 9, 11, 18, 27, 35, 38, 41, 43, 45, 51, 53, 54, 56, 59, 60, 62, 64, 71, 73, 76, 81, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 98, 100, 107, 120, 123, 124, 125, 126, 131, 135, 136, 140, 142, 145, 148, 155, 159, 162, 169, 172, 175, 181, 185, 186, 187, 188, 191, 193, 194, 195, 196, 197, 198, 200, 203, 215, 216, 217, 221, 225, 226, 227, 228, 229, 230, 231, 234, 240, 241, 243, 251, 252, 259, 261, 267, 271, 272, 276, 278, 279, 282, 286, 292], "equal": [4, 11, 18, 27, 30, 45, 51, 64, 76, 123, 124, 125, 126, 136, 142, 159, 169, 181, 185, 186, 188, 190, 193, 196, 221, 230, 231, 259], "kopaque_alphatyp": [4, 5, 11, 126, 136, 185], "hint": [4, 11, 18, 24, 64, 126, 136, 169, 181, 234, 243, 259], "colortyp": [4, 11, 18, 41, 83, 89, 91, 92, 93, 100, 103, 104, 107, 126, 136, 185, 234, 240, 243, 276], "opaqu": [4, 5, 11, 18, 29, 35, 64, 65, 126, 136, 153, 155, 185, 217], "alpha": [4, 5, 11, 14, 18, 27, 29, 35, 41, 43, 46, 47, 126, 135, 136, 138, 150, 155, 185, 217, 234, 243, 250, 272, 273, 275, 277, 296], "valu": [4, 5, 6, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 44, 46, 47, 52, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 68, 70, 71, 72, 76, 78, 79, 80, 82, 88, 89, 92, 93, 95, 96, 101, 105, 106, 108, 109, 110, 111, 112, 118, 119, 121, 123, 124, 126, 127, 128, 129, 130, 133, 134, 135, 136, 141, 142, 143, 144, 147, 148, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 183, 185, 186, 187, 188, 189, 190, 193, 196, 199, 204, 205, 217, 218, 230, 231, 232, 233, 234, 236, 237, 238, 239, 242, 243, 245, 246, 247, 248, 250, 251, 254, 255, 256, 257, 258, 259, 260, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 287, 288, 289, 290, 296, 297], "1": [4, 5, 6, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 41, 43, 45, 46, 47, 51, 53, 54, 57, 58, 61, 62, 64, 65, 70, 71, 72, 73, 77, 78, 80, 81, 82, 88, 89, 91, 92, 93, 95, 96, 98, 100, 101, 105, 106, 107, 108, 109, 110, 111, 112, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 133, 135, 136, 140, 142, 143, 144, 147, 150, 151, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 188, 189, 190, 191, 194, 195, 196, 199, 203, 205, 214, 215, 217, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 255, 256, 257, 258, 259, 260, 261, 267, 268, 272, 273, 275, 276, 277, 280, 281, 282, 287, 288, 289, 290, 292, 296], "0": [4, 5, 6, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 70, 73, 77, 78, 79, 82, 88, 89, 92, 93, 96, 97, 99, 101, 105, 106, 107, 108, 109, 110, 111, 112, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 138, 140, 141, 142, 143, 144, 145, 147, 148, 150, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 193, 196, 199, 203, 204, 205, 214, 217, 218, 221, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 250, 255, 256, 257, 258, 259, 260, 267, 268, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 287, 288, 289, 290, 292, 293, 295, 296, 297], "equival": [4, 11, 18, 56, 89, 92, 93, 123, 142, 155, 156, 157, 159, 185, 186, 231, 234, 243, 251], "If": [4, 9, 11, 18, 19, 24, 27, 30, 31, 32, 33, 38, 41, 43, 45, 51, 52, 53, 54, 59, 62, 64, 71, 73, 81, 84, 85, 89, 91, 92, 93, 94, 98, 100, 107, 116, 118, 124, 126, 131, 135, 136, 140, 142, 145, 146, 153, 155, 159, 162, 163, 169, 172, 175, 180, 181, 182, 183, 185, 186, 187, 188, 193, 194, 195, 196, 203, 215, 217, 225, 226, 227, 228, 229, 231, 234, 243, 249, 251, 254, 257, 259, 261, 272, 275, 276, 282, 292, 295, 297], "result": [4, 9, 11, 13, 18, 27, 38, 43, 50, 52, 54, 64, 73, 89, 92, 93, 122, 124, 126, 131, 135, 136, 142, 149, 151, 155, 159, 162, 163, 172, 175, 180, 181, 182, 185, 188, 193, 195, 196, 197, 198, 231, 234, 235, 243, 244, 249, 251, 259, 292, 295], "draw": [4, 11, 18, 19, 20, 21, 28, 38, 41, 53, 54, 64, 65, 82, 89, 92, 93, 126, 131, 135, 136, 140, 151, 153, 154, 155, 159, 169, 172, 174, 181, 182, 185, 196, 214, 234, 241, 243, 251, 254, 256, 293, 294, 296, 297], "ani": [4, 11, 18, 19, 27, 29, 30, 45, 59, 66, 71, 73, 89, 92, 93, 114, 126, 135, 136, 142, 145, 151, 159, 172, 181, 182, 185, 193, 217, 225, 226, 227, 228, 229, 231, 234, 243, 259, 292, 295, 296], "pixel": [4, 5, 11, 12, 13, 18, 27, 31, 41, 46, 50, 64, 65, 110, 126, 131, 135, 136, 150, 153, 155, 183, 184, 185, 196, 234, 243, 276, 279, 295], "less": [4, 11, 18, 27, 64, 124, 126, 136, 142, 155, 159, 169, 181, 185, 188, 193, 196], "than": [4, 11, 18, 24, 27, 64, 124, 126, 131, 136, 142, 155, 159, 169, 174, 180, 181, 185, 186, 188, 193, 196, 217, 225, 234, 243, 251, 259, 275], "undefin": [4, 11, 18, 27, 124, 126, 142, 162, 163, 182, 185], "aswind": 4, "fill": [4, 11, 18, 19, 27, 52, 89, 92, 93, 126, 131, 142, 143, 155, 158, 159, 168, 172, 180, 190, 231, 276, 295, 296, 297], "wind": [4, 159, 174], "area": [4, 11, 18, 28, 124, 125, 126, 136, 159, 180, 185, 186, 188, 193, 196, 297], "success": [4, 11, 27, 31, 56, 59, 60, 89, 92, 93, 94, 142, 145, 148, 181, 185, 225, 226, 227, 228, 229, 234, 243, 251, 271], "doe": [4, 11, 18, 27, 29, 30, 45, 52, 59, 64, 82, 89, 92, 93, 124, 126, 135, 136, 138, 142, 145, 155, 159, 163, 169, 181, 182, 185, 188, 193, 196, 197, 198, 225, 226, 227, 228, 229, 231, 234, 243, 251, 254, 259, 272, 276, 279, 293, 295, 297], "detect": [4, 135, 159], "contain": [4, 11, 18, 24, 27, 29, 30, 31, 33, 41, 50, 64, 67, 114, 124, 126, 135, 136, 142, 155, 159, 169, 175, 180, 181, 182, 184, 186, 188, 193, 196, 197, 230, 234, 243, 251, 257, 259, 273, 297], "contour": [4, 18, 64, 159, 160, 162, 169, 171, 175, 179, 257, 297], "self": [4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292], "cross": [4, 174, 186, 187], "other": [4, 11, 13, 18, 27, 45, 51, 89, 92, 93, 94, 124, 126, 139, 142, 159, 181, 182, 185, 186, 193, 196, 230, 231, 234, 243, 251, 259, 275, 293, 295], "case": [4, 9, 27, 30, 38, 41, 43, 45, 51, 52, 53, 54, 62, 71, 73, 81, 89, 91, 92, 93, 94, 98, 100, 107, 126, 131, 136, 140, 142, 159, 172, 175, 181, 193, 194, 195, 203, 215, 217, 225, 234, 243, 259, 261, 282, 292, 295, 296], "mai": [4, 9, 11, 18, 24, 27, 34, 38, 41, 43, 53, 54, 56, 59, 62, 64, 66, 72, 73, 81, 82, 89, 91, 92, 93, 98, 100, 107, 110, 118, 124, 126, 131, 136, 140, 142, 145, 151, 153, 155, 159, 162, 169, 172, 181, 182, 185, 186, 188, 193, 194, 195, 196, 200, 203, 214, 215, 217, 225, 226, 227, 228, 229, 231, 234, 243, 251, 254, 259, 261, 267, 281, 282, 292, 295, 296, 297], "even": [4, 11, 18, 19, 30, 31, 41, 50, 89, 92, 93, 94, 126, 136, 188, 196, 257, 259, 293, 297], "though": [4, 11, 18, 136, 142, 196, 259, 293, 295], "oper": [4, 13, 18, 40, 47, 126, 142, 149, 177, 181, 182, 186, 196, 234, 243, 249], "wa": [4, 11, 18, 31, 54, 89, 92, 93, 126, 142, 153, 159, 162, 175, 181, 196, 198, 200, 231, 234, 243, 251, 259, 295], "abl": [4, 18, 27, 64, 94, 234, 243], "produc": [4, 45, 53, 131, 135, 142, 180, 193, 217, 231], "otherwis": [4, 11, 18, 27, 45, 59, 64, 84, 85, 124, 126, 131, 142, 145, 151, 155, 159, 169, 175, 181, 185, 186, 187, 188, 193, 196, 198, 225, 226, 227, 228, 229, 231, 234, 243, 251], "throw": [4, 230], "runtim": 4, "error": [4, 29, 31, 45, 89, 92, 93, 94, 126, 151, 155, 186, 195, 225, 259], "input": [4, 11, 27, 31, 40, 56, 60, 118, 124, 131, 135, 138, 142, 148, 155, 172, 185, 186, 188, 193, 234, 243, 271, 272, 295], "paramet": [4, 7, 11, 18, 27, 31, 35, 41, 45, 50, 51, 52, 56, 59, 60, 64, 66, 71, 73, 75, 89, 92, 93, 118, 123, 124, 126, 135, 136, 140, 142, 145, 148, 149, 151, 155, 159, 162, 163, 166, 169, 180, 181, 182, 185, 186, 188, 193, 196, 197, 198, 200, 214, 225, 226, 227, 228, 229, 231, 234, 243, 251, 254, 259, 267, 271, 276, 292, 295], "typic": [4, 54, 71, 89, 92, 93, 126, 131, 185, 234, 243], "odd": [4, 18, 50, 174], "blendmode_ascoeff": 4, "mode": [4, 13, 14, 18, 27, 38, 40, 43, 47, 118, 126, 131, 135, 155, 159, 181, 220, 234, 243, 257, 267, 291, 293, 296], "blendmod": [4, 18, 38, 40, 43, 47, 135, 155, 220, 234, 243, 295, 296], "src": [4, 11, 14, 18, 38, 40, 43, 51, 89, 92, 93, 131, 135, 142, 146, 150, 155, 159, 172, 193, 196, 220, 230, 231, 234, 243, 296], "blendmodecoeff": 4, "dst": [4, 11, 14, 18, 27, 30, 38, 40, 43, 45, 56, 126, 135, 142, 150, 155, 159, 172, 175, 185, 186, 188, 220, 231, 234, 243, 296], "coeffici": [4, 14, 45, 135], "base": [4, 11, 14, 18, 27, 28, 29, 53, 54, 62, 89, 91, 92, 93, 100, 107, 114, 126, 131, 135, 136, 140, 146, 147, 159, 166, 172, 180, 185, 195, 234, 243, 251, 259], "blend": [4, 13, 14, 18, 29, 30, 40, 135, 220, 295, 296], "klastcoeffmod": [4, 13, 14], "": [4, 9, 27, 28, 30, 32, 35, 38, 43, 53, 54, 59, 62, 64, 73, 81, 89, 91, 92, 93, 94, 95, 98, 100, 107, 126, 131, 135, 140, 142, 145, 146, 151, 153, 169, 172, 175, 179, 181, 187, 194, 195, 203, 215, 217, 225, 226, 227, 228, 229, 234, 243, 256, 259, 261, 276, 282, 292, 293, 296], "blendmode_nam": [4, 296], "str": [4, 18, 27, 38, 43, 51, 54, 56, 59, 60, 62, 64, 73, 89, 92, 93, 131, 140, 145, 148, 152, 172, 188, 201, 202, 206, 213, 215, 217, 225, 226, 227, 228, 229, 230, 251, 254, 259, 271, 282, 284, 292], "null": [4, 24, 27, 30, 31, 45, 51, 59, 73, 89, 92, 93, 118, 131, 135, 145, 151, 180, 181, 182, 225, 226, 227, 228, 229, 234, 243, 249, 257, 259, 292], "termin": [4, 293], "string": [4, 18, 153, 203, 251, 282, 291, 292], "color": [4, 11, 13, 14, 18, 19, 27, 28, 29, 35, 36, 37, 38, 41, 43, 45, 89, 92, 93, 107, 118, 122, 126, 135, 136, 138, 150, 155, 185, 217, 220, 234, 243, 249, 256, 267, 276, 278, 279, 291, 293, 295, 297], "r": [4, 11, 35, 124, 135, 138, 142, 155, 159, 169, 188, 193, 196, 231, 249, 273, 280, 296], "int": [4, 5, 6, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 92, 93, 95, 96, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 185, 186, 188, 189, 190, 193, 196, 199, 200, 201, 202, 203, 204, 205, 206, 213, 214, 216, 218, 220, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 287, 288, 289, 290, 291, 292], "b": [4, 11, 35, 49, 54, 62, 124, 135, 138, 142, 155, 159, 186, 187, 193, 217, 249, 273, 275, 280], "255": [4, 11, 18, 43, 155, 180, 185, 250, 295, 296], "8": [4, 11, 13, 14, 18, 22, 27, 31, 37, 46, 57, 58, 64, 71, 72, 77, 80, 88, 95, 96, 126, 142, 144, 155, 159, 164, 178, 185, 203, 205, 251, 272, 273, 277, 293, 296, 297], "bit": [4, 11, 18, 41, 45, 46, 89, 92, 93, 123, 124, 126, 136, 142, 144, 155, 159, 185, 186, 187, 188, 193, 259, 277], "compon": [4, 5, 11, 13, 18, 35, 41, 43, 126, 135, 136, 142, 155, 185, 186, 249, 295, 297], "In": [4, 18, 27, 28, 30, 89, 92, 93, 94, 126, 131, 142, 159, 180, 181, 196, 234, 243, 293, 296], "repres": [4, 18, 27, 30, 37, 38, 43, 45, 64, 66, 126, 131, 136, 142, 155, 159, 181, 186, 188, 193, 259, 276, 278, 296], "32": [4, 18, 46, 88, 95, 123, 124, 136, 155, 159, 185, 186, 187, 188, 193, 295, 296], "argb": [4, 18, 35, 155], "word": [4, 46, 185], "where": [4, 14, 18, 27, 89, 92, 93, 126, 135, 142, 155, 159, 169, 278, 295, 296], "each": [4, 11, 13, 18, 21, 27, 43, 46, 48, 53, 64, 118, 122, 126, 135, 136, 142, 154, 159, 162, 166, 172, 180, 181, 183, 185, 186, 188, 234, 243, 249, 250, 251, 254, 259, 272, 273, 276, 278, 293, 295, 296, 297], "ha": [4, 11, 18, 27, 29, 34, 51, 53, 54, 64, 71, 89, 92, 93, 94, 101, 107, 124, 126, 136, 142, 155, 159, 162, 163, 181, 185, 187, 188, 193, 196, 217, 234, 243, 259, 276, 293, 295], "specifi": [4, 11, 14, 18, 27, 28, 30, 48, 50, 51, 53, 54, 59, 64, 66, 71, 73, 89, 92, 93, 118, 126, 136, 142, 145, 159, 166, 168, 172, 174, 175, 181, 185, 188, 197, 217, 225, 226, 227, 228, 229, 231, 234, 243, 251, 254, 259, 267, 272, 273, 275, 276, 292, 293, 295, 296], "liter": 4, "construct": [4, 11, 18, 38, 43, 45, 64, 123, 124, 142, 155, 159, 180, 181, 186, 188, 193, 196, 251, 254], "float": [4, 11, 18, 27, 35, 38, 40, 43, 45, 46, 48, 50, 52, 53, 54, 56, 59, 60, 64, 68, 71, 118, 120, 126, 135, 137, 140, 142, 145, 148, 152, 155, 159, 162, 163, 166, 169, 175, 180, 182, 185, 186, 187, 188, 191, 193, 201, 202, 206, 213, 220, 221, 225, 226, 227, 228, 229, 230, 231, 234, 243, 250, 251, 254, 257, 262, 263, 264, 271, 277, 283, 286, 291, 295], "represent": [4, 27, 142, 153, 154, 159, 188, 193], "via": [4, 9, 27, 38, 43, 53, 54, 62, 73, 81, 89, 91, 92, 93, 94, 98, 100, 107, 126, 131, 140, 172, 181, 194, 195, 203, 215, 217, 234, 243, 259, 261, 282, 292, 293, 295], "color4f": [4, 11, 18, 38, 40, 43, 89, 92, 93, 155, 185, 220], "0xffff0000": 4, "rgb": [4, 11, 18, 43, 45, 122, 126, 135, 155, 273], "rgba": [4, 35, 40, 135, 155, 273, 295], "colorsetrgb": 4, "colorsetargb": [4, 296], "assert": [4, 11, 35, 51, 73, 124, 136, 142, 155, 185, 188, 193, 293, 296], "sk_debug": [4, 11, 35, 124, 142, 185, 193], "defin": [4, 11, 18, 35, 124, 126, 135, 142, 159, 168, 185, 188, 193, 214, 234, 243, 251, 254, 296], "exce": [4, 11, 18, 89, 92, 93, 126, 136, 185, 188, 234, 243], "sinc": [4, 11, 18, 27, 30, 32, 124, 126, 142, 193, 293, 297], "unpremultipli": [4, 11, 18, 35, 155, 185, 249], "smaller": [4, 18, 124, 131, 136, 159, 161, 169, 170, 193, 251], "largest": [4, 156, 157, 190], "amount": [4, 11, 18, 155, 159], "red": [4, 11, 35, 41, 46, 136, 138, 155], "full": [4, 11, 18, 27, 30, 32, 126, 135, 155, 234, 243, 272, 280], "green": [4, 11, 35, 41, 46, 136, 138, 155], "blue": [4, 11, 35, 41, 46, 136, 138, 155], "fulli": [4, 11, 13, 18, 126, 155, 276], "transpar": [4, 11, 13, 18, 20, 24, 28, 41, 64, 65, 126, 136, 155, 185, 217, 234, 243, 256], "colorgeta": [4, 155], "byte": [4, 11, 18, 27, 41, 46, 47, 51, 56, 59, 60, 89, 92, 93, 126, 136, 145, 148, 159, 181, 185, 188, 196, 225, 226, 227, 228, 229, 234, 243, 251, 259, 271, 272, 276], "colorgetb": [4, 155], "zero": [4, 11, 12, 13, 18, 27, 30, 34, 41, 64, 71, 72, 123, 124, 126, 136, 138, 142, 151, 155, 159, 162, 163, 169, 174, 175, 181, 185, 186, 188, 190, 193, 195, 196, 234, 243, 251, 259, 276, 293, 295, 297], "colorgetg": [4, 155], "colorgetr": [4, 155], "colorseta": 4, "ignor": [4, 11, 18, 30, 31, 41, 43, 51, 53, 64, 66, 71, 89, 92, 93, 126, 136, 147, 159, 162, 172, 185, 234, 243, 251, 276], "replac": [4, 11, 13, 18, 131, 155, 159, 196, 234, 243], "pack": [4, 126, 155, 277], "eight": [4, 188], "per": [4, 11, 18, 27, 41, 126, 135, 136, 153, 159, 185, 234, 243, 259, 272, 276], "colortohsv": 4, "list": [4, 18, 27, 38, 40, 43, 50, 64, 69, 73, 89, 92, 93, 118, 135, 142, 150, 152, 159, 162, 163, 169, 188, 193, 196, 201, 202, 206, 213, 217, 249, 250, 251, 254, 259, 265, 266, 267, 272, 276, 279, 282, 291, 292, 293, 296, 297], "hsv": 4, "hue": [4, 13], "assign": [4, 186, 196, 296], "360": [4, 18, 118, 151, 159, 169], "satur": [4, 13], "one": [4, 11, 18, 20, 28, 29, 30, 32, 33, 36, 41, 43, 45, 54, 64, 89, 91, 92, 93, 100, 107, 114, 126, 131, 135, 136, 142, 149, 155, 159, 169, 175, 181, 182, 185, 186, 188, 196, 234, 243, 251, 257, 259, 293, 295, 297], "three": [4, 159, 186, 187, 188, 296, 297], "element": [4, 18, 35, 135, 142, 151, 155, 159, 162, 163, 196, 197, 198, 214], "arrai": [4, 11, 18, 19, 21, 35, 50, 51, 64, 94, 118, 126, 135, 136, 142, 159, 162, 163, 185, 186, 188, 193, 196, 197, 198, 234, 243, 251, 254, 259, 267, 276, 279, 293, 295], "hold": [4, 11, 18, 19, 27, 35, 51, 53, 89, 92, 93, 123, 124, 126, 136, 142, 185, 186, 187, 193, 295, 296], "colortypebytesperpixel": 4, "ct": [4, 41, 136, 296], "number": [4, 11, 18, 19, 27, 28, 29, 41, 50, 51, 56, 59, 60, 64, 89, 92, 93, 126, 131, 136, 145, 148, 159, 174, 180, 181, 185, 188, 193, 196, 225, 226, 227, 228, 229, 234, 243, 251, 259, 271, 272, 276, 279, 295, 296], "store": [4, 11, 18, 27, 51, 53, 94, 110, 124, 126, 142, 159, 162, 163, 185, 188, 193, 196, 231, 234, 243, 272, 276, 279, 295], "unus": [4, 11, 185], "pad": [4, 136], "kunknown_colortyp": [4, 11, 18, 41, 46, 126, 136, 185, 234, 243], "invalid": [4, 11, 18, 31, 54, 64, 84, 85, 89, 92, 93, 95, 118, 124, 126, 142, 182, 188, 193, 234, 243, 272, 276, 279], "colortypeisalwaysopaqu": 4, "alwai": [4, 18, 19, 27, 35, 51, 54, 64, 89, 92, 93, 126, 131, 155, 159, 169, 185, 196, 225, 234, 243, 256, 259, 297], "decod": [4, 27, 29, 30, 31, 32, 33, 126, 251], "reserv": [4, 11, 71, 169], "encod": [4, 18, 27, 41, 57, 58, 64, 89, 92, 93, 126, 135, 136, 138, 153, 155, 185, 196, 234, 243, 251, 254, 259, 295], "colortypevalidatealphatyp": 4, "canon": 4, "none": [4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 220, 221, 223, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296], "valid": [4, 5, 11, 13, 18, 27, 31, 41, 54, 64, 66, 71, 72, 84, 85, 89, 91, 92, 93, 98, 100, 107, 122, 124, 126, 136, 155, 159, 181, 185, 188, 193, 214, 234, 243, 251, 259, 275, 276, 279, 280], "more": [4, 11, 18, 27, 31, 56, 59, 89, 92, 93, 126, 131, 135, 142, 145, 149, 153, 159, 169, 181, 185, 188, 196, 225, 226, 227, 228, 229, 234, 243, 294, 296, 297], "nullptr": [4, 11, 18, 24, 41, 45, 59, 64, 73, 122, 126, 136, 142, 145, 146, 155, 159, 181, 185, 198, 200, 217, 225, 226, 227, 228, 229, 234, 243, 251, 254, 259, 276, 292], "kunknown_alphatyp": [4, 5, 11, 41, 126, 136, 185], "output": [4, 11, 27, 32, 33, 38, 43, 53, 64, 126, 135, 142, 153, 159, 172, 188, 193, 214, 234, 243, 293, 295], "storag": [4, 11, 18, 64, 71, 126, 136, 142, 159, 162, 163, 169, 181, 185, 234, 243, 251, 279], "associ": [4, 11, 18, 64, 89, 92, 93, 107, 126, 136, 151, 153, 154, 159, 162, 163, 175, 185, 217, 251, 259], "computeisopaqu": [4, 185], "bm": [4, 142], "determin": [4, 11, 18, 27, 32, 126, 131, 135, 142, 159, 185, 234, 243, 251, 254, 272, 276, 297], "how": [4, 18, 27, 28, 29, 33, 41, 59, 64, 94, 126, 135, 136, 138, 142, 145, 155, 166, 183, 185, 225, 226, 227, 228, 229, 259, 260, 272, 273, 274, 277, 293, 295, 296], "whether": [4, 17, 18, 27, 29, 34, 51, 64, 65, 76, 89, 92, 93, 101, 107, 126, 142, 155, 159, 185, 234, 243, 278, 297], "describ": [4, 11, 14, 18, 27, 36, 41, 45, 47, 57, 64, 124, 126, 136, 142, 155, 159, 162, 163, 169, 180, 181, 185, 188, 193, 196, 234, 241, 243, 251, 274, 279, 280, 295, 297], "without": [4, 11, 18, 27, 51, 126, 142, 153, 155, 175, 180, 185, 234, 243, 276, 297], "have": [4, 7, 9, 11, 18, 27, 38, 43, 45, 48, 51, 53, 54, 59, 62, 72, 73, 81, 89, 91, 92, 93, 94, 98, 100, 107, 124, 126, 131, 135, 140, 142, 145, 159, 162, 172, 180, 181, 182, 185, 188, 193, 194, 195, 196, 203, 215, 217, 225, 226, 227, 228, 229, 231, 234, 243, 259, 261, 272, 275, 276, 279, 282, 292, 293, 295, 296], "greater": [4, 11, 18, 64, 124, 126, 136, 142, 155, 159, 169, 181, 185, 188, 193, 196, 234, 243], "krgb_565_colortyp": [4, 11, 46, 185], "kgray_8_colortyp": [4, 11, 46, 126, 185], "kalpha_8_colortyp": [4, 11, 18, 46, 126, 136, 185], "kbgra_8888_colortyp": [4, 11, 46, 136, 185], "krgba_8888_colortyp": [4, 11, 46, 136, 185, 293, 295], "kargb_4444_colortyp": [4, 11, 46, 185], "15": [4, 13, 18, 22, 37, 46, 96, 185], "krgba_f16_colortyp": [4, 11, 46, 185], "encodedorigintomatrix": 4, "origin": [4, 11, 18, 19, 27, 30, 52, 64, 71, 124, 126, 131, 135, 136, 142, 153, 155, 159, 172, 185, 186, 188, 193, 217, 234, 243, 256, 257, 272, 297], "encodedorigin": [4, 27, 272], "w": [4, 124, 142, 159, 169, 193, 217], "matrix": [4, 6, 7, 11, 18, 38, 40, 43, 45, 54, 64, 118, 126, 131, 135, 137, 139, 155, 159, 168, 172, 175, 181, 188, 191, 201, 202, 203, 206, 213, 217, 234, 243, 295], "given": [4, 11, 18, 27, 32, 35, 45, 69, 73, 89, 91, 92, 93, 100, 107, 114, 118, 126, 131, 135, 136, 142, 155, 159, 172, 175, 180, 225, 234, 241, 243, 249, 259, 265, 266, 272, 273, 292], "width": [4, 11, 18, 30, 53, 64, 71, 76, 77, 84, 85, 87, 89, 92, 93, 124, 125, 126, 136, 137, 155, 159, 172, 182, 185, 188, 190, 191, 193, 196, 221, 231, 234, 240, 243, 272, 276, 283, 293], "height": [4, 11, 18, 30, 53, 64, 71, 84, 85, 87, 89, 92, 93, 124, 125, 126, 135, 136, 159, 182, 185, 188, 190, 191, 193, 196, 221, 234, 240, 243, 272, 283, 293], "data": [4, 11, 18, 27, 31, 38, 43, 45, 54, 56, 57, 58, 59, 62, 73, 89, 92, 93, 126, 131, 140, 145, 159, 162, 163, 172, 181, 185, 188, 196, 197, 198, 201, 202, 203, 206, 213, 217, 225, 226, 227, 228, 229, 234, 235, 243, 244, 251, 259, 260, 267, 272, 276, 277, 278, 279, 292, 293, 296], "transform": [4, 18, 27, 45, 64, 120, 122, 126, 131, 135, 140, 142, 155, 159, 166, 172, 183, 188, 234, 243, 272, 295], "rectangl": [4, 11, 18, 20, 28, 124, 126, 135, 136, 142, 155, 159, 181, 182, 185, 188, 193, 196, 197, 198, 234, 243, 259, 295], "upper": [4, 71, 124, 159, 193, 251], "left": [4, 11, 18, 27, 30, 41, 71, 110, 124, 126, 136, 142, 143, 151, 159, 185, 186, 188, 189, 193, 196, 200, 234, 243, 249], "corner": [4, 18, 48, 142, 155, 159, 188, 193, 234, 243], "correctli": [4, 89, 92, 93, 234, 243], "orient": [4, 18, 27, 58, 234, 243, 272], "destin": [4, 11, 13, 18, 19, 27, 45, 59, 126, 131, 136, 142, 143, 145, 155, 160, 185, 225, 226, 227, 228, 229, 234, 243, 295, 296], "hsvtocolor": 4, "pass": [4, 11, 18, 27, 30, 34, 38, 52, 64, 73, 84, 85, 89, 92, 93, 94, 114, 116, 126, 135, 142, 153, 154, 155, 181, 182, 193, 196, 197, 234, 243, 251, 276, 279, 292], "through": [4, 27, 64, 131, 159, 162, 163, 169, 196], "unchang": [4, 11, 18, 59, 124, 126, 136, 142, 145, 155, 159, 169, 175, 185, 188, 193, 225, 226, 227, 228, 229, 231, 234, 243, 249], "angl": [4, 18, 135, 142, 159, 169, 186], "vari": [4, 126, 142], "rang": [4, 11, 18, 35, 41, 51, 122, 126, 136, 142, 155, 159, 180, 185, 234, 243, 280, 296], "pin": [4, 43, 175, 188, 234, 243, 257], "makenullcanva": 4, "op": [4, 18, 27, 47, 89, 92, 93, 126, 149, 177, 196], "two": [4, 11, 18, 47, 51, 54, 118, 123, 126, 131, 135, 142, 147, 159, 177, 186, 196, 231, 251, 254, 259, 295, 297], "pathop": [4, 149], "appli": [4, 6, 18, 24, 38, 43, 45, 47, 64, 122, 126, 131, 135, 140, 142, 149, 155, 159, 172, 186, 217, 231, 234, 243, 249, 250, 257, 296], "operand": [4, 149, 196], "non": [4, 18, 27, 29, 30, 45, 89, 92, 93, 107, 126, 142, 153, 159, 174, 180, 181, 185, 190, 234, 243, 251, 259, 276, 280], "overlap": [4, 18, 159, 188, 297], "curv": [4, 159, 169, 188, 295, 297], "order": [4, 18, 27, 32, 35, 89, 92, 93, 122, 131, 135, 142, 151, 159, 180, 193, 234, 243, 257, 259, 273], "reduc": [4, 89, 92, 93, 126, 155, 159, 185, 188, 196, 297], "possibl": [4, 11, 27, 32, 54, 73, 82, 89, 92, 93, 126, 142, 155, 159, 169, 185, 186, 225, 234, 243, 259, 281, 292, 293], "so": [4, 11, 18, 27, 29, 34, 50, 64, 73, 89, 92, 93, 94, 107, 124, 126, 131, 136, 138, 142, 149, 155, 159, 169, 175, 180, 182, 185, 186, 188, 193, 196, 214, 234, 243, 251, 256, 257, 259, 279, 292, 296, 297], "cubic": [4, 18, 159, 216], "turn": [4, 48, 131, 296], "quadrat": [4, 159], "mayb": [4, 11], "minuend": 4, "second": [4, 43, 89, 92, 93, 135, 149, 159, 169, 172, 296, 297], "subtrahend": 4, "product": [4, 13, 138, 149, 153, 186, 187], "pathfilltype_converttononinvers": 4, "ft": [4, 159], "pathfilltyp": [4, 159, 169], "pathfilltype_isevenodd": 4, "pathfilltype_isinvers": 4, "premultiplyargb": 4, "skpmcolor": 4, "premultipli": [4, 5, 13, 18, 249], "premultiplycolor": 4, "pmcolor": [4, 11, 234, 243], "closest": [4, 27, 35, 59, 73, 145, 225, 226, 227, 228, 229, 259, 292], "multipli": [4, 13, 43, 138, 142, 186], "arrang": [4, 11, 183, 234, 243], "match": [4, 11, 18, 27, 31, 54, 58, 73, 89, 92, 93, 114, 126, 131, 159, 185, 188, 196, 234, 243, 259, 292, 293], "format": [4, 11, 18, 27, 32, 33, 35, 37, 57, 64, 66, 83, 84, 85, 89, 91, 92, 93, 97, 99, 100, 107, 126, 153, 159, 234, 243, 293], "kn32_colortyp": [4, 18, 46, 126, 136, 185, 234, 243], "rgbtohsv": 4, "simplifi": 4, "tightbound": 4, "rect": [4, 9, 11, 18, 24, 53, 54, 64, 124, 126, 131, 132, 135, 142, 155, 159, 169, 172, 181, 182, 185, 188, 196, 197, 198, 214, 234, 243, 251, 254, 259, 267, 295, 296, 297], "tight": [4, 159], "bound": [4, 9, 11, 18, 19, 24, 25, 27, 30, 54, 64, 71, 89, 92, 93, 124, 126, 131, 136, 142, 155, 159, 169, 181, 182, 185, 188, 193, 196, 197, 200, 214, 231, 234, 243, 251, 254, 256, 259, 267, 296], "measur": [4, 64, 82, 159, 169, 175, 186, 187, 259, 296], "member": [5, 6, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 25, 26, 28, 31, 32, 33, 34, 36, 37, 39, 44, 46, 47, 55, 57, 58, 61, 63, 65, 70, 72, 78, 79, 80, 82, 88, 95, 96, 101, 105, 106, 108, 109, 110, 111, 112, 114, 119, 121, 124, 127, 128, 129, 130, 133, 134, 141, 142, 143, 144, 147, 156, 157, 158, 160, 161, 164, 165, 167, 170, 171, 173, 174, 176, 177, 178, 179, 183, 186, 189, 190, 193, 199, 204, 205, 218, 232, 233, 236, 237, 238, 239, 242, 245, 246, 247, 248, 255, 256, 258, 260, 268, 269, 270, 273, 274, 275, 277, 280, 281, 287, 288, 289, 290], "uniniti": [5, 29, 46, 51, 89, 92, 93], "kpremul_alphatyp": [5, 11, 18, 126, 136], "kunpremul_alphatyp": [5, 11, 18, 126, 185, 234, 243, 295], "independ": [5, 18, 29, 32, 155, 234, 243, 277, 297], "klastenum_alphatyp": 5, "last": [5, 11, 13, 18, 69, 159, 162, 169, 185, 265, 266, 280, 297], "kno": [6, 17, 89, 92, 93, 101, 105, 107, 108, 109, 111, 126, 234, 243, 293], "don": [6, 73, 94, 234, 292], "t": [6, 35, 40, 73, 89, 92, 93, 94, 123, 124, 125, 126, 142, 180, 186, 187, 193, 220, 221, 234, 257, 276, 279, 292], "pre": 6, "clip": [6, 7, 18, 24, 54, 131, 142, 155, 159, 181, 196, 197, 234, 243, 250, 295, 296], "geometri": [6, 18, 131, 155, 158, 159, 172, 231, 241, 296], "befor": [6, 9, 18, 27, 28, 29, 38, 43, 51, 53, 54, 62, 64, 73, 81, 89, 91, 92, 93, 98, 100, 107, 114, 126, 131, 135, 140, 142, 149, 159, 162, 169, 172, 181, 183, 186, 194, 195, 203, 214, 215, 217, 234, 243, 259, 261, 272, 282, 292, 296], "perspect": [6, 142, 144, 153, 159, 295], "kye": [6, 17, 89, 92, 93, 101, 105, 108, 109, 111, 126, 142, 159, 234, 243], "do": [6, 11, 18, 27, 45, 94, 124, 126, 138, 155, 159, 193, 196, 234, 243, 293, 295, 296], "stack": [7, 9, 18, 38, 43, 53, 54, 62, 73, 81, 89, 91, 92, 93, 98, 100, 107, 126, 131, 140, 172, 181, 194, 195, 203, 215, 217, 234, 243, 259, 261, 282, 292, 295, 296], "helper": [7, 51, 155, 250, 254, 279], "call": [7, 9, 11, 18, 27, 30, 38, 43, 51, 53, 54, 56, 59, 60, 62, 73, 81, 84, 85, 89, 91, 92, 93, 94, 98, 100, 107, 122, 124, 126, 131, 140, 142, 145, 148, 151, 155, 159, 162, 163, 169, 172, 175, 181, 182, 193, 194, 195, 196, 198, 203, 214, 215, 217, 225, 226, 227, 228, 229, 234, 243, 251, 259, 261, 271, 282, 292, 293, 295, 296], "restoretocount": [7, 18], "when": [7, 11, 18, 24, 27, 38, 45, 47, 51, 53, 54, 56, 59, 64, 72, 89, 92, 93, 94, 107, 116, 124, 126, 135, 136, 142, 145, 154, 155, 159, 162, 163, 177, 181, 182, 185, 188, 193, 195, 196, 225, 226, 227, 228, 229, 234, 243, 251, 254, 259, 293, 296], "goe": [7, 135, 139, 185, 195, 214], "scope": [7, 18, 53, 185, 195, 214], "guarante": [7, 29, 51, 54, 59, 89, 91, 92, 93, 100, 107, 145, 159, 214, 217, 225, 226, 227, 228, 229, 230, 234, 243], "restor": [7, 18, 295, 296], "known": [7, 35, 59, 126, 145, 225, 226, 227, 228, 229, 259], "state": [7, 11, 18, 24, 54, 59, 84, 85, 87, 89, 92, 93, 95, 107, 126, 142, 145, 149, 155, 159, 182, 225, 226, 227, 228, 229, 234, 243, 254, 295, 296], "drawcircl": [7, 18, 293, 295, 296], "50": [7, 159, 295, 297], "dosav": 7, "preserv": [7, 11, 13, 24, 124, 142, 159, 185, 186, 188, 193, 234, 238, 243, 247], "save": [7, 18, 56, 126, 181, 293, 295, 296], "count": [7, 9, 11, 17, 18, 27, 38, 43, 45, 50, 51, 53, 54, 62, 73, 81, 89, 91, 92, 93, 98, 100, 107, 126, 131, 135, 136, 140, 142, 159, 172, 181, 185, 186, 193, 194, 195, 196, 203, 215, 217, 234, 235, 243, 244, 251, 259, 261, 267, 282, 292, 296], "option": [7, 11, 18, 24, 27, 34, 38, 41, 64, 89, 92, 93, 94, 126, 135, 136, 142, 153, 155, 159, 162, 181, 185, 196, 203, 231, 234, 243, 251, 254, 259, 267, 272, 273, 276, 295, 297], "guard": 7, "util": [7, 18, 185, 250], "destructor": [7, 89, 92, 93, 195], "immedi": [7, 18, 53, 89, 92, 93, 94, 234, 243], "subsequ": [7, 11, 18, 89, 92, 93, 126, 142, 151, 155, 159, 162, 169, 182, 234, 243], "effect": [7, 11, 12, 18, 38, 43, 48, 51, 64, 124, 126, 131, 135, 142, 155, 159, 172, 193, 196, 201, 202, 206, 211, 213, 225, 231, 234, 243, 295, 297], "kwarg": [8, 9, 10, 11, 15, 18, 19, 24, 27, 35, 38, 40, 41, 43, 45, 48, 49, 50, 52, 53, 54, 56, 60, 62, 64, 69, 73, 74, 75, 77, 81, 83, 84, 85, 87, 89, 91, 92, 93, 97, 99, 100, 103, 104, 107, 115, 118, 120, 122, 123, 124, 125, 126, 131, 132, 135, 136, 137, 138, 140, 142, 145, 148, 150, 151, 153, 155, 159, 162, 163, 166, 168, 169, 172, 175, 180, 182, 184, 185, 186, 187, 188, 191, 193, 194, 195, 196, 198, 201, 202, 203, 206, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 241, 243, 244, 249, 250, 257, 259, 262, 263, 264, 265, 266, 271, 272, 276, 282, 283, 292], "bytesus": 9, "approxim": [9, 27, 45, 64, 135, 136, 159, 181], "size": [9, 11, 18, 19, 24, 27, 31, 45, 51, 56, 59, 60, 64, 89, 92, 93, 107, 124, 126, 135, 136, 142, 145, 148, 151, 153, 155, 159, 169, 180, 181, 185, 191, 193, 196, 215, 225, 226, 227, 228, 229, 230, 234, 243, 251, 259, 271, 272, 276, 291, 295], "insert": [9, 69, 89, 92, 93, 181, 230, 265, 266], "overload": [9, 11, 18, 24, 27, 35, 40, 41, 45, 54, 56, 60, 64, 69, 73, 77, 83, 84, 85, 87, 89, 92, 93, 97, 99, 103, 104, 120, 123, 124, 125, 126, 132, 135, 136, 142, 145, 148, 151, 153, 155, 159, 162, 163, 169, 175, 182, 185, 186, 187, 188, 191, 193, 196, 198, 201, 202, 203, 206, 210, 213, 216, 217, 220, 221, 223, 230, 231, 234, 241, 243, 259, 262, 263, 264, 265, 266, 271, 272, 276, 282, 292], "n": [9, 135, 142, 225, 296], "box": [9, 64, 71, 181, 182, 188, 251, 254], "hierarchi": [9, 182], "metadata": [9, 151], "ref": [9, 38, 43, 45, 51, 53, 54, 62, 73, 81, 89, 91, 92, 93, 98, 100, 107, 114, 126, 131, 140, 172, 181, 194, 195, 203, 215, 217, 234, 243, 251, 259, 261, 267, 282, 292], "refcntbas": [9, 38, 43, 53, 54, 62, 73, 81, 89, 91, 92, 93, 98, 100, 107, 126, 131, 140, 172, 181, 194, 203, 215, 217, 234, 243, 259, 261, 282, 292], "increment": [9, 27, 30, 31, 38, 43, 53, 54, 62, 64, 73, 81, 89, 91, 92, 93, 98, 100, 107, 126, 131, 140, 155, 172, 181, 185, 194, 195, 203, 215, 217, 234, 243, 259, 261, 282, 292], "balanc": [9, 18, 38, 43, 53, 54, 62, 73, 81, 89, 91, 92, 93, 98, 100, 107, 126, 131, 140, 172, 181, 194, 195, 203, 215, 217, 234, 243, 259, 261, 282, 292], "unref": [9, 38, 43, 45, 51, 53, 54, 62, 73, 81, 89, 91, 92, 93, 98, 100, 107, 126, 131, 140, 172, 181, 182, 194, 195, 203, 215, 217, 234, 243, 251, 259, 261, 267, 282, 292], "queri": [9, 126], "std": [9, 126, 186], "vector": [9, 27, 124, 135, 142, 159, 169, 175, 186, 187], "alloc": [9, 11, 17, 18, 38, 43, 53, 54, 62, 73, 81, 89, 91, 92, 93, 98, 100, 101, 107, 126, 131, 140, 159, 172, 181, 185, 186, 194, 195, 196, 203, 215, 217, 234, 243, 259, 261, 272, 276, 279, 282, 292, 295], "popul": 9, "indic": [9, 17, 27, 30, 32, 50, 64, 71, 72, 89, 92, 93, 131, 151, 196, 234, 243, 267, 272, 278], "intersect": [9, 11, 18, 124, 177, 185, 193, 196, 197, 200, 234, 243, 251, 254], "uniqu": [9, 11, 38, 43, 45, 51, 53, 54, 62, 73, 81, 89, 91, 92, 93, 98, 100, 107, 126, 131, 140, 154, 159, 172, 181, 194, 195, 203, 215, 217, 234, 243, 251, 259, 261, 267, 282, 292, 293], "caller": [9, 11, 18, 27, 38, 43, 51, 52, 53, 54, 62, 73, 81, 89, 91, 92, 93, 98, 100, 107, 126, 131, 140, 142, 153, 159, 172, 181, 182, 185, 194, 195, 203, 215, 217, 225, 234, 243, 259, 261, 279, 282, 292, 296], "owner": [9, 11, 38, 43, 53, 54, 62, 73, 81, 89, 91, 92, 93, 98, 100, 107, 126, 131, 136, 140, 152, 172, 181, 185, 194, 195, 203, 215, 217, 234, 243, 259, 261, 282, 292], "ensur": [9, 11, 38, 43, 53, 54, 62, 73, 81, 89, 91, 92, 93, 98, 100, 107, 126, 131, 140, 172, 181, 185, 194, 195, 203, 215, 217, 234, 243, 259, 261, 279, 282, 292], "previou": [9, 23, 28, 38, 43, 53, 54, 62, 64, 73, 81, 89, 91, 92, 93, 94, 98, 100, 107, 126, 131, 138, 140, 155, 159, 172, 181, 194, 195, 203, 215, 217, 234, 243, 259, 261, 282, 292, 293], "action": [9, 38, 43, 53, 54, 62, 73, 81, 89, 91, 92, 93, 98, 100, 107, 126, 131, 140, 172, 181, 194, 195, 203, 215, 217, 234, 243, 259, 261, 282, 292], "complet": [9, 27, 29, 38, 43, 53, 54, 62, 73, 81, 89, 91, 92, 93, 98, 100, 107, 124, 126, 131, 136, 140, 142, 172, 181, 193, 194, 195, 196, 197, 198, 203, 214, 215, 217, 234, 243, 259, 261, 282, 292, 293], "decrement": [9, 38, 43, 53, 54, 62, 73, 81, 89, 91, 92, 93, 98, 100, 107, 126, 131, 140, 172, 181, 194, 195, 203, 215, 217, 234, 243, 259, 261, 282, 292], "delet": [9, 18, 38, 43, 53, 54, 62, 73, 81, 89, 91, 92, 93, 94, 98, 100, 107, 114, 126, 131, 140, 151, 172, 175, 181, 194, 195, 203, 214, 215, 217, 234, 243, 259, 261, 282, 292], "object": [9, 11, 18, 27, 38, 43, 51, 53, 54, 62, 64, 73, 81, 89, 91, 92, 93, 94, 98, 100, 107, 114, 118, 126, 131, 136, 140, 142, 151, 155, 172, 175, 181, 182, 185, 194, 195, 203, 215, 217, 234, 236, 237, 243, 245, 246, 249, 250, 251, 259, 261, 267, 272, 276, 282, 292, 293, 295, 296], "need": [9, 18, 27, 29, 30, 38, 43, 53, 54, 62, 73, 81, 89, 91, 92, 93, 98, 100, 107, 114, 124, 126, 131, 140, 159, 169, 172, 175, 181, 193, 194, 195, 203, 215, 217, 234, 243, 259, 261, 282, 292], "been": [9, 11, 27, 34, 38, 43, 53, 54, 59, 62, 73, 81, 89, 91, 92, 93, 94, 98, 100, 107, 126, 131, 140, 145, 162, 163, 172, 181, 182, 185, 194, 195, 203, 215, 217, 225, 226, 227, 228, 229, 234, 243, 259, 261, 272, 276, 282, 292, 293], "isdraw": 10, "dimension": [11, 126, 186, 295], "raster": [11, 18, 126, 153, 159, 185, 234, 243, 294, 295], "imageinfo": [11, 18, 27, 41, 126, 146, 185, 234, 243, 276, 293, 295], "integ": [11, 18, 123, 124, 126, 136, 159, 169, 185, 186, 193, 196, 259, 295], "colorspac": [11, 18, 27, 38, 40, 41, 43, 89, 92, 93, 126, 136, 155, 185, 220, 234, 240, 243, 293], "pixelref": [11, 27, 126, 185], "physic": [11, 135], "locat": [11, 18, 27, 64, 126, 135], "anywher": 11, "insid": [11, 13, 16, 18, 25, 28, 124, 159, 174, 185, 188, 193, 196, 197, 297], "drawn": [11, 18, 19, 24, 28, 29, 53, 64, 126, 131, 135, 136, 155, 159, 172, 182, 196, 217, 234, 243, 251, 259, 293, 295, 296, 297], "flexibl": [11, 135], "limit": [11, 18, 24, 89, 92, 93, 124, 135, 142, 155, 157, 159, 180, 181, 193], "optim": [11, 18, 136, 149, 181, 217, 241], "target": [11, 18, 83, 84, 85, 89, 92, 93, 99, 107, 126, 135, 234, 243], "primarili": 11, "read": [11, 18, 27, 51, 56, 59, 126, 130, 142, 145, 155, 159, 185, 188, 196, 225, 226, 227, 228, 229, 234, 243], "better": [11, 142, 153], "perform": [11, 18, 27, 89, 92, 93, 140, 142, 149, 159, 169, 177, 185, 234, 241, 243, 251, 297], "written": [11, 18, 56, 60, 142, 148, 151, 159, 188, 193, 196, 259, 271], "declar": 11, "const": [11, 51, 73, 142, 292], "prevent": [11, 89, 92, 93, 155], "alter": [11, 155, 159, 162, 182, 254], "cannot": [11, 27, 31, 51, 59, 126, 138, 142, 145, 155, 172, 181, 193, 225, 226, 227, 228, 229], "chang": [11, 18, 27, 54, 64, 84, 85, 89, 92, 93, 126, 142, 159, 172, 181, 185, 186, 193, 196, 217, 231, 234, 238, 243, 247, 259], "It": [11, 18, 27, 32, 34, 41, 48, 73, 82, 89, 91, 92, 93, 94, 100, 107, 114, 136, 155, 180, 181, 185, 186, 195, 234, 243, 251, 259, 292, 293, 295], "affect": [11, 18, 50, 64, 126, 131, 159, 169, 172, 181, 251], "write": [11, 27, 34, 51, 56, 60, 126, 142, 148, 151, 159, 185, 188, 193, 196, 234, 243, 271, 293, 295], "configur": [11, 27, 120, 122, 234, 243, 272, 276], "content": [11, 18, 23, 24, 51, 53, 54, 56, 69, 73, 89, 92, 93, 110, 126, 135, 151, 153, 154, 155, 182, 196, 230, 234, 243, 249, 254, 259, 265, 266, 292, 295, 297], "thread": [11, 38, 51, 126, 142, 159, 184, 185, 234, 243, 259, 293], "safe": [11, 32, 38, 89, 91, 92, 93, 100, 107, 142, 159, 185, 186, 234, 243], "own": [11, 18, 53, 89, 92, 93, 94, 234, 243], "copi": [11, 18, 24, 51, 59, 66, 69, 84, 85, 126, 135, 145, 155, 159, 175, 185, 188, 196, 225, 226, 227, 228, 229, 234, 243, 249, 254, 259, 265, 266, 267, 297], "field": [11, 64, 142, 151], "although": [11, 27, 159, 169, 297], "share": [11, 18, 38, 51, 126, 136, 155, 159, 184, 185, 195, 196, 234, 243, 251, 254, 259, 293, 297], "underli": [11, 89, 92, 93, 94, 107, 114, 126, 159, 196, 234, 243, 259], "mount": [11, 185], "np": [11, 51, 185, 293, 295], "100": [11, 77, 79, 126, 153, 181, 185, 196, 293, 297], "4": [11, 13, 14, 18, 22, 23, 27, 28, 31, 37, 38, 39, 41, 43, 44, 46, 47, 54, 55, 57, 58, 62, 63, 71, 72, 77, 80, 82, 88, 95, 96, 131, 134, 135, 140, 141, 142, 144, 159, 164, 165, 172, 173, 177, 178, 179, 180, 183, 185, 188, 190, 196, 199, 203, 205, 217, 218, 231, 241, 242, 249, 272, 273, 275, 276, 279, 287, 288, 290, 293, 295, 296], "uint8": [11, 185, 293, 295], "setinfo": 11, "maken32premul": [11, 136, 185, 293], "setpixel": 11, "creat": [11, 18, 24, 27, 41, 43, 45, 51, 53, 64, 73, 89, 92, 93, 94, 107, 114, 124, 126, 131, 135, 136, 140, 142, 151, 153, 155, 159, 180, 181, 185, 193, 196, 217, 234, 243, 249, 250, 251, 259, 267, 292, 293, 295, 296, 297], "both": [11, 18, 33, 45, 123, 126, 142, 159, 169, 180, 186, 188, 234, 243], "empti": [11, 18, 27, 51, 64, 73, 118, 124, 126, 136, 142, 149, 151, 155, 159, 162, 163, 169, 180, 185, 188, 193, 196, 197, 198, 220, 251, 254, 276, 292], "volatil": [11, 159], "after": [11, 18, 27, 51, 53, 59, 89, 92, 93, 94, 124, 126, 131, 135, 142, 145, 155, 159, 162, 169, 175, 185, 225, 226, 227, 228, 229, 234, 243, 272, 297], "param": [11, 18, 64, 126, 136, 142, 169, 185, 186, 193, 234, 243, 259], "allocn32pixel": 11, "isopaqu": [11, 35, 41, 126, 136, 185, 217], "nativ": [11, 18, 27, 153, 234, 243, 259], "abort": [11, 53], "29": [11, 88, 126], "neg": [11, 18, 27, 71, 124, 126, 159, 180, 185, 188, 193, 234, 243], "fail": [11, 45, 89, 92, 93, 94, 126, 181, 185, 230, 234, 243, 251, 276, 293], "user": [11, 76, 120, 122, 251], "sk_abort": 11, "devic": [11, 18, 89, 92, 93, 107, 114, 131, 234, 243, 293], "skip": [11, 18, 20, 27, 30, 32, 34, 59, 64, 145, 225, 226, 227, 228, 229, 234, 243], "column": [11, 18, 19, 126, 136, 142, 185, 234, 243], "row": [11, 18, 19, 27, 30, 32, 41, 45, 89, 92, 93, 126, 135, 136, 142, 185, 234, 243, 272, 276], "allocpixel": 11, "info": [11, 18, 27, 31, 84, 85, 87, 89, 92, 93, 126, 185, 234, 243, 276, 293, 295], "skimageinfo": [11, 27, 185], "rowbyt": [11, 18, 27, 31, 126, 136, 185, 234, 235, 243, 244, 272, 276], "follow": [11, 56, 89, 92, 93, 107, 118, 122, 126, 142, 159, 162, 163, 234, 243, 293, 295, 296, 297], "rule": [11, 126, 159], "meth": [11, 185], "bytesperpixel": [11, 27, 41, 136, 185], "comput": [11, 18, 51, 54, 131, 136, 138, 142, 149, 155, 159, 174, 175, 186, 234, 243, 251, 254], "minimum": [11, 76, 135, 136, 142, 159, 185, 196], "could": [11, 18, 27, 29, 59, 126, 142, 145, 225, 226, 227, 228, 229, 234, 243, 293], "On": [11, 142], "most": [11, 32, 73, 142, 159, 169, 251, 259, 292], "succe": [11, 89, 92, 93, 126], "suffici": [11, 18, 159, 259, 279], "place": [11, 18, 186, 196], "until": [11, 18, 89, 92, 93, 126, 151, 159, 196, 214, 234, 243, 297], "behavior": [11, 18, 24, 45, 124, 182, 259], "malloc": 11, "larger": [11, 18, 32, 124, 126, 136, 150, 153, 159, 161, 169, 170, 185, 193, 234, 243, 251], "allocpixelsflag": 11, "calloc": 11, "kzeropixels_allocflag": [11, 12], "skalphatyp": 11, "irect": [11, 18, 27, 126, 131, 135, 136, 185, 193, 196, 197, 198, 234, 243, 295], "integr": [11, 18, 126, 136, 185], "immut": [11, 27, 51, 126, 130, 136, 181, 182, 185, 251, 254, 259, 267], "skcolortyp": [11, 89, 91, 92, 93, 100, 107, 276], "computebytes": [11, 136, 185], "rowbytesaspixel": [11, 185], "size_max": [11, 136, 185, 272, 276], "fit": [11, 18, 19, 124, 126, 136, 159, 169, 185, 188, 193], "size_t": [11, 136, 185], "dimens": [11, 18, 24, 27, 31, 41, 64, 84, 85, 87, 126, 135, 136, 159, 181, 185, 193, 196, 234, 243, 272, 276, 279, 295], "isiz": [11, 18, 27, 84, 85, 87, 124, 126, 135, 136, 180, 185, 193, 221, 272], "drawsnoth": 11, "either": [11, 38, 62, 89, 92, 93, 94, 110, 114, 116, 122, 124, 125, 126, 135, 136, 142, 151, 159, 169, 188, 193, 196, 221, 234, 243, 257, 259, 296], "enclos": [11, 124, 193], "eras": [11, 185, 295], "interpret": [11, 118, 135, 155], "being": [11, 155, 217, 234, 243, 259, 295], "srgb": [11, 27, 41, 45, 126, 136, 153, 155, 185, 234, 243], "treat": [11, 18, 28, 94, 126, 135, 142, 159, 162, 169, 172, 187, 193, 234, 243, 249, 259], "deprec": [11, 18, 71, 126, 142, 291], "eraseargb": 11, "extractalpha": 11, "skpaint": [11, 64, 126, 155], "offset": [11, 18, 50, 51, 56, 59, 64, 123, 124, 126, 135, 136, 145, 159, 169, 185, 186, 188, 193, 196, 225, 226, 227, 228, 229, 230, 234, 243, 254, 295], "ipoint": [11, 18, 124, 126, 135, 142, 186, 196, 295], "maskfilt": [11, 18, 47, 64, 155, 219, 250, 294], "mask": [11, 18, 37, 47, 126, 140, 155, 159, 250, 295], "heapalloc": 11, "top": [11, 18, 27, 28, 30, 71, 110, 124, 126, 143, 159, 185, 188, 189, 193, 234, 243], "posit": [11, 18, 59, 64, 66, 69, 71, 118, 124, 126, 142, 145, 159, 166, 169, 175, 176, 188, 193, 196, 225, 226, 227, 228, 229, 234, 243, 251, 254, 259, 265, 266, 267], "align": [11, 18, 64, 126, 136, 142, 143, 159, 169, 188, 190, 285], "unless": [11, 29, 126, 142], "layer": [11, 18, 24, 27, 296], "extractsubset": [11, 185], "subset": [11, 27, 30, 32, 51, 89, 92, 93, 126, 135, 181, 185, 234, 243, 257], "outsid": [11, 13, 16, 18, 25, 59, 89, 92, 93, 122, 124, 126, 135, 136, 145, 155, 157, 159, 174, 181, 182, 193, 225, 226, 227, 228, 229, 234, 243, 256, 257, 297], "discard": [11, 18, 27, 126, 159, 181, 193, 234, 238, 243, 247], "isvolatil": [11, 159, 169], "getalphaf": [11, 155, 185], "x": [11, 18, 19, 54, 64, 69, 71, 123, 124, 126, 135, 136, 139, 142, 143, 159, 169, 180, 181, 185, 186, 187, 188, 193, 196, 197, 198, 234, 243, 251, 254, 265, 266, 283, 296], "look": [11, 185], "normal": [11, 64, 73, 77, 89, 92, 93, 126, 135, 159, 185, 186, 187, 259, 277], "roughli": [11, 185], "getcolora": [11, 185], "getcolor": [11, 155, 185], "effic": [11, 185], "precis": [11, 142, 155, 159, 175, 185, 193], "getbound": [11, 54, 64, 159, 188, 196, 259], "black": [11, 18, 24, 185, 256], "trigger": [11, 18, 24, 155, 185, 186], "crash": [11, 89, 92, 93, 185], "sk_releas": [11, 185], "lost": [11, 89, 92, 93, 185], "getgenerationid": [11, 54, 159], "correspond": [11, 27, 28, 64, 89, 92, 93, 110, 118, 135, 142, 153, 159, 175, 185, 234, 243, 259, 274], "notifypixelschang": 11, "examin": 11, "getpixel": [11, 27, 30, 34], "getsubset": 11, "within": [11, 18, 30, 59, 89, 92, 93, 135, 136, 142, 145, 153, 154, 188, 196, 197, 200, 225, 226, 227, 228, 229, 234, 243, 251, 254, 256, 273], "Will": [11, 73, 185, 259, 279, 292], "pixelreforigin": 11, "fy": [11, 123, 124, 142, 159, 169, 186, 187, 193], "installpixel": 11, "minrowbyt": [11, 126, 136, 185, 234, 243], "reset": [11, 56, 89, 92, 93, 126, 136, 142, 149, 155, 159, 169, 175, 185, 198, 230, 254, 297], "lifetim": [11, 51, 126, 151, 185, 214, 217, 234, 243], "skpixmap": [11, 27, 89, 92, 93, 126, 146], "addr": [11, 126, 185], "isimmut": 11, "debug": [11, 64, 136, 155, 188], "isnul": 11, "explicitli": [11, 136, 142, 195, 293, 295], "incorrectli": [11, 136], "allow": [11, 18, 27, 45, 54, 126, 135, 136, 142, 155, 159, 181, 185, 188, 217, 254, 259, 276, 296], "makeshad": [11, 18, 126, 181, 201, 202, 203, 206, 213, 296], "tmx": [11, 126, 181], "tilemod": [11, 18, 118, 126, 135, 181, 217, 296], "kclamp": [11, 18, 118, 126, 256], "tmy": [11, 126, 181], "sampl": [11, 18, 25, 32, 61, 89, 92, 93, 107, 126, 135, 147, 155, 181, 185, 234, 243, 272, 275], "samplingopt": [11, 18, 126, 135, 185], "localmatrix": [11, 118, 126, 131, 181, 201, 202, 203, 206, 213, 217], "skshader": [11, 126, 155], "mark": [11, 126, 159], "peekpixel": [11, 18, 126, 234, 243], "leav": [11, 18, 59, 124, 126, 145, 155, 159, 175, 185, 193, 196, 225, 226, 227, 228, 229, 234, 243], "becom": [11, 89, 92, 93, 126, 188, 234, 243], "futur": [11, 18, 27, 89, 92, 93, 142, 234, 243], "readabl": [11, 18, 126, 185, 234, 236, 243, 245], "direct": [11, 18, 126, 131, 135, 159, 171, 181, 185, 186, 187, 234, 243, 251, 295], "access": [11, 18, 35, 51, 73, 126, 135, 159, 184, 185, 234, 243, 279, 292], "constant": [11, 14, 56, 159, 280], "readpixel": [11, 18, 126, 185, 234, 243], "dstinfo": [11, 18, 27, 126, 185, 234, 243], "dstpixel": [11, 18, 126, 185, 234, 243], "dstrowbyt": [11, 18, 126, 185, 234, 243], "srcx": [11, 18, 126, 185, 234, 243], "srcy": [11, 18, 126, 185, 234, 243], "start": [11, 18, 27, 32, 59, 118, 126, 142, 145, 159, 162, 169, 175, 185, 198, 200, 225, 226, 227, 228, 229, 257, 279, 296, 297], "specif": [11, 18, 64, 89, 92, 93, 95, 126, 131, 231, 234, 243, 259, 296], "gap": [11, 126, 185], "next": [11, 18, 27, 28, 29, 32, 38, 54, 89, 92, 93, 94, 126, 142, 159, 162, 163, 175, 179, 185, 197, 198, 200, 234, 243, 252], "ab": [11, 126, 185], "length": [11, 18, 45, 50, 51, 52, 56, 59, 60, 126, 142, 145, 148, 153, 159, 169, 175, 185, 186, 187, 188, 196, 225, 226, 227, 228, 229, 251, 259, 271, 297], "whose": [11, 38, 43, 45, 126, 185, 187, 259, 296], "absolut": [11, 59, 126, 145, 185, 186, 225, 226, 227, 228, 229], "readytodraw": 11, "refcolorspac": [11, 41, 126, 136, 185, 240], "smart": [11, 126, 136, 184, 185], "pointer": [11, 18, 84, 85, 126, 135, 136, 159, 185, 193, 196, 200, 234, 243, 251], "track": [11, 32, 126, 136, 185, 234, 243], "destruct": [11, 126, 136, 185], "initi": [11, 18, 23, 24, 27, 34, 35, 89, 92, 93, 94, 135, 142, 149, 155, 159, 162, 163, 166, 169, 172, 175, 182, 188, 198, 214, 234, 243, 254, 272, 276, 279], "had": [11, 31], "decreas": [11, 64, 155], "sole": [11, 126], "interv": [11, 18, 50, 185, 200, 234, 243, 251, 257], "least": [11, 27, 56, 59, 60, 73, 114, 126, 136, 138, 145, 148, 185, 188, 225, 226, 227, 228, 229, 271, 276, 279, 292], "larg": [11, 18, 19, 27, 45, 126, 136, 159, 180, 181, 185, 186, 193, 234, 243, 259, 260], "suppli": [11, 18, 52, 94, 126, 149, 251, 259], "enough": [11, 18, 19, 27, 45, 126, 136, 234, 243, 296], "maximum": [11, 18, 52, 71, 76, 89, 92, 93, 107, 126, 135, 136, 142, 159, 185, 196, 234, 243, 259], "setalphatyp": 11, "compat": [11, 89, 92, 93, 126, 146, 159, 234, 243, 276, 279], "current": [11, 18, 24, 27, 30, 53, 54, 56, 59, 64, 84, 85, 89, 92, 93, 126, 145, 159, 166, 175, 182, 196, 225, 226, 227, 228, 229, 234, 243, 274, 293, 295], "setimmut": 11, "intern": [11, 31, 54, 89, 92, 93, 126, 142, 159, 196, 234, 243, 296, 297], "also": [11, 27, 28, 56, 89, 92, 93, 116, 126, 142, 159, 162, 186, 234, 243, 260, 275, 293, 296, 297], "clear": [11, 18, 24, 28, 64, 69, 142, 144, 155, 181, 265, 266, 296], "permit": [11, 126, 181, 251], "31": [11, 88, 136], "successfulli": [11, 27, 142], "respons": [11, 54, 89, 92, 93, 94, 126, 234, 243, 279], "handl": [11, 32, 126, 259], "ownership": [11, 89, 92, 93, 153, 182, 214, 279], "union": [11, 18, 51, 124, 126, 131, 149, 159, 177, 185, 193, 196, 234, 243, 251, 259], "bytearrai": [11, 18, 51, 126, 159, 185, 234, 243, 251, 296], "manag": [11, 64, 73, 126, 185, 234, 243, 292, 293, 295], "shiftperpixel": [11, 41, 136, 185], "shift": [11, 41, 135, 136, 185], "swap": [11, 124, 159, 193, 196, 230], "exchang": [11, 126, 159, 196], "tobyt": [11, 126, 185, 295], "tryallocn32pixel": 11, "tryallocpixel": 11, "tryallocpixelsflag": 11, "fx": [11, 123, 124, 142, 159, 169, 186, 187, 193], "writepixel": [11, 18, 234, 243], "dstx": [11, 234, 243], "dsty": [11, 234, 243], "allocflag": 11, "No": [12, 185], "default": [12, 18, 27, 33, 34, 41, 51, 52, 64, 66, 73, 76, 89, 91, 92, 93, 100, 107, 126, 131, 136, 153, 155, 159, 234, 243, 251, 259, 276, 278, 279, 292], "kclear": [13, 296], "ksrc": [13, 18, 234, 239, 243, 248, 296], "kdst": [13, 296], "ksrcover": [13, 18, 155, 296], "over": [13, 29, 64, 135], "kdstover": [13, 296], "ksrcin": [13, 296], "trim": [13, 234, 243, 257], "kdstin": [13, 296], "ksrcout": [13, 296], "kdstout": [13, 296], "ksrcatop": [13, 296], "kdstatop": [13, 296], "kxor": [13, 47, 296], "kplu": [13, 296], "sum": [13, 50, 64, 135, 149, 172, 174], "kmodul": [13, 18, 296], "darken": 13, "kscreen": [13, 295, 296], "invers": [13, 14, 18, 122, 142, 159], "invert": [13, 32, 142], "brighten": 13, "porter": [13, 14, 47, 296], "duff": [13, 14, 47, 296], "koverlai": [13, 296], "screen": [13, 139, 237, 246, 293, 295], "kdarken": [13, 296], "darker": 13, "klighten": [13, 296], "lighter": 13, "kcolordodg": [13, 296], "reflect": [13, 18, 135, 142, 153, 182], "kcolorburn": [13, 296], "khardlight": [13, 296], "ksoftlight": [13, 296], "lighten": 13, "kdiffer": [13, 26, 47, 296], "subtract": [13, 123, 124, 177, 186, 188, 193], "higher": 13, "contrast": [13, 120, 122], "kexclus": [13, 296], "lower": [13, 71, 124, 159, 193, 251], "kmultipli": [13, 296], "klastseparablemod": 13, "separ": [13, 21, 135, 159, 181, 234, 243, 273], "khue": [13, 296], "luminos": 13, "ksatur": [13, 296], "kcolor": [13, 296], "kluminos": [13, 296], "klastmod": 13, "27": [13, 88, 96], "19": [13, 46, 88, 96], "18": [13, 46, 96, 295], "16": [13, 18, 23, 37, 46, 88, 95, 96, 126, 185, 277, 296], "22": [13, 46, 88, 96], "6": [13, 14, 27, 31, 38, 39, 43, 44, 46, 54, 55, 57, 58, 62, 63, 77, 80, 88, 96, 131, 134, 140, 141, 142, 150, 159, 165, 172, 173, 196, 203, 205, 217, 218, 272, 273, 275, 288, 296, 297], "23": [13, 46, 88, 96], "20": [13, 46, 50, 88, 96, 296, 297], "25": [13, 35, 50, 88, 159, 295, 296], "14": [13, 46, 88, 96], "28": [13, 280], "24": [13, 46, 88, 96, 296, 297], "13": [13, 96], "12": [13, 18, 96, 272, 273], "26": [13, 88], "21": [13, 46, 88, 96, 296], "9": [13, 14, 27, 31, 46, 57, 77, 80, 88, 96, 203, 205, 272, 273], "5": [13, 14, 27, 31, 35, 38, 39, 43, 44, 46, 50, 54, 55, 57, 58, 62, 63, 77, 80, 88, 131, 134, 140, 141, 142, 150, 159, 165, 172, 173, 179, 188, 190, 193, 196, 199, 203, 205, 217, 218, 257, 272, 273, 275, 280, 287, 288, 295, 296], "7": [13, 14, 27, 31, 37, 45, 46, 57, 58, 77, 80, 88, 96, 142, 203, 205, 272, 273, 288, 296], "11": [13, 57, 272, 273], "skblendmod": 14, "those": [14, 27, 89, 92, 93, 126, 131, 182, 276, 296], "equat": [14, 45], "dstcoeff": 14, "srccoeff": 14, "kzero": 14, "kone": 14, "ksc": 14, "kisc": 14, "sc": 14, "kdc": 14, "kidc": 14, "dc": [14, 142], "ksa": 14, "kisa": 14, "sa": 14, "kda": 14, "kida": 14, "da": 14, "kcoeffcount": 14, "knormal_blurstyl": [16, 155, 296], "fuzzi": 16, "ksolid_blurstyl": 16, "solid": [16, 155, 296], "kouter_blurstyl": 16, "noth": [16, 18, 94, 278, 293], "kinner_blurstyl": 16, "klastenum_blurstyl": 16, "against": [17, 51, 126], "cach": [17, 18, 54, 62, 89, 92, 93, 95, 126, 142, 159, 293], "interfac": [18, 76, 89, 92, 93, 159, 196], "togeth": [18, 45, 135, 149], "basedevic": [18, 155, 159, 234, 243], "concaten": 18, "typefac": [18, 64, 73, 81, 251, 292, 295, 296], "text": [18, 24, 56, 60, 64, 142, 148, 153, 159, 188, 193, 230, 251, 254, 259, 271, 284, 294, 295, 296], "stroke": [18, 50, 64, 71, 155, 156, 158, 159, 172, 231, 251, 295, 296, 297], "shader": [18, 118, 126, 155, 180, 181, 201, 202, 203, 206, 210, 213, 219, 256, 294, 295], "To": [18, 27, 53, 54, 89, 92, 93, 107, 181, 234, 243, 293, 295], "gpu": [18, 89, 92, 93, 94, 110, 126, 159, 234, 243, 294], "request": [18, 27, 31, 32, 64, 73, 126, 155, 172, 225, 231, 234, 243, 259, 292], "obtain": 18, "visibl": [18, 59, 145, 180, 225, 226, 227, 228, 229, 293, 297], "cpu": [18, 82, 126, 234, 243, 293], "vulkan": [18, 84, 85, 89, 92, 93, 114, 126, 234, 243, 293], "document": [18, 142, 151, 153, 234, 243, 293], "svg": [18, 159, 169, 180, 214, 294], "pdf": [18, 53, 58, 294], "picturerecord": [18, 181, 293], "subclass": [18, 38, 48, 54, 131, 140, 172, 217, 225, 271, 296], "approach": [18, 126], "static": [18, 27, 35, 38, 40, 43, 45, 48, 49, 50, 51, 52, 54, 56, 59, 60, 62, 73, 77, 81, 83, 84, 85, 86, 89, 92, 93, 98, 118, 122, 123, 124, 125, 126, 131, 135, 136, 137, 138, 140, 142, 145, 148, 150, 151, 159, 166, 168, 172, 180, 181, 186, 187, 188, 191, 193, 203, 214, 215, 216, 217, 219, 220, 221, 225, 226, 227, 228, 229, 231, 234, 243, 249, 250, 251, 257, 259, 261, 267, 271, 272, 276, 278, 279, 284, 292], "makerasterdirect": [18, 234, 243], "surfaceprop": [18, 234, 240, 243], "sksurfaceprop": 18, "directli": [18, 27, 126, 155, 159, 186, 188, 193, 234, 243, 293, 295], "flush": [18, 56, 60, 89, 92, 93, 94, 126, 148, 214, 234, 243, 271, 293], "prop": [18, 234, 241, 243], "lcd": [18, 24, 183, 234, 243], "stripe": [18, 234, 243], "font": [18, 62, 66, 71, 72, 73, 75, 76, 234, 243, 251, 254, 259, 260, 292, 293, 295, 296, 297], "makerasterdirectn32": 18, "inlin": [18, 142], "back": [18, 89, 91, 92, 93, 100, 107, 126, 151, 159, 185, 217, 225, 234, 236, 237, 243, 245, 246, 279], "ndarrai": [18, 126, 142, 185, 234, 243], "shape": [18, 126, 155, 168, 185, 234, 243, 251, 295, 296], "channel": [18, 35, 36, 37, 43, 47, 126, 135, 138, 150, 185, 234, 243, 272, 273, 276, 277, 278, 279], "appropri": [18, 27, 38, 43, 126, 234, 243], "dtype": [18, 126, 234, 243, 293], "custom": [18, 73, 135, 251, 292, 296], "inittyp": 18, "choos": [18, 27, 33, 159, 169, 172, 259], "dynam": 18, "rotat": [18, 45, 126, 131, 142, 144, 159, 169, 183, 191, 295], "multipl": [18, 52, 142, 155, 159, 184, 195, 196, 234, 243, 251, 257, 293, 296], "monitor": 18, "characterist": [18, 295], "best": [18, 126], "reli": [18, 64], "legaci": [18, 82, 126], "klegacyfonthost": 18, "edit": [18, 297], "like": [18, 31, 50, 51, 66, 126, 142, 159, 234, 243, 259, 276, 295, 296], "accesstoplayerpixel": 18, "while": [18, 45, 153, 159, 162, 169, 186, 234, 243, 252, 279, 293], "inaccess": 18, "androidframework_setdevicecliprestrict": 18, "cliprect": [18, 296], "cliprrect": 18, "clippath": 18, "retroact": 18, "restrict": [18, 135, 295], "record": [18, 89, 92, 93, 159, 181, 182, 234, 243, 293], "pictur": [18, 54, 126, 135, 182, 294, 295], "disabl": [18, 196, 234, 241, 243], "privat": [18, 155], "android": [18, 159], "framework": [18, 159], "coordin": [18, 19, 27, 32, 67, 71, 123, 124, 131, 135, 139, 142, 159, 181, 186, 187, 193, 196, 259, 295], "clipop": 18, "doantialia": 18, "alias": [18, 196, 234, 243], "anti": [18, 196, 234, 243], "edg": [18, 64, 118, 124, 135, 155, 157, 159, 174, 188, 193, 256], "filltyp": [18, 159, 169], "itself": [18, 54, 124, 193], "anoth": [18, 27, 51, 89, 92, 93, 126, 131, 142, 153, 188, 293], "form": [18, 142, 159, 186, 191, 297], "part": [18, 41, 62, 136, 139, 159, 169, 175, 181, 188, 197, 198, 251, 272, 296], "combin": [18, 27, 41, 47, 73, 89, 92, 93, 135, 136, 142, 146, 155, 177, 196, 251, 276, 278, 292], "rrect": [18, 159, 169, 295], "clipregion": 18, "devicergn": 18, "region": [18, 47, 135, 295], "kintersect": [18, 26, 47], "unaffect": [18, 185], "concat": [18, 142], "exist": [18, 126, 149, 159, 175, 195, 196, 234, 243, 259, 279], "m44": 18, "necessari": [18, 30, 126, 153, 159], "done": [18, 27, 51, 59, 94, 145, 175, 182, 197, 198, 225, 226, 227, 228, 229, 234, 243], "drawannot": 18, "kei": [18, 62, 89, 92, 93, 295], "annot": [18, 279], "pair": [18, 21, 159, 161, 169, 170, 185, 188, 251, 259, 297], "utf": [18, 64, 251], "extent": [18, 71, 159], "lookup": [18, 250], "drawarc": 18, "oval": [18, 159, 169, 188, 295, 297], "startangl": [18, 118, 159, 169], "sweepangl": [18, 159, 169], "usecent": 18, "arc": [18, 159, 161, 169, 170, 297], "sweep": [18, 159, 169], "plu": [18, 38, 43, 159, 234, 243, 297], "degre": [18, 142, 159, 169, 295], "right": [18, 71, 124, 139, 142, 143, 159, 186, 188, 189, 193, 196, 200], "middl": [18, 257, 297], "end": [18, 27, 29, 59, 69, 89, 92, 93, 94, 118, 126, 145, 155, 159, 162, 169, 186, 200, 225, 226, 227, 228, 229, 234, 236, 237, 243, 245, 246, 265, 266, 295, 296, 297], "clockwis": [18, 142, 159, 169, 171], "counterclockwis": [18, 159, 169], "circl": [18, 118, 142, 156, 157, 159, 169, 188, 297], "wedg": 18, "center": [18, 118, 135, 143, 159, 169, 188, 274, 296], "between": [18, 38, 61, 64, 71, 118, 126, 135, 147, 153, 155, 159, 166, 180, 184, 186, 230, 257, 259], "begin": [18, 53, 59, 64, 118, 131, 145, 155, 159, 169, 175, 225, 226, 227, 228, 229, 234, 243, 295], "drawatla": 18, "atla": 18, "xform": [18, 251, 254], "rsxform": [18, 142, 251, 254], "tex": [18, 267], "cullrect": [18, 155, 181, 182], "sprite": 18, "alia": [18, 85, 89, 93, 201, 202, 213, 243, 292], "colorfilt": [18, 43, 122, 131, 135, 138, 150, 155, 201, 202, 203, 206, 210, 213, 217, 234, 243, 249, 294], "imagefilt": [18, 24, 38, 126, 155, 234, 243, 294], "present": [18, 27, 38, 66, 126, 182, 234, 237, 243, 246, 259, 275, 277], "entri": [18, 19, 50, 89, 92, 93, 159, 186, 193, 259, 276, 297], "space": [18, 19, 27, 40, 45, 64, 66, 110, 122, 126, 131, 135, 136, 142, 155, 166, 234, 243, 249, 272, 279], "conserv": [18, 29, 54, 142, 231, 251, 259], "map": [18, 27, 41, 45, 64, 89, 92, 93, 126, 131, 135, 136, 142, 185, 234, 243, 251, 273, 280, 295], "effici": [18, 27, 56, 159, 196, 296], "drawbitmap": 18, "drawloop": [18, 234, 243], "extend": [18, 69, 155, 157, 159, 169, 234, 243, 259, 265, 266], "beyond": [18, 234, 243, 276, 296], "replic": [18, 166, 256, 296], "just": [18, 27, 73, 234, 243, 260, 292, 295], "made": [18, 27, 51, 59, 145, 155, 181, 225, 226, 227, 228, 229, 234, 243, 293], "makebitmapshad": 18, "side": [18, 19, 124, 135, 142, 186, 193], "drawbitmaprect": 18, "constraint": [18, 241], "srcrectconstraint": 18, "kstrict_srcrectconstraint": [18, 25], "scale": [18, 19, 27, 31, 64, 126, 135, 142, 143, 144, 159, 169, 181, 183, 185, 186, 187, 191, 234, 243, 251, 259, 296], "translat": [18, 124, 126, 142, 144, 159, 181, 188, 196, 295, 296, 297], "addition": [18, 89, 92, 93, 126, 159, 234, 243], "filterqu": [18, 126, 135, 155, 185], "kfast_srcrectconstraint": [18, 25], "improv": [18, 120, 122, 142, 159, 297], "filter": [18, 24, 38, 43, 52, 122, 126, 131, 135, 138, 155, 180, 185, 216, 249], "strictli": [18, 118], "faster": [18, 25, 186, 196, 259], "isrc": 18, "boundari": [18, 126], "fraction": [18, 193], "cx": [18, 118, 296], "cy": [18, 118, 296], "radiu": [18, 48, 118, 135, 142, 159, 169, 188, 296], "thick": [18, 71, 155, 231], "axi": [18, 19, 64, 66, 68, 75, 123, 124, 126, 135, 142, 159, 169, 186, 187, 188, 190, 193, 196, 197, 198, 234, 243, 254, 259], "half": [18, 46, 159, 188, 257, 277], "diamet": 18, "drawcolor": [18, 295, 296], "drawdrrect": 18, "outer": [18, 40, 124, 135, 172, 193, 296], "inner": [18, 38, 40, 43, 135, 172, 296], "join": [18, 124, 155, 159, 172, 193, 231], "round": [18, 45, 48, 64, 159, 169, 188, 193, 234, 243, 295, 296], "squar": [18, 142, 156, 188], "concav": [18, 159], "These": [18, 47, 58, 95, 126, 234, 243, 296], "ident": [18, 27, 126, 142, 144, 159, 188, 196, 249, 297], "fast": [18, 45, 155, 159], "drawirect": 18, "drawimag": [18, 295, 296], "drawimagerect": [18, 135, 295], "uncompress": 18, "rectangular": [18, 19, 30, 196], "system": [18, 71, 73, 126, 131, 139, 234, 243, 292], "ctm": [18, 131, 140], "drawrect": [18, 295, 296], "drawlin": [18, 155, 181], "x0": 18, "y0": 18, "x1": [18, 159, 169], "y1": [18, 159, 169], "segment": [18, 21, 52, 159, 175, 196, 200, 257, 296], "cap": [18, 155, 159, 231], "were": [18, 27, 59, 89, 92, 93, 94, 131, 145, 182, 225, 226, 227, 228, 229, 234, 243, 254], "kstroke": 18, "p0": [18, 159, 193], "p1": [18, 159, 169, 193], "drawov": [18, 296], "drawpaint": [18, 155, 295, 296], "patheffect": [18, 48, 50, 52, 64, 137, 155, 166, 168, 251, 257, 294], "drawpatch": 18, "texcoord": 18, "coon": 18, "patch": [18, 188], "interpol": [18, 61, 147, 159], "four": [18, 35, 76, 124, 142, 155, 159, 162, 163, 169, 188, 193, 196, 234, 243], "textur": [18, 37, 87, 89, 92, 93, 101, 107, 110, 114, 126, 234, 243, 272, 273, 293], "everi": [18, 159], "fourth": [18, 135], "bottom": [18, 27, 32, 71, 110, 124, 142, 143, 159, 188, 189, 193, 234, 243], "deriv": 18, "drawpath": [18, 295, 296, 297], "close": [18, 53, 59, 151, 159, 160, 162, 169, 171, 175, 259, 296, 297], "drawpictur": [18, 181], "seri": [18, 149, 169, 297], "later": [18, 27, 162, 163, 181, 185, 198, 293], "playback": [18, 181, 293], "savelay": [18, 296], "plai": [18, 27, 126, 181], "drawpoint": 18, "kround": 18, "ksquar": 18, "butt": 18, "p": [18, 142, 159, 186], "pointmod": 18, "pt": [18, 142, 151, 159, 162, 163, 169, 179, 186, 193, 259, 296], "kpoint": 18, "kline": [18, 179, 297], "kpolygon": 18, "kbutt": 18, "One": [18, 185], "final": [18, 94, 131, 159, 197, 198, 297], "adjac": [18, 256], "minu": [18, 124, 159, 188, 193], "respect": [18, 24, 64, 89, 92, 93, 126, 295], "unlik": [18, 27, 159, 182, 295, 296], "iter": [18, 69, 159, 163, 179, 196, 197, 200, 251, 254, 265, 266], "drawrrect": [18, 295], "uniformli": [18, 142, 159], "radii": [18, 135, 159, 169, 188, 189, 190], "drawregion": 18, "drawroundrect": [18, 295], "rx": [18, 159], "ry": [18, 159], "thei": [18, 27, 32, 38, 52, 84, 85, 89, 92, 93, 94, 155, 182, 196, 217, 225, 234, 243, 249, 257, 259, 279, 296], "down": [18, 19, 32, 71, 139, 175, 234, 243], "skrect": [18, 124, 142, 143, 193], "skrrect": [18, 188], "drawsimpletext": 18, "charact": [18, 64, 71, 73, 76, 251, 259, 292], "glyph": [18, 64, 71, 251, 254, 259, 295], "fallback": [18, 45, 73, 251, 292], "found": [18, 64, 73, 142, 159, 200, 251, 259, 292], "kern": [18, 251, 259], "complex": [18, 196, 251], "advanc": [18, 64, 162, 163, 166, 197, 198, 200, 251], "By": [18, 32, 142, 153, 155, 159], "code": [18, 31, 64, 73, 159, 188, 193, 234, 243, 251, 259, 292, 295], "drawstr": [18, 297], "char": [18, 73, 259, 292], "drawtextblob": [18, 295, 296], "blob": [18, 251, 254, 296], "textblob": [18, 254, 295, 296], "skew": [18, 64, 142, 144, 295], "fake": [18, 64], "bold": [18, 64, 77, 259], "embed": [18, 72], "linear": [18, 41, 45, 118, 126, 136, 138, 234, 243, 296], "subpixel": [18, 64], "textencod": [18, 64, 251, 254], "kglyphid": [18, 255], "dither": [18, 155], "horizont": [18, 64, 142, 196, 200, 234, 243, 254, 256, 259, 275, 296], "vertic": [18, 142, 234, 243, 254, 256, 275, 296], "drawtextonpath": 18, "drawvertic": [18, 267], "triangl": 18, "mesh": 18, "vvertic": 18, "pend": [18, 126, 234, 243], "resolv": [18, 149, 234, 243], "never": [18, 73, 89, 92, 93, 131, 159, 181, 196, 230, 234, 243, 259, 292, 297], "defer": [18, 126, 136], "getbaselayers": 18, "root": [18, 214], "global": [18, 51, 89, 92, 93, 159], "due": [18, 73, 94, 231, 292], "getdeviceclipbound": 18, "makeempti": [18, 51, 124, 125, 188, 193, 221, 259], "getlocalclipbound": 18, "outset": [18, 124, 188, 193, 231, 296], "account": [18, 64, 155, 159, 231, 234, 243, 259], "partial": [18, 30, 31, 64, 65, 95, 126, 155], "coverag": [18, 47], "local": [18, 118, 126, 131, 135, 291], "getlocaltodevic": 18, "getprop": 18, "writabl": [18, 126, 142, 159, 185, 236, 245], "getsavecount": 18, "depth": [18, 136], "getsurfac": 18, "sksurfac": [18, 89, 92, 93], "sometim": [18, 45, 241, 259], "bare": 18, "els": [18, 126, 131, 142, 155, 175, 225, 256], "gettotalmatrix": 18, "strip": [18, 183, 191], "awai": [18, 52, 139, 181], "z": [18, 139, 142, 186, 187], "3x3": [18, 45, 135, 142, 295], "isclipempti": 18, "often": [18, 73, 234, 243, 292], "howev": [18, 30, 89, 92, 93, 142, 234, 243, 295, 296], "iscliprect": 18, "makesurfac": [18, 234, 243], "beginpag": [18, 53], "beginrecord": [18, 181, 182, 293], "debugcanva": 18, "quickreject": [18, 155, 196], "quickli": [18, 180, 196], "compar": [18, 45, 123, 159, 186, 196, 231], "instanc": [18, 35, 38, 51, 54, 89, 92, 93, 114, 126, 131, 155, 166, 214, 234, 243, 259, 297], "too": [18, 19, 31, 32, 45, 153, 159, 169, 185, 196, 234, 243], "small": [18, 19, 31, 45, 159, 169, 180, 185, 196, 234, 243], "resetmatrix": 18, "skmatrix": [18, 142, 144, 188], "prior": [18, 24, 30, 89, 92, 93, 135, 159, 160, 185, 186], "overwritten": [18, 159, 236, 245], "savecount": 18, "savelayerpreservelcdtextrequest": 18, "savelayeralpha": 18, "mathemat": [18, 126, 142], "px": [18, 142], "about": [18, 27, 29, 94, 142], "setmatrix": 18, "put": 18, "suggest": [18, 27], "layerrec": 18, "savelayerrec": 18, "opac": 18, "onto": [18, 38, 293, 295], "sx": [18, 142], "sy": [18, 142, 293], "skm44": 18, "increas": [18, 64, 118, 122, 155, 159, 175, 196], "toarrai": [18, 126, 234, 243, 295], "dx": [18, 124, 135, 142, 159, 169, 186, 188, 193, 196], "dy": [18, 124, 135, 142, 159, 169, 186, 188, 193, 196], "along": [18, 131, 135, 142, 166, 197, 198, 254, 259, 296], "move": [18, 27, 52, 59, 64, 124, 126, 135, 142, 145, 159, 175, 185, 193, 225, 226, 227, 228, 229], "distanc": [18, 48, 64, 71, 135, 159, 166, 169, 175, 186, 187, 297], "kall_quadaaflag": [18, 22], "quadaaflag": 18, "kbottom_quadaaflag": [18, 22], "kf16colortyp": [18, 23], "savelayerflag": [18, 24], "kinitwithprevious_savelayerflag": [18, 23], "kleft_quadaaflag": [18, 22], "klines_pointmod": [18, 21], "knone_quadaaflag": [18, 22], "kpoints_pointmod": [18, 21], "kpolygon_pointmod": [18, 21], "kpreservelcdtext_savelayerflag": [18, 23], "kright_quadaaflag": [18, 22], "ktop_quadaaflag": [18, 22], "divid": [19, 234, 243, 273], "grid": 19, "fix": [19, 45, 259], "proportion": [19, 188], "fbound": [19, 24], "fcolor": [19, 20], "frecttyp": 19, "fxcount": 19, "fxdiv": 19, "fycount": 19, "fydiv": 19, "kdefault": [19, 20], "recttyp": 19, "kfixedcolor": [19, 20], "ktranspar": [19, 20, 35], "polygon": [21, 159], "fpaint": 24, "fbackdrop": 24, "fsavelayerflag": 24, "overlai": 24, "modifi": [24, 27, 29, 51, 52, 64, 89, 92, 93, 126, 140, 155, 159, 175, 180, 185, 186, 188, 196, 217, 296], "backdrop": 24, "caus": [24, 54, 126, 142, 186, 188, 234, 243], "kinitwithprevi": 24, "rather": [24, 174, 180, 295], "slower": [25, 153, 159], "abstract": [27, 181, 225], "makefromdata": [27, 73, 181, 259, 292], "we": [27, 30, 45, 89, 92, 93, 94, 95, 175, 234, 243, 293, 295], "know": [27, 73, 94, 295], "minbufferedbytesneed": 27, "resulttostr": 27, "textual": 27, "stream": [27, 29, 53, 56, 59, 60, 62, 126, 145, 148, 151, 159, 181, 214, 215, 226, 227, 228, 229, 259, 271, 293], "getencodedformat": 27, "skencodedimageformat": 27, "getframecount": 27, "frame": [27, 28, 29, 30, 52, 126], "getframeinfo": [27, 30], "frameinfo": 27, "singl": [27, 61, 64, 149, 155, 180, 181, 196, 217, 251, 293, 296, 297], "multi": [27, 29, 30, 234, 243], "pars": [27, 45, 126, 197, 198, 241], "alreadi": [27, 30, 51, 126, 135, 187, 296], "As": [27, 32, 142], "rewind": [27, 31, 59, 145, 159, 198, 225, 226, 227, 228, 229], "still": [27, 29, 32, 33, 89, 92, 93, 234, 243, 293], "anim": [27, 33, 54, 126, 159], "getinfo": [27, 30], "reason": 27, "icc": [27, 45], "profil": [27, 45, 135], "getorigin": 27, "exif": [27, 58], "ktopleft": [27, 234, 243], "block": [27, 274, 293], "fheight": [27, 125, 221], "fwidth": [27, 125, 221], "repeat": [27, 142, 159, 180, 196, 256, 296], "give": [27, 154, 231, 293], "scanlin": [27, 30, 32], "progress": 27, "client": [27, 30, 32, 51, 54, 64, 82, 84, 85, 89, 92, 93, 94, 114, 175, 234, 237, 243, 246, 293, 296], "startscanlinedecod": 27, "descript": [27, 126, 183, 234, 243, 297], "config": [27, 122, 272], "expect": [27, 126, 234, 243, 272], "simpli": [27, 89, 92, 93, 234, 243], "contract": 27, "decid": [27, 172, 260], "impli": [27, 142, 181], "kinvalidscal": [27, 31], "skcolorspac": 27, "report": [27, 30, 59, 89, 92, 93, 107, 126, 145, 225, 226, 227, 228, 229, 276], "geticcprofil": 27, "ksuccess": [27, 31], "explain": [27, 32], "failur": [27, 45, 59, 89, 92, 93, 126, 145, 159, 225, 226, 227, 228, 229, 234, 243, 259], "getrepetitioncount": 27, "repetit": 27, "mean": [27, 51, 64, 89, 92, 93, 135, 142, 225, 231, 234, 243, 251], "stop": [27, 53, 175, 257], "krepetitioncountinfinit": 27, "loop": [27, 159, 297], "forev": 27, "find": [27, 73, 230, 259, 292], "getscaleddimens": 27, "desiredscal": 27, "factor": [27, 135, 142, 186, 296], "exact": [27, 30, 131, 159, 188, 193, 297], "getscanlineord": 27, "scanlineord": 27, "enum": [27, 57, 82, 95, 260, 273, 275], "getscanlin": [27, 30], "countlin": 27, "Not": [27, 51, 296], "getvalidsubset": 27, "desiredsubset": 27, "anyth": [27, 64, 82, 296], "similar": [27, 28, 45, 89, 92, 93, 135, 138, 142, 293, 295], "particular": [27, 89, 92, 93, 142, 296], "someth": [27, 138, 225, 296], "potenti": [27, 126], "getyuvaplan": 27, "yuvapixmap": [27, 126], "skyuvapixmap": [27, 126], "attempt": [27, 29, 30, 59, 126, 145, 225, 226, 227, 228, 229], "planar": [27, 126, 272], "queryyuvainfo": 27, "prealloc": 27, "accord": [27, 118], "incrementaldecod": 27, "rowsdecod": 27, "continu": [27, 31, 159], "startincrementaldecod": 27, "kincompleteinput": [27, 31], "again": [27, 89, 92, 93, 225, 234, 243, 259], "skstream": 27, "latter": 27, "variabl": [27, 71, 142], "total": [27, 59, 89, 92, 93, 131, 145, 175, 225, 226, 227, 228, 229, 272, 276], "meaning": [27, 30, 64, 142], "mani": [27, 59, 124, 135, 145, 149, 193, 225, 226, 227, 228, 229, 297], "necessarili": [27, 124, 193], "finish": [27, 89, 92, 93, 94, 126], "interlac": 27, "png": [27, 126, 293, 295, 296], "what": [27, 54, 89, 92, 93, 131, 217, 234, 243, 260, 276, 295, 296], "nextscanlin": [27, 32], "fcurrscanlin": 27, "except": [27, 28, 31, 135, 182, 234, 243], "strang": 27, "bmp": [27, 32, 126], "outputscanlin": 27, "inputscanlin": 27, "gif": [27, 28, 126], "supporteddatatyp": [27, 276], "skyuvapixmapinfo": [27, 276], "yuv": [27, 126, 272, 273, 276], "subsampl": [27, 272, 274], "chroma": [27, 274], "site": [27, 272], "plane": [27, 126, 272, 273, 275, 276, 277, 278, 279], "skipscanlin": 27, "ongetscanlin": 27, "reallyhasalpha": 27, "incomplet": [27, 31], "past": [27, 59, 145, 225, 226, 227, 228, 229], "prepar": [27, 159], "readi": [27, 234, 243], "kcouldnotrewind": [27, 31], "kerrorininput": [27, 31], "kinternalerror": [27, 31], "kinvalidconvers": [27, 31], "kinvalidinput": [27, 31], "kinvalidparamet": [27, 31], "kkeep": [27, 28, 32], "disposalmethod": 27, "knofram": [27, 29, 30], "kno_zeroiniti": [27, 34], "zeroiniti": 27, "kpreferanim": [27, 33], "selectionpolici": 27, "kpreferstillimag": [27, 33], "krestorebgcolor": [27, 28, 32], "krestoreprevi": [27, 28, 29, 30], "kunimpl": [27, 31], "kyes_zeroiniti": [27, 34], "89a": 28, "spec": [28, 118], "keep": [28, 32, 89, 92, 93, 126, 142, 217, 234, 243], "background": [28, 89, 92, 93, 135, 296], "disregard": 28, "restoreprevi": 28, "individu": [29, 188], "falphatyp": 29, "fdisposalmethod": 29, "fdurat": 29, "millisecond": 29, "show": [29, 183, 293, 296], "ffullyreceiv": 29, "marker": 29, "There": [29, 279, 296], "frequiredfram": [29, 30], "earliest": 29, "fframeindex": 30, "fpriorfram": 30, "fzeroiniti": 30, "fsubset": 30, "encodedformat": 30, "encodedimageformat": [30, 126], "kwebp": [30, 57, 126], "sens": 30, "control": [30, 64, 153, 155, 159, 175, 188, 234, 239, 243, 248, 260, 295], "dure": [30, 89, 92, 93, 94, 151, 181, 182, 234, 241, 243], "besid": [31, 296], "etc": [31, 50, 89, 92, 93, 135, 169, 260, 295], "did": [31, 89, 92, 93, 126, 162, 163, 234, 243], "fulfil": [31, 225], "oom": [31, 89, 92, 93], "variat": [32, 66, 259], "far": [32, 193], "reliabl": 32, "logic": [32, 45, 177, 257], "revers": [32, 124, 159, 193], "kbottomup": 32, "forc": [32, 142, 162], "advantag": [32, 34], "tough": 32, "simplest": 32, "ask": [32, 180, 293], "chunk": 32, "caution": [32, 51], "deliv": 32, "upsid": 32, "sequenc": [33, 54, 64, 159, 197, 198, 295, 296, 297], "select": [33, 142, 234, 243], "struct": [34, 45, 84, 85, 94, 114, 120], "public": 35, "0xffffffff": [35, 155, 181], "tupl": [35, 38, 43, 64, 81, 123, 124, 125, 126, 142, 162, 163, 175, 186, 187, 193, 221, 262, 263, 264, 276], "tocolor": 35, "frombytes_rgba": 35, "fromcolor": [35, 155], "see": [35, 41, 45, 47, 51, 89, 92, 93, 124, 126, 131, 136, 155, 159, 193, 234, 243, 259, 293, 295, 296], "fitsinbyt": 35, "fa": 35, "makeopaqu": 35, "tobytes_rgba": 35, "vec": [35, 142, 186, 187], "fb": 35, "fg": 35, "fr": [35, 142], "kblack": 35, "kblue": 35, "kcyan": 35, "kdkgrai": 35, "kgrai": 35, "kgreen": 35, "kltgrai": 35, "75": [35, 296], "kmagenta": 35, "kred": 35, "kwhite": 35, "kyellow": 35, "manipul": 36, "kr": 36, "kg": 36, "kb": 36, "ka": 36, "klastenum": 36, "kred_colorchannelflag": 37, "kgreen_colorchannelflag": 37, "kblue_colorchannelflag": 37, "kalpha_colorchannelflag": 37, "kgray_colorchannelflag": 37, "krg_colorchannelflag": 37, "krgb_colorchannelflag": 37, "krgba_colorchannelflag": 37, "pipelin": [38, 296], "stage": 38, "xfermod": [38, 131, 135, 294, 295], "reentrant": 38, "legal": [38, 41, 136, 155, 159, 175, 257, 278], "sever": [38, 45, 257, 295, 296], "deseri": [38, 43, 45, 54, 62, 131, 140, 172, 217, 251, 259], "asacolormatrix": [38, 43], "5x4": [38, 43], "asacolormod": [38, 43], "ascolormod": [38, 43], "filtercolor": [38, 43], "filtercolor4f": [38, 43], "srccolor": [38, 43], "srcc": [38, 43], "dstc": [38, 43], "getflattenabletyp": [38, 43, 54, 62, 131, 140, 172, 217], "flattan": [38, 39, 43, 44, 54, 55, 131, 134, 140, 141, 172, 173, 217, 218], "gettypenam": [38, 43, 54, 62, 131, 140, 172, 217], "drawabl": [38, 43, 62, 131, 140, 172, 181, 182, 217], "makecompos": [38, 43, 172, 296], "serial": [38, 43, 45, 54, 62, 131, 140, 159, 172, 181, 217, 251, 259, 260, 293], "kcolorfilter_typ": [38, 39, 43, 44, 54, 55, 62, 63, 131, 134, 140, 141, 172, 173, 217, 218], "kdrawlooper_typ": [38, 39, 43, 44, 54, 55, 62, 63, 131, 134, 140, 141, 172, 173, 217, 218], "kdrawable_typ": [38, 39, 43, 44, 54, 55, 62, 63, 131, 134, 140, 141, 172, 173, 217, 218], "kimagefilter_typ": [38, 39, 43, 44, 54, 55, 62, 63, 131, 134, 140, 141, 172, 173, 217, 218], "kmaskfilter_typ": [38, 39, 43, 44, 54, 55, 62, 63, 131, 134, 140, 141, 172, 173, 217, 218], "kpatheffect_typ": [38, 39, 43, 44, 54, 55, 62, 63, 131, 134, 140, 141, 172, 173, 217, 218], "compos": [40, 135, 297], "hslamatrix": 40, "rowmajor": 40, "colormatrix": [40, 296], "hsla": 40, "instead": [40, 64, 126, 135, 155, 159, 169, 181, 193, 217, 293, 296], "lerp": [40, 220], "lineartosrgbgamma": 40, "srgbtolineargamma": 40, "arg0": [41, 69, 83, 91, 100, 107, 126, 146, 153, 175, 201, 202, 206, 210, 213, 215, 223, 252, 262, 263, 264, 265, 266], "gammaclosetosrgb": [41, 45, 136], "makealphatyp": [41, 136], "newalphatyp": [41, 136], "incompat": [41, 136, 234, 243], "makecolorspac": [41, 126, 136], "makecolortyp": [41, 136, 234, 243], "newcolortyp": [41, 136], "makelightingfilt": 43, "mul": 43, "add": [43, 53, 69, 71, 95, 123, 149, 153, 156, 157, 159, 160, 162, 169, 181, 186, 265, 266, 278], "argument": [43, 66, 155, 234, 243, 259], "capsul": [45, 59, 86, 145, 225, 226, 227, 228, 229, 234, 235, 243, 244], "deeper": 45, "cm": [45, 142], "iccprofil": 45, "skcm": 45, "makergb": 45, "transferfn": 45, "transferfunct": 45, "toxyz": 45, "matrix3x3": 45, "transfer": [45, 126, 155, 214, 234, 243, 296], "major": [45, 142], "xyz": 45, "makesrgb": [45, 126, 293], "makesrgblinear": [45, 126], "primari": 45, "gamma": [45, 136, 138, 234, 239, 243, 248, 250], "deref": [45, 51, 251, 267], "gammaislinear": 45, "gamuttransformto": 45, "src_to_dst": 45, "hash": 45, "invtransferfn": 45, "fn": 45, "isnumericaltransferfn": 45, "standard": [45, 140, 142, 159, 188, 193, 296], "eg": [45, 126], "pq": 45, "hlg": 45, "issrgb": 45, "littl": [45, 46, 295], "toler": 45, "might": [45, 124, 142, 234, 243, 295], "numer": [45, 159, 169], "white": 45, "d50": 45, "decis": 45, "consid": [45, 89, 92, 93, 124, 181, 193], "2f": 45, "exponenti": [45, 135], "them": [45, 89, 92, 93, 94, 114, 126, 155, 186, 187, 214, 234, 243, 257, 296, 297], "makecolorspin": 45, "gbr": 45, "brg": 45, "testabl": 45, "makelineargamma": 45, "gamut": [45, 155], "term": [45, 94], "makesrgbgamma": 45, "refcntgreaterthan": [45, 51, 251, 267], "skdata": [45, 196], "toprofil": 45, "toxyzd50": 45, "toxyzd50hash": 45, "veri": [45, 159, 193, 196], "risk": 45, "collis": 45, "gabcdef": 45, "transferfnhash": 45, "writetomemori": [45, 159, 188, 196], "krgb_888x_colortyp": 46, "krgba_1010102_colortyp": 46, "kbgra_1010102_colortyp": 46, "krgb_101010x_colortyp": 46, "kbgr_101010x_colortyp": 46, "grayscal": [46, 120, 122, 296], "level": [46, 53, 64, 89, 92, 93, 101, 126, 146, 147, 185, 295], "krgba_f16norm_colortyp": 46, "64": [46, 95, 136, 185, 296], "krgba_f32_colortyp": 46, "128": [46, 95, 295, 296], "kr8g8_unorm_colortyp": 46, "ka16_float_colortyp": 46, "kr16g16_float_colortyp": 46, "ka16_unorm_colortyp": 46, "kr16g16_unorm_colortyp": 46, "endian": [46, 259], "uint16_t": 46, "kr16g16b16a16_unorm_colortyp": 46, "geometr": [47, 142], "ala": 47, "thought": [47, 142], "variant": [47, 126, 234, 243], "wai": [47, 131, 293, 295], "kunion": 47, "kreversediffer": 47, "klast": [47, 88, 96, 120, 121, 126, 129, 276, 277], "sharp": [48, 155, 188, 296], "treatment": [48, 296], "catmullrom": 49, "mitchel": 49, "phase": [50, 166], "dash": [50, 155, 166, 172], "off": [50, 126, 153], "55": 50, "85": 50, "would": [50, 131, 153, 180, 259], "becaus": [50, 89, 92, 93], "30": [50, 88, 296, 297], "mod": [50, 166], "life": [51, 66], "dataref": 51, "eventu": [51, 225], "makefromfilenam": [51, 126, 296], "file": [51, 53, 59, 73, 126, 145, 153, 225, 226, 227, 228, 229, 259, 292, 293, 295], "makesubset": [51, 126], "makeuniniti": 51, "writable_data": 51, "makewithcopi": [51, 126], "makewithoutcopi": 51, "outliv": 51, "suitabl": [51, 234, 243], "buf": 51, "cast": [51, 124, 159, 169, 186], "copyrang": 51, "clamp": [51, 135, 250, 296], "memcmp": 51, "isempti": [51, 124, 125, 136, 159, 188, 193, 196, 221, 230], "WITH": 51, "refcnt": [51, 64, 155, 182], "precaut": 51, "seglength": 52, "seedassist": 52, "break": 52, "randomli": [52, 296], "endpoint": 52, "deviat": [52, 140], "seed": [52, 180], "random": 52, "want": [52, 54, 195, 217, 231, 234, 243, 295, 296], "behaviour": 52, "high": [53, 126, 295], "doc": 53, "draw_my_cont": 53, "endpag": 53, "syntax": 53, "filewstream": [53, 56, 148, 214, 271, 293], "makedocu": [53, 151, 293], "480": [53, 214, 234, 293], "640": [53, 214, 234, 293, 296], "trust": 53, "go": [53, 89, 92, 93, 195], "longer": [53, 89, 92, 93, 126, 217, 234, 243], "automat": [53, 126], "anonym": 53, "namespac": 53, "pyautodocumentpag": 53, "id": [54, 89, 92, 93, 99, 103, 104, 126, 151, 154, 254, 259], "whenev": 54, "savelevel": 54, "extern": [54, 234, 243, 272, 279, 295], "presum": 54, "render": [54, 73, 84, 85, 89, 91, 92, 93, 100, 107, 135, 142, 153, 159, 180, 215, 234, 241, 243, 251, 292, 293], "thing": [54, 126], "well": [54, 114, 126, 172, 181, 295], "notifydrawingchang": 54, "newpicturesnapshot": [54, 182], "sizeofpackeduint": [56, 60, 148, 271], "byteswritten": [56, 60, 148, 271], "wstream": [56, 60, 148, 151, 159, 214], "copyto": 56, "copytoandreset": 56, "detachasdata": 56, "detachasstream": 56, "streamasset": [56, 59, 145, 225, 227, 228, 229], "reader": 56, "reimplement": [56, 59, 60, 145, 148, 225, 226, 227, 228, 229, 271], "nullwstream": [56, 60, 271], "newlin": [56, 60, 148, 271], "padtoalign4": 56, "prependtoandreset": 56, "prepend": [56, 230], "write16": [56, 60, 148, 271], "write32": [56, 60, 148, 271], "write8": [56, 60, 148, 271], "writebigdecastext": [56, 60, 148, 271], "mindigit": [56, 60, 148, 230, 271], "writebool": [56, 60, 148, 271], "writedecastext": [56, 60, 148, 271], "writehexastext": [56, 60, 148, 271], "writepackeduint": [56, 60, 148, 271], "writescalar": [56, 60, 148, 271], "writescalarastext": [56, 60, 148, 271], "writestream": [56, 60, 148, 271], "writetext": [56, 60, 148, 271], "writetoandreset": 56, "writetostream": 56, "kbmp": [57, 126], "kgif": [57, 126], "kico": [57, 126], "kjpeg": [57, 126], "kpng": [57, 126, 293, 295], "kwbmp": 57, "kpkm": 57, "kktx": 57, "kastc": 57, "kdng": 57, "kheif": 57, "www": [58, 180, 293], "org": [58, 118, 180, 293], "exif2": 58, "ktopleft_encodedorigin": [58, 272], "ktopright_encodedorigin": 58, "kbottomright_encodedorigin": 58, "kbottomleft_encodedorigin": 58, "klefttop_encodedorigin": 58, "krighttop_encodedorigin": 58, "krightbottom_encodedorigin": 58, "kleftbottom_encodedorigin": 58, "kdefault_encodedorigin": 58, "klast_encodedorigin": 58, "makefromfil": [59, 73, 145, 225, 226, 227, 228, 229, 259, 292], "skstreamasset": [59, 145, 225, 226, 227, 228, 229], "duplic": [59, 145, 225, 226, 227, 228, 229, 297], "streamseek": [59, 145, 225, 226, 227, 228], "fork": [59, 145, 225, 226, 227, 228, 229], "getlength": [59, 145, 175, 225, 226, 227, 228, 229], "memorystream": [59, 225, 226, 227, 228, 229], "getmemorybas": [59, 145, 225, 226, 227, 228, 229], "streammemori": [59, 145, 225, 226, 228, 229], "getposit": [59, 145, 225, 226, 227, 228, 229], "haslength": [59, 145, 225, 226, 227, 228, 229], "hasposit": [59, 145, 225, 226, 227, 228, 229], "isatend": [59, 145, 225, 226, 227, 228, 229], "earli": [59, 145, 225, 226, 227, 228, 229], "late": [59, 145, 225, 226, 227, 228, 229], "unsuccess": [59, 145, 225, 226, 227, 228, 229], "isvalid": [59, 60, 83, 84, 85, 87, 120, 126, 159, 188, 234, 240, 243, 276, 279], "seek": [59, 126, 145, 225, 226, 227, 228, 229], "peek": [59, 145, 163, 225, 226, 227, 228, 229], "min": [59, 76, 142, 145, 225, 226, 227, 228, 229, 250, 296], "peekabl": [59, 145, 225, 226, 227, 228, 229], "regardless": [59, 89, 92, 93, 145, 225, 226, 227, 228, 229, 234, 243], "readbool": [59, 145, 225, 226, 227, 228, 229], "readpackeduint": [59, 145, 225, 226, 227, 228, 229], "reads16": [59, 145, 225, 226, 227, 228, 229], "reads32": [59, 145, 225, 226, 227, 228, 229], "reads8": [59, 145, 225, 226, 227, 228, 229], "readscalar": [59, 145, 225, 226, 227, 228, 229], "readu16": [59, 145, 225, 226, 227, 228, 229], "readu32": [59, 145, 225, 226, 227, 228, 229], "readu8": [59, 145, 225, 226, 227, 228, 229], "streamrewind": [59, 145, 225, 226, 227, 229], "fsync": 60, "dynamicmemorywstream": [60, 148, 271], "knearest": [61, 147], "nearest": [61, 126, 147, 185, 257], "neighbor": [61, 126, 185], "klinear": [61, 147, 234, 239, 243, 248], "interpor": 61, "2x2": 61, "bilinear": 61, "flatten": 62, "transport": 62, "typograph": 64, "scalex": [64, 142], "skewx": [64, 142], "emul": 64, "condens": 64, "expand": [64, 274], "obliqu": 64, "shear": 64, "counttext": 64, "kutf8": [64, 251, 254, 255], "kutf16": [64, 251, 255], "kutf32": [64, 251, 255], "unicod": [64, 259, 284], "codepoint": 64, "dump": [64, 142, 159, 188, 193], "skdebugf": 64, "aid": 64, "retriev": [64, 89, 91, 92, 93, 100, 107, 126, 136, 155, 234, 243, 272], "getedg": 64, "gethint": 64, "fonthint": 64, "outlin": [64, 155, 159, 196], "adjust": [64, 124, 155, 188, 259], "getmetr": 64, "skfontmetr": 64, "fontmetr": 64, "getpath": 64, "glyphid": [64, 259], "degener": [64, 142, 159, 162, 187], "getpo": 64, "getscalex": [64, 142], "getsiz": 64, "getskewx": [64, 142], "getspac": 64, "recommend": [64, 76, 293], "metric": [64, 71, 72, 126, 159, 254], "descent": 64, "ascent": 64, "lead": [64, 286], "gettypefac": 64, "previous": [64, 89, 92, 93, 155, 181, 259, 295], "getwidth": [64, 231], "getwidthsbound": 64, "getxpo": 64, "isbaselinesnap": 64, "baselin": [64, 71, 254], "snap": [64, 182], "isembeddedbitmap": 64, "engin": [64, 241], "isembolden": 64, "isforceautohint": 64, "freetyp": [64, 73, 292], "islinearmetr": 64, "linearli": [64, 89, 92, 93], "scalabl": 64, "issubpixel": 64, "sub": [64, 234, 243, 275], "makewiths": 64, "infinit": [64, 188, 193], "nan": [64, 142, 186, 193, 257], "measuretext": [64, 296], "reftypefac": 64, "setbaselinesnap": 64, "baselinesnap": 64, "setedg": 64, "setembeddedbitmap": 64, "embeddedbitmap": 64, "setembolden": 64, "embolden": 64, "setforceautohint": 64, "forceautohint": 64, "sethint": 64, "hintinglevel": 64, "setlinearmetr": 64, "linearmetr": 64, "setscalex": [64, 142], "setsiz": 64, "textsiz": [64, 259], "setskewx": [64, 142], "setsubpixel": 64, "settypefac": 64, "tf": 64, "texttoglyph": [64, 296], "unichartoglyph": [64, 259], "uni": 64, "unicharstoglyph": [64, 259], "kalia": [64, 65], "kantialia": [64, 65], "ksubpixelantialia": [64, 65], "getcollectionindex": 66, "getvariationdesignposit": [66, 259], "variationposit": [66, 259], "setcollectionindex": 66, "collectionindex": 66, "ttc": [66, 73, 292], "dfont": 66, "cff": 66, "cid": 66, "pfr": 66, "t42": 66, "t1": 66, "fon": 66, "collect": [66, 155], "setvariationdesignposit": 66, "coordinatecount": [67, 259], "constructor": [69, 114, 126, 142, 159, 196, 197, 200, 234, 243, 265, 266, 295], "append": [69, 159, 160, 169, 196, 230, 265, 266], "item": [69, 265, 266], "l": [69, 124, 142, 193, 265, 266], "pop": [69, 265, 266, 284], "knone": [70, 112, 126, 129, 147], "kslight": 70, "knormal": [70, 257, 258], "kfull": 70, "consist": [71, 136, 159, 251], "hasstrikeoutposit": 71, "strikeout": [71, 72], "underlin": [71, 72], "hasstrikeoutthick": 71, "hasunderlineposit": 71, "hasunderlinethick": 71, "fascent": 71, "favgcharwidth": 71, "averag": [71, 142, 159, 193], "unknown": [71, 142, 183], "fbottom": [71, 124, 142, 188, 193], "greatest": 71, "below": [71, 250], "fcapheight": 71, "letter": 71, "fdescent": 71, "fflag": 71, "fontmetricsflag": 71, "flead": 71, "fmaxcharwidth": 71, "fstrikeoutposit": [71, 72], "fstrikeoutthick": [71, 72], "ftop": [71, 124, 142, 188, 193], "funderlineposit": [71, 72], "funderlinethick": [71, 72], "fxheight": 71, "fxmax": 71, "fxmin": 71, "kstrikeoutpositionisvalid_flag": [71, 72], "kstrikeoutthicknessisvalid_flag": [71, 72], "kunderlinepositionisvalid_flag": [71, 72], "kunderlinethicknessisvalid_flag": [71, 72], "certain": 72, "print": [73, 123, 124, 159, 162, 186, 187, 193, 251, 252], "familynam": [73, 259, 292], "matchfamilystyl": [73, 292], "fontstyl": [73, 81, 259, 291, 292], "new_custom_directori": [73, 292], "dir": [73, 159, 292], "scan": [73, 196, 200, 292], "directori": [73, 292], "new_custom_empti": [73, 292], "filenam": [73, 292], "onefontmgr": [73, 292], "refdefault": [73, 292], "countfamili": [73, 292], "createstyleset": [73, 292], "fontstyleset": [73, 292], "getfamilynam": [73, 259, 292], "legacymaketypefac": [73, 292], "ttcindex": [73, 292], "recogn": [73, 126, 159, 292], "matchfamili": [73, 292], "famili": [73, 114, 259, 291, 292], "hidden": [73, 76, 142, 292], "auto": [73, 292], "activ": [73, 107, 155, 182, 292], "good": [73, 89, 92, 93, 292], "matchfamilystylecharact": [73, 292], "bcp47": [73, 292], "iso": [73, 292], "639": [73, 292], "15924": [73, 292], "3166": [73, 292], "fine": [73, 292], "signific": [73, 292], "bcp47count": [73, 292], "ishidden": 76, "sethidden": 76, "def": [76, 293, 296], "max": [76, 135, 142, 159, 250, 296], "tag": [76, 126, 153, 259], "identifi": [76, 126, 159, 181, 234, 243, 251], "weight": [76, 77, 159, 162, 163, 169, 296], "slant": [76, 77], "ital": [76, 77], "boldital": 77, "kblack_weight": [77, 79], "900": [77, 79], "kbold_weight": [77, 79], "700": [77, 79], "kcondensed_width": [77, 80], "kexpanded_width": [77, 80], "kextrablack_weight": [77, 79], "1000": [77, 79], "kextrabold_weight": [77, 79], "800": [77, 79], "kextracondensed_width": [77, 80], "kextraexpanded_width": [77, 80], "kextralight_weight": [77, 79], "200": [77, 79, 293], "kinvisible_weight": [77, 79], "kitalic_sl": [77, 78], "klight_weight": [77, 79], "300": [77, 79], "kmedium_weight": [77, 79], "500": [77, 79], "knormal_weight": [77, 79], "400": [77, 79], "knormal_width": [77, 80], "koblique_sl": [77, 78], "ksemibold_weight": [77, 79], "600": [77, 79], "ksemicondensed_width": [77, 80], "ksemiexpanded_width": [77, 80], "kthin_weight": [77, 79], "kultracondensed_width": [77, 80], "kultraexpanded_width": [77, 80], "kupright_sl": [77, 78], "createempti": 81, "createtypefac": 81, "getstyl": [81, 155, 231], "matchstyl": 81, "pattern": [81, 159, 188, 193, 296], "3d": [82, 89, 91, 92, 93, 100, 107, 187, 234, 243, 281], "ganesh": [82, 293], "kopengl": [82, 89, 92, 93], "kvulkan": [82, 281], "kmetal": [82, 281], "kdirect3d": 82, "kmock": [82, 281], "mock": [82, 84, 85], "backend": [82, 83, 84, 85, 87, 89, 91, 92, 93, 94, 95, 100, 107, 126, 234, 243, 293], "unit": [82, 89, 92, 93, 151, 186, 187, 259], "overhead": 82, "kopengl_grbackend": 82, "grbackend": 82, "who": [82, 131, 153, 182], "referenc": [82, 126, 155, 181, 185, 259, 296], "makegl": [83, 84, 85, 89, 92, 93, 293], "makemock": [83, 89, 92, 93], "grcolortyp": [83, 103, 104], "compress": [83, 89, 92, 93, 126, 142, 191, 295], "sktexturecompressiontyp": [83, 89, 91, 92, 93, 100, 104, 107], "isstencilformat": 83, "makevk": [83, 86], "vkformat": 83, "willusedrmformatmodifi": 83, "ycbcrinfo": 83, "skgpu": [83, 87, 89, 92, 93, 126, 234, 243], "vulkanycbcrconversioninfo": 83, "asglformat": 83, "grglformat": 83, "asmockcolortyp": 83, "asmockcompressiontyp": 83, "asvkformat": 83, "grbackendapi": [83, 84, 85, 87, 89, 91, 92, 93, 100, 107], "channelmask": 83, "getvkycbcrconversioninfo": 83, "maketexture2d": 83, "texturetyp": 83, "grtexturetyp": 83, "samplecnt": [84, 85, 234, 243, 293], "stencilbit": [84, 85, 293], "glinfo": [84, 85, 87], "grglframebufferinfo": [84, 85, 293], "vkinfo": [84, 85, 87], "grvkimageinfo": [84, 85, 87, 234, 243], "mockinfo": [84, 85, 87], "grmockrendertargetinfo": [84, 85], "getbackendformat": [84, 85, 87, 103, 104], "grbackendformat": [84, 85, 87, 89, 91, 92, 93, 100, 103, 104, 107, 234, 240, 243], "getglframebufferinfo": [84, 85], "gl": [84, 85, 89, 92, 93, 94, 95, 142, 234, 243, 293], "snapshot": [84, 85, 169], "getmockrendertargetinfo": [84, 85], "grmocktextureinfo": [84, 85, 87], "getvkimageinfo": [84, 85, 87], "fimagelayout": [84, 85], "layout": [84, 85, 87, 89, 92, 93, 234, 243, 283], "isframebufferonli": [84, 85], "isprotect": [84, 85, 87, 89, 92, 93, 126, 234, 243], "setvkimagelayout": [84, 85, 87], "vkimagelayout": [84, 85, 87, 89, 92, 93], "anytim": [84, 85, 151, 182, 296], "vkimag": [84, 85, 89, 92, 93, 234, 243], "captur": [84, 85, 234, 243], "notifi": [84, 85, 89, 92, 93, 94, 234, 243], "semaphor": [86, 89, 92, 93, 94, 126, 234, 243], "isiniti": 86, "vksemaphor": 86, "mipmap": [87, 89, 92, 93, 126, 147, 216], "grmipmap": [87, 89, 92, 93, 126], "grgltextureinfo": 87, "getgltextureinfo": 87, "getmocktextureinfo": 87, "gltextureparametersmodifi": 87, "hasmipmap": [87, 126], "issametextur": 87, "setmutablest": 87, "mutabletexturest": [87, 89, 92, 93, 234, 243], "kunknown": [88, 96, 183, 272, 273, 275], "kalpha_8": 88, "kbgr_565": 88, "kabgr_4444": 88, "krgba_8888": 88, "krgba_8888_srgb": 88, "krgb_888x": 88, "krg_88": 88, "kbgra_8888": 88, "krgba_1010102": 88, "kgray_8": 88, "kalpha_f16": 88, "krgba_f16": 88, "krgba_f16_clamp": 88, "krgba_f32": 88, "kalpha_16": 88, "krg_1616": 88, "krg_f16": 88, "krgba_16161616": 88, "kalpha_8xxx": 88, "kalpha_f32xxx": 88, "kgray_8xxx": 88, "krgb_888": 88, "kr_8": 88, "kr_16": 88, "kr_f16": 88, "kgray_f16": 88, "33": 88, "35": 88, "grdirectcontext": [89, 91, 94, 100, 107, 126, 293], "computeimages": [89, 92, 93], "skimag": [89, 92, 93, 126, 146], "usenextpow2": [89, 92, 93], "grglinterfac": [89, 92, 93], "grcontextopt": [89, 92, 93], "context": [89, 91, 92, 93, 95, 100, 107, 118, 126, 234, 243, 251, 293, 295], "grglmakenativeinterfac": [89, 92, 93], "mockopt": [89, 92, 93], "grmockopt": [89, 92, 93], "makevulkan": [89, 92, 93], "backendcontext": [89, 92, 93, 114], "vulkanbackendcontext": [89, 92, 93], "vkqueue": [89, 92, 93], "vkdevic": [89, 92, 93, 114], "vkinstanc": [89, 92, 93], "kept": [89, 92, 93], "aliv": [89, 92, 93, 234, 243], "destroi": [89, 92, 93, 114, 234, 243], "abandoncontext": [89, 92, 93, 293], "abandon": [89, 92, 93, 107, 234, 243], "resourc": [89, 92, 93, 126, 295, 296], "assum": [89, 92, 93, 126, 136, 139, 155, 276, 293], "usabl": [89, 92, 93], "you": [89, 92, 93, 122, 231, 234, 243, 293, 295, 296], "thu": [89, 92, 93, 124, 234, 243, 295], "now": [89, 92, 93, 159, 296], "further": [89, 92, 93, 234, 243], "gotten": [89, 92, 93], "unrecoverarbl": [89, 92, 93], "ve": [89, 92, 93], "vk_error_device_lost": [89, 92, 93], "asdirectcontext": [89, 91, 92, 93, 100, 107], "grcontext_bas": [89, 92, 93, 100, 107], "downcast": [89, 91, 92, 93, 100, 107], "checkasyncworkcomplet": [89, 92, 93], "asynchron": [89, 92, 93, 126, 234, 243], "relat": [89, 92, 93, 251, 293], "callback": [89, 92, 93, 181, 234, 243], "colortypesupportedasimag": [89, 92, 93, 107], "colortypesupportedassurfac": [89, 92, 93, 107], "msaa": [89, 92, 93, 107, 234, 243], "maxsurfacesamplecountforcolortyp": [89, 92, 93, 107], "compressedbackendformat": [89, 91, 92, 93, 100, 107, 126], "compressiontyp": [89, 92, 93, 104, 126], "createcompressedsbackendtextur": [89, 92, 93], "createbackendtextur": [89, 91, 92, 93, 100, 107], "backendformat": [89, 92, 93, 240], "grrender": [89, 91, 92, 93, 100, 107], "grprotect": [89, 92, 93, 126], "label": [89, 92, 93], "grbackendtextur": [89, 92, 93, 116, 126, 234, 243], "vk_image_layout_undefin": [89, 92, 93], "finishedproc": [89, 92, 93, 94, 234, 243], "upload": [89, 92, 93, 126], "submit": [89, 92, 93, 94, 126, 159, 193, 234, 243], "send": [89, 92, 93, 94, 214], "vk_image_layout_shader_read_only_optim": [89, 92, 93], "srcdata": [89, 92, 93], "defaultbackendformat": [89, 91, 92, 93, 100, 107], "numlevel": [89, 92, 93], "miplevel": [89, 92, 93], "pleas": [89, 92, 93, 234, 243], "skmipmap": [89, 92, 93], "computelevels": [89, 92, 93], "computelevelcount": [89, 92, 93], "createcompressedbackendtextur": [89, 92, 93], "surfacecharacter": [89, 91, 92, 93, 100, 107, 234, 243], "deletebackendtextur": [89, 92, 93], "grflushinfo": [89, 92, 93, 126, 234, 243], "grsemaphoressubmit": [89, 92, 93, 126, 234, 243], "sent": [89, 92, 93, 94, 153, 181, 234, 243], "glflush": [89, 92, 93, 234, 243], "submiss": [89, 92, 93, 94, 234, 243], "occur": [89, 92, 93, 131, 234, 239, 243, 248, 259], "metal": [89, 92, 93, 234, 243], "d3d": [89, 92, 93, 234, 243], "dawn": [89, 92, 93, 234, 243], "grbackendsemaphor": [89, 92, 93, 94, 234, 243], "wait": [89, 92, 93, 94, 234, 243], "signal": [89, 92, 93, 94, 182, 234, 243], "regardleess": [89, 92, 93, 234, 243], "emphas": [89, 92, 93, 234, 243], "flushandsubmit": [89, 92, 93, 126, 234, 243, 293], "grsynccpu": [89, 92, 93, 234, 243], "freegpuresourc": [89, 92, 93], "pressur": [89, 92, 93], "getresourcecachelimit": [89, 92, 93], "getresourcecachepurgeablebyt": [89, 92, 93], "consum": [89, 92, 93], "purgeabl": [89, 92, 93], "unlock": [89, 92, 93], "getresourcecacheusag": [89, 92, 93], "resourcecount": [89, 92, 93], "maxresourcebyt": [89, 92, 93], "usag": [89, 92, 93, 126, 234, 243, 272], "held": [89, 92, 93, 114], "video": [89, 92, 93], "maxrendertargets": [89, 92, 93, 107], "maxtextures": [89, 92, 93, 107], "glgeterror": [89, 92, 93], "swallow": [89, 92, 93], "gl_out_of_memori": [89, 92, 93], "therefor": [89, 92, 93, 94, 182], "hide": [89, 92, 93], "advis": [89, 92, 93], "fskipglerrorcheck": [89, 92, 93], "That": [89, 92, 93, 293], "ever": [89, 92, 93], "vk_error_out_of_host_memori": [89, 92, 93], "vk_error_out_of_device_memori": [89, 92, 93], "precompileshad": [89, 92, 93], "purgeresourcesnotusedinm": [89, 92, 93], "msnotus": [89, 92, 93], "datetim": [89, 92, 93], "timedelta": [89, 92, 93], "purgeunlockedresourc": [89, 92, 93], "maxbytestopurg": [89, 92, 93], "preferscratchresourc": [89, 92, 93], "purg": [89, 92, 93, 126], "reach": [89, 92, 93], "polici": [89, 92, 93], "lru": [89, 92, 93], "overridden": [89, 92, 93], "prefer": [89, 92, 93, 291], "scratch": [89, 92, 93], "opt": [89, 92, 93], "grpurgeresourceopt": [89, 92, 93], "intend": [89, 92, 93, 272], "app": [89, 92, 93], "suspend": [89, 92, 93], "kscratchresourcesonli": [89, 92, 93, 106], "enforc": [89, 92, 93, 180], "budget": [89, 92, 93, 126, 234, 243, 293], "releaseresourcesandabandoncontext": [89, 92, 93], "yet": [89, 92, 93, 135], "cleanup": [89, 92, 93], "perhap": [89, 92, 93], "ed": [89, 92, 93, 259], "elsewher": [89, 92, 93], "resetcontext": [89, 92, 93], "4294967295": [89, 92, 93], "whatev": [89, 92, 93, 142, 259, 295], "resend": [89, 92, 93], "shouldn": [89, 92, 93], "frequent": [89, 92, 93], "resetgltexturebind": [89, 92, 93], "unmodifi": [89, 92, 93, 126, 159, 196], "twice": [89, 92, 93, 159, 251, 259], "interven": [89, 92, 93, 175], "setbackendrendertargetst": [89, 92, 93], "grbackendrendertarget": [89, 92, 93, 234, 243, 293], "mutablest": [89, 92, 93], "previousst": [89, 92, 93], "setbackendtexturest": [89, 92, 93], "updat": [89, 92, 93, 142, 159, 182, 278], "rendertarget": [89, 92, 93], "grbackendsurfacemutablest": [89, 92, 93, 234, 243], "awar": [89, 92, 93], "updatebackendtextur": [89, 92, 93], "queuefamilyindex": [89, 92, 93, 114], "vk_queue_family_ignor": [89, 92, 93, 116], "tell": [89, 92, 93], "setresourcecachelimit": [89, 92, 93], "storevkpipelinecachedata": [89, 92, 93], "outstand": [89, 92, 93, 126], "un": [89, 92, 93], "synchron": [89, 92, 93, 225, 234, 243], "try": [89, 92, 93, 122, 185, 225, 293], "synccpu": [89, 92, 93], "supportsdistancefieldtext": [89, 92, 93], "threadsafeproxi": [89, 91, 92, 93, 100, 107], "grcontextthreadsafeproxi": [89, 91, 92, 93, 100, 107], "backendtextur": [89, 92, 93, 126, 234, 243], "mip": [89, 92, 93, 101, 126, 146, 185, 234, 243], "deletesemaphoresafterwait": [89, 92, 93], "arg1": [91, 100, 126, 175, 201, 202, 206, 213, 215, 223, 262, 263, 264], "grcontext": [91, 92, 93, 95, 100, 126, 234, 243], "fnumsemaphor": 94, "themselv": [94, 182], "soon": 94, "proc": [94, 126, 251], "submittedproc": 94, "possibli": [94, 142, 175, 234, 243, 277], "reattempt": 94, "realli": 94, "main": 94, "d": [95, 142, 155], "krendertarget_grglbackendst": 95, "ktexturebinding_grglbackendst": 95, "kview_grglbackendst": 95, "kblend_grglbackendst": 95, "kmsaaenable_grglbackendst": 95, "kvertex_grglbackendst": 95, "kstencil_grglbackendst": 95, "kpixelstore_grglbackendst": 95, "kprogram_grglbackendst": 95, "kfixedfunction_grglbackendst": 95, "kmisc_grglbackendst": 95, "kall_grglbackendst": 95, "65535": 95, "512": [95, 180, 295, 296], "1024": 95, "256": [95, 295, 296], "krgba8": 96, "kr8": 96, "kalpha8": 96, "kluminance8": 96, "kbgra8": 96, "krgb565": 96, "krgba16f": 96, "kr16f": 96, "krgb8": 96, "krg8": 96, "krgb10_a2": 96, "krgba4": 96, "ksrgb8_alpha8": 96, "kcompressed_etc1_rgb8": 96, "kcompressed_rgb8_etc2": 96, "kcompressed_rgb8_bc1": 96, "kcompressed_rgba8_bc1": 96, "kr16": 96, "krg16": 96, "krgba16": 96, "krg16f": 96, "kluminance16f": 96, "fboid": 97, "ffboid": 97, "fformat": [97, 99], "makeegl": 98, "makeglx": 98, "fid": 99, "ftarget": 99, "sai": 101, "kallresourc": 106, "disconnect": 107, "statu": 107, "transit": [107, 114, 155, 234, 243], "ktopleft_grsurfaceorigin": 110, "kbottomleft_grsurfaceorigin": [110, 234, 243, 293], "k2d": 112, "krectangl": 112, "kextern": 112, "grvkgpu": 114, "assumpt": 114, "queue": [114, 116, 126, 234, 243], "commandpool": 114, "grbackendobject": 114, "hand": [114, 131, 139], "u": [114, 272, 273, 275, 277, 280], "manual": 114, "grbackendrendendertarget": 116, "fcurrentqueuefamili": 116, "vk_queue_family_extern": 116, "vk_queue_family_foreign_ext": 116, "fsharingmod": 116, "vk_sharing_mode_exclus": 116, "falloc": 116, "flevelcount": 116, "fprotect": 116, "fycbcrconversioninfo": 116, "makelinear": [118, 296], "gradient": [118, 155, 217], "scalar": [118, 142, 159, 186, 188, 193, 251, 254], "evenli": 118, "intermedi": [118, 234, 243], "tile": [118, 126, 135, 180, 181, 217, 234, 243], "makeradi": [118, 296], "radial": 118, "makesweep": [118, 296], "endangl": 118, "conic": [118, 159, 162, 163, 169], "html": [118, 159, 169, 180], "w3": [118, 180], "html5": 118, "2dcontext": 118, "dom": 118, "createradialgradi": 118, "maketwopointcon": [118, 296], "startradiu": [118, 296], "endradiu": [118, 296], "kinterpolatecolorsinpremul_flag": [118, 119], "highcontrastfilt": 120, "low": [120, 122, 126, 185, 295], "vision": [120, 122], "invertstyl": 120, "fcontrast": 120, "fgrayscal": 120, "finvertstyl": 120, "kinvertbright": [120, 121], "kinvertlight": [120, 121], "knoinvert": [120, 121], "highcontrastconfig": 122, "hsl": 122, "iszero": [123, 125, 186, 221], "180": [124, 159, 169, 193, 295, 296], "120": [124, 126, 193, 296, 297], "conveni": [124, 185, 193], "special": [124, 193, 296], "makeltrb": [124, 193], "sort": [124, 188, 193, 197, 198, 225], "fleft": [124, 142, 188, 193], "fright": [124, 142, 159, 188, 193], "makes": [124, 193], "makewh": [124, 136, 193], "makexywh": [124, 193, 296], "dl": [124, 142], "dt": 124, "dr": 124, "db": 124, "narrow": [124, 186, 193], "widen": 124, "shrink": 124, "lengthen": 124, "containsnoemptycheck": 124, "span": [124, 186, 188, 193, 200], "sign": [124, 136, 174, 186], "height64": 124, "safer": 124, "overflow": [124, 142, 193, 272, 276], "calcul": [124, 135, 257], "int64_t": 124, "inset": [124, 135, 188, 193], "wider": [124, 193], "shorter": [124, 193], "taller": [124, 193], "isempty64": 124, "width64": 124, "expans": [124, 193], "makeinset": [124, 193], "symmetr": [124, 193], "makeoffset": [124, 188, 193], "upward": [124, 193], "downward": [124, 193], "makeoutset": [124, 193], "makesort": [124, 193], "delta": [124, 193], "offsetto": [124, 193], "newx": [124, 193], "newi": [124, 193], "setempti": [124, 125, 188, 193, 196, 221], "setltrb": [124, 193], "setwh": [124, 193], "setxywh": [124, 193], "topleft": 124, "iff": [125, 217, 221], "yuv_colorspac": 126, "heif": 126, "ico": 126, "jpeg": [126, 153], "wbmp": 126, "webp": 126, "resiz": [126, 230], "jpg": [126, 296], "import": [126, 293, 295, 296], "fromarrai": [126, 295], "frombyt": [126, 295], "makebackendtexturefromimag": 126, "singli": 126, "makecrosscontextfrompixmap": 126, "buildmip": 126, "limittomaxtextures": 126, "group": 126, "dstcolorspac": 126, "downscal": 126, "makefromadoptedtextur": 126, "grrecordingcontext": [126, 234, 243], "grsurfaceorigin": [126, 234, 243], "makefrombitmap": 126, "shareabl": 126, "makefromcompressedtextur": 126, "character": [126, 234, 243], "natur": 126, "etc1": 126, "usual": [126, 131, 180], "seen": 126, "makefromencod": [126, 296], "deferr": 126, "re": [126, 175], "makefrompictur": 126, "skpictur": [126, 135], "bitdepth": 126, "ku8": [126, 127], "makefromrast": 126, "makefromtextur": 126, "makefromyuvapixmap": 126, "imagecolorspac": 126, "yuvainfo": [126, 276, 278, 279], "yuva": [126, 273, 276], "silent": 126, "makerastercopi": 126, "makerasterdata": 126, "makerasterfromcompress": 126, "decompress": 126, "maketexturefromcompress": 126, "doesn": 126, "drm": 126, "protect": [126, 234, 243], "aslegacybitmap": 126, "legacybitmapmod": 126, "kro_legacybitmapmod": [126, 130], "capabl": [126, 234, 243], "receiv": [126, 135, 159, 181, 225, 293], "alphattyp": 126, "rais": [126, 181, 293], "encodetodata": 126, "qualiti": [126, 135, 153, 234, 243], "sk_encode_jpeg": 126, "sk_encode_png": 126, "sk_encode_webp": 126, "sk_build_for_mac": 126, "sk_build_for_io": 126, "trade": [126, 153], "miss": 126, "promis": 126, "cull": [126, 181, 182], "getbackendtextur": [126, 234, 243], "flushpendinggrcontextio": 126, "isalphaonli": 126, "islazygener": 126, "servic": 126, "demand": 126, "istextureback": 126, "lazi": 126, "makecolortypeandcolorspac": 126, "targetcolortyp": 126, "targetcolorspac": 126, "experiment": [126, 293], "makenontextureimag": 126, "makerasterimag": 126, "cachinghint": 126, "kallow_cachinghint": [126, 128], "retain": [126, 142, 153, 159, 234, 243, 279], "kdisallow_cachinghint": [126, 128], "makerawshad": 126, "materi": 126, "properti": [126, 188, 234, 241, 243], "rough": 126, "heightmap": 126, "pure": 126, "programm": 126, "skruntimeeffect": [126, 203, 223], "taken": [126, 231], "maketextureimag": 126, "newli": [126, 151], "makewithfilt": 126, "skimagefilt": [126, 155], "clipbound": 126, "outsubset": 126, "process": [126, 135, 142, 153, 162, 181, 234, 243], "reus": [126, 159, 254], "fp": [126, 142], "shortcut": 126, "hasattr": 126, "refencodeddata": 126, "reinterpretcolorspac": 126, "newcolorspac": 126, "none_filterqu": [126, 185], "fastest": [126, 185], "klow_filterqu": [126, 185], "bilerp": [126, 185], "kmedium_filterqu": [126, 155, 185], "khigh_filterqu": [126, 185], "slowest": [126, 185], "bicub": [126, 185], "wb": 126, "f": [126, 142, 296], "scalepixel": [126, 185], "uniqueid": [126, 181, 251, 259, 267], "withdefaultmipmap": 126, "attach": [126, 159, 293], "kbc1_rgb8_unorm": [126, 129], "kbc1_rgba8_unorm": [126, 129], "ketc2_rgb8_unorm": [126, 129], "kf16": [126, 127], "offscreen": [131, 295], "blur": [131, 135, 140, 155], "ax": [131, 135, 142, 159, 169, 191, 193, 196, 259], "achiev": 131, "unrot": 131, "easili": 131, "asacolorfilt": 131, "ascolorfilt": 131, "cancomputefastbound": [131, 155], "computefastbound": [131, 155], "countinput": 131, "filterbound": 131, "mapdirect": 131, "inputrect": 131, "forward": 131, "backward": 131, "dag": [131, 135], "kforward_mapdirect": [131, 133], "touch": [131, 159, 169], "kreverse_mapdirect": [131, 133], "temp": 131, "real": 131, "answer": [131, 136], "krevers": 131, "kforward": 131, "incorrect": [131, 136, 193], "getinput": 131, "connect": [131, 157, 159, 169, 295, 297], "iscolorfilternod": 131, "makewithlocalmatrix": [131, 217], "arithmet": [135, 295], "k1": 135, "k2": 135, "k3": 135, "k4": 135, "enforcepmcolor": 135, "foreground": 135, "croprect": 135, "third": [135, 159, 257, 297], "crop": [135, 181], "sigmax": 135, "sigmai": 135, "kdecal": [135, 256], "sigma": [135, 140], "kernel": 135, "gaussian": [135, 140], "todo": 135, "michaelludwig": 135, "kmirror": [135, 256], "cf": 135, "evalu": 135, "dilat": 135, "radiusx": 135, "radiusi": 135, "displacementmap": 135, "xchannelselector": 135, "colorchannel": 135, "ychannelselector": 135, "displac": [135, 296], "xchannel": 135, "ychannel": 135, "selector": [135, 159], "extract": [135, 155], "distantlitdiffus": 135, "point3": [135, 142], "lightcolor": 135, "surfacescal": 135, "kd": 135, "diffus": 135, "illumin": 135, "distant": 135, "light": [135, 296], "distantlitspecular": 135, "k": [135, 142, 159, 296], "shini": 135, "specular": 135, "expon": 135, "dropshadow": [135, 296], "drop": 135, "shadow": [135, 159], "dropshadowonli": 135, "exactli": [135, 159, 180, 193, 295], "manner": 135, "erod": 135, "srcrect": [135, 234, 243], "dstrect": 135, "portion": [135, 142, 193], "magnifi": 135, "zoomamount": 135, "mimic": 135, "zoom": 135, "len": [135, 296], "matrixconvolut": 135, "kernels": 135, "gain": 135, "bia": 135, "kerneloffset": 135, "convolvealpha": 135, "nxm": 135, "sharpen": 135, "convolut": 135, "convolv": 135, "matrixtransform": 135, "come": 135, "merg": 135, "pic": 135, "targetrect": 135, "skirect": 135, "pointlitdiffus": 135, "pointlitspecular": 135, "spotlitdiffus": 135, "falloffexpon": 135, "cutoffangl": 135, "spot": 135, "toward": [135, 159], "falloff": 135, "spotlitspecular": 135, "composit": 135, "bytesizeoverflow": 136, "bytes": 136, "computeminbytes": 136, "colorinfo": 136, "makea8": 136, "maken32": 136, "whichev": 136, "makes32": 136, "makeunknown": 136, "dimensionless": [136, 196], "computeoffset": 136, "makedimens": 136, "newsiz": 136, "newdimens": 136, "newwidth": 136, "newheight": 136, "minrowbytes64": 136, "unsign": [136, 185, 277], "validrowbyt": 136, "properli": 136, "luma": [138, 274], "luminancetoalpha": 138, "fecolormatrix": 138, "fold": 138, "despit": 138, "dot": [138, 186, 187], "lumin": [138, 273, 280], "agre": [138, 185, 234, 243], "4x4": 139, "viewer": 139, "makeblur": [140, 155, 296], "blurstyl": 140, "respectctm": 140, "setident": [142, 191], "settransl": 142, "setscal": [142, 296], "setskew": 142, "setrot": 142, "set9": 142, "setal": 142, "classifi": 142, "gettyp": [142, 188], "j": [142, 275], "q": 142, "aj": 142, "cp": 142, "ak": 142, "bn": 142, "cq": 142, "al": 142, "bo": 142, "cr": 142, "dj": 142, "em": [142, 259], "dk": 142, "en": 142, "fq": 142, "eo": 142, "gj": 142, "hm": 142, "ip": 142, "gk": 142, "hn": 142, "iq": 142, "ho": 142, "ir": 142, "express": 142, "invalidmatrix": 142, "sk_scalarmax": [142, 159, 193], "makeal": 142, "transx": 142, "skewi": 142, "scalei": 142, "transi": 142, "pers0": 142, "pers1": 142, "pers2": 142, "makerecttorect": 142, "stf": 142, "scaletofit": 142, "aspect": [142, 296], "ratio": [142, 186], "rotatedeg": 142, "deg": 142, "pivot": 142, "rotaterad": 142, "rad": 142, "setaffineident": 142, "affin": 142, "matric": [142, 295], "xp": 142, "float32": 142, "asaffin": 142, "decomposescal": 142, "decompos": 142, "remaind": 142, "finit": [142, 159, 188, 193, 234, 243], "nearli": [142, 159, 169, 186, 187], "dirtymatrixtypecach": 142, "modif": [142, 155, 180, 296], "reconstruct": [142, 159, 188, 193, 259], "kmscalex": 142, "kmskewx": 142, "kmtransx": 142, "kmskewi": 142, "kmscalei": 142, "kmtransi": 142, "kmpersp0": 142, "kmpersp1": 142, "kmpersp2": 142, "get9": 142, "nine": [142, 188], "ascend": 142, "getmaxscal": 142, "getminmaxscal": 142, "getminscal": 142, "getperspx": 142, "getperspi": 142, "With": [142, 159], "mappoint": 142, "getscalei": 142, "getskewi": 142, "gettranslatex": 142, "gettranslatei": 142, "typemask": 142, "kperspective_mask": [142, 144], "kidentity_mask": [142, 144], "ktranslate_mask": [142, 144], "kscale_mask": [142, 144], "kaffine_mask": [142, 144], "hasperspect": 142, "reciproc": 142, "isfinit": [142, 159, 186, 187, 193], "infin": [142, 186, 188, 193], "isident": 142, "isscaletransl": 142, "issimilar": 142, "tol": 142, "000244140625": 142, "uniform": [142, 201, 202, 203, 206, 213], "collaps": 142, "alik": 142, "euclidean": [142, 186], "arm": 142, "istransl": 142, "maphomogeneouspoint": 142, "cz": 142, "ei": 142, "fz": [142, 187], "gx": 142, "hy": 142, "iz": 142, "homogen": 142, "mapradiu": 142, "ellips": [142, 159, 169], "minor": 142, "maprect": 142, "pc": [142, 159], "applyperspectiveclip": [142, 159], "maprectscaletransl": 142, "maprecttoquad": 142, "suspect": 142, "mapvector": 142, "dhy": 142, "mapxi": 142, "normalizeperspect": 142, "categor": 142, "behav": [142, 159, 225], "rest": 142, "postconcat": 142, "postrot": 142, "co": [142, 296], "sin": [142, 296], "cj": 142, "sm": 142, "ck": 142, "sn": 142, "sj": 142, "cn": 142, "sl": 142, "upright": [142, 159], "postscal": 142, "postskew": 142, "kx": 142, "ky": 142, "posttransl": 142, "preconcat": 142, "prerot": [142, 296], "ac": 142, "bc": 142, "ec": 142, "gc": 142, "hc": 142, "prescal": 142, "preskew": 142, "pretransl": 142, "preservesaxisalign": 142, "90": [142, 159, 169, 295], "mirror": [142, 256, 296], "rectstaysrect": [142, 191], "preservesrightangl": 142, "rc": 142, "fetch": 142, "anticip": 142, "recomput": 142, "setaffin": 142, "persp0": 142, "persp1": 142, "persp2": 142, "setconcat": 142, "setperspx": 142, "v": [142, 193, 272, 273, 275, 277, 280], "proport": [142, 186], "setperspi": 142, "setpolytopoli": 142, "setrsxform": 142, "skrsxform": 142, "fssin": [142, 191], "fsco": [142, 191], "ftx": [142, 191], "fty": [142, 191], "setrecttorect": 142, "setscaletransl": 142, "tx": [142, 191], "ty": [142, 191], "setscalei": 142, "setsinco": 142, "sinvalu": 142, "cosvalu": 142, "setskewi": 142, "settranslatex": 142, "settranslatei": 142, "kascalex": 142, "kascalei": 142, "kaskewx": 142, "kaskewi": 142, "katransx": 142, "katransi": 142, "kcenter_scaletofit": [142, 143], "kend_scaletofit": [142, 143], "kfill_scaletofit": [142, 143], "kstart_scaletofit": [142, 143], "makecopi": [145, 267], "makedirect": 145, "copydata": 145, "asdata": 145, "getatpo": 145, "filestream": [145, 225, 226, 227, 228, 229], "setdata": 145, "setmemori": 145, "skiptoalign4": 145, "attachto": 146, "countlevel": 146, "builder": [149, 169, 254], "emptypath": 149, "succeed": [149, 188], "makewithcolor": 150, "knumcolor": 150, "72": [151, 296], "inch": [151, 153], "127": 151, "mm": 151, "pdfmetadata": 151, "setnodeid": [151, 154], "nodeid": [151, 154], "node": [151, 154], "appear": [151, 259], "structureelementnod": 151, "structur": [151, 153, 154, 272, 278], "tree": [151, 153, 154], "appendfloat": 152, "appendfloatarrai": 152, "appendint": 152, "appendstr": 152, "appendstringarrai": 152, "factori": 153, "fauthor": 153, "person": 153, "fcreator": 153, "conform": 153, "fencodingqu": 153, "101": 153, "percent": 153, "lossless": 153, "fkeyword": 153, "keyword": [153, 155], "comma": 153, "delin": 153, "fpdfa": 153, "xmp": 153, "uuid": 153, "intent": [153, 234, 243], "reproduc": 153, "featur": [153, 241], "2b": 153, "fproduc": 153, "frasterdpi": 153, "dpi": 153, "fidel": 153, "onlin": 153, "printer": 153, "fstructureelementtreeroot": 153, "semant": [153, 154], "fsubject": 153, "subject": [153, 217], "ftitl": 153, "titl": 153, "falt": 154, "fattribut": 154, "flang": 154, "fnodeid": 154, "ftypestr": 154, "algorithm": [155, 180, 259], "alphaf": 155, "antialia": [155, 295, 296, 297], "colorblu": [155, 295, 296, 297], "strokewidth": [155, 231, 295, 296, 297], "kstroke_styl": [155, 158, 159, 231, 233, 295, 296, 297], "0xff0000ff": [155, 296], "shallow": 155, "setxxx": 155, "0xff00ff00": 155, "lumacolorfilt": 155, "dashpatheffect": [155, 296], "strokecap": [155, 297], "kbutt_cap": [155, 156], "strokejoin": 155, "kmiter_join": [155, 157], "strokemit": 155, "extens": [155, 156], "orig": 155, "stylist": [155, 295, 296], "computefaststrokebound": 155, "docomputefastbound": 155, "overrid": [155, 217, 296], "getalpha": 155, "getblendmod": 155, "getcolor4f": 155, "getcolorfilt": 155, "skcolorfilt": 155, "getfillpath": 155, "skpath": [155, 159, 162, 166, 168, 172, 196, 231], "resscal": [155, 175, 231], "favor": 155, "speed": [155, 159], "hairlin": [155, 231], "getimagefilt": 155, "getmaskfilt": 155, "skmaskfilt": 155, "getpatheffect": 155, "skpatheffect": 155, "getshad": 155, "getstrokecap": 155, "getstrokejoin": 155, "getstrokemit": 155, "bevel": 155, "miter": [155, 157], "getstrokewidth": 155, "pen": [155, 295], "isantialia": 155, "antialias": 155, "isdith": 155, "smooth": 155, "issrcov": 155, "nothingtodraw": 155, "refcolorfilt": 155, "refimagefilt": 155, "refmaskfilt": 155, "refpatheffect": 155, "refshad": 155, "setargb": 155, "setalpha": 155, "setalphaf": 155, "setantialia": 155, "aa": 155, "setblendmod": [155, 295, 296], "setcolor": [155, 291, 295, 296, 297], "setcolor4f": 155, "setcolorfilt": 155, "setdith": 155, "diter": 155, "setimagefilt": 155, "setmaskfilt": 155, "unalt": [155, 159, 160, 163], "setpatheffect": 155, "setshad": 155, "setstrokecap": [155, 297], "setstrokejoin": 155, "setstrokemit": 155, "setstrokewidth": [155, 296, 297], "setstyl": [155, 297], "kbevel_join": [155, 157], "kcapcount": 155, "kdefault_cap": [155, 156], "kdefault_join": [155, 157], "kfill_styl": [155, 158, 159, 231, 233, 295, 296], "kjoincount": 155, "klast_cap": [155, 156], "ksquare_cap": [155, 156, 297], "klast_join": [155, 157], "kround_cap": [155, 156, 297], "kround_join": [155, 157], "kstrokeandfill_styl": [155, 158, 231, 233, 297], "kstylecount": [155, 231], "verb": [159, 162, 163, 297], "figur": 159, "cartesian": 159, "bezier": 159, "lazili": 159, "convex": 159, "updateboundscach": 159, "addcircl": [159, 169, 297], "addrect": [159, 169], "60": [159, 295, 296], "70": [159, 297], "center_x": [159, 169], "center_i": [159, 169], "pathdirect": [159, 169], "kcw": [159, 169, 171], "convertconictoquad": 159, "p2": [159, 169], "pow2": 159, "quad": [159, 193, 297], "influenc": 159, "ellipt": 159, "section": 159, "hyperbol": 159, "parabol": 159, "power": 159, "iscubicdegener": 159, "p3": 159, "p4": 159, "short": [159, 259], "islinedegener": 159, "isquaddegener": 159, "conicweight": [159, 162, 163, 179], "illeg": 159, "encount": 159, "startindex": [159, 169], "isclos": [159, 169, 175], "kwind": [159, 174], "expos": [159, 196], "addarc": [159, 169], "modulo": [159, 169, 225], "pathverb": [159, 297], "kmove": [159, 179, 297], "kconic": [159, 179], "kclose": [159, 179, 297], "kccw": [159, 171], "addov": [159, 169, 296], "kmove_verb": [159, 162, 165], "kconic_verb": [159, 162, 163, 165], "kclose_verb": [159, 162, 165], "centeri": [159, 193], "kcw_direct": [159, 169], "addpath": 159, "addpathmod": 159, "kappend_addpathmod": [159, 160], "kextend_addpathmod": [159, 160], "refe": 159, "renc": 159, "addpoli": 159, "addrrect": [159, 169], "attr": [159, 162], "kline_verb": [159, 162, 165], "addroundrect": 159, "approximatebytesus": [159, 181], "arcto": [159, 169], "forcemoveto": [159, 169], "x2": [159, 169], "y2": [159, 169], "tangent": [159, 166, 169, 175, 176], "parallel": [159, 169, 234, 243, 251], "postscript": [159, 169, 259, 295], "arct": [159, 169], "xaxisrot": [159, 169], "largearc": [159, 169], "arcsiz": [159, 169], "rout": [159, 169], "opposit": [159, 169], "xy": [159, 169, 217], "computetightbound": 159, "conicto": [159, 169, 297], "kquad_verb": [159, 165], "conservativelycontainsrect": 159, "countpoint": 159, "countverb": 159, "kcubic_verb": [159, 165], "cubicto": [159, 169, 295], "x3": [159, 169], "y3": [159, 169], "dumpashex": 159, "forceclos": [159, 162, 175], "hexadecim": [159, 188, 193], "dumphex": [159, 188, 193], "getfilltyp": 159, "bug": 159, "1762": 159, "getlastpt": 159, "lastpt": 159, "getpoint": 159, "excess": 159, "getsegmentmask": 159, "segmentmask": 159, "getverb": 159, "increserv": [159, 169], "extraptcount": [159, 169], "extraverbcount": [159, 169], "extraconiccount": 159, "grow": 159, "comic": 159, "formula": 159, "point_arrai": 159, "isinterpolat": 159, "isconvex": 159, "sk_scalarinfin": [159, 186], "sk_scalarnegativeinfin": 159, "sk_scalarnan": 159, "trivial": 159, "isinversefilltyp": 159, "indefinit": 159, "kinversewind": [159, 174], "kinverseevenodd": [159, 174], "islastcontourclos": 159, "islin": 159, "isov": [159, 188], "isrrect": 159, "isrect": [159, 188, 196], "corrupt": [159, 188], "lineto": [159, 169, 296, 297], "moveto": [159, 169, 175, 179, 296, 297], "quadto": [159, 169, 297], "rarcto": 159, "rconicto": [159, 169], "dx1": 159, "dy1": 159, "dx2": 159, "dy2": 159, "stand": 159, "rcubicto": [159, 169], "dx3": 159, "dy3": 159, "rlineto": [159, 169], "rmoveto": 159, "rquadto": [159, 169], "readfrommemori": [159, 188, 196], "inconsist": 159, "concert": 159, "reverseaddpath": 159, "front": 159, "critic": 159, "setfilltyp": [159, 169], "setisvolatil": [159, 169], "temporari": 159, "setlastpt": 159, "lightweight": [159, 196], "toggleinversefilltyp": [159, 169], "instantan": 159, "avoid": [159, 186, 193], "race": 159, "condit": 159, "kconic_segmentmask": [159, 164], "kcubic_segmentmask": [159, 164], "kdone_verb": [159, 162, 163, 165], "klarge_arcs": [159, 161, 169, 170], "kline_segmentmask": [159, 164], "kquad_segmentmask": [159, 164], "ksmall_arcs": [159, 161, 169, 170], "setpath": [162, 163, 175, 196], "iscloselin": 162, "isclosedcontour": 162, "exhaust": [162, 163], "klastenum_styl": [166, 167], "kmorph_styl": [166, 167], "krotate_styl": [166, 167, 296], "ktranslate_styl": [166, 167], "stamp": [168, 296], "latic": [168, 296], "startangledeg": 169, "sweepangledeg": 169, "addpolygon": 169, "skpoint": [169, 186], "computebound": 169, "pt1": 169, "pt2": 169, "pt3": 169, "detach": 169, "extra": 169, "polylineto": 169, "counter": 171, "primit": [172, 234, 243, 295], "makesum": [172, 296], "appl": 172, "filterpath": 172, "stroke_rec": 172, "strokerec": 172, "cullr": 172, "rec": [172, 231], "kevenodd": 174, "evenodd": 174, "slow": 175, "getmatrix": 175, "getposandtan": 175, "kgetposandtan_matrixflag": [175, 176], "getpostan": 175, "getseg": 175, "startd": 175, "stopd": 175, "startwithmoveto": 175, "untouch": 175, "nextcontour": 175, "kgetposition_matrixflag": [175, 176], "kgettangent_matrixflag": [175, 176], "kdifference_pathop": 177, "kintersect_pathop": 177, "kunion_pathop": 177, "inclus": [177, 257], "kxor_pathop": 177, "exclus": 177, "kreversedifference_pathop": 177, "kline_pathsegmentmask": 178, "kquad_pathsegmentmask": 178, "kconic_pathsegmentmask": 178, "kcubic_pathsegmentmask": 178, "kquad": 179, "kcubic": 179, "perlin": 180, "turbul": 180, "tileabl": 180, "nois": 180, "stitch": 180, "stitchtil": 180, "seam": [180, 256], "tr": 180, "feturbulenceel": 180, "makefractalnois": [180, 296], "basefrequencyx": 180, "basefrequencyi": 180, "numoctav": 180, "tiles": 180, "fractal": 180, "frequenc": 180, "octav": 180, "fairli": 180, "doubl": 180, "basefrequ": 180, "yield": [180, 293], "insignificantli": 180, "period": 180, "resembl": 180, "regular": 180, "unstructur": 180, "isn": [180, 279], "maketurbul": [180, 296], "whole": 181, "finishrecordingaspictur": [181, 182, 293], "recreat": [181, 251], "valueerror": 181, "makefromstream": [181, 215], "makeplacehold": 181, "placehold": 181, "intercept": [181, 251], "approximateopcount": 181, "nest": [181, 182], "fall": [181, 182], "filtermod": [181, 216], "superset": 181, "replai": 181, "interrupt": 181, "among": [181, 251, 273], "bbh": 182, "bboxhierarchi": 182, "finishrecordingasdraw": 182, "getrecordingcanva": 182, "live": 182, "finishrecordingaspicturewithcul": 182, "overal": 182, "meant": 183, "portabl": 183, "kunknown_pixelgeometri": 183, "krgb_h_pixelgeometri": 183, "kbgr_h_pixelgeometri": 183, "krgb_v_pixelgeometri": 183, "kbgr_v_pixelgeometri": 183, "nor": 185, "creator": 185, "addr16": 185, "addr32": 185, "addr64": 185, "addr8": 185, "warn": [185, 193], "setcolorspac": 185, "writable_addr": 185, "crossproduct": [186, 187], "straight": [186, 296], "dotproduct": [186, 187], "magnitud": 186, "cosin": 186, "sqrt": 186, "skscalar": 186, "distancetoorigin": 186, "iset": 186, "promot": [186, 193], "negat": 186, "former": 186, "setab": 186, "setlength": 186, "setnorm": 186, "euclidian": 187, "makescal": [187, 296], "css": 188, "kempty_typ": [188, 190], "makeov": [188, 295], "koval_typ": [188, 190], "makerect": 188, "makerectxi": 188, "xrad": 188, "yrad": 188, "krect_typ": [188, 190], "ksimple_typ": [188, 190], "ashex": [188, 193], "dumptostr": 188, "skstring": 188, "getsimpleradii": 188, "kninepatch_typ": [188, 190], "kcomplex_typ": [188, 190], "simpl": [188, 296], "curvatur": 188, "iscomplex": [188, 196], "isninepatch": 188, "issimpl": 188, "parma": 188, "ksizeinmemori": 188, "setninepatch": 188, "leftrad": 188, "toprad": 188, "rightrad": 188, "bottomrad": 188, "setov": 188, "setrect": [188, 196], "setrectradii": 188, "setrectxi": 188, "klasttyp": [188, 190], "klowerleft_corn": [188, 189], "klowerright_corn": [188, 189], "48": [188, 297], "kupperleft_corn": [188, 189], "kupperright_corn": [188, 189], "arbitrari": 190, "sco": 191, "ssin": 191, "makefromradian": 191, "radian": 191, "ai": 191, "toquad": [191, 193], "quqd": 191, "totristrip": 191, "unsort": 193, "makeiwh": 193, "lose": [193, 297], "asscalar": 193, "centerx": 193, "midpoint": 193, "sk_scalarmin": 193, "issort": 193, "joinnonemptyarg": 193, "joinpossiblyemptyrect": 193, "skscalarroundtoint": 193, "roundin": 193, "skscalarceiltoint": 193, "skscalarfloortoint": 193, "roundout": 193, "smallest": 193, "setbound": 193, "setboundscheck": 193, "setboundsnocheck": 193, "setiwh": 193, "virtual": 195, "getrefcnt": 195, "compact": 196, "regiona": 196, "regionb": 196, "inequ": 196, "xor": 196, "cliper": 196, "computeregioncomplex": 196, "getboundarypath": 196, "quickcontain": 196, "rgn": [196, 198], "setregion": 196, "spaner": 196, "ivector": 196, "kdifference_op": [196, 199], "kintersect_op": [196, 199], "klastop": [196, 199], "kreplace_op": [196, 199], "kopcnt": 196, "kreversedifference_op": [196, 199], "kunion_op": [196, 199], "kxor_op": [196, 199], "predict": [197, 198], "runtimeeffectbuild": [201, 202, 213], "runtimeeffect": [201, 202, 206, 213], "child": [201, 202, 206, 213], "runtimeeffectbuilderchild": [201, 202, 206, 213], "children": [201, 202, 203, 206, 213], "spanruntimeeffectchildptr": [201, 202, 203, 206, 213], "makeblend": [201, 202, 203, 206, 213], "skblender": [201, 202, 203, 206, 210, 213, 220], "makecolorfilt": [201, 202, 203, 206, 213], "setchild": [201, 202, 206, 213], "setuniform": [201, 202, 206, 213], "v2": [201, 202, 206, 213], "v3": [201, 202, 206, 213], "v4": [201, 202, 206, 213], "runtimeeffectbuilderuniform": [201, 202, 206, 213], "makeforblend": 203, "sksl": 203, "makeforcolorfilt": 203, "makeforshad": 203, "spanruntimeeffectchild": 203, "0x7fd530717b30": 203, "childcount": 203, "spanruntimeeffectuniform": 203, "kblender": [203, 204], "childtyp": 203, "kfloat": [203, 205], "uniformtyp": 203, "kfloat2": [203, 205], "kfloat2x2": [203, 205], "kfloat3": [203, 205], "kfloat3x3": [203, 205], "kfloat4": [203, 205], "kfloat4x4": [203, 205], "kint": [203, 205], "kint2": [203, 205], "kint3": [203, 205], "kint4": [203, 205], "kshader": [203, 204], "kcolorfilt": 204, "errortext": 211, "sure": 214, "del": [214, 293], "viewport": 214, "viewbox": 214, "kconverttexttopaths_flag": 214, "knoprettyxml_flag": 214, "containers": 215, "rendernod": 215, "setcontainers": 215, "aniso": 216, "maxaniso": 216, "cubicresampl": 216, "mipmapmod": 216, "isaniso": 216, "usecub": 216, "easi": 217, "isaimag": 217, "makewithcolorfilt": 217, "invok": 217, "blender": 220, "toceil": 221, "tofloor": 221, "toround": 221, "runtimeeffectchildptr": [223, 266], "vectorruntimeeffectchildptr": 223, "skspan": 223, "childptr": 223, "classic": 225, "async": 225, "fewer": 225, "eof": 225, "hit": 225, "hope": 225, "appendhex": 230, "appends32": 230, "appends64": 230, "appendscalar": 230, "appendu32": 230, "appendu64": 230, "appendunichar": 230, "c_str": 230, "substr": 230, "subchar": 230, "endswith": 230, "suffixstr": 230, "suffixchar": 230, "findlastof": 230, "inserthex": 230, "inserts32": 230, "inserts64": 230, "insertscalar": 230, "insertu32": 230, "insertu64": 230, "insertunichar": 230, "prependhex": 230, "prepends32": 230, "prepends64": 230, "prependscalar": 230, "prependunichar": 230, "startswith": [230, 293], "prefixstr": 230, "prefixchar": 230, "getinflationradiu": 231, "miterlimit": 231, "initstyl": 231, "applytopaint": 231, "applytopath": 231, "getcap": 231, "inflat": 231, "getjoin": 231, "getmit": 231, "getresscal": 231, "hasequaleffect": 231, "skstrokerec": 231, "isfillstyl": 231, "ishairlinestyl": 231, "needtoappli": 231, "setfillstyl": 231, "sethairlinestyl": 231, "setresscal": 231, "setstrokeparam": 231, "setstrokestyl": 231, "strokeandfil": 231, "kfill_initstyl": [231, 232], "khairline_initstyl": [231, 232], "khairline_styl": [231, 233], "grrendertarget": 234, "care": 234, "getcanva": [234, 243], "makeimagesnapshot": [234, 243, 293, 295], "makefrombackendrendertarget": [234, 243, 293], "backendrendertarget": [234, 243], "releaseproc": [234, 243], "sk_support_gpu": [234, 243], "makefrombackendtextur": [234, 243], "texturereleaseproc": [234, 243], "scene": [234, 243], "makenul": [234, 243], "makerast": [234, 243], "chosen": [234, 243], "makerastern32premul": [234, 243], "kpremul": [234, 243], "interact": [234, 243], "wx": [234, 243], "frombufferrgba": [234, 243], "purpos": [234, 243], "explicit": [234, 243], "afterward": [234, 243], "makerendertarget": [234, 243, 293], "samplecount": [234, 243], "surfaceorigin": [234, 243], "shouldcreatewithmip": [234, 243], "kbottomleft": [234, 243], "host": [234, 243, 259, 295], "ness": [234, 243], "wrapbackendrendertarget": [234, 243], "releasecontext": [234, 243], "asyncrescaleandreadpixel": [234, 235, 239, 243, 244, 248], "rescalegamma": [234, 243], "callabl": [234, 243], "rescal": [234, 239, 243, 248, 250], "asyncreadresult": [234, 243], "subrectangl": [234, 243], "rescalequ": [234, 243], "cost": [234, 243], "deferreddisplaylistrecord": [234, 243], "backendsurfaceaccess": [234, 243], "knoaccess": [234, 237, 243, 246], "kpresent": [234, 237, 243, 246], "foreign": [234, 243], "vk_image_layout_present_src_khr": [234, 243], "newstat": [234, 243], "ctualli": [234, 243], "grbackendsurfac": [234, 243], "prep": [234, 243], "correct": [234, 243, 293], "window": [234, 243, 294], "generationid": [234, 243], "notifycontentwillchang": [234, 243], "getbackendrendertarget": [234, 243], "backendhandleaccess": [234, 243], "iscompat": [234, 243], "viabl": [234, 243], "deferreddisplaylist": [234, 243], "interest": [234, 243], "sanit": [234, 243], "contentchangemod": [234, 243], "kn32": [234, 243], "recordingcontext": [234, 243], "replacebackendtextur": [234, 243], "kretain_contentchangemod": [234, 238, 243, 247], "substitut": [234, 243], "kdiscardwrite_backendhandleaccess": [234, 236, 243, 245], "kdiscard_contentchangemod": [234, 238, 243, 247], "kflushread_backendhandleaccess": [234, 236, 243, 245], "kflushwrite_backendhandleaccess": [234, 236, 243, 245], "asyncrescaleandreadpixelsyuv420": [235, 239, 244, 248], "cachemaxresourcebyt": 240, "createbackendformat": 240, "createcolorspac": 240, "createfbo0": 240, "usesglfbo0": 240, "createres": 240, "ismipmap": 240, "istextur": 240, "vulkansecondarycbcompat": 240, "expens": 241, "pixelgeometri": 241, "isusedeviceindependentfont": 241, "kalwaysdither_flag": [241, 242], "kdefault_flag": [241, 242], "kdynamicmsaa_flag": [241, 242], "kusedeviceindependentfonts_flag": [241, 242], "tabl": [249, 250, 259], "compoent": 249, "incom": 249, "temporarili": 249, "remultipli": 249, "makeargb": [249, 296], "tablea": 249, "tabler": 249, "tableg": 249, "tableb": 249, "createclip": 250, "creategamma": 250, "makeclipt": 250, "makegammat": 250, "fglyphindic": [251, 253], "ftypefaceproc": 251, "ftypefacectx": 251, "makefrompostext": 251, "po": [251, 254], "textblobbuild": [251, 295], "allocrunposh": [251, 254], "makefrompostexth": 251, "xpo": [251, 254], "consti": 251, "makefromrsxform": 251, "makefromshapedtext": 251, "utf8text": 251, "lefttoright": 251, "makefromstr": 251, "attribut": [251, 295, 296], "makefromtext": 251, "getintercept": 251, "fglyphcount": 253, "ftypefac": 253, "allocrun": 254, "placement": 254, "suppress": 254, "runbuff": 254, "allocrunpo": 254, "allocrunrsxform": 254, "krepeat": [256, 296], "domain": 256, "everywher": 256, "klasttilemod": 256, "startt": 257, "stopt": 257, "2nd": [257, 297], "33333": 257, "66667": 257, "entir": [257, 295], "spread": 257, "kinvert": [257, 258], "intrins": 259, "textskewx": 259, "textscalex": 259, "kfakeboldtext_mask": 259, "arial": 259, "makedefault": 259, "makedeseri": 259, "dat": 259, "lastresortmgr": 259, "skfontmgr": 259, "makefromnam": 259, "face": 259, "copytabledata": 259, "gettabledata": 259, "countglyph": 259, "counttabl": 259, "utf8": 259, "languag": 259, "getkerningpairadjust": 259, "getunitsperem": 259, "getpostscriptnam": 259, "truetyp": 259, "big": 259, "gettables": 259, "gettabletag": 259, "getvariationdesignparamet": 259, "fontparamet": 259, "fontargu": 259, "isbold": 259, "kbold": 259, "isfixedpitch": 259, "claim": 259, "pitch": 259, "isital": 259, "kital": 259, "makeclon": 259, "parameter": 259, "exaclti": 259, "serializebehavior": 259, "kincludedataifloc": [259, 260], "unichar": 259, "utf32": 259, "cut": 259, "32bit": 259, "kdoincludedata": [259, 260], "kdontincludedata": [259, 260], "descriptor": 260, "icu_mak": 261, "arg2": [263, 264], "arg3": 264, "runtimeeffectchild": 265, "vertex": 267, "vertexmod": 267, "approximates": 267, "klast_vertexmod": [267, 268], "ktrianglefan_vertexmod": [267, 268], "ktrianglestrip_vertexmod": [267, 268], "ktriangles_vertexmod": [267, 268], "hasalpha": 272, "planeconfig": [272, 275, 278], "numchannelsinplan": 272, "ith": [272, 276, 279], "numplan": [272, 276, 279], "planedimens": 272, "imagedimens": 272, "displai": [272, 293], "yuvcolorspac": [272, 276], "sittingx": 272, "skyuvainfo": 272, "kcenter": [272, 274, 287], "sittingi": 272, "resolut": [272, 275], "computetotalbyt": [272, 276, 279], "returnplanes": [272, 276], "planes": [272, 276], "forigin": 272, "ret": 272, "sitingx": 272, "sitingi": 272, "k410": [272, 275], "k411": [272, 275], "k420": [272, 275], "k422": [272, 275], "k440": [272, 275], "k444": [272, 275], "kmaxplan": [272, 276], "kuyv": [272, 273], "kuyva": [272, 273], "kyuv": [272, 273], "kyuva": [272, 273], "ky_uv": [272, 273], "ky_uv_a": [272, 273], "ky_u_v": [272, 273], "ky_u_v_a": [272, 273], "ky_vu": [272, 273], "ky_vu_a": [272, 273], "ky_v_u": [272, 273], "ky_v_u_a": [272, 273], "underscor": 273, "grai": 273, "rg": 273, "uv": [273, 275], "vu": 273, "uyv": 273, "uyva": 273, "notat": 275, "defaultcolortypefordatatyp": 276, "datatyp": [276, 278], "numchannel": [276, 278], "kunknown_skcolortyp": 276, "numchannelsanddatatyp": 276, "aren": 276, "bpp": 276, "planess": 276, "initpixmapsfromsinglealloc": 276, "issupport": 276, "planeinfo": 276, "kfloat16": [276, 277], "kunorm10_unorm2": [276, 277], "kunorm16": [276, 277], "kunorm8": [276, 277], "unorm": 277, "planarconfig": 278, "enabledatatyp": 278, "yuvapixmapinfo": 279, "fromdata": 279, "fromexternalmemori": 279, "fromexternalpixmap": 279, "fixeds": 279, "kjpeg_yuvcolorspac": 280, "krec601_yuvcolorspac": 280, "sdtv": 280, "krec709_yuvcolorspac": 280, "hdtv": 280, "kbt2020_yuvcolorspac": 280, "uhdtv": 280, "kidentity_yuvcolorspac": 280, "klastenum_yuvcolorspac": 280, "graphit": 281, "kdawn": 281, "setdefaultfontmanag": 282, "fontmanag": 282, "fontmgr": [282, 292], "defaultfamilynam": 282, "alphabeticbaselin": 283, "exceedmaxlin": 283, "ideographicbaselin": 283, "longestlin": 283, "maxintrinsicwidth": 283, "minintrinsicwidth": 283, "textlayout_paragraph": 284, "textlayout_paragraphstyl": 284, "fontcollect": 284, "textlayout_fontcollect": 284, "addtext": 284, "pushstyl": 284, "textlayout_textstyl": [284, 285], "setstrutstyl": 285, "strutstyl": 285, "textlayout_strutstyl": 285, "settextalign": 285, "textlayout_textalign": 285, "settextstyl": 285, "textstyl": 285, "setlead": 286, "setstruten": 286, "struten": 286, "kleft": 287, "kright": 287, "kjustifi": 287, "kstart": 287, "kend": 287, "knodecor": 288, "kunderlin": 288, "koverlin": 288, "klinethrough": 288, "kunderlineoverlin": 288, "kunderlinelinethrough": 288, "koverlinelinethrough": 288, "kunderlineoverlinelinethrough": 288, "kgap": 289, "kthrough": 289, "ksolid": 290, "kdoubl": 290, "kdot": 290, "kdash": 290, "kwavi": 290, "cloneforplacehold": 291, "setdecor": 291, "decor": 291, "textlayout_textdecor": 291, "setdecorationcolor": 291, "setdecorationmod": 291, "textlayout_textdecorationmod": 291, "setdecorationstyl": 291, "textlayout_textdecorationstyl": 291, "setdecorationthicknessmultipli": 291, "setfontfamili": 291, "setfonts": 291, "setfontstyl": 291, "setforegroundcolor": 291, "setforegroundpaint": 291, "setletterspac": 291, "letterspac": 291, "setlocal": 291, "setwordspac": 291, "wordspac": 291, "registertypefac": 292, "acceler": 293, "40": [293, 295, 297], "colorgreen": [293, 295], "matplotlib": 293, "pyplot": 293, "plt": 293, "imshow": 293, "contextlib": 293, "contextmanag": 293, "glfw_context": 293, "init": 293, "runtimeerror": 293, "window_hint": 293, "stencil_bit": 293, "faq": 293, "maco": 293, "darwin": 293, "context_version_major": 293, "context_version_minor": 293, "opengl_forward_compat": 293, "opengl_profil": 293, "opengl_core_profil": 293, "create_window": 293, "make_context_curr": 293, "shown": 293, "glfw_window": 293, "skia_surfac": 293, "fb_width": 293, "fb_height": 293, "get_framebuffer_s": 293, "backend_render_target": 293, "gl_rgba8": 293, "glclear": 293, "gl_color_buffer_bit": 293, "swap_buff": 293, "get_kei": 293, "key_escap": 293, "press": 293, "window_should_clos": 293, "wait_ev": 293, "demonstr": [293, 295, 296], "svgcanva": 293, "interoper": 294, "glanc": 294, "showcas": 294, "organ": 295, "around": 295, "96": [295, 296], "much": [295, 296], "maintain": [295, 296], "cairo": 295, "awt": 295, "45": 295, "enorm": 295, "easier": 295, "colorwhit": [295, 296], "cours": 295, "yourself": 295, "110": [295, 297], "colorcyan": [295, 296], "80": [295, 296], "coloryellow": [295, 296], "768": 295, "color_wheel": [295, 296], "rect2": 295, "paint2": [295, 296], "hello": 295, "320": 295, "240": 295, "pil": 295, "skia_imag": 295, "pil_imag": 295, "autocanvasrestor": [295, 296], "paint1": 296, "136": [296, 297], "paint3": 296, "blob1": 296, "blob2": 296, "144": 296, "224": 296, "intermix": 296, "freeli": 296, "proce": 296, "fillpaint": 296, "strokepaint": 296, "150": [296, 297], "0xff": 296, "0x00": 296, "220": 296, "gradientshad": 296, "0xffffff00": 296, "transfermod": 296, "speak": 296, "gettextbound": 296, "getfontmetr": 296, "magenta": 296, "cyan": 296, "draw_utf8_str": 296, "colormagenta": 296, "0x00ffffff": 296, "tall": 296, "192": 296, "desc": 296, "68": 296, "colorltgrai": 296, "colortranspar": 296, "mention": 296, "perlinnoiseshad": 296, "05": 296, "025": 296, "colorblack": 296, "160": [296, 297], "mandrill_512_q075": 296, "07": 296, "tablecolorfilt": 296, "path2dpatheffect": 296, "lattic": 296, "line2dpatheffect": 296, "path1dpatheffect": 296, "122": 296, "star": 296, "math": 296, "115": 296, "6927937": 296, "cornerpatheffect": 296, "chop": 296, "discretepatheffect": 296, "path_effect": 296, "1245": 296, "path_conic_weight": 297, "path_verb": 297, "round_rect": 297, "inspect": 297, "124": 297, "108": 297, "172": 297, "36": 297, "148": 297, "66": 297, "188": 297, "path_fill_typ": 297, "hole": 297, "88": 297, "satisfi": 297, "path_verb_arrai": 297, "1st": 297, "130": 297, "3rd": 297, "preced": 297, "path_last_point": 297, "paint_stroke_join": 297, "paint_stroke_cap": 297, "travel": 297, "56": 297}, "objects": {"": [[4, 0, 0, "-", "skia"]], "skia": [[5, 1, 1, "", "AlphaType"], [4, 4, 1, "", "AlphaTypeIsOpaque"], [6, 1, 1, "", "ApplyPerspectiveClip"], [4, 4, 1, "", "AsWinding"], [7, 1, 1, "", "AutoCanvasRestore"], [8, 1, 1, "", "BBHFactory"], [9, 1, 1, "", "BBoxHierarchy"], [11, 1, 1, "", "Bitmap"], [13, 1, 1, "", "BlendMode"], [14, 1, 1, "", "BlendModeCoeff"], [4, 4, 1, "", "BlendMode_AsCoeff"], [4, 4, 1, "", "BlendMode_Name"], [15, 1, 1, "", "BlurMaskFilter"], [16, 1, 1, "", "BlurStyle"], [17, 1, 1, "", "Budgeted"], [18, 1, 1, "", "Canvas"], [26, 1, 1, "", "ClipOp"], [27, 1, 1, "", "Codec"], [4, 4, 1, "", "Color"], [35, 1, 1, "", "Color4f"], [36, 1, 1, "", "ColorChannel"], [37, 1, 1, "", "ColorChannelFlag"], [38, 1, 1, "", "ColorFilter"], [40, 1, 1, "", "ColorFilters"], [4, 4, 1, "", "ColorGetA"], [4, 4, 1, "", "ColorGetB"], [4, 4, 1, "", "ColorGetG"], [4, 4, 1, "", "ColorGetR"], [41, 1, 1, "", "ColorInfo"], [42, 1, 1, "", "ColorMatrix"], [43, 1, 1, "", "ColorMatrixFilter"], [4, 4, 1, "", "ColorSetA"], [4, 4, 1, "", "ColorSetARGB"], [4, 4, 1, "", "ColorSetRGB"], [45, 1, 1, "", "ColorSpace"], [4, 4, 1, "", "ColorToHSV"], [46, 1, 1, "", "ColorType"], [4, 4, 1, "", "ColorTypeBytesPerPixel"], [4, 4, 1, "", "ColorTypeIsAlwaysOpaque"], [4, 4, 1, "", "ColorTypeValidateAlphaType"], [4, 4, 1, "", "ComputeIsOpaque"], [47, 1, 1, "", "ConvergeMode"], [48, 1, 1, "", "CornerPathEffect"], [49, 1, 1, "", "CubicResampler"], [50, 1, 1, "", "DashPathEffect"], [51, 1, 1, "", "Data"], [52, 1, 1, "", "DiscretePathEffect"], [53, 1, 1, "", "Document"], [54, 1, 1, "", "Drawable"], [56, 1, 1, "", "DynamicMemoryWStream"], [57, 1, 1, "", "EncodedImageFormat"], [58, 1, 1, "", "EncodedOrigin"], [4, 4, 1, "", "EncodedOriginToMatrix"], [59, 1, 1, "", "FILEStream"], [60, 1, 1, "", "FILEWStream"], [61, 1, 1, "", "FilterMode"], [62, 1, 1, "", "Flattanable"], [64, 1, 1, "", "Font"], [66, 1, 1, "", "FontArguments"], [70, 1, 1, "", "FontHinting"], [71, 1, 1, "", "FontMetrics"], [73, 1, 1, "", "FontMgr"], [74, 1, 1, "", "FontParameters"], [77, 1, 1, "", "FontStyle"], [81, 1, 1, "", "FontStyleSet"], [82, 1, 1, "", "GrBackendApi"], [83, 1, 1, "", "GrBackendFormat"], [84, 1, 1, "", "GrBackendRenderTarget"], [85, 3, 1, "", "GrBackendRenderTargets"], [86, 1, 1, "", "GrBackendSemaphore"], [87, 1, 1, "", "GrBackendTexture"], [88, 1, 1, "", "GrColorType"], [89, 3, 1, "", "GrContext"], [90, 1, 1, "", "GrContextOptions"], [91, 1, 1, "", "GrContext_Base"], [92, 1, 1, "", "GrDirectContext"], [93, 3, 1, "", "GrDirectContexts"], [94, 1, 1, "", "GrFlushInfo"], [95, 1, 1, "", "GrGLBackendState"], [96, 1, 1, "", "GrGLFormat"], [97, 1, 1, "", "GrGLFramebufferInfo"], [98, 1, 1, "", "GrGLInterface"], [99, 1, 1, "", "GrGLTextureInfo"], [100, 1, 1, "", "GrImageContext"], [101, 1, 1, "", "GrMipmapped"], [102, 1, 1, "", "GrMockOptions"], [103, 1, 1, "", "GrMockRenderTargetInfo"], [104, 1, 1, "", "GrMockTextureInfo"], [105, 1, 1, "", "GrProtected"], [106, 1, 1, "", "GrPurgeResourceOptions"], [107, 1, 1, "", "GrRecordingContext"], [108, 1, 1, "", "GrRenderable"], [109, 1, 1, "", "GrSemaphoresSubmitted"], [110, 1, 1, "", "GrSurfaceOrigin"], [111, 1, 1, "", "GrSyncCpu"], [112, 1, 1, "", "GrTextureType"], [113, 1, 1, "", "GrVkAlloc"], [114, 1, 1, "", "GrVkBackendContext"], [115, 1, 1, "", "GrVkDrawableInfo"], [116, 1, 1, "", "GrVkImageInfo"], [117, 1, 1, "", "GrVkYcbcrConversionInfo"], [118, 1, 1, "", "GradientShader"], [4, 4, 1, "", "HSVToColor"], [120, 1, 1, "", "HighContrastConfig"], [122, 1, 1, "", "HighContrastFilter"], [123, 1, 1, "", "IPoint"], [124, 1, 1, "", "IRect"], [125, 1, 1, "", "ISize"], [126, 1, 1, "", "Image"], [131, 1, 1, "", "ImageFilter"], [135, 1, 1, "", "ImageFilters"], [136, 1, 1, "", "ImageInfo"], [137, 1, 1, "", "Line2DPathEffect"], [138, 1, 1, "", "LumaColorFilter"], [139, 1, 1, "", "M44"], [4, 4, 1, "", "MakeNullCanvas"], [140, 1, 1, "", "MaskFilter"], [142, 1, 1, "", "Matrix"], [145, 1, 1, "", "MemoryStream"], [146, 1, 1, "", "MipmapBuilder"], [147, 1, 1, "", "MipmapMode"], [148, 1, 1, "", "NullWStream"], [4, 4, 1, "", "Op"], [149, 1, 1, "", "OpBuilder"], [150, 1, 1, "", "OverdrawColorFilter"], [151, 1, 1, "", "PDF"], [155, 1, 1, "", "Paint"], [159, 1, 1, "", "Path"], [166, 1, 1, "", "Path1DPathEffect"], [168, 1, 1, "", "Path2DPathEffect"], [169, 1, 1, "", "PathBuilder"], [171, 1, 1, "", "PathDirection"], [172, 1, 1, "", "PathEffect"], [174, 1, 1, "", "PathFillType"], [4, 4, 1, "", "PathFillType_ConvertToNonInverse"], [4, 4, 1, "", "PathFillType_IsEvenOdd"], [4, 4, 1, "", "PathFillType_IsInverse"], [175, 1, 1, "", "PathMeasure"], [177, 1, 1, "", "PathOp"], [178, 1, 1, "", "PathSegmentMask"], [179, 1, 1, "", "PathVerb"], [180, 1, 1, "", "PerlinNoiseShader"], [181, 1, 1, "", "Picture"], [182, 1, 1, "", "PictureRecorder"], [183, 1, 1, "", "PixelGeometry"], [184, 1, 1, "", "PixelRef"], [185, 1, 1, "", "Pixmap"], [186, 1, 1, "", "Point"], [187, 1, 1, "", "Point3"], [4, 4, 1, "", "PreMultiplyARGB"], [4, 4, 1, "", "PreMultiplyColor"], [4, 4, 1, "", "RGBToHSV"], [188, 1, 1, "", "RRect"], [191, 1, 1, "", "RSXform"], [192, 1, 1, "", "RTreeFactory"], [193, 1, 1, "", "Rect"], [194, 1, 1, "", "RefCnt"], [195, 1, 1, "", "RefCntBase"], [196, 1, 1, "", "Region"], [201, 3, 1, "", "RuntimeBlendBuilder"], [202, 3, 1, "", "RuntimeColorFilterBuilder"], [203, 1, 1, "", "RuntimeEffect"], [206, 1, 1, "", "RuntimeEffectBuilder"], [207, 1, 1, "", "RuntimeEffectBuilderChild"], [208, 1, 1, "", "RuntimeEffectBuilderUniform"], [209, 1, 1, "", "RuntimeEffectChild"], [210, 1, 1, "", "RuntimeEffectChildPtr"], [211, 1, 1, "", "RuntimeEffectResult"], [212, 1, 1, "", "RuntimeEffectUniform"], [213, 3, 1, "", "RuntimeShaderBuilder"], [214, 1, 1, "", "SVGCanvas"], [215, 1, 1, "", "SVGDOM"], [216, 1, 1, "", "SamplingOptions"], [217, 1, 1, "", "Shader"], [219, 1, 1, "", "ShaderMaskFilter"], [220, 1, 1, "", "Shaders"], [4, 4, 1, "", "Simplify"], [221, 1, 1, "", "Size"], [222, 1, 1, "", "SpanRuntimeEffectChild"], [223, 1, 1, "", "SpanRuntimeEffectChildPtr"], [224, 1, 1, "", "SpanRuntimeEffectUniform"], [225, 1, 1, "", "Stream"], [226, 1, 1, "", "StreamAsset"], [227, 1, 1, "", "StreamMemory"], [228, 1, 1, "", "StreamRewindable"], [229, 1, 1, "", "StreamSeekable"], [230, 1, 1, "", "String"], [231, 1, 1, "", "StrokeRec"], [234, 1, 1, "", "Surface"], [240, 1, 1, "", "SurfaceCharacterization"], [241, 1, 1, "", "SurfaceProps"], [243, 3, 1, "", "Surfaces"], [249, 1, 1, "", "TableColorFilter"], [250, 1, 1, "", "TableMaskFilter"], [251, 1, 1, "", "TextBlob"], [254, 1, 1, "", "TextBlobBuilder"], [255, 1, 1, "", "TextEncoding"], [4, 4, 1, "", "TightBounds"], [256, 1, 1, "", "TileMode"], [257, 1, 1, "", "TrimPathEffect"], [259, 1, 1, "", "Typeface"], [261, 1, 1, "", "Unicode"], [262, 1, 1, "", "V2"], [263, 1, 1, "", "V3"], [264, 1, 1, "", "V4"], [265, 1, 1, "", "VectorRuntimeEffectChild"], [266, 1, 1, "", "VectorRuntimeEffectChildPtr"], [267, 1, 1, "", "Vertices"], [269, 1, 1, "", "VkFormat"], [270, 1, 1, "", "VkImageLayout"], [271, 1, 1, "", "WStream"], [272, 1, 1, "", "YUVAInfo"], [276, 1, 1, "", "YUVAPixmapInfo"], [279, 1, 1, "", "YUVAPixmaps"], [280, 1, 1, "", "YUVColorSpace"], [281, 1, 1, "", "gpuBackendApi"], [282, 1, 1, "", "textlayout_FontCollection"], [283, 1, 1, "", "textlayout_Paragraph"], [284, 1, 1, "", "textlayout_ParagraphBuilder"], [285, 1, 1, "", "textlayout_ParagraphStyle"], [286, 1, 1, "", "textlayout_StrutStyle"], [287, 1, 1, "", "textlayout_TextAlign"], [288, 1, 1, "", "textlayout_TextDecoration"], [289, 1, 1, "", "textlayout_TextDecorationMode"], [290, 1, 1, "", "textlayout_TextDecorationStyle"], [291, 1, 1, "", "textlayout_TextStyle"], [292, 1, 1, "", "textlayout_TypefaceFontProvider"]], "skia.AlphaType": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "kLastEnum_AlphaType"], [5, 3, 1, "", "kOpaque_AlphaType"], [5, 3, 1, "", "kPremul_AlphaType"], [5, 3, 1, "", "kUnknown_AlphaType"], [5, 3, 1, "", "kUnpremul_AlphaType"], [5, 3, 1, "", "name"], [5, 3, 1, "", "value"]], "skia.ApplyPerspectiveClip": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "kNo"], [6, 3, 1, "", "kYes"], [6, 3, 1, "", "name"], [6, 3, 1, "", "value"]], "skia.AutoCanvasRestore": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "restore"]], "skia.BBHFactory": [[8, 2, 1, "", "__init__"]], "skia.BBoxHierarchy": [[10, 1, 1, "", "Metadata"], [9, 2, 1, "", "__init__"], [9, 2, 1, "", "bytesUsed"], [9, 2, 1, "", "insert"], [9, 2, 1, "", "ref"], [9, 2, 1, "", "search"], [9, 2, 1, "", "unique"], [9, 2, 1, "", "unref"]], "skia.BBoxHierarchy.Metadata": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "isDraw"]], "skia.Bitmap": [[12, 1, 1, "", "AllocFlags"], [11, 2, 1, "", "__init__"], [11, 2, 1, "", "allocN32Pixels"], [11, 2, 1, "", "allocPixels"], [11, 2, 1, "", "allocPixelsFlags"], [11, 2, 1, "", "alphaType"], [11, 2, 1, "", "bounds"], [11, 2, 1, "", "bytesPerPixel"], [11, 2, 1, "", "colorSpace"], [11, 2, 1, "", "colorType"], [11, 2, 1, "", "computeByteSize"], [11, 2, 1, "", "dimensions"], [11, 2, 1, "", "drawsNothing"], [11, 2, 1, "", "empty"], [11, 2, 1, "", "erase"], [11, 2, 1, "", "eraseARGB"], [11, 2, 1, "", "extractAlpha"], [11, 2, 1, "", "extractSubset"], [11, 2, 1, "", "getAlphaf"], [11, 2, 1, "", "getBounds"], [11, 2, 1, "", "getColor"], [11, 2, 1, "", "getGenerationID"], [11, 2, 1, "", "getPixels"], [11, 2, 1, "", "getSubset"], [11, 2, 1, "", "height"], [11, 2, 1, "", "info"], [11, 2, 1, "", "installPixels"], [11, 2, 1, "", "isImmutable"], [11, 2, 1, "", "isNull"], [11, 2, 1, "", "isOpaque"], [11, 3, 1, "", "kZeroPixels_AllocFlag"], [11, 2, 1, "", "makeShader"], [11, 2, 1, "", "notifyPixelsChanged"], [11, 2, 1, "", "peekPixels"], [11, 2, 1, "", "pixmap"], [11, 2, 1, "", "readPixels"], [11, 2, 1, "", "readyToDraw"], [11, 2, 1, "", "refColorSpace"], [11, 2, 1, "", "reset"], [11, 2, 1, "", "rowBytes"], [11, 2, 1, "", "rowBytesAsPixels"], [11, 2, 1, "", "setAlphaType"], [11, 2, 1, "", "setImmutable"], [11, 2, 1, "", "setInfo"], [11, 2, 1, "", "setPixels"], [11, 2, 1, "", "shiftPerPixel"], [11, 2, 1, "", "swap"], [11, 2, 1, "", "tobytes"], [11, 2, 1, "", "tryAllocN32Pixels"], [11, 2, 1, "", "tryAllocPixels"], [11, 2, 1, "", "tryAllocPixelsFlags"], [11, 2, 1, "", "width"], [11, 2, 1, "", "writePixels"]], "skia.Bitmap.AllocFlags": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "kZeroPixels_AllocFlag"], [12, 3, 1, "", "name"], [12, 3, 1, "", "value"]], "skia.BlendMode": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "kClear"], [13, 3, 1, "", "kColor"], [13, 3, 1, "", "kColorBurn"], [13, 3, 1, "", "kColorDodge"], [13, 3, 1, "", "kDarken"], [13, 3, 1, "", "kDifference"], [13, 3, 1, "", "kDst"], [13, 3, 1, "", "kDstATop"], [13, 3, 1, "", "kDstIn"], [13, 3, 1, "", "kDstOut"], [13, 3, 1, "", "kDstOver"], [13, 3, 1, "", "kExclusion"], [13, 3, 1, "", "kHardLight"], [13, 3, 1, "", "kHue"], [13, 3, 1, "", "kLastCoeffMode"], [13, 3, 1, "", "kLastMode"], [13, 3, 1, "", "kLastSeparableMode"], [13, 3, 1, "", "kLighten"], [13, 3, 1, "", "kLuminosity"], [13, 3, 1, "", "kModulate"], [13, 3, 1, "", "kMultiply"], [13, 3, 1, "", "kOverlay"], [13, 3, 1, "", "kPlus"], [13, 3, 1, "", "kSaturation"], [13, 3, 1, "", "kScreen"], [13, 3, 1, "", "kSoftLight"], [13, 3, 1, "", "kSrc"], [13, 3, 1, "", "kSrcATop"], [13, 3, 1, "", "kSrcIn"], [13, 3, 1, "", "kSrcOut"], [13, 3, 1, "", "kSrcOver"], [13, 3, 1, "", "kXor"], [13, 3, 1, "", "name"], [13, 3, 1, "", "value"]], "skia.BlendModeCoeff": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "kCoeffCount"], [14, 3, 1, "", "kDA"], [14, 3, 1, "", "kDC"], [14, 3, 1, "", "kIDA"], [14, 3, 1, "", "kIDC"], [14, 3, 1, "", "kISA"], [14, 3, 1, "", "kISC"], [14, 3, 1, "", "kOne"], [14, 3, 1, "", "kSA"], [14, 3, 1, "", "kSC"], [14, 3, 1, "", "kZero"], [14, 3, 1, "", "name"], [14, 3, 1, "", "value"]], "skia.BlurMaskFilter": [[15, 2, 1, "", "__init__"]], "skia.BlurStyle": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "kInner_BlurStyle"], [16, 3, 1, "", "kLastEnum_BlurStyle"], [16, 3, 1, "", "kNormal_BlurStyle"], [16, 3, 1, "", "kOuter_BlurStyle"], [16, 3, 1, "", "kSolid_BlurStyle"], [16, 3, 1, "", "name"], [16, 3, 1, "", "value"]], "skia.Budgeted": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "kNo"], [17, 3, 1, "", "kYes"], [17, 3, 1, "", "name"], [17, 3, 1, "", "value"]], "skia.Canvas": [[19, 1, 1, "", "Lattice"], [18, 2, 1, "", "MakeRasterDirect"], [18, 2, 1, "", "MakeRasterDirectN32"], [21, 1, 1, "", "PointMode"], [22, 1, 1, "", "QuadAAFlags"], [23, 1, 1, "", "SaveLayerFlags"], [24, 1, 1, "", "SaveLayerRec"], [25, 1, 1, "", "SrcRectConstraint"], [18, 2, 1, "", "__init__"], [18, 2, 1, "", "accessTopLayerPixels"], [18, 2, 1, "", "androidFramework_setDeviceClipRestriction"], [18, 2, 1, "", "clear"], [18, 2, 1, "", "clipPath"], [18, 2, 1, "", "clipRRect"], [18, 2, 1, "", "clipRect"], [18, 2, 1, "", "clipRegion"], [18, 2, 1, "", "concat"], [18, 2, 1, "", "discard"], [18, 2, 1, "", "drawAnnotation"], [18, 2, 1, "", "drawArc"], [18, 2, 1, "", "drawAtlas"], [18, 2, 1, "", "drawBitmap"], [18, 2, 1, "", "drawBitmapRect"], [18, 2, 1, "", "drawCircle"], [18, 2, 1, "", "drawColor"], [18, 2, 1, "", "drawDRRect"], [18, 2, 1, "", "drawIRect"], [18, 2, 1, "", "drawImage"], [18, 2, 1, "", "drawImageRect"], [18, 2, 1, "", "drawLine"], [18, 2, 1, "", "drawOval"], [18, 2, 1, "", "drawPaint"], [18, 2, 1, "", "drawPatch"], [18, 2, 1, "", "drawPath"], [18, 2, 1, "", "drawPicture"], [18, 2, 1, "", "drawPoint"], [18, 2, 1, "", "drawPoints"], [18, 2, 1, "", "drawRRect"], [18, 2, 1, "", "drawRect"], [18, 2, 1, "", "drawRegion"], [18, 2, 1, "", "drawRoundRect"], [18, 2, 1, "", "drawSimpleText"], [18, 2, 1, "", "drawString"], [18, 2, 1, "", "drawTextBlob"], [18, 2, 1, "", "drawTextOnPath"], [18, 2, 1, "", "drawVertices"], [18, 2, 1, "", "flush"], [18, 2, 1, "", "getBaseLayerSize"], [18, 2, 1, "", "getDeviceClipBounds"], [18, 2, 1, "", "getLocalClipBounds"], [18, 2, 1, "", "getLocalToDevice"], [18, 2, 1, "", "getProps"], [18, 2, 1, "", "getSaveCount"], [18, 2, 1, "", "getSurface"], [18, 2, 1, "", "getTotalMatrix"], [18, 2, 1, "", "imageInfo"], [18, 2, 1, "", "isClipEmpty"], [18, 2, 1, "", "isClipRect"], [18, 3, 1, "", "kAll_QuadAAFlags"], [18, 3, 1, "", "kBottom_QuadAAFlag"], [18, 3, 1, "", "kF16ColorType"], [18, 3, 1, "", "kFast_SrcRectConstraint"], [18, 3, 1, "", "kInitWithPrevious_SaveLayerFlag"], [18, 3, 1, "", "kLeft_QuadAAFlag"], [18, 3, 1, "", "kLines_PointMode"], [18, 3, 1, "", "kNone_QuadAAFlags"], [18, 3, 1, "", "kPoints_PointMode"], [18, 3, 1, "", "kPolygon_PointMode"], [18, 3, 1, "", "kPreserveLCDText_SaveLayerFlag"], [18, 3, 1, "", "kRight_QuadAAFlag"], [18, 3, 1, "", "kStrict_SrcRectConstraint"], [18, 3, 1, "", "kTop_QuadAAFlag"], [18, 2, 1, "", "makeSurface"], [18, 2, 1, "", "peekPixels"], [18, 2, 1, "", "quickReject"], [18, 2, 1, "", "readPixels"], [18, 2, 1, "", "resetMatrix"], [18, 2, 1, "", "restore"], [18, 2, 1, "", "restoreToCount"], [18, 2, 1, "", "rotate"], [18, 2, 1, "", "save"], [18, 2, 1, "", "saveLayer"], [18, 2, 1, "", "saveLayerAlpha"], [18, 2, 1, "", "scale"], [18, 2, 1, "", "setMatrix"], [18, 2, 1, "", "skew"], [18, 2, 1, "", "toarray"], [18, 2, 1, "", "translate"], [18, 2, 1, "", "writePixels"]], "skia.Canvas.Lattice": [[20, 1, 1, "", "RectType"], [19, 2, 1, "", "__init__"], [19, 3, 1, "", "fBounds"], [19, 3, 1, "", "fColors"], [19, 3, 1, "", "fRectTypes"], [19, 3, 1, "", "fXCount"], [19, 3, 1, "", "fXDivs"], [19, 3, 1, "", "fYCount"], [19, 3, 1, "", "fYDivs"], [19, 3, 1, "", "kDefault"], [19, 3, 1, "", "kFixedColor"], [19, 3, 1, "", "kTransparent"]], "skia.Canvas.Lattice.RectType": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "kDefault"], [20, 3, 1, "", "kFixedColor"], [20, 3, 1, "", "kTransparent"], [20, 3, 1, "", "name"], [20, 3, 1, "", "value"]], "skia.Canvas.PointMode": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "kLines_PointMode"], [21, 3, 1, "", "kPoints_PointMode"], [21, 3, 1, "", "kPolygon_PointMode"], [21, 3, 1, "", "name"], [21, 3, 1, "", "value"]], "skia.Canvas.QuadAAFlags": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "kAll_QuadAAFlags"], [22, 3, 1, "", "kBottom_QuadAAFlag"], [22, 3, 1, "", "kLeft_QuadAAFlag"], [22, 3, 1, "", "kNone_QuadAAFlags"], [22, 3, 1, "", "kRight_QuadAAFlag"], [22, 3, 1, "", "kTop_QuadAAFlag"], [22, 3, 1, "", "name"], [22, 3, 1, "", "value"]], "skia.Canvas.SaveLayerFlags": [[23, 2, 1, "", "__init__"], [23, 3, 1, "", "kF16ColorType"], [23, 3, 1, "", "kInitWithPrevious_SaveLayerFlag"], [23, 3, 1, "", "kPreserveLCDText_SaveLayerFlag"], [23, 3, 1, "", "name"], [23, 3, 1, "", "value"]], "skia.Canvas.SaveLayerRec": [[24, 2, 1, "", "__init__"], [24, 3, 1, "", "fBackdrop"], [24, 3, 1, "", "fBounds"], [24, 3, 1, "", "fPaint"], [24, 3, 1, "", "fSaveLayerFlags"]], "skia.Canvas.SrcRectConstraint": [[25, 2, 1, "", "__init__"], [25, 3, 1, "", "kFast_SrcRectConstraint"], [25, 3, 1, "", "kStrict_SrcRectConstraint"], [25, 3, 1, "", "name"], [25, 3, 1, "", "value"]], "skia.ClipOp": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "kDifference"], [26, 3, 1, "", "kIntersect"], [26, 3, 1, "", "name"], [26, 3, 1, "", "value"]], "skia.Codec": [[28, 1, 1, "", "DisposalMethod"], [29, 1, 1, "", "FrameInfo"], [27, 2, 1, "", "MakeFromData"], [27, 2, 1, "", "MinBufferedBytesNeeded"], [30, 1, 1, "", "Options"], [31, 1, 1, "", "Result"], [27, 2, 1, "", "ResultToString"], [32, 1, 1, "", "ScanlineOrder"], [33, 1, 1, "", "SelectionPolicy"], [34, 1, 1, "", "ZeroInitialized"], [27, 2, 1, "", "__init__"], [27, 2, 1, "", "bounds"], [27, 2, 1, "", "dimensions"], [27, 2, 1, "", "getEncodedFormat"], [27, 2, 1, "", "getFrameCount"], [27, 2, 1, "", "getFrameInfo"], [27, 2, 1, "", "getInfo"], [27, 2, 1, "", "getOrigin"], [27, 2, 1, "", "getPixels"], [27, 2, 1, "", "getRepetitionCount"], [27, 2, 1, "", "getScaledDimensions"], [27, 2, 1, "", "getScanlineOrder"], [27, 2, 1, "", "getScanlines"], [27, 2, 1, "", "getValidSubset"], [27, 2, 1, "", "getYUVAPlanes"], [27, 2, 1, "", "incrementalDecode"], [27, 3, 1, "", "kCouldNotRewind"], [27, 3, 1, "", "kErrorInInput"], [27, 3, 1, "", "kIncompleteInput"], [27, 3, 1, "", "kInternalError"], [27, 3, 1, "", "kInvalidConversion"], [27, 3, 1, "", "kInvalidInput"], [27, 3, 1, "", "kInvalidParameters"], [27, 3, 1, "", "kInvalidScale"], [27, 3, 1, "", "kKeep"], [27, 3, 1, "", "kNoFrame"], [27, 3, 1, "", "kNo_ZeroInitialized"], [27, 3, 1, "", "kPreferAnimation"], [27, 3, 1, "", "kPreferStillImage"], [27, 3, 1, "", "kRepetitionCountInfinite"], [27, 3, 1, "", "kRestoreBGColor"], [27, 3, 1, "", "kRestorePrevious"], [27, 3, 1, "", "kSuccess"], [27, 3, 1, "", "kUnimplemented"], [27, 3, 1, "", "kYes_ZeroInitialized"], [27, 2, 1, "", "nextScanline"], [27, 2, 1, "", "outputScanline"], [27, 2, 1, "", "queryYUVAInfo"], [27, 2, 1, "", "skipScanlines"], [27, 2, 1, "", "startIncrementalDecode"], [27, 2, 1, "", "startScanlineDecode"]], "skia.Codec.DisposalMethod": [[28, 2, 1, "", "__init__"], [28, 3, 1, "", "kKeep"], [28, 3, 1, "", "kRestoreBGColor"], [28, 3, 1, "", "kRestorePrevious"], [28, 3, 1, "", "name"], [28, 3, 1, "", "value"]], "skia.Codec.FrameInfo": [[29, 2, 1, "", "__init__"], [29, 3, 1, "", "fAlphaType"], [29, 3, 1, "", "fDisposalMethod"], [29, 3, 1, "", "fDuration"], [29, 3, 1, "", "fFullyReceived"], [29, 3, 1, "", "fRequiredFrame"]], "skia.Codec.Options": [[30, 2, 1, "", "__init__"], [30, 3, 1, "", "fFrameIndex"], [30, 3, 1, "", "fPriorFrame"], [30, 3, 1, "", "fSubset"], [30, 3, 1, "", "fZeroInitialized"]], "skia.Codec.Result": [[31, 2, 1, "", "__init__"], [31, 3, 1, "", "kCouldNotRewind"], [31, 3, 1, "", "kErrorInInput"], [31, 3, 1, "", "kIncompleteInput"], [31, 3, 1, "", "kInternalError"], [31, 3, 1, "", "kInvalidConversion"], [31, 3, 1, "", "kInvalidInput"], [31, 3, 1, "", "kInvalidParameters"], [31, 3, 1, "", "kInvalidScale"], [31, 3, 1, "", "kSuccess"], [31, 3, 1, "", "kUnimplemented"], [31, 3, 1, "", "name"], [31, 3, 1, "", "value"]], "skia.Codec.ScanlineOrder": [[32, 2, 1, "", "__init__"], [32, 3, 1, "", "kKeep"], [32, 3, 1, "", "kRestoreBGColor"], [32, 3, 1, "", "name"], [32, 3, 1, "", "value"]], "skia.Codec.SelectionPolicy": [[33, 2, 1, "", "__init__"], [33, 3, 1, "", "kPreferAnimation"], [33, 3, 1, "", "kPreferStillImage"], [33, 3, 1, "", "name"], [33, 3, 1, "", "value"]], "skia.Codec.ZeroInitialized": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "kNo_ZeroInitialized"], [34, 3, 1, "", "kYes_ZeroInitialized"], [34, 3, 1, "", "name"], [34, 3, 1, "", "value"]], "skia.Color4f": [[35, 2, 1, "", "FromBytes_RGBA"], [35, 2, 1, "", "FromColor"], [35, 2, 1, "", "__init__"], [35, 3, 1, "", "fA"], [35, 3, 1, "", "fB"], [35, 3, 1, "", "fG"], [35, 3, 1, "", "fR"], [35, 2, 1, "", "fitsInBytes"], [35, 2, 1, "", "isOpaque"], [35, 3, 1, "", "kBlack"], [35, 3, 1, "", "kBlue"], [35, 3, 1, "", "kCyan"], [35, 3, 1, "", "kDkGray"], [35, 3, 1, "", "kGray"], [35, 3, 1, "", "kGreen"], [35, 3, 1, "", "kLtGray"], [35, 3, 1, "", "kMagenta"], [35, 3, 1, "", "kRed"], [35, 3, 1, "", "kTransparent"], [35, 3, 1, "", "kWhite"], [35, 3, 1, "", "kYellow"], [35, 2, 1, "", "makeOpaque"], [35, 2, 1, "", "toBytes_RGBA"], [35, 2, 1, "", "toColor"], [35, 2, 1, "", "vec"]], "skia.ColorChannel": [[36, 2, 1, "", "__init__"], [36, 3, 1, "", "kA"], [36, 3, 1, "", "kB"], [36, 3, 1, "", "kG"], [36, 3, 1, "", "kLastEnum"], [36, 3, 1, "", "kR"], [36, 3, 1, "", "name"], [36, 3, 1, "", "value"]], "skia.ColorChannelFlag": [[37, 2, 1, "", "__init__"], [37, 3, 1, "", "kAlpha_ColorChannelFlag"], [37, 3, 1, "", "kBlue_ColorChannelFlag"], [37, 3, 1, "", "kGray_ColorChannelFlag"], [37, 3, 1, "", "kGreen_ColorChannelFlag"], [37, 3, 1, "", "kRGBA_ColorChannelFlags"], [37, 3, 1, "", "kRGB_ColorChannelFlags"], [37, 3, 1, "", "kRG_ColorChannelFlags"], [37, 3, 1, "", "kRed_ColorChannelFlag"], [37, 3, 1, "", "name"], [37, 3, 1, "", "value"]], "skia.ColorFilter": [[38, 2, 1, "", "Deserialize"], [39, 1, 1, "", "Type"], [38, 2, 1, "", "__init__"], [38, 2, 1, "", "asAColorMatrix"], [38, 2, 1, "", "asAColorMode"], [38, 2, 1, "", "asColorMode"], [38, 2, 1, "", "filterColor"], [38, 2, 1, "", "filterColor4f"], [38, 2, 1, "", "getFlattenableType"], [38, 2, 1, "", "getTypeName"], [38, 3, 1, "", "kColorFilter_Type"], [38, 3, 1, "", "kDrawLooper_Type"], [38, 3, 1, "", "kDrawable_Type"], [38, 3, 1, "", "kImageFilter_Type"], [38, 3, 1, "", "kMaskFilter_Type"], [38, 3, 1, "", "kPathEffect_Type"], [38, 2, 1, "", "makeComposed"], [38, 2, 1, "", "ref"], [38, 2, 1, "", "serialize"], [38, 2, 1, "", "unique"], [38, 2, 1, "", "unref"]], "skia.ColorFilter.Type": [[39, 2, 1, "", "__init__"], [39, 3, 1, "", "kColorFilter_Type"], [39, 3, 1, "", "kDrawLooper_Type"], [39, 3, 1, "", "kDrawable_Type"], [39, 3, 1, "", "kImageFilter_Type"], [39, 3, 1, "", "kMaskFilter_Type"], [39, 3, 1, "", "kPathEffect_Type"], [39, 3, 1, "", "name"], [39, 3, 1, "", "value"]], "skia.ColorFilters": [[40, 2, 1, "", "Blend"], [40, 2, 1, "", "Compose"], [40, 2, 1, "", "HSLAMatrix"], [40, 2, 1, "", "Lerp"], [40, 2, 1, "", "LinearToSRGBGamma"], [40, 2, 1, "", "Matrix"], [40, 2, 1, "", "SRGBToLinearGamma"], [40, 2, 1, "", "__init__"]], "skia.ColorInfo": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "alphaType"], [41, 2, 1, "", "bytesPerPixel"], [41, 2, 1, "", "colorSpace"], [41, 2, 1, "", "colorType"], [41, 2, 1, "", "gammaCloseToSRGB"], [41, 2, 1, "", "isOpaque"], [41, 2, 1, "", "makeAlphaType"], [41, 2, 1, "", "makeColorSpace"], [41, 2, 1, "", "makeColorType"], [41, 2, 1, "", "refColorSpace"], [41, 2, 1, "", "shiftPerPixel"]], "skia.ColorMatrix": [[42, 2, 1, "", "__init__"]], "skia.ColorMatrixFilter": [[43, 2, 1, "", "Deserialize"], [43, 2, 1, "", "MakeLightingFilter"], [44, 1, 1, "", "Type"], [43, 2, 1, "", "__init__"], [43, 2, 1, "", "asAColorMatrix"], [43, 2, 1, "", "asAColorMode"], [43, 2, 1, "", "asColorMode"], [43, 2, 1, "", "filterColor"], [43, 2, 1, "", "filterColor4f"], [43, 2, 1, "", "getFlattenableType"], [43, 2, 1, "", "getTypeName"], [43, 3, 1, "", "kColorFilter_Type"], [43, 3, 1, "", "kDrawLooper_Type"], [43, 3, 1, "", "kDrawable_Type"], [43, 3, 1, "", "kImageFilter_Type"], [43, 3, 1, "", "kMaskFilter_Type"], [43, 3, 1, "", "kPathEffect_Type"], [43, 2, 1, "", "makeComposed"], [43, 2, 1, "", "ref"], [43, 2, 1, "", "serialize"], [43, 2, 1, "", "unique"], [43, 2, 1, "", "unref"]], "skia.ColorMatrixFilter.Type": [[44, 2, 1, "", "__init__"], [44, 3, 1, "", "kColorFilter_Type"], [44, 3, 1, "", "kDrawLooper_Type"], [44, 3, 1, "", "kDrawable_Type"], [44, 3, 1, "", "kImageFilter_Type"], [44, 3, 1, "", "kMaskFilter_Type"], [44, 3, 1, "", "kPathEffect_Type"], [44, 3, 1, "", "name"], [44, 3, 1, "", "value"]], "skia.ColorSpace": [[45, 2, 1, "", "Deserialize"], [45, 2, 1, "", "Equals"], [45, 2, 1, "", "Make"], [45, 2, 1, "", "MakeRGB"], [45, 2, 1, "", "MakeSRGB"], [45, 2, 1, "", "MakeSRGBLinear"], [45, 2, 1, "", "__init__"], [45, 2, 1, "", "deref"], [45, 2, 1, "", "gammaCloseToSRGB"], [45, 2, 1, "", "gammaIsLinear"], [45, 2, 1, "", "gamutTransformTo"], [45, 2, 1, "", "hash"], [45, 2, 1, "", "invTransferFn"], [45, 2, 1, "", "isNumericalTransferFn"], [45, 2, 1, "", "isSRGB"], [45, 2, 1, "", "makeColorSpin"], [45, 2, 1, "", "makeLinearGamma"], [45, 2, 1, "", "makeSRGBGamma"], [45, 2, 1, "", "ref"], [45, 2, 1, "", "refCntGreaterThan"], [45, 2, 1, "", "serialize"], [45, 2, 1, "", "toProfile"], [45, 2, 1, "", "toXYZD50"], [45, 2, 1, "", "toXYZD50Hash"], [45, 2, 1, "", "transferFn"], [45, 2, 1, "", "transferFnHash"], [45, 2, 1, "", "unique"], [45, 2, 1, "", "unref"], [45, 2, 1, "", "writeToMemory"]], "skia.ColorType": [[46, 2, 1, "", "__init__"], [46, 3, 1, "", "kA16_float_ColorType"], [46, 3, 1, "", "kA16_unorm_ColorType"], [46, 3, 1, "", "kARGB_4444_ColorType"], [46, 3, 1, "", "kAlpha_8_ColorType"], [46, 3, 1, "", "kBGRA_1010102_ColorType"], [46, 3, 1, "", "kBGRA_8888_ColorType"], [46, 3, 1, "", "kBGR_101010x_ColorType"], [46, 3, 1, "", "kGray_8_ColorType"], [46, 3, 1, "", "kN32_ColorType"], [46, 3, 1, "", "kR16G16B16A16_unorm_ColorType"], [46, 3, 1, "", "kR16G16_float_ColorType"], [46, 3, 1, "", "kR16G16_unorm_ColorType"], [46, 3, 1, "", "kR8G8_unorm_ColorType"], [46, 3, 1, "", "kRGBA_1010102_ColorType"], [46, 3, 1, "", "kRGBA_8888_ColorType"], [46, 3, 1, "", "kRGBA_F16Norm_ColorType"], [46, 3, 1, "", "kRGBA_F16_ColorType"], [46, 3, 1, "", "kRGBA_F32_ColorType"], [46, 3, 1, "", "kRGB_101010x_ColorType"], [46, 3, 1, "", "kRGB_565_ColorType"], [46, 3, 1, "", "kRGB_888x_ColorType"], [46, 3, 1, "", "kUnknown_ColorType"], [46, 3, 1, "", "name"], [46, 3, 1, "", "value"]], "skia.ConvergeMode": [[47, 2, 1, "", "__init__"], [47, 3, 1, "", "kDifference"], [47, 3, 1, "", "kIntersect"], [47, 3, 1, "", "kLast"], [47, 3, 1, "", "kReverseDifference"], [47, 3, 1, "", "kUnion"], [47, 3, 1, "", "kXor"], [47, 3, 1, "", "name"], [47, 3, 1, "", "value"]], "skia.CornerPathEffect": [[48, 2, 1, "", "Make"], [48, 2, 1, "", "__init__"]], "skia.CubicResampler": [[49, 3, 1, "", "B"], [49, 3, 1, "", "C"], [49, 2, 1, "", "CatmullRom"], [49, 2, 1, "", "Mitchell"], [49, 2, 1, "", "__init__"]], "skia.DashPathEffect": [[50, 2, 1, "", "Make"], [50, 2, 1, "", "__init__"]], "skia.Data": [[51, 2, 1, "", "MakeEmpty"], [51, 2, 1, "", "MakeFromFileName"], [51, 2, 1, "", "MakeSubset"], [51, 2, 1, "", "MakeUninitialized"], [51, 2, 1, "", "MakeWithCopy"], [51, 2, 1, "", "MakeWithoutCopy"], [51, 2, 1, "", "__init__"], [51, 2, 1, "", "bytes"], [51, 2, 1, "", "copyRange"], [51, 2, 1, "", "data"], [51, 2, 1, "", "deref"], [51, 2, 1, "", "equals"], [51, 2, 1, "", "isEmpty"], [51, 2, 1, "", "ref"], [51, 2, 1, "", "refCntGreaterThan"], [51, 2, 1, "", "size"], [51, 2, 1, "", "unique"], [51, 2, 1, "", "unref"], [51, 2, 1, "", "writable_data"]], "skia.DiscretePathEffect": [[52, 2, 1, "", "Make"], [52, 2, 1, "", "__init__"]], "skia.Document": [[53, 2, 1, "", "__init__"], [53, 2, 1, "", "abort"], [53, 2, 1, "", "beginPage"], [53, 2, 1, "", "close"], [53, 2, 1, "", "endPage"], [53, 2, 1, "", "page"], [53, 2, 1, "", "ref"], [53, 2, 1, "", "unique"], [53, 2, 1, "", "unref"]], "skia.Drawable": [[54, 2, 1, "", "Deserialize"], [55, 1, 1, "", "Type"], [54, 2, 1, "", "__init__"], [54, 2, 1, "", "draw"], [54, 2, 1, "", "getBounds"], [54, 2, 1, "", "getFlattenableType"], [54, 2, 1, "", "getGenerationID"], [54, 2, 1, "", "getTypeName"], [54, 3, 1, "", "kColorFilter_Type"], [54, 3, 1, "", "kDrawLooper_Type"], [54, 3, 1, "", "kDrawable_Type"], [54, 3, 1, "", "kImageFilter_Type"], [54, 3, 1, "", "kMaskFilter_Type"], [54, 3, 1, "", "kPathEffect_Type"], [54, 2, 1, "", "newPictureSnapshot"], [54, 2, 1, "", "notifyDrawingChanged"], [54, 2, 1, "", "ref"], [54, 2, 1, "", "serialize"], [54, 2, 1, "", "unique"], [54, 2, 1, "", "unref"]], "skia.Drawable.Type": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "kColorFilter_Type"], [55, 3, 1, "", "kDrawLooper_Type"], [55, 3, 1, "", "kDrawable_Type"], [55, 3, 1, "", "kImageFilter_Type"], [55, 3, 1, "", "kMaskFilter_Type"], [55, 3, 1, "", "kPathEffect_Type"], [55, 3, 1, "", "name"], [55, 3, 1, "", "value"]], "skia.DynamicMemoryWStream": [[56, 2, 1, "", "SizeOfPackedUInt"], [56, 2, 1, "", "__init__"], [56, 2, 1, "", "bytesWritten"], [56, 2, 1, "", "copyTo"], [56, 2, 1, "", "copyToAndReset"], [56, 2, 1, "", "detachAsData"], [56, 2, 1, "", "detachAsStream"], [56, 2, 1, "", "flush"], [56, 2, 1, "", "newline"], [56, 2, 1, "", "padToAlign4"], [56, 2, 1, "", "prependToAndReset"], [56, 2, 1, "", "read"], [56, 2, 1, "", "reset"], [56, 2, 1, "", "write"], [56, 2, 1, "", "write16"], [56, 2, 1, "", "write32"], [56, 2, 1, "", "write8"], [56, 2, 1, "", "writeBigDecAsText"], [56, 2, 1, "", "writeBool"], [56, 2, 1, "", "writeDecAsText"], [56, 2, 1, "", "writeHexAsText"], [56, 2, 1, "", "writePackedUInt"], [56, 2, 1, "", "writeScalar"], [56, 2, 1, "", "writeScalarAsText"], [56, 2, 1, "", "writeStream"], [56, 2, 1, "", "writeText"], [56, 2, 1, "", "writeToAndReset"], [56, 2, 1, "", "writeToStream"]], "skia.EncodedImageFormat": [[57, 2, 1, "", "__init__"], [57, 3, 1, "", "kASTC"], [57, 3, 1, "", "kBMP"], [57, 3, 1, "", "kDNG"], [57, 3, 1, "", "kGIF"], [57, 3, 1, "", "kHEIF"], [57, 3, 1, "", "kICO"], [57, 3, 1, "", "kJPEG"], [57, 3, 1, "", "kKTX"], [57, 3, 1, "", "kPKM"], [57, 3, 1, "", "kPNG"], [57, 3, 1, "", "kWBMP"], [57, 3, 1, "", "kWEBP"], [57, 3, 1, "", "name"], [57, 3, 1, "", "value"]], "skia.EncodedOrigin": [[58, 2, 1, "", "__init__"], [58, 3, 1, "", "kBottomLeft_EncodedOrigin"], [58, 3, 1, "", "kBottomRight_EncodedOrigin"], [58, 3, 1, "", "kDefault_EncodedOrigin"], [58, 3, 1, "", "kLast_EncodedOrigin"], [58, 3, 1, "", "kLeftBottom_EncodedOrigin"], [58, 3, 1, "", "kLeftTop_EncodedOrigin"], [58, 3, 1, "", "kRightBottom_EncodedOrigin"], [58, 3, 1, "", "kRightTop_EncodedOrigin"], [58, 3, 1, "", "kTopLeft_EncodedOrigin"], [58, 3, 1, "", "kTopRight_EncodedOrigin"], [58, 3, 1, "", "name"], [58, 3, 1, "", "value"]], "skia.FILEStream": [[59, 2, 1, "", "Make"], [59, 2, 1, "", "MakeFromFile"], [59, 2, 1, "", "__init__"], [59, 2, 1, "", "close"], [59, 2, 1, "", "duplicate"], [59, 2, 1, "", "fork"], [59, 2, 1, "", "getLength"], [59, 2, 1, "", "getMemoryBase"], [59, 2, 1, "", "getPosition"], [59, 2, 1, "", "hasLength"], [59, 2, 1, "", "hasPosition"], [59, 2, 1, "", "isAtEnd"], [59, 2, 1, "", "isValid"], [59, 2, 1, "", "move"], [59, 2, 1, "", "peek"], [59, 2, 1, "", "read"], [59, 2, 1, "", "readBool"], [59, 2, 1, "", "readPackedUInt"], [59, 2, 1, "", "readS16"], [59, 2, 1, "", "readS32"], [59, 2, 1, "", "readS8"], [59, 2, 1, "", "readScalar"], [59, 2, 1, "", "readU16"], [59, 2, 1, "", "readU32"], [59, 2, 1, "", "readU8"], [59, 2, 1, "", "rewind"], [59, 2, 1, "", "seek"], [59, 2, 1, "", "skip"]], "skia.FILEWStream": [[60, 2, 1, "", "SizeOfPackedUInt"], [60, 2, 1, "", "__init__"], [60, 2, 1, "", "bytesWritten"], [60, 2, 1, "", "flush"], [60, 2, 1, "", "fsync"], [60, 2, 1, "", "isValid"], [60, 2, 1, "", "newline"], [60, 2, 1, "", "write"], [60, 2, 1, "", "write16"], [60, 2, 1, "", "write32"], [60, 2, 1, "", "write8"], [60, 2, 1, "", "writeBigDecAsText"], [60, 2, 1, "", "writeBool"], [60, 2, 1, "", "writeDecAsText"], [60, 2, 1, "", "writeHexAsText"], [60, 2, 1, "", "writePackedUInt"], [60, 2, 1, "", "writeScalar"], [60, 2, 1, "", "writeScalarAsText"], [60, 2, 1, "", "writeStream"], [60, 2, 1, "", "writeText"]], "skia.FilterMode": [[61, 2, 1, "", "__init__"], [61, 3, 1, "", "kLinear"], [61, 3, 1, "", "kNearest"], [61, 3, 1, "", "name"], [61, 3, 1, "", "value"]], "skia.Flattanable": [[62, 2, 1, "", "Deserialize"], [63, 1, 1, "", "Type"], [62, 2, 1, "", "__init__"], [62, 2, 1, "", "getFlattenableType"], [62, 2, 1, "", "getTypeName"], [62, 3, 1, "", "kColorFilter_Type"], [62, 3, 1, "", "kDrawLooper_Type"], [62, 3, 1, "", "kDrawable_Type"], [62, 3, 1, "", "kImageFilter_Type"], [62, 3, 1, "", "kMaskFilter_Type"], [62, 3, 1, "", "kPathEffect_Type"], [62, 2, 1, "", "ref"], [62, 2, 1, "", "serialize"], [62, 2, 1, "", "unique"], [62, 2, 1, "", "unref"]], "skia.Flattanable.Type": [[63, 2, 1, "", "__init__"], [63, 3, 1, "", "kColorFilter_Type"], [63, 3, 1, "", "kDrawLooper_Type"], [63, 3, 1, "", "kDrawable_Type"], [63, 3, 1, "", "kImageFilter_Type"], [63, 3, 1, "", "kMaskFilter_Type"], [63, 3, 1, "", "kPathEffect_Type"], [63, 3, 1, "", "name"], [63, 3, 1, "", "value"]], "skia.Font": [[65, 1, 1, "", "Edging"], [64, 2, 1, "", "__init__"], [64, 2, 1, "", "countText"], [64, 2, 1, "", "dump"], [64, 2, 1, "", "getBounds"], [64, 2, 1, "", "getEdging"], [64, 2, 1, "", "getHinting"], [64, 2, 1, "", "getMetrics"], [64, 2, 1, "", "getPath"], [64, 2, 1, "", "getPaths"], [64, 2, 1, "", "getPos"], [64, 2, 1, "", "getScaleX"], [64, 2, 1, "", "getSize"], [64, 2, 1, "", "getSkewX"], [64, 2, 1, "", "getSpacing"], [64, 2, 1, "", "getTypeface"], [64, 2, 1, "", "getWidths"], [64, 2, 1, "", "getWidthsBounds"], [64, 2, 1, "", "getXPos"], [64, 2, 1, "", "isBaselineSnap"], [64, 2, 1, "", "isEmbeddedBitmaps"], [64, 2, 1, "", "isEmbolden"], [64, 2, 1, "", "isForceAutoHinting"], [64, 2, 1, "", "isLinearMetrics"], [64, 2, 1, "", "isSubpixel"], [64, 3, 1, "", "kAlias"], [64, 3, 1, "", "kAntiAlias"], [64, 3, 1, "", "kSubpixelAntiAlias"], [64, 2, 1, "", "makeWithSize"], [64, 2, 1, "", "measureText"], [64, 2, 1, "", "refTypeface"], [64, 2, 1, "", "setBaselineSnap"], [64, 2, 1, "", "setEdging"], [64, 2, 1, "", "setEmbeddedBitmaps"], [64, 2, 1, "", "setEmbolden"], [64, 2, 1, "", "setForceAutoHinting"], [64, 2, 1, "", "setHinting"], [64, 2, 1, "", "setLinearMetrics"], [64, 2, 1, "", "setScaleX"], [64, 2, 1, "", "setSize"], [64, 2, 1, "", "setSkewX"], [64, 2, 1, "", "setSubpixel"], [64, 2, 1, "", "setTypeface"], [64, 2, 1, "", "textToGlyphs"], [64, 2, 1, "", "unicharToGlyph"], [64, 2, 1, "", "unicharsToGlyphs"]], "skia.Font.Edging": [[65, 2, 1, "", "__init__"], [65, 3, 1, "", "kAlias"], [65, 3, 1, "", "kAntiAlias"], [65, 3, 1, "", "kSubpixelAntiAlias"], [65, 3, 1, "", "name"], [65, 3, 1, "", "value"]], "skia.FontArguments": [[67, 1, 1, "", "VariationPosition"], [66, 2, 1, "", "__init__"], [66, 2, 1, "", "getCollectionIndex"], [66, 2, 1, "", "getVariationDesignPosition"], [66, 2, 1, "", "setCollectionIndex"], [66, 2, 1, "", "setVariationDesignPosition"]], "skia.FontArguments.VariationPosition": [[68, 1, 1, "", "Coordinate"], [69, 1, 1, "", "Coordinates"], [67, 2, 1, "", "__init__"], [67, 3, 1, "", "coordinateCount"], [67, 3, 1, "", "coordinates"]], "skia.FontArguments.VariationPosition.Coordinate": [[68, 2, 1, "", "__init__"], [68, 3, 1, "", "axis"], [68, 3, 1, "", "value"]], "skia.FontArguments.VariationPosition.Coordinates": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "append"], [69, 2, 1, "", "clear"], [69, 2, 1, "", "extend"], [69, 2, 1, "", "insert"], [69, 2, 1, "", "pop"]], "skia.FontHinting": [[70, 2, 1, "", "__init__"], [70, 3, 1, "", "kFull"], [70, 3, 1, "", "kNone"], [70, 3, 1, "", "kNormal"], [70, 3, 1, "", "kSlight"], [70, 3, 1, "", "name"], [70, 3, 1, "", "value"]], "skia.FontMetrics": [[72, 1, 1, "", "FontMetricsFlags"], [71, 2, 1, "", "__init__"], [71, 3, 1, "", "fAscent"], [71, 3, 1, "", "fAvgCharWidth"], [71, 3, 1, "", "fBottom"], [71, 3, 1, "", "fCapHeight"], [71, 3, 1, "", "fDescent"], [71, 3, 1, "", "fFlags"], [71, 3, 1, "", "fLeading"], [71, 3, 1, "", "fMaxCharWidth"], [71, 3, 1, "", "fStrikeoutPosition"], [71, 3, 1, "", "fStrikeoutThickness"], [71, 3, 1, "", "fTop"], [71, 3, 1, "", "fUnderlinePosition"], [71, 3, 1, "", "fUnderlineThickness"], [71, 3, 1, "", "fXHeight"], [71, 3, 1, "", "fXMax"], [71, 3, 1, "", "fXMin"], [71, 2, 1, "", "hasStrikeoutPosition"], [71, 2, 1, "", "hasStrikeoutThickness"], [71, 2, 1, "", "hasUnderlinePosition"], [71, 2, 1, "", "hasUnderlineThickness"], [71, 3, 1, "", "kStrikeoutPositionIsValid_Flag"], [71, 3, 1, "", "kStrikeoutThicknessIsValid_Flag"], [71, 3, 1, "", "kUnderlinePositionIsValid_Flag"], [71, 3, 1, "", "kUnderlineThicknessIsValid_Flag"]], "skia.FontMetrics.FontMetricsFlags": [[72, 2, 1, "", "__init__"], [72, 3, 1, "", "kStrikeoutPositionIsValid_Flag"], [72, 3, 1, "", "kStrikeoutThicknessIsValid_Flag"], [72, 3, 1, "", "kUnderlinePositionIsValid_Flag"], [72, 3, 1, "", "kUnderlineThicknessIsValid_Flag"], [72, 3, 1, "", "name"], [72, 3, 1, "", "value"]], "skia.FontMgr": [[73, 2, 1, "", "New_Custom_Directory"], [73, 2, 1, "", "New_Custom_Empty"], [73, 2, 1, "", "OneFontMgr"], [73, 2, 1, "", "RefDefault"], [73, 2, 1, "", "__init__"], [73, 2, 1, "", "countFamilies"], [73, 2, 1, "", "createStyleSet"], [73, 2, 1, "", "getFamilyName"], [73, 2, 1, "", "legacyMakeTypeface"], [73, 2, 1, "", "makeFromData"], [73, 2, 1, "", "makeFromFile"], [73, 2, 1, "", "matchFamily"], [73, 2, 1, "", "matchFamilyStyle"], [73, 2, 1, "", "matchFamilyStyleCharacter"], [73, 2, 1, "", "ref"], [73, 2, 1, "", "unique"], [73, 2, 1, "", "unref"]], "skia.FontParameters": [[75, 1, 1, "", "Variation"], [74, 2, 1, "", "__init__"]], "skia.FontParameters.Variation": [[76, 1, 1, "", "Axis"], [75, 2, 1, "", "__init__"]], "skia.FontParameters.Variation.Axis": [[76, 2, 1, "", "__init__"], [76, 3, 1, "", "def"], [76, 2, 1, "", "isHidden"], [76, 3, 1, "", "max"], [76, 3, 1, "", "min"], [76, 2, 1, "", "setHidden"], [76, 3, 1, "", "tag"]], "skia.FontStyle": [[77, 2, 1, "", "Bold"], [77, 2, 1, "", "BoldItalic"], [77, 2, 1, "", "Italic"], [77, 2, 1, "", "Normal"], [78, 1, 1, "", "Slant"], [79, 1, 1, "", "Weight"], [80, 1, 1, "", "Width"], [77, 2, 1, "", "__init__"], [77, 3, 1, "", "kBlack_Weight"], [77, 3, 1, "", "kBold_Weight"], [77, 3, 1, "", "kCondensed_Width"], [77, 3, 1, "", "kExpanded_Width"], [77, 3, 1, "", "kExtraBlack_Weight"], [77, 3, 1, "", "kExtraBold_Weight"], [77, 3, 1, "", "kExtraCondensed_Width"], [77, 3, 1, "", "kExtraExpanded_Width"], [77, 3, 1, "", "kExtraLight_Weight"], [77, 3, 1, "", "kInvisible_Weight"], [77, 3, 1, "", "kItalic_Slant"], [77, 3, 1, "", "kLight_Weight"], [77, 3, 1, "", "kMedium_Weight"], [77, 3, 1, "", "kNormal_Weight"], [77, 3, 1, "", "kNormal_Width"], [77, 3, 1, "", "kOblique_Slant"], [77, 3, 1, "", "kSemiBold_Weight"], [77, 3, 1, "", "kSemiCondensed_Width"], [77, 3, 1, "", "kSemiExpanded_Width"], [77, 3, 1, "", "kThin_Weight"], [77, 3, 1, "", "kUltraCondensed_Width"], [77, 3, 1, "", "kUltraExpanded_Width"], [77, 3, 1, "", "kUpright_Slant"], [77, 2, 1, "", "slant"], [77, 2, 1, "", "weight"], [77, 2, 1, "", "width"]], "skia.FontStyle.Slant": [[78, 2, 1, "", "__init__"], [78, 3, 1, "", "kItalic_Slant"], [78, 3, 1, "", "kOblique_Slant"], [78, 3, 1, "", "kUpright_Slant"], [78, 3, 1, "", "name"], [78, 3, 1, "", "value"]], "skia.FontStyle.Weight": [[79, 2, 1, "", "__init__"], [79, 3, 1, "", "kBlack_Weight"], [79, 3, 1, "", "kBold_Weight"], [79, 3, 1, "", "kExtraBlack_Weight"], [79, 3, 1, "", "kExtraBold_Weight"], [79, 3, 1, "", "kExtraLight_Weight"], [79, 3, 1, "", "kInvisible_Weight"], [79, 3, 1, "", "kLight_Weight"], [79, 3, 1, "", "kMedium_Weight"], [79, 3, 1, "", "kNormal_Weight"], [79, 3, 1, "", "kSemiBold_Weight"], [79, 3, 1, "", "kThin_Weight"], [79, 3, 1, "", "name"], [79, 3, 1, "", "value"]], "skia.FontStyle.Width": [[80, 2, 1, "", "__init__"], [80, 3, 1, "", "kCondensed_Width"], [80, 3, 1, "", "kExpanded_Width"], [80, 3, 1, "", "kExtraCondensed_Width"], [80, 3, 1, "", "kExtraExpanded_Width"], [80, 3, 1, "", "kNormal_Width"], [80, 3, 1, "", "kSemiCondensed_Width"], [80, 3, 1, "", "kSemiExpanded_Width"], [80, 3, 1, "", "kUltraCondensed_Width"], [80, 3, 1, "", "kUltraExpanded_Width"], [80, 3, 1, "", "name"], [80, 3, 1, "", "value"]], "skia.FontStyleSet": [[81, 2, 1, "", "CreateEmpty"], [81, 2, 1, "", "__init__"], [81, 2, 1, "", "count"], [81, 2, 1, "", "createTypeface"], [81, 2, 1, "", "getStyle"], [81, 2, 1, "", "matchStyle"], [81, 2, 1, "", "ref"], [81, 2, 1, "", "unique"], [81, 2, 1, "", "unref"]], "skia.GrBackendApi": [[82, 2, 1, "", "__init__"], [82, 3, 1, "", "kDirect3D"], [82, 3, 1, "", "kMetal"], [82, 3, 1, "", "kMock"], [82, 3, 1, "", "kOpenGL"], [82, 3, 1, "", "kOpenGL_GrBackend"], [82, 3, 1, "", "kVulkan"], [82, 3, 1, "", "name"], [82, 3, 1, "", "value"]], "skia.GrBackendFormat": [[83, 2, 1, "", "MakeGL"], [83, 2, 1, "", "MakeMock"], [83, 2, 1, "", "MakeVk"], [83, 2, 1, "", "__init__"], [83, 2, 1, "", "asGLFormat"], [83, 2, 1, "", "asMockColorType"], [83, 2, 1, "", "asMockCompressionType"], [83, 2, 1, "", "asVkFormat"], [83, 2, 1, "", "backend"], [83, 2, 1, "", "channelMask"], [83, 2, 1, "", "getVkYcbcrConversionInfo"], [83, 2, 1, "", "isValid"], [83, 2, 1, "", "makeTexture2D"], [83, 2, 1, "", "textureType"]], "skia.GrBackendRenderTarget": [[84, 2, 1, "", "MakeGL"], [84, 2, 1, "", "__init__"], [84, 2, 1, "", "backend"], [84, 2, 1, "", "dimensions"], [84, 2, 1, "", "getBackendFormat"], [84, 2, 1, "", "getGLFramebufferInfo"], [84, 2, 1, "", "getMockRenderTargetInfo"], [84, 2, 1, "", "getVkImageInfo"], [84, 2, 1, "", "height"], [84, 2, 1, "", "isFramebufferOnly"], [84, 2, 1, "", "isProtected"], [84, 2, 1, "", "isValid"], [84, 2, 1, "", "sampleCnt"], [84, 2, 1, "", "setVkImageLayout"], [84, 2, 1, "", "stencilBits"], [84, 2, 1, "", "width"]], "skia.GrBackendRenderTargets": [[85, 2, 1, "", "MakeGL"], [85, 2, 1, "", "__init__"], [85, 2, 1, "", "backend"], [85, 2, 1, "", "dimensions"], [85, 2, 1, "", "getBackendFormat"], [85, 2, 1, "", "getGLFramebufferInfo"], [85, 2, 1, "", "getMockRenderTargetInfo"], [85, 2, 1, "", "getVkImageInfo"], [85, 2, 1, "", "height"], [85, 2, 1, "", "isFramebufferOnly"], [85, 2, 1, "", "isProtected"], [85, 2, 1, "", "isValid"], [85, 2, 1, "", "sampleCnt"], [85, 2, 1, "", "setVkImageLayout"], [85, 2, 1, "", "stencilBits"], [85, 2, 1, "", "width"]], "skia.GrBackendSemaphore": [[86, 2, 1, "", "MakeVk"], [86, 2, 1, "", "__init__"], [86, 2, 1, "", "isInitialized"], [86, 2, 1, "", "vkSemaphore"]], "skia.GrBackendTexture": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "backend"], [87, 2, 1, "", "dimensions"], [87, 2, 1, "", "getBackendFormat"], [87, 2, 1, "", "getGLTextureInfo"], [87, 2, 1, "", "getMockTextureInfo"], [87, 2, 1, "", "getVkImageInfo"], [87, 2, 1, "", "glTextureParametersModified"], [87, 2, 1, "", "hasMipmaps"], [87, 2, 1, "", "height"], [87, 2, 1, "", "isProtected"], [87, 2, 1, "", "isSameTexture"], [87, 2, 1, "", "isValid"], [87, 2, 1, "", "setMutableState"], [87, 2, 1, "", "setVkImageLayout"], [87, 2, 1, "", "width"]], "skia.GrColorType": [[88, 2, 1, "", "__init__"], [88, 3, 1, "", "kABGR_4444"], [88, 3, 1, "", "kAlpha_16"], [88, 3, 1, "", "kAlpha_8"], [88, 3, 1, "", "kAlpha_8xxx"], [88, 3, 1, "", "kAlpha_F16"], [88, 3, 1, "", "kAlpha_F32xxx"], [88, 3, 1, "", "kBGRA_8888"], [88, 3, 1, "", "kBGR_565"], [88, 3, 1, "", "kGray_8"], [88, 3, 1, "", "kGray_8xxx"], [88, 3, 1, "", "kGray_F16"], [88, 3, 1, "", "kLast"], [88, 3, 1, "", "kRGBA_1010102"], [88, 3, 1, "", "kRGBA_16161616"], [88, 3, 1, "", "kRGBA_8888"], [88, 3, 1, "", "kRGBA_8888_SRGB"], [88, 3, 1, "", "kRGBA_F16"], [88, 3, 1, "", "kRGBA_F16_Clamped"], [88, 3, 1, "", "kRGBA_F32"], [88, 3, 1, "", "kRGB_888"], [88, 3, 1, "", "kRGB_888x"], [88, 3, 1, "", "kRG_1616"], [88, 3, 1, "", "kRG_88"], [88, 3, 1, "", "kRG_F16"], [88, 3, 1, "", "kR_16"], [88, 3, 1, "", "kR_8"], [88, 3, 1, "", "kR_F16"], [88, 3, 1, "", "kUnknown"], [88, 3, 1, "", "name"], [88, 3, 1, "", "value"]], "skia.GrContext": [[89, 2, 1, "", "ComputeImageSize"], [89, 2, 1, "", "MakeGL"], [89, 2, 1, "", "MakeMock"], [89, 2, 1, "", "MakeVulkan"], [89, 2, 1, "", "__init__"], [89, 2, 1, "", "abandonContext"], [89, 2, 1, "", "abandoned"], [89, 2, 1, "", "asDirectContext"], [89, 2, 1, "", "backend"], [89, 2, 1, "", "checkAsyncWorkCompletion"], [89, 2, 1, "", "colorTypeSupportedAsImage"], [89, 2, 1, "", "colorTypeSupportedAsSurface"], [89, 2, 1, "", "compressedBackendFormat"], [89, 2, 1, "", "createBackendTexture"], [89, 2, 1, "", "createCompressedBackendTexture"], [89, 2, 1, "", "defaultBackendFormat"], [89, 2, 1, "", "deleteBackendTexture"], [89, 2, 1, "", "flush"], [89, 2, 1, "", "flushAndSubmit"], [89, 2, 1, "", "freeGpuResources"], [89, 2, 1, "", "getResourceCacheLimit"], [89, 2, 1, "", "getResourceCachePurgeableBytes"], [89, 2, 1, "", "getResourceCacheUsage"], [89, 2, 1, "", "maxRenderTargetSize"], [89, 2, 1, "", "maxSurfaceSampleCountForColorType"], [89, 2, 1, "", "maxTextureSize"], [89, 2, 1, "", "oomed"], [89, 2, 1, "", "precompileShader"], [89, 2, 1, "", "purgeResourcesNotUsedInMs"], [89, 2, 1, "", "purgeUnlockedResources"], [89, 2, 1, "", "ref"], [89, 2, 1, "", "releaseResourcesAndAbandonContext"], [89, 2, 1, "", "resetContext"], [89, 2, 1, "", "resetGLTextureBindings"], [89, 2, 1, "", "setBackendRenderTargetState"], [89, 2, 1, "", "setBackendTextureState"], [89, 2, 1, "", "setResourceCacheLimit"], [89, 2, 1, "", "storeVkPipelineCacheData"], [89, 2, 1, "", "submit"], [89, 2, 1, "", "supportsDistanceFieldText"], [89, 2, 1, "", "threadSafeProxy"], [89, 2, 1, "", "unique"], [89, 2, 1, "", "unref"], [89, 2, 1, "", "updateBackendTexture"], [89, 2, 1, "", "wait"]], "skia.GrContextOptions": [[90, 2, 1, "", "__init__"]], "skia.GrContext_Base": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "asDirectContext"], [91, 2, 1, "", "backend"], [91, 2, 1, "", "compressedBackendFormat"], [91, 2, 1, "", "defaultBackendFormat"], [91, 2, 1, "", "ref"], [91, 2, 1, "", "threadSafeProxy"], [91, 2, 1, "", "unique"], [91, 2, 1, "", "unref"]], "skia.GrDirectContext": [[92, 2, 1, "", "ComputeImageSize"], [92, 2, 1, "", "MakeGL"], [92, 2, 1, "", "MakeMock"], [92, 2, 1, "", "MakeVulkan"], [92, 2, 1, "", "__init__"], [92, 2, 1, "", "abandonContext"], [92, 2, 1, "", "abandoned"], [92, 2, 1, "", "asDirectContext"], [92, 2, 1, "", "backend"], [92, 2, 1, "", "checkAsyncWorkCompletion"], [92, 2, 1, "", "colorTypeSupportedAsImage"], [92, 2, 1, "", "colorTypeSupportedAsSurface"], [92, 2, 1, "", "compressedBackendFormat"], [92, 2, 1, "", "createBackendTexture"], [92, 2, 1, "", "createCompressedBackendTexture"], [92, 2, 1, "", "defaultBackendFormat"], [92, 2, 1, "", "deleteBackendTexture"], [92, 2, 1, "", "flush"], [92, 2, 1, "", "flushAndSubmit"], [92, 2, 1, "", "freeGpuResources"], [92, 2, 1, "", "getResourceCacheLimit"], [92, 2, 1, "", "getResourceCachePurgeableBytes"], [92, 2, 1, "", "getResourceCacheUsage"], [92, 2, 1, "", "maxRenderTargetSize"], [92, 2, 1, "", "maxSurfaceSampleCountForColorType"], [92, 2, 1, "", "maxTextureSize"], [92, 2, 1, "", "oomed"], [92, 2, 1, "", "precompileShader"], [92, 2, 1, "", "purgeResourcesNotUsedInMs"], [92, 2, 1, "", "purgeUnlockedResources"], [92, 2, 1, "", "ref"], [92, 2, 1, "", "releaseResourcesAndAbandonContext"], [92, 2, 1, "", "resetContext"], [92, 2, 1, "", "resetGLTextureBindings"], [92, 2, 1, "", "setBackendRenderTargetState"], [92, 2, 1, "", "setBackendTextureState"], [92, 2, 1, "", "setResourceCacheLimit"], [92, 2, 1, "", "storeVkPipelineCacheData"], [92, 2, 1, "", "submit"], [92, 2, 1, "", "supportsDistanceFieldText"], [92, 2, 1, "", "threadSafeProxy"], [92, 2, 1, "", "unique"], [92, 2, 1, "", "unref"], [92, 2, 1, "", "updateBackendTexture"], [92, 2, 1, "", "wait"]], "skia.GrDirectContexts": [[93, 2, 1, "", "ComputeImageSize"], [93, 2, 1, "", "MakeGL"], [93, 2, 1, "", "MakeMock"], [93, 2, 1, "", "MakeVulkan"], [93, 2, 1, "", "__init__"], [93, 2, 1, "", "abandonContext"], [93, 2, 1, "", "abandoned"], [93, 2, 1, "", "asDirectContext"], [93, 2, 1, "", "backend"], [93, 2, 1, "", "checkAsyncWorkCompletion"], [93, 2, 1, "", "colorTypeSupportedAsImage"], [93, 2, 1, "", "colorTypeSupportedAsSurface"], [93, 2, 1, "", "compressedBackendFormat"], [93, 2, 1, "", "createBackendTexture"], [93, 2, 1, "", "createCompressedBackendTexture"], [93, 2, 1, "", "defaultBackendFormat"], [93, 2, 1, "", "deleteBackendTexture"], [93, 2, 1, "", "flush"], [93, 2, 1, "", "flushAndSubmit"], [93, 2, 1, "", "freeGpuResources"], [93, 2, 1, "", "getResourceCacheLimit"], [93, 2, 1, "", "getResourceCachePurgeableBytes"], [93, 2, 1, "", "getResourceCacheUsage"], [93, 2, 1, "", "maxRenderTargetSize"], [93, 2, 1, "", "maxSurfaceSampleCountForColorType"], [93, 2, 1, "", "maxTextureSize"], [93, 2, 1, "", "oomed"], [93, 2, 1, "", "precompileShader"], [93, 2, 1, "", "purgeResourcesNotUsedInMs"], [93, 2, 1, "", "purgeUnlockedResources"], [93, 2, 1, "", "ref"], [93, 2, 1, "", "releaseResourcesAndAbandonContext"], [93, 2, 1, "", "resetContext"], [93, 2, 1, "", "resetGLTextureBindings"], [93, 2, 1, "", "setBackendRenderTargetState"], [93, 2, 1, "", "setBackendTextureState"], [93, 2, 1, "", "setResourceCacheLimit"], [93, 2, 1, "", "storeVkPipelineCacheData"], [93, 2, 1, "", "submit"], [93, 2, 1, "", "supportsDistanceFieldText"], [93, 2, 1, "", "threadSafeProxy"], [93, 2, 1, "", "unique"], [93, 2, 1, "", "unref"], [93, 2, 1, "", "updateBackendTexture"], [93, 2, 1, "", "wait"]], "skia.GrFlushInfo": [[94, 2, 1, "", "__init__"], [94, 3, 1, "", "fNumSemaphores"], [94, 3, 1, "", "semaphores"]], "skia.GrGLBackendState": [[95, 2, 1, "", "__init__"], [95, 3, 1, "", "kALL_GrGLBackendState"], [95, 3, 1, "", "kBlend_GrGLBackendState"], [95, 3, 1, "", "kFixedFunction_GrGLBackendState"], [95, 3, 1, "", "kMSAAEnable_GrGLBackendState"], [95, 3, 1, "", "kMisc_GrGLBackendState"], [95, 3, 1, "", "kPixelStore_GrGLBackendState"], [95, 3, 1, "", "kProgram_GrGLBackendState"], [95, 3, 1, "", "kRenderTarget_GrGLBackendState"], [95, 3, 1, "", "kStencil_GrGLBackendState"], [95, 3, 1, "", "kTextureBinding_GrGLBackendState"], [95, 3, 1, "", "kVertex_GrGLBackendState"], [95, 3, 1, "", "kView_GrGLBackendState"], [95, 3, 1, "", "name"], [95, 3, 1, "", "value"]], "skia.GrGLFormat": [[96, 2, 1, "", "__init__"], [96, 3, 1, "", "kALPHA8"], [96, 3, 1, "", "kBGRA8"], [96, 3, 1, "", "kCOMPRESSED_ETC1_RGB8"], [96, 3, 1, "", "kCOMPRESSED_RGB8_BC1"], [96, 3, 1, "", "kCOMPRESSED_RGB8_ETC2"], [96, 3, 1, "", "kCOMPRESSED_RGBA8_BC1"], [96, 3, 1, "", "kLUMINANCE16F"], [96, 3, 1, "", "kLUMINANCE8"], [96, 3, 1, "", "kLast"], [96, 3, 1, "", "kR16"], [96, 3, 1, "", "kR16F"], [96, 3, 1, "", "kR8"], [96, 3, 1, "", "kRG16"], [96, 3, 1, "", "kRG16F"], [96, 3, 1, "", "kRG8"], [96, 3, 1, "", "kRGB10_A2"], [96, 3, 1, "", "kRGB565"], [96, 3, 1, "", "kRGB8"], [96, 3, 1, "", "kRGBA16"], [96, 3, 1, "", "kRGBA16F"], [96, 3, 1, "", "kRGBA4"], [96, 3, 1, "", "kRGBA8"], [96, 3, 1, "", "kSRGB8_ALPHA8"], [96, 3, 1, "", "kUnknown"], [96, 3, 1, "", "name"], [96, 3, 1, "", "value"]], "skia.GrGLFramebufferInfo": [[97, 2, 1, "", "__init__"], [97, 3, 1, "", "fFBOID"], [97, 3, 1, "", "fFormat"]], "skia.GrGLInterface": [[98, 2, 1, "", "MakeEGL"], [98, 2, 1, "", "MakeGLX"], [98, 2, 1, "", "__init__"], [98, 2, 1, "", "ref"], [98, 2, 1, "", "unique"], [98, 2, 1, "", "unref"], [98, 2, 1, "", "validate"]], "skia.GrGLTextureInfo": [[99, 2, 1, "", "__init__"], [99, 3, 1, "", "fFormat"], [99, 3, 1, "", "fID"], [99, 3, 1, "", "fTarget"]], "skia.GrImageContext": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "asDirectContext"], [100, 2, 1, "", "backend"], [100, 2, 1, "", "compressedBackendFormat"], [100, 2, 1, "", "defaultBackendFormat"], [100, 2, 1, "", "ref"], [100, 2, 1, "", "threadSafeProxy"], [100, 2, 1, "", "unique"], [100, 2, 1, "", "unref"]], "skia.GrMipmapped": [[101, 2, 1, "", "__init__"], [101, 3, 1, "", "kNo"], [101, 3, 1, "", "kYes"], [101, 3, 1, "", "name"], [101, 3, 1, "", "value"]], "skia.GrMockOptions": [[102, 2, 1, "", "__init__"]], "skia.GrMockRenderTargetInfo": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "colorType"], [103, 2, 1, "", "getBackendFormat"]], "skia.GrMockTextureInfo": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "colorType"], [104, 2, 1, "", "compressionType"], [104, 2, 1, "", "getBackendFormat"], [104, 2, 1, "", "id"]], "skia.GrProtected": [[105, 2, 1, "", "__init__"], [105, 3, 1, "", "kNo"], [105, 3, 1, "", "kYes"], [105, 3, 1, "", "name"], [105, 3, 1, "", "value"]], "skia.GrPurgeResourceOptions": [[106, 2, 1, "", "__init__"], [106, 3, 1, "", "kAllResources"], [106, 3, 1, "", "kScratchResourcesOnly"], [106, 3, 1, "", "name"], [106, 3, 1, "", "value"]], "skia.GrRecordingContext": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "abandoned"], [107, 2, 1, "", "asDirectContext"], [107, 2, 1, "", "backend"], [107, 2, 1, "", "colorTypeSupportedAsImage"], [107, 2, 1, "", "colorTypeSupportedAsSurface"], [107, 2, 1, "", "compressedBackendFormat"], [107, 2, 1, "", "defaultBackendFormat"], [107, 2, 1, "", "maxRenderTargetSize"], [107, 2, 1, "", "maxSurfaceSampleCountForColorType"], [107, 2, 1, "", "maxTextureSize"], [107, 2, 1, "", "ref"], [107, 2, 1, "", "threadSafeProxy"], [107, 2, 1, "", "unique"], [107, 2, 1, "", "unref"]], "skia.GrRenderable": [[108, 2, 1, "", "__init__"], [108, 3, 1, "", "kNo"], [108, 3, 1, "", "kYes"], [108, 3, 1, "", "name"], [108, 3, 1, "", "value"]], "skia.GrSemaphoresSubmitted": [[109, 2, 1, "", "__init__"], [109, 3, 1, "", "kNo"], [109, 3, 1, "", "kYes"], [109, 3, 1, "", "name"], [109, 3, 1, "", "value"]], "skia.GrSurfaceOrigin": [[110, 2, 1, "", "__init__"], [110, 3, 1, "", "kBottomLeft_GrSurfaceOrigin"], [110, 3, 1, "", "kTopLeft_GrSurfaceOrigin"], [110, 3, 1, "", "name"], [110, 3, 1, "", "value"]], "skia.GrSyncCpu": [[111, 2, 1, "", "__init__"], [111, 3, 1, "", "kNo"], [111, 3, 1, "", "kYes"], [111, 3, 1, "", "name"], [111, 3, 1, "", "value"]], "skia.GrTextureType": [[112, 2, 1, "", "__init__"], [112, 3, 1, "", "k2D"], [112, 3, 1, "", "kExternal"], [112, 3, 1, "", "kNone"], [112, 3, 1, "", "kRectangle"], [112, 3, 1, "", "name"], [112, 3, 1, "", "value"]], "skia.GrVkAlloc": [[113, 2, 1, "", "__init__"]], "skia.GrVkBackendContext": [[114, 2, 1, "", "__init__"]], "skia.GrVkDrawableInfo": [[115, 2, 1, "", "__init__"]], "skia.GrVkImageInfo": [[116, 2, 1, "", "__init__"], [116, 3, 1, "", "fAlloc"], [116, 3, 1, "", "fCurrentQueueFamily"], [116, 3, 1, "", "fLevelCount"], [116, 3, 1, "", "fProtected"], [116, 3, 1, "", "fSharingMode"], [116, 3, 1, "", "fYcbcrConversionInfo"]], "skia.GrVkYcbcrConversionInfo": [[117, 2, 1, "", "__init__"]], "skia.GradientShader": [[119, 1, 1, "", "Flags"], [118, 2, 1, "", "MakeLinear"], [118, 2, 1, "", "MakeRadial"], [118, 2, 1, "", "MakeSweep"], [118, 2, 1, "", "MakeTwoPointConical"], [118, 2, 1, "", "__init__"], [118, 3, 1, "", "kInterpolateColorsInPremul_Flag"]], "skia.GradientShader.Flags": [[119, 2, 1, "", "__init__"], [119, 3, 1, "", "kInterpolateColorsInPremul_Flag"], [119, 3, 1, "", "name"], [119, 3, 1, "", "value"]], "skia.HighContrastConfig": [[121, 1, 1, "", "InvertStyle"], [120, 2, 1, "", "__init__"], [120, 3, 1, "", "fContrast"], [120, 3, 1, "", "fGrayscale"], [120, 3, 1, "", "fInvertStyle"], [120, 2, 1, "", "isValid"], [120, 3, 1, "", "kInvertBrightness"], [120, 3, 1, "", "kInvertLightness"], [120, 3, 1, "", "kLast"], [120, 3, 1, "", "kNoInvert"]], "skia.HighContrastConfig.InvertStyle": [[121, 2, 1, "", "__init__"], [121, 3, 1, "", "kInvertBrightness"], [121, 3, 1, "", "kInvertLightness"], [121, 3, 1, "", "kLast"], [121, 3, 1, "", "kNoInvert"], [121, 3, 1, "", "name"], [121, 3, 1, "", "value"]], "skia.HighContrastFilter": [[122, 2, 1, "", "Make"], [122, 2, 1, "", "__init__"]], "skia.IPoint": [[123, 2, 1, "", "Make"], [123, 2, 1, "", "__init__"], [123, 2, 1, "", "equals"], [123, 3, 1, "", "fX"], [123, 3, 1, "", "fY"], [123, 2, 1, "", "isZero"], [123, 2, 1, "", "set"], [123, 2, 1, "", "x"], [123, 2, 1, "", "y"]], "skia.IRect": [[124, 2, 1, "", "Intersects"], [124, 2, 1, "", "MakeEmpty"], [124, 2, 1, "", "MakeLTRB"], [124, 2, 1, "", "MakeSize"], [124, 2, 1, "", "MakeWH"], [124, 2, 1, "", "MakeXYWH"], [124, 2, 1, "", "__init__"], [124, 2, 1, "", "adjust"], [124, 2, 1, "", "bottom"], [124, 2, 1, "", "contains"], [124, 2, 1, "", "containsNoEmptyCheck"], [124, 3, 1, "", "fBottom"], [124, 3, 1, "", "fLeft"], [124, 3, 1, "", "fRight"], [124, 3, 1, "", "fTop"], [124, 2, 1, "", "height"], [124, 2, 1, "", "height64"], [124, 2, 1, "", "inset"], [124, 2, 1, "", "intersect"], [124, 2, 1, "", "isEmpty"], [124, 2, 1, "", "isEmpty64"], [124, 2, 1, "", "join"], [124, 2, 1, "", "left"], [124, 2, 1, "", "makeInset"], [124, 2, 1, "", "makeOffset"], [124, 2, 1, "", "makeOutset"], [124, 2, 1, "", "makeSorted"], [124, 2, 1, "", "offset"], [124, 2, 1, "", "offsetTo"], [124, 2, 1, "", "outset"], [124, 2, 1, "", "right"], [124, 2, 1, "", "setEmpty"], [124, 2, 1, "", "setLTRB"], [124, 2, 1, "", "setWH"], [124, 2, 1, "", "setXYWH"], [124, 2, 1, "", "size"], [124, 2, 1, "", "sort"], [124, 2, 1, "", "top"], [124, 2, 1, "", "topLeft"], [124, 2, 1, "", "width"], [124, 2, 1, "", "width64"], [124, 2, 1, "", "x"], [124, 2, 1, "", "y"]], "skia.ISize": [[125, 2, 1, "", "Make"], [125, 2, 1, "", "MakeEmpty"], [125, 2, 1, "", "__init__"], [125, 2, 1, "", "area"], [125, 2, 1, "", "equals"], [125, 3, 1, "", "fHeight"], [125, 3, 1, "", "fWidth"], [125, 2, 1, "", "height"], [125, 2, 1, "", "isEmpty"], [125, 2, 1, "", "isZero"], [125, 2, 1, "", "set"], [125, 2, 1, "", "setEmpty"], [125, 2, 1, "", "width"]], "skia.Image": [[127, 1, 1, "", "BitDepth"], [128, 1, 1, "", "CachingHint"], [129, 1, 1, "", "CompressionType"], [130, 1, 1, "", "LegacyBitmapMode"], [126, 2, 1, "", "MakeBackendTextureFromImage"], [126, 2, 1, "", "MakeCrossContextFromPixmap"], [126, 2, 1, "", "MakeFromAdoptedTexture"], [126, 2, 1, "", "MakeFromBitmap"], [126, 2, 1, "", "MakeFromCompressedTexture"], [126, 2, 1, "", "MakeFromEncoded"], [126, 2, 1, "", "MakeFromPicture"], [126, 2, 1, "", "MakeFromRaster"], [126, 2, 1, "", "MakeFromTexture"], [126, 2, 1, "", "MakeFromYUVAPixmaps"], [126, 2, 1, "", "MakeRasterCopy"], [126, 2, 1, "", "MakeRasterData"], [126, 2, 1, "", "MakeRasterFromCompressed"], [126, 2, 1, "", "MakeTextureFromCompressed"], [126, 2, 1, "", "__init__"], [126, 2, 1, "", "alphaType"], [126, 2, 1, "", "asLegacyBitmap"], [126, 2, 1, "", "bitmap"], [126, 2, 1, "", "bounds"], [126, 2, 1, "", "colorSpace"], [126, 2, 1, "", "colorType"], [126, 2, 1, "", "convert"], [126, 2, 1, "", "dimensions"], [126, 2, 1, "", "encodeToData"], [126, 2, 1, "", "flush"], [126, 2, 1, "", "flushAndSubmit"], [126, 2, 1, "", "fromarray"], [126, 2, 1, "", "frombytes"], [126, 2, 1, "", "getBackendTexture"], [126, 2, 1, "", "hasMipmaps"], [126, 2, 1, "", "height"], [126, 2, 1, "", "imageInfo"], [126, 2, 1, "", "isAlphaOnly"], [126, 2, 1, "", "isLazyGenerated"], [126, 2, 1, "", "isOpaque"], [126, 2, 1, "", "isTextureBacked"], [126, 2, 1, "", "isValid"], [126, 3, 1, "", "kAllow_CachingHint"], [126, 3, 1, "", "kBC1_RGB8_UNORM"], [126, 3, 1, "", "kBC1_RGBA8_UNORM"], [126, 3, 1, "", "kDisallow_CachingHint"], [126, 3, 1, "", "kETC2_RGB8_UNORM"], [126, 3, 1, "", "kF16"], [126, 3, 1, "", "kLast"], [126, 3, 1, "", "kNone"], [126, 3, 1, "", "kRO_LegacyBitmapMode"], [126, 3, 1, "", "kU8"], [126, 2, 1, "", "makeColorSpace"], [126, 2, 1, "", "makeColorTypeAndColorSpace"], [126, 2, 1, "", "makeNonTextureImage"], [126, 2, 1, "", "makeRasterImage"], [126, 2, 1, "", "makeRawShader"], [126, 2, 1, "", "makeShader"], [126, 2, 1, "", "makeSubset"], [126, 2, 1, "", "makeTextureImage"], [126, 2, 1, "", "makeWithFilter"], [126, 2, 1, "", "open"], [126, 2, 1, "", "peekPixels"], [126, 2, 1, "", "readPixels"], [126, 2, 1, "", "ref"], [126, 2, 1, "", "refColorSpace"], [126, 2, 1, "", "refEncodedData"], [126, 2, 1, "", "reinterpretColorSpace"], [126, 2, 1, "", "resize"], [126, 2, 1, "", "save"], [126, 2, 1, "", "scalePixels"], [126, 2, 1, "", "toarray"], [126, 2, 1, "", "tobytes"], [126, 2, 1, "", "unique"], [126, 2, 1, "", "uniqueID"], [126, 2, 1, "", "unref"], [126, 2, 1, "", "width"], [126, 2, 1, "", "withDefaultMipmaps"]], "skia.Image.BitDepth": [[127, 2, 1, "", "__init__"], [127, 3, 1, "", "kF16"], [127, 3, 1, "", "kU8"], [127, 3, 1, "", "name"], [127, 3, 1, "", "value"]], "skia.Image.CachingHint": [[128, 2, 1, "", "__init__"], [128, 3, 1, "", "kAllow_CachingHint"], [128, 3, 1, "", "kDisallow_CachingHint"], [128, 3, 1, "", "name"], [128, 3, 1, "", "value"]], "skia.Image.CompressionType": [[129, 2, 1, "", "__init__"], [129, 3, 1, "", "kBC1_RGB8_UNORM"], [129, 3, 1, "", "kBC1_RGBA8_UNORM"], [129, 3, 1, "", "kETC2_RGB8_UNORM"], [129, 3, 1, "", "kLast"], [129, 3, 1, "", "kNone"], [129, 3, 1, "", "name"], [129, 3, 1, "", "value"]], "skia.Image.LegacyBitmapMode": [[130, 2, 1, "", "__init__"], [130, 3, 1, "", "kRO_LegacyBitmapMode"], [130, 3, 1, "", "name"], [130, 3, 1, "", "value"]], "skia.ImageFilter": [[132, 1, 1, "", "CropRect"], [131, 2, 1, "", "Deserialize"], [133, 1, 1, "", "MapDirection"], [134, 1, 1, "", "Type"], [131, 2, 1, "", "__init__"], [131, 2, 1, "", "asAColorFilter"], [131, 2, 1, "", "asColorFilter"], [131, 2, 1, "", "canComputeFastBounds"], [131, 2, 1, "", "computeFastBounds"], [131, 2, 1, "", "countInputs"], [131, 2, 1, "", "filterBounds"], [131, 2, 1, "", "getFlattenableType"], [131, 2, 1, "", "getInput"], [131, 2, 1, "", "getTypeName"], [131, 2, 1, "", "isColorFilterNode"], [131, 3, 1, "", "kColorFilter_Type"], [131, 3, 1, "", "kDrawLooper_Type"], [131, 3, 1, "", "kDrawable_Type"], [131, 3, 1, "", "kForward_MapDirection"], [131, 3, 1, "", "kImageFilter_Type"], [131, 3, 1, "", "kMaskFilter_Type"], [131, 3, 1, "", "kPathEffect_Type"], [131, 3, 1, "", "kReverse_MapDirection"], [131, 2, 1, "", "makeWithLocalMatrix"], [131, 2, 1, "", "ref"], [131, 2, 1, "", "serialize"], [131, 2, 1, "", "unique"], [131, 2, 1, "", "unref"]], "skia.ImageFilter.CropRect": [[132, 2, 1, "", "__init__"]], "skia.ImageFilter.MapDirection": [[133, 2, 1, "", "__init__"], [133, 3, 1, "", "kForward_MapDirection"], [133, 3, 1, "", "kReverse_MapDirection"], [133, 3, 1, "", "name"], [133, 3, 1, "", "value"]], "skia.ImageFilter.Type": [[134, 2, 1, "", "__init__"], [134, 3, 1, "", "kColorFilter_Type"], [134, 3, 1, "", "kDrawLooper_Type"], [134, 3, 1, "", "kDrawable_Type"], [134, 3, 1, "", "kImageFilter_Type"], [134, 3, 1, "", "kMaskFilter_Type"], [134, 3, 1, "", "kPathEffect_Type"], [134, 3, 1, "", "name"], [134, 3, 1, "", "value"]], "skia.ImageFilters": [[135, 2, 1, "", "Arithmetic"], [135, 2, 1, "", "Blur"], [135, 2, 1, "", "ColorFilter"], [135, 2, 1, "", "Compose"], [135, 2, 1, "", "Dilate"], [135, 2, 1, "", "DisplacementMap"], [135, 2, 1, "", "DistantLitDiffuse"], [135, 2, 1, "", "DistantLitSpecular"], [135, 2, 1, "", "DropShadow"], [135, 2, 1, "", "DropShadowOnly"], [135, 2, 1, "", "Erode"], [135, 2, 1, "", "Image"], [135, 2, 1, "", "Magnifier"], [135, 2, 1, "", "MatrixConvolution"], [135, 2, 1, "", "MatrixTransform"], [135, 2, 1, "", "Merge"], [135, 2, 1, "", "Offset"], [135, 2, 1, "", "Picture"], [135, 2, 1, "", "PointLitDiffuse"], [135, 2, 1, "", "PointLitSpecular"], [135, 2, 1, "", "SpotLitDiffuse"], [135, 2, 1, "", "SpotLitSpecular"], [135, 2, 1, "", "Tile"], [135, 2, 1, "", "Xfermode"], [135, 2, 1, "", "__init__"]], "skia.ImageInfo": [[136, 2, 1, "", "ByteSizeOverflowed"], [136, 2, 1, "", "Make"], [136, 2, 1, "", "MakeA8"], [136, 2, 1, "", "MakeN32"], [136, 2, 1, "", "MakeN32Premul"], [136, 2, 1, "", "MakeS32"], [136, 2, 1, "", "MakeUnknown"], [136, 2, 1, "", "__init__"], [136, 2, 1, "", "alphaType"], [136, 2, 1, "", "bounds"], [136, 2, 1, "", "bytesPerPixel"], [136, 2, 1, "", "colorInfo"], [136, 2, 1, "", "colorSpace"], [136, 2, 1, "", "colorType"], [136, 2, 1, "", "computeByteSize"], [136, 2, 1, "", "computeMinByteSize"], [136, 2, 1, "", "computeOffset"], [136, 2, 1, "", "dimensions"], [136, 2, 1, "", "gammaCloseToSRGB"], [136, 2, 1, "", "height"], [136, 2, 1, "", "isEmpty"], [136, 2, 1, "", "isOpaque"], [136, 2, 1, "", "makeAlphaType"], [136, 2, 1, "", "makeColorSpace"], [136, 2, 1, "", "makeColorType"], [136, 2, 1, "", "makeDimensions"], [136, 2, 1, "", "makeWH"], [136, 2, 1, "", "minRowBytes"], [136, 2, 1, "", "minRowBytes64"], [136, 2, 1, "", "refColorSpace"], [136, 2, 1, "", "reset"], [136, 2, 1, "", "shiftPerPixel"], [136, 2, 1, "", "validRowBytes"], [136, 2, 1, "", "width"]], "skia.Line2DPathEffect": [[137, 2, 1, "", "Make"], [137, 2, 1, "", "__init__"]], "skia.LumaColorFilter": [[138, 2, 1, "", "Make"], [138, 2, 1, "", "__init__"]], "skia.M44": [[139, 2, 1, "", "__init__"]], "skia.MaskFilter": [[140, 2, 1, "", "Deserialize"], [140, 2, 1, "", "MakeBlur"], [141, 1, 1, "", "Type"], [140, 2, 1, "", "__init__"], [140, 2, 1, "", "getFlattenableType"], [140, 2, 1, "", "getTypeName"], [140, 3, 1, "", "kColorFilter_Type"], [140, 3, 1, "", "kDrawLooper_Type"], [140, 3, 1, "", "kDrawable_Type"], [140, 3, 1, "", "kImageFilter_Type"], [140, 3, 1, "", "kMaskFilter_Type"], [140, 3, 1, "", "kPathEffect_Type"], [140, 2, 1, "", "ref"], [140, 2, 1, "", "serialize"], [140, 2, 1, "", "unique"], [140, 2, 1, "", "unref"]], "skia.MaskFilter.Type": [[141, 2, 1, "", "__init__"], [141, 3, 1, "", "kColorFilter_Type"], [141, 3, 1, "", "kDrawLooper_Type"], [141, 3, 1, "", "kDrawable_Type"], [141, 3, 1, "", "kImageFilter_Type"], [141, 3, 1, "", "kMaskFilter_Type"], [141, 3, 1, "", "kPathEffect_Type"], [141, 3, 1, "", "name"], [141, 3, 1, "", "value"]], "skia.Matrix": [[142, 2, 1, "", "Concat"], [142, 2, 1, "", "I"], [142, 2, 1, "", "InvalidMatrix"], [142, 2, 1, "", "MakeAll"], [142, 2, 1, "", "MakeRectToRect"], [142, 2, 1, "", "RotateDeg"], [142, 2, 1, "", "RotateRad"], [142, 2, 1, "", "Scale"], [143, 1, 1, "", "ScaleToFit"], [142, 2, 1, "", "SetAffineIdentity"], [142, 2, 1, "", "Translate"], [144, 1, 1, "", "TypeMask"], [142, 2, 1, "", "__init__"], [142, 2, 1, "", "asAffine"], [142, 2, 1, "", "decomposeScale"], [142, 2, 1, "", "dirtyMatrixTypeCache"], [142, 2, 1, "", "dump"], [142, 2, 1, "", "get"], [142, 2, 1, "", "get9"], [142, 2, 1, "", "getMaxScale"], [142, 2, 1, "", "getMinMaxScales"], [142, 2, 1, "", "getMinScale"], [142, 2, 1, "", "getPerspX"], [142, 2, 1, "", "getPerspY"], [142, 2, 1, "", "getScaleX"], [142, 2, 1, "", "getScaleY"], [142, 2, 1, "", "getSkewX"], [142, 2, 1, "", "getSkewY"], [142, 2, 1, "", "getTranslateX"], [142, 2, 1, "", "getTranslateY"], [142, 2, 1, "", "getType"], [142, 2, 1, "", "hasPerspective"], [142, 2, 1, "", "invert"], [142, 2, 1, "", "isFinite"], [142, 2, 1, "", "isIdentity"], [142, 2, 1, "", "isScaleTranslate"], [142, 2, 1, "", "isSimilarity"], [142, 2, 1, "", "isTranslate"], [142, 3, 1, "", "kAScaleX"], [142, 3, 1, "", "kAScaleY"], [142, 3, 1, "", "kASkewX"], [142, 3, 1, "", "kASkewY"], [142, 3, 1, "", "kATransX"], [142, 3, 1, "", "kATransY"], [142, 3, 1, "", "kAffine_Mask"], [142, 3, 1, "", "kCenter_ScaleToFit"], [142, 3, 1, "", "kEnd_ScaleToFit"], [142, 3, 1, "", "kFill_ScaleToFit"], [142, 3, 1, "", "kIdentity_Mask"], [142, 3, 1, "", "kMPersp0"], [142, 3, 1, "", "kMPersp1"], [142, 3, 1, "", "kMPersp2"], [142, 3, 1, "", "kMScaleX"], [142, 3, 1, "", "kMScaleY"], [142, 3, 1, "", "kMSkewX"], [142, 3, 1, "", "kMSkewY"], [142, 3, 1, "", "kMTransX"], [142, 3, 1, "", "kMTransY"], [142, 3, 1, "", "kPerspective_Mask"], [142, 3, 1, "", "kScale_Mask"], [142, 3, 1, "", "kStart_ScaleToFit"], [142, 3, 1, "", "kTranslate_Mask"], [142, 2, 1, "", "mapHomogeneousPoints"], [142, 2, 1, "", "mapPoints"], [142, 2, 1, "", "mapRadius"], [142, 2, 1, "", "mapRect"], [142, 2, 1, "", "mapRectScaleTranslate"], [142, 2, 1, "", "mapRectToQuad"], [142, 2, 1, "", "mapVector"], [142, 2, 1, "", "mapVectors"], [142, 2, 1, "", "mapXY"], [142, 2, 1, "", "normalizePerspective"], [142, 2, 1, "", "postConcat"], [142, 2, 1, "", "postRotate"], [142, 2, 1, "", "postScale"], [142, 2, 1, "", "postSkew"], [142, 2, 1, "", "postTranslate"], [142, 2, 1, "", "preConcat"], [142, 2, 1, "", "preRotate"], [142, 2, 1, "", "preScale"], [142, 2, 1, "", "preSkew"], [142, 2, 1, "", "preTranslate"], [142, 2, 1, "", "preservesAxisAlignment"], [142, 2, 1, "", "preservesRightAngles"], [142, 2, 1, "", "rc"], [142, 2, 1, "", "rectStaysRect"], [142, 2, 1, "", "reset"], [142, 2, 1, "", "set"], [142, 2, 1, "", "set9"], [142, 2, 1, "", "setAffine"], [142, 2, 1, "", "setAll"], [142, 2, 1, "", "setConcat"], [142, 2, 1, "", "setIdentity"], [142, 2, 1, "", "setPerspX"], [142, 2, 1, "", "setPerspY"], [142, 2, 1, "", "setPolyToPoly"], [142, 2, 1, "", "setRSXform"], [142, 2, 1, "", "setRectToRect"], [142, 2, 1, "", "setRotate"], [142, 2, 1, "", "setScale"], [142, 2, 1, "", "setScaleTranslate"], [142, 2, 1, "", "setScaleX"], [142, 2, 1, "", "setScaleY"], [142, 2, 1, "", "setSinCos"], [142, 2, 1, "", "setSkew"], [142, 2, 1, "", "setSkewX"], [142, 2, 1, "", "setSkewY"], [142, 2, 1, "", "setTranslate"], [142, 2, 1, "", "setTranslateX"], [142, 2, 1, "", "setTranslateY"]], "skia.Matrix.ScaleToFit": [[143, 2, 1, "", "__init__"], [143, 3, 1, "", "kCenter_ScaleToFit"], [143, 3, 1, "", "kEnd_ScaleToFit"], [143, 3, 1, "", "kFill_ScaleToFit"], [143, 3, 1, "", "kStart_ScaleToFit"], [143, 3, 1, "", "name"], [143, 3, 1, "", "value"]], "skia.Matrix.TypeMask": [[144, 2, 1, "", "__init__"], [144, 3, 1, "", "kAffine_Mask"], [144, 3, 1, "", "kIdentity_Mask"], [144, 3, 1, "", "kPerspective_Mask"], [144, 3, 1, "", "kScale_Mask"], [144, 3, 1, "", "kTranslate_Mask"], [144, 3, 1, "", "name"], [144, 3, 1, "", "value"]], "skia.MemoryStream": [[145, 2, 1, "", "Make"], [145, 2, 1, "", "MakeCopy"], [145, 2, 1, "", "MakeDirect"], [145, 2, 1, "", "MakeFromFile"], [145, 2, 1, "", "__init__"], [145, 2, 1, "", "asData"], [145, 2, 1, "", "duplicate"], [145, 2, 1, "", "fork"], [145, 2, 1, "", "getAtPos"], [145, 2, 1, "", "getLength"], [145, 2, 1, "", "getMemoryBase"], [145, 2, 1, "", "getPosition"], [145, 2, 1, "", "hasLength"], [145, 2, 1, "", "hasPosition"], [145, 2, 1, "", "isAtEnd"], [145, 2, 1, "", "move"], [145, 2, 1, "", "peek"], [145, 2, 1, "", "read"], [145, 2, 1, "", "readBool"], [145, 2, 1, "", "readPackedUInt"], [145, 2, 1, "", "readS16"], [145, 2, 1, "", "readS32"], [145, 2, 1, "", "readS8"], [145, 2, 1, "", "readScalar"], [145, 2, 1, "", "readU16"], [145, 2, 1, "", "readU32"], [145, 2, 1, "", "readU8"], [145, 2, 1, "", "rewind"], [145, 2, 1, "", "seek"], [145, 2, 1, "", "setData"], [145, 2, 1, "", "setMemory"], [145, 2, 1, "", "skip"], [145, 2, 1, "", "skipToAlign4"]], "skia.MipmapBuilder": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "attachTo"], [146, 2, 1, "", "countLevels"], [146, 2, 1, "", "level"]], "skia.MipmapMode": [[147, 2, 1, "", "__init__"], [147, 3, 1, "", "kLinear"], [147, 3, 1, "", "kNearest"], [147, 3, 1, "", "kNone"], [147, 3, 1, "", "name"], [147, 3, 1, "", "value"]], "skia.NullWStream": [[148, 2, 1, "", "SizeOfPackedUInt"], [148, 2, 1, "", "__init__"], [148, 2, 1, "", "bytesWritten"], [148, 2, 1, "", "flush"], [148, 2, 1, "", "newline"], [148, 2, 1, "", "write"], [148, 2, 1, "", "write16"], [148, 2, 1, "", "write32"], [148, 2, 1, "", "write8"], [148, 2, 1, "", "writeBigDecAsText"], [148, 2, 1, "", "writeBool"], [148, 2, 1, "", "writeDecAsText"], [148, 2, 1, "", "writeHexAsText"], [148, 2, 1, "", "writePackedUInt"], [148, 2, 1, "", "writeScalar"], [148, 2, 1, "", "writeScalarAsText"], [148, 2, 1, "", "writeStream"], [148, 2, 1, "", "writeText"]], "skia.OpBuilder": [[149, 2, 1, "", "__init__"], [149, 2, 1, "", "add"], [149, 2, 1, "", "resolve"]], "skia.OverdrawColorFilter": [[150, 2, 1, "", "MakeWithColors"], [150, 2, 1, "", "__init__"], [150, 3, 1, "", "kNumColors"]], "skia.PDF": [[152, 1, 1, "", "AttributeList"], [151, 2, 1, "", "MakeDocument"], [153, 1, 1, "", "Metadata"], [151, 2, 1, "", "SetNodeId"], [154, 1, 1, "", "StructureElementNode"], [151, 2, 1, "", "__init__"]], "skia.PDF.AttributeList": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "appendFloat"], [152, 2, 1, "", "appendFloatArray"], [152, 2, 1, "", "appendInt"], [152, 2, 1, "", "appendString"], [152, 2, 1, "", "appendStringArray"]], "skia.PDF.Metadata": [[153, 2, 1, "", "__init__"], [153, 3, 1, "", "fAuthor"], [153, 3, 1, "", "fCreator"], [153, 3, 1, "", "fEncodingQuality"], [153, 3, 1, "", "fKeywords"], [153, 3, 1, "", "fPDFA"], [153, 3, 1, "", "fProducer"], [153, 3, 1, "", "fRasterDPI"], [153, 3, 1, "", "fStructureElementTreeRoot"], [153, 3, 1, "", "fSubject"], [153, 3, 1, "", "fTitle"]], "skia.PDF.StructureElementNode": [[154, 2, 1, "", "__init__"], [154, 3, 1, "", "fAlt"], [154, 3, 1, "", "fAttributes"], [154, 3, 1, "", "fLang"], [154, 3, 1, "", "fNodeId"], [154, 3, 1, "", "fTypeString"]], "skia.Paint": [[156, 1, 1, "", "Cap"], [157, 1, 1, "", "Join"], [158, 1, 1, "", "Style"], [155, 2, 1, "", "__init__"], [155, 2, 1, "", "canComputeFastBounds"], [155, 2, 1, "", "computeFastBounds"], [155, 2, 1, "", "computeFastStrokeBounds"], [155, 2, 1, "", "doComputeFastBounds"], [155, 2, 1, "", "getAlpha"], [155, 2, 1, "", "getAlphaf"], [155, 2, 1, "", "getBlendMode"], [155, 2, 1, "", "getColor"], [155, 2, 1, "", "getColor4f"], [155, 2, 1, "", "getColorFilter"], [155, 2, 1, "", "getFillPath"], [155, 2, 1, "", "getImageFilter"], [155, 2, 1, "", "getMaskFilter"], [155, 2, 1, "", "getPathEffect"], [155, 2, 1, "", "getShader"], [155, 2, 1, "", "getStrokeCap"], [155, 2, 1, "", "getStrokeJoin"], [155, 2, 1, "", "getStrokeMiter"], [155, 2, 1, "", "getStrokeWidth"], [155, 2, 1, "", "getStyle"], [155, 2, 1, "", "isAntiAlias"], [155, 2, 1, "", "isDither"], [155, 2, 1, "", "isSrcOver"], [155, 3, 1, "", "kBevel_Join"], [155, 3, 1, "", "kButt_Cap"], [155, 3, 1, "", "kCapCount"], [155, 3, 1, "", "kDefault_Cap"], [155, 3, 1, "", "kDefault_Join"], [155, 3, 1, "", "kFill_Style"], [155, 3, 1, "", "kJoinCount"], [155, 3, 1, "", "kLast_Cap"], [155, 3, 1, "", "kLast_Join"], [155, 3, 1, "", "kMiter_Join"], [155, 3, 1, "", "kRound_Cap"], [155, 3, 1, "", "kRound_Join"], [155, 3, 1, "", "kSquare_Cap"], [155, 3, 1, "", "kStrokeAndFill_Style"], [155, 3, 1, "", "kStroke_Style"], [155, 3, 1, "", "kStyleCount"], [155, 2, 1, "", "nothingToDraw"], [155, 2, 1, "", "refColorFilter"], [155, 2, 1, "", "refImageFilter"], [155, 2, 1, "", "refMaskFilter"], [155, 2, 1, "", "refPathEffect"], [155, 2, 1, "", "refShader"], [155, 2, 1, "", "reset"], [155, 2, 1, "", "setARGB"], [155, 2, 1, "", "setAlpha"], [155, 2, 1, "", "setAlphaf"], [155, 2, 1, "", "setAntiAlias"], [155, 2, 1, "", "setBlendMode"], [155, 2, 1, "", "setColor"], [155, 2, 1, "", "setColor4f"], [155, 2, 1, "", "setColorFilter"], [155, 2, 1, "", "setDither"], [155, 2, 1, "", "setImageFilter"], [155, 2, 1, "", "setMaskFilter"], [155, 2, 1, "", "setPathEffect"], [155, 2, 1, "", "setShader"], [155, 2, 1, "", "setStrokeCap"], [155, 2, 1, "", "setStrokeJoin"], [155, 2, 1, "", "setStrokeMiter"], [155, 2, 1, "", "setStrokeWidth"], [155, 2, 1, "", "setStyle"]], "skia.Paint.Cap": [[156, 2, 1, "", "__init__"], [156, 3, 1, "", "kButt_Cap"], [156, 3, 1, "", "kDefault_Cap"], [156, 3, 1, "", "kLast_Cap"], [156, 3, 1, "", "kRound_Cap"], [156, 3, 1, "", "kSquare_Cap"], [156, 3, 1, "", "name"], [156, 3, 1, "", "value"]], "skia.Paint.Join": [[157, 2, 1, "", "__init__"], [157, 3, 1, "", "kBevel_Join"], [157, 3, 1, "", "kDefault_Join"], [157, 3, 1, "", "kLast_Join"], [157, 3, 1, "", "kMiter_Join"], [157, 3, 1, "", "kRound_Join"], [157, 3, 1, "", "name"], [157, 3, 1, "", "value"]], "skia.Paint.Style": [[158, 2, 1, "", "__init__"], [158, 3, 1, "", "kFill_Style"], [158, 3, 1, "", "kStrokeAndFill_Style"], [158, 3, 1, "", "kStroke_Style"], [158, 3, 1, "", "name"], [158, 3, 1, "", "value"]], "skia.Path": [[160, 1, 1, "", "AddPathMode"], [161, 1, 1, "", "ArcSize"], [159, 2, 1, "", "Circle"], [159, 2, 1, "", "ConvertConicToQuads"], [159, 2, 1, "", "IsCubicDegenerate"], [159, 2, 1, "", "IsLineDegenerate"], [159, 2, 1, "", "IsQuadDegenerate"], [162, 1, 1, "", "Iter"], [159, 2, 1, "", "Line"], [159, 2, 1, "", "Make"], [159, 2, 1, "", "Oval"], [159, 2, 1, "", "Polygon"], [159, 2, 1, "", "RRect"], [163, 1, 1, "", "RawIter"], [159, 2, 1, "", "Rect"], [164, 1, 1, "", "SegmentMask"], [165, 1, 1, "", "Verb"], [159, 2, 1, "", "__init__"], [159, 2, 1, "", "addArc"], [159, 2, 1, "", "addCircle"], [159, 2, 1, "", "addOval"], [159, 2, 1, "", "addPath"], [159, 2, 1, "", "addPoly"], [159, 2, 1, "", "addRRect"], [159, 2, 1, "", "addRect"], [159, 2, 1, "", "addRoundRect"], [159, 2, 1, "", "approximateBytesUsed"], [159, 2, 1, "", "arcTo"], [159, 2, 1, "", "close"], [159, 2, 1, "", "computeTightBounds"], [159, 2, 1, "", "conicTo"], [159, 2, 1, "", "conservativelyContainsRect"], [159, 2, 1, "", "contains"], [159, 2, 1, "", "countPoints"], [159, 2, 1, "", "countVerbs"], [159, 2, 1, "", "cubicTo"], [159, 2, 1, "", "dump"], [159, 2, 1, "", "dumpHex"], [159, 2, 1, "", "getBounds"], [159, 2, 1, "", "getFillType"], [159, 2, 1, "", "getGenerationID"], [159, 2, 1, "", "getLastPt"], [159, 2, 1, "", "getPoint"], [159, 2, 1, "", "getPoints"], [159, 2, 1, "", "getSegmentMasks"], [159, 2, 1, "", "getVerbs"], [159, 2, 1, "", "incReserve"], [159, 2, 1, "", "interpolate"], [159, 2, 1, "", "isConvex"], [159, 2, 1, "", "isEmpty"], [159, 2, 1, "", "isFinite"], [159, 2, 1, "", "isInterpolatable"], [159, 2, 1, "", "isInverseFillType"], [159, 2, 1, "", "isLastContourClosed"], [159, 2, 1, "", "isLine"], [159, 2, 1, "", "isOval"], [159, 2, 1, "", "isRRect"], [159, 2, 1, "", "isRect"], [159, 2, 1, "", "isValid"], [159, 2, 1, "", "isVolatile"], [159, 3, 1, "", "kAppend_AddPathMode"], [159, 3, 1, "", "kClose_Verb"], [159, 3, 1, "", "kConic_SegmentMask"], [159, 3, 1, "", "kConic_Verb"], [159, 3, 1, "", "kCubic_SegmentMask"], [159, 3, 1, "", "kCubic_Verb"], [159, 3, 1, "", "kDone_Verb"], [159, 3, 1, "", "kExtend_AddPathMode"], [159, 3, 1, "", "kLarge_ArcSize"], [159, 3, 1, "", "kLine_SegmentMask"], [159, 3, 1, "", "kLine_Verb"], [159, 3, 1, "", "kMove_Verb"], [159, 3, 1, "", "kQuad_SegmentMask"], [159, 3, 1, "", "kQuad_Verb"], [159, 3, 1, "", "kSmall_ArcSize"], [159, 2, 1, "", "lineTo"], [159, 2, 1, "", "moveTo"], [159, 2, 1, "", "offset"], [159, 2, 1, "", "quadTo"], [159, 2, 1, "", "rArcTo"], [159, 2, 1, "", "rConicTo"], [159, 2, 1, "", "rCubicTo"], [159, 2, 1, "", "rLineTo"], [159, 2, 1, "", "rMoveTo"], [159, 2, 1, "", "rQuadTo"], [159, 2, 1, "", "readFromMemory"], [159, 2, 1, "", "reset"], [159, 2, 1, "", "reverseAddPath"], [159, 2, 1, "", "rewind"], [159, 2, 1, "", "serialize"], [159, 2, 1, "", "setFillType"], [159, 2, 1, "", "setIsVolatile"], [159, 2, 1, "", "setLastPt"], [159, 2, 1, "", "swap"], [159, 2, 1, "", "toggleInverseFillType"], [159, 2, 1, "", "transform"], [159, 2, 1, "", "updateBoundsCache"], [159, 2, 1, "", "writeToMemory"]], "skia.Path.AddPathMode": [[160, 2, 1, "", "__init__"], [160, 3, 1, "", "kAppend_AddPathMode"], [160, 3, 1, "", "kExtend_AddPathMode"], [160, 3, 1, "", "name"], [160, 3, 1, "", "value"]], "skia.Path.ArcSize": [[161, 2, 1, "", "__init__"], [161, 3, 1, "", "kLarge_ArcSize"], [161, 3, 1, "", "kSmall_ArcSize"], [161, 3, 1, "", "name"], [161, 3, 1, "", "value"]], "skia.Path.Iter": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "conicWeight"], [162, 2, 1, "", "isCloseLine"], [162, 2, 1, "", "isClosedContour"], [162, 2, 1, "", "next"], [162, 2, 1, "", "setPath"]], "skia.Path.RawIter": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "conicWeight"], [163, 2, 1, "", "next"], [163, 2, 1, "", "peek"], [163, 2, 1, "", "setPath"]], "skia.Path.SegmentMask": [[164, 2, 1, "", "__init__"], [164, 3, 1, "", "kConic_SegmentMask"], [164, 3, 1, "", "kCubic_SegmentMask"], [164, 3, 1, "", "kLine_SegmentMask"], [164, 3, 1, "", "kQuad_SegmentMask"], [164, 3, 1, "", "name"], [164, 3, 1, "", "value"]], "skia.Path.Verb": [[165, 2, 1, "", "__init__"], [165, 3, 1, "", "kClose_Verb"], [165, 3, 1, "", "kConic_Verb"], [165, 3, 1, "", "kCubic_Verb"], [165, 3, 1, "", "kDone_Verb"], [165, 3, 1, "", "kLine_Verb"], [165, 3, 1, "", "kMove_Verb"], [165, 3, 1, "", "kQuad_Verb"], [165, 3, 1, "", "name"], [165, 3, 1, "", "value"]], "skia.Path1DPathEffect": [[166, 2, 1, "", "Make"], [167, 1, 1, "", "Style"], [166, 2, 1, "", "__init__"], [166, 3, 1, "", "kLastEnum_Style"], [166, 3, 1, "", "kMorph_Style"], [166, 3, 1, "", "kRotate_Style"], [166, 3, 1, "", "kTranslate_Style"]], "skia.Path1DPathEffect.Style": [[167, 2, 1, "", "__init__"], [167, 3, 1, "", "kLastEnum_Style"], [167, 3, 1, "", "kMorph_Style"], [167, 3, 1, "", "kRotate_Style"], [167, 3, 1, "", "kTranslate_Style"], [167, 3, 1, "", "name"], [167, 3, 1, "", "value"]], "skia.Path2DPathEffect": [[168, 2, 1, "", "Make"], [168, 2, 1, "", "__init__"]], "skia.PathBuilder": [[170, 1, 1, "", "ArcSize"], [169, 2, 1, "", "__init__"], [169, 2, 1, "", "addArc"], [169, 2, 1, "", "addCircle"], [169, 2, 1, "", "addOval"], [169, 2, 1, "", "addPolygon"], [169, 2, 1, "", "addRRect"], [169, 2, 1, "", "addRect"], [169, 2, 1, "", "arcTo"], [169, 2, 1, "", "close"], [169, 2, 1, "", "computeBounds"], [169, 2, 1, "", "conicTo"], [169, 2, 1, "", "cubicTo"], [169, 2, 1, "", "detach"], [169, 2, 1, "", "fillType"], [169, 2, 1, "", "incReserve"], [169, 3, 1, "", "kLarge_ArcSize"], [169, 3, 1, "", "kSmall_ArcSize"], [169, 2, 1, "", "lineTo"], [169, 2, 1, "", "moveTo"], [169, 2, 1, "", "offset"], [169, 2, 1, "", "polylineTo"], [169, 2, 1, "", "quadTo"], [169, 2, 1, "", "rConicTo"], [169, 2, 1, "", "rCubicTo"], [169, 2, 1, "", "rLineTo"], [169, 2, 1, "", "rQuadTo"], [169, 2, 1, "", "reset"], [169, 2, 1, "", "setFillType"], [169, 2, 1, "", "setIsVolatile"], [169, 2, 1, "", "snapshot"], [169, 2, 1, "", "toggleInverseFillType"]], "skia.PathBuilder.ArcSize": [[170, 2, 1, "", "__init__"], [170, 3, 1, "", "kLarge_ArcSize"], [170, 3, 1, "", "kSmall_ArcSize"], [170, 3, 1, "", "name"], [170, 3, 1, "", "value"]], "skia.PathDirection": [[171, 2, 1, "", "__init__"], [171, 3, 1, "", "kCCW"], [171, 3, 1, "", "kCW"], [171, 3, 1, "", "name"], [171, 3, 1, "", "value"]], "skia.PathEffect": [[172, 2, 1, "", "Deserialize"], [172, 2, 1, "", "GetFlattenableType"], [172, 2, 1, "", "MakeCompose"], [172, 2, 1, "", "MakeSum"], [173, 1, 1, "", "Type"], [172, 2, 1, "", "__init__"], [172, 2, 1, "", "filterPath"], [172, 2, 1, "", "getFlattenableType"], [172, 2, 1, "", "getTypeName"], [172, 3, 1, "", "kColorFilter_Type"], [172, 3, 1, "", "kDrawLooper_Type"], [172, 3, 1, "", "kDrawable_Type"], [172, 3, 1, "", "kImageFilter_Type"], [172, 3, 1, "", "kMaskFilter_Type"], [172, 3, 1, "", "kPathEffect_Type"], [172, 2, 1, "", "ref"], [172, 2, 1, "", "serialize"], [172, 2, 1, "", "unique"], [172, 2, 1, "", "unref"]], "skia.PathEffect.Type": [[173, 2, 1, "", "__init__"], [173, 3, 1, "", "kColorFilter_Type"], [173, 3, 1, "", "kDrawLooper_Type"], [173, 3, 1, "", "kDrawable_Type"], [173, 3, 1, "", "kImageFilter_Type"], [173, 3, 1, "", "kMaskFilter_Type"], [173, 3, 1, "", "kPathEffect_Type"], [173, 3, 1, "", "name"], [173, 3, 1, "", "value"]], "skia.PathFillType": [[174, 2, 1, "", "__init__"], [174, 3, 1, "", "kEvenOdd"], [174, 3, 1, "", "kInverseEvenOdd"], [174, 3, 1, "", "kInverseWinding"], [174, 3, 1, "", "kWinding"], [174, 3, 1, "", "name"], [174, 3, 1, "", "value"]], "skia.PathMeasure": [[176, 1, 1, "", "GetPosAndTan"], [175, 2, 1, "", "__init__"], [175, 2, 1, "", "getLength"], [175, 2, 1, "", "getMatrix"], [175, 2, 1, "", "getPosTan"], [175, 2, 1, "", "getSegment"], [175, 2, 1, "", "isClosed"], [175, 3, 1, "", "kGetPosAndTan_MatrixFlag"], [175, 3, 1, "", "kGetPosition_MatrixFlag"], [175, 3, 1, "", "kGetTangent_MatrixFlag"], [175, 2, 1, "", "nextContour"], [175, 2, 1, "", "setPath"]], "skia.PathMeasure.GetPosAndTan": [[176, 2, 1, "", "__init__"], [176, 3, 1, "", "kGetPosAndTan_MatrixFlag"], [176, 3, 1, "", "kGetPosition_MatrixFlag"], [176, 3, 1, "", "kGetTangent_MatrixFlag"], [176, 3, 1, "", "name"], [176, 3, 1, "", "value"]], "skia.PathOp": [[177, 2, 1, "", "__init__"], [177, 3, 1, "", "kDifference_PathOp"], [177, 3, 1, "", "kIntersect_PathOp"], [177, 3, 1, "", "kReverseDifference_PathOp"], [177, 3, 1, "", "kUnion_PathOp"], [177, 3, 1, "", "kXOR_PathOp"], [177, 3, 1, "", "name"], [177, 3, 1, "", "value"]], "skia.PathSegmentMask": [[178, 2, 1, "", "__init__"], [178, 3, 1, "", "kConic_PathSegmentMask"], [178, 3, 1, "", "kCubic_PathSegmentMask"], [178, 3, 1, "", "kLine_PathSegmentMask"], [178, 3, 1, "", "kQuad_PathSegmentMask"], [178, 3, 1, "", "name"], [178, 3, 1, "", "value"]], "skia.PathVerb": [[179, 2, 1, "", "__init__"], [179, 3, 1, "", "kClose"], [179, 3, 1, "", "kConic"], [179, 3, 1, "", "kCubic"], [179, 3, 1, "", "kLine"], [179, 3, 1, "", "kMove"], [179, 3, 1, "", "kQuad"], [179, 3, 1, "", "name"], [179, 3, 1, "", "value"]], "skia.PerlinNoiseShader": [[180, 2, 1, "", "MakeFractalNoise"], [180, 2, 1, "", "MakeTurbulence"], [180, 2, 1, "", "__init__"]], "skia.Picture": [[181, 2, 1, "", "MakeFromData"], [181, 2, 1, "", "MakeFromStream"], [181, 2, 1, "", "MakePlaceholder"], [181, 2, 1, "", "__init__"], [181, 2, 1, "", "approximateBytesUsed"], [181, 2, 1, "", "approximateOpCount"], [181, 2, 1, "", "cullRect"], [181, 2, 1, "", "makeShader"], [181, 2, 1, "", "playback"], [181, 2, 1, "", "ref"], [181, 2, 1, "", "serialize"], [181, 2, 1, "", "unique"], [181, 2, 1, "", "uniqueID"], [181, 2, 1, "", "unref"]], "skia.PictureRecorder": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "beginRecording"], [182, 2, 1, "", "finishRecordingAsDrawable"], [182, 2, 1, "", "finishRecordingAsPicture"], [182, 2, 1, "", "finishRecordingAsPictureWithCull"], [182, 2, 1, "", "getRecordingCanvas"]], "skia.PixelGeometry": [[183, 2, 1, "", "__init__"], [183, 3, 1, "", "kBGR_H_PixelGeometry"], [183, 3, 1, "", "kBGR_V_PixelGeometry"], [183, 3, 1, "", "kRGB_H_PixelGeometry"], [183, 3, 1, "", "kRGB_V_PixelGeometry"], [183, 3, 1, "", "kUnknown_PixelGeometry"], [183, 3, 1, "", "name"], [183, 3, 1, "", "value"]], "skia.PixelRef": [[184, 2, 1, "", "__init__"]], "skia.Pixmap": [[185, 2, 1, "", "__init__"], [185, 2, 1, "", "addr"], [185, 2, 1, "", "addr16"], [185, 2, 1, "", "addr32"], [185, 2, 1, "", "addr64"], [185, 2, 1, "", "addr8"], [185, 2, 1, "", "alphaType"], [185, 2, 1, "", "bounds"], [185, 2, 1, "", "colorSpace"], [185, 2, 1, "", "colorType"], [185, 2, 1, "", "computeByteSize"], [185, 2, 1, "", "computeIsOpaque"], [185, 2, 1, "", "dimensions"], [185, 2, 1, "", "erase"], [185, 2, 1, "", "extractSubset"], [185, 2, 1, "", "getAlphaf"], [185, 2, 1, "", "getColor"], [185, 2, 1, "", "height"], [185, 2, 1, "", "info"], [185, 2, 1, "", "isOpaque"], [185, 2, 1, "", "readPixels"], [185, 2, 1, "", "refColorSpace"], [185, 2, 1, "", "reset"], [185, 2, 1, "", "rowBytes"], [185, 2, 1, "", "rowBytesAsPixels"], [185, 2, 1, "", "scalePixels"], [185, 2, 1, "", "setColorSpace"], [185, 2, 1, "", "shiftPerPixel"], [185, 2, 1, "", "tobytes"], [185, 2, 1, "", "width"], [185, 2, 1, "", "writable_addr"]], "skia.Point": [[186, 2, 1, "", "CrossProduct"], [186, 2, 1, "", "Distance"], [186, 2, 1, "", "DotProduct"], [186, 2, 1, "", "Length"], [186, 2, 1, "", "Make"], [186, 2, 1, "", "Normalize"], [186, 2, 1, "", "Offset"], [186, 2, 1, "", "__init__"], [186, 2, 1, "", "cross"], [186, 2, 1, "", "distanceToOrigin"], [186, 2, 1, "", "dot"], [186, 2, 1, "", "equals"], [186, 3, 1, "", "fX"], [186, 3, 1, "", "fY"], [186, 2, 1, "", "isFinite"], [186, 2, 1, "", "isZero"], [186, 2, 1, "", "iset"], [186, 2, 1, "", "length"], [186, 2, 1, "", "negate"], [186, 2, 1, "", "normalize"], [186, 2, 1, "", "offset"], [186, 2, 1, "", "scale"], [186, 2, 1, "", "set"], [186, 2, 1, "", "setAbs"], [186, 2, 1, "", "setLength"], [186, 2, 1, "", "setNormalize"], [186, 2, 1, "", "x"], [186, 2, 1, "", "y"]], "skia.Point3": [[187, 2, 1, "", "CrossProduct"], [187, 2, 1, "", "DotProduct"], [187, 2, 1, "", "Length"], [187, 2, 1, "", "Make"], [187, 2, 1, "", "__init__"], [187, 2, 1, "", "cross"], [187, 2, 1, "", "dot"], [187, 3, 1, "", "fX"], [187, 3, 1, "", "fY"], [187, 3, 1, "", "fZ"], [187, 2, 1, "", "isFinite"], [187, 2, 1, "", "length"], [187, 2, 1, "", "makeScale"], [187, 2, 1, "", "normalize"], [187, 2, 1, "", "scale"], [187, 2, 1, "", "set"], [187, 2, 1, "", "x"], [187, 2, 1, "", "y"], [187, 2, 1, "", "z"]], "skia.RRect": [[189, 1, 1, "", "Corner"], [188, 2, 1, "", "MakeEmpty"], [188, 2, 1, "", "MakeOval"], [188, 2, 1, "", "MakeRect"], [188, 2, 1, "", "MakeRectXY"], [190, 1, 1, "", "Type"], [188, 2, 1, "", "__init__"], [188, 2, 1, "", "contains"], [188, 2, 1, "", "dump"], [188, 2, 1, "", "dumpHex"], [188, 2, 1, "", "dumpToString"], [188, 2, 1, "", "getBounds"], [188, 2, 1, "", "getSimpleRadii"], [188, 2, 1, "", "getType"], [188, 2, 1, "", "height"], [188, 2, 1, "", "inset"], [188, 2, 1, "", "isComplex"], [188, 2, 1, "", "isEmpty"], [188, 2, 1, "", "isNinePatch"], [188, 2, 1, "", "isOval"], [188, 2, 1, "", "isRect"], [188, 2, 1, "", "isSimple"], [188, 2, 1, "", "isValid"], [188, 3, 1, "", "kComplex_Type"], [188, 3, 1, "", "kEmpty_Type"], [188, 3, 1, "", "kLastType"], [188, 3, 1, "", "kLowerLeft_Corner"], [188, 3, 1, "", "kLowerRight_Corner"], [188, 3, 1, "", "kNinePatch_Type"], [188, 3, 1, "", "kOval_Type"], [188, 3, 1, "", "kRect_Type"], [188, 3, 1, "", "kSimple_Type"], [188, 3, 1, "", "kSizeInMemory"], [188, 3, 1, "", "kUpperLeft_Corner"], [188, 3, 1, "", "kUpperRight_Corner"], [188, 2, 1, "", "makeOffset"], [188, 2, 1, "", "offset"], [188, 2, 1, "", "outset"], [188, 2, 1, "", "radii"], [188, 2, 1, "", "readFromMemory"], [188, 2, 1, "", "rect"], [188, 2, 1, "", "setEmpty"], [188, 2, 1, "", "setNinePatch"], [188, 2, 1, "", "setOval"], [188, 2, 1, "", "setRect"], [188, 2, 1, "", "setRectRadii"], [188, 2, 1, "", "setRectXY"], [188, 2, 1, "", "transform"], [188, 2, 1, "", "type"], [188, 2, 1, "", "width"], [188, 2, 1, "", "writeToMemory"]], "skia.RRect.Corner": [[189, 2, 1, "", "__init__"], [189, 3, 1, "", "kLowerLeft_Corner"], [189, 3, 1, "", "kLowerRight_Corner"], [189, 3, 1, "", "kUpperLeft_Corner"], [189, 3, 1, "", "kUpperRight_Corner"], [189, 3, 1, "", "name"], [189, 3, 1, "", "value"]], "skia.RRect.Type": [[190, 2, 1, "", "__init__"], [190, 3, 1, "", "kComplex_Type"], [190, 3, 1, "", "kEmpty_Type"], [190, 3, 1, "", "kLastType"], [190, 3, 1, "", "kNinePatch_Type"], [190, 3, 1, "", "kOval_Type"], [190, 3, 1, "", "kRect_Type"], [190, 3, 1, "", "kSimple_Type"], [190, 3, 1, "", "name"], [190, 3, 1, "", "value"]], "skia.RSXform": [[191, 2, 1, "", "Make"], [191, 2, 1, "", "MakeFromRadians"], [191, 2, 1, "", "__init__"], [191, 3, 1, "", "fSCos"], [191, 3, 1, "", "fSSin"], [191, 3, 1, "", "fTx"], [191, 3, 1, "", "fTy"], [191, 2, 1, "", "rectStaysRect"], [191, 2, 1, "", "set"], [191, 2, 1, "", "setIdentity"], [191, 2, 1, "", "toQuad"], [191, 2, 1, "", "toTriStrip"]], "skia.RTreeFactory": [[192, 2, 1, "", "__init__"]], "skia.Rect": [[193, 2, 1, "", "Intersects"], [193, 2, 1, "", "Make"], [193, 2, 1, "", "MakeEmpty"], [193, 2, 1, "", "MakeIWH"], [193, 2, 1, "", "MakeLTRB"], [193, 2, 1, "", "MakeSize"], [193, 2, 1, "", "MakeWH"], [193, 2, 1, "", "MakeXYWH"], [193, 2, 1, "", "__init__"], [193, 2, 1, "", "asScalars"], [193, 2, 1, "", "bottom"], [193, 2, 1, "", "centerX"], [193, 2, 1, "", "centerY"], [193, 2, 1, "", "contains"], [193, 2, 1, "", "dump"], [193, 2, 1, "", "dumpHex"], [193, 3, 1, "", "fBottom"], [193, 3, 1, "", "fLeft"], [193, 3, 1, "", "fRight"], [193, 3, 1, "", "fTop"], [193, 2, 1, "", "height"], [193, 2, 1, "", "inset"], [193, 2, 1, "", "intersect"], [193, 2, 1, "", "intersects"], [193, 2, 1, "", "isEmpty"], [193, 2, 1, "", "isFinite"], [193, 2, 1, "", "isSorted"], [193, 2, 1, "", "join"], [193, 2, 1, "", "joinNonEmptyArg"], [193, 2, 1, "", "joinPossiblyEmptyRect"], [193, 2, 1, "", "left"], [193, 2, 1, "", "makeInset"], [193, 2, 1, "", "makeOffset"], [193, 2, 1, "", "makeOutset"], [193, 2, 1, "", "makeSorted"], [193, 2, 1, "", "offset"], [193, 2, 1, "", "offsetTo"], [193, 2, 1, "", "outset"], [193, 2, 1, "", "right"], [193, 2, 1, "", "round"], [193, 2, 1, "", "roundIn"], [193, 2, 1, "", "roundOut"], [193, 2, 1, "", "set"], [193, 2, 1, "", "setBounds"], [193, 2, 1, "", "setBoundsCheck"], [193, 2, 1, "", "setBoundsNoCheck"], [193, 2, 1, "", "setEmpty"], [193, 2, 1, "", "setIWH"], [193, 2, 1, "", "setLTRB"], [193, 2, 1, "", "setWH"], [193, 2, 1, "", "setXYWH"], [193, 2, 1, "", "sort"], [193, 2, 1, "", "toQuad"], [193, 2, 1, "", "top"], [193, 2, 1, "", "width"], [193, 2, 1, "", "x"], [193, 2, 1, "", "y"]], "skia.RefCnt": [[194, 2, 1, "", "__init__"], [194, 2, 1, "", "ref"], [194, 2, 1, "", "unique"], [194, 2, 1, "", "unref"]], "skia.RefCntBase": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "ref"], [195, 2, 1, "", "unique"], [195, 2, 1, "", "unref"]], "skia.Region": [[197, 1, 1, "", "Cliperator"], [198, 1, 1, "", "Iterator"], [199, 1, 1, "", "Op"], [200, 1, 1, "", "Spanerator"], [196, 2, 1, "", "__init__"], [196, 2, 1, "", "cliperator"], [196, 2, 1, "", "computeRegionComplexity"], [196, 2, 1, "", "contains"], [196, 2, 1, "", "getBoundaryPath"], [196, 2, 1, "", "getBounds"], [196, 2, 1, "", "intersects"], [196, 2, 1, "", "isComplex"], [196, 2, 1, "", "isEmpty"], [196, 2, 1, "", "isRect"], [196, 2, 1, "", "iterator"], [196, 3, 1, "", "kDifference_Op"], [196, 3, 1, "", "kIntersect_Op"], [196, 3, 1, "", "kLastOp"], [196, 3, 1, "", "kOpCnt"], [196, 3, 1, "", "kReplace_Op"], [196, 3, 1, "", "kReverseDifference_Op"], [196, 3, 1, "", "kUnion_Op"], [196, 3, 1, "", "kXOR_Op"], [196, 2, 1, "", "op"], [196, 2, 1, "", "quickContains"], [196, 2, 1, "", "quickReject"], [196, 2, 1, "", "readFromMemory"], [196, 2, 1, "", "set"], [196, 2, 1, "", "setEmpty"], [196, 2, 1, "", "setPath"], [196, 2, 1, "", "setRect"], [196, 2, 1, "", "setRects"], [196, 2, 1, "", "setRegion"], [196, 2, 1, "", "spanerator"], [196, 2, 1, "", "swap"], [196, 2, 1, "", "translate"], [196, 2, 1, "", "writeToMemory"]], "skia.Region.Cliperator": [[197, 2, 1, "", "__init__"], [197, 2, 1, "", "done"], [197, 2, 1, "", "next"], [197, 2, 1, "", "rect"]], "skia.Region.Iterator": [[198, 2, 1, "", "__init__"], [198, 2, 1, "", "done"], [198, 2, 1, "", "next"], [198, 2, 1, "", "rect"], [198, 2, 1, "", "reset"], [198, 2, 1, "", "rewind"], [198, 2, 1, "", "rgn"]], "skia.Region.Op": [[199, 2, 1, "", "__init__"], [199, 3, 1, "", "kDifference_Op"], [199, 3, 1, "", "kIntersect_Op"], [199, 3, 1, "", "kLastOp"], [199, 3, 1, "", "kReplace_Op"], [199, 3, 1, "", "kReverseDifference_Op"], [199, 3, 1, "", "kUnion_Op"], [199, 3, 1, "", "kXOR_Op"], [199, 3, 1, "", "name"], [199, 3, 1, "", "value"]], "skia.Region.Spanerator": [[200, 2, 1, "", "__init__"], [200, 2, 1, "", "next"]], "skia.RuntimeBlendBuilder": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "child"], [201, 2, 1, "", "children"], [201, 2, 1, "", "effect"], [201, 2, 1, "", "makeBlender"], [201, 2, 1, "", "makeColorFilter"], [201, 2, 1, "", "makeShader"], [201, 2, 1, "", "setChild"], [201, 2, 1, "", "setUniform"], [201, 2, 1, "", "uniform"], [201, 2, 1, "", "uniforms"]], "skia.RuntimeColorFilterBuilder": [[202, 2, 1, "", "__init__"], [202, 2, 1, "", "child"], [202, 2, 1, "", "children"], [202, 2, 1, "", "effect"], [202, 2, 1, "", "makeBlender"], [202, 2, 1, "", "makeColorFilter"], [202, 2, 1, "", "makeShader"], [202, 2, 1, "", "setChild"], [202, 2, 1, "", "setUniform"], [202, 2, 1, "", "uniform"], [202, 2, 1, "", "uniforms"]], "skia.RuntimeEffect": [[204, 1, 1, "", "ChildType"], [203, 2, 1, "", "MakeForBlender"], [203, 2, 1, "", "MakeForColorFilter"], [203, 2, 1, "", "MakeForShader"], [205, 1, 1, "", "UniformType"], [203, 2, 1, "", "__init__"], [203, 2, 1, "", "children"], [203, 3, 1, "", "kBlender"], [203, 3, 1, "", "kFloat"], [203, 3, 1, "", "kFloat2"], [203, 3, 1, "", "kFloat2x2"], [203, 3, 1, "", "kFloat3"], [203, 3, 1, "", "kFloat3x3"], [203, 3, 1, "", "kFloat4"], [203, 3, 1, "", "kFloat4x4"], [203, 3, 1, "", "kInt"], [203, 3, 1, "", "kInt2"], [203, 3, 1, "", "kInt3"], [203, 3, 1, "", "kInt4"], [203, 3, 1, "", "kShader"], [203, 2, 1, "", "makeBlender"], [203, 2, 1, "", "makeColorFilter"], [203, 2, 1, "", "makeShader"], [203, 2, 1, "", "ref"], [203, 2, 1, "", "uniforms"], [203, 2, 1, "", "unique"], [203, 2, 1, "", "unref"]], "skia.RuntimeEffect.ChildType": [[204, 2, 1, "", "__init__"], [204, 3, 1, "", "kBlender"], [204, 3, 1, "", "kShader"], [204, 3, 1, "", "name"], [204, 3, 1, "", "value"]], "skia.RuntimeEffect.UniformType": [[205, 2, 1, "", "__init__"], [205, 3, 1, "", "kFloat"], [205, 3, 1, "", "kFloat2"], [205, 3, 1, "", "kFloat2x2"], [205, 3, 1, "", "kFloat3"], [205, 3, 1, "", "kFloat3x3"], [205, 3, 1, "", "kFloat4"], [205, 3, 1, "", "kFloat4x4"], [205, 3, 1, "", "kInt"], [205, 3, 1, "", "kInt2"], [205, 3, 1, "", "kInt3"], [205, 3, 1, "", "kInt4"], [205, 3, 1, "", "name"], [205, 3, 1, "", "value"]], "skia.RuntimeEffectBuilder": [[206, 2, 1, "", "__init__"], [206, 2, 1, "", "child"], [206, 2, 1, "", "children"], [206, 2, 1, "", "effect"], [206, 2, 1, "", "makeBlender"], [206, 2, 1, "", "makeColorFilter"], [206, 2, 1, "", "makeShader"], [206, 2, 1, "", "setChild"], [206, 2, 1, "", "setUniform"], [206, 2, 1, "", "uniform"], [206, 2, 1, "", "uniforms"]], "skia.RuntimeEffectBuilderChild": [[207, 2, 1, "", "__init__"], [207, 3, 1, "", "name"], [207, 3, 1, "", "type"]], "skia.RuntimeEffectBuilderUniform": [[208, 2, 1, "", "__init__"], [208, 3, 1, "", "name"], [208, 3, 1, "", "type"]], "skia.RuntimeEffectChild": [[209, 2, 1, "", "__init__"], [209, 3, 1, "", "name"], [209, 3, 1, "", "type"]], "skia.RuntimeEffectChildPtr": [[210, 2, 1, "", "__init__"], [210, 3, 1, "", "type"]], "skia.RuntimeEffectResult": [[211, 2, 1, "", "__init__"], [211, 3, 1, "", "effect"], [211, 3, 1, "", "errorText"]], "skia.RuntimeEffectUniform": [[212, 2, 1, "", "__init__"], [212, 3, 1, "", "name"], [212, 3, 1, "", "type"]], "skia.RuntimeShaderBuilder": [[213, 2, 1, "", "__init__"], [213, 2, 1, "", "child"], [213, 2, 1, "", "children"], [213, 2, 1, "", "effect"], [213, 2, 1, "", "makeBlender"], [213, 2, 1, "", "makeColorFilter"], [213, 2, 1, "", "makeShader"], [213, 2, 1, "", "setChild"], [213, 2, 1, "", "setUniform"], [213, 2, 1, "", "uniform"], [213, 2, 1, "", "uniforms"]], "skia.SVGCanvas": [[214, 2, 1, "", "Make"], [214, 2, 1, "", "__init__"], [214, 3, 1, "", "kConvertTextToPaths_Flag"], [214, 3, 1, "", "kNoPrettyXML_Flag"]], "skia.SVGDOM": [[215, 2, 1, "", "MakeFromStream"], [215, 2, 1, "", "__init__"], [215, 2, 1, "", "containerSize"], [215, 2, 1, "", "ref"], [215, 2, 1, "", "render"], [215, 2, 1, "", "renderNode"], [215, 2, 1, "", "setContainerSize"], [215, 2, 1, "", "unique"], [215, 2, 1, "", "unref"]], "skia.SamplingOptions": [[216, 2, 1, "", "Aniso"], [216, 2, 1, "", "__init__"], [216, 3, 1, "", "cubic"], [216, 3, 1, "", "filter"], [216, 2, 1, "", "isAniso"], [216, 3, 1, "", "maxAniso"], [216, 3, 1, "", "mipmap"], [216, 3, 1, "", "useCubic"]], "skia.Shader": [[217, 2, 1, "", "Deserialize"], [218, 1, 1, "", "Type"], [217, 2, 1, "", "__init__"], [217, 2, 1, "", "getFlattenableType"], [217, 2, 1, "", "getTypeName"], [217, 2, 1, "", "isAImage"], [217, 2, 1, "", "isOpaque"], [217, 3, 1, "", "kColorFilter_Type"], [217, 3, 1, "", "kDrawLooper_Type"], [217, 3, 1, "", "kDrawable_Type"], [217, 3, 1, "", "kImageFilter_Type"], [217, 3, 1, "", "kMaskFilter_Type"], [217, 3, 1, "", "kPathEffect_Type"], [217, 2, 1, "", "makeWithColorFilter"], [217, 2, 1, "", "makeWithLocalMatrix"], [217, 2, 1, "", "ref"], [217, 2, 1, "", "serialize"], [217, 2, 1, "", "unique"], [217, 2, 1, "", "unref"]], "skia.Shader.Type": [[218, 2, 1, "", "__init__"], [218, 3, 1, "", "kColorFilter_Type"], [218, 3, 1, "", "kDrawLooper_Type"], [218, 3, 1, "", "kDrawable_Type"], [218, 3, 1, "", "kImageFilter_Type"], [218, 3, 1, "", "kMaskFilter_Type"], [218, 3, 1, "", "kPathEffect_Type"], [218, 3, 1, "", "name"], [218, 3, 1, "", "value"]], "skia.ShaderMaskFilter": [[219, 2, 1, "", "Make"], [219, 2, 1, "", "__init__"]], "skia.Shaders": [[220, 2, 1, "", "Blend"], [220, 2, 1, "", "Color"], [220, 2, 1, "", "Empty"], [220, 2, 1, "", "Lerp"], [220, 2, 1, "", "__init__"]], "skia.Size": [[221, 2, 1, "", "Make"], [221, 2, 1, "", "MakeEmpty"], [221, 2, 1, "", "__init__"], [221, 2, 1, "", "equals"], [221, 3, 1, "", "fHeight"], [221, 3, 1, "", "fWidth"], [221, 2, 1, "", "height"], [221, 2, 1, "", "isEmpty"], [221, 2, 1, "", "isZero"], [221, 2, 1, "", "set"], [221, 2, 1, "", "setEmpty"], [221, 2, 1, "", "toCeil"], [221, 2, 1, "", "toFloor"], [221, 2, 1, "", "toRound"], [221, 2, 1, "", "width"]], "skia.SpanRuntimeEffectChild": [[222, 2, 1, "", "__init__"]], "skia.SpanRuntimeEffectChildPtr": [[223, 2, 1, "", "__init__"]], "skia.SpanRuntimeEffectUniform": [[224, 2, 1, "", "__init__"]], "skia.Stream": [[225, 2, 1, "", "MakeFromFile"], [225, 2, 1, "", "__init__"], [225, 2, 1, "", "duplicate"], [225, 2, 1, "", "fork"], [225, 2, 1, "", "getLength"], [225, 2, 1, "", "getMemoryBase"], [225, 2, 1, "", "getPosition"], [225, 2, 1, "", "hasLength"], [225, 2, 1, "", "hasPosition"], [225, 2, 1, "", "isAtEnd"], [225, 2, 1, "", "move"], [225, 2, 1, "", "peek"], [225, 2, 1, "", "read"], [225, 2, 1, "", "readBool"], [225, 2, 1, "", "readPackedUInt"], [225, 2, 1, "", "readS16"], [225, 2, 1, "", "readS32"], [225, 2, 1, "", "readS8"], [225, 2, 1, "", "readScalar"], [225, 2, 1, "", "readU16"], [225, 2, 1, "", "readU32"], [225, 2, 1, "", "readU8"], [225, 2, 1, "", "rewind"], [225, 2, 1, "", "seek"], [225, 2, 1, "", "skip"]], "skia.StreamAsset": [[226, 2, 1, "", "MakeFromFile"], [226, 2, 1, "", "__init__"], [226, 2, 1, "", "duplicate"], [226, 2, 1, "", "fork"], [226, 2, 1, "", "getLength"], [226, 2, 1, "", "getMemoryBase"], [226, 2, 1, "", "getPosition"], [226, 2, 1, "", "hasLength"], [226, 2, 1, "", "hasPosition"], [226, 2, 1, "", "isAtEnd"], [226, 2, 1, "", "move"], [226, 2, 1, "", "peek"], [226, 2, 1, "", "read"], [226, 2, 1, "", "readBool"], [226, 2, 1, "", "readPackedUInt"], [226, 2, 1, "", "readS16"], [226, 2, 1, "", "readS32"], [226, 2, 1, "", "readS8"], [226, 2, 1, "", "readScalar"], [226, 2, 1, "", "readU16"], [226, 2, 1, "", "readU32"], [226, 2, 1, "", "readU8"], [226, 2, 1, "", "rewind"], [226, 2, 1, "", "seek"], [226, 2, 1, "", "skip"]], "skia.StreamMemory": [[227, 2, 1, "", "MakeFromFile"], [227, 2, 1, "", "__init__"], [227, 2, 1, "", "duplicate"], [227, 2, 1, "", "fork"], [227, 2, 1, "", "getLength"], [227, 2, 1, "", "getMemoryBase"], [227, 2, 1, "", "getPosition"], [227, 2, 1, "", "hasLength"], [227, 2, 1, "", "hasPosition"], [227, 2, 1, "", "isAtEnd"], [227, 2, 1, "", "move"], [227, 2, 1, "", "peek"], [227, 2, 1, "", "read"], [227, 2, 1, "", "readBool"], [227, 2, 1, "", "readPackedUInt"], [227, 2, 1, "", "readS16"], [227, 2, 1, "", "readS32"], [227, 2, 1, "", "readS8"], [227, 2, 1, "", "readScalar"], [227, 2, 1, "", "readU16"], [227, 2, 1, "", "readU32"], [227, 2, 1, "", "readU8"], [227, 2, 1, "", "rewind"], [227, 2, 1, "", "seek"], [227, 2, 1, "", "skip"]], "skia.StreamRewindable": [[228, 2, 1, "", "MakeFromFile"], [228, 2, 1, "", "__init__"], [228, 2, 1, "", "duplicate"], [228, 2, 1, "", "fork"], [228, 2, 1, "", "getLength"], [228, 2, 1, "", "getMemoryBase"], [228, 2, 1, "", "getPosition"], [228, 2, 1, "", "hasLength"], [228, 2, 1, "", "hasPosition"], [228, 2, 1, "", "isAtEnd"], [228, 2, 1, "", "move"], [228, 2, 1, "", "peek"], [228, 2, 1, "", "read"], [228, 2, 1, "", "readBool"], [228, 2, 1, "", "readPackedUInt"], [228, 2, 1, "", "readS16"], [228, 2, 1, "", "readS32"], [228, 2, 1, "", "readS8"], [228, 2, 1, "", "readScalar"], [228, 2, 1, "", "readU16"], [228, 2, 1, "", "readU32"], [228, 2, 1, "", "readU8"], [228, 2, 1, "", "rewind"], [228, 2, 1, "", "seek"], [228, 2, 1, "", "skip"]], "skia.StreamSeekable": [[229, 2, 1, "", "MakeFromFile"], [229, 2, 1, "", "__init__"], [229, 2, 1, "", "duplicate"], [229, 2, 1, "", "fork"], [229, 2, 1, "", "getLength"], [229, 2, 1, "", "getMemoryBase"], [229, 2, 1, "", "getPosition"], [229, 2, 1, "", "hasLength"], [229, 2, 1, "", "hasPosition"], [229, 2, 1, "", "isAtEnd"], [229, 2, 1, "", "move"], [229, 2, 1, "", "peek"], [229, 2, 1, "", "read"], [229, 2, 1, "", "readBool"], [229, 2, 1, "", "readPackedUInt"], [229, 2, 1, "", "readS16"], [229, 2, 1, "", "readS32"], [229, 2, 1, "", "readS8"], [229, 2, 1, "", "readScalar"], [229, 2, 1, "", "readU16"], [229, 2, 1, "", "readU32"], [229, 2, 1, "", "readU8"], [229, 2, 1, "", "rewind"], [229, 2, 1, "", "seek"], [229, 2, 1, "", "skip"]], "skia.String": [[230, 2, 1, "", "__init__"], [230, 2, 1, "", "append"], [230, 2, 1, "", "appendHex"], [230, 2, 1, "", "appendS32"], [230, 2, 1, "", "appendS64"], [230, 2, 1, "", "appendScalar"], [230, 2, 1, "", "appendU32"], [230, 2, 1, "", "appendU64"], [230, 2, 1, "", "appendUnichar"], [230, 2, 1, "", "c_str"], [230, 2, 1, "", "contains"], [230, 2, 1, "", "endsWith"], [230, 2, 1, "", "equals"], [230, 2, 1, "", "find"], [230, 2, 1, "", "findLastOf"], [230, 2, 1, "", "insert"], [230, 2, 1, "", "insertHex"], [230, 2, 1, "", "insertS32"], [230, 2, 1, "", "insertS64"], [230, 2, 1, "", "insertScalar"], [230, 2, 1, "", "insertU32"], [230, 2, 1, "", "insertU64"], [230, 2, 1, "", "insertUnichar"], [230, 2, 1, "", "isEmpty"], [230, 2, 1, "", "prepend"], [230, 2, 1, "", "prependHex"], [230, 2, 1, "", "prependS32"], [230, 2, 1, "", "prependS64"], [230, 2, 1, "", "prependScalar"], [230, 2, 1, "", "prependUnichar"], [230, 2, 1, "", "remove"], [230, 2, 1, "", "reset"], [230, 2, 1, "", "resize"], [230, 2, 1, "", "set"], [230, 2, 1, "", "size"], [230, 2, 1, "", "startsWith"], [230, 2, 1, "", "swap"]], "skia.StrokeRec": [[231, 2, 1, "", "GetInflationRadius"], [232, 1, 1, "", "InitStyle"], [233, 1, 1, "", "Style"], [231, 2, 1, "", "__init__"], [231, 2, 1, "", "applyToPaint"], [231, 2, 1, "", "applyToPath"], [231, 2, 1, "", "getCap"], [231, 2, 1, "", "getInflationRadius"], [231, 2, 1, "", "getJoin"], [231, 2, 1, "", "getMiter"], [231, 2, 1, "", "getResScale"], [231, 2, 1, "", "getStyle"], [231, 2, 1, "", "getWidth"], [231, 2, 1, "", "hasEqualEffect"], [231, 2, 1, "", "isFillStyle"], [231, 2, 1, "", "isHairlineStyle"], [231, 3, 1, "", "kFill_InitStyle"], [231, 3, 1, "", "kFill_Style"], [231, 3, 1, "", "kHairline_InitStyle"], [231, 3, 1, "", "kHairline_Style"], [231, 3, 1, "", "kStrokeAndFill_Style"], [231, 3, 1, "", "kStroke_Style"], [231, 3, 1, "", "kStyleCount"], [231, 2, 1, "", "needToApply"], [231, 2, 1, "", "setFillStyle"], [231, 2, 1, "", "setHairlineStyle"], [231, 2, 1, "", "setResScale"], [231, 2, 1, "", "setStrokeParams"], [231, 2, 1, "", "setStrokeStyle"]], "skia.StrokeRec.InitStyle": [[232, 2, 1, "", "__init__"], [232, 3, 1, "", "kFill_InitStyle"], [232, 3, 1, "", "kHairline_InitStyle"], [232, 3, 1, "", "name"], [232, 3, 1, "", "value"]], "skia.StrokeRec.Style": [[233, 2, 1, "", "__init__"], [233, 3, 1, "", "kFill_Style"], [233, 3, 1, "", "kHairline_Style"], [233, 3, 1, "", "kStrokeAndFill_Style"], [233, 3, 1, "", "kStroke_Style"], [233, 3, 1, "", "name"], [233, 3, 1, "", "value"]], "skia.Surface": [[235, 1, 1, "", "AsyncReadResult"], [236, 1, 1, "", "BackendHandleAccess"], [237, 1, 1, "", "BackendSurfaceAccess"], [238, 1, 1, "", "ContentChangeMode"], [234, 2, 1, "", "MakeFromBackendRenderTarget"], [234, 2, 1, "", "MakeFromBackendTexture"], [234, 2, 1, "", "MakeNull"], [234, 2, 1, "", "MakeRaster"], [234, 2, 1, "", "MakeRasterDirect"], [234, 2, 1, "", "MakeRasterN32Premul"], [234, 2, 1, "", "MakeRenderTarget"], [234, 2, 1, "", "Raster"], [239, 1, 1, "", "RescaleGamma"], [234, 2, 1, "", "WrapBackendRenderTarget"], [234, 2, 1, "", "__init__"], [234, 2, 1, "", "asyncRescaleAndReadPixels"], [234, 2, 1, "", "characterize"], [234, 2, 1, "", "draw"], [234, 2, 1, "", "flush"], [234, 2, 1, "", "flushAndSubmit"], [234, 2, 1, "", "generationID"], [234, 2, 1, "", "getBackendRenderTarget"], [234, 2, 1, "", "getBackendTexture"], [234, 2, 1, "", "getCanvas"], [234, 2, 1, "", "height"], [234, 2, 1, "", "imageInfo"], [234, 2, 1, "", "isCompatible"], [234, 3, 1, "", "kDiscardWrite_BackendHandleAccess"], [234, 3, 1, "", "kDiscard_ContentChangeMode"], [234, 3, 1, "", "kFlushRead_BackendHandleAccess"], [234, 3, 1, "", "kFlushWrite_BackendHandleAccess"], [234, 3, 1, "", "kLinear"], [234, 3, 1, "", "kNoAccess"], [234, 3, 1, "", "kPresent"], [234, 3, 1, "", "kRetain_ContentChangeMode"], [234, 3, 1, "", "kSrc"], [234, 2, 1, "", "makeImageSnapshot"], [234, 2, 1, "", "makeSurface"], [234, 2, 1, "", "notifyContentWillChange"], [234, 2, 1, "", "peekPixels"], [234, 2, 1, "", "props"], [234, 2, 1, "", "readPixels"], [234, 2, 1, "", "recordingContext"], [234, 2, 1, "", "ref"], [234, 2, 1, "", "replaceBackendTexture"], [234, 2, 1, "", "toarray"], [234, 2, 1, "", "unique"], [234, 2, 1, "", "unref"], [234, 2, 1, "", "width"], [234, 2, 1, "", "writePixels"]], "skia.Surface.AsyncReadResult": [[235, 2, 1, "", "__init__"], [235, 2, 1, "", "count"], [235, 2, 1, "", "data"], [235, 2, 1, "", "rowBytes"]], "skia.Surface.BackendHandleAccess": [[236, 2, 1, "", "__init__"], [236, 3, 1, "", "kDiscardWrite_BackendHandleAccess"], [236, 3, 1, "", "kFlushRead_BackendHandleAccess"], [236, 3, 1, "", "kFlushWrite_BackendHandleAccess"], [236, 3, 1, "", "name"], [236, 3, 1, "", "value"]], "skia.Surface.BackendSurfaceAccess": [[237, 2, 1, "", "__init__"], [237, 3, 1, "", "kNoAccess"], [237, 3, 1, "", "kPresent"], [237, 3, 1, "", "name"], [237, 3, 1, "", "value"]], "skia.Surface.ContentChangeMode": [[238, 2, 1, "", "__init__"], [238, 3, 1, "", "kDiscard_ContentChangeMode"], [238, 3, 1, "", "kRetain_ContentChangeMode"], [238, 3, 1, "", "name"], [238, 3, 1, "", "value"]], "skia.Surface.RescaleGamma": [[239, 2, 1, "", "__init__"], [239, 3, 1, "", "kLinear"], [239, 3, 1, "", "kSrc"], [239, 3, 1, "", "name"], [239, 3, 1, "", "value"]], "skia.SurfaceCharacterization": [[240, 2, 1, "", "__init__"], [240, 2, 1, "", "cacheMaxResourceBytes"], [240, 2, 1, "", "colorSpace"], [240, 2, 1, "", "createBackendFormat"], [240, 2, 1, "", "createColorSpace"], [240, 2, 1, "", "createFBO0"], [240, 2, 1, "", "createResized"], [240, 2, 1, "", "height"], [240, 2, 1, "", "isMipMapped"], [240, 2, 1, "", "isTextureable"], [240, 2, 1, "", "isValid"], [240, 2, 1, "", "refColorSpace"], [240, 2, 1, "", "surfaceProps"], [240, 2, 1, "", "usesGLFBO0"], [240, 2, 1, "", "vulkanSecondaryCBCompatible"], [240, 2, 1, "", "width"]], "skia.SurfaceProps": [[242, 1, 1, "", "Flags"], [241, 2, 1, "", "__init__"], [241, 2, 1, "", "flags"], [241, 2, 1, "", "isUseDeviceIndependentFonts"], [241, 3, 1, "", "kAlwaysDither_Flag"], [241, 3, 1, "", "kDefault_Flag"], [241, 3, 1, "", "kDynamicMSAA_Flag"], [241, 3, 1, "", "kUseDeviceIndependentFonts_Flag"], [241, 2, 1, "", "pixelGeometry"]], "skia.SurfaceProps.Flags": [[242, 2, 1, "", "__init__"], [242, 3, 1, "", "kAlwaysDither_Flag"], [242, 3, 1, "", "kDefault_Flag"], [242, 3, 1, "", "kDynamicMSAA_Flag"], [242, 3, 1, "", "kUseDeviceIndependentFonts_Flag"], [242, 3, 1, "", "name"], [242, 3, 1, "", "value"]], "skia.Surfaces": [[244, 1, 1, "", "AsyncReadResult"], [245, 1, 1, "", "BackendHandleAccess"], [246, 1, 1, "", "BackendSurfaceAccess"], [247, 1, 1, "", "ContentChangeMode"], [243, 2, 1, "", "MakeFromBackendRenderTarget"], [243, 2, 1, "", "MakeFromBackendTexture"], [243, 2, 1, "", "MakeNull"], [243, 2, 1, "", "MakeRaster"], [243, 2, 1, "", "MakeRasterDirect"], [243, 2, 1, "", "MakeRasterN32Premul"], [243, 2, 1, "", "MakeRenderTarget"], [243, 2, 1, "", "Raster"], [248, 1, 1, "", "RescaleGamma"], [243, 2, 1, "", "WrapBackendRenderTarget"], [243, 2, 1, "", "__init__"], [243, 2, 1, "", "asyncRescaleAndReadPixels"], [243, 2, 1, "", "characterize"], [243, 2, 1, "", "draw"], [243, 2, 1, "", "flush"], [243, 2, 1, "", "flushAndSubmit"], [243, 2, 1, "", "generationID"], [243, 2, 1, "", "getBackendRenderTarget"], [243, 2, 1, "", "getBackendTexture"], [243, 2, 1, "", "getCanvas"], [243, 2, 1, "", "height"], [243, 2, 1, "", "imageInfo"], [243, 2, 1, "", "isCompatible"], [243, 3, 1, "", "kDiscardWrite_BackendHandleAccess"], [243, 3, 1, "", "kDiscard_ContentChangeMode"], [243, 3, 1, "", "kFlushRead_BackendHandleAccess"], [243, 3, 1, "", "kFlushWrite_BackendHandleAccess"], [243, 3, 1, "", "kLinear"], [243, 3, 1, "", "kNoAccess"], [243, 3, 1, "", "kPresent"], [243, 3, 1, "", "kRetain_ContentChangeMode"], [243, 3, 1, "", "kSrc"], [243, 2, 1, "", "makeImageSnapshot"], [243, 2, 1, "", "makeSurface"], [243, 2, 1, "", "notifyContentWillChange"], [243, 2, 1, "", "peekPixels"], [243, 2, 1, "", "props"], [243, 2, 1, "", "readPixels"], [243, 2, 1, "", "recordingContext"], [243, 2, 1, "", "ref"], [243, 2, 1, "", "replaceBackendTexture"], [243, 2, 1, "", "toarray"], [243, 2, 1, "", "unique"], [243, 2, 1, "", "unref"], [243, 2, 1, "", "width"], [243, 2, 1, "", "writePixels"]], "skia.Surfaces.AsyncReadResult": [[244, 2, 1, "", "__init__"], [244, 2, 1, "", "count"], [244, 2, 1, "", "data"], [244, 2, 1, "", "rowBytes"]], "skia.Surfaces.BackendHandleAccess": [[245, 2, 1, "", "__init__"], [245, 3, 1, "", "kDiscardWrite_BackendHandleAccess"], [245, 3, 1, "", "kFlushRead_BackendHandleAccess"], [245, 3, 1, "", "kFlushWrite_BackendHandleAccess"], [245, 3, 1, "", "name"], [245, 3, 1, "", "value"]], "skia.Surfaces.BackendSurfaceAccess": [[246, 2, 1, "", "__init__"], [246, 3, 1, "", "kNoAccess"], [246, 3, 1, "", "kPresent"], [246, 3, 1, "", "name"], [246, 3, 1, "", "value"]], "skia.Surfaces.ContentChangeMode": [[247, 2, 1, "", "__init__"], [247, 3, 1, "", "kDiscard_ContentChangeMode"], [247, 3, 1, "", "kRetain_ContentChangeMode"], [247, 3, 1, "", "name"], [247, 3, 1, "", "value"]], "skia.Surfaces.RescaleGamma": [[248, 2, 1, "", "__init__"], [248, 3, 1, "", "kLinear"], [248, 3, 1, "", "kSrc"], [248, 3, 1, "", "name"], [248, 3, 1, "", "value"]], "skia.TableColorFilter": [[249, 2, 1, "", "Make"], [249, 2, 1, "", "MakeARGB"], [249, 2, 1, "", "__init__"]], "skia.TableMaskFilter": [[250, 2, 1, "", "Create"], [250, 2, 1, "", "CreateClip"], [250, 2, 1, "", "CreateGamma"], [250, 2, 1, "", "MakeClipTable"], [250, 2, 1, "", "MakeGammaTable"], [250, 2, 1, "", "__init__"]], "skia.TextBlob": [[251, 2, 1, "", "Deserialize"], [252, 1, 1, "", "Iter"], [251, 2, 1, "", "MakeFromPosText"], [251, 2, 1, "", "MakeFromPosTextH"], [251, 2, 1, "", "MakeFromRSXform"], [251, 2, 1, "", "MakeFromShapedText"], [251, 2, 1, "", "MakeFromString"], [251, 2, 1, "", "MakeFromText"], [251, 2, 1, "", "__init__"], [251, 2, 1, "", "bounds"], [251, 2, 1, "", "deref"], [251, 2, 1, "", "getIntercepts"], [251, 2, 1, "", "ref"], [251, 2, 1, "", "refCntGreaterThan"], [251, 2, 1, "", "serialize"], [251, 2, 1, "", "unique"], [251, 2, 1, "", "uniqueID"], [251, 2, 1, "", "unref"]], "skia.TextBlob.Iter": [[253, 1, 1, "", "Run"], [252, 2, 1, "", "__init__"], [252, 2, 1, "", "next"]], "skia.TextBlob.Iter.Run": [[253, 2, 1, "", "__init__"], [253, 3, 1, "", "fGlyphCount"], [253, 3, 1, "", "fGlyphIndices"], [253, 3, 1, "", "fTypeface"]], "skia.TextBlobBuilder": [[254, 2, 1, "", "__init__"], [254, 2, 1, "", "allocRun"], [254, 2, 1, "", "allocRunPos"], [254, 2, 1, "", "allocRunPosH"], [254, 2, 1, "", "allocRunRSXform"], [254, 2, 1, "", "make"]], "skia.TextEncoding": [[255, 2, 1, "", "__init__"], [255, 3, 1, "", "kGlyphID"], [255, 3, 1, "", "kUTF16"], [255, 3, 1, "", "kUTF32"], [255, 3, 1, "", "kUTF8"], [255, 3, 1, "", "name"], [255, 3, 1, "", "value"]], "skia.TileMode": [[256, 2, 1, "", "__init__"], [256, 3, 1, "", "kClamp"], [256, 3, 1, "", "kDecal"], [256, 3, 1, "", "kLastTileMode"], [256, 3, 1, "", "kMirror"], [256, 3, 1, "", "kRepeat"], [256, 3, 1, "", "name"], [256, 3, 1, "", "value"]], "skia.TrimPathEffect": [[257, 2, 1, "", "Make"], [258, 1, 1, "", "Mode"], [257, 2, 1, "", "__init__"], [257, 3, 1, "", "kInverted"], [257, 3, 1, "", "kNormal"]], "skia.TrimPathEffect.Mode": [[258, 2, 1, "", "__init__"], [258, 3, 1, "", "kInverted"], [258, 3, 1, "", "kNormal"], [258, 3, 1, "", "name"], [258, 3, 1, "", "value"]], "skia.Typeface": [[259, 2, 1, "", "Equal"], [259, 2, 1, "", "MakeDefault"], [259, 2, 1, "", "MakeDeserialize"], [259, 2, 1, "", "MakeEmpty"], [259, 2, 1, "", "MakeFromData"], [259, 2, 1, "", "MakeFromFile"], [259, 2, 1, "", "MakeFromName"], [260, 1, 1, "", "SerializeBehavior"], [259, 2, 1, "", "__init__"], [259, 2, 1, "", "copyTableData"], [259, 2, 1, "", "countGlyphs"], [259, 2, 1, "", "countTables"], [259, 2, 1, "", "fontStyle"], [259, 2, 1, "", "getBounds"], [259, 2, 1, "", "getFamilyName"], [259, 2, 1, "", "getFamilyNames"], [259, 2, 1, "", "getKerningPairAdjustments"], [259, 2, 1, "", "getPostScriptName"], [259, 2, 1, "", "getTableData"], [259, 2, 1, "", "getTableSize"], [259, 2, 1, "", "getTableTags"], [259, 2, 1, "", "getUnitsPerEm"], [259, 2, 1, "", "getVariationDesignParameters"], [259, 2, 1, "", "getVariationDesignPosition"], [259, 2, 1, "", "isBold"], [259, 2, 1, "", "isFixedPitch"], [259, 2, 1, "", "isItalic"], [259, 3, 1, "", "kDoIncludeData"], [259, 3, 1, "", "kDontIncludeData"], [259, 3, 1, "", "kIncludeDataIfLocal"], [259, 2, 1, "", "makeClone"], [259, 2, 1, "", "ref"], [259, 2, 1, "", "serialize"], [259, 2, 1, "", "unicharToGlyph"], [259, 2, 1, "", "unicharsToGlyphs"], [259, 2, 1, "", "unique"], [259, 2, 1, "", "uniqueID"], [259, 2, 1, "", "unref"]], "skia.Typeface.SerializeBehavior": [[260, 2, 1, "", "__init__"], [260, 3, 1, "", "kDoIncludeData"], [260, 3, 1, "", "kDontIncludeData"], [260, 3, 1, "", "kIncludeDataIfLocal"], [260, 3, 1, "", "name"], [260, 3, 1, "", "value"]], "skia.Unicode": [[261, 2, 1, "", "ICU_Make"], [261, 2, 1, "", "__init__"], [261, 2, 1, "", "ref"], [261, 2, 1, "", "unique"], [261, 2, 1, "", "unref"]], "skia.V2": [[262, 2, 1, "", "__init__"]], "skia.V3": [[263, 2, 1, "", "__init__"]], "skia.V4": [[264, 2, 1, "", "__init__"]], "skia.VectorRuntimeEffectChild": [[265, 2, 1, "", "__init__"], [265, 2, 1, "", "append"], [265, 2, 1, "", "clear"], [265, 2, 1, "", "extend"], [265, 2, 1, "", "insert"], [265, 2, 1, "", "pop"]], "skia.VectorRuntimeEffectChildPtr": [[266, 2, 1, "", "__init__"], [266, 2, 1, "", "append"], [266, 2, 1, "", "clear"], [266, 2, 1, "", "extend"], [266, 2, 1, "", "insert"], [266, 2, 1, "", "pop"]], "skia.Vertices": [[267, 2, 1, "", "MakeCopy"], [268, 1, 1, "", "VertexMode"], [267, 2, 1, "", "__init__"], [267, 2, 1, "", "approximateSize"], [267, 2, 1, "", "bounds"], [267, 2, 1, "", "deref"], [267, 3, 1, "", "kLast_VertexMode"], [267, 3, 1, "", "kTriangleFan_VertexMode"], [267, 3, 1, "", "kTriangleStrip_VertexMode"], [267, 3, 1, "", "kTriangles_VertexMode"], [267, 2, 1, "", "ref"], [267, 2, 1, "", "refCntGreaterThan"], [267, 2, 1, "", "unique"], [267, 2, 1, "", "uniqueID"], [267, 2, 1, "", "unref"]], "skia.Vertices.VertexMode": [[268, 2, 1, "", "__init__"], [268, 3, 1, "", "kLast_VertexMode"], [268, 3, 1, "", "kTriangleFan_VertexMode"], [268, 3, 1, "", "kTriangleStrip_VertexMode"], [268, 3, 1, "", "kTriangles_VertexMode"], [268, 3, 1, "", "name"], [268, 3, 1, "", "value"]], "skia.VkFormat": [[269, 2, 1, "", "__init__"], [269, 3, 1, "", "name"], [269, 3, 1, "", "value"]], "skia.VkImageLayout": [[270, 2, 1, "", "__init__"], [270, 3, 1, "", "name"], [270, 3, 1, "", "value"]], "skia.WStream": [[271, 2, 1, "", "SizeOfPackedUInt"], [271, 2, 1, "", "__init__"], [271, 2, 1, "", "bytesWritten"], [271, 2, 1, "", "flush"], [271, 2, 1, "", "newline"], [271, 2, 1, "", "write"], [271, 2, 1, "", "write16"], [271, 2, 1, "", "write32"], [271, 2, 1, "", "write8"], [271, 2, 1, "", "writeBigDecAsText"], [271, 2, 1, "", "writeBool"], [271, 2, 1, "", "writeDecAsText"], [271, 2, 1, "", "writeHexAsText"], [271, 2, 1, "", "writePackedUInt"], [271, 2, 1, "", "writeScalar"], [271, 2, 1, "", "writeScalarAsText"], [271, 2, 1, "", "writeStream"], [271, 2, 1, "", "writeText"]], "skia.YUVAInfo": [[272, 2, 1, "", "HasAlpha"], [272, 2, 1, "", "NumChannelsInPlane"], [272, 2, 1, "", "NumPlanes"], [273, 1, 1, "", "PlaneConfig"], [272, 2, 1, "", "PlaneDimensions"], [274, 1, 1, "", "Siting"], [275, 1, 1, "", "Subsampling"], [272, 2, 1, "", "__init__"], [272, 2, 1, "", "computeTotalBytes"], [272, 2, 1, "", "dimensions"], [272, 2, 1, "", "hasAlpha"], [272, 2, 1, "", "height"], [272, 3, 1, "", "k410"], [272, 3, 1, "", "k411"], [272, 3, 1, "", "k420"], [272, 3, 1, "", "k422"], [272, 3, 1, "", "k440"], [272, 3, 1, "", "k444"], [272, 3, 1, "", "kCentered"], [272, 3, 1, "", "kMaxPlanes"], [272, 3, 1, "", "kUYV"], [272, 3, 1, "", "kUYVA"], [272, 3, 1, "", "kUnknown"], [272, 3, 1, "", "kYUV"], [272, 3, 1, "", "kYUVA"], [272, 3, 1, "", "kY_UV"], [272, 3, 1, "", "kY_UV_A"], [272, 3, 1, "", "kY_U_V"], [272, 3, 1, "", "kY_U_V_A"], [272, 3, 1, "", "kY_VU"], [272, 3, 1, "", "kY_VU_A"], [272, 3, 1, "", "kY_V_U"], [272, 3, 1, "", "kY_V_U_A"], [272, 2, 1, "", "numChannelsInPlane"], [272, 2, 1, "", "numPlanes"], [272, 2, 1, "", "origin"], [272, 2, 1, "", "planeConfig"], [272, 2, 1, "", "planeDimensions"], [272, 2, 1, "", "sitingX"], [272, 2, 1, "", "sitingY"], [272, 2, 1, "", "subSampling"], [272, 2, 1, "", "width"], [272, 2, 1, "", "yuvColorSpace"]], "skia.YUVAInfo.PlaneConfig": [[273, 2, 1, "", "__init__"], [273, 3, 1, "", "kUYV"], [273, 3, 1, "", "kUYVA"], [273, 3, 1, "", "kUnknown"], [273, 3, 1, "", "kYUV"], [273, 3, 1, "", "kYUVA"], [273, 3, 1, "", "kY_UV"], [273, 3, 1, "", "kY_UV_A"], [273, 3, 1, "", "kY_U_V"], [273, 3, 1, "", "kY_U_V_A"], [273, 3, 1, "", "kY_VU"], [273, 3, 1, "", "kY_VU_A"], [273, 3, 1, "", "kY_V_U"], [273, 3, 1, "", "kY_V_U_A"], [273, 3, 1, "", "name"], [273, 3, 1, "", "value"]], "skia.YUVAInfo.Siting": [[274, 2, 1, "", "__init__"], [274, 3, 1, "", "kCentered"], [274, 3, 1, "", "name"], [274, 3, 1, "", "value"]], "skia.YUVAInfo.Subsampling": [[275, 2, 1, "", "__init__"], [275, 3, 1, "", "k410"], [275, 3, 1, "", "k411"], [275, 3, 1, "", "k420"], [275, 3, 1, "", "k422"], [275, 3, 1, "", "k440"], [275, 3, 1, "", "k444"], [275, 3, 1, "", "kUnknown"], [275, 3, 1, "", "name"], [275, 3, 1, "", "value"]], "skia.YUVAPixmapInfo": [[277, 1, 1, "", "DataType"], [276, 2, 1, "", "DefaultColorTypeForDataType"], [276, 2, 1, "", "NumChannelsAndDataType"], [278, 1, 1, "", "SupportedDataTypes"], [276, 2, 1, "", "__init__"], [276, 2, 1, "", "computeTotalBytes"], [276, 2, 1, "", "dataType"], [276, 2, 1, "", "initPixmapsFromSingleAllocation"], [276, 2, 1, "", "isSupported"], [276, 2, 1, "", "isValid"], [276, 3, 1, "", "kFloat16"], [276, 3, 1, "", "kLast"], [276, 3, 1, "", "kMaxPlanes"], [276, 3, 1, "", "kUnorm10_Unorm2"], [276, 3, 1, "", "kUnorm16"], [276, 3, 1, "", "kUnorm8"], [276, 2, 1, "", "numPlanes"], [276, 2, 1, "", "planeInfo"], [276, 2, 1, "", "rowBytes"], [276, 2, 1, "", "yuvColorSpace"], [276, 2, 1, "", "yuvaInfo"]], "skia.YUVAPixmapInfo.DataType": [[277, 2, 1, "", "__init__"], [277, 3, 1, "", "kFloat16"], [277, 3, 1, "", "kLast"], [277, 3, 1, "", "kUnorm10_Unorm2"], [277, 3, 1, "", "kUnorm16"], [277, 3, 1, "", "kUnorm8"], [277, 3, 1, "", "name"], [277, 3, 1, "", "value"]], "skia.YUVAPixmapInfo.SupportedDataTypes": [[278, 2, 1, "", "All"], [278, 2, 1, "", "__init__"], [278, 2, 1, "", "enableDataType"], [278, 2, 1, "", "supported"]], "skia.YUVAPixmaps": [[279, 2, 1, "", "Allocate"], [279, 2, 1, "", "FromData"], [279, 2, 1, "", "FromExternalMemory"], [279, 2, 1, "", "FromExternalPixmaps"], [279, 2, 1, "", "__init__"], [279, 2, 1, "", "isValid"], [279, 2, 1, "", "numPlanes"], [279, 2, 1, "", "plane"], [279, 2, 1, "", "planes"], [279, 2, 1, "", "yuvaInfo"]], "skia.YUVColorSpace": [[280, 2, 1, "", "__init__"], [280, 3, 1, "", "kBT2020_YUVColorSpace"], [280, 3, 1, "", "kIdentity_YUVColorSpace"], [280, 3, 1, "", "kJPEG_YUVColorSpace"], [280, 3, 1, "", "kLastEnum_YUVColorSpace"], [280, 3, 1, "", "kRec601_YUVColorSpace"], [280, 3, 1, "", "kRec709_YUVColorSpace"], [280, 3, 1, "", "name"], [280, 3, 1, "", "value"]], "skia.gpuBackendApi": [[281, 2, 1, "", "__init__"], [281, 3, 1, "", "kDawn"], [281, 3, 1, "", "kMetal"], [281, 3, 1, "", "kMock"], [281, 3, 1, "", "kVulkan"], [281, 3, 1, "", "name"], [281, 3, 1, "", "value"]], "skia.textlayout_FontCollection": [[282, 2, 1, "", "__init__"], [282, 2, 1, "", "ref"], [282, 2, 1, "", "setDefaultFontManager"], [282, 2, 1, "", "unique"], [282, 2, 1, "", "unref"]], "skia.textlayout_Paragraph": [[283, 3, 1, "", "AlphabeticBaseline"], [283, 3, 1, "", "ExceedMaxLines"], [283, 3, 1, "", "Height"], [283, 3, 1, "", "IdeographicBaseline"], [283, 3, 1, "", "LongestLine"], [283, 3, 1, "", "MaxIntrinsicWidth"], [283, 3, 1, "", "MinIntrinsicWidth"], [283, 3, 1, "", "Width"], [283, 2, 1, "", "__init__"], [283, 2, 1, "", "layout"], [283, 2, 1, "", "paint"]], "skia.textlayout_ParagraphBuilder": [[284, 2, 1, "", "Build"], [284, 2, 1, "", "__init__"], [284, 2, 1, "", "addText"], [284, 2, 1, "", "make"], [284, 2, 1, "", "pop"], [284, 2, 1, "", "pushStyle"]], "skia.textlayout_ParagraphStyle": [[285, 2, 1, "", "__init__"], [285, 2, 1, "", "setStrutStyle"], [285, 2, 1, "", "setTextAlign"], [285, 2, 1, "", "setTextStyle"]], "skia.textlayout_StrutStyle": [[286, 2, 1, "", "__init__"], [286, 2, 1, "", "setLeading"], [286, 2, 1, "", "setStrutEnabled"]], "skia.textlayout_TextAlign": [[287, 2, 1, "", "__init__"], [287, 3, 1, "", "kCenter"], [287, 3, 1, "", "kEnd"], [287, 3, 1, "", "kJustify"], [287, 3, 1, "", "kLeft"], [287, 3, 1, "", "kRight"], [287, 3, 1, "", "kStart"], [287, 3, 1, "", "name"], [287, 3, 1, "", "value"]], "skia.textlayout_TextDecoration": [[288, 2, 1, "", "__init__"], [288, 3, 1, "", "kLineThrough"], [288, 3, 1, "", "kNoDecoration"], [288, 3, 1, "", "kOverline"], [288, 3, 1, "", "kOverlineLineThrough"], [288, 3, 1, "", "kUnderline"], [288, 3, 1, "", "kUnderlineLineThrough"], [288, 3, 1, "", "kUnderlineOverline"], [288, 3, 1, "", "kUnderlineOverlineLineThrough"], [288, 3, 1, "", "name"], [288, 3, 1, "", "value"]], "skia.textlayout_TextDecorationMode": [[289, 2, 1, "", "__init__"], [289, 3, 1, "", "kGaps"], [289, 3, 1, "", "kThrough"], [289, 3, 1, "", "name"], [289, 3, 1, "", "value"]], "skia.textlayout_TextDecorationStyle": [[290, 2, 1, "", "__init__"], [290, 3, 1, "", "kDashed"], [290, 3, 1, "", "kDotted"], [290, 3, 1, "", "kDouble"], [290, 3, 1, "", "kSolid"], [290, 3, 1, "", "kWavy"], [290, 3, 1, "", "name"], [290, 3, 1, "", "value"]], "skia.textlayout_TextStyle": [[291, 2, 1, "", "__init__"], [291, 2, 1, "", "cloneForPlaceholder"], [291, 2, 1, "", "setColor"], [291, 2, 1, "", "setDecoration"], [291, 2, 1, "", "setDecorationColor"], [291, 2, 1, "", "setDecorationMode"], [291, 2, 1, "", "setDecorationStyle"], [291, 2, 1, "", "setDecorationThicknessMultiplier"], [291, 2, 1, "", "setFontFamilies"], [291, 2, 1, "", "setFontSize"], [291, 2, 1, "", "setFontStyle"], [291, 2, 1, "", "setForegroundColor"], [291, 2, 1, "", "setForegroundPaint"], [291, 2, 1, "", "setLetterSpacing"], [291, 2, 1, "", "setLocale"], [291, 2, 1, "", "setWordSpacing"]], "skia.textlayout_TypefaceFontProvider": [[292, 2, 1, "", "New_Custom_Directory"], [292, 2, 1, "", "New_Custom_Empty"], [292, 2, 1, "", "OneFontMgr"], [292, 2, 1, "", "RefDefault"], [292, 2, 1, "", "__init__"], [292, 2, 1, "", "countFamilies"], [292, 2, 1, "", "createStyleSet"], [292, 2, 1, "", "getFamilyName"], [292, 2, 1, "", "legacyMakeTypeface"], [292, 2, 1, "", "makeFromData"], [292, 2, 1, "", "makeFromFile"], [292, 2, 1, "", "matchFamily"], [292, 2, 1, "", "matchFamilyStyle"], [292, 2, 1, "", "matchFamilyStyleCharacter"], [292, 2, 1, "", "ref"], [292, 2, 1, "", "registerTypeface"], [292, 2, 1, "", "unique"], [292, 2, 1, "", "unref"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"develop": 0, "python": [0, 1, 295], "bind": 0, "design": 0, "contribut": 0, "skia": [1, 4], "document": [1, 2, 53], "indic": 1, "tabl": [1, 296], "instal": 2, "pypi": 2, "distribut": 2, "build": 2, "instruct": 2, "linux": 2, "maco": 2, "window": [2, 293], "test": 2, "refer": 3, "function": 4, "alphatyp": 5, "method": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292], "attribut": [5, 6, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 46, 47, 49, 54, 55, 57, 58, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 76, 77, 78, 79, 80, 82, 88, 94, 95, 96, 97, 99, 101, 105, 106, 108, 109, 110, 111, 112, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 140, 141, 142, 143, 144, 147, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 186, 187, 188, 189, 190, 191, 193, 196, 199, 203, 204, 205, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 221, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 253, 255, 256, 257, 258, 259, 260, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 280, 281, 283, 287, 288, 289, 290], "applyperspectiveclip": 6, "autocanvasrestor": 7, "bbhfactori": 8, "bboxhierarchi": [9, 10], "metadata": [10, 153], "bitmap": [11, 12, 296], "allocflag": 12, "blendmod": 13, "blendmodecoeff": 14, "blurmaskfilt": 15, "blurstyl": 16, "budget": 17, "canva": [18, 19, 20, 21, 22, 23, 24, 25, 293, 295], "lattic": [19, 20], "recttyp": 20, "pointmod": 21, "quadaaflag": 22, "savelayerflag": 23, "savelayerrec": 24, "srcrectconstraint": 25, "clipop": 26, "codec": [27, 28, 29, 30, 31, 32, 33, 34], "disposalmethod": 28, "frameinfo": 29, "option": 30, "result": 31, "scanlineord": 32, "selectionpolici": 33, "zeroiniti": 34, "color4f": 35, "colorchannel": 36, "colorchannelflag": 37, "colorfilt": [38, 39, 40, 296], "type": [39, 44, 55, 63, 134, 141, 173, 190, 218], "colorinfo": 41, "colormatrix": 42, "colormatrixfilt": [43, 44], "colorspac": 45, "colortyp": 46, "convergemod": 47, "cornerpatheffect": 48, "cubicresampl": 49, "dashpatheffect": 50, "data": 51, "discretepatheffect": 52, "drawabl": [54, 55], "dynamicmemorywstream": 56, "encodedimageformat": 57, "encodedorigin": 58, "filestream": 59, "filewstream": 60, "filtermod": 61, "flattan": [62, 63], "font": [64, 65], "edg": 65, "fontargu": [66, 67, 68, 69], "variationposit": [67, 68, 69], "coordin": [68, 69], "fonthint": 70, "fontmetr": [71, 72], "fontmetricsflag": 72, "fontmgr": 73, "fontparamet": [74, 75, 76], "variat": [75, 76], "axi": 76, "fontstyl": [77, 78, 79, 80], "slant": 78, "weight": 79, "width": 80, "fontstyleset": 81, "grbackendapi": 82, "grbackendformat": 83, "grbackendrendertarget": [84, 85], "grbackendsemaphor": 86, "grbackendtextur": 87, "grcolortyp": 88, "grcontext": 89, "grcontextopt": 90, "grcontext_bas": 91, "grdirectcontext": [92, 93], "grflushinfo": 94, "grglbackendst": 95, "grglformat": 96, "grglframebufferinfo": 97, "grglinterfac": 98, "grgltextureinfo": 99, "grimagecontext": 100, "grmipmap": 101, "grmockopt": 102, "grmockrendertargetinfo": 103, "grmocktextureinfo": 104, "grprotect": 105, "grpurgeresourceopt": 106, "grrecordingcontext": 107, "grrender": 108, "grsemaphoressubmit": 109, "grsurfaceorigin": 110, "grsynccpu": 111, "grtexturetyp": 112, "grvkalloc": 113, "grvkbackendcontext": 114, "grvkdrawableinfo": 115, "grvkimageinfo": 116, "grvkycbcrconversioninfo": 117, "gradientshad": [118, 119], "flag": [119, 242], "highcontrastconfig": [120, 121], "invertstyl": 121, "highcontrastfilt": 122, "ipoint": 123, "irect": 124, "isiz": 125, "imag": [126, 127, 128, 129, 130], "bitdepth": 127, "cachinghint": 128, "compressiontyp": 129, "legacybitmapmod": 130, "imagefilt": [131, 132, 133, 134, 135, 296], "croprect": 132, "mapdirect": 133, "imageinfo": 136, "line2dpatheffect": 137, "lumacolorfilt": 138, "m44": 139, "maskfilt": [140, 141, 296], "matrix": [142, 143, 144, 296], "scaletofit": 143, "typemask": 144, "memorystream": 145, "mipmapbuild": 146, "mipmapmod": 147, "nullwstream": 148, "opbuild": 149, "overdrawcolorfilt": 150, "pdf": [151, 152, 153, 154, 293], "attributelist": 152, "structureelementnod": 154, "paint": [155, 156, 157, 158, 296], "cap": 156, "join": 157, "style": [158, 167, 233], "path": [159, 160, 161, 162, 163, 164, 165, 296, 297], "addpathmod": 160, "arcsiz": [161, 170], "iter": [162, 198, 252, 253], "rawit": 163, "segmentmask": 164, "verb": 165, "path1dpatheffect": [166, 167], "path2dpatheffect": 168, "pathbuild": [169, 170], "pathdirect": 171, "patheffect": [172, 173, 296], "pathfilltyp": 174, "pathmeasur": [175, 176], "getposandtan": 176, "pathop": 177, "pathsegmentmask": 178, "pathverb": 179, "perlinnoiseshad": 180, "pictur": [181, 293], "picturerecord": 182, "pixelgeometri": 183, "pixelref": 184, "pixmap": 185, "point": [186, 296], "point3": 187, "rrect": [188, 189, 190], "corner": [189, 296], "rsxform": 191, "rtreefactori": 192, "rect": 193, "refcnt": 194, "refcntbas": 195, "region": [196, 197, 198, 199, 200], "cliper": 197, "op": 199, "spaner": 200, "runtimeblendbuild": 201, "runtimecolorfilterbuild": 202, "runtimeeffect": [203, 204, 205], "childtyp": 204, "uniformtyp": 205, "runtimeeffectbuild": 206, "runtimeeffectbuilderchild": 207, "runtimeeffectbuilderuniform": 208, "runtimeeffectchild": 209, "runtimeeffectchildptr": 210, "runtimeeffectresult": 211, "runtimeeffectuniform": 212, "runtimeshaderbuild": 213, "svgcanva": 214, "svgdom": 215, "samplingopt": 216, "shader": [217, 218, 220, 296], "shadermaskfilt": 219, "size": 221, "spanruntimeeffectchild": 222, "spanruntimeeffectchildptr": 223, "spanruntimeeffectuniform": 224, "stream": 225, "streamasset": 226, "streammemori": 227, "streamrewind": 228, "streamseek": 229, "string": 230, "strokerec": [231, 232, 233], "initstyl": 232, "surfac": [234, 235, 236, 237, 238, 239, 243, 244, 245, 246, 247, 248], "asyncreadresult": [235, 244], "backendhandleaccess": [236, 245], "backendsurfaceaccess": [237, 246], "contentchangemod": [238, 247], "rescalegamma": [239, 248], "surfacecharacter": 240, "surfaceprop": [241, 242], "tablecolorfilt": 249, "tablemaskfilt": 250, "textblob": [251, 252, 253], "run": 253, "textblobbuild": 254, "textencod": 255, "tilemod": 256, "trimpatheffect": [257, 258], "mode": 258, "typefac": [259, 260], "serializebehavior": 260, "unicod": 261, "v2": 262, "v3": 263, "v4": 264, "vectorruntimeeffectchild": 265, "vectorruntimeeffectchildptr": 266, "vertic": [267, 268], "vertexmod": 268, "vkformat": 269, "vkimagelayout": 270, "wstream": 271, "yuvainfo": [272, 273, 274, 275], "planeconfig": 273, "site": 274, "subsampl": 275, "yuvapixmapinfo": [276, 277, 278], "datatyp": 277, "supporteddatatyp": 278, "yuvapixmap": 279, "yuvcolorspac": 280, "gpubackendapi": 281, "textlayout_fontcollect": 282, "textlayout_paragraph": 283, "textlayout_paragraphbuild": 284, "textlayout_paragraphstyl": 285, "textlayout_strutstyl": 286, "textlayout_textalign": 287, "textlayout_textdecor": 288, "textlayout_textdecorationmod": 289, "textlayout_textdecorationstyl": 290, "textlayout_textstyl": 291, "textlayout_typefacefontprovid": 292, "creation": 293, "raster": 293, "gpu": 293, "opengl": 293, "svg": 293, "tutori": 294, "notebook": 294, "exampl": 294, "overview": [295, 296, 297], "detail": 295, "more": 295, "draw": 295, "interoper": 295, "api": 295, "glanc": 295, "xfermod": 296, "radial": 296, "gradient": 296, "two": 296, "conic": 296, "sweep": 296, "fractal": 296, "perlin": 296, "nois": 296, "turbul": 296, "compos": 296, "drop": 296, "shadow": 296, "dilat": 296, "erod": 296, "blur": 296, "mask": 296, "filter": 296, "color": 296, "2d": 296, "effect": 296, "line": 296, "1d": 296, "dash": 296, "discret": 296, "sum": 296}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Development": [[0, "development"]], "Python binding design": [[0, "python-binding-design"]], "Contributing": [[0, "contributing"]], "skia-python": [[1, "skia-python"]], "Documentation": [[1, "documentation"], [2, "documentation"]], "Indices and tables": [[1, "indices-and-tables"]], "Install": [[2, "install"]], "PyPI distribution": [[2, "pypi-distribution"]], "Build instruction": [[2, "build-instruction"]], "Linux": [[2, "linux"]], "macOS": [[2, "macos"]], "Windows": [[2, "windows"]], "Testing": [[2, "testing"]], "Reference": [[3, "reference"]], "skia": [[4, "module-skia"]], "Functions": [[4, "functions"]], "AlphaType": [[5, "alphatype"]], "Methods": [[5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [9, "methods"], [10, "methods"], [11, "methods"], [12, "methods"], [13, "methods"], [14, "methods"], [15, "methods"], [16, "methods"], [17, "methods"], [18, "methods"], [19, "methods"], [20, "methods"], [21, "methods"], [22, "methods"], [23, "methods"], [24, "methods"], [25, "methods"], [26, "methods"], [27, "methods"], [28, "methods"], [29, "methods"], [30, "methods"], [31, "methods"], [32, "methods"], [33, "methods"], [34, "methods"], [35, "methods"], [36, "methods"], [37, "methods"], [38, "methods"], [39, "methods"], [40, "methods"], [41, "methods"], [42, "methods"], [43, "methods"], [44, "methods"], [45, "methods"], [46, "methods"], [47, "methods"], [48, "methods"], [49, "methods"], [50, "methods"], [51, "methods"], [52, "methods"], [53, "methods"], [54, "methods"], [55, "methods"], [56, "methods"], [57, "methods"], [58, "methods"], [59, "methods"], [60, "methods"], [61, "methods"], [62, "methods"], [63, "methods"], [64, "methods"], [65, "methods"], [66, "methods"], [67, "methods"], [68, "methods"], [69, "methods"], [70, "methods"], [71, "methods"], [72, "methods"], [73, "methods"], [74, "methods"], [75, "methods"], [76, "methods"], [77, "methods"], [78, "methods"], [79, "methods"], [80, "methods"], [81, "methods"], [82, "methods"], [83, "methods"], [84, "methods"], [85, "methods"], [86, "methods"], [87, "methods"], [88, "methods"], [89, "methods"], [90, "methods"], [91, "methods"], [92, "methods"], [93, "methods"], [94, "methods"], [95, "methods"], [96, "methods"], [97, "methods"], [98, "methods"], [99, "methods"], [100, "methods"], [101, "methods"], [102, "methods"], [103, "methods"], [104, "methods"], [105, "methods"], [106, "methods"], [107, "methods"], [108, "methods"], [109, "methods"], [110, "methods"], [111, "methods"], [112, "methods"], [113, "methods"], [114, "methods"], [115, "methods"], [116, "methods"], [117, "methods"], [118, "methods"], [119, "methods"], [120, "methods"], [121, "methods"], [122, "methods"], [123, "methods"], [124, "methods"], [125, "methods"], [126, "methods"], [127, "methods"], [128, "methods"], [129, "methods"], [130, "methods"], [131, "methods"], [132, "methods"], [133, "methods"], [134, "methods"], [135, "methods"], [136, "methods"], [137, "methods"], [138, "methods"], [139, "methods"], [140, "methods"], [141, "methods"], [142, "methods"], [143, "methods"], [144, "methods"], [145, "methods"], [146, "methods"], [147, "methods"], [148, "methods"], [149, "methods"], [150, "methods"], [151, "methods"], [152, "methods"], [153, "methods"], [154, "methods"], [155, "methods"], [156, "methods"], [157, "methods"], [158, "methods"], [159, "methods"], [160, "methods"], [161, "methods"], [162, "methods"], [163, "methods"], [164, "methods"], [165, "methods"], [166, "methods"], [167, "methods"], [168, "methods"], [169, "methods"], [170, "methods"], [171, "methods"], [172, "methods"], [173, "methods"], [174, "methods"], [175, "methods"], [176, "methods"], [177, "methods"], [178, "methods"], [179, "methods"], [180, "methods"], [181, "methods"], [182, "methods"], [183, "methods"], [184, "methods"], [185, "methods"], [186, "methods"], [187, "methods"], [188, "methods"], [189, "methods"], [190, "methods"], [191, "methods"], [192, "methods"], [193, "methods"], [194, "methods"], [195, "methods"], [196, "methods"], [197, "methods"], [198, "methods"], [199, "methods"], [200, "methods"], [201, "methods"], [202, "methods"], [203, "methods"], [204, "methods"], [205, "methods"], [206, "methods"], [207, "methods"], [208, "methods"], [209, "methods"], [210, "methods"], [211, "methods"], [212, "methods"], [213, "methods"], [214, "methods"], [215, "methods"], [216, "methods"], [217, "methods"], [218, "methods"], [219, "methods"], [220, "methods"], [221, "methods"], [222, "methods"], [223, "methods"], [224, "methods"], [225, "methods"], [226, "methods"], [227, "methods"], [228, "methods"], [229, "methods"], [230, "methods"], [231, "methods"], [232, "methods"], [233, "methods"], [234, "methods"], [235, "methods"], [236, "methods"], [237, "methods"], [238, "methods"], [239, "methods"], [240, "methods"], [241, "methods"], [242, "methods"], [243, "methods"], [244, "methods"], [245, "methods"], [246, "methods"], [247, "methods"], [248, "methods"], [249, "methods"], [250, "methods"], [251, "methods"], [252, "methods"], [253, "methods"], [254, "methods"], [255, "methods"], [256, "methods"], [257, "methods"], [258, "methods"], [259, "methods"], [260, "methods"], [261, "methods"], [262, "methods"], [263, "methods"], [264, "methods"], [265, "methods"], [266, "methods"], [267, "methods"], [268, "methods"], [269, "methods"], [270, "methods"], [271, "methods"], [272, "methods"], [273, "methods"], [274, "methods"], [275, "methods"], [276, "methods"], [277, "methods"], [278, "methods"], [279, "methods"], [280, "methods"], [281, "methods"], [282, "methods"], [283, "methods"], [284, "methods"], [285, "methods"], [286, "methods"], [287, "methods"], [288, "methods"], [289, "methods"], [290, "methods"], [291, "methods"], [292, "methods"]], "Attributes": [[5, "attributes"], [6, "attributes"], [10, "attributes"], [11, "attributes"], [12, "attributes"], [13, "attributes"], [14, "attributes"], [16, "attributes"], [17, "attributes"], [18, "attributes"], [19, "attributes"], [20, "attributes"], [21, "attributes"], [22, "attributes"], [23, "attributes"], [24, "attributes"], [25, "attributes"], [26, "attributes"], [27, "attributes"], [28, "attributes"], [29, "attributes"], [30, "attributes"], [31, "attributes"], [32, "attributes"], [33, "attributes"], [34, "attributes"], [35, "attributes"], [36, "attributes"], [37, "attributes"], [38, "attributes"], [39, "attributes"], [43, "attributes"], [44, "attributes"], [46, "attributes"], [47, "attributes"], [49, "attributes"], [54, "attributes"], [55, "attributes"], [57, "attributes"], [58, "attributes"], [61, "attributes"], [62, "attributes"], [63, "attributes"], [64, "attributes"], [65, "attributes"], [67, "attributes"], [68, "attributes"], [70, "attributes"], [71, "attributes"], [72, "attributes"], [76, "attributes"], [77, "attributes"], [78, "attributes"], [79, "attributes"], [80, "attributes"], [82, "attributes"], [88, "attributes"], [94, "attributes"], [95, "attributes"], [96, "attributes"], [97, "attributes"], [99, "attributes"], [101, "attributes"], [105, "attributes"], [106, "attributes"], [108, "attributes"], [109, "attributes"], [110, "attributes"], [111, "attributes"], [112, "attributes"], [116, "attributes"], [118, "attributes"], [119, "attributes"], [120, "attributes"], [121, "attributes"], [123, "attributes"], [124, "attributes"], [125, "attributes"], [126, "attributes"], [127, "attributes"], [128, "attributes"], [129, "attributes"], [130, "attributes"], [131, "attributes"], [133, "attributes"], [134, "attributes"], [140, "attributes"], [141, "attributes"], [142, "attributes"], [143, "attributes"], [144, "attributes"], [147, "attributes"], [150, "attributes"], [153, "attributes"], [154, "attributes"], [155, "attributes"], [156, "attributes"], [157, "attributes"], [158, "attributes"], [159, "attributes"], [160, "attributes"], [161, "attributes"], [164, "attributes"], [165, "attributes"], [166, "attributes"], [167, "attributes"], [169, "attributes"], [170, "attributes"], [171, "attributes"], [172, "attributes"], [173, "attributes"], [174, "attributes"], [175, "attributes"], [176, "attributes"], [177, "attributes"], [178, "attributes"], [179, "attributes"], [183, "attributes"], [186, "attributes"], [187, "attributes"], [188, "attributes"], [189, "attributes"], [190, "attributes"], [191, "attributes"], [193, "attributes"], [196, "attributes"], [199, "attributes"], [203, "attributes"], [204, "attributes"], [205, "attributes"], [207, "attributes"], [208, "attributes"], [209, "attributes"], [210, "attributes"], [211, "attributes"], [212, "attributes"], [214, "attributes"], [216, "attributes"], [217, "attributes"], [218, "attributes"], [221, "attributes"], [231, "attributes"], [232, "attributes"], [233, "attributes"], [234, "attributes"], [236, "attributes"], [237, "attributes"], [238, "attributes"], [239, "attributes"], [241, "attributes"], [242, "attributes"], [243, "attributes"], [245, "attributes"], [246, "attributes"], [247, "attributes"], [248, "attributes"], [253, "attributes"], [255, "attributes"], [256, "attributes"], [257, "attributes"], [258, "attributes"], [259, "attributes"], [260, "attributes"], [267, "attributes"], [268, "attributes"], [269, "attributes"], [270, "attributes"], [272, "attributes"], [273, "attributes"], [274, "attributes"], [275, "attributes"], [276, "attributes"], [277, "attributes"], [280, "attributes"], [281, "attributes"], [283, "attributes"], [287, "attributes"], [288, "attributes"], [289, "attributes"], [290, "attributes"]], "ApplyPerspectiveClip": [[6, "applyperspectiveclip"]], "AutoCanvasRestore": [[7, "autocanvasrestore"]], "BBHFactory": [[8, "bbhfactory"]], "BBoxHierarchy": [[9, "bboxhierarchy"]], "BBoxHierarchy.Metadata": [[10, "bboxhierarchy-metadata"]], "Bitmap": [[11, "bitmap"]], "Bitmap.AllocFlags": [[12, "bitmap-allocflags"]], "BlendMode": [[13, "blendmode"]], "BlendModeCoeff": [[14, "blendmodecoeff"]], "BlurMaskFilter": [[15, "blurmaskfilter"]], "BlurStyle": [[16, "blurstyle"]], "Budgeted": [[17, "budgeted"]], "Canvas": [[18, "canvas"]], "Canvas.Lattice": [[19, "canvas-lattice"]], "Canvas.Lattice.RectType": [[20, "canvas-lattice-recttype"]], "Canvas.PointMode": [[21, "canvas-pointmode"]], "Canvas.QuadAAFlags": [[22, "canvas-quadaaflags"]], "Canvas.SaveLayerFlags": [[23, "canvas-savelayerflags"]], "Canvas.SaveLayerRec": [[24, "canvas-savelayerrec"]], "Canvas.SrcRectConstraint": [[25, "canvas-srcrectconstraint"]], "ClipOp": [[26, "clipop"]], "Codec": [[27, "codec"]], "Codec.DisposalMethod": [[28, "codec-disposalmethod"]], "Codec.FrameInfo": [[29, "codec-frameinfo"]], "Codec.Options": [[30, "codec-options"]], "Codec.Result": [[31, "codec-result"]], "Codec.ScanlineOrder": [[32, "codec-scanlineorder"]], "Codec.SelectionPolicy": [[33, "codec-selectionpolicy"]], "Codec.ZeroInitialized": [[34, "codec-zeroinitialized"]], "Color4f": [[35, "color4f"]], "ColorChannel": [[36, "colorchannel"]], "ColorChannelFlag": [[37, "colorchannelflag"]], "ColorFilter": [[38, "colorfilter"], [296, "colorfilter"]], "ColorFilter.Type": [[39, "colorfilter-type"]], "ColorFilters": [[40, "colorfilters"]], "ColorInfo": [[41, "colorinfo"]], "ColorMatrix": [[42, "colormatrix"]], "ColorMatrixFilter": [[43, "colormatrixfilter"]], "ColorMatrixFilter.Type": [[44, "colormatrixfilter-type"]], "ColorSpace": [[45, "colorspace"]], "ColorType": [[46, "colortype"]], "ConvergeMode": [[47, "convergemode"]], "CornerPathEffect": [[48, "cornerpatheffect"]], "CubicResampler": [[49, "cubicresampler"]], "DashPathEffect": [[50, "dashpatheffect"]], "Data": [[51, "data"]], "DiscretePathEffect": [[52, "discretepatheffect"]], "Document": [[53, "document"]], "Drawable": [[54, "drawable"]], "Drawable.Type": [[55, "drawable-type"]], "DynamicMemoryWStream": [[56, "dynamicmemorywstream"]], "EncodedImageFormat": [[57, "encodedimageformat"]], "EncodedOrigin": [[58, "encodedorigin"]], "FILEStream": [[59, "filestream"]], "FILEWStream": [[60, "filewstream"]], "FilterMode": [[61, "filtermode"]], "Flattanable": [[62, "flattanable"]], "Flattanable.Type": [[63, "flattanable-type"]], "Font": [[64, "font"]], "Font.Edging": [[65, "font-edging"]], "FontArguments": [[66, "fontarguments"]], "FontArguments.VariationPosition": [[67, "fontarguments-variationposition"]], "FontArguments.VariationPosition.Coordinate": [[68, "fontarguments-variationposition-coordinate"]], "FontArguments.VariationPosition.Coordinates": [[69, "fontarguments-variationposition-coordinates"]], "FontHinting": [[70, "fonthinting"]], "FontMetrics": [[71, "fontmetrics"]], "FontMetrics.FontMetricsFlags": [[72, "fontmetrics-fontmetricsflags"]], "FontMgr": [[73, "fontmgr"]], "FontParameters": [[74, "fontparameters"]], "FontParameters.Variation": [[75, "fontparameters-variation"]], "FontParameters.Variation.Axis": [[76, "fontparameters-variation-axis"]], "FontStyle": [[77, "fontstyle"]], "FontStyle.Slant": [[78, "fontstyle-slant"]], "FontStyle.Weight": [[79, "fontstyle-weight"]], "FontStyle.Width": [[80, "fontstyle-width"]], "FontStyleSet": [[81, "fontstyleset"]], "GrBackendApi": [[82, "grbackendapi"]], "GrBackendFormat": [[83, "grbackendformat"]], "GrBackendRenderTarget": [[84, "grbackendrendertarget"]], "GrBackendRenderTargets": [[85, "grbackendrendertargets"]], "GrBackendSemaphore": [[86, "grbackendsemaphore"]], "GrBackendTexture": [[87, "grbackendtexture"]], "GrColorType": [[88, "grcolortype"]], "GrContext": [[89, "grcontext"]], "GrContextOptions": [[90, "grcontextoptions"]], "GrContext_Base": [[91, "grcontext-base"]], "GrDirectContext": [[92, "grdirectcontext"]], "GrDirectContexts": [[93, "grdirectcontexts"]], "GrFlushInfo": [[94, "grflushinfo"]], "GrGLBackendState": [[95, "grglbackendstate"]], "GrGLFormat": [[96, "grglformat"]], "GrGLFramebufferInfo": [[97, "grglframebufferinfo"]], "GrGLInterface": [[98, "grglinterface"]], "GrGLTextureInfo": [[99, "grgltextureinfo"]], "GrImageContext": [[100, "grimagecontext"]], "GrMipmapped": [[101, "grmipmapped"]], "GrMockOptions": [[102, "grmockoptions"]], "GrMockRenderTargetInfo": [[103, "grmockrendertargetinfo"]], "GrMockTextureInfo": [[104, "grmocktextureinfo"]], "GrProtected": [[105, "grprotected"]], "GrPurgeResourceOptions": [[106, "grpurgeresourceoptions"]], "GrRecordingContext": [[107, "grrecordingcontext"]], "GrRenderable": [[108, "grrenderable"]], "GrSemaphoresSubmitted": [[109, "grsemaphoressubmitted"]], "GrSurfaceOrigin": [[110, "grsurfaceorigin"]], "GrSyncCpu": [[111, "grsynccpu"]], "GrTextureType": [[112, "grtexturetype"]], "GrVkAlloc": [[113, "grvkalloc"]], "GrVkBackendContext": [[114, "grvkbackendcontext"]], "GrVkDrawableInfo": [[115, "grvkdrawableinfo"]], "GrVkImageInfo": [[116, "grvkimageinfo"]], "GrVkYcbcrConversionInfo": [[117, "grvkycbcrconversioninfo"]], "GradientShader": [[118, "gradientshader"]], "GradientShader.Flags": [[119, "gradientshader-flags"]], "HighContrastConfig": [[120, "highcontrastconfig"]], "HighContrastConfig.InvertStyle": [[121, "highcontrastconfig-invertstyle"]], "HighContrastFilter": [[122, "highcontrastfilter"]], "IPoint": [[123, "ipoint"]], "IRect": [[124, "irect"]], "ISize": [[125, "isize"]], "Image": [[126, "image"]], "Image.BitDepth": [[127, "image-bitdepth"]], "Image.CachingHint": [[128, "image-cachinghint"]], "Image.CompressionType": [[129, "image-compressiontype"]], "Image.LegacyBitmapMode": [[130, "image-legacybitmapmode"]], "ImageFilter": [[131, "imagefilter"], [296, "imagefilter"]], "ImageFilter.CropRect": [[132, "imagefilter-croprect"]], "ImageFilter.MapDirection": [[133, "imagefilter-mapdirection"]], "ImageFilter.Type": [[134, "imagefilter-type"]], "ImageFilters": [[135, "imagefilters"]], "ImageInfo": [[136, "imageinfo"]], "Line2DPathEffect": [[137, "line2dpatheffect"]], "LumaColorFilter": [[138, "lumacolorfilter"]], "M44": [[139, "m44"]], "MaskFilter": [[140, "maskfilter"], [296, "maskfilter"]], "MaskFilter.Type": [[141, "maskfilter-type"]], "Matrix": [[142, "matrix"]], "Matrix.ScaleToFit": [[143, "matrix-scaletofit"]], "Matrix.TypeMask": [[144, "matrix-typemask"]], "MemoryStream": [[145, "memorystream"]], "MipmapBuilder": [[146, "mipmapbuilder"]], "MipmapMode": [[147, "mipmapmode"]], "NullWStream": [[148, "nullwstream"]], "OpBuilder": [[149, "opbuilder"]], "OverdrawColorFilter": [[150, "overdrawcolorfilter"]], "PDF": [[151, "pdf"], [293, "pdf"]], "PDF.AttributeList": [[152, "pdf-attributelist"]], "PDF.Metadata": [[153, "pdf-metadata"]], "PDF.StructureElementNode": [[154, "pdf-structureelementnode"]], "Paint": [[155, "paint"]], "Paint.Cap": [[156, "paint-cap"]], "Paint.Join": [[157, "paint-join"]], "Paint.Style": [[158, "paint-style"]], "Path": [[159, "path"]], "Path.AddPathMode": [[160, "path-addpathmode"]], "Path.ArcSize": [[161, "path-arcsize"]], "Path.Iter": [[162, "path-iter"]], "Path.RawIter": [[163, "path-rawiter"]], "Path.SegmentMask": [[164, "path-segmentmask"]], "Path.Verb": [[165, "path-verb"]], "Path1DPathEffect": [[166, "path1dpatheffect"]], "Path1DPathEffect.Style": [[167, "path1dpatheffect-style"]], "Path2DPathEffect": [[168, "path2dpatheffect"]], "PathBuilder": [[169, "pathbuilder"]], "PathBuilder.ArcSize": [[170, "pathbuilder-arcsize"]], "PathDirection": [[171, "pathdirection"]], "PathEffect": [[172, "patheffect"], [296, "patheffect"]], "PathEffect.Type": [[173, "patheffect-type"]], "PathFillType": [[174, "pathfilltype"]], "PathMeasure": [[175, "pathmeasure"]], "PathMeasure.GetPosAndTan": [[176, "pathmeasure-getposandtan"]], "PathOp": [[177, "pathop"]], "PathSegmentMask": [[178, "pathsegmentmask"]], "PathVerb": [[179, "pathverb"]], "PerlinNoiseShader": [[180, "perlinnoiseshader"]], "Picture": [[181, "picture"], [293, "picture"]], "PictureRecorder": [[182, "picturerecorder"]], "PixelGeometry": [[183, "pixelgeometry"]], "PixelRef": [[184, "pixelref"]], "Pixmap": [[185, "pixmap"]], "Point": [[186, "point"]], "Point3": [[187, "point3"]], "RRect": [[188, "rrect"]], "RRect.Corner": [[189, "rrect-corner"]], "RRect.Type": [[190, "rrect-type"]], "RSXform": [[191, "rsxform"]], "RTreeFactory": [[192, "rtreefactory"]], "Rect": [[193, "rect"]], "RefCnt": [[194, "refcnt"]], "RefCntBase": [[195, "refcntbase"]], "Region": [[196, "region"]], "Region.Cliperator": [[197, "region-cliperator"]], "Region.Iterator": [[198, "region-iterator"]], "Region.Op": [[199, "region-op"]], "Region.Spanerator": [[200, "region-spanerator"]], "RuntimeBlendBuilder": [[201, "runtimeblendbuilder"]], "RuntimeColorFilterBuilder": [[202, "runtimecolorfilterbuilder"]], "RuntimeEffect": [[203, "runtimeeffect"]], "RuntimeEffect.ChildType": [[204, "runtimeeffect-childtype"]], "RuntimeEffect.UniformType": [[205, "runtimeeffect-uniformtype"]], "RuntimeEffectBuilder": [[206, "runtimeeffectbuilder"]], "RuntimeEffectBuilderChild": [[207, "runtimeeffectbuilderchild"]], "RuntimeEffectBuilderUniform": [[208, "runtimeeffectbuilderuniform"]], "RuntimeEffectChild": [[209, "runtimeeffectchild"]], "RuntimeEffectChildPtr": [[210, "runtimeeffectchildptr"]], "RuntimeEffectResult": [[211, "runtimeeffectresult"]], "RuntimeEffectUniform": [[212, "runtimeeffectuniform"]], "RuntimeShaderBuilder": [[213, "runtimeshaderbuilder"]], "SVGCanvas": [[214, "svgcanvas"]], "SVGDOM": [[215, "svgdom"]], "SamplingOptions": [[216, "samplingoptions"]], "Shader": [[217, "shader"], [296, "shader"]], "Shader.Type": [[218, "shader-type"]], "ShaderMaskFilter": [[219, "shadermaskfilter"]], "Shaders": [[220, "shaders"]], "Size": [[221, "size"]], "SpanRuntimeEffectChild": [[222, "spanruntimeeffectchild"]], "SpanRuntimeEffectChildPtr": [[223, "spanruntimeeffectchildptr"]], "SpanRuntimeEffectUniform": [[224, "spanruntimeeffectuniform"]], "Stream": [[225, "stream"]], "StreamAsset": [[226, "streamasset"]], "StreamMemory": [[227, "streammemory"]], "StreamRewindable": [[228, "streamrewindable"]], "StreamSeekable": [[229, "streamseekable"]], "String": [[230, "string"]], "StrokeRec": [[231, "strokerec"]], "StrokeRec.InitStyle": [[232, "strokerec-initstyle"]], "StrokeRec.Style": [[233, "strokerec-style"]], "Surface": [[234, "surface"]], "Surface.AsyncReadResult": [[235, "surface-asyncreadresult"]], "Surface.BackendHandleAccess": [[236, "surface-backendhandleaccess"]], "Surface.BackendSurfaceAccess": [[237, "surface-backendsurfaceaccess"]], "Surface.ContentChangeMode": [[238, "surface-contentchangemode"]], "Surface.RescaleGamma": [[239, "surface-rescalegamma"]], "SurfaceCharacterization": [[240, "surfacecharacterization"]], "SurfaceProps": [[241, "surfaceprops"]], "SurfaceProps.Flags": [[242, "surfaceprops-flags"]], "Surfaces": [[243, "surfaces"]], "Surfaces.AsyncReadResult": [[244, "surfaces-asyncreadresult"]], "Surfaces.BackendHandleAccess": [[245, "surfaces-backendhandleaccess"]], "Surfaces.BackendSurfaceAccess": [[246, "surfaces-backendsurfaceaccess"]], "Surfaces.ContentChangeMode": [[247, "surfaces-contentchangemode"]], "Surfaces.RescaleGamma": [[248, "surfaces-rescalegamma"]], "TableColorFilter": [[249, "tablecolorfilter"]], "TableMaskFilter": [[250, "tablemaskfilter"]], "TextBlob": [[251, "textblob"]], "TextBlob.Iter": [[252, "textblob-iter"]], "TextBlob.Iter.Run": [[253, "textblob-iter-run"]], "TextBlobBuilder": [[254, "textblobbuilder"]], "TextEncoding": [[255, "textencoding"]], "TileMode": [[256, "tilemode"]], "TrimPathEffect": [[257, "trimpatheffect"]], "TrimPathEffect.Mode": [[258, "trimpatheffect-mode"]], "Typeface": [[259, "typeface"]], "Typeface.SerializeBehavior": [[260, "typeface-serializebehavior"]], "Unicode": [[261, "unicode"]], "V2": [[262, "v2"]], "V3": [[263, "v3"]], "V4": [[264, "v4"]], "VectorRuntimeEffectChild": [[265, "vectorruntimeeffectchild"]], "VectorRuntimeEffectChildPtr": [[266, "vectorruntimeeffectchildptr"]], "Vertices": [[267, "vertices"]], "Vertices.VertexMode": [[268, "vertices-vertexmode"]], "VkFormat": [[269, "vkformat"]], "VkImageLayout": [[270, "vkimagelayout"]], "WStream": [[271, "wstream"]], "YUVAInfo": [[272, "yuvainfo"]], "YUVAInfo.PlaneConfig": [[273, "yuvainfo-planeconfig"]], "YUVAInfo.Siting": [[274, "yuvainfo-siting"]], "YUVAInfo.Subsampling": [[275, "yuvainfo-subsampling"]], "YUVAPixmapInfo": [[276, "yuvapixmapinfo"]], "YUVAPixmapInfo.DataType": [[277, "yuvapixmapinfo-datatype"]], "YUVAPixmapInfo.SupportedDataTypes": [[278, "yuvapixmapinfo-supporteddatatypes"]], "YUVAPixmaps": [[279, "yuvapixmaps"]], "YUVColorSpace": [[280, "yuvcolorspace"]], "gpuBackendApi": [[281, "gpubackendapi"]], "textlayout_FontCollection": [[282, "textlayout-fontcollection"]], "textlayout_Paragraph": [[283, "textlayout-paragraph"]], "textlayout_ParagraphBuilder": [[284, "textlayout-paragraphbuilder"]], "textlayout_ParagraphStyle": [[285, "textlayout-paragraphstyle"]], "textlayout_StrutStyle": [[286, "textlayout-strutstyle"]], "textlayout_TextAlign": [[287, "textlayout-textalign"]], "textlayout_TextDecoration": [[288, "textlayout-textdecoration"]], "textlayout_TextDecorationMode": [[289, "textlayout-textdecorationmode"]], "textlayout_TextDecorationStyle": [[290, "textlayout-textdecorationstyle"]], "textlayout_TextStyle": [[291, "textlayout-textstyle"]], "textlayout_TypefaceFontProvider": [[292, "textlayout-typefacefontprovider"]], "Canvas Creation": [[293, "canvas-creation"]], "Raster": [[293, "raster"]], "GPU": [[293, "gpu"]], "OpenGL window": [[293, "opengl-window"]], "SVG": [[293, "svg"]], "Tutorial": [[294, "tutorial"]], "Notebook examples": [[294, "notebook-examples"]], "Overview": [[295, "overview"]], "Canvas details": [[295, "canvas-details"]], "More drawings": [[295, "more-drawings"]], "Python interoperability": [[295, "python-interoperability"]], "APIs at a glance": [[295, "apis-at-a-glance"]], "Paint Overview": [[296, "paint-overview"]], "Xfermode": [[296, "xfermode"]], "Bitmap Shader": [[296, "bitmap-shader"]], "Radial Gradient Shader": [[296, "radial-gradient-shader"]], "Two-Point Conical Gradient Shader": [[296, "two-point-conical-gradient-shader"]], "Sweep Gradient Shader": [[296, "sweep-gradient-shader"]], "Fractal Perlin Noise Shader": [[296, "fractal-perlin-noise-shader"]], "Turbulence Perlin Noise Shader": [[296, "turbulence-perlin-noise-shader"]], "Compose Shader": [[296, "compose-shader"]], "Drop Shadow": [[296, "drop-shadow"]], "Dilate": [[296, "dilate"]], "Erode": [[296, "erode"]], "Blur Mask Filter": [[296, "blur-mask-filter"]], "Color Matrix Color Filter": [[296, "color-matrix-color-filter"]], "Color Table Color Filter": [[296, "color-table-color-filter"]], "Path 2D Path Effect": [[296, "path-2d-path-effect"]], "Line 2D Path Effect": [[296, "line-2d-path-effect"]], "Path 1D Path Effect": [[296, "path-1d-path-effect"]], "Corner Path Effect": [[296, "corner-path-effect"]], "Dash Path Effect": [[296, "dash-path-effect"]], "Discrete Path Effect": [[296, "discrete-path-effect"]], "Compose Path Effect": [[296, "compose-path-effect"]], "Sum Path Effect": [[296, "sum-path-effect"]], "Path Overview": [[297, "path-overview"]]}, "indexentries": {"alphatypeisopaque() (in module skia)": [[4, "skia.AlphaTypeIsOpaque"]], "aswinding() (in module skia)": [[4, "skia.AsWinding"]], "blendmode_ascoeff() (in module skia)": [[4, "skia.BlendMode_AsCoeff"]], "blendmode_name() (in module skia)": [[4, "skia.BlendMode_Name"]], "color() (in module skia)": [[4, "skia.Color"]], "colorgeta() (in module skia)": [[4, "skia.ColorGetA"]], "colorgetb() (in module skia)": [[4, "skia.ColorGetB"]], "colorgetg() (in module skia)": [[4, "skia.ColorGetG"]], "colorgetr() (in module skia)": [[4, "skia.ColorGetR"]], "colorseta() (in module skia)": [[4, "skia.ColorSetA"]], "colorsetargb() (in module skia)": [[4, "skia.ColorSetARGB"]], "colorsetrgb() (in module skia)": [[4, "skia.ColorSetRGB"]], "colortohsv() (in module skia)": [[4, "skia.ColorToHSV"]], "colortypebytesperpixel() (in module skia)": [[4, "skia.ColorTypeBytesPerPixel"]], "colortypeisalwaysopaque() (in module skia)": [[4, "skia.ColorTypeIsAlwaysOpaque"]], "colortypevalidatealphatype() (in module skia)": [[4, "skia.ColorTypeValidateAlphaType"]], "computeisopaque() (in module skia)": [[4, "skia.ComputeIsOpaque"]], "encodedorigintomatrix() (in module skia)": [[4, "skia.EncodedOriginToMatrix"]], "hsvtocolor() (in module skia)": [[4, "skia.HSVToColor"]], "makenullcanvas() (in module skia)": [[4, "skia.MakeNullCanvas"]], "op() (in module skia)": [[4, "skia.Op"]], "pathfilltype_converttononinverse() (in module skia)": [[4, "skia.PathFillType_ConvertToNonInverse"]], "pathfilltype_isevenodd() (in module skia)": [[4, "skia.PathFillType_IsEvenOdd"]], "pathfilltype_isinverse() (in module skia)": [[4, "skia.PathFillType_IsInverse"]], "premultiplyargb() (in module skia)": [[4, "skia.PreMultiplyARGB"]], "premultiplycolor() (in module skia)": [[4, "skia.PreMultiplyColor"]], "rgbtohsv() (in module skia)": [[4, "skia.RGBToHSV"]], "simplify() (in module skia)": [[4, "skia.Simplify"]], "tightbounds() (in module skia)": [[4, "skia.TightBounds"]], "module": [[4, "module-skia"]], "skia": [[4, "module-skia"]], "alphatype (class in skia)": [[5, "skia.AlphaType"]], "__init__() (alphatype method)": [[5, "skia.AlphaType.__init__"]], "klastenum_alphatype (alphatype attribute)": [[5, "skia.AlphaType.kLastEnum_AlphaType"]], "kopaque_alphatype (alphatype attribute)": [[5, "skia.AlphaType.kOpaque_AlphaType"]], "kpremul_alphatype (alphatype attribute)": [[5, "skia.AlphaType.kPremul_AlphaType"]], "kunknown_alphatype (alphatype attribute)": [[5, "skia.AlphaType.kUnknown_AlphaType"]], "kunpremul_alphatype (alphatype attribute)": [[5, "skia.AlphaType.kUnpremul_AlphaType"]], "name (alphatype attribute)": [[5, "skia.AlphaType.name"]], "value (alphatype attribute)": [[5, "skia.AlphaType.value"]], "applyperspectiveclip (class in skia)": [[6, "skia.ApplyPerspectiveClip"]], "__init__() (applyperspectiveclip method)": [[6, "skia.ApplyPerspectiveClip.__init__"]], "kno (applyperspectiveclip attribute)": [[6, "skia.ApplyPerspectiveClip.kNo"]], "kyes (applyperspectiveclip attribute)": [[6, "skia.ApplyPerspectiveClip.kYes"]], "name (applyperspectiveclip attribute)": [[6, "skia.ApplyPerspectiveClip.name"]], "value (applyperspectiveclip attribute)": [[6, "skia.ApplyPerspectiveClip.value"]], "autocanvasrestore (class in skia)": [[7, "skia.AutoCanvasRestore"]], "__init__() (autocanvasrestore method)": [[7, "skia.AutoCanvasRestore.__init__"]], "restore() (autocanvasrestore method)": [[7, "skia.AutoCanvasRestore.restore"]], "bbhfactory (class in skia)": [[8, "skia.BBHFactory"]], "__init__() (bbhfactory method)": [[8, "skia.BBHFactory.__init__"]], "bboxhierarchy (class in skia)": [[9, "skia.BBoxHierarchy"]], "__init__() (bboxhierarchy method)": [[9, "skia.BBoxHierarchy.__init__"]], "bytesused() (bboxhierarchy method)": [[9, "skia.BBoxHierarchy.bytesUsed"]], "insert() (bboxhierarchy method)": [[9, "skia.BBoxHierarchy.insert"]], "ref() (bboxhierarchy method)": [[9, "skia.BBoxHierarchy.ref"]], "search() (bboxhierarchy method)": [[9, "skia.BBoxHierarchy.search"]], "unique() (bboxhierarchy method)": [[9, "skia.BBoxHierarchy.unique"]], "unref() (bboxhierarchy method)": [[9, "skia.BBoxHierarchy.unref"]], "metadata (class in skia.bboxhierarchy)": [[10, "skia.BBoxHierarchy.Metadata"]], "__init__() (metadata method)": [[10, "skia.BBoxHierarchy.Metadata.__init__"], [153, "skia.PDF.Metadata.__init__"]], "isdraw (metadata attribute)": [[10, "skia.BBoxHierarchy.Metadata.isDraw"]], "bitmap (class in skia)": [[11, "skia.Bitmap"]], "__init__() (bitmap method)": [[11, "skia.Bitmap.__init__"]], "allocn32pixels() (bitmap method)": [[11, "skia.Bitmap.allocN32Pixels"]], "allocpixels() (bitmap method)": [[11, "skia.Bitmap.allocPixels"]], "allocpixelsflags() (bitmap method)": [[11, "skia.Bitmap.allocPixelsFlags"]], "alphatype() (bitmap method)": [[11, "skia.Bitmap.alphaType"]], "bounds() (bitmap method)": [[11, "skia.Bitmap.bounds"]], "bytesperpixel() (bitmap method)": [[11, "skia.Bitmap.bytesPerPixel"]], "colorspace() (bitmap method)": [[11, "skia.Bitmap.colorSpace"]], "colortype() (bitmap method)": [[11, "skia.Bitmap.colorType"]], "computebytesize() (bitmap method)": [[11, "skia.Bitmap.computeByteSize"]], "dimensions() (bitmap method)": [[11, "skia.Bitmap.dimensions"]], "drawsnothing() (bitmap method)": [[11, "skia.Bitmap.drawsNothing"]], "empty() (bitmap method)": [[11, "skia.Bitmap.empty"]], "erase() (bitmap method)": [[11, "skia.Bitmap.erase"]], "eraseargb() (bitmap method)": [[11, "skia.Bitmap.eraseARGB"]], "extractalpha() (bitmap method)": [[11, "skia.Bitmap.extractAlpha"]], "extractsubset() (bitmap method)": [[11, "skia.Bitmap.extractSubset"]], "getalphaf() (bitmap method)": [[11, "skia.Bitmap.getAlphaf"]], "getbounds() (bitmap method)": [[11, "skia.Bitmap.getBounds"]], "getcolor() (bitmap method)": [[11, "skia.Bitmap.getColor"]], "getgenerationid() (bitmap method)": [[11, "skia.Bitmap.getGenerationID"]], "getpixels() (bitmap method)": [[11, "skia.Bitmap.getPixels"]], "getsubset() (bitmap method)": [[11, "skia.Bitmap.getSubset"]], "height() (bitmap method)": [[11, "skia.Bitmap.height"]], "info() (bitmap method)": [[11, "skia.Bitmap.info"]], "installpixels() (bitmap method)": [[11, "skia.Bitmap.installPixels"]], "isimmutable() (bitmap method)": [[11, "skia.Bitmap.isImmutable"]], "isnull() (bitmap method)": [[11, "skia.Bitmap.isNull"]], "isopaque() (bitmap method)": [[11, "skia.Bitmap.isOpaque"]], "kzeropixels_allocflag (bitmap attribute)": [[11, "skia.Bitmap.kZeroPixels_AllocFlag"]], "makeshader() (bitmap method)": [[11, "skia.Bitmap.makeShader"]], "notifypixelschanged() (bitmap method)": [[11, "skia.Bitmap.notifyPixelsChanged"]], "peekpixels() (bitmap method)": [[11, "skia.Bitmap.peekPixels"]], "pixmap() (bitmap method)": [[11, "skia.Bitmap.pixmap"]], "readpixels() (bitmap method)": [[11, "skia.Bitmap.readPixels"]], "readytodraw() (bitmap method)": [[11, "skia.Bitmap.readyToDraw"]], "refcolorspace() (bitmap method)": [[11, "skia.Bitmap.refColorSpace"]], "reset() (bitmap method)": [[11, "skia.Bitmap.reset"]], "rowbytes() (bitmap method)": [[11, "skia.Bitmap.rowBytes"]], "rowbytesaspixels() (bitmap method)": [[11, "skia.Bitmap.rowBytesAsPixels"]], "setalphatype() (bitmap method)": [[11, "skia.Bitmap.setAlphaType"]], "setimmutable() (bitmap method)": [[11, "skia.Bitmap.setImmutable"]], "setinfo() (bitmap method)": [[11, "skia.Bitmap.setInfo"]], "setpixels() (bitmap method)": [[11, "skia.Bitmap.setPixels"]], "shiftperpixel() (bitmap method)": [[11, "skia.Bitmap.shiftPerPixel"]], "swap() (bitmap method)": [[11, "skia.Bitmap.swap"]], "tobytes() (bitmap method)": [[11, "skia.Bitmap.tobytes"]], "tryallocn32pixels() (bitmap method)": [[11, "skia.Bitmap.tryAllocN32Pixels"]], "tryallocpixels() (bitmap method)": [[11, "skia.Bitmap.tryAllocPixels"]], "tryallocpixelsflags() (bitmap method)": [[11, "skia.Bitmap.tryAllocPixelsFlags"]], "width() (bitmap method)": [[11, "skia.Bitmap.width"]], "writepixels() (bitmap method)": [[11, "skia.Bitmap.writePixels"]], "allocflags (class in skia.bitmap)": [[12, "skia.Bitmap.AllocFlags"]], "__init__() (allocflags method)": [[12, "skia.Bitmap.AllocFlags.__init__"]], "kzeropixels_allocflag (allocflags attribute)": [[12, "skia.Bitmap.AllocFlags.kZeroPixels_AllocFlag"]], "name (allocflags attribute)": [[12, "skia.Bitmap.AllocFlags.name"]], "value (allocflags attribute)": [[12, "skia.Bitmap.AllocFlags.value"]], "blendmode (class in skia)": [[13, "skia.BlendMode"]], "__init__() (blendmode method)": [[13, "skia.BlendMode.__init__"]], "kclear (blendmode attribute)": [[13, "skia.BlendMode.kClear"]], "kcolor (blendmode attribute)": [[13, "skia.BlendMode.kColor"]], "kcolorburn (blendmode attribute)": [[13, "skia.BlendMode.kColorBurn"]], "kcolordodge (blendmode attribute)": [[13, "skia.BlendMode.kColorDodge"]], "kdarken (blendmode attribute)": [[13, "skia.BlendMode.kDarken"]], "kdifference (blendmode attribute)": [[13, "skia.BlendMode.kDifference"]], "kdst (blendmode attribute)": [[13, "skia.BlendMode.kDst"]], "kdstatop (blendmode attribute)": [[13, "skia.BlendMode.kDstATop"]], "kdstin (blendmode attribute)": [[13, "skia.BlendMode.kDstIn"]], "kdstout (blendmode attribute)": [[13, "skia.BlendMode.kDstOut"]], "kdstover (blendmode attribute)": [[13, "skia.BlendMode.kDstOver"]], "kexclusion (blendmode attribute)": [[13, "skia.BlendMode.kExclusion"]], "khardlight (blendmode attribute)": [[13, "skia.BlendMode.kHardLight"]], "khue (blendmode attribute)": [[13, "skia.BlendMode.kHue"]], "klastcoeffmode (blendmode attribute)": [[13, "skia.BlendMode.kLastCoeffMode"]], "klastmode (blendmode attribute)": [[13, "skia.BlendMode.kLastMode"]], "klastseparablemode (blendmode attribute)": [[13, "skia.BlendMode.kLastSeparableMode"]], "klighten (blendmode attribute)": [[13, "skia.BlendMode.kLighten"]], "kluminosity (blendmode attribute)": [[13, "skia.BlendMode.kLuminosity"]], "kmodulate (blendmode attribute)": [[13, "skia.BlendMode.kModulate"]], "kmultiply (blendmode attribute)": [[13, "skia.BlendMode.kMultiply"]], "koverlay (blendmode attribute)": [[13, "skia.BlendMode.kOverlay"]], "kplus (blendmode attribute)": [[13, "skia.BlendMode.kPlus"]], "ksaturation (blendmode attribute)": [[13, "skia.BlendMode.kSaturation"]], "kscreen (blendmode attribute)": [[13, "skia.BlendMode.kScreen"]], "ksoftlight (blendmode attribute)": [[13, "skia.BlendMode.kSoftLight"]], "ksrc (blendmode attribute)": [[13, "skia.BlendMode.kSrc"]], "ksrcatop (blendmode attribute)": [[13, "skia.BlendMode.kSrcATop"]], "ksrcin (blendmode attribute)": [[13, "skia.BlendMode.kSrcIn"]], "ksrcout (blendmode attribute)": [[13, "skia.BlendMode.kSrcOut"]], "ksrcover (blendmode attribute)": [[13, "skia.BlendMode.kSrcOver"]], "kxor (blendmode attribute)": [[13, "skia.BlendMode.kXor"]], "name (blendmode attribute)": [[13, "skia.BlendMode.name"]], "value (blendmode attribute)": [[13, "skia.BlendMode.value"]], "blendmodecoeff (class in skia)": [[14, "skia.BlendModeCoeff"]], "__init__() (blendmodecoeff method)": [[14, "skia.BlendModeCoeff.__init__"]], "kcoeffcount (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kCoeffCount"]], "kda (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kDA"]], "kdc (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kDC"]], "kida (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kIDA"]], "kidc (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kIDC"]], "kisa (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kISA"]], "kisc (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kISC"]], "kone (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kOne"]], "ksa (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kSA"]], "ksc (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kSC"]], "kzero (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kZero"]], "name (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.name"]], "value (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.value"]], "blurmaskfilter (class in skia)": [[15, "skia.BlurMaskFilter"]], "__init__() (blurmaskfilter method)": [[15, "skia.BlurMaskFilter.__init__"]], "blurstyle (class in skia)": [[16, "skia.BlurStyle"]], "__init__() (blurstyle method)": [[16, "skia.BlurStyle.__init__"]], "kinner_blurstyle (blurstyle attribute)": [[16, "skia.BlurStyle.kInner_BlurStyle"]], "klastenum_blurstyle (blurstyle attribute)": [[16, "skia.BlurStyle.kLastEnum_BlurStyle"]], "knormal_blurstyle (blurstyle attribute)": [[16, "skia.BlurStyle.kNormal_BlurStyle"]], "kouter_blurstyle (blurstyle attribute)": [[16, "skia.BlurStyle.kOuter_BlurStyle"]], "ksolid_blurstyle (blurstyle attribute)": [[16, "skia.BlurStyle.kSolid_BlurStyle"]], "name (blurstyle attribute)": [[16, "skia.BlurStyle.name"]], "value (blurstyle attribute)": [[16, "skia.BlurStyle.value"]], "budgeted (class in skia)": [[17, "skia.Budgeted"]], "__init__() (budgeted method)": [[17, "skia.Budgeted.__init__"]], "kno (budgeted attribute)": [[17, "skia.Budgeted.kNo"]], "kyes (budgeted attribute)": [[17, "skia.Budgeted.kYes"]], "name (budgeted attribute)": [[17, "skia.Budgeted.name"]], "value (budgeted attribute)": [[17, "skia.Budgeted.value"]], "canvas (class in skia)": [[18, "skia.Canvas"]], "makerasterdirect() (canvas static method)": [[18, "skia.Canvas.MakeRasterDirect"]], "makerasterdirectn32() (canvas static method)": [[18, "skia.Canvas.MakeRasterDirectN32"]], "__init__() (canvas method)": [[18, "skia.Canvas.__init__"]], "accesstoplayerpixels() (canvas method)": [[18, "skia.Canvas.accessTopLayerPixels"]], "androidframework_setdevicecliprestriction() (canvas method)": [[18, "skia.Canvas.androidFramework_setDeviceClipRestriction"]], "clear() (canvas method)": [[18, "skia.Canvas.clear"]], "clippath() (canvas method)": [[18, "skia.Canvas.clipPath"]], "cliprrect() (canvas method)": [[18, "skia.Canvas.clipRRect"]], "cliprect() (canvas method)": [[18, "skia.Canvas.clipRect"]], "clipregion() (canvas method)": [[18, "skia.Canvas.clipRegion"]], "concat() (canvas method)": [[18, "skia.Canvas.concat"]], "discard() (canvas method)": [[18, "skia.Canvas.discard"]], "drawannotation() (canvas method)": [[18, "skia.Canvas.drawAnnotation"]], "drawarc() (canvas method)": [[18, "skia.Canvas.drawArc"]], "drawatlas() (canvas method)": [[18, "skia.Canvas.drawAtlas"]], "drawbitmap() (canvas method)": [[18, "skia.Canvas.drawBitmap"]], "drawbitmaprect() (canvas method)": [[18, "skia.Canvas.drawBitmapRect"]], "drawcircle() (canvas method)": [[18, "skia.Canvas.drawCircle"]], "drawcolor() (canvas method)": [[18, "skia.Canvas.drawColor"]], "drawdrrect() (canvas method)": [[18, "skia.Canvas.drawDRRect"]], "drawirect() (canvas method)": [[18, "skia.Canvas.drawIRect"]], "drawimage() (canvas method)": [[18, "skia.Canvas.drawImage"]], "drawimagerect() (canvas method)": [[18, "skia.Canvas.drawImageRect"]], "drawline() (canvas method)": [[18, "skia.Canvas.drawLine"]], "drawoval() (canvas method)": [[18, "skia.Canvas.drawOval"]], "drawpaint() (canvas method)": [[18, "skia.Canvas.drawPaint"]], "drawpatch() (canvas method)": [[18, "skia.Canvas.drawPatch"]], "drawpath() (canvas method)": [[18, "skia.Canvas.drawPath"]], "drawpicture() (canvas method)": [[18, "skia.Canvas.drawPicture"]], "drawpoint() (canvas method)": [[18, "skia.Canvas.drawPoint"]], "drawpoints() (canvas method)": [[18, "skia.Canvas.drawPoints"]], "drawrrect() (canvas method)": [[18, "skia.Canvas.drawRRect"]], "drawrect() (canvas method)": [[18, "skia.Canvas.drawRect"]], "drawregion() (canvas method)": [[18, "skia.Canvas.drawRegion"]], "drawroundrect() (canvas method)": [[18, "skia.Canvas.drawRoundRect"]], "drawsimpletext() (canvas method)": [[18, "skia.Canvas.drawSimpleText"]], "drawstring() (canvas method)": [[18, "skia.Canvas.drawString"]], "drawtextblob() (canvas method)": [[18, "skia.Canvas.drawTextBlob"]], "drawtextonpath() (canvas method)": [[18, "skia.Canvas.drawTextOnPath"]], "drawvertices() (canvas method)": [[18, "skia.Canvas.drawVertices"]], "flush() (canvas method)": [[18, "skia.Canvas.flush"]], "getbaselayersize() (canvas method)": [[18, "skia.Canvas.getBaseLayerSize"]], "getdeviceclipbounds() (canvas method)": [[18, "skia.Canvas.getDeviceClipBounds"]], "getlocalclipbounds() (canvas method)": [[18, "skia.Canvas.getLocalClipBounds"]], "getlocaltodevice() (canvas method)": [[18, "skia.Canvas.getLocalToDevice"]], "getprops() (canvas method)": [[18, "skia.Canvas.getProps"]], "getsavecount() (canvas method)": [[18, "skia.Canvas.getSaveCount"]], "getsurface() (canvas method)": [[18, "skia.Canvas.getSurface"]], "gettotalmatrix() (canvas method)": [[18, "skia.Canvas.getTotalMatrix"]], "imageinfo() (canvas method)": [[18, "skia.Canvas.imageInfo"]], "isclipempty() (canvas method)": [[18, "skia.Canvas.isClipEmpty"]], "iscliprect() (canvas method)": [[18, "skia.Canvas.isClipRect"]], "kall_quadaaflags (canvas attribute)": [[18, "skia.Canvas.kAll_QuadAAFlags"]], "kbottom_quadaaflag (canvas attribute)": [[18, "skia.Canvas.kBottom_QuadAAFlag"]], "kf16colortype (canvas attribute)": [[18, "skia.Canvas.kF16ColorType"]], "kfast_srcrectconstraint (canvas attribute)": [[18, "skia.Canvas.kFast_SrcRectConstraint"]], "kinitwithprevious_savelayerflag (canvas attribute)": [[18, "skia.Canvas.kInitWithPrevious_SaveLayerFlag"]], "kleft_quadaaflag (canvas attribute)": [[18, "skia.Canvas.kLeft_QuadAAFlag"]], "klines_pointmode (canvas attribute)": [[18, "skia.Canvas.kLines_PointMode"]], "knone_quadaaflags (canvas attribute)": [[18, "skia.Canvas.kNone_QuadAAFlags"]], "kpoints_pointmode (canvas attribute)": [[18, "skia.Canvas.kPoints_PointMode"]], "kpolygon_pointmode (canvas attribute)": [[18, "skia.Canvas.kPolygon_PointMode"]], "kpreservelcdtext_savelayerflag (canvas attribute)": [[18, "skia.Canvas.kPreserveLCDText_SaveLayerFlag"]], "kright_quadaaflag (canvas attribute)": [[18, "skia.Canvas.kRight_QuadAAFlag"]], "kstrict_srcrectconstraint (canvas attribute)": [[18, "skia.Canvas.kStrict_SrcRectConstraint"]], "ktop_quadaaflag (canvas attribute)": [[18, "skia.Canvas.kTop_QuadAAFlag"]], "makesurface() (canvas method)": [[18, "skia.Canvas.makeSurface"]], "peekpixels() (canvas method)": [[18, "skia.Canvas.peekPixels"]], "quickreject() (canvas method)": [[18, "skia.Canvas.quickReject"]], "readpixels() (canvas method)": [[18, "skia.Canvas.readPixels"]], "resetmatrix() (canvas method)": [[18, "skia.Canvas.resetMatrix"]], "restore() (canvas method)": [[18, "skia.Canvas.restore"]], "restoretocount() (canvas method)": [[18, "skia.Canvas.restoreToCount"]], "rotate() (canvas method)": [[18, "skia.Canvas.rotate"]], "save() (canvas method)": [[18, "skia.Canvas.save"]], "savelayer() (canvas method)": [[18, "skia.Canvas.saveLayer"]], "savelayeralpha() (canvas method)": [[18, "skia.Canvas.saveLayerAlpha"]], "scale() (canvas method)": [[18, "skia.Canvas.scale"]], "setmatrix() (canvas method)": [[18, "skia.Canvas.setMatrix"]], "skew() (canvas method)": [[18, "skia.Canvas.skew"]], "toarray() (canvas method)": [[18, "skia.Canvas.toarray"]], "translate() (canvas method)": [[18, "skia.Canvas.translate"]], "writepixels() (canvas method)": [[18, "skia.Canvas.writePixels"]], "lattice (class in skia.canvas)": [[19, "skia.Canvas.Lattice"]], "__init__() (lattice method)": [[19, "skia.Canvas.Lattice.__init__"]], "fbounds (lattice attribute)": [[19, "skia.Canvas.Lattice.fBounds"]], "fcolors (lattice attribute)": [[19, "skia.Canvas.Lattice.fColors"]], "frecttypes (lattice attribute)": [[19, "skia.Canvas.Lattice.fRectTypes"]], "fxcount (lattice attribute)": [[19, "skia.Canvas.Lattice.fXCount"]], "fxdivs (lattice attribute)": [[19, "skia.Canvas.Lattice.fXDivs"]], "fycount (lattice attribute)": [[19, "skia.Canvas.Lattice.fYCount"]], "fydivs (lattice attribute)": [[19, "skia.Canvas.Lattice.fYDivs"]], "kdefault (lattice attribute)": [[19, "skia.Canvas.Lattice.kDefault"]], "kfixedcolor (lattice attribute)": [[19, "skia.Canvas.Lattice.kFixedColor"]], "ktransparent (lattice attribute)": [[19, "skia.Canvas.Lattice.kTransparent"]], "recttype (class in skia.canvas.lattice)": [[20, "skia.Canvas.Lattice.RectType"]], "__init__() (recttype method)": [[20, "skia.Canvas.Lattice.RectType.__init__"]], "kdefault (recttype attribute)": [[20, "skia.Canvas.Lattice.RectType.kDefault"]], "kfixedcolor (recttype attribute)": [[20, "skia.Canvas.Lattice.RectType.kFixedColor"]], "ktransparent (recttype attribute)": [[20, "skia.Canvas.Lattice.RectType.kTransparent"]], "name (recttype attribute)": [[20, "skia.Canvas.Lattice.RectType.name"]], "value (recttype attribute)": [[20, "skia.Canvas.Lattice.RectType.value"]], "pointmode (class in skia.canvas)": [[21, "skia.Canvas.PointMode"]], "__init__() (pointmode method)": [[21, "skia.Canvas.PointMode.__init__"]], "klines_pointmode (pointmode attribute)": [[21, "skia.Canvas.PointMode.kLines_PointMode"]], "kpoints_pointmode (pointmode attribute)": [[21, "skia.Canvas.PointMode.kPoints_PointMode"]], "kpolygon_pointmode (pointmode attribute)": [[21, "skia.Canvas.PointMode.kPolygon_PointMode"]], "name (pointmode attribute)": [[21, "skia.Canvas.PointMode.name"]], "value (pointmode attribute)": [[21, "skia.Canvas.PointMode.value"]], "quadaaflags (class in skia.canvas)": [[22, "skia.Canvas.QuadAAFlags"]], "__init__() (quadaaflags method)": [[22, "skia.Canvas.QuadAAFlags.__init__"]], "kall_quadaaflags (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.kAll_QuadAAFlags"]], "kbottom_quadaaflag (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.kBottom_QuadAAFlag"]], "kleft_quadaaflag (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.kLeft_QuadAAFlag"]], "knone_quadaaflags (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.kNone_QuadAAFlags"]], "kright_quadaaflag (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.kRight_QuadAAFlag"]], "ktop_quadaaflag (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.kTop_QuadAAFlag"]], "name (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.name"]], "value (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.value"]], "savelayerflags (class in skia.canvas)": [[23, "skia.Canvas.SaveLayerFlags"]], "__init__() (savelayerflags method)": [[23, "skia.Canvas.SaveLayerFlags.__init__"]], "kf16colortype (savelayerflags attribute)": [[23, "skia.Canvas.SaveLayerFlags.kF16ColorType"]], "kinitwithprevious_savelayerflag (savelayerflags attribute)": [[23, "skia.Canvas.SaveLayerFlags.kInitWithPrevious_SaveLayerFlag"]], "kpreservelcdtext_savelayerflag (savelayerflags attribute)": [[23, "skia.Canvas.SaveLayerFlags.kPreserveLCDText_SaveLayerFlag"]], "name (savelayerflags attribute)": [[23, "skia.Canvas.SaveLayerFlags.name"]], "value (savelayerflags attribute)": [[23, "skia.Canvas.SaveLayerFlags.value"]], "savelayerrec (class in skia.canvas)": [[24, "skia.Canvas.SaveLayerRec"]], "__init__() (savelayerrec method)": [[24, "skia.Canvas.SaveLayerRec.__init__"]], "fbackdrop (savelayerrec attribute)": [[24, "skia.Canvas.SaveLayerRec.fBackdrop"]], "fbounds (savelayerrec attribute)": [[24, "skia.Canvas.SaveLayerRec.fBounds"]], "fpaint (savelayerrec attribute)": [[24, "skia.Canvas.SaveLayerRec.fPaint"]], "fsavelayerflags (savelayerrec attribute)": [[24, "skia.Canvas.SaveLayerRec.fSaveLayerFlags"]], "srcrectconstraint (class in skia.canvas)": [[25, "skia.Canvas.SrcRectConstraint"]], "__init__() (srcrectconstraint method)": [[25, "skia.Canvas.SrcRectConstraint.__init__"]], "kfast_srcrectconstraint (srcrectconstraint attribute)": [[25, "skia.Canvas.SrcRectConstraint.kFast_SrcRectConstraint"]], "kstrict_srcrectconstraint (srcrectconstraint attribute)": [[25, "skia.Canvas.SrcRectConstraint.kStrict_SrcRectConstraint"]], "name (srcrectconstraint attribute)": [[25, "skia.Canvas.SrcRectConstraint.name"]], "value (srcrectconstraint attribute)": [[25, "skia.Canvas.SrcRectConstraint.value"]], "clipop (class in skia)": [[26, "skia.ClipOp"]], "__init__() (clipop method)": [[26, "skia.ClipOp.__init__"]], "kdifference (clipop attribute)": [[26, "skia.ClipOp.kDifference"]], "kintersect (clipop attribute)": [[26, "skia.ClipOp.kIntersect"]], "name (clipop attribute)": [[26, "skia.ClipOp.name"]], "value (clipop attribute)": [[26, "skia.ClipOp.value"]], "codec (class in skia)": [[27, "skia.Codec"]], "makefromdata() (codec static method)": [[27, "skia.Codec.MakeFromData"]], "minbufferedbytesneeded() (codec static method)": [[27, "skia.Codec.MinBufferedBytesNeeded"]], "resulttostring() (codec static method)": [[27, "skia.Codec.ResultToString"]], "__init__() (codec method)": [[27, "skia.Codec.__init__"]], "bounds() (codec method)": [[27, "skia.Codec.bounds"]], "dimensions() (codec method)": [[27, "skia.Codec.dimensions"]], "getencodedformat() (codec method)": [[27, "skia.Codec.getEncodedFormat"]], "getframecount() (codec method)": [[27, "skia.Codec.getFrameCount"]], "getframeinfo() (codec method)": [[27, "skia.Codec.getFrameInfo"]], "getinfo() (codec method)": [[27, "skia.Codec.getInfo"]], "getorigin() (codec method)": [[27, "skia.Codec.getOrigin"]], "getpixels() (codec method)": [[27, "skia.Codec.getPixels"]], "getrepetitioncount() (codec method)": [[27, "skia.Codec.getRepetitionCount"]], "getscaleddimensions() (codec method)": [[27, "skia.Codec.getScaledDimensions"]], "getscanlineorder() (codec method)": [[27, "skia.Codec.getScanlineOrder"]], "getscanlines() (codec method)": [[27, "skia.Codec.getScanlines"]], "getvalidsubset() (codec method)": [[27, "skia.Codec.getValidSubset"]], "getyuvaplanes() (codec method)": [[27, "skia.Codec.getYUVAPlanes"]], "incrementaldecode() (codec method)": [[27, "skia.Codec.incrementalDecode"]], "kcouldnotrewind (codec attribute)": [[27, "skia.Codec.kCouldNotRewind"]], "kerrorininput (codec attribute)": [[27, "skia.Codec.kErrorInInput"]], "kincompleteinput (codec attribute)": [[27, "skia.Codec.kIncompleteInput"]], "kinternalerror (codec attribute)": [[27, "skia.Codec.kInternalError"]], "kinvalidconversion (codec attribute)": [[27, "skia.Codec.kInvalidConversion"]], "kinvalidinput (codec attribute)": [[27, "skia.Codec.kInvalidInput"]], "kinvalidparameters (codec attribute)": [[27, "skia.Codec.kInvalidParameters"]], "kinvalidscale (codec attribute)": [[27, "skia.Codec.kInvalidScale"]], "kkeep (codec attribute)": [[27, "skia.Codec.kKeep"]], "knoframe (codec attribute)": [[27, "skia.Codec.kNoFrame"]], "kno_zeroinitialized (codec attribute)": [[27, "skia.Codec.kNo_ZeroInitialized"]], "kpreferanimation (codec attribute)": [[27, "skia.Codec.kPreferAnimation"]], "kpreferstillimage (codec attribute)": [[27, "skia.Codec.kPreferStillImage"]], "krepetitioncountinfinite (codec attribute)": [[27, "skia.Codec.kRepetitionCountInfinite"]], "krestorebgcolor (codec attribute)": [[27, "skia.Codec.kRestoreBGColor"]], "krestoreprevious (codec attribute)": [[27, "skia.Codec.kRestorePrevious"]], "ksuccess (codec attribute)": [[27, "skia.Codec.kSuccess"]], "kunimplemented (codec attribute)": [[27, "skia.Codec.kUnimplemented"]], "kyes_zeroinitialized (codec attribute)": [[27, "skia.Codec.kYes_ZeroInitialized"]], "nextscanline() (codec method)": [[27, "skia.Codec.nextScanline"]], "outputscanline() (codec method)": [[27, "skia.Codec.outputScanline"]], "queryyuvainfo() (codec method)": [[27, "skia.Codec.queryYUVAInfo"]], "skipscanlines() (codec method)": [[27, "skia.Codec.skipScanlines"]], "startincrementaldecode() (codec method)": [[27, "skia.Codec.startIncrementalDecode"]], "startscanlinedecode() (codec method)": [[27, "skia.Codec.startScanlineDecode"]], "disposalmethod (class in skia.codec)": [[28, "skia.Codec.DisposalMethod"]], "__init__() (disposalmethod method)": [[28, "skia.Codec.DisposalMethod.__init__"]], "kkeep (disposalmethod attribute)": [[28, "skia.Codec.DisposalMethod.kKeep"]], "krestorebgcolor (disposalmethod attribute)": [[28, "skia.Codec.DisposalMethod.kRestoreBGColor"]], "krestoreprevious (disposalmethod attribute)": [[28, "skia.Codec.DisposalMethod.kRestorePrevious"]], "name (disposalmethod attribute)": [[28, "skia.Codec.DisposalMethod.name"]], "value (disposalmethod attribute)": [[28, "skia.Codec.DisposalMethod.value"]], "frameinfo (class in skia.codec)": [[29, "skia.Codec.FrameInfo"]], "__init__() (frameinfo method)": [[29, "skia.Codec.FrameInfo.__init__"]], "falphatype (frameinfo attribute)": [[29, "skia.Codec.FrameInfo.fAlphaType"]], "fdisposalmethod (frameinfo attribute)": [[29, "skia.Codec.FrameInfo.fDisposalMethod"]], "fduration (frameinfo attribute)": [[29, "skia.Codec.FrameInfo.fDuration"]], "ffullyreceived (frameinfo attribute)": [[29, "skia.Codec.FrameInfo.fFullyReceived"]], "frequiredframe (frameinfo attribute)": [[29, "skia.Codec.FrameInfo.fRequiredFrame"]], "options (class in skia.codec)": [[30, "skia.Codec.Options"]], "__init__() (options method)": [[30, "skia.Codec.Options.__init__"]], "fframeindex (options attribute)": [[30, "skia.Codec.Options.fFrameIndex"]], "fpriorframe (options attribute)": [[30, "skia.Codec.Options.fPriorFrame"]], "fsubset (options attribute)": [[30, "skia.Codec.Options.fSubset"]], "fzeroinitialized (options attribute)": [[30, "skia.Codec.Options.fZeroInitialized"]], "result (class in skia.codec)": [[31, "skia.Codec.Result"]], "__init__() (result method)": [[31, "skia.Codec.Result.__init__"]], "kcouldnotrewind (result attribute)": [[31, "skia.Codec.Result.kCouldNotRewind"]], "kerrorininput (result attribute)": [[31, "skia.Codec.Result.kErrorInInput"]], "kincompleteinput (result attribute)": [[31, "skia.Codec.Result.kIncompleteInput"]], "kinternalerror (result attribute)": [[31, "skia.Codec.Result.kInternalError"]], "kinvalidconversion (result attribute)": [[31, "skia.Codec.Result.kInvalidConversion"]], "kinvalidinput (result attribute)": [[31, "skia.Codec.Result.kInvalidInput"]], "kinvalidparameters (result attribute)": [[31, "skia.Codec.Result.kInvalidParameters"]], "kinvalidscale (result attribute)": [[31, "skia.Codec.Result.kInvalidScale"]], "ksuccess (result attribute)": [[31, "skia.Codec.Result.kSuccess"]], "kunimplemented (result attribute)": [[31, "skia.Codec.Result.kUnimplemented"]], "name (result attribute)": [[31, "skia.Codec.Result.name"]], "value (result attribute)": [[31, "skia.Codec.Result.value"]], "scanlineorder (class in skia.codec)": [[32, "skia.Codec.ScanlineOrder"]], "__init__() (scanlineorder method)": [[32, "skia.Codec.ScanlineOrder.__init__"]], "kkeep (scanlineorder attribute)": [[32, "skia.Codec.ScanlineOrder.kKeep"]], "krestorebgcolor (scanlineorder attribute)": [[32, "skia.Codec.ScanlineOrder.kRestoreBGColor"]], "name (scanlineorder attribute)": [[32, "skia.Codec.ScanlineOrder.name"]], "value (scanlineorder attribute)": [[32, "skia.Codec.ScanlineOrder.value"]], "selectionpolicy (class in skia.codec)": [[33, "skia.Codec.SelectionPolicy"]], "__init__() (selectionpolicy method)": [[33, "skia.Codec.SelectionPolicy.__init__"]], "kpreferanimation (selectionpolicy attribute)": [[33, "skia.Codec.SelectionPolicy.kPreferAnimation"]], "kpreferstillimage (selectionpolicy attribute)": [[33, "skia.Codec.SelectionPolicy.kPreferStillImage"]], "name (selectionpolicy attribute)": [[33, "skia.Codec.SelectionPolicy.name"]], "value (selectionpolicy attribute)": [[33, "skia.Codec.SelectionPolicy.value"]], "zeroinitialized (class in skia.codec)": [[34, "skia.Codec.ZeroInitialized"]], "__init__() (zeroinitialized method)": [[34, "skia.Codec.ZeroInitialized.__init__"]], "kno_zeroinitialized (zeroinitialized attribute)": [[34, "skia.Codec.ZeroInitialized.kNo_ZeroInitialized"]], "kyes_zeroinitialized (zeroinitialized attribute)": [[34, "skia.Codec.ZeroInitialized.kYes_ZeroInitialized"]], "name (zeroinitialized attribute)": [[34, "skia.Codec.ZeroInitialized.name"]], "value (zeroinitialized attribute)": [[34, "skia.Codec.ZeroInitialized.value"]], "color4f (class in skia)": [[35, "skia.Color4f"]], "frombytes_rgba() (color4f static method)": [[35, "skia.Color4f.FromBytes_RGBA"]], "fromcolor() (color4f static method)": [[35, "skia.Color4f.FromColor"]], "__init__() (color4f method)": [[35, "skia.Color4f.__init__"]], "fa (color4f attribute)": [[35, "skia.Color4f.fA"]], "fb (color4f attribute)": [[35, "skia.Color4f.fB"]], "fg (color4f attribute)": [[35, "skia.Color4f.fG"]], "fr (color4f attribute)": [[35, "skia.Color4f.fR"]], "fitsinbytes() (color4f method)": [[35, "skia.Color4f.fitsInBytes"]], "isopaque() (color4f method)": [[35, "skia.Color4f.isOpaque"]], "kblack (color4f attribute)": [[35, "skia.Color4f.kBlack"]], "kblue (color4f attribute)": [[35, "skia.Color4f.kBlue"]], "kcyan (color4f attribute)": [[35, "skia.Color4f.kCyan"]], "kdkgray (color4f attribute)": [[35, "skia.Color4f.kDkGray"]], "kgray (color4f attribute)": [[35, "skia.Color4f.kGray"]], "kgreen (color4f attribute)": [[35, "skia.Color4f.kGreen"]], "kltgray (color4f attribute)": [[35, "skia.Color4f.kLtGray"]], "kmagenta (color4f attribute)": [[35, "skia.Color4f.kMagenta"]], "kred (color4f attribute)": [[35, "skia.Color4f.kRed"]], "ktransparent (color4f attribute)": [[35, "skia.Color4f.kTransparent"]], "kwhite (color4f attribute)": [[35, "skia.Color4f.kWhite"]], "kyellow (color4f attribute)": [[35, "skia.Color4f.kYellow"]], "makeopaque() (color4f method)": [[35, "skia.Color4f.makeOpaque"]], "tobytes_rgba() (color4f method)": [[35, "skia.Color4f.toBytes_RGBA"]], "tocolor() (color4f method)": [[35, "skia.Color4f.toColor"]], "vec() (color4f method)": [[35, "skia.Color4f.vec"]], "colorchannel (class in skia)": [[36, "skia.ColorChannel"]], "__init__() (colorchannel method)": [[36, "skia.ColorChannel.__init__"]], "ka (colorchannel attribute)": [[36, "skia.ColorChannel.kA"]], "kb (colorchannel attribute)": [[36, "skia.ColorChannel.kB"]], "kg (colorchannel attribute)": [[36, "skia.ColorChannel.kG"]], "klastenum (colorchannel attribute)": [[36, "skia.ColorChannel.kLastEnum"]], "kr (colorchannel attribute)": [[36, "skia.ColorChannel.kR"]], "name (colorchannel attribute)": [[36, "skia.ColorChannel.name"]], "value (colorchannel attribute)": [[36, "skia.ColorChannel.value"]], "colorchannelflag (class in skia)": [[37, "skia.ColorChannelFlag"]], "__init__() (colorchannelflag method)": [[37, "skia.ColorChannelFlag.__init__"]], "kalpha_colorchannelflag (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kAlpha_ColorChannelFlag"]], "kblue_colorchannelflag (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kBlue_ColorChannelFlag"]], "kgray_colorchannelflag (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kGray_ColorChannelFlag"]], "kgreen_colorchannelflag (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kGreen_ColorChannelFlag"]], "krgba_colorchannelflags (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kRGBA_ColorChannelFlags"]], "krgb_colorchannelflags (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kRGB_ColorChannelFlags"]], "krg_colorchannelflags (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kRG_ColorChannelFlags"]], "kred_colorchannelflag (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kRed_ColorChannelFlag"]], "name (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.name"]], "value (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.value"]], "colorfilter (class in skia)": [[38, "skia.ColorFilter"]], "deserialize() (colorfilter static method)": [[38, "skia.ColorFilter.Deserialize"]], "__init__() (colorfilter method)": [[38, "skia.ColorFilter.__init__"]], "asacolormatrix() (colorfilter method)": [[38, "skia.ColorFilter.asAColorMatrix"]], "asacolormode() (colorfilter method)": [[38, "skia.ColorFilter.asAColorMode"]], "ascolormode() (colorfilter method)": [[38, "skia.ColorFilter.asColorMode"]], "filtercolor() (colorfilter method)": [[38, "skia.ColorFilter.filterColor"]], "filtercolor4f() (colorfilter method)": [[38, "skia.ColorFilter.filterColor4f"]], "getflattenabletype() (colorfilter method)": [[38, "skia.ColorFilter.getFlattenableType"]], "gettypename() (colorfilter method)": [[38, "skia.ColorFilter.getTypeName"]], "kcolorfilter_type (colorfilter attribute)": [[38, "skia.ColorFilter.kColorFilter_Type"]], "kdrawlooper_type (colorfilter attribute)": [[38, "skia.ColorFilter.kDrawLooper_Type"]], "kdrawable_type (colorfilter attribute)": [[38, "skia.ColorFilter.kDrawable_Type"]], "kimagefilter_type (colorfilter attribute)": [[38, "skia.ColorFilter.kImageFilter_Type"]], "kmaskfilter_type (colorfilter attribute)": [[38, "skia.ColorFilter.kMaskFilter_Type"]], "kpatheffect_type (colorfilter attribute)": [[38, "skia.ColorFilter.kPathEffect_Type"]], "makecomposed() (colorfilter method)": [[38, "skia.ColorFilter.makeComposed"]], "ref() (colorfilter method)": [[38, "skia.ColorFilter.ref"]], "serialize() (colorfilter method)": [[38, "skia.ColorFilter.serialize"]], "unique() (colorfilter method)": [[38, "skia.ColorFilter.unique"]], "unref() (colorfilter method)": [[38, "skia.ColorFilter.unref"]], "type (class in skia.colorfilter)": [[39, "skia.ColorFilter.Type"]], "__init__() (type method)": [[39, "skia.ColorFilter.Type.__init__"], [44, "skia.ColorMatrixFilter.Type.__init__"], [55, "skia.Drawable.Type.__init__"], [63, "skia.Flattanable.Type.__init__"], [134, "skia.ImageFilter.Type.__init__"], [141, "skia.MaskFilter.Type.__init__"], [173, "skia.PathEffect.Type.__init__"], [190, "skia.RRect.Type.__init__"], [218, "skia.Shader.Type.__init__"]], "kcolorfilter_type (type attribute)": [[39, "skia.ColorFilter.Type.kColorFilter_Type"], [44, "skia.ColorMatrixFilter.Type.kColorFilter_Type"], [55, "skia.Drawable.Type.kColorFilter_Type"], [63, "skia.Flattanable.Type.kColorFilter_Type"], [134, "skia.ImageFilter.Type.kColorFilter_Type"], [141, "skia.MaskFilter.Type.kColorFilter_Type"], [173, "skia.PathEffect.Type.kColorFilter_Type"], [218, "skia.Shader.Type.kColorFilter_Type"]], "kdrawlooper_type (type attribute)": [[39, "skia.ColorFilter.Type.kDrawLooper_Type"], [44, "skia.ColorMatrixFilter.Type.kDrawLooper_Type"], [55, "skia.Drawable.Type.kDrawLooper_Type"], [63, "skia.Flattanable.Type.kDrawLooper_Type"], [134, "skia.ImageFilter.Type.kDrawLooper_Type"], [141, "skia.MaskFilter.Type.kDrawLooper_Type"], [173, "skia.PathEffect.Type.kDrawLooper_Type"], [218, "skia.Shader.Type.kDrawLooper_Type"]], "kdrawable_type (type attribute)": [[39, "skia.ColorFilter.Type.kDrawable_Type"], [44, "skia.ColorMatrixFilter.Type.kDrawable_Type"], [55, "skia.Drawable.Type.kDrawable_Type"], [63, "skia.Flattanable.Type.kDrawable_Type"], [134, "skia.ImageFilter.Type.kDrawable_Type"], [141, "skia.MaskFilter.Type.kDrawable_Type"], [173, "skia.PathEffect.Type.kDrawable_Type"], [218, "skia.Shader.Type.kDrawable_Type"]], "kimagefilter_type (type attribute)": [[39, "skia.ColorFilter.Type.kImageFilter_Type"], [44, "skia.ColorMatrixFilter.Type.kImageFilter_Type"], [55, "skia.Drawable.Type.kImageFilter_Type"], [63, "skia.Flattanable.Type.kImageFilter_Type"], [134, "skia.ImageFilter.Type.kImageFilter_Type"], [141, "skia.MaskFilter.Type.kImageFilter_Type"], [173, "skia.PathEffect.Type.kImageFilter_Type"], [218, "skia.Shader.Type.kImageFilter_Type"]], "kmaskfilter_type (type attribute)": [[39, "skia.ColorFilter.Type.kMaskFilter_Type"], [44, "skia.ColorMatrixFilter.Type.kMaskFilter_Type"], [55, "skia.Drawable.Type.kMaskFilter_Type"], [63, "skia.Flattanable.Type.kMaskFilter_Type"], [134, "skia.ImageFilter.Type.kMaskFilter_Type"], [141, "skia.MaskFilter.Type.kMaskFilter_Type"], [173, "skia.PathEffect.Type.kMaskFilter_Type"], [218, "skia.Shader.Type.kMaskFilter_Type"]], "kpatheffect_type (type attribute)": [[39, "skia.ColorFilter.Type.kPathEffect_Type"], [44, "skia.ColorMatrixFilter.Type.kPathEffect_Type"], [55, "skia.Drawable.Type.kPathEffect_Type"], [63, "skia.Flattanable.Type.kPathEffect_Type"], [134, "skia.ImageFilter.Type.kPathEffect_Type"], [141, "skia.MaskFilter.Type.kPathEffect_Type"], [173, "skia.PathEffect.Type.kPathEffect_Type"], [218, "skia.Shader.Type.kPathEffect_Type"]], "name (type attribute)": [[39, "skia.ColorFilter.Type.name"], [44, "skia.ColorMatrixFilter.Type.name"], [55, "skia.Drawable.Type.name"], [63, "skia.Flattanable.Type.name"], [134, "skia.ImageFilter.Type.name"], [141, "skia.MaskFilter.Type.name"], [173, "skia.PathEffect.Type.name"], [190, "skia.RRect.Type.name"], [218, "skia.Shader.Type.name"]], "value (type attribute)": [[39, "skia.ColorFilter.Type.value"], [44, "skia.ColorMatrixFilter.Type.value"], [55, "skia.Drawable.Type.value"], [63, "skia.Flattanable.Type.value"], [134, "skia.ImageFilter.Type.value"], [141, "skia.MaskFilter.Type.value"], [173, "skia.PathEffect.Type.value"], [190, "skia.RRect.Type.value"], [218, "skia.Shader.Type.value"]], "blend() (colorfilters static method)": [[40, "skia.ColorFilters.Blend"]], "colorfilters (class in skia)": [[40, "skia.ColorFilters"]], "compose() (colorfilters static method)": [[40, "skia.ColorFilters.Compose"]], "hslamatrix() (colorfilters static method)": [[40, "skia.ColorFilters.HSLAMatrix"]], "lerp() (colorfilters static method)": [[40, "skia.ColorFilters.Lerp"]], "lineartosrgbgamma() (colorfilters static method)": [[40, "skia.ColorFilters.LinearToSRGBGamma"]], "matrix() (colorfilters static method)": [[40, "skia.ColorFilters.Matrix"]], "srgbtolineargamma() (colorfilters static method)": [[40, "skia.ColorFilters.SRGBToLinearGamma"]], "__init__() (colorfilters method)": [[40, "skia.ColorFilters.__init__"]], "colorinfo (class in skia)": [[41, "skia.ColorInfo"]], "__init__() (colorinfo method)": [[41, "skia.ColorInfo.__init__"]], "alphatype() (colorinfo method)": [[41, "skia.ColorInfo.alphaType"]], "bytesperpixel() (colorinfo method)": [[41, "skia.ColorInfo.bytesPerPixel"]], "colorspace() (colorinfo method)": [[41, "skia.ColorInfo.colorSpace"]], "colortype() (colorinfo method)": [[41, "skia.ColorInfo.colorType"]], "gammaclosetosrgb() (colorinfo method)": [[41, "skia.ColorInfo.gammaCloseToSRGB"]], "isopaque() (colorinfo method)": [[41, "skia.ColorInfo.isOpaque"]], "makealphatype() (colorinfo method)": [[41, "skia.ColorInfo.makeAlphaType"]], "makecolorspace() (colorinfo method)": [[41, "skia.ColorInfo.makeColorSpace"]], "makecolortype() (colorinfo method)": [[41, "skia.ColorInfo.makeColorType"]], "refcolorspace() (colorinfo method)": [[41, "skia.ColorInfo.refColorSpace"]], "shiftperpixel() (colorinfo method)": [[41, "skia.ColorInfo.shiftPerPixel"]], "colormatrix (class in skia)": [[42, "skia.ColorMatrix"]], "__init__() (colormatrix method)": [[42, "skia.ColorMatrix.__init__"]], "colormatrixfilter (class in skia)": [[43, "skia.ColorMatrixFilter"]], "deserialize() (colormatrixfilter static method)": [[43, "skia.ColorMatrixFilter.Deserialize"]], "makelightingfilter() (colormatrixfilter static method)": [[43, "skia.ColorMatrixFilter.MakeLightingFilter"]], "__init__() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.__init__"]], "asacolormatrix() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.asAColorMatrix"]], "asacolormode() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.asAColorMode"]], "ascolormode() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.asColorMode"]], "filtercolor() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.filterColor"]], "filtercolor4f() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.filterColor4f"]], "getflattenabletype() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.getFlattenableType"]], "gettypename() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.getTypeName"]], "kcolorfilter_type (colormatrixfilter attribute)": [[43, "skia.ColorMatrixFilter.kColorFilter_Type"]], "kdrawlooper_type (colormatrixfilter attribute)": [[43, "skia.ColorMatrixFilter.kDrawLooper_Type"]], "kdrawable_type (colormatrixfilter attribute)": [[43, "skia.ColorMatrixFilter.kDrawable_Type"]], "kimagefilter_type (colormatrixfilter attribute)": [[43, "skia.ColorMatrixFilter.kImageFilter_Type"]], "kmaskfilter_type (colormatrixfilter attribute)": [[43, "skia.ColorMatrixFilter.kMaskFilter_Type"]], "kpatheffect_type (colormatrixfilter attribute)": [[43, "skia.ColorMatrixFilter.kPathEffect_Type"]], "makecomposed() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.makeComposed"]], "ref() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.ref"]], "serialize() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.serialize"]], "unique() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.unique"]], "unref() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.unref"]], "type (class in skia.colormatrixfilter)": [[44, "skia.ColorMatrixFilter.Type"]], "colorspace (class in skia)": [[45, "skia.ColorSpace"]], "deserialize() (colorspace static method)": [[45, "skia.ColorSpace.Deserialize"]], "equals() (colorspace static method)": [[45, "skia.ColorSpace.Equals"]], "make() (colorspace static method)": [[45, "skia.ColorSpace.Make"]], "makergb() (colorspace static method)": [[45, "skia.ColorSpace.MakeRGB"]], "makesrgb() (colorspace static method)": [[45, "skia.ColorSpace.MakeSRGB"]], "makesrgblinear() (colorspace static method)": [[45, "skia.ColorSpace.MakeSRGBLinear"]], "__init__() (colorspace method)": [[45, "skia.ColorSpace.__init__"]], "deref() (colorspace method)": [[45, "skia.ColorSpace.deref"]], "gammaclosetosrgb() (colorspace method)": [[45, "skia.ColorSpace.gammaCloseToSRGB"]], "gammaislinear() (colorspace method)": [[45, "skia.ColorSpace.gammaIsLinear"]], "gamuttransformto() (colorspace method)": [[45, "skia.ColorSpace.gamutTransformTo"]], "hash() (colorspace method)": [[45, "skia.ColorSpace.hash"]], "invtransferfn() (colorspace method)": [[45, "skia.ColorSpace.invTransferFn"]], "isnumericaltransferfn() (colorspace method)": [[45, "skia.ColorSpace.isNumericalTransferFn"]], "issrgb() (colorspace method)": [[45, "skia.ColorSpace.isSRGB"]], "makecolorspin() (colorspace method)": [[45, "skia.ColorSpace.makeColorSpin"]], "makelineargamma() (colorspace method)": [[45, "skia.ColorSpace.makeLinearGamma"]], "makesrgbgamma() (colorspace method)": [[45, "skia.ColorSpace.makeSRGBGamma"]], "ref() (colorspace method)": [[45, "skia.ColorSpace.ref"]], "refcntgreaterthan() (colorspace method)": [[45, "skia.ColorSpace.refCntGreaterThan"]], "serialize() (colorspace method)": [[45, "skia.ColorSpace.serialize"]], "toprofile() (colorspace method)": [[45, "skia.ColorSpace.toProfile"]], "toxyzd50() (colorspace method)": [[45, "skia.ColorSpace.toXYZD50"]], "toxyzd50hash() (colorspace method)": [[45, "skia.ColorSpace.toXYZD50Hash"]], "transferfn() (colorspace method)": [[45, "skia.ColorSpace.transferFn"]], "transferfnhash() (colorspace method)": [[45, "skia.ColorSpace.transferFnHash"]], "unique() (colorspace method)": [[45, "skia.ColorSpace.unique"]], "unref() (colorspace method)": [[45, "skia.ColorSpace.unref"]], "writetomemory() (colorspace method)": [[45, "skia.ColorSpace.writeToMemory"]], "colortype (class in skia)": [[46, "skia.ColorType"]], "__init__() (colortype method)": [[46, "skia.ColorType.__init__"]], "ka16_float_colortype (colortype attribute)": [[46, "skia.ColorType.kA16_float_ColorType"]], "ka16_unorm_colortype (colortype attribute)": [[46, "skia.ColorType.kA16_unorm_ColorType"]], "kargb_4444_colortype (colortype attribute)": [[46, "skia.ColorType.kARGB_4444_ColorType"]], "kalpha_8_colortype (colortype attribute)": [[46, "skia.ColorType.kAlpha_8_ColorType"]], "kbgra_1010102_colortype (colortype attribute)": [[46, "skia.ColorType.kBGRA_1010102_ColorType"]], "kbgra_8888_colortype (colortype attribute)": [[46, "skia.ColorType.kBGRA_8888_ColorType"]], "kbgr_101010x_colortype (colortype attribute)": [[46, "skia.ColorType.kBGR_101010x_ColorType"]], "kgray_8_colortype (colortype attribute)": [[46, "skia.ColorType.kGray_8_ColorType"]], "kn32_colortype (colortype attribute)": [[46, "skia.ColorType.kN32_ColorType"]], "kr16g16b16a16_unorm_colortype (colortype attribute)": [[46, "skia.ColorType.kR16G16B16A16_unorm_ColorType"]], "kr16g16_float_colortype (colortype attribute)": [[46, "skia.ColorType.kR16G16_float_ColorType"]], "kr16g16_unorm_colortype (colortype attribute)": [[46, "skia.ColorType.kR16G16_unorm_ColorType"]], "kr8g8_unorm_colortype (colortype attribute)": [[46, "skia.ColorType.kR8G8_unorm_ColorType"]], "krgba_1010102_colortype (colortype attribute)": [[46, "skia.ColorType.kRGBA_1010102_ColorType"]], "krgba_8888_colortype (colortype attribute)": [[46, "skia.ColorType.kRGBA_8888_ColorType"]], "krgba_f16norm_colortype (colortype attribute)": [[46, "skia.ColorType.kRGBA_F16Norm_ColorType"]], "krgba_f16_colortype (colortype attribute)": [[46, "skia.ColorType.kRGBA_F16_ColorType"]], "krgba_f32_colortype (colortype attribute)": [[46, "skia.ColorType.kRGBA_F32_ColorType"]], "krgb_101010x_colortype (colortype attribute)": [[46, "skia.ColorType.kRGB_101010x_ColorType"]], "krgb_565_colortype (colortype attribute)": [[46, "skia.ColorType.kRGB_565_ColorType"]], "krgb_888x_colortype (colortype attribute)": [[46, "skia.ColorType.kRGB_888x_ColorType"]], "kunknown_colortype (colortype attribute)": [[46, "skia.ColorType.kUnknown_ColorType"]], "name (colortype attribute)": [[46, "skia.ColorType.name"]], "value (colortype attribute)": [[46, "skia.ColorType.value"]], "convergemode (class in skia)": [[47, "skia.ConvergeMode"]], "__init__() (convergemode method)": [[47, "skia.ConvergeMode.__init__"]], "kdifference (convergemode attribute)": [[47, "skia.ConvergeMode.kDifference"]], "kintersect (convergemode attribute)": [[47, "skia.ConvergeMode.kIntersect"]], "klast (convergemode attribute)": [[47, "skia.ConvergeMode.kLast"]], "kreversedifference (convergemode attribute)": [[47, "skia.ConvergeMode.kReverseDifference"]], "kunion (convergemode attribute)": [[47, "skia.ConvergeMode.kUnion"]], "kxor (convergemode attribute)": [[47, "skia.ConvergeMode.kXor"]], "name (convergemode attribute)": [[47, "skia.ConvergeMode.name"]], "value (convergemode attribute)": [[47, "skia.ConvergeMode.value"]], "cornerpatheffect (class in skia)": [[48, "skia.CornerPathEffect"]], "make() (cornerpatheffect static method)": [[48, "skia.CornerPathEffect.Make"]], "__init__() (cornerpatheffect method)": [[48, "skia.CornerPathEffect.__init__"]], "b (cubicresampler attribute)": [[49, "skia.CubicResampler.B"]], "c (cubicresampler attribute)": [[49, "skia.CubicResampler.C"]], "catmullrom() (cubicresampler static method)": [[49, "skia.CubicResampler.CatmullRom"]], "cubicresampler (class in skia)": [[49, "skia.CubicResampler"]], "mitchell() (cubicresampler static method)": [[49, "skia.CubicResampler.Mitchell"]], "__init__() (cubicresampler method)": [[49, "skia.CubicResampler.__init__"]], "dashpatheffect (class in skia)": [[50, "skia.DashPathEffect"]], "make() (dashpatheffect static method)": [[50, "skia.DashPathEffect.Make"]], "__init__() (dashpatheffect method)": [[50, "skia.DashPathEffect.__init__"]], "data (class in skia)": [[51, "skia.Data"]], "makeempty() (data static method)": [[51, "skia.Data.MakeEmpty"]], "makefromfilename() (data static method)": [[51, "skia.Data.MakeFromFileName"]], "makesubset() (data static method)": [[51, "skia.Data.MakeSubset"]], "makeuninitialized() (data static method)": [[51, "skia.Data.MakeUninitialized"]], "makewithcopy() (data static method)": [[51, "skia.Data.MakeWithCopy"]], "makewithoutcopy() (data static method)": [[51, "skia.Data.MakeWithoutCopy"]], "__init__() (data method)": [[51, "skia.Data.__init__"]], "bytes() (data method)": [[51, "skia.Data.bytes"]], "copyrange() (data method)": [[51, "skia.Data.copyRange"]], "data() (data method)": [[51, "skia.Data.data"]], "deref() (data method)": [[51, "skia.Data.deref"]], "equals() (data method)": [[51, "skia.Data.equals"]], "isempty() (data method)": [[51, "skia.Data.isEmpty"]], "ref() (data method)": [[51, "skia.Data.ref"]], "refcntgreaterthan() (data method)": [[51, "skia.Data.refCntGreaterThan"]], "size() (data method)": [[51, "skia.Data.size"]], "unique() (data method)": [[51, "skia.Data.unique"]], "unref() (data method)": [[51, "skia.Data.unref"]], "writable_data() (data method)": [[51, "skia.Data.writable_data"]], "discretepatheffect (class in skia)": [[52, "skia.DiscretePathEffect"]], "make() (discretepatheffect static method)": [[52, "skia.DiscretePathEffect.Make"]], "__init__() (discretepatheffect method)": [[52, "skia.DiscretePathEffect.__init__"]], "document (class in skia)": [[53, "skia.Document"]], "__init__() (document method)": [[53, "skia.Document.__init__"]], "abort() (document method)": [[53, "skia.Document.abort"]], "beginpage() (document method)": [[53, "skia.Document.beginPage"]], "close() (document method)": [[53, "skia.Document.close"]], "endpage() (document method)": [[53, "skia.Document.endPage"]], "page() (document method)": [[53, "skia.Document.page"]], "ref() (document method)": [[53, "skia.Document.ref"]], "unique() (document method)": [[53, "skia.Document.unique"]], "unref() (document method)": [[53, "skia.Document.unref"]], "deserialize() (drawable static method)": [[54, "skia.Drawable.Deserialize"]], "drawable (class in skia)": [[54, "skia.Drawable"]], "__init__() (drawable method)": [[54, "skia.Drawable.__init__"]], "draw() (drawable method)": [[54, "skia.Drawable.draw"]], "getbounds() (drawable method)": [[54, "skia.Drawable.getBounds"]], "getflattenabletype() (drawable method)": [[54, "skia.Drawable.getFlattenableType"]], "getgenerationid() (drawable method)": [[54, "skia.Drawable.getGenerationID"]], "gettypename() (drawable method)": [[54, "skia.Drawable.getTypeName"]], "kcolorfilter_type (drawable attribute)": [[54, "skia.Drawable.kColorFilter_Type"]], "kdrawlooper_type (drawable attribute)": [[54, "skia.Drawable.kDrawLooper_Type"]], "kdrawable_type (drawable attribute)": [[54, "skia.Drawable.kDrawable_Type"]], "kimagefilter_type (drawable attribute)": [[54, "skia.Drawable.kImageFilter_Type"]], "kmaskfilter_type (drawable attribute)": [[54, "skia.Drawable.kMaskFilter_Type"]], "kpatheffect_type (drawable attribute)": [[54, "skia.Drawable.kPathEffect_Type"]], "newpicturesnapshot() (drawable method)": [[54, "skia.Drawable.newPictureSnapshot"]], "notifydrawingchanged() (drawable method)": [[54, "skia.Drawable.notifyDrawingChanged"]], "ref() (drawable method)": [[54, "skia.Drawable.ref"]], "serialize() (drawable method)": [[54, "skia.Drawable.serialize"]], "unique() (drawable method)": [[54, "skia.Drawable.unique"]], "unref() (drawable method)": [[54, "skia.Drawable.unref"]], "type (class in skia.drawable)": [[55, "skia.Drawable.Type"]], "dynamicmemorywstream (class in skia)": [[56, "skia.DynamicMemoryWStream"]], "sizeofpackeduint() (dynamicmemorywstream static method)": [[56, "skia.DynamicMemoryWStream.SizeOfPackedUInt"]], "__init__() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.__init__"]], "byteswritten() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.bytesWritten"]], "copyto() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.copyTo"]], "copytoandreset() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.copyToAndReset"]], "detachasdata() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.detachAsData"]], "detachasstream() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.detachAsStream"]], "flush() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.flush"]], "newline() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.newline"]], "padtoalign4() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.padToAlign4"]], "prependtoandreset() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.prependToAndReset"]], "read() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.read"]], "reset() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.reset"]], "write() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.write"]], "write16() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.write16"]], "write32() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.write32"]], "write8() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.write8"]], "writebigdecastext() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.writeBigDecAsText"]], "writebool() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.writeBool"]], "writedecastext() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.writeDecAsText"]], "writehexastext() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.writeHexAsText"]], "writepackeduint() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.writePackedUInt"]], "writescalar() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.writeScalar"]], "writescalarastext() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.writeScalarAsText"]], "writestream() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.writeStream"]], "writetext() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.writeText"]], "writetoandreset() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.writeToAndReset"]], "writetostream() (dynamicmemorywstream method)": [[56, "skia.DynamicMemoryWStream.writeToStream"]], "encodedimageformat (class in skia)": [[57, "skia.EncodedImageFormat"]], "__init__() (encodedimageformat method)": [[57, "skia.EncodedImageFormat.__init__"]], "kastc (encodedimageformat attribute)": [[57, "skia.EncodedImageFormat.kASTC"]], "kbmp (encodedimageformat attribute)": [[57, "skia.EncodedImageFormat.kBMP"]], "kdng (encodedimageformat attribute)": [[57, "skia.EncodedImageFormat.kDNG"]], "kgif (encodedimageformat attribute)": [[57, "skia.EncodedImageFormat.kGIF"]], "kheif (encodedimageformat attribute)": [[57, "skia.EncodedImageFormat.kHEIF"]], "kico (encodedimageformat attribute)": [[57, "skia.EncodedImageFormat.kICO"]], "kjpeg (encodedimageformat attribute)": [[57, "skia.EncodedImageFormat.kJPEG"]], "kktx (encodedimageformat attribute)": [[57, "skia.EncodedImageFormat.kKTX"]], "kpkm (encodedimageformat attribute)": [[57, "skia.EncodedImageFormat.kPKM"]], "kpng (encodedimageformat attribute)": [[57, "skia.EncodedImageFormat.kPNG"]], "kwbmp (encodedimageformat attribute)": [[57, "skia.EncodedImageFormat.kWBMP"]], "kwebp (encodedimageformat attribute)": [[57, "skia.EncodedImageFormat.kWEBP"]], "name (encodedimageformat attribute)": [[57, "skia.EncodedImageFormat.name"]], "value (encodedimageformat attribute)": [[57, "skia.EncodedImageFormat.value"]], "encodedorigin (class in skia)": [[58, "skia.EncodedOrigin"]], "__init__() (encodedorigin method)": [[58, "skia.EncodedOrigin.__init__"]], "kbottomleft_encodedorigin (encodedorigin attribute)": [[58, "skia.EncodedOrigin.kBottomLeft_EncodedOrigin"]], "kbottomright_encodedorigin (encodedorigin attribute)": [[58, "skia.EncodedOrigin.kBottomRight_EncodedOrigin"]], "kdefault_encodedorigin (encodedorigin attribute)": [[58, "skia.EncodedOrigin.kDefault_EncodedOrigin"]], "klast_encodedorigin (encodedorigin attribute)": [[58, "skia.EncodedOrigin.kLast_EncodedOrigin"]], "kleftbottom_encodedorigin (encodedorigin attribute)": [[58, "skia.EncodedOrigin.kLeftBottom_EncodedOrigin"]], "klefttop_encodedorigin (encodedorigin attribute)": [[58, "skia.EncodedOrigin.kLeftTop_EncodedOrigin"]], "krightbottom_encodedorigin (encodedorigin attribute)": [[58, "skia.EncodedOrigin.kRightBottom_EncodedOrigin"]], "krighttop_encodedorigin (encodedorigin attribute)": [[58, "skia.EncodedOrigin.kRightTop_EncodedOrigin"]], "ktopleft_encodedorigin (encodedorigin attribute)": [[58, "skia.EncodedOrigin.kTopLeft_EncodedOrigin"]], "ktopright_encodedorigin (encodedorigin attribute)": [[58, "skia.EncodedOrigin.kTopRight_EncodedOrigin"]], "name (encodedorigin attribute)": [[58, "skia.EncodedOrigin.name"]], "value (encodedorigin attribute)": [[58, "skia.EncodedOrigin.value"]], "filestream (class in skia)": [[59, "skia.FILEStream"]], "make() (filestream static method)": [[59, "skia.FILEStream.Make"]], "makefromfile() (filestream static method)": [[59, "skia.FILEStream.MakeFromFile"]], "__init__() (filestream method)": [[59, "skia.FILEStream.__init__"]], "close() (filestream method)": [[59, "skia.FILEStream.close"]], "duplicate() (filestream method)": [[59, "skia.FILEStream.duplicate"]], "fork() (filestream method)": [[59, "skia.FILEStream.fork"]], "getlength() (filestream method)": [[59, "skia.FILEStream.getLength"]], "getmemorybase() (filestream method)": [[59, "skia.FILEStream.getMemoryBase"]], "getposition() (filestream method)": [[59, "skia.FILEStream.getPosition"]], "haslength() (filestream method)": [[59, "skia.FILEStream.hasLength"]], "hasposition() (filestream method)": [[59, "skia.FILEStream.hasPosition"]], "isatend() (filestream method)": [[59, "skia.FILEStream.isAtEnd"]], "isvalid() (filestream method)": [[59, "skia.FILEStream.isValid"]], "move() (filestream method)": [[59, "skia.FILEStream.move"]], "peek() (filestream method)": [[59, "skia.FILEStream.peek"]], "read() (filestream method)": [[59, "skia.FILEStream.read"]], "readbool() (filestream method)": [[59, "skia.FILEStream.readBool"]], "readpackeduint() (filestream method)": [[59, "skia.FILEStream.readPackedUInt"]], "reads16() (filestream method)": [[59, "skia.FILEStream.readS16"]], "reads32() (filestream method)": [[59, "skia.FILEStream.readS32"]], "reads8() (filestream method)": [[59, "skia.FILEStream.readS8"]], "readscalar() (filestream method)": [[59, "skia.FILEStream.readScalar"]], "readu16() (filestream method)": [[59, "skia.FILEStream.readU16"]], "readu32() (filestream method)": [[59, "skia.FILEStream.readU32"]], "readu8() (filestream method)": [[59, "skia.FILEStream.readU8"]], "rewind() (filestream method)": [[59, "skia.FILEStream.rewind"]], "seek() (filestream method)": [[59, "skia.FILEStream.seek"]], "skip() (filestream method)": [[59, "skia.FILEStream.skip"]], "filewstream (class in skia)": [[60, "skia.FILEWStream"]], "sizeofpackeduint() (filewstream static method)": [[60, "skia.FILEWStream.SizeOfPackedUInt"]], "__init__() (filewstream method)": [[60, "skia.FILEWStream.__init__"]], "byteswritten() (filewstream method)": [[60, "skia.FILEWStream.bytesWritten"]], "flush() (filewstream method)": [[60, "skia.FILEWStream.flush"]], "fsync() (filewstream method)": [[60, "skia.FILEWStream.fsync"]], "isvalid() (filewstream method)": [[60, "skia.FILEWStream.isValid"]], "newline() (filewstream method)": [[60, "skia.FILEWStream.newline"]], "write() (filewstream method)": [[60, "skia.FILEWStream.write"]], "write16() (filewstream method)": [[60, "skia.FILEWStream.write16"]], "write32() (filewstream method)": [[60, "skia.FILEWStream.write32"]], "write8() (filewstream method)": [[60, "skia.FILEWStream.write8"]], "writebigdecastext() (filewstream method)": [[60, "skia.FILEWStream.writeBigDecAsText"]], "writebool() (filewstream method)": [[60, "skia.FILEWStream.writeBool"]], "writedecastext() (filewstream method)": [[60, "skia.FILEWStream.writeDecAsText"]], "writehexastext() (filewstream method)": [[60, "skia.FILEWStream.writeHexAsText"]], "writepackeduint() (filewstream method)": [[60, "skia.FILEWStream.writePackedUInt"]], "writescalar() (filewstream method)": [[60, "skia.FILEWStream.writeScalar"]], "writescalarastext() (filewstream method)": [[60, "skia.FILEWStream.writeScalarAsText"]], "writestream() (filewstream method)": [[60, "skia.FILEWStream.writeStream"]], "writetext() (filewstream method)": [[60, "skia.FILEWStream.writeText"]], "filtermode (class in skia)": [[61, "skia.FilterMode"]], "__init__() (filtermode method)": [[61, "skia.FilterMode.__init__"]], "klinear (filtermode attribute)": [[61, "skia.FilterMode.kLinear"]], "knearest (filtermode attribute)": [[61, "skia.FilterMode.kNearest"]], "name (filtermode attribute)": [[61, "skia.FilterMode.name"]], "value (filtermode attribute)": [[61, "skia.FilterMode.value"]], "deserialize() (flattanable static method)": [[62, "skia.Flattanable.Deserialize"]], "flattanable (class in skia)": [[62, "skia.Flattanable"]], "__init__() (flattanable method)": [[62, "skia.Flattanable.__init__"]], "getflattenabletype() (flattanable method)": [[62, "skia.Flattanable.getFlattenableType"]], "gettypename() (flattanable method)": [[62, "skia.Flattanable.getTypeName"]], "kcolorfilter_type (flattanable attribute)": [[62, "skia.Flattanable.kColorFilter_Type"]], "kdrawlooper_type (flattanable attribute)": [[62, "skia.Flattanable.kDrawLooper_Type"]], "kdrawable_type (flattanable attribute)": [[62, "skia.Flattanable.kDrawable_Type"]], "kimagefilter_type (flattanable attribute)": [[62, "skia.Flattanable.kImageFilter_Type"]], "kmaskfilter_type (flattanable attribute)": [[62, "skia.Flattanable.kMaskFilter_Type"]], "kpatheffect_type (flattanable attribute)": [[62, "skia.Flattanable.kPathEffect_Type"]], "ref() (flattanable method)": [[62, "skia.Flattanable.ref"]], "serialize() (flattanable method)": [[62, "skia.Flattanable.serialize"]], "unique() (flattanable method)": [[62, "skia.Flattanable.unique"]], "unref() (flattanable method)": [[62, "skia.Flattanable.unref"]], "type (class in skia.flattanable)": [[63, "skia.Flattanable.Type"]], "font (class in skia)": [[64, "skia.Font"]], "__init__() (font method)": [[64, "skia.Font.__init__"]], "counttext() (font method)": [[64, "skia.Font.countText"]], "dump() (font method)": [[64, "skia.Font.dump"]], "getbounds() (font method)": [[64, "skia.Font.getBounds"]], "getedging() (font method)": [[64, "skia.Font.getEdging"]], "gethinting() (font method)": [[64, "skia.Font.getHinting"]], "getmetrics() (font method)": [[64, "skia.Font.getMetrics"]], "getpath() (font method)": [[64, "skia.Font.getPath"]], "getpaths() (font method)": [[64, "skia.Font.getPaths"]], "getpos() (font method)": [[64, "skia.Font.getPos"]], "getscalex() (font method)": [[64, "skia.Font.getScaleX"]], "getsize() (font method)": [[64, "skia.Font.getSize"]], "getskewx() (font method)": [[64, "skia.Font.getSkewX"]], "getspacing() (font method)": [[64, "skia.Font.getSpacing"]], "gettypeface() (font method)": [[64, "skia.Font.getTypeface"]], "getwidths() (font method)": [[64, "skia.Font.getWidths"]], "getwidthsbounds() (font method)": [[64, "skia.Font.getWidthsBounds"]], "getxpos() (font method)": [[64, "skia.Font.getXPos"]], "isbaselinesnap() (font method)": [[64, "skia.Font.isBaselineSnap"]], "isembeddedbitmaps() (font method)": [[64, "skia.Font.isEmbeddedBitmaps"]], "isembolden() (font method)": [[64, "skia.Font.isEmbolden"]], "isforceautohinting() (font method)": [[64, "skia.Font.isForceAutoHinting"]], "islinearmetrics() (font method)": [[64, "skia.Font.isLinearMetrics"]], "issubpixel() (font method)": [[64, "skia.Font.isSubpixel"]], "kalias (font attribute)": [[64, "skia.Font.kAlias"]], "kantialias (font attribute)": [[64, "skia.Font.kAntiAlias"]], "ksubpixelantialias (font attribute)": [[64, "skia.Font.kSubpixelAntiAlias"]], "makewithsize() (font method)": [[64, "skia.Font.makeWithSize"]], "measuretext() (font method)": [[64, "skia.Font.measureText"]], "reftypeface() (font method)": [[64, "skia.Font.refTypeface"]], "setbaselinesnap() (font method)": [[64, "skia.Font.setBaselineSnap"]], "setedging() (font method)": [[64, "skia.Font.setEdging"]], "setembeddedbitmaps() (font method)": [[64, "skia.Font.setEmbeddedBitmaps"]], "setembolden() (font method)": [[64, "skia.Font.setEmbolden"]], "setforceautohinting() (font method)": [[64, "skia.Font.setForceAutoHinting"]], "sethinting() (font method)": [[64, "skia.Font.setHinting"]], "setlinearmetrics() (font method)": [[64, "skia.Font.setLinearMetrics"]], "setscalex() (font method)": [[64, "skia.Font.setScaleX"]], "setsize() (font method)": [[64, "skia.Font.setSize"]], "setskewx() (font method)": [[64, "skia.Font.setSkewX"]], "setsubpixel() (font method)": [[64, "skia.Font.setSubpixel"]], "settypeface() (font method)": [[64, "skia.Font.setTypeface"]], "texttoglyphs() (font method)": [[64, "skia.Font.textToGlyphs"]], "unichartoglyph() (font method)": [[64, "skia.Font.unicharToGlyph"]], "unicharstoglyphs() (font method)": [[64, "skia.Font.unicharsToGlyphs"]], "edging (class in skia.font)": [[65, "skia.Font.Edging"]], "__init__() (edging method)": [[65, "skia.Font.Edging.__init__"]], "kalias (edging attribute)": [[65, "skia.Font.Edging.kAlias"]], "kantialias (edging attribute)": [[65, "skia.Font.Edging.kAntiAlias"]], "ksubpixelantialias (edging attribute)": [[65, "skia.Font.Edging.kSubpixelAntiAlias"]], "name (edging attribute)": [[65, "skia.Font.Edging.name"]], "value (edging attribute)": [[65, "skia.Font.Edging.value"]], "fontarguments (class in skia)": [[66, "skia.FontArguments"]], "__init__() (fontarguments method)": [[66, "skia.FontArguments.__init__"]], "getcollectionindex() (fontarguments method)": [[66, "skia.FontArguments.getCollectionIndex"]], "getvariationdesignposition() (fontarguments method)": [[66, "skia.FontArguments.getVariationDesignPosition"]], "setcollectionindex() (fontarguments method)": [[66, "skia.FontArguments.setCollectionIndex"]], "setvariationdesignposition() (fontarguments method)": [[66, "skia.FontArguments.setVariationDesignPosition"]], "variationposition (class in skia.fontarguments)": [[67, "skia.FontArguments.VariationPosition"]], "__init__() (variationposition method)": [[67, "skia.FontArguments.VariationPosition.__init__"]], "coordinatecount (variationposition attribute)": [[67, "skia.FontArguments.VariationPosition.coordinateCount"]], "coordinates (variationposition attribute)": [[67, "skia.FontArguments.VariationPosition.coordinates"]], "coordinate (class in skia.fontarguments.variationposition)": [[68, "skia.FontArguments.VariationPosition.Coordinate"]], "__init__() (coordinate method)": [[68, "skia.FontArguments.VariationPosition.Coordinate.__init__"]], "axis (coordinate attribute)": [[68, "skia.FontArguments.VariationPosition.Coordinate.axis"]], "value (coordinate attribute)": [[68, "skia.FontArguments.VariationPosition.Coordinate.value"]], "coordinates (class in skia.fontarguments.variationposition)": [[69, "skia.FontArguments.VariationPosition.Coordinates"]], "__init__() (coordinates method)": [[69, "skia.FontArguments.VariationPosition.Coordinates.__init__"]], "append() (coordinates method)": [[69, "skia.FontArguments.VariationPosition.Coordinates.append"]], "clear() (coordinates method)": [[69, "skia.FontArguments.VariationPosition.Coordinates.clear"]], "extend() (coordinates method)": [[69, "skia.FontArguments.VariationPosition.Coordinates.extend"]], "insert() (coordinates method)": [[69, "skia.FontArguments.VariationPosition.Coordinates.insert"]], "pop() (coordinates method)": [[69, "skia.FontArguments.VariationPosition.Coordinates.pop"]], "fonthinting (class in skia)": [[70, "skia.FontHinting"]], "__init__() (fonthinting method)": [[70, "skia.FontHinting.__init__"]], "kfull (fonthinting attribute)": [[70, "skia.FontHinting.kFull"]], "knone (fonthinting attribute)": [[70, "skia.FontHinting.kNone"]], "knormal (fonthinting attribute)": [[70, "skia.FontHinting.kNormal"]], "kslight (fonthinting attribute)": [[70, "skia.FontHinting.kSlight"]], "name (fonthinting attribute)": [[70, "skia.FontHinting.name"]], "value (fonthinting attribute)": [[70, "skia.FontHinting.value"]], "fontmetrics (class in skia)": [[71, "skia.FontMetrics"]], "__init__() (fontmetrics method)": [[71, "skia.FontMetrics.__init__"]], "fascent (fontmetrics attribute)": [[71, "skia.FontMetrics.fAscent"]], "favgcharwidth (fontmetrics attribute)": [[71, "skia.FontMetrics.fAvgCharWidth"]], "fbottom (fontmetrics attribute)": [[71, "skia.FontMetrics.fBottom"]], "fcapheight (fontmetrics attribute)": [[71, "skia.FontMetrics.fCapHeight"]], "fdescent (fontmetrics attribute)": [[71, "skia.FontMetrics.fDescent"]], "fflags (fontmetrics attribute)": [[71, "skia.FontMetrics.fFlags"]], "fleading (fontmetrics attribute)": [[71, "skia.FontMetrics.fLeading"]], "fmaxcharwidth (fontmetrics attribute)": [[71, "skia.FontMetrics.fMaxCharWidth"]], "fstrikeoutposition (fontmetrics attribute)": [[71, "skia.FontMetrics.fStrikeoutPosition"]], "fstrikeoutthickness (fontmetrics attribute)": [[71, "skia.FontMetrics.fStrikeoutThickness"]], "ftop (fontmetrics attribute)": [[71, "skia.FontMetrics.fTop"]], "funderlineposition (fontmetrics attribute)": [[71, "skia.FontMetrics.fUnderlinePosition"]], "funderlinethickness (fontmetrics attribute)": [[71, "skia.FontMetrics.fUnderlineThickness"]], "fxheight (fontmetrics attribute)": [[71, "skia.FontMetrics.fXHeight"]], "fxmax (fontmetrics attribute)": [[71, "skia.FontMetrics.fXMax"]], "fxmin (fontmetrics attribute)": [[71, "skia.FontMetrics.fXMin"]], "hasstrikeoutposition() (fontmetrics method)": [[71, "skia.FontMetrics.hasStrikeoutPosition"]], "hasstrikeoutthickness() (fontmetrics method)": [[71, "skia.FontMetrics.hasStrikeoutThickness"]], "hasunderlineposition() (fontmetrics method)": [[71, "skia.FontMetrics.hasUnderlinePosition"]], "hasunderlinethickness() (fontmetrics method)": [[71, "skia.FontMetrics.hasUnderlineThickness"]], "kstrikeoutpositionisvalid_flag (fontmetrics attribute)": [[71, "skia.FontMetrics.kStrikeoutPositionIsValid_Flag"]], "kstrikeoutthicknessisvalid_flag (fontmetrics attribute)": [[71, "skia.FontMetrics.kStrikeoutThicknessIsValid_Flag"]], "kunderlinepositionisvalid_flag (fontmetrics attribute)": [[71, "skia.FontMetrics.kUnderlinePositionIsValid_Flag"]], "kunderlinethicknessisvalid_flag (fontmetrics attribute)": [[71, "skia.FontMetrics.kUnderlineThicknessIsValid_Flag"]], "fontmetricsflags (class in skia.fontmetrics)": [[72, "skia.FontMetrics.FontMetricsFlags"]], "__init__() (fontmetricsflags method)": [[72, "skia.FontMetrics.FontMetricsFlags.__init__"]], "kstrikeoutpositionisvalid_flag (fontmetricsflags attribute)": [[72, "skia.FontMetrics.FontMetricsFlags.kStrikeoutPositionIsValid_Flag"]], "kstrikeoutthicknessisvalid_flag (fontmetricsflags attribute)": [[72, "skia.FontMetrics.FontMetricsFlags.kStrikeoutThicknessIsValid_Flag"]], "kunderlinepositionisvalid_flag (fontmetricsflags attribute)": [[72, "skia.FontMetrics.FontMetricsFlags.kUnderlinePositionIsValid_Flag"]], "kunderlinethicknessisvalid_flag (fontmetricsflags attribute)": [[72, "skia.FontMetrics.FontMetricsFlags.kUnderlineThicknessIsValid_Flag"]], "name (fontmetricsflags attribute)": [[72, "skia.FontMetrics.FontMetricsFlags.name"]], "value (fontmetricsflags attribute)": [[72, "skia.FontMetrics.FontMetricsFlags.value"]], "fontmgr (class in skia)": [[73, "skia.FontMgr"]], "new_custom_directory() (fontmgr static method)": [[73, "skia.FontMgr.New_Custom_Directory"]], "new_custom_empty() (fontmgr static method)": [[73, "skia.FontMgr.New_Custom_Empty"]], "onefontmgr() (fontmgr method)": [[73, "skia.FontMgr.OneFontMgr"]], "refdefault() (fontmgr static method)": [[73, "skia.FontMgr.RefDefault"]], "__init__() (fontmgr method)": [[73, "skia.FontMgr.__init__"]], "countfamilies() (fontmgr method)": [[73, "skia.FontMgr.countFamilies"]], "createstyleset() (fontmgr method)": [[73, "skia.FontMgr.createStyleSet"]], "getfamilyname() (fontmgr method)": [[73, "skia.FontMgr.getFamilyName"]], "legacymaketypeface() (fontmgr method)": [[73, "skia.FontMgr.legacyMakeTypeface"]], "makefromdata() (fontmgr method)": [[73, "skia.FontMgr.makeFromData"]], "makefromfile() (fontmgr method)": [[73, "skia.FontMgr.makeFromFile"]], "matchfamily() (fontmgr method)": [[73, "skia.FontMgr.matchFamily"]], "matchfamilystyle() (fontmgr method)": [[73, "skia.FontMgr.matchFamilyStyle"]], "matchfamilystylecharacter() (fontmgr method)": [[73, "skia.FontMgr.matchFamilyStyleCharacter"]], "ref() (fontmgr method)": [[73, "skia.FontMgr.ref"]], "unique() (fontmgr method)": [[73, "skia.FontMgr.unique"]], "unref() (fontmgr method)": [[73, "skia.FontMgr.unref"]], "fontparameters (class in skia)": [[74, "skia.FontParameters"]], "__init__() (fontparameters method)": [[74, "skia.FontParameters.__init__"]], "variation (class in skia.fontparameters)": [[75, "skia.FontParameters.Variation"]], "__init__() (variation method)": [[75, "skia.FontParameters.Variation.__init__"]], "axis (class in skia.fontparameters.variation)": [[76, "skia.FontParameters.Variation.Axis"]], "__init__() (axis method)": [[76, "skia.FontParameters.Variation.Axis.__init__"]], "def (axis attribute)": [[76, "skia.FontParameters.Variation.Axis.def"]], "ishidden() (axis method)": [[76, "skia.FontParameters.Variation.Axis.isHidden"]], "max (axis attribute)": [[76, "skia.FontParameters.Variation.Axis.max"]], "min (axis attribute)": [[76, "skia.FontParameters.Variation.Axis.min"]], "sethidden() (axis method)": [[76, "skia.FontParameters.Variation.Axis.setHidden"]], "tag (axis attribute)": [[76, "skia.FontParameters.Variation.Axis.tag"]], "bold() (fontstyle static method)": [[77, "skia.FontStyle.Bold"]], "bolditalic() (fontstyle static method)": [[77, "skia.FontStyle.BoldItalic"]], "fontstyle (class in skia)": [[77, "skia.FontStyle"]], "italic() (fontstyle static method)": [[77, "skia.FontStyle.Italic"]], "normal() (fontstyle static method)": [[77, "skia.FontStyle.Normal"]], "__init__() (fontstyle method)": [[77, "skia.FontStyle.__init__"]], "kblack_weight (fontstyle attribute)": [[77, "skia.FontStyle.kBlack_Weight"]], "kbold_weight (fontstyle attribute)": [[77, "skia.FontStyle.kBold_Weight"]], "kcondensed_width (fontstyle attribute)": [[77, "skia.FontStyle.kCondensed_Width"]], "kexpanded_width (fontstyle attribute)": [[77, "skia.FontStyle.kExpanded_Width"]], "kextrablack_weight (fontstyle attribute)": [[77, "skia.FontStyle.kExtraBlack_Weight"]], "kextrabold_weight (fontstyle attribute)": [[77, "skia.FontStyle.kExtraBold_Weight"]], "kextracondensed_width (fontstyle attribute)": [[77, "skia.FontStyle.kExtraCondensed_Width"]], "kextraexpanded_width (fontstyle attribute)": [[77, "skia.FontStyle.kExtraExpanded_Width"]], "kextralight_weight (fontstyle attribute)": [[77, "skia.FontStyle.kExtraLight_Weight"]], "kinvisible_weight (fontstyle attribute)": [[77, "skia.FontStyle.kInvisible_Weight"]], "kitalic_slant (fontstyle attribute)": [[77, "skia.FontStyle.kItalic_Slant"]], "klight_weight (fontstyle attribute)": [[77, "skia.FontStyle.kLight_Weight"]], "kmedium_weight (fontstyle attribute)": [[77, "skia.FontStyle.kMedium_Weight"]], "knormal_weight (fontstyle attribute)": [[77, "skia.FontStyle.kNormal_Weight"]], "knormal_width (fontstyle attribute)": [[77, "skia.FontStyle.kNormal_Width"]], "koblique_slant (fontstyle attribute)": [[77, "skia.FontStyle.kOblique_Slant"]], "ksemibold_weight (fontstyle attribute)": [[77, "skia.FontStyle.kSemiBold_Weight"]], "ksemicondensed_width (fontstyle attribute)": [[77, "skia.FontStyle.kSemiCondensed_Width"]], "ksemiexpanded_width (fontstyle attribute)": [[77, "skia.FontStyle.kSemiExpanded_Width"]], "kthin_weight (fontstyle attribute)": [[77, "skia.FontStyle.kThin_Weight"]], "kultracondensed_width (fontstyle attribute)": [[77, "skia.FontStyle.kUltraCondensed_Width"]], "kultraexpanded_width (fontstyle attribute)": [[77, "skia.FontStyle.kUltraExpanded_Width"]], "kupright_slant (fontstyle attribute)": [[77, "skia.FontStyle.kUpright_Slant"]], "slant() (fontstyle method)": [[77, "skia.FontStyle.slant"]], "weight() (fontstyle method)": [[77, "skia.FontStyle.weight"]], "width() (fontstyle method)": [[77, "skia.FontStyle.width"]], "slant (class in skia.fontstyle)": [[78, "skia.FontStyle.Slant"]], "__init__() (slant method)": [[78, "skia.FontStyle.Slant.__init__"]], "kitalic_slant (slant attribute)": [[78, "skia.FontStyle.Slant.kItalic_Slant"]], "koblique_slant (slant attribute)": [[78, "skia.FontStyle.Slant.kOblique_Slant"]], "kupright_slant (slant attribute)": [[78, "skia.FontStyle.Slant.kUpright_Slant"]], "name (slant attribute)": [[78, "skia.FontStyle.Slant.name"]], "value (slant attribute)": [[78, "skia.FontStyle.Slant.value"]], "weight (class in skia.fontstyle)": [[79, "skia.FontStyle.Weight"]], "__init__() (weight method)": [[79, "skia.FontStyle.Weight.__init__"]], "kblack_weight (weight attribute)": [[79, "skia.FontStyle.Weight.kBlack_Weight"]], "kbold_weight (weight attribute)": [[79, "skia.FontStyle.Weight.kBold_Weight"]], "kextrablack_weight (weight attribute)": [[79, "skia.FontStyle.Weight.kExtraBlack_Weight"]], "kextrabold_weight (weight attribute)": [[79, "skia.FontStyle.Weight.kExtraBold_Weight"]], "kextralight_weight (weight attribute)": [[79, "skia.FontStyle.Weight.kExtraLight_Weight"]], "kinvisible_weight (weight attribute)": [[79, "skia.FontStyle.Weight.kInvisible_Weight"]], "klight_weight (weight attribute)": [[79, "skia.FontStyle.Weight.kLight_Weight"]], "kmedium_weight (weight attribute)": [[79, "skia.FontStyle.Weight.kMedium_Weight"]], "knormal_weight (weight attribute)": [[79, "skia.FontStyle.Weight.kNormal_Weight"]], "ksemibold_weight (weight attribute)": [[79, "skia.FontStyle.Weight.kSemiBold_Weight"]], "kthin_weight (weight attribute)": [[79, "skia.FontStyle.Weight.kThin_Weight"]], "name (weight attribute)": [[79, "skia.FontStyle.Weight.name"]], "value (weight attribute)": [[79, "skia.FontStyle.Weight.value"]], "width (class in skia.fontstyle)": [[80, "skia.FontStyle.Width"]], "__init__() (width method)": [[80, "skia.FontStyle.Width.__init__"]], "kcondensed_width (width attribute)": [[80, "skia.FontStyle.Width.kCondensed_Width"]], "kexpanded_width (width attribute)": [[80, "skia.FontStyle.Width.kExpanded_Width"]], "kextracondensed_width (width attribute)": [[80, "skia.FontStyle.Width.kExtraCondensed_Width"]], "kextraexpanded_width (width attribute)": [[80, "skia.FontStyle.Width.kExtraExpanded_Width"]], "knormal_width (width attribute)": [[80, "skia.FontStyle.Width.kNormal_Width"]], "ksemicondensed_width (width attribute)": [[80, "skia.FontStyle.Width.kSemiCondensed_Width"]], "ksemiexpanded_width (width attribute)": [[80, "skia.FontStyle.Width.kSemiExpanded_Width"]], "kultracondensed_width (width attribute)": [[80, "skia.FontStyle.Width.kUltraCondensed_Width"]], "kultraexpanded_width (width attribute)": [[80, "skia.FontStyle.Width.kUltraExpanded_Width"]], "name (width attribute)": [[80, "skia.FontStyle.Width.name"]], "value (width attribute)": [[80, "skia.FontStyle.Width.value"]], "createempty() (fontstyleset static method)": [[81, "skia.FontStyleSet.CreateEmpty"]], "fontstyleset (class in skia)": [[81, "skia.FontStyleSet"]], "__init__() (fontstyleset method)": [[81, "skia.FontStyleSet.__init__"]], "count() (fontstyleset method)": [[81, "skia.FontStyleSet.count"]], "createtypeface() (fontstyleset method)": [[81, "skia.FontStyleSet.createTypeface"]], "getstyle() (fontstyleset method)": [[81, "skia.FontStyleSet.getStyle"]], "matchstyle() (fontstyleset method)": [[81, "skia.FontStyleSet.matchStyle"]], "ref() (fontstyleset method)": [[81, "skia.FontStyleSet.ref"]], "unique() (fontstyleset method)": [[81, "skia.FontStyleSet.unique"]], "unref() (fontstyleset method)": [[81, "skia.FontStyleSet.unref"]], "grbackendapi (class in skia)": [[82, "skia.GrBackendApi"]], "__init__() (grbackendapi method)": [[82, "skia.GrBackendApi.__init__"]], "kdirect3d (grbackendapi attribute)": [[82, "skia.GrBackendApi.kDirect3D"]], "kmetal (grbackendapi attribute)": [[82, "skia.GrBackendApi.kMetal"]], "kmock (grbackendapi attribute)": [[82, "skia.GrBackendApi.kMock"]], "kopengl (grbackendapi attribute)": [[82, "skia.GrBackendApi.kOpenGL"]], "kopengl_grbackend (grbackendapi attribute)": [[82, "skia.GrBackendApi.kOpenGL_GrBackend"]], "kvulkan (grbackendapi attribute)": [[82, "skia.GrBackendApi.kVulkan"]], "name (grbackendapi attribute)": [[82, "skia.GrBackendApi.name"]], "value (grbackendapi attribute)": [[82, "skia.GrBackendApi.value"]], "grbackendformat (class in skia)": [[83, "skia.GrBackendFormat"]], "makegl() (grbackendformat static method)": [[83, "skia.GrBackendFormat.MakeGL"]], "makemock() (grbackendformat static method)": [[83, "skia.GrBackendFormat.MakeMock"]], "makevk() (grbackendformat static method)": [[83, "skia.GrBackendFormat.MakeVk"]], "__init__() (grbackendformat method)": [[83, "skia.GrBackendFormat.__init__"]], "asglformat() (grbackendformat method)": [[83, "skia.GrBackendFormat.asGLFormat"]], "asmockcolortype() (grbackendformat method)": [[83, "skia.GrBackendFormat.asMockColorType"]], "asmockcompressiontype() (grbackendformat method)": [[83, "skia.GrBackendFormat.asMockCompressionType"]], "asvkformat() (grbackendformat method)": [[83, "skia.GrBackendFormat.asVkFormat"]], "backend() (grbackendformat method)": [[83, "skia.GrBackendFormat.backend"]], "channelmask() (grbackendformat method)": [[83, "skia.GrBackendFormat.channelMask"]], "getvkycbcrconversioninfo() (grbackendformat method)": [[83, "skia.GrBackendFormat.getVkYcbcrConversionInfo"]], "isvalid() (grbackendformat method)": [[83, "skia.GrBackendFormat.isValid"]], "maketexture2d() (grbackendformat method)": [[83, "skia.GrBackendFormat.makeTexture2D"]], "texturetype() (grbackendformat method)": [[83, "skia.GrBackendFormat.textureType"]], "grbackendrendertarget (class in skia)": [[84, "skia.GrBackendRenderTarget"]], "makegl() (grbackendrendertarget static method)": [[84, "skia.GrBackendRenderTarget.MakeGL"]], "__init__() (grbackendrendertarget method)": [[84, "skia.GrBackendRenderTarget.__init__"]], "backend() (grbackendrendertarget method)": [[84, "skia.GrBackendRenderTarget.backend"]], "dimensions() (grbackendrendertarget method)": [[84, "skia.GrBackendRenderTarget.dimensions"]], "getbackendformat() (grbackendrendertarget method)": [[84, "skia.GrBackendRenderTarget.getBackendFormat"]], "getglframebufferinfo() (grbackendrendertarget method)": [[84, "skia.GrBackendRenderTarget.getGLFramebufferInfo"]], "getmockrendertargetinfo() (grbackendrendertarget method)": [[84, "skia.GrBackendRenderTarget.getMockRenderTargetInfo"]], "getvkimageinfo() (grbackendrendertarget method)": [[84, "skia.GrBackendRenderTarget.getVkImageInfo"]], "height() (grbackendrendertarget method)": [[84, "skia.GrBackendRenderTarget.height"]], "isframebufferonly() (grbackendrendertarget method)": [[84, "skia.GrBackendRenderTarget.isFramebufferOnly"]], "isprotected() (grbackendrendertarget method)": [[84, "skia.GrBackendRenderTarget.isProtected"]], "isvalid() (grbackendrendertarget method)": [[84, "skia.GrBackendRenderTarget.isValid"]], "samplecnt() (grbackendrendertarget method)": [[84, "skia.GrBackendRenderTarget.sampleCnt"]], "setvkimagelayout() (grbackendrendertarget method)": [[84, "skia.GrBackendRenderTarget.setVkImageLayout"]], "stencilbits() (grbackendrendertarget method)": [[84, "skia.GrBackendRenderTarget.stencilBits"]], "width() (grbackendrendertarget method)": [[84, "skia.GrBackendRenderTarget.width"]], "grbackendrendertargets (in module skia)": [[85, "skia.GrBackendRenderTargets"]], "makegl() (grbackendrendertargets static method)": [[85, "skia.GrBackendRenderTargets.MakeGL"]], "__init__() (grbackendrendertargets method)": [[85, "skia.GrBackendRenderTargets.__init__"]], "backend() (grbackendrendertargets method)": [[85, "skia.GrBackendRenderTargets.backend"]], "dimensions() (grbackendrendertargets method)": [[85, "skia.GrBackendRenderTargets.dimensions"]], "getbackendformat() (grbackendrendertargets method)": [[85, "skia.GrBackendRenderTargets.getBackendFormat"]], "getglframebufferinfo() (grbackendrendertargets method)": [[85, "skia.GrBackendRenderTargets.getGLFramebufferInfo"]], "getmockrendertargetinfo() (grbackendrendertargets method)": [[85, "skia.GrBackendRenderTargets.getMockRenderTargetInfo"]], "getvkimageinfo() (grbackendrendertargets method)": [[85, "skia.GrBackendRenderTargets.getVkImageInfo"]], "height() (grbackendrendertargets method)": [[85, "skia.GrBackendRenderTargets.height"]], "isframebufferonly() (grbackendrendertargets method)": [[85, "skia.GrBackendRenderTargets.isFramebufferOnly"]], "isprotected() (grbackendrendertargets method)": [[85, "skia.GrBackendRenderTargets.isProtected"]], "isvalid() (grbackendrendertargets method)": [[85, "skia.GrBackendRenderTargets.isValid"]], "samplecnt() (grbackendrendertargets method)": [[85, "skia.GrBackendRenderTargets.sampleCnt"]], "setvkimagelayout() (grbackendrendertargets method)": [[85, "skia.GrBackendRenderTargets.setVkImageLayout"]], "stencilbits() (grbackendrendertargets method)": [[85, "skia.GrBackendRenderTargets.stencilBits"]], "width() (grbackendrendertargets method)": [[85, "skia.GrBackendRenderTargets.width"]], "grbackendsemaphore (class in skia)": [[86, "skia.GrBackendSemaphore"]], "makevk() (grbackendsemaphore static method)": [[86, "skia.GrBackendSemaphore.MakeVk"]], "__init__() (grbackendsemaphore method)": [[86, "skia.GrBackendSemaphore.__init__"]], "isinitialized() (grbackendsemaphore method)": [[86, "skia.GrBackendSemaphore.isInitialized"]], "vksemaphore() (grbackendsemaphore method)": [[86, "skia.GrBackendSemaphore.vkSemaphore"]], "grbackendtexture (class in skia)": [[87, "skia.GrBackendTexture"]], "__init__() (grbackendtexture method)": [[87, "skia.GrBackendTexture.__init__"]], "backend() (grbackendtexture method)": [[87, "skia.GrBackendTexture.backend"]], "dimensions() (grbackendtexture method)": [[87, "skia.GrBackendTexture.dimensions"]], "getbackendformat() (grbackendtexture method)": [[87, "skia.GrBackendTexture.getBackendFormat"]], "getgltextureinfo() (grbackendtexture method)": [[87, "skia.GrBackendTexture.getGLTextureInfo"]], "getmocktextureinfo() (grbackendtexture method)": [[87, "skia.GrBackendTexture.getMockTextureInfo"]], "getvkimageinfo() (grbackendtexture method)": [[87, "skia.GrBackendTexture.getVkImageInfo"]], "gltextureparametersmodified() (grbackendtexture method)": [[87, "skia.GrBackendTexture.glTextureParametersModified"]], "hasmipmaps() (grbackendtexture method)": [[87, "skia.GrBackendTexture.hasMipmaps"]], "height() (grbackendtexture method)": [[87, "skia.GrBackendTexture.height"]], "isprotected() (grbackendtexture method)": [[87, "skia.GrBackendTexture.isProtected"]], "issametexture() (grbackendtexture method)": [[87, "skia.GrBackendTexture.isSameTexture"]], "isvalid() (grbackendtexture method)": [[87, "skia.GrBackendTexture.isValid"]], "setmutablestate() (grbackendtexture method)": [[87, "skia.GrBackendTexture.setMutableState"]], "setvkimagelayout() (grbackendtexture method)": [[87, "skia.GrBackendTexture.setVkImageLayout"]], "width() (grbackendtexture method)": [[87, "skia.GrBackendTexture.width"]], "grcolortype (class in skia)": [[88, "skia.GrColorType"]], "__init__() (grcolortype method)": [[88, "skia.GrColorType.__init__"]], "kabgr_4444 (grcolortype attribute)": [[88, "skia.GrColorType.kABGR_4444"]], "kalpha_16 (grcolortype attribute)": [[88, "skia.GrColorType.kAlpha_16"]], "kalpha_8 (grcolortype attribute)": [[88, "skia.GrColorType.kAlpha_8"]], "kalpha_8xxx (grcolortype attribute)": [[88, "skia.GrColorType.kAlpha_8xxx"]], "kalpha_f16 (grcolortype attribute)": [[88, "skia.GrColorType.kAlpha_F16"]], "kalpha_f32xxx (grcolortype attribute)": [[88, "skia.GrColorType.kAlpha_F32xxx"]], "kbgra_8888 (grcolortype attribute)": [[88, "skia.GrColorType.kBGRA_8888"]], "kbgr_565 (grcolortype attribute)": [[88, "skia.GrColorType.kBGR_565"]], "kgray_8 (grcolortype attribute)": [[88, "skia.GrColorType.kGray_8"]], "kgray_8xxx (grcolortype attribute)": [[88, "skia.GrColorType.kGray_8xxx"]], "kgray_f16 (grcolortype attribute)": [[88, "skia.GrColorType.kGray_F16"]], "klast (grcolortype attribute)": [[88, "skia.GrColorType.kLast"]], "krgba_1010102 (grcolortype attribute)": [[88, "skia.GrColorType.kRGBA_1010102"]], "krgba_16161616 (grcolortype attribute)": [[88, "skia.GrColorType.kRGBA_16161616"]], "krgba_8888 (grcolortype attribute)": [[88, "skia.GrColorType.kRGBA_8888"]], "krgba_8888_srgb (grcolortype attribute)": [[88, "skia.GrColorType.kRGBA_8888_SRGB"]], "krgba_f16 (grcolortype attribute)": [[88, "skia.GrColorType.kRGBA_F16"]], "krgba_f16_clamped (grcolortype attribute)": [[88, "skia.GrColorType.kRGBA_F16_Clamped"]], "krgba_f32 (grcolortype attribute)": [[88, "skia.GrColorType.kRGBA_F32"]], "krgb_888 (grcolortype attribute)": [[88, "skia.GrColorType.kRGB_888"]], "krgb_888x (grcolortype attribute)": [[88, "skia.GrColorType.kRGB_888x"]], "krg_1616 (grcolortype attribute)": [[88, "skia.GrColorType.kRG_1616"]], "krg_88 (grcolortype attribute)": [[88, "skia.GrColorType.kRG_88"]], "krg_f16 (grcolortype attribute)": [[88, "skia.GrColorType.kRG_F16"]], "kr_16 (grcolortype attribute)": [[88, "skia.GrColorType.kR_16"]], "kr_8 (grcolortype attribute)": [[88, "skia.GrColorType.kR_8"]], "kr_f16 (grcolortype attribute)": [[88, "skia.GrColorType.kR_F16"]], "kunknown (grcolortype attribute)": [[88, "skia.GrColorType.kUnknown"]], "name (grcolortype attribute)": [[88, "skia.GrColorType.name"]], "value (grcolortype attribute)": [[88, "skia.GrColorType.value"]], "computeimagesize() (grcontext static method)": [[89, "skia.GrContext.ComputeImageSize"]], "grcontext (in module skia)": [[89, "skia.GrContext"]], "makegl() (grcontext static method)": [[89, "skia.GrContext.MakeGL"]], "makemock() (grcontext static method)": [[89, "skia.GrContext.MakeMock"]], "makevulkan() (grcontext static method)": [[89, "skia.GrContext.MakeVulkan"]], "__init__() (grcontext method)": [[89, "skia.GrContext.__init__"]], "abandoncontext() (grcontext method)": [[89, "skia.GrContext.abandonContext"]], "abandoned() (grcontext method)": [[89, "skia.GrContext.abandoned"]], "asdirectcontext() (grcontext method)": [[89, "skia.GrContext.asDirectContext"]], "backend() (grcontext method)": [[89, "skia.GrContext.backend"]], "checkasyncworkcompletion() (grcontext method)": [[89, "skia.GrContext.checkAsyncWorkCompletion"]], "colortypesupportedasimage() (grcontext method)": [[89, "skia.GrContext.colorTypeSupportedAsImage"]], "colortypesupportedassurface() (grcontext method)": [[89, "skia.GrContext.colorTypeSupportedAsSurface"]], "compressedbackendformat() (grcontext method)": [[89, "skia.GrContext.compressedBackendFormat"]], "createbackendtexture() (grcontext method)": [[89, "skia.GrContext.createBackendTexture"]], "createcompressedbackendtexture() (grcontext method)": [[89, "skia.GrContext.createCompressedBackendTexture"]], "defaultbackendformat() (grcontext method)": [[89, "skia.GrContext.defaultBackendFormat"]], "deletebackendtexture() (grcontext method)": [[89, "skia.GrContext.deleteBackendTexture"]], "flush() (grcontext method)": [[89, "skia.GrContext.flush"]], "flushandsubmit() (grcontext method)": [[89, "skia.GrContext.flushAndSubmit"]], "freegpuresources() (grcontext method)": [[89, "skia.GrContext.freeGpuResources"]], "getresourcecachelimit() (grcontext method)": [[89, "skia.GrContext.getResourceCacheLimit"]], "getresourcecachepurgeablebytes() (grcontext method)": [[89, "skia.GrContext.getResourceCachePurgeableBytes"]], "getresourcecacheusage() (grcontext method)": [[89, "skia.GrContext.getResourceCacheUsage"]], "maxrendertargetsize() (grcontext method)": [[89, "skia.GrContext.maxRenderTargetSize"]], "maxsurfacesamplecountforcolortype() (grcontext method)": [[89, "skia.GrContext.maxSurfaceSampleCountForColorType"]], "maxtexturesize() (grcontext method)": [[89, "skia.GrContext.maxTextureSize"]], "oomed() (grcontext method)": [[89, "skia.GrContext.oomed"]], "precompileshader() (grcontext method)": [[89, "skia.GrContext.precompileShader"]], "purgeresourcesnotusedinms() (grcontext method)": [[89, "skia.GrContext.purgeResourcesNotUsedInMs"]], "purgeunlockedresources() (grcontext method)": [[89, "skia.GrContext.purgeUnlockedResources"]], "ref() (grcontext method)": [[89, "skia.GrContext.ref"]], "releaseresourcesandabandoncontext() (grcontext method)": [[89, "skia.GrContext.releaseResourcesAndAbandonContext"]], "resetcontext() (grcontext method)": [[89, "skia.GrContext.resetContext"]], "resetgltexturebindings() (grcontext method)": [[89, "skia.GrContext.resetGLTextureBindings"]], "setbackendrendertargetstate() (grcontext method)": [[89, "skia.GrContext.setBackendRenderTargetState"]], "setbackendtexturestate() (grcontext method)": [[89, "skia.GrContext.setBackendTextureState"]], "setresourcecachelimit() (grcontext method)": [[89, "skia.GrContext.setResourceCacheLimit"]], "storevkpipelinecachedata() (grcontext method)": [[89, "skia.GrContext.storeVkPipelineCacheData"]], "submit() (grcontext method)": [[89, "skia.GrContext.submit"]], "supportsdistancefieldtext() (grcontext method)": [[89, "skia.GrContext.supportsDistanceFieldText"]], "threadsafeproxy() (grcontext method)": [[89, "skia.GrContext.threadSafeProxy"]], "unique() (grcontext method)": [[89, "skia.GrContext.unique"]], "unref() (grcontext method)": [[89, "skia.GrContext.unref"]], "updatebackendtexture() (grcontext method)": [[89, "skia.GrContext.updateBackendTexture"]], "wait() (grcontext method)": [[89, "skia.GrContext.wait"]], "grcontextoptions (class in skia)": [[90, "skia.GrContextOptions"]], "__init__() (grcontextoptions method)": [[90, "skia.GrContextOptions.__init__"]], "grcontext_base (class in skia)": [[91, "skia.GrContext_Base"]], "__init__() (grcontext_base method)": [[91, "skia.GrContext_Base.__init__"]], "asdirectcontext() (grcontext_base method)": [[91, "skia.GrContext_Base.asDirectContext"]], "backend() (grcontext_base method)": [[91, "skia.GrContext_Base.backend"]], "compressedbackendformat() (grcontext_base method)": [[91, "skia.GrContext_Base.compressedBackendFormat"]], "defaultbackendformat() (grcontext_base method)": [[91, "skia.GrContext_Base.defaultBackendFormat"]], "ref() (grcontext_base method)": [[91, "skia.GrContext_Base.ref"]], "threadsafeproxy() (grcontext_base method)": [[91, "skia.GrContext_Base.threadSafeProxy"]], "unique() (grcontext_base method)": [[91, "skia.GrContext_Base.unique"]], "unref() (grcontext_base method)": [[91, "skia.GrContext_Base.unref"]], "computeimagesize() (grdirectcontext static method)": [[92, "skia.GrDirectContext.ComputeImageSize"]], "grdirectcontext (class in skia)": [[92, "skia.GrDirectContext"]], "makegl() (grdirectcontext static method)": [[92, "skia.GrDirectContext.MakeGL"]], "makemock() (grdirectcontext static method)": [[92, "skia.GrDirectContext.MakeMock"]], "makevulkan() (grdirectcontext static method)": [[92, "skia.GrDirectContext.MakeVulkan"]], "__init__() (grdirectcontext method)": [[92, "skia.GrDirectContext.__init__"]], "abandoncontext() (grdirectcontext method)": [[92, "skia.GrDirectContext.abandonContext"]], "abandoned() (grdirectcontext method)": [[92, "skia.GrDirectContext.abandoned"]], "asdirectcontext() (grdirectcontext method)": [[92, "skia.GrDirectContext.asDirectContext"]], "backend() (grdirectcontext method)": [[92, "skia.GrDirectContext.backend"]], "checkasyncworkcompletion() (grdirectcontext method)": [[92, "skia.GrDirectContext.checkAsyncWorkCompletion"]], "colortypesupportedasimage() (grdirectcontext method)": [[92, "skia.GrDirectContext.colorTypeSupportedAsImage"]], "colortypesupportedassurface() (grdirectcontext method)": [[92, "skia.GrDirectContext.colorTypeSupportedAsSurface"]], "compressedbackendformat() (grdirectcontext method)": [[92, "skia.GrDirectContext.compressedBackendFormat"]], "createbackendtexture() (grdirectcontext method)": [[92, "skia.GrDirectContext.createBackendTexture"]], "createcompressedbackendtexture() (grdirectcontext method)": [[92, "skia.GrDirectContext.createCompressedBackendTexture"]], "defaultbackendformat() (grdirectcontext method)": [[92, "skia.GrDirectContext.defaultBackendFormat"]], "deletebackendtexture() (grdirectcontext method)": [[92, "skia.GrDirectContext.deleteBackendTexture"]], "flush() (grdirectcontext method)": [[92, "skia.GrDirectContext.flush"]], "flushandsubmit() (grdirectcontext method)": [[92, "skia.GrDirectContext.flushAndSubmit"]], "freegpuresources() (grdirectcontext method)": [[92, "skia.GrDirectContext.freeGpuResources"]], "getresourcecachelimit() (grdirectcontext method)": [[92, "skia.GrDirectContext.getResourceCacheLimit"]], "getresourcecachepurgeablebytes() (grdirectcontext method)": [[92, "skia.GrDirectContext.getResourceCachePurgeableBytes"]], "getresourcecacheusage() (grdirectcontext method)": [[92, "skia.GrDirectContext.getResourceCacheUsage"]], "maxrendertargetsize() (grdirectcontext method)": [[92, "skia.GrDirectContext.maxRenderTargetSize"]], "maxsurfacesamplecountforcolortype() (grdirectcontext method)": [[92, "skia.GrDirectContext.maxSurfaceSampleCountForColorType"]], "maxtexturesize() (grdirectcontext method)": [[92, "skia.GrDirectContext.maxTextureSize"]], "oomed() (grdirectcontext method)": [[92, "skia.GrDirectContext.oomed"]], "precompileshader() (grdirectcontext method)": [[92, "skia.GrDirectContext.precompileShader"]], "purgeresourcesnotusedinms() (grdirectcontext method)": [[92, "skia.GrDirectContext.purgeResourcesNotUsedInMs"]], "purgeunlockedresources() (grdirectcontext method)": [[92, "skia.GrDirectContext.purgeUnlockedResources"]], "ref() (grdirectcontext method)": [[92, "skia.GrDirectContext.ref"]], "releaseresourcesandabandoncontext() (grdirectcontext method)": [[92, "skia.GrDirectContext.releaseResourcesAndAbandonContext"]], "resetcontext() (grdirectcontext method)": [[92, "skia.GrDirectContext.resetContext"]], "resetgltexturebindings() (grdirectcontext method)": [[92, "skia.GrDirectContext.resetGLTextureBindings"]], "setbackendrendertargetstate() (grdirectcontext method)": [[92, "skia.GrDirectContext.setBackendRenderTargetState"]], "setbackendtexturestate() (grdirectcontext method)": [[92, "skia.GrDirectContext.setBackendTextureState"]], "setresourcecachelimit() (grdirectcontext method)": [[92, "skia.GrDirectContext.setResourceCacheLimit"]], "storevkpipelinecachedata() (grdirectcontext method)": [[92, "skia.GrDirectContext.storeVkPipelineCacheData"]], "submit() (grdirectcontext method)": [[92, "skia.GrDirectContext.submit"]], "supportsdistancefieldtext() (grdirectcontext method)": [[92, "skia.GrDirectContext.supportsDistanceFieldText"]], "threadsafeproxy() (grdirectcontext method)": [[92, "skia.GrDirectContext.threadSafeProxy"]], "unique() (grdirectcontext method)": [[92, "skia.GrDirectContext.unique"]], "unref() (grdirectcontext method)": [[92, "skia.GrDirectContext.unref"]], "updatebackendtexture() (grdirectcontext method)": [[92, "skia.GrDirectContext.updateBackendTexture"]], "wait() (grdirectcontext method)": [[92, "skia.GrDirectContext.wait"]], "computeimagesize() (grdirectcontexts static method)": [[93, "skia.GrDirectContexts.ComputeImageSize"]], "grdirectcontexts (in module skia)": [[93, "skia.GrDirectContexts"]], "makegl() (grdirectcontexts static method)": [[93, "skia.GrDirectContexts.MakeGL"]], "makemock() (grdirectcontexts static method)": [[93, "skia.GrDirectContexts.MakeMock"]], "makevulkan() (grdirectcontexts static method)": [[93, "skia.GrDirectContexts.MakeVulkan"]], "__init__() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.__init__"]], "abandoncontext() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.abandonContext"]], "abandoned() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.abandoned"]], "asdirectcontext() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.asDirectContext"]], "backend() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.backend"]], "checkasyncworkcompletion() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.checkAsyncWorkCompletion"]], "colortypesupportedasimage() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.colorTypeSupportedAsImage"]], "colortypesupportedassurface() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.colorTypeSupportedAsSurface"]], "compressedbackendformat() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.compressedBackendFormat"]], "createbackendtexture() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.createBackendTexture"]], "createcompressedbackendtexture() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.createCompressedBackendTexture"]], "defaultbackendformat() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.defaultBackendFormat"]], "deletebackendtexture() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.deleteBackendTexture"]], "flush() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.flush"]], "flushandsubmit() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.flushAndSubmit"]], "freegpuresources() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.freeGpuResources"]], "getresourcecachelimit() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.getResourceCacheLimit"]], "getresourcecachepurgeablebytes() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.getResourceCachePurgeableBytes"]], "getresourcecacheusage() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.getResourceCacheUsage"]], "maxrendertargetsize() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.maxRenderTargetSize"]], "maxsurfacesamplecountforcolortype() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.maxSurfaceSampleCountForColorType"]], "maxtexturesize() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.maxTextureSize"]], "oomed() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.oomed"]], "precompileshader() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.precompileShader"]], "purgeresourcesnotusedinms() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.purgeResourcesNotUsedInMs"]], "purgeunlockedresources() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.purgeUnlockedResources"]], "ref() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.ref"]], "releaseresourcesandabandoncontext() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.releaseResourcesAndAbandonContext"]], "resetcontext() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.resetContext"]], "resetgltexturebindings() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.resetGLTextureBindings"]], "setbackendrendertargetstate() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.setBackendRenderTargetState"]], "setbackendtexturestate() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.setBackendTextureState"]], "setresourcecachelimit() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.setResourceCacheLimit"]], "storevkpipelinecachedata() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.storeVkPipelineCacheData"]], "submit() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.submit"]], "supportsdistancefieldtext() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.supportsDistanceFieldText"]], "threadsafeproxy() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.threadSafeProxy"]], "unique() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.unique"]], "unref() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.unref"]], "updatebackendtexture() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.updateBackendTexture"]], "wait() (grdirectcontexts method)": [[93, "skia.GrDirectContexts.wait"]], "grflushinfo (class in skia)": [[94, "skia.GrFlushInfo"]], "__init__() (grflushinfo method)": [[94, "skia.GrFlushInfo.__init__"]], "fnumsemaphores (grflushinfo attribute)": [[94, "skia.GrFlushInfo.fNumSemaphores"]], "semaphores (grflushinfo attribute)": [[94, "skia.GrFlushInfo.semaphores"]], "grglbackendstate (class in skia)": [[95, "skia.GrGLBackendState"]], "__init__() (grglbackendstate method)": [[95, "skia.GrGLBackendState.__init__"]], "kall_grglbackendstate (grglbackendstate attribute)": [[95, "skia.GrGLBackendState.kALL_GrGLBackendState"]], "kblend_grglbackendstate (grglbackendstate attribute)": [[95, "skia.GrGLBackendState.kBlend_GrGLBackendState"]], "kfixedfunction_grglbackendstate (grglbackendstate attribute)": [[95, "skia.GrGLBackendState.kFixedFunction_GrGLBackendState"]], "kmsaaenable_grglbackendstate (grglbackendstate attribute)": [[95, "skia.GrGLBackendState.kMSAAEnable_GrGLBackendState"]], "kmisc_grglbackendstate (grglbackendstate attribute)": [[95, "skia.GrGLBackendState.kMisc_GrGLBackendState"]], "kpixelstore_grglbackendstate (grglbackendstate attribute)": [[95, "skia.GrGLBackendState.kPixelStore_GrGLBackendState"]], "kprogram_grglbackendstate (grglbackendstate attribute)": [[95, "skia.GrGLBackendState.kProgram_GrGLBackendState"]], "krendertarget_grglbackendstate (grglbackendstate attribute)": [[95, "skia.GrGLBackendState.kRenderTarget_GrGLBackendState"]], "kstencil_grglbackendstate (grglbackendstate attribute)": [[95, "skia.GrGLBackendState.kStencil_GrGLBackendState"]], "ktexturebinding_grglbackendstate (grglbackendstate attribute)": [[95, "skia.GrGLBackendState.kTextureBinding_GrGLBackendState"]], "kvertex_grglbackendstate (grglbackendstate attribute)": [[95, "skia.GrGLBackendState.kVertex_GrGLBackendState"]], "kview_grglbackendstate (grglbackendstate attribute)": [[95, "skia.GrGLBackendState.kView_GrGLBackendState"]], "name (grglbackendstate attribute)": [[95, "skia.GrGLBackendState.name"]], "value (grglbackendstate attribute)": [[95, "skia.GrGLBackendState.value"]], "grglformat (class in skia)": [[96, "skia.GrGLFormat"]], "__init__() (grglformat method)": [[96, "skia.GrGLFormat.__init__"]], "kalpha8 (grglformat attribute)": [[96, "skia.GrGLFormat.kALPHA8"]], "kbgra8 (grglformat attribute)": [[96, "skia.GrGLFormat.kBGRA8"]], "kcompressed_etc1_rgb8 (grglformat attribute)": [[96, "skia.GrGLFormat.kCOMPRESSED_ETC1_RGB8"]], "kcompressed_rgb8_bc1 (grglformat attribute)": [[96, "skia.GrGLFormat.kCOMPRESSED_RGB8_BC1"]], "kcompressed_rgb8_etc2 (grglformat attribute)": [[96, "skia.GrGLFormat.kCOMPRESSED_RGB8_ETC2"]], "kcompressed_rgba8_bc1 (grglformat attribute)": [[96, "skia.GrGLFormat.kCOMPRESSED_RGBA8_BC1"]], "kluminance16f (grglformat attribute)": [[96, "skia.GrGLFormat.kLUMINANCE16F"]], "kluminance8 (grglformat attribute)": [[96, "skia.GrGLFormat.kLUMINANCE8"]], "klast (grglformat attribute)": [[96, "skia.GrGLFormat.kLast"]], "kr16 (grglformat attribute)": [[96, "skia.GrGLFormat.kR16"]], "kr16f (grglformat attribute)": [[96, "skia.GrGLFormat.kR16F"]], "kr8 (grglformat attribute)": [[96, "skia.GrGLFormat.kR8"]], "krg16 (grglformat attribute)": [[96, "skia.GrGLFormat.kRG16"]], "krg16f (grglformat attribute)": [[96, "skia.GrGLFormat.kRG16F"]], "krg8 (grglformat attribute)": [[96, "skia.GrGLFormat.kRG8"]], "krgb10_a2 (grglformat attribute)": [[96, "skia.GrGLFormat.kRGB10_A2"]], "krgb565 (grglformat attribute)": [[96, "skia.GrGLFormat.kRGB565"]], "krgb8 (grglformat attribute)": [[96, "skia.GrGLFormat.kRGB8"]], "krgba16 (grglformat attribute)": [[96, "skia.GrGLFormat.kRGBA16"]], "krgba16f (grglformat attribute)": [[96, "skia.GrGLFormat.kRGBA16F"]], "krgba4 (grglformat attribute)": [[96, "skia.GrGLFormat.kRGBA4"]], "krgba8 (grglformat attribute)": [[96, "skia.GrGLFormat.kRGBA8"]], "ksrgb8_alpha8 (grglformat attribute)": [[96, "skia.GrGLFormat.kSRGB8_ALPHA8"]], "kunknown (grglformat attribute)": [[96, "skia.GrGLFormat.kUnknown"]], "name (grglformat attribute)": [[96, "skia.GrGLFormat.name"]], "value (grglformat attribute)": [[96, "skia.GrGLFormat.value"]], "grglframebufferinfo (class in skia)": [[97, "skia.GrGLFramebufferInfo"]], "__init__() (grglframebufferinfo method)": [[97, "skia.GrGLFramebufferInfo.__init__"]], "ffboid (grglframebufferinfo attribute)": [[97, "skia.GrGLFramebufferInfo.fFBOID"]], "fformat (grglframebufferinfo attribute)": [[97, "skia.GrGLFramebufferInfo.fFormat"]], "grglinterface (class in skia)": [[98, "skia.GrGLInterface"]], "makeegl() (grglinterface static method)": [[98, "skia.GrGLInterface.MakeEGL"]], "makeglx() (grglinterface static method)": [[98, "skia.GrGLInterface.MakeGLX"]], "__init__() (grglinterface method)": [[98, "skia.GrGLInterface.__init__"]], "ref() (grglinterface method)": [[98, "skia.GrGLInterface.ref"]], "unique() (grglinterface method)": [[98, "skia.GrGLInterface.unique"]], "unref() (grglinterface method)": [[98, "skia.GrGLInterface.unref"]], "validate() (grglinterface method)": [[98, "skia.GrGLInterface.validate"]], "grgltextureinfo (class in skia)": [[99, "skia.GrGLTextureInfo"]], "__init__() (grgltextureinfo method)": [[99, "skia.GrGLTextureInfo.__init__"]], "fformat (grgltextureinfo attribute)": [[99, "skia.GrGLTextureInfo.fFormat"]], "fid (grgltextureinfo attribute)": [[99, "skia.GrGLTextureInfo.fID"]], "ftarget (grgltextureinfo attribute)": [[99, "skia.GrGLTextureInfo.fTarget"]], "grimagecontext (class in skia)": [[100, "skia.GrImageContext"]], "__init__() (grimagecontext method)": [[100, "skia.GrImageContext.__init__"]], "asdirectcontext() (grimagecontext method)": [[100, "skia.GrImageContext.asDirectContext"]], "backend() (grimagecontext method)": [[100, "skia.GrImageContext.backend"]], "compressedbackendformat() (grimagecontext method)": [[100, "skia.GrImageContext.compressedBackendFormat"]], "defaultbackendformat() (grimagecontext method)": [[100, "skia.GrImageContext.defaultBackendFormat"]], "ref() (grimagecontext method)": [[100, "skia.GrImageContext.ref"]], "threadsafeproxy() (grimagecontext method)": [[100, "skia.GrImageContext.threadSafeProxy"]], "unique() (grimagecontext method)": [[100, "skia.GrImageContext.unique"]], "unref() (grimagecontext method)": [[100, "skia.GrImageContext.unref"]], "grmipmapped (class in skia)": [[101, "skia.GrMipmapped"]], "__init__() (grmipmapped method)": [[101, "skia.GrMipmapped.__init__"]], "kno (grmipmapped attribute)": [[101, "skia.GrMipmapped.kNo"]], "kyes (grmipmapped attribute)": [[101, "skia.GrMipmapped.kYes"]], "name (grmipmapped attribute)": [[101, "skia.GrMipmapped.name"]], "value (grmipmapped attribute)": [[101, "skia.GrMipmapped.value"]], "grmockoptions (class in skia)": [[102, "skia.GrMockOptions"]], "__init__() (grmockoptions method)": [[102, "skia.GrMockOptions.__init__"]], "grmockrendertargetinfo (class in skia)": [[103, "skia.GrMockRenderTargetInfo"]], "__init__() (grmockrendertargetinfo method)": [[103, "skia.GrMockRenderTargetInfo.__init__"]], "colortype() (grmockrendertargetinfo method)": [[103, "skia.GrMockRenderTargetInfo.colorType"]], "getbackendformat() (grmockrendertargetinfo method)": [[103, "skia.GrMockRenderTargetInfo.getBackendFormat"]], "grmocktextureinfo (class in skia)": [[104, "skia.GrMockTextureInfo"]], "__init__() (grmocktextureinfo method)": [[104, "skia.GrMockTextureInfo.__init__"]], "colortype() (grmocktextureinfo method)": [[104, "skia.GrMockTextureInfo.colorType"]], "compressiontype() (grmocktextureinfo method)": [[104, "skia.GrMockTextureInfo.compressionType"]], "getbackendformat() (grmocktextureinfo method)": [[104, "skia.GrMockTextureInfo.getBackendFormat"]], "id() (grmocktextureinfo method)": [[104, "skia.GrMockTextureInfo.id"]], "grprotected (class in skia)": [[105, "skia.GrProtected"]], "__init__() (grprotected method)": [[105, "skia.GrProtected.__init__"]], "kno (grprotected attribute)": [[105, "skia.GrProtected.kNo"]], "kyes (grprotected attribute)": [[105, "skia.GrProtected.kYes"]], "name (grprotected attribute)": [[105, "skia.GrProtected.name"]], "value (grprotected attribute)": [[105, "skia.GrProtected.value"]], "grpurgeresourceoptions (class in skia)": [[106, "skia.GrPurgeResourceOptions"]], "__init__() (grpurgeresourceoptions method)": [[106, "skia.GrPurgeResourceOptions.__init__"]], "kallresources (grpurgeresourceoptions attribute)": [[106, "skia.GrPurgeResourceOptions.kAllResources"]], "kscratchresourcesonly (grpurgeresourceoptions attribute)": [[106, "skia.GrPurgeResourceOptions.kScratchResourcesOnly"]], "name (grpurgeresourceoptions attribute)": [[106, "skia.GrPurgeResourceOptions.name"]], "value (grpurgeresourceoptions attribute)": [[106, "skia.GrPurgeResourceOptions.value"]], "grrecordingcontext (class in skia)": [[107, "skia.GrRecordingContext"]], "__init__() (grrecordingcontext method)": [[107, "skia.GrRecordingContext.__init__"]], "abandoned() (grrecordingcontext method)": [[107, "skia.GrRecordingContext.abandoned"]], "asdirectcontext() (grrecordingcontext method)": [[107, "skia.GrRecordingContext.asDirectContext"]], "backend() (grrecordingcontext method)": [[107, "skia.GrRecordingContext.backend"]], "colortypesupportedasimage() (grrecordingcontext method)": [[107, "skia.GrRecordingContext.colorTypeSupportedAsImage"]], "colortypesupportedassurface() (grrecordingcontext method)": [[107, "skia.GrRecordingContext.colorTypeSupportedAsSurface"]], "compressedbackendformat() (grrecordingcontext method)": [[107, "skia.GrRecordingContext.compressedBackendFormat"]], "defaultbackendformat() (grrecordingcontext method)": [[107, "skia.GrRecordingContext.defaultBackendFormat"]], "maxrendertargetsize() (grrecordingcontext method)": [[107, "skia.GrRecordingContext.maxRenderTargetSize"]], "maxsurfacesamplecountforcolortype() (grrecordingcontext method)": [[107, "skia.GrRecordingContext.maxSurfaceSampleCountForColorType"]], "maxtexturesize() (grrecordingcontext method)": [[107, "skia.GrRecordingContext.maxTextureSize"]], "ref() (grrecordingcontext method)": [[107, "skia.GrRecordingContext.ref"]], "threadsafeproxy() (grrecordingcontext method)": [[107, "skia.GrRecordingContext.threadSafeProxy"]], "unique() (grrecordingcontext method)": [[107, "skia.GrRecordingContext.unique"]], "unref() (grrecordingcontext method)": [[107, "skia.GrRecordingContext.unref"]], "grrenderable (class in skia)": [[108, "skia.GrRenderable"]], "__init__() (grrenderable method)": [[108, "skia.GrRenderable.__init__"]], "kno (grrenderable attribute)": [[108, "skia.GrRenderable.kNo"]], "kyes (grrenderable attribute)": [[108, "skia.GrRenderable.kYes"]], "name (grrenderable attribute)": [[108, "skia.GrRenderable.name"]], "value (grrenderable attribute)": [[108, "skia.GrRenderable.value"]], "grsemaphoressubmitted (class in skia)": [[109, "skia.GrSemaphoresSubmitted"]], "__init__() (grsemaphoressubmitted method)": [[109, "skia.GrSemaphoresSubmitted.__init__"]], "kno (grsemaphoressubmitted attribute)": [[109, "skia.GrSemaphoresSubmitted.kNo"]], "kyes (grsemaphoressubmitted attribute)": [[109, "skia.GrSemaphoresSubmitted.kYes"]], "name (grsemaphoressubmitted attribute)": [[109, "skia.GrSemaphoresSubmitted.name"]], "value (grsemaphoressubmitted attribute)": [[109, "skia.GrSemaphoresSubmitted.value"]], "grsurfaceorigin (class in skia)": [[110, "skia.GrSurfaceOrigin"]], "__init__() (grsurfaceorigin method)": [[110, "skia.GrSurfaceOrigin.__init__"]], "kbottomleft_grsurfaceorigin (grsurfaceorigin attribute)": [[110, "skia.GrSurfaceOrigin.kBottomLeft_GrSurfaceOrigin"]], "ktopleft_grsurfaceorigin (grsurfaceorigin attribute)": [[110, "skia.GrSurfaceOrigin.kTopLeft_GrSurfaceOrigin"]], "name (grsurfaceorigin attribute)": [[110, "skia.GrSurfaceOrigin.name"]], "value (grsurfaceorigin attribute)": [[110, "skia.GrSurfaceOrigin.value"]], "grsynccpu (class in skia)": [[111, "skia.GrSyncCpu"]], "__init__() (grsynccpu method)": [[111, "skia.GrSyncCpu.__init__"]], "kno (grsynccpu attribute)": [[111, "skia.GrSyncCpu.kNo"]], "kyes (grsynccpu attribute)": [[111, "skia.GrSyncCpu.kYes"]], "name (grsynccpu attribute)": [[111, "skia.GrSyncCpu.name"]], "value (grsynccpu attribute)": [[111, "skia.GrSyncCpu.value"]], "grtexturetype (class in skia)": [[112, "skia.GrTextureType"]], "__init__() (grtexturetype method)": [[112, "skia.GrTextureType.__init__"]], "k2d (grtexturetype attribute)": [[112, "skia.GrTextureType.k2D"]], "kexternal (grtexturetype attribute)": [[112, "skia.GrTextureType.kExternal"]], "knone (grtexturetype attribute)": [[112, "skia.GrTextureType.kNone"]], "krectangle (grtexturetype attribute)": [[112, "skia.GrTextureType.kRectangle"]], "name (grtexturetype attribute)": [[112, "skia.GrTextureType.name"]], "value (grtexturetype attribute)": [[112, "skia.GrTextureType.value"]], "grvkalloc (class in skia)": [[113, "skia.GrVkAlloc"]], "__init__() (grvkalloc method)": [[113, "skia.GrVkAlloc.__init__"]], "grvkbackendcontext (class in skia)": [[114, "skia.GrVkBackendContext"]], "__init__() (grvkbackendcontext method)": [[114, "skia.GrVkBackendContext.__init__"]], "grvkdrawableinfo (class in skia)": [[115, "skia.GrVkDrawableInfo"]], "__init__() (grvkdrawableinfo method)": [[115, "skia.GrVkDrawableInfo.__init__"]], "grvkimageinfo (class in skia)": [[116, "skia.GrVkImageInfo"]], "__init__() (grvkimageinfo method)": [[116, "skia.GrVkImageInfo.__init__"]], "falloc (grvkimageinfo attribute)": [[116, "skia.GrVkImageInfo.fAlloc"]], "fcurrentqueuefamily (grvkimageinfo attribute)": [[116, "skia.GrVkImageInfo.fCurrentQueueFamily"]], "flevelcount (grvkimageinfo attribute)": [[116, "skia.GrVkImageInfo.fLevelCount"]], "fprotected (grvkimageinfo attribute)": [[116, "skia.GrVkImageInfo.fProtected"]], "fsharingmode (grvkimageinfo attribute)": [[116, "skia.GrVkImageInfo.fSharingMode"]], "fycbcrconversioninfo (grvkimageinfo attribute)": [[116, "skia.GrVkImageInfo.fYcbcrConversionInfo"]], "grvkycbcrconversioninfo (class in skia)": [[117, "skia.GrVkYcbcrConversionInfo"]], "__init__() (grvkycbcrconversioninfo method)": [[117, "skia.GrVkYcbcrConversionInfo.__init__"]], "gradientshader (class in skia)": [[118, "skia.GradientShader"]], "makelinear() (gradientshader static method)": [[118, "skia.GradientShader.MakeLinear"]], "makeradial() (gradientshader static method)": [[118, "skia.GradientShader.MakeRadial"]], "makesweep() (gradientshader static method)": [[118, "skia.GradientShader.MakeSweep"]], "maketwopointconical() (gradientshader static method)": [[118, "skia.GradientShader.MakeTwoPointConical"]], "__init__() (gradientshader method)": [[118, "skia.GradientShader.__init__"]], "kinterpolatecolorsinpremul_flag (gradientshader attribute)": [[118, "skia.GradientShader.kInterpolateColorsInPremul_Flag"]], "flags (class in skia.gradientshader)": [[119, "skia.GradientShader.Flags"]], "__init__() (flags method)": [[119, "skia.GradientShader.Flags.__init__"], [242, "skia.SurfaceProps.Flags.__init__"]], "kinterpolatecolorsinpremul_flag (flags attribute)": [[119, "skia.GradientShader.Flags.kInterpolateColorsInPremul_Flag"]], "name (flags attribute)": [[119, "skia.GradientShader.Flags.name"], [242, "skia.SurfaceProps.Flags.name"]], "value (flags attribute)": [[119, "skia.GradientShader.Flags.value"], [242, "skia.SurfaceProps.Flags.value"]], "highcontrastconfig (class in skia)": [[120, "skia.HighContrastConfig"]], "__init__() (highcontrastconfig method)": [[120, "skia.HighContrastConfig.__init__"]], "fcontrast (highcontrastconfig attribute)": [[120, "skia.HighContrastConfig.fContrast"]], "fgrayscale (highcontrastconfig attribute)": [[120, "skia.HighContrastConfig.fGrayscale"]], "finvertstyle (highcontrastconfig attribute)": [[120, "skia.HighContrastConfig.fInvertStyle"]], "isvalid() (highcontrastconfig method)": [[120, "skia.HighContrastConfig.isValid"]], "kinvertbrightness (highcontrastconfig attribute)": [[120, "skia.HighContrastConfig.kInvertBrightness"]], "kinvertlightness (highcontrastconfig attribute)": [[120, "skia.HighContrastConfig.kInvertLightness"]], "klast (highcontrastconfig attribute)": [[120, "skia.HighContrastConfig.kLast"]], "knoinvert (highcontrastconfig attribute)": [[120, "skia.HighContrastConfig.kNoInvert"]], "invertstyle (class in skia.highcontrastconfig)": [[121, "skia.HighContrastConfig.InvertStyle"]], "__init__() (invertstyle method)": [[121, "skia.HighContrastConfig.InvertStyle.__init__"]], "kinvertbrightness (invertstyle attribute)": [[121, "skia.HighContrastConfig.InvertStyle.kInvertBrightness"]], "kinvertlightness (invertstyle attribute)": [[121, "skia.HighContrastConfig.InvertStyle.kInvertLightness"]], "klast (invertstyle attribute)": [[121, "skia.HighContrastConfig.InvertStyle.kLast"]], "knoinvert (invertstyle attribute)": [[121, "skia.HighContrastConfig.InvertStyle.kNoInvert"]], "name (invertstyle attribute)": [[121, "skia.HighContrastConfig.InvertStyle.name"]], "value (invertstyle attribute)": [[121, "skia.HighContrastConfig.InvertStyle.value"]], "highcontrastfilter (class in skia)": [[122, "skia.HighContrastFilter"]], "make() (highcontrastfilter static method)": [[122, "skia.HighContrastFilter.Make"]], "__init__() (highcontrastfilter method)": [[122, "skia.HighContrastFilter.__init__"]], "ipoint (class in skia)": [[123, "skia.IPoint"]], "make() (ipoint static method)": [[123, "skia.IPoint.Make"]], "__init__() (ipoint method)": [[123, "skia.IPoint.__init__"]], "equals() (ipoint method)": [[123, "skia.IPoint.equals"]], "fx (ipoint attribute)": [[123, "skia.IPoint.fX"]], "fy (ipoint attribute)": [[123, "skia.IPoint.fY"]], "iszero() (ipoint method)": [[123, "skia.IPoint.isZero"]], "set() (ipoint method)": [[123, "skia.IPoint.set"]], "x() (ipoint method)": [[123, "skia.IPoint.x"]], "y() (ipoint method)": [[123, "skia.IPoint.y"]], "irect (class in skia)": [[124, "skia.IRect"]], "intersects() (irect static method)": [[124, "skia.IRect.Intersects"]], "makeempty() (irect static method)": [[124, "skia.IRect.MakeEmpty"]], "makeltrb() (irect static method)": [[124, "skia.IRect.MakeLTRB"]], "makesize() (irect static method)": [[124, "skia.IRect.MakeSize"]], "makewh() (irect static method)": [[124, "skia.IRect.MakeWH"]], "makexywh() (irect static method)": [[124, "skia.IRect.MakeXYWH"]], "__init__() (irect method)": [[124, "skia.IRect.__init__"]], "adjust() (irect method)": [[124, "skia.IRect.adjust"]], "bottom() (irect method)": [[124, "skia.IRect.bottom"]], "contains() (irect method)": [[124, "skia.IRect.contains"]], "containsnoemptycheck() (irect method)": [[124, "skia.IRect.containsNoEmptyCheck"]], "fbottom (irect attribute)": [[124, "skia.IRect.fBottom"]], "fleft (irect attribute)": [[124, "skia.IRect.fLeft"]], "fright (irect attribute)": [[124, "skia.IRect.fRight"]], "ftop (irect attribute)": [[124, "skia.IRect.fTop"]], "height() (irect method)": [[124, "skia.IRect.height"]], "height64() (irect method)": [[124, "skia.IRect.height64"]], "inset() (irect method)": [[124, "skia.IRect.inset"]], "intersect() (irect method)": [[124, "skia.IRect.intersect"]], "isempty() (irect method)": [[124, "skia.IRect.isEmpty"]], "isempty64() (irect method)": [[124, "skia.IRect.isEmpty64"]], "join() (irect method)": [[124, "skia.IRect.join"]], "left() (irect method)": [[124, "skia.IRect.left"]], "makeinset() (irect method)": [[124, "skia.IRect.makeInset"]], "makeoffset() (irect method)": [[124, "skia.IRect.makeOffset"]], "makeoutset() (irect method)": [[124, "skia.IRect.makeOutset"]], "makesorted() (irect method)": [[124, "skia.IRect.makeSorted"]], "offset() (irect method)": [[124, "skia.IRect.offset"]], "offsetto() (irect method)": [[124, "skia.IRect.offsetTo"]], "outset() (irect method)": [[124, "skia.IRect.outset"]], "right() (irect method)": [[124, "skia.IRect.right"]], "setempty() (irect method)": [[124, "skia.IRect.setEmpty"]], "setltrb() (irect method)": [[124, "skia.IRect.setLTRB"]], "setwh() (irect method)": [[124, "skia.IRect.setWH"]], "setxywh() (irect method)": [[124, "skia.IRect.setXYWH"]], "size() (irect method)": [[124, "skia.IRect.size"]], "sort() (irect method)": [[124, "skia.IRect.sort"]], "top() (irect method)": [[124, "skia.IRect.top"]], "topleft() (irect method)": [[124, "skia.IRect.topLeft"]], "width() (irect method)": [[124, "skia.IRect.width"]], "width64() (irect method)": [[124, "skia.IRect.width64"]], "x() (irect method)": [[124, "skia.IRect.x"]], "y() (irect method)": [[124, "skia.IRect.y"]], "isize (class in skia)": [[125, "skia.ISize"]], "make() (isize static method)": [[125, "skia.ISize.Make"]], "makeempty() (isize static method)": [[125, "skia.ISize.MakeEmpty"]], "__init__() (isize method)": [[125, "skia.ISize.__init__"]], "area() (isize method)": [[125, "skia.ISize.area"]], "equals() (isize method)": [[125, "skia.ISize.equals"]], "fheight (isize attribute)": [[125, "skia.ISize.fHeight"]], "fwidth (isize attribute)": [[125, "skia.ISize.fWidth"]], "height() (isize method)": [[125, "skia.ISize.height"]], "isempty() (isize method)": [[125, "skia.ISize.isEmpty"]], "iszero() (isize method)": [[125, "skia.ISize.isZero"]], "set() (isize method)": [[125, "skia.ISize.set"]], "setempty() (isize method)": [[125, "skia.ISize.setEmpty"]], "width() (isize method)": [[125, "skia.ISize.width"]], "image (class in skia)": [[126, "skia.Image"]], "makebackendtexturefromimage() (image static method)": [[126, "skia.Image.MakeBackendTextureFromImage"]], "makecrosscontextfrompixmap() (image static method)": [[126, "skia.Image.MakeCrossContextFromPixmap"]], "makefromadoptedtexture() (image static method)": [[126, "skia.Image.MakeFromAdoptedTexture"]], "makefrombitmap() (image static method)": [[126, "skia.Image.MakeFromBitmap"]], "makefromcompressedtexture() (image static method)": [[126, "skia.Image.MakeFromCompressedTexture"]], "makefromencoded() (image static method)": [[126, "skia.Image.MakeFromEncoded"]], "makefrompicture() (image static method)": [[126, "skia.Image.MakeFromPicture"]], "makefromraster() (image static method)": [[126, "skia.Image.MakeFromRaster"]], "makefromtexture() (image static method)": [[126, "skia.Image.MakeFromTexture"]], "makefromyuvapixmaps() (image static method)": [[126, "skia.Image.MakeFromYUVAPixmaps"]], "makerastercopy() (image static method)": [[126, "skia.Image.MakeRasterCopy"]], "makerasterdata() (image static method)": [[126, "skia.Image.MakeRasterData"]], "makerasterfromcompressed() (image static method)": [[126, "skia.Image.MakeRasterFromCompressed"]], "maketexturefromcompressed() (image static method)": [[126, "skia.Image.MakeTextureFromCompressed"]], "__init__() (image method)": [[126, "skia.Image.__init__"]], "alphatype() (image method)": [[126, "skia.Image.alphaType"]], "aslegacybitmap() (image method)": [[126, "skia.Image.asLegacyBitmap"]], "bitmap() (image method)": [[126, "skia.Image.bitmap"]], "bounds() (image method)": [[126, "skia.Image.bounds"]], "colorspace() (image method)": [[126, "skia.Image.colorSpace"]], "colortype() (image method)": [[126, "skia.Image.colorType"]], "convert() (image method)": [[126, "skia.Image.convert"]], "dimensions() (image method)": [[126, "skia.Image.dimensions"]], "encodetodata() (image method)": [[126, "skia.Image.encodeToData"]], "flush() (image method)": [[126, "skia.Image.flush"]], "flushandsubmit() (image method)": [[126, "skia.Image.flushAndSubmit"]], "fromarray() (image static method)": [[126, "skia.Image.fromarray"]], "frombytes() (image static method)": [[126, "skia.Image.frombytes"]], "getbackendtexture() (image method)": [[126, "skia.Image.getBackendTexture"]], "hasmipmaps() (image method)": [[126, "skia.Image.hasMipmaps"]], "height() (image method)": [[126, "skia.Image.height"]], "imageinfo() (image method)": [[126, "skia.Image.imageInfo"]], "isalphaonly() (image method)": [[126, "skia.Image.isAlphaOnly"]], "islazygenerated() (image method)": [[126, "skia.Image.isLazyGenerated"]], "isopaque() (image method)": [[126, "skia.Image.isOpaque"]], "istexturebacked() (image method)": [[126, "skia.Image.isTextureBacked"]], "isvalid() (image method)": [[126, "skia.Image.isValid"]], "kallow_cachinghint (image attribute)": [[126, "skia.Image.kAllow_CachingHint"]], "kbc1_rgb8_unorm (image attribute)": [[126, "skia.Image.kBC1_RGB8_UNORM"]], "kbc1_rgba8_unorm (image attribute)": [[126, "skia.Image.kBC1_RGBA8_UNORM"]], "kdisallow_cachinghint (image attribute)": [[126, "skia.Image.kDisallow_CachingHint"]], "ketc2_rgb8_unorm (image attribute)": [[126, "skia.Image.kETC2_RGB8_UNORM"]], "kf16 (image attribute)": [[126, "skia.Image.kF16"]], "klast (image attribute)": [[126, "skia.Image.kLast"]], "knone (image attribute)": [[126, "skia.Image.kNone"]], "kro_legacybitmapmode (image attribute)": [[126, "skia.Image.kRO_LegacyBitmapMode"]], "ku8 (image attribute)": [[126, "skia.Image.kU8"]], "makecolorspace() (image method)": [[126, "skia.Image.makeColorSpace"]], "makecolortypeandcolorspace() (image method)": [[126, "skia.Image.makeColorTypeAndColorSpace"]], "makenontextureimage() (image method)": [[126, "skia.Image.makeNonTextureImage"]], "makerasterimage() (image method)": [[126, "skia.Image.makeRasterImage"]], "makerawshader() (image method)": [[126, "skia.Image.makeRawShader"]], "makeshader() (image method)": [[126, "skia.Image.makeShader"]], "makesubset() (image method)": [[126, "skia.Image.makeSubset"]], "maketextureimage() (image method)": [[126, "skia.Image.makeTextureImage"]], "makewithfilter() (image method)": [[126, "skia.Image.makeWithFilter"]], "open() (image static method)": [[126, "skia.Image.open"]], "peekpixels() (image method)": [[126, "skia.Image.peekPixels"]], "readpixels() (image method)": [[126, "skia.Image.readPixels"]], "ref() (image method)": [[126, "skia.Image.ref"]], "refcolorspace() (image method)": [[126, "skia.Image.refColorSpace"]], "refencodeddata() (image method)": [[126, "skia.Image.refEncodedData"]], "reinterpretcolorspace() (image method)": [[126, "skia.Image.reinterpretColorSpace"]], "resize() (image method)": [[126, "skia.Image.resize"]], "save() (image method)": [[126, "skia.Image.save"]], "scalepixels() (image method)": [[126, "skia.Image.scalePixels"]], "toarray() (image method)": [[126, "skia.Image.toarray"]], "tobytes() (image method)": [[126, "skia.Image.tobytes"]], "unique() (image method)": [[126, "skia.Image.unique"]], "uniqueid() (image method)": [[126, "skia.Image.uniqueID"]], "unref() (image method)": [[126, "skia.Image.unref"]], "width() (image method)": [[126, "skia.Image.width"]], "withdefaultmipmaps() (image method)": [[126, "skia.Image.withDefaultMipmaps"]], "bitdepth (class in skia.image)": [[127, "skia.Image.BitDepth"]], "__init__() (bitdepth method)": [[127, "skia.Image.BitDepth.__init__"]], "kf16 (bitdepth attribute)": [[127, "skia.Image.BitDepth.kF16"]], "ku8 (bitdepth attribute)": [[127, "skia.Image.BitDepth.kU8"]], "name (bitdepth attribute)": [[127, "skia.Image.BitDepth.name"]], "value (bitdepth attribute)": [[127, "skia.Image.BitDepth.value"]], "cachinghint (class in skia.image)": [[128, "skia.Image.CachingHint"]], "__init__() (cachinghint method)": [[128, "skia.Image.CachingHint.__init__"]], "kallow_cachinghint (cachinghint attribute)": [[128, "skia.Image.CachingHint.kAllow_CachingHint"]], "kdisallow_cachinghint (cachinghint attribute)": [[128, "skia.Image.CachingHint.kDisallow_CachingHint"]], "name (cachinghint attribute)": [[128, "skia.Image.CachingHint.name"]], "value (cachinghint attribute)": [[128, "skia.Image.CachingHint.value"]], "compressiontype (class in skia.image)": [[129, "skia.Image.CompressionType"]], "__init__() (compressiontype method)": [[129, "skia.Image.CompressionType.__init__"]], "kbc1_rgb8_unorm (compressiontype attribute)": [[129, "skia.Image.CompressionType.kBC1_RGB8_UNORM"]], "kbc1_rgba8_unorm (compressiontype attribute)": [[129, "skia.Image.CompressionType.kBC1_RGBA8_UNORM"]], "ketc2_rgb8_unorm (compressiontype attribute)": [[129, "skia.Image.CompressionType.kETC2_RGB8_UNORM"]], "klast (compressiontype attribute)": [[129, "skia.Image.CompressionType.kLast"]], "knone (compressiontype attribute)": [[129, "skia.Image.CompressionType.kNone"]], "name (compressiontype attribute)": [[129, "skia.Image.CompressionType.name"]], "value (compressiontype attribute)": [[129, "skia.Image.CompressionType.value"]], "legacybitmapmode (class in skia.image)": [[130, "skia.Image.LegacyBitmapMode"]], "__init__() (legacybitmapmode method)": [[130, "skia.Image.LegacyBitmapMode.__init__"]], "kro_legacybitmapmode (legacybitmapmode attribute)": [[130, "skia.Image.LegacyBitmapMode.kRO_LegacyBitmapMode"]], "name (legacybitmapmode attribute)": [[130, "skia.Image.LegacyBitmapMode.name"]], "value (legacybitmapmode attribute)": [[130, "skia.Image.LegacyBitmapMode.value"]], "deserialize() (imagefilter static method)": [[131, "skia.ImageFilter.Deserialize"]], "imagefilter (class in skia)": [[131, "skia.ImageFilter"]], "__init__() (imagefilter method)": [[131, "skia.ImageFilter.__init__"]], "asacolorfilter() (imagefilter method)": [[131, "skia.ImageFilter.asAColorFilter"]], "ascolorfilter() (imagefilter method)": [[131, "skia.ImageFilter.asColorFilter"]], "cancomputefastbounds() (imagefilter method)": [[131, "skia.ImageFilter.canComputeFastBounds"]], "computefastbounds() (imagefilter method)": [[131, "skia.ImageFilter.computeFastBounds"]], "countinputs() (imagefilter method)": [[131, "skia.ImageFilter.countInputs"]], "filterbounds() (imagefilter method)": [[131, "skia.ImageFilter.filterBounds"]], "getflattenabletype() (imagefilter method)": [[131, "skia.ImageFilter.getFlattenableType"]], "getinput() (imagefilter method)": [[131, "skia.ImageFilter.getInput"]], "gettypename() (imagefilter method)": [[131, "skia.ImageFilter.getTypeName"]], "iscolorfilternode() (imagefilter method)": [[131, "skia.ImageFilter.isColorFilterNode"]], "kcolorfilter_type (imagefilter attribute)": [[131, "skia.ImageFilter.kColorFilter_Type"]], "kdrawlooper_type (imagefilter attribute)": [[131, "skia.ImageFilter.kDrawLooper_Type"]], "kdrawable_type (imagefilter attribute)": [[131, "skia.ImageFilter.kDrawable_Type"]], "kforward_mapdirection (imagefilter attribute)": [[131, "skia.ImageFilter.kForward_MapDirection"]], "kimagefilter_type (imagefilter attribute)": [[131, "skia.ImageFilter.kImageFilter_Type"]], "kmaskfilter_type (imagefilter attribute)": [[131, "skia.ImageFilter.kMaskFilter_Type"]], "kpatheffect_type (imagefilter attribute)": [[131, "skia.ImageFilter.kPathEffect_Type"]], "kreverse_mapdirection (imagefilter attribute)": [[131, "skia.ImageFilter.kReverse_MapDirection"]], "makewithlocalmatrix() (imagefilter method)": [[131, "skia.ImageFilter.makeWithLocalMatrix"]], "ref() (imagefilter method)": [[131, "skia.ImageFilter.ref"]], "serialize() (imagefilter method)": [[131, "skia.ImageFilter.serialize"]], "unique() (imagefilter method)": [[131, "skia.ImageFilter.unique"]], "unref() (imagefilter method)": [[131, "skia.ImageFilter.unref"]], "croprect (class in skia.imagefilter)": [[132, "skia.ImageFilter.CropRect"]], "__init__() (croprect method)": [[132, "skia.ImageFilter.CropRect.__init__"]], "mapdirection (class in skia.imagefilter)": [[133, "skia.ImageFilter.MapDirection"]], "__init__() (mapdirection method)": [[133, "skia.ImageFilter.MapDirection.__init__"]], "kforward_mapdirection (mapdirection attribute)": [[133, "skia.ImageFilter.MapDirection.kForward_MapDirection"]], "kreverse_mapdirection (mapdirection attribute)": [[133, "skia.ImageFilter.MapDirection.kReverse_MapDirection"]], "name (mapdirection attribute)": [[133, "skia.ImageFilter.MapDirection.name"]], "value (mapdirection attribute)": [[133, "skia.ImageFilter.MapDirection.value"]], "type (class in skia.imagefilter)": [[134, "skia.ImageFilter.Type"]], "arithmetic() (imagefilters static method)": [[135, "skia.ImageFilters.Arithmetic"]], "blur() (imagefilters static method)": [[135, "skia.ImageFilters.Blur"]], "colorfilter() (imagefilters static method)": [[135, "skia.ImageFilters.ColorFilter"]], "compose() (imagefilters static method)": [[135, "skia.ImageFilters.Compose"]], "dilate() (imagefilters static method)": [[135, "skia.ImageFilters.Dilate"]], "displacementmap() (imagefilters static method)": [[135, "skia.ImageFilters.DisplacementMap"]], "distantlitdiffuse() (imagefilters static method)": [[135, "skia.ImageFilters.DistantLitDiffuse"]], "distantlitspecular() (imagefilters static method)": [[135, "skia.ImageFilters.DistantLitSpecular"]], "dropshadow() (imagefilters static method)": [[135, "skia.ImageFilters.DropShadow"]], "dropshadowonly() (imagefilters static method)": [[135, "skia.ImageFilters.DropShadowOnly"]], "erode() (imagefilters static method)": [[135, "skia.ImageFilters.Erode"]], "image() (imagefilters static method)": [[135, "skia.ImageFilters.Image"]], "imagefilters (class in skia)": [[135, "skia.ImageFilters"]], "magnifier() (imagefilters static method)": [[135, "skia.ImageFilters.Magnifier"]], "matrixconvolution() (imagefilters static method)": [[135, "skia.ImageFilters.MatrixConvolution"]], "matrixtransform() (imagefilters static method)": [[135, "skia.ImageFilters.MatrixTransform"]], "merge() (imagefilters static method)": [[135, "skia.ImageFilters.Merge"]], "offset() (imagefilters static method)": [[135, "skia.ImageFilters.Offset"]], "picture() (imagefilters static method)": [[135, "skia.ImageFilters.Picture"]], "pointlitdiffuse() (imagefilters static method)": [[135, "skia.ImageFilters.PointLitDiffuse"]], "pointlitspecular() (imagefilters static method)": [[135, "skia.ImageFilters.PointLitSpecular"]], "spotlitdiffuse() (imagefilters static method)": [[135, "skia.ImageFilters.SpotLitDiffuse"]], "spotlitspecular() (imagefilters static method)": [[135, "skia.ImageFilters.SpotLitSpecular"]], "tile() (imagefilters static method)": [[135, "skia.ImageFilters.Tile"]], "xfermode() (imagefilters static method)": [[135, "skia.ImageFilters.Xfermode"]], "__init__() (imagefilters method)": [[135, "skia.ImageFilters.__init__"]], "bytesizeoverflowed() (imageinfo static method)": [[136, "skia.ImageInfo.ByteSizeOverflowed"]], "imageinfo (class in skia)": [[136, "skia.ImageInfo"]], "make() (imageinfo static method)": [[136, "skia.ImageInfo.Make"]], "makea8() (imageinfo static method)": [[136, "skia.ImageInfo.MakeA8"]], "maken32() (imageinfo static method)": [[136, "skia.ImageInfo.MakeN32"]], "maken32premul() (imageinfo static method)": [[136, "skia.ImageInfo.MakeN32Premul"]], "makes32() (imageinfo static method)": [[136, "skia.ImageInfo.MakeS32"]], "makeunknown() (imageinfo static method)": [[136, "skia.ImageInfo.MakeUnknown"]], "__init__() (imageinfo method)": [[136, "skia.ImageInfo.__init__"]], "alphatype() (imageinfo method)": [[136, "skia.ImageInfo.alphaType"]], "bounds() (imageinfo method)": [[136, "skia.ImageInfo.bounds"]], "bytesperpixel() (imageinfo method)": [[136, "skia.ImageInfo.bytesPerPixel"]], "colorinfo() (imageinfo method)": [[136, "skia.ImageInfo.colorInfo"]], "colorspace() (imageinfo method)": [[136, "skia.ImageInfo.colorSpace"]], "colortype() (imageinfo method)": [[136, "skia.ImageInfo.colorType"]], "computebytesize() (imageinfo method)": [[136, "skia.ImageInfo.computeByteSize"]], "computeminbytesize() (imageinfo method)": [[136, "skia.ImageInfo.computeMinByteSize"]], "computeoffset() (imageinfo method)": [[136, "skia.ImageInfo.computeOffset"]], "dimensions() (imageinfo method)": [[136, "skia.ImageInfo.dimensions"]], "gammaclosetosrgb() (imageinfo method)": [[136, "skia.ImageInfo.gammaCloseToSRGB"]], "height() (imageinfo method)": [[136, "skia.ImageInfo.height"]], "isempty() (imageinfo method)": [[136, "skia.ImageInfo.isEmpty"]], "isopaque() (imageinfo method)": [[136, "skia.ImageInfo.isOpaque"]], "makealphatype() (imageinfo method)": [[136, "skia.ImageInfo.makeAlphaType"]], "makecolorspace() (imageinfo method)": [[136, "skia.ImageInfo.makeColorSpace"]], "makecolortype() (imageinfo method)": [[136, "skia.ImageInfo.makeColorType"]], "makedimensions() (imageinfo method)": [[136, "skia.ImageInfo.makeDimensions"]], "makewh() (imageinfo method)": [[136, "skia.ImageInfo.makeWH"]], "minrowbytes() (imageinfo method)": [[136, "skia.ImageInfo.minRowBytes"]], "minrowbytes64() (imageinfo method)": [[136, "skia.ImageInfo.minRowBytes64"]], "refcolorspace() (imageinfo method)": [[136, "skia.ImageInfo.refColorSpace"]], "reset() (imageinfo method)": [[136, "skia.ImageInfo.reset"]], "shiftperpixel() (imageinfo method)": [[136, "skia.ImageInfo.shiftPerPixel"]], "validrowbytes() (imageinfo method)": [[136, "skia.ImageInfo.validRowBytes"]], "width() (imageinfo method)": [[136, "skia.ImageInfo.width"]], "line2dpatheffect (class in skia)": [[137, "skia.Line2DPathEffect"]], "make() (line2dpatheffect static method)": [[137, "skia.Line2DPathEffect.Make"]], "__init__() (line2dpatheffect method)": [[137, "skia.Line2DPathEffect.__init__"]], "lumacolorfilter (class in skia)": [[138, "skia.LumaColorFilter"]], "make() (lumacolorfilter static method)": [[138, "skia.LumaColorFilter.Make"]], "__init__() (lumacolorfilter method)": [[138, "skia.LumaColorFilter.__init__"]], "m44 (class in skia)": [[139, "skia.M44"]], "__init__() (m44 method)": [[139, "skia.M44.__init__"]], "deserialize() (maskfilter static method)": [[140, "skia.MaskFilter.Deserialize"]], "makeblur() (maskfilter static method)": [[140, "skia.MaskFilter.MakeBlur"]], "maskfilter (class in skia)": [[140, "skia.MaskFilter"]], "__init__() (maskfilter method)": [[140, "skia.MaskFilter.__init__"]], "getflattenabletype() (maskfilter method)": [[140, "skia.MaskFilter.getFlattenableType"]], "gettypename() (maskfilter method)": [[140, "skia.MaskFilter.getTypeName"]], "kcolorfilter_type (maskfilter attribute)": [[140, "skia.MaskFilter.kColorFilter_Type"]], "kdrawlooper_type (maskfilter attribute)": [[140, "skia.MaskFilter.kDrawLooper_Type"]], "kdrawable_type (maskfilter attribute)": [[140, "skia.MaskFilter.kDrawable_Type"]], "kimagefilter_type (maskfilter attribute)": [[140, "skia.MaskFilter.kImageFilter_Type"]], "kmaskfilter_type (maskfilter attribute)": [[140, "skia.MaskFilter.kMaskFilter_Type"]], "kpatheffect_type (maskfilter attribute)": [[140, "skia.MaskFilter.kPathEffect_Type"]], "ref() (maskfilter method)": [[140, "skia.MaskFilter.ref"]], "serialize() (maskfilter method)": [[140, "skia.MaskFilter.serialize"]], "unique() (maskfilter method)": [[140, "skia.MaskFilter.unique"]], "unref() (maskfilter method)": [[140, "skia.MaskFilter.unref"]], "type (class in skia.maskfilter)": [[141, "skia.MaskFilter.Type"]], "concat() (matrix static method)": [[142, "skia.Matrix.Concat"]], "i() (matrix static method)": [[142, "skia.Matrix.I"]], "invalidmatrix() (matrix static method)": [[142, "skia.Matrix.InvalidMatrix"]], "makeall() (matrix static method)": [[142, "skia.Matrix.MakeAll"]], "makerecttorect() (matrix static method)": [[142, "skia.Matrix.MakeRectToRect"]], "matrix (class in skia)": [[142, "skia.Matrix"]], "rotatedeg() (matrix static method)": [[142, "skia.Matrix.RotateDeg"]], "rotaterad() (matrix static method)": [[142, "skia.Matrix.RotateRad"]], "scale() (matrix static method)": [[142, "skia.Matrix.Scale"]], "setaffineidentity() (matrix static method)": [[142, "skia.Matrix.SetAffineIdentity"]], "translate() (matrix static method)": [[142, "skia.Matrix.Translate"]], "__init__() (matrix method)": [[142, "skia.Matrix.__init__"]], "asaffine() (matrix method)": [[142, "skia.Matrix.asAffine"]], "decomposescale() (matrix method)": [[142, "skia.Matrix.decomposeScale"]], "dirtymatrixtypecache() (matrix method)": [[142, "skia.Matrix.dirtyMatrixTypeCache"]], "dump() (matrix method)": [[142, "skia.Matrix.dump"]], "get() (matrix method)": [[142, "skia.Matrix.get"]], "get9() (matrix method)": [[142, "skia.Matrix.get9"]], "getmaxscale() (matrix method)": [[142, "skia.Matrix.getMaxScale"]], "getminmaxscales() (matrix method)": [[142, "skia.Matrix.getMinMaxScales"]], "getminscale() (matrix method)": [[142, "skia.Matrix.getMinScale"]], "getperspx() (matrix method)": [[142, "skia.Matrix.getPerspX"]], "getperspy() (matrix method)": [[142, "skia.Matrix.getPerspY"]], "getscalex() (matrix method)": [[142, "skia.Matrix.getScaleX"]], "getscaley() (matrix method)": [[142, "skia.Matrix.getScaleY"]], "getskewx() (matrix method)": [[142, "skia.Matrix.getSkewX"]], "getskewy() (matrix method)": [[142, "skia.Matrix.getSkewY"]], "gettranslatex() (matrix method)": [[142, "skia.Matrix.getTranslateX"]], "gettranslatey() (matrix method)": [[142, "skia.Matrix.getTranslateY"]], "gettype() (matrix method)": [[142, "skia.Matrix.getType"]], "hasperspective() (matrix method)": [[142, "skia.Matrix.hasPerspective"]], "invert() (matrix method)": [[142, "skia.Matrix.invert"]], "isfinite() (matrix method)": [[142, "skia.Matrix.isFinite"]], "isidentity() (matrix method)": [[142, "skia.Matrix.isIdentity"]], "isscaletranslate() (matrix method)": [[142, "skia.Matrix.isScaleTranslate"]], "issimilarity() (matrix method)": [[142, "skia.Matrix.isSimilarity"]], "istranslate() (matrix method)": [[142, "skia.Matrix.isTranslate"]], "kascalex (matrix attribute)": [[142, "skia.Matrix.kAScaleX"]], "kascaley (matrix attribute)": [[142, "skia.Matrix.kAScaleY"]], "kaskewx (matrix attribute)": [[142, "skia.Matrix.kASkewX"]], "kaskewy (matrix attribute)": [[142, "skia.Matrix.kASkewY"]], "katransx (matrix attribute)": [[142, "skia.Matrix.kATransX"]], "katransy (matrix attribute)": [[142, "skia.Matrix.kATransY"]], "kaffine_mask (matrix attribute)": [[142, "skia.Matrix.kAffine_Mask"]], "kcenter_scaletofit (matrix attribute)": [[142, "skia.Matrix.kCenter_ScaleToFit"]], "kend_scaletofit (matrix attribute)": [[142, "skia.Matrix.kEnd_ScaleToFit"]], "kfill_scaletofit (matrix attribute)": [[142, "skia.Matrix.kFill_ScaleToFit"]], "kidentity_mask (matrix attribute)": [[142, "skia.Matrix.kIdentity_Mask"]], "kmpersp0 (matrix attribute)": [[142, "skia.Matrix.kMPersp0"]], "kmpersp1 (matrix attribute)": [[142, "skia.Matrix.kMPersp1"]], "kmpersp2 (matrix attribute)": [[142, "skia.Matrix.kMPersp2"]], "kmscalex (matrix attribute)": [[142, "skia.Matrix.kMScaleX"]], "kmscaley (matrix attribute)": [[142, "skia.Matrix.kMScaleY"]], "kmskewx (matrix attribute)": [[142, "skia.Matrix.kMSkewX"]], "kmskewy (matrix attribute)": [[142, "skia.Matrix.kMSkewY"]], "kmtransx (matrix attribute)": [[142, "skia.Matrix.kMTransX"]], "kmtransy (matrix attribute)": [[142, "skia.Matrix.kMTransY"]], "kperspective_mask (matrix attribute)": [[142, "skia.Matrix.kPerspective_Mask"]], "kscale_mask (matrix attribute)": [[142, "skia.Matrix.kScale_Mask"]], "kstart_scaletofit (matrix attribute)": [[142, "skia.Matrix.kStart_ScaleToFit"]], "ktranslate_mask (matrix attribute)": [[142, "skia.Matrix.kTranslate_Mask"]], "maphomogeneouspoints() (matrix method)": [[142, "skia.Matrix.mapHomogeneousPoints"]], "mappoints() (matrix method)": [[142, "skia.Matrix.mapPoints"]], "mapradius() (matrix method)": [[142, "skia.Matrix.mapRadius"]], "maprect() (matrix method)": [[142, "skia.Matrix.mapRect"]], "maprectscaletranslate() (matrix method)": [[142, "skia.Matrix.mapRectScaleTranslate"]], "maprecttoquad() (matrix method)": [[142, "skia.Matrix.mapRectToQuad"]], "mapvector() (matrix method)": [[142, "skia.Matrix.mapVector"]], "mapvectors() (matrix method)": [[142, "skia.Matrix.mapVectors"]], "mapxy() (matrix method)": [[142, "skia.Matrix.mapXY"]], "normalizeperspective() (matrix method)": [[142, "skia.Matrix.normalizePerspective"]], "postconcat() (matrix method)": [[142, "skia.Matrix.postConcat"]], "postrotate() (matrix method)": [[142, "skia.Matrix.postRotate"]], "postscale() (matrix method)": [[142, "skia.Matrix.postScale"]], "postskew() (matrix method)": [[142, "skia.Matrix.postSkew"]], "posttranslate() (matrix method)": [[142, "skia.Matrix.postTranslate"]], "preconcat() (matrix method)": [[142, "skia.Matrix.preConcat"]], "prerotate() (matrix method)": [[142, "skia.Matrix.preRotate"]], "prescale() (matrix method)": [[142, "skia.Matrix.preScale"]], "preskew() (matrix method)": [[142, "skia.Matrix.preSkew"]], "pretranslate() (matrix method)": [[142, "skia.Matrix.preTranslate"]], "preservesaxisalignment() (matrix method)": [[142, "skia.Matrix.preservesAxisAlignment"]], "preservesrightangles() (matrix method)": [[142, "skia.Matrix.preservesRightAngles"]], "rc() (matrix method)": [[142, "skia.Matrix.rc"]], "rectstaysrect() (matrix method)": [[142, "skia.Matrix.rectStaysRect"]], "reset() (matrix method)": [[142, "skia.Matrix.reset"]], "set() (matrix method)": [[142, "skia.Matrix.set"]], "set9() (matrix method)": [[142, "skia.Matrix.set9"]], "setaffine() (matrix method)": [[142, "skia.Matrix.setAffine"]], "setall() (matrix method)": [[142, "skia.Matrix.setAll"]], "setconcat() (matrix method)": [[142, "skia.Matrix.setConcat"]], "setidentity() (matrix method)": [[142, "skia.Matrix.setIdentity"]], "setperspx() (matrix method)": [[142, "skia.Matrix.setPerspX"]], "setperspy() (matrix method)": [[142, "skia.Matrix.setPerspY"]], "setpolytopoly() (matrix method)": [[142, "skia.Matrix.setPolyToPoly"]], "setrsxform() (matrix method)": [[142, "skia.Matrix.setRSXform"]], "setrecttorect() (matrix method)": [[142, "skia.Matrix.setRectToRect"]], "setrotate() (matrix method)": [[142, "skia.Matrix.setRotate"]], "setscale() (matrix method)": [[142, "skia.Matrix.setScale"]], "setscaletranslate() (matrix method)": [[142, "skia.Matrix.setScaleTranslate"]], "setscalex() (matrix method)": [[142, "skia.Matrix.setScaleX"]], "setscaley() (matrix method)": [[142, "skia.Matrix.setScaleY"]], "setsincos() (matrix method)": [[142, "skia.Matrix.setSinCos"]], "setskew() (matrix method)": [[142, "skia.Matrix.setSkew"]], "setskewx() (matrix method)": [[142, "skia.Matrix.setSkewX"]], "setskewy() (matrix method)": [[142, "skia.Matrix.setSkewY"]], "settranslate() (matrix method)": [[142, "skia.Matrix.setTranslate"]], "settranslatex() (matrix method)": [[142, "skia.Matrix.setTranslateX"]], "settranslatey() (matrix method)": [[142, "skia.Matrix.setTranslateY"]], "scaletofit (class in skia.matrix)": [[143, "skia.Matrix.ScaleToFit"]], "__init__() (scaletofit method)": [[143, "skia.Matrix.ScaleToFit.__init__"]], "kcenter_scaletofit (scaletofit attribute)": [[143, "skia.Matrix.ScaleToFit.kCenter_ScaleToFit"]], "kend_scaletofit (scaletofit attribute)": [[143, "skia.Matrix.ScaleToFit.kEnd_ScaleToFit"]], "kfill_scaletofit (scaletofit attribute)": [[143, "skia.Matrix.ScaleToFit.kFill_ScaleToFit"]], "kstart_scaletofit (scaletofit attribute)": [[143, "skia.Matrix.ScaleToFit.kStart_ScaleToFit"]], "name (scaletofit attribute)": [[143, "skia.Matrix.ScaleToFit.name"]], "value (scaletofit attribute)": [[143, "skia.Matrix.ScaleToFit.value"]], "typemask (class in skia.matrix)": [[144, "skia.Matrix.TypeMask"]], "__init__() (typemask method)": [[144, "skia.Matrix.TypeMask.__init__"]], "kaffine_mask (typemask attribute)": [[144, "skia.Matrix.TypeMask.kAffine_Mask"]], "kidentity_mask (typemask attribute)": [[144, "skia.Matrix.TypeMask.kIdentity_Mask"]], "kperspective_mask (typemask attribute)": [[144, "skia.Matrix.TypeMask.kPerspective_Mask"]], "kscale_mask (typemask attribute)": [[144, "skia.Matrix.TypeMask.kScale_Mask"]], "ktranslate_mask (typemask attribute)": [[144, "skia.Matrix.TypeMask.kTranslate_Mask"]], "name (typemask attribute)": [[144, "skia.Matrix.TypeMask.name"]], "value (typemask attribute)": [[144, "skia.Matrix.TypeMask.value"]], "make() (memorystream static method)": [[145, "skia.MemoryStream.Make"]], "makecopy() (memorystream static method)": [[145, "skia.MemoryStream.MakeCopy"]], "makedirect() (memorystream static method)": [[145, "skia.MemoryStream.MakeDirect"]], "makefromfile() (memorystream static method)": [[145, "skia.MemoryStream.MakeFromFile"]], "memorystream (class in skia)": [[145, "skia.MemoryStream"]], "__init__() (memorystream method)": [[145, "skia.MemoryStream.__init__"]], "asdata() (memorystream method)": [[145, "skia.MemoryStream.asData"]], "duplicate() (memorystream method)": [[145, "skia.MemoryStream.duplicate"]], "fork() (memorystream method)": [[145, "skia.MemoryStream.fork"]], "getatpos() (memorystream method)": [[145, "skia.MemoryStream.getAtPos"]], "getlength() (memorystream method)": [[145, "skia.MemoryStream.getLength"]], "getmemorybase() (memorystream method)": [[145, "skia.MemoryStream.getMemoryBase"]], "getposition() (memorystream method)": [[145, "skia.MemoryStream.getPosition"]], "haslength() (memorystream method)": [[145, "skia.MemoryStream.hasLength"]], "hasposition() (memorystream method)": [[145, "skia.MemoryStream.hasPosition"]], "isatend() (memorystream method)": [[145, "skia.MemoryStream.isAtEnd"]], "move() (memorystream method)": [[145, "skia.MemoryStream.move"]], "peek() (memorystream method)": [[145, "skia.MemoryStream.peek"]], "read() (memorystream method)": [[145, "skia.MemoryStream.read"]], "readbool() (memorystream method)": [[145, "skia.MemoryStream.readBool"]], "readpackeduint() (memorystream method)": [[145, "skia.MemoryStream.readPackedUInt"]], "reads16() (memorystream method)": [[145, "skia.MemoryStream.readS16"]], "reads32() (memorystream method)": [[145, "skia.MemoryStream.readS32"]], "reads8() (memorystream method)": [[145, "skia.MemoryStream.readS8"]], "readscalar() (memorystream method)": [[145, "skia.MemoryStream.readScalar"]], "readu16() (memorystream method)": [[145, "skia.MemoryStream.readU16"]], "readu32() (memorystream method)": [[145, "skia.MemoryStream.readU32"]], "readu8() (memorystream method)": [[145, "skia.MemoryStream.readU8"]], "rewind() (memorystream method)": [[145, "skia.MemoryStream.rewind"]], "seek() (memorystream method)": [[145, "skia.MemoryStream.seek"]], "setdata() (memorystream method)": [[145, "skia.MemoryStream.setData"]], "setmemory() (memorystream method)": [[145, "skia.MemoryStream.setMemory"]], "skip() (memorystream method)": [[145, "skia.MemoryStream.skip"]], "skiptoalign4() (memorystream method)": [[145, "skia.MemoryStream.skipToAlign4"]], "mipmapbuilder (class in skia)": [[146, "skia.MipmapBuilder"]], "__init__() (mipmapbuilder method)": [[146, "skia.MipmapBuilder.__init__"]], "attachto() (mipmapbuilder method)": [[146, "skia.MipmapBuilder.attachTo"]], "countlevels() (mipmapbuilder method)": [[146, "skia.MipmapBuilder.countLevels"]], "level() (mipmapbuilder method)": [[146, "skia.MipmapBuilder.level"]], "mipmapmode (class in skia)": [[147, "skia.MipmapMode"]], "__init__() (mipmapmode method)": [[147, "skia.MipmapMode.__init__"]], "klinear (mipmapmode attribute)": [[147, "skia.MipmapMode.kLinear"]], "knearest (mipmapmode attribute)": [[147, "skia.MipmapMode.kNearest"]], "knone (mipmapmode attribute)": [[147, "skia.MipmapMode.kNone"]], "name (mipmapmode attribute)": [[147, "skia.MipmapMode.name"]], "value (mipmapmode attribute)": [[147, "skia.MipmapMode.value"]], "nullwstream (class in skia)": [[148, "skia.NullWStream"]], "sizeofpackeduint() (nullwstream static method)": [[148, "skia.NullWStream.SizeOfPackedUInt"]], "__init__() (nullwstream method)": [[148, "skia.NullWStream.__init__"]], "byteswritten() (nullwstream method)": [[148, "skia.NullWStream.bytesWritten"]], "flush() (nullwstream method)": [[148, "skia.NullWStream.flush"]], "newline() (nullwstream method)": [[148, "skia.NullWStream.newline"]], "write() (nullwstream method)": [[148, "skia.NullWStream.write"]], "write16() (nullwstream method)": [[148, "skia.NullWStream.write16"]], "write32() (nullwstream method)": [[148, "skia.NullWStream.write32"]], "write8() (nullwstream method)": [[148, "skia.NullWStream.write8"]], "writebigdecastext() (nullwstream method)": [[148, "skia.NullWStream.writeBigDecAsText"]], "writebool() (nullwstream method)": [[148, "skia.NullWStream.writeBool"]], "writedecastext() (nullwstream method)": [[148, "skia.NullWStream.writeDecAsText"]], "writehexastext() (nullwstream method)": [[148, "skia.NullWStream.writeHexAsText"]], "writepackeduint() (nullwstream method)": [[148, "skia.NullWStream.writePackedUInt"]], "writescalar() (nullwstream method)": [[148, "skia.NullWStream.writeScalar"]], "writescalarastext() (nullwstream method)": [[148, "skia.NullWStream.writeScalarAsText"]], "writestream() (nullwstream method)": [[148, "skia.NullWStream.writeStream"]], "writetext() (nullwstream method)": [[148, "skia.NullWStream.writeText"]], "opbuilder (class in skia)": [[149, "skia.OpBuilder"]], "__init__() (opbuilder method)": [[149, "skia.OpBuilder.__init__"]], "add() (opbuilder method)": [[149, "skia.OpBuilder.add"]], "resolve() (opbuilder method)": [[149, "skia.OpBuilder.resolve"]], "makewithcolors() (overdrawcolorfilter static method)": [[150, "skia.OverdrawColorFilter.MakeWithColors"]], "overdrawcolorfilter (class in skia)": [[150, "skia.OverdrawColorFilter"]], "__init__() (overdrawcolorfilter method)": [[150, "skia.OverdrawColorFilter.__init__"]], "knumcolors (overdrawcolorfilter attribute)": [[150, "skia.OverdrawColorFilter.kNumColors"]], "makedocument() (pdf static method)": [[151, "skia.PDF.MakeDocument"]], "pdf (class in skia)": [[151, "skia.PDF"]], "setnodeid() (pdf static method)": [[151, "skia.PDF.SetNodeId"]], "__init__() (pdf method)": [[151, "skia.PDF.__init__"]], "attributelist (class in skia.pdf)": [[152, "skia.PDF.AttributeList"]], "__init__() (attributelist method)": [[152, "skia.PDF.AttributeList.__init__"]], "appendfloat() (attributelist method)": [[152, "skia.PDF.AttributeList.appendFloat"]], "appendfloatarray() (attributelist method)": [[152, "skia.PDF.AttributeList.appendFloatArray"]], "appendint() (attributelist method)": [[152, "skia.PDF.AttributeList.appendInt"]], "appendstring() (attributelist method)": [[152, "skia.PDF.AttributeList.appendString"]], "appendstringarray() (attributelist method)": [[152, "skia.PDF.AttributeList.appendStringArray"]], "metadata (class in skia.pdf)": [[153, "skia.PDF.Metadata"]], "fauthor (metadata attribute)": [[153, "skia.PDF.Metadata.fAuthor"]], "fcreator (metadata attribute)": [[153, "skia.PDF.Metadata.fCreator"]], "fencodingquality (metadata attribute)": [[153, "skia.PDF.Metadata.fEncodingQuality"]], "fkeywords (metadata attribute)": [[153, "skia.PDF.Metadata.fKeywords"]], "fpdfa (metadata attribute)": [[153, "skia.PDF.Metadata.fPDFA"]], "fproducer (metadata attribute)": [[153, "skia.PDF.Metadata.fProducer"]], "frasterdpi (metadata attribute)": [[153, "skia.PDF.Metadata.fRasterDPI"]], "fstructureelementtreeroot (metadata attribute)": [[153, "skia.PDF.Metadata.fStructureElementTreeRoot"]], "fsubject (metadata attribute)": [[153, "skia.PDF.Metadata.fSubject"]], "ftitle (metadata attribute)": [[153, "skia.PDF.Metadata.fTitle"]], "structureelementnode (class in skia.pdf)": [[154, "skia.PDF.StructureElementNode"]], "__init__() (structureelementnode method)": [[154, "skia.PDF.StructureElementNode.__init__"]], "falt (structureelementnode attribute)": [[154, "skia.PDF.StructureElementNode.fAlt"]], "fattributes (structureelementnode attribute)": [[154, "skia.PDF.StructureElementNode.fAttributes"]], "flang (structureelementnode attribute)": [[154, "skia.PDF.StructureElementNode.fLang"]], "fnodeid (structureelementnode attribute)": [[154, "skia.PDF.StructureElementNode.fNodeId"]], "ftypestring (structureelementnode attribute)": [[154, "skia.PDF.StructureElementNode.fTypeString"]], "paint (class in skia)": [[155, "skia.Paint"]], "__init__() (paint method)": [[155, "skia.Paint.__init__"]], "cancomputefastbounds() (paint method)": [[155, "skia.Paint.canComputeFastBounds"]], "computefastbounds() (paint method)": [[155, "skia.Paint.computeFastBounds"]], "computefaststrokebounds() (paint method)": [[155, "skia.Paint.computeFastStrokeBounds"]], "docomputefastbounds() (paint method)": [[155, "skia.Paint.doComputeFastBounds"]], "getalpha() (paint method)": [[155, "skia.Paint.getAlpha"]], "getalphaf() (paint method)": [[155, "skia.Paint.getAlphaf"]], "getblendmode() (paint method)": [[155, "skia.Paint.getBlendMode"]], "getcolor() (paint method)": [[155, "skia.Paint.getColor"]], "getcolor4f() (paint method)": [[155, "skia.Paint.getColor4f"]], "getcolorfilter() (paint method)": [[155, "skia.Paint.getColorFilter"]], "getfillpath() (paint method)": [[155, "skia.Paint.getFillPath"]], "getimagefilter() (paint method)": [[155, "skia.Paint.getImageFilter"]], "getmaskfilter() (paint method)": [[155, "skia.Paint.getMaskFilter"]], "getpatheffect() (paint method)": [[155, "skia.Paint.getPathEffect"]], "getshader() (paint method)": [[155, "skia.Paint.getShader"]], "getstrokecap() (paint method)": [[155, "skia.Paint.getStrokeCap"]], "getstrokejoin() (paint method)": [[155, "skia.Paint.getStrokeJoin"]], "getstrokemiter() (paint method)": [[155, "skia.Paint.getStrokeMiter"]], "getstrokewidth() (paint method)": [[155, "skia.Paint.getStrokeWidth"]], "getstyle() (paint method)": [[155, "skia.Paint.getStyle"]], "isantialias() (paint method)": [[155, "skia.Paint.isAntiAlias"]], "isdither() (paint method)": [[155, "skia.Paint.isDither"]], "issrcover() (paint method)": [[155, "skia.Paint.isSrcOver"]], "kbevel_join (paint attribute)": [[155, "skia.Paint.kBevel_Join"]], "kbutt_cap (paint attribute)": [[155, "skia.Paint.kButt_Cap"]], "kcapcount (paint attribute)": [[155, "skia.Paint.kCapCount"]], "kdefault_cap (paint attribute)": [[155, "skia.Paint.kDefault_Cap"]], "kdefault_join (paint attribute)": [[155, "skia.Paint.kDefault_Join"]], "kfill_style (paint attribute)": [[155, "skia.Paint.kFill_Style"]], "kjoincount (paint attribute)": [[155, "skia.Paint.kJoinCount"]], "klast_cap (paint attribute)": [[155, "skia.Paint.kLast_Cap"]], "klast_join (paint attribute)": [[155, "skia.Paint.kLast_Join"]], "kmiter_join (paint attribute)": [[155, "skia.Paint.kMiter_Join"]], "kround_cap (paint attribute)": [[155, "skia.Paint.kRound_Cap"]], "kround_join (paint attribute)": [[155, "skia.Paint.kRound_Join"]], "ksquare_cap (paint attribute)": [[155, "skia.Paint.kSquare_Cap"]], "kstrokeandfill_style (paint attribute)": [[155, "skia.Paint.kStrokeAndFill_Style"]], "kstroke_style (paint attribute)": [[155, "skia.Paint.kStroke_Style"]], "kstylecount (paint attribute)": [[155, "skia.Paint.kStyleCount"]], "nothingtodraw() (paint method)": [[155, "skia.Paint.nothingToDraw"]], "refcolorfilter() (paint method)": [[155, "skia.Paint.refColorFilter"]], "refimagefilter() (paint method)": [[155, "skia.Paint.refImageFilter"]], "refmaskfilter() (paint method)": [[155, "skia.Paint.refMaskFilter"]], "refpatheffect() (paint method)": [[155, "skia.Paint.refPathEffect"]], "refshader() (paint method)": [[155, "skia.Paint.refShader"]], "reset() (paint method)": [[155, "skia.Paint.reset"]], "setargb() (paint method)": [[155, "skia.Paint.setARGB"]], "setalpha() (paint method)": [[155, "skia.Paint.setAlpha"]], "setalphaf() (paint method)": [[155, "skia.Paint.setAlphaf"]], "setantialias() (paint method)": [[155, "skia.Paint.setAntiAlias"]], "setblendmode() (paint method)": [[155, "skia.Paint.setBlendMode"]], "setcolor() (paint method)": [[155, "skia.Paint.setColor"]], "setcolor4f() (paint method)": [[155, "skia.Paint.setColor4f"]], "setcolorfilter() (paint method)": [[155, "skia.Paint.setColorFilter"]], "setdither() (paint method)": [[155, "skia.Paint.setDither"]], "setimagefilter() (paint method)": [[155, "skia.Paint.setImageFilter"]], "setmaskfilter() (paint method)": [[155, "skia.Paint.setMaskFilter"]], "setpatheffect() (paint method)": [[155, "skia.Paint.setPathEffect"]], "setshader() (paint method)": [[155, "skia.Paint.setShader"]], "setstrokecap() (paint method)": [[155, "skia.Paint.setStrokeCap"]], "setstrokejoin() (paint method)": [[155, "skia.Paint.setStrokeJoin"]], "setstrokemiter() (paint method)": [[155, "skia.Paint.setStrokeMiter"]], "setstrokewidth() (paint method)": [[155, "skia.Paint.setStrokeWidth"]], "setstyle() (paint method)": [[155, "skia.Paint.setStyle"]], "cap (class in skia.paint)": [[156, "skia.Paint.Cap"]], "__init__() (cap method)": [[156, "skia.Paint.Cap.__init__"]], "kbutt_cap (cap attribute)": [[156, "skia.Paint.Cap.kButt_Cap"]], "kdefault_cap (cap attribute)": [[156, "skia.Paint.Cap.kDefault_Cap"]], "klast_cap (cap attribute)": [[156, "skia.Paint.Cap.kLast_Cap"]], "kround_cap (cap attribute)": [[156, "skia.Paint.Cap.kRound_Cap"]], "ksquare_cap (cap attribute)": [[156, "skia.Paint.Cap.kSquare_Cap"]], "name (cap attribute)": [[156, "skia.Paint.Cap.name"]], "value (cap attribute)": [[156, "skia.Paint.Cap.value"]], "join (class in skia.paint)": [[157, "skia.Paint.Join"]], "__init__() (join method)": [[157, "skia.Paint.Join.__init__"]], "kbevel_join (join attribute)": [[157, "skia.Paint.Join.kBevel_Join"]], "kdefault_join (join attribute)": [[157, "skia.Paint.Join.kDefault_Join"]], "klast_join (join attribute)": [[157, "skia.Paint.Join.kLast_Join"]], "kmiter_join (join attribute)": [[157, "skia.Paint.Join.kMiter_Join"]], "kround_join (join attribute)": [[157, "skia.Paint.Join.kRound_Join"]], "name (join attribute)": [[157, "skia.Paint.Join.name"]], "value (join attribute)": [[157, "skia.Paint.Join.value"]], "style (class in skia.paint)": [[158, "skia.Paint.Style"]], "__init__() (style method)": [[158, "skia.Paint.Style.__init__"], [167, "skia.Path1DPathEffect.Style.__init__"], [233, "skia.StrokeRec.Style.__init__"]], "kfill_style (style attribute)": [[158, "skia.Paint.Style.kFill_Style"], [233, "skia.StrokeRec.Style.kFill_Style"]], "kstrokeandfill_style (style attribute)": [[158, "skia.Paint.Style.kStrokeAndFill_Style"], [233, "skia.StrokeRec.Style.kStrokeAndFill_Style"]], "kstroke_style (style attribute)": [[158, "skia.Paint.Style.kStroke_Style"], [233, "skia.StrokeRec.Style.kStroke_Style"]], "name (style attribute)": [[158, "skia.Paint.Style.name"], [167, "skia.Path1DPathEffect.Style.name"], [233, "skia.StrokeRec.Style.name"]], "value (style attribute)": [[158, "skia.Paint.Style.value"], [167, "skia.Path1DPathEffect.Style.value"], [233, "skia.StrokeRec.Style.value"]], "circle() (path static method)": [[159, "skia.Path.Circle"]], "convertconictoquads() (path static method)": [[159, "skia.Path.ConvertConicToQuads"]], "iscubicdegenerate() (path static method)": [[159, "skia.Path.IsCubicDegenerate"]], "islinedegenerate() (path static method)": [[159, "skia.Path.IsLineDegenerate"]], "isquaddegenerate() (path static method)": [[159, "skia.Path.IsQuadDegenerate"]], "line() (path static method)": [[159, "skia.Path.Line"]], "make() (path static method)": [[159, "skia.Path.Make"]], "oval() (path static method)": [[159, "skia.Path.Oval"]], "path (class in skia)": [[159, "skia.Path"]], "polygon() (path static method)": [[159, "skia.Path.Polygon"]], "rrect() (path static method)": [[159, "skia.Path.RRect"]], "rect() (path static method)": [[159, "skia.Path.Rect"]], "__init__() (path method)": [[159, "skia.Path.__init__"]], "addarc() (path method)": [[159, "skia.Path.addArc"]], "addcircle() (path method)": [[159, "skia.Path.addCircle"]], "addoval() (path method)": [[159, "skia.Path.addOval"]], "addpath() (path method)": [[159, "skia.Path.addPath"]], "addpoly() (path method)": [[159, "skia.Path.addPoly"]], "addrrect() (path method)": [[159, "skia.Path.addRRect"]], "addrect() (path method)": [[159, "skia.Path.addRect"]], "addroundrect() (path method)": [[159, "skia.Path.addRoundRect"]], "approximatebytesused() (path method)": [[159, "skia.Path.approximateBytesUsed"]], "arcto() (path method)": [[159, "skia.Path.arcTo"]], "close() (path method)": [[159, "skia.Path.close"]], "computetightbounds() (path method)": [[159, "skia.Path.computeTightBounds"]], "conicto() (path method)": [[159, "skia.Path.conicTo"]], "conservativelycontainsrect() (path method)": [[159, "skia.Path.conservativelyContainsRect"]], "contains() (path method)": [[159, "skia.Path.contains"]], "countpoints() (path method)": [[159, "skia.Path.countPoints"]], "countverbs() (path method)": [[159, "skia.Path.countVerbs"]], "cubicto() (path method)": [[159, "skia.Path.cubicTo"]], "dump() (path method)": [[159, "skia.Path.dump"]], "dumphex() (path method)": [[159, "skia.Path.dumpHex"]], "getbounds() (path method)": [[159, "skia.Path.getBounds"]], "getfilltype() (path method)": [[159, "skia.Path.getFillType"]], "getgenerationid() (path method)": [[159, "skia.Path.getGenerationID"]], "getlastpt() (path method)": [[159, "skia.Path.getLastPt"]], "getpoint() (path method)": [[159, "skia.Path.getPoint"]], "getpoints() (path method)": [[159, "skia.Path.getPoints"]], "getsegmentmasks() (path method)": [[159, "skia.Path.getSegmentMasks"]], "getverbs() (path method)": [[159, "skia.Path.getVerbs"]], "increserve() (path method)": [[159, "skia.Path.incReserve"]], "interpolate() (path method)": [[159, "skia.Path.interpolate"]], "isconvex() (path method)": [[159, "skia.Path.isConvex"]], "isempty() (path method)": [[159, "skia.Path.isEmpty"]], "isfinite() (path method)": [[159, "skia.Path.isFinite"]], "isinterpolatable() (path method)": [[159, "skia.Path.isInterpolatable"]], "isinversefilltype() (path method)": [[159, "skia.Path.isInverseFillType"]], "islastcontourclosed() (path method)": [[159, "skia.Path.isLastContourClosed"]], "isline() (path method)": [[159, "skia.Path.isLine"]], "isoval() (path method)": [[159, "skia.Path.isOval"]], "isrrect() (path method)": [[159, "skia.Path.isRRect"]], "isrect() (path method)": [[159, "skia.Path.isRect"]], "isvalid() (path method)": [[159, "skia.Path.isValid"]], "isvolatile() (path method)": [[159, "skia.Path.isVolatile"]], "kappend_addpathmode (path attribute)": [[159, "skia.Path.kAppend_AddPathMode"]], "kclose_verb (path attribute)": [[159, "skia.Path.kClose_Verb"]], "kconic_segmentmask (path attribute)": [[159, "skia.Path.kConic_SegmentMask"]], "kconic_verb (path attribute)": [[159, "skia.Path.kConic_Verb"]], "kcubic_segmentmask (path attribute)": [[159, "skia.Path.kCubic_SegmentMask"]], "kcubic_verb (path attribute)": [[159, "skia.Path.kCubic_Verb"]], "kdone_verb (path attribute)": [[159, "skia.Path.kDone_Verb"]], "kextend_addpathmode (path attribute)": [[159, "skia.Path.kExtend_AddPathMode"]], "klarge_arcsize (path attribute)": [[159, "skia.Path.kLarge_ArcSize"]], "kline_segmentmask (path attribute)": [[159, "skia.Path.kLine_SegmentMask"]], "kline_verb (path attribute)": [[159, "skia.Path.kLine_Verb"]], "kmove_verb (path attribute)": [[159, "skia.Path.kMove_Verb"]], "kquad_segmentmask (path attribute)": [[159, "skia.Path.kQuad_SegmentMask"]], "kquad_verb (path attribute)": [[159, "skia.Path.kQuad_Verb"]], "ksmall_arcsize (path attribute)": [[159, "skia.Path.kSmall_ArcSize"]], "lineto() (path method)": [[159, "skia.Path.lineTo"]], "moveto() (path method)": [[159, "skia.Path.moveTo"]], "offset() (path method)": [[159, "skia.Path.offset"]], "quadto() (path method)": [[159, "skia.Path.quadTo"]], "rarcto() (path method)": [[159, "skia.Path.rArcTo"]], "rconicto() (path method)": [[159, "skia.Path.rConicTo"]], "rcubicto() (path method)": [[159, "skia.Path.rCubicTo"]], "rlineto() (path method)": [[159, "skia.Path.rLineTo"]], "rmoveto() (path method)": [[159, "skia.Path.rMoveTo"]], "rquadto() (path method)": [[159, "skia.Path.rQuadTo"]], "readfrommemory() (path method)": [[159, "skia.Path.readFromMemory"]], "reset() (path method)": [[159, "skia.Path.reset"]], "reverseaddpath() (path method)": [[159, "skia.Path.reverseAddPath"]], "rewind() (path method)": [[159, "skia.Path.rewind"]], "serialize() (path method)": [[159, "skia.Path.serialize"]], "setfilltype() (path method)": [[159, "skia.Path.setFillType"]], "setisvolatile() (path method)": [[159, "skia.Path.setIsVolatile"]], "setlastpt() (path method)": [[159, "skia.Path.setLastPt"]], "swap() (path method)": [[159, "skia.Path.swap"]], "toggleinversefilltype() (path method)": [[159, "skia.Path.toggleInverseFillType"]], "transform() (path method)": [[159, "skia.Path.transform"]], "updateboundscache() (path method)": [[159, "skia.Path.updateBoundsCache"]], "writetomemory() (path method)": [[159, "skia.Path.writeToMemory"]], "addpathmode (class in skia.path)": [[160, "skia.Path.AddPathMode"]], "__init__() (addpathmode method)": [[160, "skia.Path.AddPathMode.__init__"]], "kappend_addpathmode (addpathmode attribute)": [[160, "skia.Path.AddPathMode.kAppend_AddPathMode"]], "kextend_addpathmode (addpathmode attribute)": [[160, "skia.Path.AddPathMode.kExtend_AddPathMode"]], "name (addpathmode attribute)": [[160, "skia.Path.AddPathMode.name"]], "value (addpathmode attribute)": [[160, "skia.Path.AddPathMode.value"]], "arcsize (class in skia.path)": [[161, "skia.Path.ArcSize"]], "__init__() (arcsize method)": [[161, "skia.Path.ArcSize.__init__"], [170, "skia.PathBuilder.ArcSize.__init__"]], "klarge_arcsize (arcsize attribute)": [[161, "skia.Path.ArcSize.kLarge_ArcSize"], [170, "skia.PathBuilder.ArcSize.kLarge_ArcSize"]], "ksmall_arcsize (arcsize attribute)": [[161, "skia.Path.ArcSize.kSmall_ArcSize"], [170, "skia.PathBuilder.ArcSize.kSmall_ArcSize"]], "name (arcsize attribute)": [[161, "skia.Path.ArcSize.name"], [170, "skia.PathBuilder.ArcSize.name"]], "value (arcsize attribute)": [[161, "skia.Path.ArcSize.value"], [170, "skia.PathBuilder.ArcSize.value"]], "iter (class in skia.path)": [[162, "skia.Path.Iter"]], "__init__() (iter method)": [[162, "skia.Path.Iter.__init__"], [252, "skia.TextBlob.Iter.__init__"]], "conicweight() (iter method)": [[162, "skia.Path.Iter.conicWeight"]], "iscloseline() (iter method)": [[162, "skia.Path.Iter.isCloseLine"]], "isclosedcontour() (iter method)": [[162, "skia.Path.Iter.isClosedContour"]], "next() (iter method)": [[162, "skia.Path.Iter.next"], [252, "skia.TextBlob.Iter.next"]], "setpath() (iter method)": [[162, "skia.Path.Iter.setPath"]], "rawiter (class in skia.path)": [[163, "skia.Path.RawIter"]], "__init__() (rawiter method)": [[163, "skia.Path.RawIter.__init__"]], "conicweight() (rawiter method)": [[163, "skia.Path.RawIter.conicWeight"]], "next() (rawiter method)": [[163, "skia.Path.RawIter.next"]], "peek() (rawiter method)": [[163, "skia.Path.RawIter.peek"]], "setpath() (rawiter method)": [[163, "skia.Path.RawIter.setPath"]], "segmentmask (class in skia.path)": [[164, "skia.Path.SegmentMask"]], "__init__() (segmentmask method)": [[164, "skia.Path.SegmentMask.__init__"]], "kconic_segmentmask (segmentmask attribute)": [[164, "skia.Path.SegmentMask.kConic_SegmentMask"]], "kcubic_segmentmask (segmentmask attribute)": [[164, "skia.Path.SegmentMask.kCubic_SegmentMask"]], "kline_segmentmask (segmentmask attribute)": [[164, "skia.Path.SegmentMask.kLine_SegmentMask"]], "kquad_segmentmask (segmentmask attribute)": [[164, "skia.Path.SegmentMask.kQuad_SegmentMask"]], "name (segmentmask attribute)": [[164, "skia.Path.SegmentMask.name"]], "value (segmentmask attribute)": [[164, "skia.Path.SegmentMask.value"]], "verb (class in skia.path)": [[165, "skia.Path.Verb"]], "__init__() (verb method)": [[165, "skia.Path.Verb.__init__"]], "kclose_verb (verb attribute)": [[165, "skia.Path.Verb.kClose_Verb"]], "kconic_verb (verb attribute)": [[165, "skia.Path.Verb.kConic_Verb"]], "kcubic_verb (verb attribute)": [[165, "skia.Path.Verb.kCubic_Verb"]], "kdone_verb (verb attribute)": [[165, "skia.Path.Verb.kDone_Verb"]], "kline_verb (verb attribute)": [[165, "skia.Path.Verb.kLine_Verb"]], "kmove_verb (verb attribute)": [[165, "skia.Path.Verb.kMove_Verb"]], "kquad_verb (verb attribute)": [[165, "skia.Path.Verb.kQuad_Verb"]], "name (verb attribute)": [[165, "skia.Path.Verb.name"]], "value (verb attribute)": [[165, "skia.Path.Verb.value"]], "make() (path1dpatheffect static method)": [[166, "skia.Path1DPathEffect.Make"]], "path1dpatheffect (class in skia)": [[166, "skia.Path1DPathEffect"]], "__init__() (path1dpatheffect method)": [[166, "skia.Path1DPathEffect.__init__"]], "klastenum_style (path1dpatheffect attribute)": [[166, "skia.Path1DPathEffect.kLastEnum_Style"]], "kmorph_style (path1dpatheffect attribute)": [[166, "skia.Path1DPathEffect.kMorph_Style"]], "krotate_style (path1dpatheffect attribute)": [[166, "skia.Path1DPathEffect.kRotate_Style"]], "ktranslate_style (path1dpatheffect attribute)": [[166, "skia.Path1DPathEffect.kTranslate_Style"]], "style (class in skia.path1dpatheffect)": [[167, "skia.Path1DPathEffect.Style"]], "klastenum_style (style attribute)": [[167, "skia.Path1DPathEffect.Style.kLastEnum_Style"]], "kmorph_style (style attribute)": [[167, "skia.Path1DPathEffect.Style.kMorph_Style"]], "krotate_style (style attribute)": [[167, "skia.Path1DPathEffect.Style.kRotate_Style"]], "ktranslate_style (style attribute)": [[167, "skia.Path1DPathEffect.Style.kTranslate_Style"]], "make() (path2dpatheffect static method)": [[168, "skia.Path2DPathEffect.Make"]], "path2dpatheffect (class in skia)": [[168, "skia.Path2DPathEffect"]], "__init__() (path2dpatheffect method)": [[168, "skia.Path2DPathEffect.__init__"]], "pathbuilder (class in skia)": [[169, "skia.PathBuilder"]], "__init__() (pathbuilder method)": [[169, "skia.PathBuilder.__init__"]], "addarc() (pathbuilder method)": [[169, "skia.PathBuilder.addArc"]], "addcircle() (pathbuilder method)": [[169, "skia.PathBuilder.addCircle"]], "addoval() (pathbuilder method)": [[169, "skia.PathBuilder.addOval"]], "addpolygon() (pathbuilder method)": [[169, "skia.PathBuilder.addPolygon"]], "addrrect() (pathbuilder method)": [[169, "skia.PathBuilder.addRRect"]], "addrect() (pathbuilder method)": [[169, "skia.PathBuilder.addRect"]], "arcto() (pathbuilder method)": [[169, "skia.PathBuilder.arcTo"]], "close() (pathbuilder method)": [[169, "skia.PathBuilder.close"]], "computebounds() (pathbuilder method)": [[169, "skia.PathBuilder.computeBounds"]], "conicto() (pathbuilder method)": [[169, "skia.PathBuilder.conicTo"]], "cubicto() (pathbuilder method)": [[169, "skia.PathBuilder.cubicTo"]], "detach() (pathbuilder method)": [[169, "skia.PathBuilder.detach"]], "filltype() (pathbuilder method)": [[169, "skia.PathBuilder.fillType"]], "increserve() (pathbuilder method)": [[169, "skia.PathBuilder.incReserve"]], "klarge_arcsize (pathbuilder attribute)": [[169, "skia.PathBuilder.kLarge_ArcSize"]], "ksmall_arcsize (pathbuilder attribute)": [[169, "skia.PathBuilder.kSmall_ArcSize"]], "lineto() (pathbuilder method)": [[169, "skia.PathBuilder.lineTo"]], "moveto() (pathbuilder method)": [[169, "skia.PathBuilder.moveTo"]], "offset() (pathbuilder method)": [[169, "skia.PathBuilder.offset"]], "polylineto() (pathbuilder method)": [[169, "skia.PathBuilder.polylineTo"]], "quadto() (pathbuilder method)": [[169, "skia.PathBuilder.quadTo"]], "rconicto() (pathbuilder method)": [[169, "skia.PathBuilder.rConicTo"]], "rcubicto() (pathbuilder method)": [[169, "skia.PathBuilder.rCubicTo"]], "rlineto() (pathbuilder method)": [[169, "skia.PathBuilder.rLineTo"]], "rquadto() (pathbuilder method)": [[169, "skia.PathBuilder.rQuadTo"]], "reset() (pathbuilder method)": [[169, "skia.PathBuilder.reset"]], "setfilltype() (pathbuilder method)": [[169, "skia.PathBuilder.setFillType"]], "setisvolatile() (pathbuilder method)": [[169, "skia.PathBuilder.setIsVolatile"]], "snapshot() (pathbuilder method)": [[169, "skia.PathBuilder.snapshot"]], "toggleinversefilltype() (pathbuilder method)": [[169, "skia.PathBuilder.toggleInverseFillType"]], "arcsize (class in skia.pathbuilder)": [[170, "skia.PathBuilder.ArcSize"]], "pathdirection (class in skia)": [[171, "skia.PathDirection"]], "__init__() (pathdirection method)": [[171, "skia.PathDirection.__init__"]], "kccw (pathdirection attribute)": [[171, "skia.PathDirection.kCCW"]], "kcw (pathdirection attribute)": [[171, "skia.PathDirection.kCW"]], "name (pathdirection attribute)": [[171, "skia.PathDirection.name"]], "value (pathdirection attribute)": [[171, "skia.PathDirection.value"]], "deserialize() (patheffect static method)": [[172, "skia.PathEffect.Deserialize"]], "getflattenabletype() (patheffect static method)": [[172, "skia.PathEffect.GetFlattenableType"]], "makecompose() (patheffect static method)": [[172, "skia.PathEffect.MakeCompose"]], "makesum() (patheffect static method)": [[172, "skia.PathEffect.MakeSum"]], "patheffect (class in skia)": [[172, "skia.PathEffect"]], "__init__() (patheffect method)": [[172, "skia.PathEffect.__init__"]], "filterpath() (patheffect method)": [[172, "skia.PathEffect.filterPath"]], "getflattenabletype() (patheffect method)": [[172, "skia.PathEffect.getFlattenableType"]], "gettypename() (patheffect method)": [[172, "skia.PathEffect.getTypeName"]], "kcolorfilter_type (patheffect attribute)": [[172, "skia.PathEffect.kColorFilter_Type"]], "kdrawlooper_type (patheffect attribute)": [[172, "skia.PathEffect.kDrawLooper_Type"]], "kdrawable_type (patheffect attribute)": [[172, "skia.PathEffect.kDrawable_Type"]], "kimagefilter_type (patheffect attribute)": [[172, "skia.PathEffect.kImageFilter_Type"]], "kmaskfilter_type (patheffect attribute)": [[172, "skia.PathEffect.kMaskFilter_Type"]], "kpatheffect_type (patheffect attribute)": [[172, "skia.PathEffect.kPathEffect_Type"]], "ref() (patheffect method)": [[172, "skia.PathEffect.ref"]], "serialize() (patheffect method)": [[172, "skia.PathEffect.serialize"]], "unique() (patheffect method)": [[172, "skia.PathEffect.unique"]], "unref() (patheffect method)": [[172, "skia.PathEffect.unref"]], "type (class in skia.patheffect)": [[173, "skia.PathEffect.Type"]], "pathfilltype (class in skia)": [[174, "skia.PathFillType"]], "__init__() (pathfilltype method)": [[174, "skia.PathFillType.__init__"]], "kevenodd (pathfilltype attribute)": [[174, "skia.PathFillType.kEvenOdd"]], "kinverseevenodd (pathfilltype attribute)": [[174, "skia.PathFillType.kInverseEvenOdd"]], "kinversewinding (pathfilltype attribute)": [[174, "skia.PathFillType.kInverseWinding"]], "kwinding (pathfilltype attribute)": [[174, "skia.PathFillType.kWinding"]], "name (pathfilltype attribute)": [[174, "skia.PathFillType.name"]], "value (pathfilltype attribute)": [[174, "skia.PathFillType.value"]], "pathmeasure (class in skia)": [[175, "skia.PathMeasure"]], "__init__() (pathmeasure method)": [[175, "skia.PathMeasure.__init__"]], "getlength() (pathmeasure method)": [[175, "skia.PathMeasure.getLength"]], "getmatrix() (pathmeasure method)": [[175, "skia.PathMeasure.getMatrix"]], "getpostan() (pathmeasure method)": [[175, "skia.PathMeasure.getPosTan"]], "getsegment() (pathmeasure method)": [[175, "skia.PathMeasure.getSegment"]], "isclosed() (pathmeasure method)": [[175, "skia.PathMeasure.isClosed"]], "kgetposandtan_matrixflag (pathmeasure attribute)": [[175, "skia.PathMeasure.kGetPosAndTan_MatrixFlag"]], "kgetposition_matrixflag (pathmeasure attribute)": [[175, "skia.PathMeasure.kGetPosition_MatrixFlag"]], "kgettangent_matrixflag (pathmeasure attribute)": [[175, "skia.PathMeasure.kGetTangent_MatrixFlag"]], "nextcontour() (pathmeasure method)": [[175, "skia.PathMeasure.nextContour"]], "setpath() (pathmeasure method)": [[175, "skia.PathMeasure.setPath"]], "getposandtan (class in skia.pathmeasure)": [[176, "skia.PathMeasure.GetPosAndTan"]], "__init__() (getposandtan method)": [[176, "skia.PathMeasure.GetPosAndTan.__init__"]], "kgetposandtan_matrixflag (getposandtan attribute)": [[176, "skia.PathMeasure.GetPosAndTan.kGetPosAndTan_MatrixFlag"]], "kgetposition_matrixflag (getposandtan attribute)": [[176, "skia.PathMeasure.GetPosAndTan.kGetPosition_MatrixFlag"]], "kgettangent_matrixflag (getposandtan attribute)": [[176, "skia.PathMeasure.GetPosAndTan.kGetTangent_MatrixFlag"]], "name (getposandtan attribute)": [[176, "skia.PathMeasure.GetPosAndTan.name"]], "value (getposandtan attribute)": [[176, "skia.PathMeasure.GetPosAndTan.value"]], "pathop (class in skia)": [[177, "skia.PathOp"]], "__init__() (pathop method)": [[177, "skia.PathOp.__init__"]], "kdifference_pathop (pathop attribute)": [[177, "skia.PathOp.kDifference_PathOp"]], "kintersect_pathop (pathop attribute)": [[177, "skia.PathOp.kIntersect_PathOp"]], "kreversedifference_pathop (pathop attribute)": [[177, "skia.PathOp.kReverseDifference_PathOp"]], "kunion_pathop (pathop attribute)": [[177, "skia.PathOp.kUnion_PathOp"]], "kxor_pathop (pathop attribute)": [[177, "skia.PathOp.kXOR_PathOp"]], "name (pathop attribute)": [[177, "skia.PathOp.name"]], "value (pathop attribute)": [[177, "skia.PathOp.value"]], "pathsegmentmask (class in skia)": [[178, "skia.PathSegmentMask"]], "__init__() (pathsegmentmask method)": [[178, "skia.PathSegmentMask.__init__"]], "kconic_pathsegmentmask (pathsegmentmask attribute)": [[178, "skia.PathSegmentMask.kConic_PathSegmentMask"]], "kcubic_pathsegmentmask (pathsegmentmask attribute)": [[178, "skia.PathSegmentMask.kCubic_PathSegmentMask"]], "kline_pathsegmentmask (pathsegmentmask attribute)": [[178, "skia.PathSegmentMask.kLine_PathSegmentMask"]], "kquad_pathsegmentmask (pathsegmentmask attribute)": [[178, "skia.PathSegmentMask.kQuad_PathSegmentMask"]], "name (pathsegmentmask attribute)": [[178, "skia.PathSegmentMask.name"]], "value (pathsegmentmask attribute)": [[178, "skia.PathSegmentMask.value"]], "pathverb (class in skia)": [[179, "skia.PathVerb"]], "__init__() (pathverb method)": [[179, "skia.PathVerb.__init__"]], "kclose (pathverb attribute)": [[179, "skia.PathVerb.kClose"]], "kconic (pathverb attribute)": [[179, "skia.PathVerb.kConic"]], "kcubic (pathverb attribute)": [[179, "skia.PathVerb.kCubic"]], "kline (pathverb attribute)": [[179, "skia.PathVerb.kLine"]], "kmove (pathverb attribute)": [[179, "skia.PathVerb.kMove"]], "kquad (pathverb attribute)": [[179, "skia.PathVerb.kQuad"]], "name (pathverb attribute)": [[179, "skia.PathVerb.name"]], "value (pathverb attribute)": [[179, "skia.PathVerb.value"]], "makefractalnoise() (perlinnoiseshader static method)": [[180, "skia.PerlinNoiseShader.MakeFractalNoise"]], "maketurbulence() (perlinnoiseshader static method)": [[180, "skia.PerlinNoiseShader.MakeTurbulence"]], "perlinnoiseshader (class in skia)": [[180, "skia.PerlinNoiseShader"]], "__init__() (perlinnoiseshader method)": [[180, "skia.PerlinNoiseShader.__init__"]], "makefromdata() (picture static method)": [[181, "skia.Picture.MakeFromData"]], "makefromstream() (picture static method)": [[181, "skia.Picture.MakeFromStream"]], "makeplaceholder() (picture static method)": [[181, "skia.Picture.MakePlaceholder"]], "picture (class in skia)": [[181, "skia.Picture"]], "__init__() (picture method)": [[181, "skia.Picture.__init__"]], "approximatebytesused() (picture method)": [[181, "skia.Picture.approximateBytesUsed"]], "approximateopcount() (picture method)": [[181, "skia.Picture.approximateOpCount"]], "cullrect() (picture method)": [[181, "skia.Picture.cullRect"]], "makeshader() (picture method)": [[181, "skia.Picture.makeShader"]], "playback() (picture method)": [[181, "skia.Picture.playback"]], "ref() (picture method)": [[181, "skia.Picture.ref"]], "serialize() (picture method)": [[181, "skia.Picture.serialize"]], "unique() (picture method)": [[181, "skia.Picture.unique"]], "uniqueid() (picture method)": [[181, "skia.Picture.uniqueID"]], "unref() (picture method)": [[181, "skia.Picture.unref"]], "picturerecorder (class in skia)": [[182, "skia.PictureRecorder"]], "__init__() (picturerecorder method)": [[182, "skia.PictureRecorder.__init__"]], "beginrecording() (picturerecorder method)": [[182, "skia.PictureRecorder.beginRecording"]], "finishrecordingasdrawable() (picturerecorder method)": [[182, "skia.PictureRecorder.finishRecordingAsDrawable"]], "finishrecordingaspicture() (picturerecorder method)": [[182, "skia.PictureRecorder.finishRecordingAsPicture"]], "finishrecordingaspicturewithcull() (picturerecorder method)": [[182, "skia.PictureRecorder.finishRecordingAsPictureWithCull"]], "getrecordingcanvas() (picturerecorder method)": [[182, "skia.PictureRecorder.getRecordingCanvas"]], "pixelgeometry (class in skia)": [[183, "skia.PixelGeometry"]], "__init__() (pixelgeometry method)": [[183, "skia.PixelGeometry.__init__"]], "kbgr_h_pixelgeometry (pixelgeometry attribute)": [[183, "skia.PixelGeometry.kBGR_H_PixelGeometry"]], "kbgr_v_pixelgeometry (pixelgeometry attribute)": [[183, "skia.PixelGeometry.kBGR_V_PixelGeometry"]], "krgb_h_pixelgeometry (pixelgeometry attribute)": [[183, "skia.PixelGeometry.kRGB_H_PixelGeometry"]], "krgb_v_pixelgeometry (pixelgeometry attribute)": [[183, "skia.PixelGeometry.kRGB_V_PixelGeometry"]], "kunknown_pixelgeometry (pixelgeometry attribute)": [[183, "skia.PixelGeometry.kUnknown_PixelGeometry"]], "name (pixelgeometry attribute)": [[183, "skia.PixelGeometry.name"]], "value (pixelgeometry attribute)": [[183, "skia.PixelGeometry.value"]], "pixelref (class in skia)": [[184, "skia.PixelRef"]], "__init__() (pixelref method)": [[184, "skia.PixelRef.__init__"]], "pixmap (class in skia)": [[185, "skia.Pixmap"]], "__init__() (pixmap method)": [[185, "skia.Pixmap.__init__"]], "addr() (pixmap method)": [[185, "skia.Pixmap.addr"]], "addr16() (pixmap method)": [[185, "skia.Pixmap.addr16"]], "addr32() (pixmap method)": [[185, "skia.Pixmap.addr32"]], "addr64() (pixmap method)": [[185, "skia.Pixmap.addr64"]], "addr8() (pixmap method)": [[185, "skia.Pixmap.addr8"]], "alphatype() (pixmap method)": [[185, "skia.Pixmap.alphaType"]], "bounds() (pixmap method)": [[185, "skia.Pixmap.bounds"]], "colorspace() (pixmap method)": [[185, "skia.Pixmap.colorSpace"]], "colortype() (pixmap method)": [[185, "skia.Pixmap.colorType"]], "computebytesize() (pixmap method)": [[185, "skia.Pixmap.computeByteSize"]], "computeisopaque() (pixmap method)": [[185, "skia.Pixmap.computeIsOpaque"]], "dimensions() (pixmap method)": [[185, "skia.Pixmap.dimensions"]], "erase() (pixmap method)": [[185, "skia.Pixmap.erase"]], "extractsubset() (pixmap method)": [[185, "skia.Pixmap.extractSubset"]], "getalphaf() (pixmap method)": [[185, "skia.Pixmap.getAlphaf"]], "getcolor() (pixmap method)": [[185, "skia.Pixmap.getColor"]], "height() (pixmap method)": [[185, "skia.Pixmap.height"]], "info() (pixmap method)": [[185, "skia.Pixmap.info"]], "isopaque() (pixmap method)": [[185, "skia.Pixmap.isOpaque"]], "readpixels() (pixmap method)": [[185, "skia.Pixmap.readPixels"]], "refcolorspace() (pixmap method)": [[185, "skia.Pixmap.refColorSpace"]], "reset() (pixmap method)": [[185, "skia.Pixmap.reset"]], "rowbytes() (pixmap method)": [[185, "skia.Pixmap.rowBytes"]], "rowbytesaspixels() (pixmap method)": [[185, "skia.Pixmap.rowBytesAsPixels"]], "scalepixels() (pixmap method)": [[185, "skia.Pixmap.scalePixels"]], "setcolorspace() (pixmap method)": [[185, "skia.Pixmap.setColorSpace"]], "shiftperpixel() (pixmap method)": [[185, "skia.Pixmap.shiftPerPixel"]], "tobytes() (pixmap method)": [[185, "skia.Pixmap.tobytes"]], "width() (pixmap method)": [[185, "skia.Pixmap.width"]], "writable_addr() (pixmap method)": [[185, "skia.Pixmap.writable_addr"]], "crossproduct() (point static method)": [[186, "skia.Point.CrossProduct"]], "distance() (point static method)": [[186, "skia.Point.Distance"]], "dotproduct() (point static method)": [[186, "skia.Point.DotProduct"]], "length() (point static method)": [[186, "skia.Point.Length"]], "make() (point static method)": [[186, "skia.Point.Make"]], "normalize() (point static method)": [[186, "skia.Point.Normalize"]], "offset() (point static method)": [[186, "skia.Point.Offset"]], "point (class in skia)": [[186, "skia.Point"]], "__init__() (point method)": [[186, "skia.Point.__init__"]], "cross() (point method)": [[186, "skia.Point.cross"]], "distancetoorigin() (point method)": [[186, "skia.Point.distanceToOrigin"]], "dot() (point method)": [[186, "skia.Point.dot"]], "equals() (point method)": [[186, "skia.Point.equals"]], "fx (point attribute)": [[186, "skia.Point.fX"]], "fy (point attribute)": [[186, "skia.Point.fY"]], "isfinite() (point method)": [[186, "skia.Point.isFinite"]], "iszero() (point method)": [[186, "skia.Point.isZero"]], "iset() (point method)": [[186, "skia.Point.iset"]], "length() (point method)": [[186, "skia.Point.length"]], "negate() (point method)": [[186, "skia.Point.negate"]], "normalize() (point method)": [[186, "skia.Point.normalize"]], "offset() (point method)": [[186, "skia.Point.offset"]], "scale() (point method)": [[186, "skia.Point.scale"]], "set() (point method)": [[186, "skia.Point.set"]], "setabs() (point method)": [[186, "skia.Point.setAbs"]], "setlength() (point method)": [[186, "skia.Point.setLength"]], "setnormalize() (point method)": [[186, "skia.Point.setNormalize"]], "x() (point method)": [[186, "skia.Point.x"]], "y() (point method)": [[186, "skia.Point.y"]], "crossproduct() (point3 static method)": [[187, "skia.Point3.CrossProduct"]], "dotproduct() (point3 static method)": [[187, "skia.Point3.DotProduct"]], "length() (point3 static method)": [[187, "skia.Point3.Length"]], "make() (point3 static method)": [[187, "skia.Point3.Make"]], "point3 (class in skia)": [[187, "skia.Point3"]], "__init__() (point3 method)": [[187, "skia.Point3.__init__"]], "cross() (point3 method)": [[187, "skia.Point3.cross"]], "dot() (point3 method)": [[187, "skia.Point3.dot"]], "fx (point3 attribute)": [[187, "skia.Point3.fX"]], "fy (point3 attribute)": [[187, "skia.Point3.fY"]], "fz (point3 attribute)": [[187, "skia.Point3.fZ"]], "isfinite() (point3 method)": [[187, "skia.Point3.isFinite"]], "length() (point3 method)": [[187, "skia.Point3.length"]], "makescale() (point3 method)": [[187, "skia.Point3.makeScale"]], "normalize() (point3 method)": [[187, "skia.Point3.normalize"]], "scale() (point3 method)": [[187, "skia.Point3.scale"]], "set() (point3 method)": [[187, "skia.Point3.set"]], "x() (point3 method)": [[187, "skia.Point3.x"]], "y() (point3 method)": [[187, "skia.Point3.y"]], "z() (point3 method)": [[187, "skia.Point3.z"]], "makeempty() (rrect static method)": [[188, "skia.RRect.MakeEmpty"]], "makeoval() (rrect static method)": [[188, "skia.RRect.MakeOval"]], "makerect() (rrect static method)": [[188, "skia.RRect.MakeRect"]], "makerectxy() (rrect static method)": [[188, "skia.RRect.MakeRectXY"]], "rrect (class in skia)": [[188, "skia.RRect"]], "__init__() (rrect method)": [[188, "skia.RRect.__init__"]], "contains() (rrect method)": [[188, "skia.RRect.contains"]], "dump() (rrect method)": [[188, "skia.RRect.dump"]], "dumphex() (rrect method)": [[188, "skia.RRect.dumpHex"]], "dumptostring() (rrect method)": [[188, "skia.RRect.dumpToString"]], "getbounds() (rrect method)": [[188, "skia.RRect.getBounds"]], "getsimpleradii() (rrect method)": [[188, "skia.RRect.getSimpleRadii"]], "gettype() (rrect method)": [[188, "skia.RRect.getType"]], "height() (rrect method)": [[188, "skia.RRect.height"]], "inset() (rrect method)": [[188, "skia.RRect.inset"]], "iscomplex() (rrect method)": [[188, "skia.RRect.isComplex"]], "isempty() (rrect method)": [[188, "skia.RRect.isEmpty"]], "isninepatch() (rrect method)": [[188, "skia.RRect.isNinePatch"]], "isoval() (rrect method)": [[188, "skia.RRect.isOval"]], "isrect() (rrect method)": [[188, "skia.RRect.isRect"]], "issimple() (rrect method)": [[188, "skia.RRect.isSimple"]], "isvalid() (rrect method)": [[188, "skia.RRect.isValid"]], "kcomplex_type (rrect attribute)": [[188, "skia.RRect.kComplex_Type"]], "kempty_type (rrect attribute)": [[188, "skia.RRect.kEmpty_Type"]], "klasttype (rrect attribute)": [[188, "skia.RRect.kLastType"]], "klowerleft_corner (rrect attribute)": [[188, "skia.RRect.kLowerLeft_Corner"]], "klowerright_corner (rrect attribute)": [[188, "skia.RRect.kLowerRight_Corner"]], "kninepatch_type (rrect attribute)": [[188, "skia.RRect.kNinePatch_Type"]], "koval_type (rrect attribute)": [[188, "skia.RRect.kOval_Type"]], "krect_type (rrect attribute)": [[188, "skia.RRect.kRect_Type"]], "ksimple_type (rrect attribute)": [[188, "skia.RRect.kSimple_Type"]], "ksizeinmemory (rrect attribute)": [[188, "skia.RRect.kSizeInMemory"]], "kupperleft_corner (rrect attribute)": [[188, "skia.RRect.kUpperLeft_Corner"]], "kupperright_corner (rrect attribute)": [[188, "skia.RRect.kUpperRight_Corner"]], "makeoffset() (rrect method)": [[188, "skia.RRect.makeOffset"]], "offset() (rrect method)": [[188, "skia.RRect.offset"]], "outset() (rrect method)": [[188, "skia.RRect.outset"]], "radii() (rrect method)": [[188, "skia.RRect.radii"]], "readfrommemory() (rrect method)": [[188, "skia.RRect.readFromMemory"]], "rect() (rrect method)": [[188, "skia.RRect.rect"]], "setempty() (rrect method)": [[188, "skia.RRect.setEmpty"]], "setninepatch() (rrect method)": [[188, "skia.RRect.setNinePatch"]], "setoval() (rrect method)": [[188, "skia.RRect.setOval"]], "setrect() (rrect method)": [[188, "skia.RRect.setRect"]], "setrectradii() (rrect method)": [[188, "skia.RRect.setRectRadii"]], "setrectxy() (rrect method)": [[188, "skia.RRect.setRectXY"]], "transform() (rrect method)": [[188, "skia.RRect.transform"]], "type() (rrect method)": [[188, "skia.RRect.type"]], "width() (rrect method)": [[188, "skia.RRect.width"]], "writetomemory() (rrect method)": [[188, "skia.RRect.writeToMemory"]], "corner (class in skia.rrect)": [[189, "skia.RRect.Corner"]], "__init__() (corner method)": [[189, "skia.RRect.Corner.__init__"]], "klowerleft_corner (corner attribute)": [[189, "skia.RRect.Corner.kLowerLeft_Corner"]], "klowerright_corner (corner attribute)": [[189, "skia.RRect.Corner.kLowerRight_Corner"]], "kupperleft_corner (corner attribute)": [[189, "skia.RRect.Corner.kUpperLeft_Corner"]], "kupperright_corner (corner attribute)": [[189, "skia.RRect.Corner.kUpperRight_Corner"]], "name (corner attribute)": [[189, "skia.RRect.Corner.name"]], "value (corner attribute)": [[189, "skia.RRect.Corner.value"]], "type (class in skia.rrect)": [[190, "skia.RRect.Type"]], "kcomplex_type (type attribute)": [[190, "skia.RRect.Type.kComplex_Type"]], "kempty_type (type attribute)": [[190, "skia.RRect.Type.kEmpty_Type"]], "klasttype (type attribute)": [[190, "skia.RRect.Type.kLastType"]], "kninepatch_type (type attribute)": [[190, "skia.RRect.Type.kNinePatch_Type"]], "koval_type (type attribute)": [[190, "skia.RRect.Type.kOval_Type"]], "krect_type (type attribute)": [[190, "skia.RRect.Type.kRect_Type"]], "ksimple_type (type attribute)": [[190, "skia.RRect.Type.kSimple_Type"]], "make() (rsxform static method)": [[191, "skia.RSXform.Make"]], "makefromradians() (rsxform static method)": [[191, "skia.RSXform.MakeFromRadians"]], "rsxform (class in skia)": [[191, "skia.RSXform"]], "__init__() (rsxform method)": [[191, "skia.RSXform.__init__"]], "fscos (rsxform attribute)": [[191, "skia.RSXform.fSCos"]], "fssin (rsxform attribute)": [[191, "skia.RSXform.fSSin"]], "ftx (rsxform attribute)": [[191, "skia.RSXform.fTx"]], "fty (rsxform attribute)": [[191, "skia.RSXform.fTy"]], "rectstaysrect() (rsxform method)": [[191, "skia.RSXform.rectStaysRect"]], "set() (rsxform method)": [[191, "skia.RSXform.set"]], "setidentity() (rsxform method)": [[191, "skia.RSXform.setIdentity"]], "toquad() (rsxform method)": [[191, "skia.RSXform.toQuad"]], "totristrip() (rsxform method)": [[191, "skia.RSXform.toTriStrip"]], "rtreefactory (class in skia)": [[192, "skia.RTreeFactory"]], "__init__() (rtreefactory method)": [[192, "skia.RTreeFactory.__init__"]], "intersects() (rect static method)": [[193, "skia.Rect.Intersects"]], "make() (rect static method)": [[193, "skia.Rect.Make"]], "makeempty() (rect static method)": [[193, "skia.Rect.MakeEmpty"]], "makeiwh() (rect static method)": [[193, "skia.Rect.MakeIWH"]], "makeltrb() (rect static method)": [[193, "skia.Rect.MakeLTRB"]], "makesize() (rect static method)": [[193, "skia.Rect.MakeSize"]], "makewh() (rect static method)": [[193, "skia.Rect.MakeWH"]], "makexywh() (rect static method)": [[193, "skia.Rect.MakeXYWH"]], "rect (class in skia)": [[193, "skia.Rect"]], "__init__() (rect method)": [[193, "skia.Rect.__init__"]], "asscalars() (rect method)": [[193, "skia.Rect.asScalars"]], "bottom() (rect method)": [[193, "skia.Rect.bottom"]], "centerx() (rect method)": [[193, "skia.Rect.centerX"]], "centery() (rect method)": [[193, "skia.Rect.centerY"]], "contains() (rect method)": [[193, "skia.Rect.contains"]], "dump() (rect method)": [[193, "skia.Rect.dump"]], "dumphex() (rect method)": [[193, "skia.Rect.dumpHex"]], "fbottom (rect attribute)": [[193, "skia.Rect.fBottom"]], "fleft (rect attribute)": [[193, "skia.Rect.fLeft"]], "fright (rect attribute)": [[193, "skia.Rect.fRight"]], "ftop (rect attribute)": [[193, "skia.Rect.fTop"]], "height() (rect method)": [[193, "skia.Rect.height"]], "inset() (rect method)": [[193, "skia.Rect.inset"]], "intersect() (rect method)": [[193, "skia.Rect.intersect"]], "intersects() (rect method)": [[193, "skia.Rect.intersects"]], "isempty() (rect method)": [[193, "skia.Rect.isEmpty"]], "isfinite() (rect method)": [[193, "skia.Rect.isFinite"]], "issorted() (rect method)": [[193, "skia.Rect.isSorted"]], "join() (rect method)": [[193, "skia.Rect.join"]], "joinnonemptyarg() (rect method)": [[193, "skia.Rect.joinNonEmptyArg"]], "joinpossiblyemptyrect() (rect method)": [[193, "skia.Rect.joinPossiblyEmptyRect"]], "left() (rect method)": [[193, "skia.Rect.left"]], "makeinset() (rect method)": [[193, "skia.Rect.makeInset"]], "makeoffset() (rect method)": [[193, "skia.Rect.makeOffset"]], "makeoutset() (rect method)": [[193, "skia.Rect.makeOutset"]], "makesorted() (rect method)": [[193, "skia.Rect.makeSorted"]], "offset() (rect method)": [[193, "skia.Rect.offset"]], "offsetto() (rect method)": [[193, "skia.Rect.offsetTo"]], "outset() (rect method)": [[193, "skia.Rect.outset"]], "right() (rect method)": [[193, "skia.Rect.right"]], "round() (rect method)": [[193, "skia.Rect.round"]], "roundin() (rect method)": [[193, "skia.Rect.roundIn"]], "roundout() (rect method)": [[193, "skia.Rect.roundOut"]], "set() (rect method)": [[193, "skia.Rect.set"]], "setbounds() (rect method)": [[193, "skia.Rect.setBounds"]], "setboundscheck() (rect method)": [[193, "skia.Rect.setBoundsCheck"]], "setboundsnocheck() (rect method)": [[193, "skia.Rect.setBoundsNoCheck"]], "setempty() (rect method)": [[193, "skia.Rect.setEmpty"]], "setiwh() (rect method)": [[193, "skia.Rect.setIWH"]], "setltrb() (rect method)": [[193, "skia.Rect.setLTRB"]], "setwh() (rect method)": [[193, "skia.Rect.setWH"]], "setxywh() (rect method)": [[193, "skia.Rect.setXYWH"]], "sort() (rect method)": [[193, "skia.Rect.sort"]], "toquad() (rect method)": [[193, "skia.Rect.toQuad"]], "top() (rect method)": [[193, "skia.Rect.top"]], "width() (rect method)": [[193, "skia.Rect.width"]], "x() (rect method)": [[193, "skia.Rect.x"]], "y() (rect method)": [[193, "skia.Rect.y"]], "refcnt (class in skia)": [[194, "skia.RefCnt"]], "__init__() (refcnt method)": [[194, "skia.RefCnt.__init__"]], "ref() (refcnt method)": [[194, "skia.RefCnt.ref"]], "unique() (refcnt method)": [[194, "skia.RefCnt.unique"]], "unref() (refcnt method)": [[194, "skia.RefCnt.unref"]], "refcntbase (class in skia)": [[195, "skia.RefCntBase"]], "__init__() (refcntbase method)": [[195, "skia.RefCntBase.__init__"]], "ref() (refcntbase method)": [[195, "skia.RefCntBase.ref"]], "unique() (refcntbase method)": [[195, "skia.RefCntBase.unique"]], "unref() (refcntbase method)": [[195, "skia.RefCntBase.unref"]], "region (class in skia)": [[196, "skia.Region"]], "__init__() (region method)": [[196, "skia.Region.__init__"]], "cliperator() (region method)": [[196, "skia.Region.cliperator"]], "computeregioncomplexity() (region method)": [[196, "skia.Region.computeRegionComplexity"]], "contains() (region method)": [[196, "skia.Region.contains"]], "getboundarypath() (region method)": [[196, "skia.Region.getBoundaryPath"]], "getbounds() (region method)": [[196, "skia.Region.getBounds"]], "intersects() (region method)": [[196, "skia.Region.intersects"]], "iscomplex() (region method)": [[196, "skia.Region.isComplex"]], "isempty() (region method)": [[196, "skia.Region.isEmpty"]], "isrect() (region method)": [[196, "skia.Region.isRect"]], "iterator() (region method)": [[196, "skia.Region.iterator"]], "kdifference_op (region attribute)": [[196, "skia.Region.kDifference_Op"]], "kintersect_op (region attribute)": [[196, "skia.Region.kIntersect_Op"]], "klastop (region attribute)": [[196, "skia.Region.kLastOp"]], "kopcnt (region attribute)": [[196, "skia.Region.kOpCnt"]], "kreplace_op (region attribute)": [[196, "skia.Region.kReplace_Op"]], "kreversedifference_op (region attribute)": [[196, "skia.Region.kReverseDifference_Op"]], "kunion_op (region attribute)": [[196, "skia.Region.kUnion_Op"]], "kxor_op (region attribute)": [[196, "skia.Region.kXOR_Op"]], "op() (region method)": [[196, "skia.Region.op"]], "quickcontains() (region method)": [[196, "skia.Region.quickContains"]], "quickreject() (region method)": [[196, "skia.Region.quickReject"]], "readfrommemory() (region method)": [[196, "skia.Region.readFromMemory"]], "set() (region method)": [[196, "skia.Region.set"]], "setempty() (region method)": [[196, "skia.Region.setEmpty"]], "setpath() (region method)": [[196, "skia.Region.setPath"]], "setrect() (region method)": [[196, "skia.Region.setRect"]], "setrects() (region method)": [[196, "skia.Region.setRects"]], "setregion() (region method)": [[196, "skia.Region.setRegion"]], "spanerator() (region method)": [[196, "skia.Region.spanerator"]], "swap() (region method)": [[196, "skia.Region.swap"]], "translate() (region method)": [[196, "skia.Region.translate"]], "writetomemory() (region method)": [[196, "skia.Region.writeToMemory"]], "cliperator (class in skia.region)": [[197, "skia.Region.Cliperator"]], "__init__() (cliperator method)": [[197, "skia.Region.Cliperator.__init__"]], "done() (cliperator method)": [[197, "skia.Region.Cliperator.done"]], "next() (cliperator method)": [[197, "skia.Region.Cliperator.next"]], "rect() (cliperator method)": [[197, "skia.Region.Cliperator.rect"]], "iterator (class in skia.region)": [[198, "skia.Region.Iterator"]], "__init__() (iterator method)": [[198, "skia.Region.Iterator.__init__"]], "done() (iterator method)": [[198, "skia.Region.Iterator.done"]], "next() (iterator method)": [[198, "skia.Region.Iterator.next"]], "rect() (iterator method)": [[198, "skia.Region.Iterator.rect"]], "reset() (iterator method)": [[198, "skia.Region.Iterator.reset"]], "rewind() (iterator method)": [[198, "skia.Region.Iterator.rewind"]], "rgn() (iterator method)": [[198, "skia.Region.Iterator.rgn"]], "op (class in skia.region)": [[199, "skia.Region.Op"]], "__init__() (op method)": [[199, "skia.Region.Op.__init__"]], "kdifference_op (op attribute)": [[199, "skia.Region.Op.kDifference_Op"]], "kintersect_op (op attribute)": [[199, "skia.Region.Op.kIntersect_Op"]], "klastop (op attribute)": [[199, "skia.Region.Op.kLastOp"]], "kreplace_op (op attribute)": [[199, "skia.Region.Op.kReplace_Op"]], "kreversedifference_op (op attribute)": [[199, "skia.Region.Op.kReverseDifference_Op"]], "kunion_op (op attribute)": [[199, "skia.Region.Op.kUnion_Op"]], "kxor_op (op attribute)": [[199, "skia.Region.Op.kXOR_Op"]], "name (op attribute)": [[199, "skia.Region.Op.name"]], "value (op attribute)": [[199, "skia.Region.Op.value"]], "spanerator (class in skia.region)": [[200, "skia.Region.Spanerator"]], "__init__() (spanerator method)": [[200, "skia.Region.Spanerator.__init__"]], "next() (spanerator method)": [[200, "skia.Region.Spanerator.next"]], "runtimeblendbuilder (in module skia)": [[201, "skia.RuntimeBlendBuilder"]], "__init__() (runtimeblendbuilder method)": [[201, "skia.RuntimeBlendBuilder.__init__"]], "child() (runtimeblendbuilder method)": [[201, "skia.RuntimeBlendBuilder.child"]], "children() (runtimeblendbuilder method)": [[201, "skia.RuntimeBlendBuilder.children"]], "effect() (runtimeblendbuilder method)": [[201, "skia.RuntimeBlendBuilder.effect"]], "makeblender() (runtimeblendbuilder method)": [[201, "skia.RuntimeBlendBuilder.makeBlender"]], "makecolorfilter() (runtimeblendbuilder method)": [[201, "skia.RuntimeBlendBuilder.makeColorFilter"]], "makeshader() (runtimeblendbuilder method)": [[201, "skia.RuntimeBlendBuilder.makeShader"]], "setchild() (runtimeblendbuilder method)": [[201, "skia.RuntimeBlendBuilder.setChild"]], "setuniform() (runtimeblendbuilder method)": [[201, "skia.RuntimeBlendBuilder.setUniform"]], "uniform() (runtimeblendbuilder method)": [[201, "skia.RuntimeBlendBuilder.uniform"]], "uniforms() (runtimeblendbuilder method)": [[201, "skia.RuntimeBlendBuilder.uniforms"]], "runtimecolorfilterbuilder (in module skia)": [[202, "skia.RuntimeColorFilterBuilder"]], "__init__() (runtimecolorfilterbuilder method)": [[202, "skia.RuntimeColorFilterBuilder.__init__"]], "child() (runtimecolorfilterbuilder method)": [[202, "skia.RuntimeColorFilterBuilder.child"]], "children() (runtimecolorfilterbuilder method)": [[202, "skia.RuntimeColorFilterBuilder.children"]], "effect() (runtimecolorfilterbuilder method)": [[202, "skia.RuntimeColorFilterBuilder.effect"]], "makeblender() (runtimecolorfilterbuilder method)": [[202, "skia.RuntimeColorFilterBuilder.makeBlender"]], "makecolorfilter() (runtimecolorfilterbuilder method)": [[202, "skia.RuntimeColorFilterBuilder.makeColorFilter"]], "makeshader() (runtimecolorfilterbuilder method)": [[202, "skia.RuntimeColorFilterBuilder.makeShader"]], "setchild() (runtimecolorfilterbuilder method)": [[202, "skia.RuntimeColorFilterBuilder.setChild"]], "setuniform() (runtimecolorfilterbuilder method)": [[202, "skia.RuntimeColorFilterBuilder.setUniform"]], "uniform() (runtimecolorfilterbuilder method)": [[202, "skia.RuntimeColorFilterBuilder.uniform"]], "uniforms() (runtimecolorfilterbuilder method)": [[202, "skia.RuntimeColorFilterBuilder.uniforms"]], "makeforblender() (runtimeeffect static method)": [[203, "skia.RuntimeEffect.MakeForBlender"]], "makeforcolorfilter() (runtimeeffect static method)": [[203, "skia.RuntimeEffect.MakeForColorFilter"]], "makeforshader() (runtimeeffect static method)": [[203, "skia.RuntimeEffect.MakeForShader"]], "runtimeeffect (class in skia)": [[203, "skia.RuntimeEffect"]], "__init__() (runtimeeffect method)": [[203, "skia.RuntimeEffect.__init__"]], "children() (runtimeeffect method)": [[203, "skia.RuntimeEffect.children"]], "kblender (runtimeeffect attribute)": [[203, "skia.RuntimeEffect.kBlender"]], "kfloat (runtimeeffect attribute)": [[203, "skia.RuntimeEffect.kFloat"]], "kfloat2 (runtimeeffect attribute)": [[203, "skia.RuntimeEffect.kFloat2"]], "kfloat2x2 (runtimeeffect attribute)": [[203, "skia.RuntimeEffect.kFloat2x2"]], "kfloat3 (runtimeeffect attribute)": [[203, "skia.RuntimeEffect.kFloat3"]], "kfloat3x3 (runtimeeffect attribute)": [[203, "skia.RuntimeEffect.kFloat3x3"]], "kfloat4 (runtimeeffect attribute)": [[203, "skia.RuntimeEffect.kFloat4"]], "kfloat4x4 (runtimeeffect attribute)": [[203, "skia.RuntimeEffect.kFloat4x4"]], "kint (runtimeeffect attribute)": [[203, "skia.RuntimeEffect.kInt"]], "kint2 (runtimeeffect attribute)": [[203, "skia.RuntimeEffect.kInt2"]], "kint3 (runtimeeffect attribute)": [[203, "skia.RuntimeEffect.kInt3"]], "kint4 (runtimeeffect attribute)": [[203, "skia.RuntimeEffect.kInt4"]], "kshader (runtimeeffect attribute)": [[203, "skia.RuntimeEffect.kShader"]], "makeblender() (runtimeeffect method)": [[203, "skia.RuntimeEffect.makeBlender"]], "makecolorfilter() (runtimeeffect method)": [[203, "skia.RuntimeEffect.makeColorFilter"]], "makeshader() (runtimeeffect method)": [[203, "skia.RuntimeEffect.makeShader"]], "ref() (runtimeeffect method)": [[203, "skia.RuntimeEffect.ref"]], "uniforms() (runtimeeffect method)": [[203, "skia.RuntimeEffect.uniforms"]], "unique() (runtimeeffect method)": [[203, "skia.RuntimeEffect.unique"]], "unref() (runtimeeffect method)": [[203, "skia.RuntimeEffect.unref"]], "childtype (class in skia.runtimeeffect)": [[204, "skia.RuntimeEffect.ChildType"]], "__init__() (childtype method)": [[204, "skia.RuntimeEffect.ChildType.__init__"]], "kblender (childtype attribute)": [[204, "skia.RuntimeEffect.ChildType.kBlender"]], "kshader (childtype attribute)": [[204, "skia.RuntimeEffect.ChildType.kShader"]], "name (childtype attribute)": [[204, "skia.RuntimeEffect.ChildType.name"]], "value (childtype attribute)": [[204, "skia.RuntimeEffect.ChildType.value"]], "uniformtype (class in skia.runtimeeffect)": [[205, "skia.RuntimeEffect.UniformType"]], "__init__() (uniformtype method)": [[205, "skia.RuntimeEffect.UniformType.__init__"]], "kfloat (uniformtype attribute)": [[205, "skia.RuntimeEffect.UniformType.kFloat"]], "kfloat2 (uniformtype attribute)": [[205, "skia.RuntimeEffect.UniformType.kFloat2"]], "kfloat2x2 (uniformtype attribute)": [[205, "skia.RuntimeEffect.UniformType.kFloat2x2"]], "kfloat3 (uniformtype attribute)": [[205, "skia.RuntimeEffect.UniformType.kFloat3"]], "kfloat3x3 (uniformtype attribute)": [[205, "skia.RuntimeEffect.UniformType.kFloat3x3"]], "kfloat4 (uniformtype attribute)": [[205, "skia.RuntimeEffect.UniformType.kFloat4"]], "kfloat4x4 (uniformtype attribute)": [[205, "skia.RuntimeEffect.UniformType.kFloat4x4"]], "kint (uniformtype attribute)": [[205, "skia.RuntimeEffect.UniformType.kInt"]], "kint2 (uniformtype attribute)": [[205, "skia.RuntimeEffect.UniformType.kInt2"]], "kint3 (uniformtype attribute)": [[205, "skia.RuntimeEffect.UniformType.kInt3"]], "kint4 (uniformtype attribute)": [[205, "skia.RuntimeEffect.UniformType.kInt4"]], "name (uniformtype attribute)": [[205, "skia.RuntimeEffect.UniformType.name"]], "value (uniformtype attribute)": [[205, "skia.RuntimeEffect.UniformType.value"]], "runtimeeffectbuilder (class in skia)": [[206, "skia.RuntimeEffectBuilder"]], "__init__() (runtimeeffectbuilder method)": [[206, "skia.RuntimeEffectBuilder.__init__"]], "child() (runtimeeffectbuilder method)": [[206, "skia.RuntimeEffectBuilder.child"]], "children() (runtimeeffectbuilder method)": [[206, "skia.RuntimeEffectBuilder.children"]], "effect() (runtimeeffectbuilder method)": [[206, "skia.RuntimeEffectBuilder.effect"]], "makeblender() (runtimeeffectbuilder method)": [[206, "skia.RuntimeEffectBuilder.makeBlender"]], "makecolorfilter() (runtimeeffectbuilder method)": [[206, "skia.RuntimeEffectBuilder.makeColorFilter"]], "makeshader() (runtimeeffectbuilder method)": [[206, "skia.RuntimeEffectBuilder.makeShader"]], "setchild() (runtimeeffectbuilder method)": [[206, "skia.RuntimeEffectBuilder.setChild"]], "setuniform() (runtimeeffectbuilder method)": [[206, "skia.RuntimeEffectBuilder.setUniform"]], "uniform() (runtimeeffectbuilder method)": [[206, "skia.RuntimeEffectBuilder.uniform"]], "uniforms() (runtimeeffectbuilder method)": [[206, "skia.RuntimeEffectBuilder.uniforms"]], "runtimeeffectbuilderchild (class in skia)": [[207, "skia.RuntimeEffectBuilderChild"]], "__init__() (runtimeeffectbuilderchild method)": [[207, "skia.RuntimeEffectBuilderChild.__init__"]], "name (runtimeeffectbuilderchild attribute)": [[207, "skia.RuntimeEffectBuilderChild.name"]], "type (runtimeeffectbuilderchild attribute)": [[207, "skia.RuntimeEffectBuilderChild.type"]], "runtimeeffectbuilderuniform (class in skia)": [[208, "skia.RuntimeEffectBuilderUniform"]], "__init__() (runtimeeffectbuilderuniform method)": [[208, "skia.RuntimeEffectBuilderUniform.__init__"]], "name (runtimeeffectbuilderuniform attribute)": [[208, "skia.RuntimeEffectBuilderUniform.name"]], "type (runtimeeffectbuilderuniform attribute)": [[208, "skia.RuntimeEffectBuilderUniform.type"]], "runtimeeffectchild (class in skia)": [[209, "skia.RuntimeEffectChild"]], "__init__() (runtimeeffectchild method)": [[209, "skia.RuntimeEffectChild.__init__"]], "name (runtimeeffectchild attribute)": [[209, "skia.RuntimeEffectChild.name"]], "type (runtimeeffectchild attribute)": [[209, "skia.RuntimeEffectChild.type"]], "runtimeeffectchildptr (class in skia)": [[210, "skia.RuntimeEffectChildPtr"]], "__init__() (runtimeeffectchildptr method)": [[210, "skia.RuntimeEffectChildPtr.__init__"]], "type (runtimeeffectchildptr attribute)": [[210, "skia.RuntimeEffectChildPtr.type"]], "runtimeeffectresult (class in skia)": [[211, "skia.RuntimeEffectResult"]], "__init__() (runtimeeffectresult method)": [[211, "skia.RuntimeEffectResult.__init__"]], "effect (runtimeeffectresult attribute)": [[211, "skia.RuntimeEffectResult.effect"]], "errortext (runtimeeffectresult attribute)": [[211, "skia.RuntimeEffectResult.errorText"]], "runtimeeffectuniform (class in skia)": [[212, "skia.RuntimeEffectUniform"]], "__init__() (runtimeeffectuniform method)": [[212, "skia.RuntimeEffectUniform.__init__"]], "name (runtimeeffectuniform attribute)": [[212, "skia.RuntimeEffectUniform.name"]], "type (runtimeeffectuniform attribute)": [[212, "skia.RuntimeEffectUniform.type"]], "runtimeshaderbuilder (in module skia)": [[213, "skia.RuntimeShaderBuilder"]], "__init__() (runtimeshaderbuilder method)": [[213, "skia.RuntimeShaderBuilder.__init__"]], "child() (runtimeshaderbuilder method)": [[213, "skia.RuntimeShaderBuilder.child"]], "children() (runtimeshaderbuilder method)": [[213, "skia.RuntimeShaderBuilder.children"]], "effect() (runtimeshaderbuilder method)": [[213, "skia.RuntimeShaderBuilder.effect"]], "makeblender() (runtimeshaderbuilder method)": [[213, "skia.RuntimeShaderBuilder.makeBlender"]], "makecolorfilter() (runtimeshaderbuilder method)": [[213, "skia.RuntimeShaderBuilder.makeColorFilter"]], "makeshader() (runtimeshaderbuilder method)": [[213, "skia.RuntimeShaderBuilder.makeShader"]], "setchild() (runtimeshaderbuilder method)": [[213, "skia.RuntimeShaderBuilder.setChild"]], "setuniform() (runtimeshaderbuilder method)": [[213, "skia.RuntimeShaderBuilder.setUniform"]], "uniform() (runtimeshaderbuilder method)": [[213, "skia.RuntimeShaderBuilder.uniform"]], "uniforms() (runtimeshaderbuilder method)": [[213, "skia.RuntimeShaderBuilder.uniforms"]], "make() (svgcanvas static method)": [[214, "skia.SVGCanvas.Make"]], "svgcanvas (class in skia)": [[214, "skia.SVGCanvas"]], "__init__() (svgcanvas method)": [[214, "skia.SVGCanvas.__init__"]], "kconverttexttopaths_flag (svgcanvas attribute)": [[214, "skia.SVGCanvas.kConvertTextToPaths_Flag"]], "knoprettyxml_flag (svgcanvas attribute)": [[214, "skia.SVGCanvas.kNoPrettyXML_Flag"]], "makefromstream() (svgdom static method)": [[215, "skia.SVGDOM.MakeFromStream"]], "svgdom (class in skia)": [[215, "skia.SVGDOM"]], "__init__() (svgdom method)": [[215, "skia.SVGDOM.__init__"]], "containersize() (svgdom method)": [[215, "skia.SVGDOM.containerSize"]], "ref() (svgdom method)": [[215, "skia.SVGDOM.ref"]], "render() (svgdom method)": [[215, "skia.SVGDOM.render"]], "rendernode() (svgdom method)": [[215, "skia.SVGDOM.renderNode"]], "setcontainersize() (svgdom method)": [[215, "skia.SVGDOM.setContainerSize"]], "unique() (svgdom method)": [[215, "skia.SVGDOM.unique"]], "unref() (svgdom method)": [[215, "skia.SVGDOM.unref"]], "aniso() (samplingoptions static method)": [[216, "skia.SamplingOptions.Aniso"]], "samplingoptions (class in skia)": [[216, "skia.SamplingOptions"]], "__init__() (samplingoptions method)": [[216, "skia.SamplingOptions.__init__"]], "cubic (samplingoptions attribute)": [[216, "skia.SamplingOptions.cubic"]], "filter (samplingoptions attribute)": [[216, "skia.SamplingOptions.filter"]], "isaniso() (samplingoptions method)": [[216, "skia.SamplingOptions.isAniso"]], "maxaniso (samplingoptions attribute)": [[216, "skia.SamplingOptions.maxAniso"]], "mipmap (samplingoptions attribute)": [[216, "skia.SamplingOptions.mipmap"]], "usecubic (samplingoptions attribute)": [[216, "skia.SamplingOptions.useCubic"]], "deserialize() (shader static method)": [[217, "skia.Shader.Deserialize"]], "shader (class in skia)": [[217, "skia.Shader"]], "__init__() (shader method)": [[217, "skia.Shader.__init__"]], "getflattenabletype() (shader method)": [[217, "skia.Shader.getFlattenableType"]], "gettypename() (shader method)": [[217, "skia.Shader.getTypeName"]], "isaimage() (shader method)": [[217, "skia.Shader.isAImage"]], "isopaque() (shader method)": [[217, "skia.Shader.isOpaque"]], "kcolorfilter_type (shader attribute)": [[217, "skia.Shader.kColorFilter_Type"]], "kdrawlooper_type (shader attribute)": [[217, "skia.Shader.kDrawLooper_Type"]], "kdrawable_type (shader attribute)": [[217, "skia.Shader.kDrawable_Type"]], "kimagefilter_type (shader attribute)": [[217, "skia.Shader.kImageFilter_Type"]], "kmaskfilter_type (shader attribute)": [[217, "skia.Shader.kMaskFilter_Type"]], "kpatheffect_type (shader attribute)": [[217, "skia.Shader.kPathEffect_Type"]], "makewithcolorfilter() (shader method)": [[217, "skia.Shader.makeWithColorFilter"]], "makewithlocalmatrix() (shader method)": [[217, "skia.Shader.makeWithLocalMatrix"]], "ref() (shader method)": [[217, "skia.Shader.ref"]], "serialize() (shader method)": [[217, "skia.Shader.serialize"]], "unique() (shader method)": [[217, "skia.Shader.unique"]], "unref() (shader method)": [[217, "skia.Shader.unref"]], "type (class in skia.shader)": [[218, "skia.Shader.Type"]], "make() (shadermaskfilter static method)": [[219, "skia.ShaderMaskFilter.Make"]], "shadermaskfilter (class in skia)": [[219, "skia.ShaderMaskFilter"]], "__init__() (shadermaskfilter method)": [[219, "skia.ShaderMaskFilter.__init__"]], "blend() (shaders static method)": [[220, "skia.Shaders.Blend"]], "color() (shaders static method)": [[220, "skia.Shaders.Color"]], "empty() (shaders static method)": [[220, "skia.Shaders.Empty"]], "lerp() (shaders static method)": [[220, "skia.Shaders.Lerp"]], "shaders (class in skia)": [[220, "skia.Shaders"]], "__init__() (shaders method)": [[220, "skia.Shaders.__init__"]], "make() (size static method)": [[221, "skia.Size.Make"]], "makeempty() (size static method)": [[221, "skia.Size.MakeEmpty"]], "size (class in skia)": [[221, "skia.Size"]], "__init__() (size method)": [[221, "skia.Size.__init__"]], "equals() (size method)": [[221, "skia.Size.equals"]], "fheight (size attribute)": [[221, "skia.Size.fHeight"]], "fwidth (size attribute)": [[221, "skia.Size.fWidth"]], "height() (size method)": [[221, "skia.Size.height"]], "isempty() (size method)": [[221, "skia.Size.isEmpty"]], "iszero() (size method)": [[221, "skia.Size.isZero"]], "set() (size method)": [[221, "skia.Size.set"]], "setempty() (size method)": [[221, "skia.Size.setEmpty"]], "toceil() (size method)": [[221, "skia.Size.toCeil"]], "tofloor() (size method)": [[221, "skia.Size.toFloor"]], "toround() (size method)": [[221, "skia.Size.toRound"]], "width() (size method)": [[221, "skia.Size.width"]], "spanruntimeeffectchild (class in skia)": [[222, "skia.SpanRuntimeEffectChild"]], "__init__() (spanruntimeeffectchild method)": [[222, "skia.SpanRuntimeEffectChild.__init__"]], "spanruntimeeffectchildptr (class in skia)": [[223, "skia.SpanRuntimeEffectChildPtr"]], "__init__() (spanruntimeeffectchildptr method)": [[223, "skia.SpanRuntimeEffectChildPtr.__init__"]], "spanruntimeeffectuniform (class in skia)": [[224, "skia.SpanRuntimeEffectUniform"]], "__init__() (spanruntimeeffectuniform method)": [[224, "skia.SpanRuntimeEffectUniform.__init__"]], "makefromfile() (stream static method)": [[225, "skia.Stream.MakeFromFile"]], "stream (class in skia)": [[225, "skia.Stream"]], "__init__() (stream method)": [[225, "skia.Stream.__init__"]], "duplicate() (stream method)": [[225, "skia.Stream.duplicate"]], "fork() (stream method)": [[225, "skia.Stream.fork"]], "getlength() (stream method)": [[225, "skia.Stream.getLength"]], "getmemorybase() (stream method)": [[225, "skia.Stream.getMemoryBase"]], "getposition() (stream method)": [[225, "skia.Stream.getPosition"]], "haslength() (stream method)": [[225, "skia.Stream.hasLength"]], "hasposition() (stream method)": [[225, "skia.Stream.hasPosition"]], "isatend() (stream method)": [[225, "skia.Stream.isAtEnd"]], "move() (stream method)": [[225, "skia.Stream.move"]], "peek() (stream method)": [[225, "skia.Stream.peek"]], "read() (stream method)": [[225, "skia.Stream.read"]], "readbool() (stream method)": [[225, "skia.Stream.readBool"]], "readpackeduint() (stream method)": [[225, "skia.Stream.readPackedUInt"]], "reads16() (stream method)": [[225, "skia.Stream.readS16"]], "reads32() (stream method)": [[225, "skia.Stream.readS32"]], "reads8() (stream method)": [[225, "skia.Stream.readS8"]], "readscalar() (stream method)": [[225, "skia.Stream.readScalar"]], "readu16() (stream method)": [[225, "skia.Stream.readU16"]], "readu32() (stream method)": [[225, "skia.Stream.readU32"]], "readu8() (stream method)": [[225, "skia.Stream.readU8"]], "rewind() (stream method)": [[225, "skia.Stream.rewind"]], "seek() (stream method)": [[225, "skia.Stream.seek"]], "skip() (stream method)": [[225, "skia.Stream.skip"]], "makefromfile() (streamasset static method)": [[226, "skia.StreamAsset.MakeFromFile"]], "streamasset (class in skia)": [[226, "skia.StreamAsset"]], "__init__() (streamasset method)": [[226, "skia.StreamAsset.__init__"]], "duplicate() (streamasset method)": [[226, "skia.StreamAsset.duplicate"]], "fork() (streamasset method)": [[226, "skia.StreamAsset.fork"]], "getlength() (streamasset method)": [[226, "skia.StreamAsset.getLength"]], "getmemorybase() (streamasset method)": [[226, "skia.StreamAsset.getMemoryBase"]], "getposition() (streamasset method)": [[226, "skia.StreamAsset.getPosition"]], "haslength() (streamasset method)": [[226, "skia.StreamAsset.hasLength"]], "hasposition() (streamasset method)": [[226, "skia.StreamAsset.hasPosition"]], "isatend() (streamasset method)": [[226, "skia.StreamAsset.isAtEnd"]], "move() (streamasset method)": [[226, "skia.StreamAsset.move"]], "peek() (streamasset method)": [[226, "skia.StreamAsset.peek"]], "read() (streamasset method)": [[226, "skia.StreamAsset.read"]], "readbool() (streamasset method)": [[226, "skia.StreamAsset.readBool"]], "readpackeduint() (streamasset method)": [[226, "skia.StreamAsset.readPackedUInt"]], "reads16() (streamasset method)": [[226, "skia.StreamAsset.readS16"]], "reads32() (streamasset method)": [[226, "skia.StreamAsset.readS32"]], "reads8() (streamasset method)": [[226, "skia.StreamAsset.readS8"]], "readscalar() (streamasset method)": [[226, "skia.StreamAsset.readScalar"]], "readu16() (streamasset method)": [[226, "skia.StreamAsset.readU16"]], "readu32() (streamasset method)": [[226, "skia.StreamAsset.readU32"]], "readu8() (streamasset method)": [[226, "skia.StreamAsset.readU8"]], "rewind() (streamasset method)": [[226, "skia.StreamAsset.rewind"]], "seek() (streamasset method)": [[226, "skia.StreamAsset.seek"]], "skip() (streamasset method)": [[226, "skia.StreamAsset.skip"]], "makefromfile() (streammemory static method)": [[227, "skia.StreamMemory.MakeFromFile"]], "streammemory (class in skia)": [[227, "skia.StreamMemory"]], "__init__() (streammemory method)": [[227, "skia.StreamMemory.__init__"]], "duplicate() (streammemory method)": [[227, "skia.StreamMemory.duplicate"]], "fork() (streammemory method)": [[227, "skia.StreamMemory.fork"]], "getlength() (streammemory method)": [[227, "skia.StreamMemory.getLength"]], "getmemorybase() (streammemory method)": [[227, "skia.StreamMemory.getMemoryBase"]], "getposition() (streammemory method)": [[227, "skia.StreamMemory.getPosition"]], "haslength() (streammemory method)": [[227, "skia.StreamMemory.hasLength"]], "hasposition() (streammemory method)": [[227, "skia.StreamMemory.hasPosition"]], "isatend() (streammemory method)": [[227, "skia.StreamMemory.isAtEnd"]], "move() (streammemory method)": [[227, "skia.StreamMemory.move"]], "peek() (streammemory method)": [[227, "skia.StreamMemory.peek"]], "read() (streammemory method)": [[227, "skia.StreamMemory.read"]], "readbool() (streammemory method)": [[227, "skia.StreamMemory.readBool"]], "readpackeduint() (streammemory method)": [[227, "skia.StreamMemory.readPackedUInt"]], "reads16() (streammemory method)": [[227, "skia.StreamMemory.readS16"]], "reads32() (streammemory method)": [[227, "skia.StreamMemory.readS32"]], "reads8() (streammemory method)": [[227, "skia.StreamMemory.readS8"]], "readscalar() (streammemory method)": [[227, "skia.StreamMemory.readScalar"]], "readu16() (streammemory method)": [[227, "skia.StreamMemory.readU16"]], "readu32() (streammemory method)": [[227, "skia.StreamMemory.readU32"]], "readu8() (streammemory method)": [[227, "skia.StreamMemory.readU8"]], "rewind() (streammemory method)": [[227, "skia.StreamMemory.rewind"]], "seek() (streammemory method)": [[227, "skia.StreamMemory.seek"]], "skip() (streammemory method)": [[227, "skia.StreamMemory.skip"]], "makefromfile() (streamrewindable static method)": [[228, "skia.StreamRewindable.MakeFromFile"]], "streamrewindable (class in skia)": [[228, "skia.StreamRewindable"]], "__init__() (streamrewindable method)": [[228, "skia.StreamRewindable.__init__"]], "duplicate() (streamrewindable method)": [[228, "skia.StreamRewindable.duplicate"]], "fork() (streamrewindable method)": [[228, "skia.StreamRewindable.fork"]], "getlength() (streamrewindable method)": [[228, "skia.StreamRewindable.getLength"]], "getmemorybase() (streamrewindable method)": [[228, "skia.StreamRewindable.getMemoryBase"]], "getposition() (streamrewindable method)": [[228, "skia.StreamRewindable.getPosition"]], "haslength() (streamrewindable method)": [[228, "skia.StreamRewindable.hasLength"]], "hasposition() (streamrewindable method)": [[228, "skia.StreamRewindable.hasPosition"]], "isatend() (streamrewindable method)": [[228, "skia.StreamRewindable.isAtEnd"]], "move() (streamrewindable method)": [[228, "skia.StreamRewindable.move"]], "peek() (streamrewindable method)": [[228, "skia.StreamRewindable.peek"]], "read() (streamrewindable method)": [[228, "skia.StreamRewindable.read"]], "readbool() (streamrewindable method)": [[228, "skia.StreamRewindable.readBool"]], "readpackeduint() (streamrewindable method)": [[228, "skia.StreamRewindable.readPackedUInt"]], "reads16() (streamrewindable method)": [[228, "skia.StreamRewindable.readS16"]], "reads32() (streamrewindable method)": [[228, "skia.StreamRewindable.readS32"]], "reads8() (streamrewindable method)": [[228, "skia.StreamRewindable.readS8"]], "readscalar() (streamrewindable method)": [[228, "skia.StreamRewindable.readScalar"]], "readu16() (streamrewindable method)": [[228, "skia.StreamRewindable.readU16"]], "readu32() (streamrewindable method)": [[228, "skia.StreamRewindable.readU32"]], "readu8() (streamrewindable method)": [[228, "skia.StreamRewindable.readU8"]], "rewind() (streamrewindable method)": [[228, "skia.StreamRewindable.rewind"]], "seek() (streamrewindable method)": [[228, "skia.StreamRewindable.seek"]], "skip() (streamrewindable method)": [[228, "skia.StreamRewindable.skip"]], "makefromfile() (streamseekable static method)": [[229, "skia.StreamSeekable.MakeFromFile"]], "streamseekable (class in skia)": [[229, "skia.StreamSeekable"]], "__init__() (streamseekable method)": [[229, "skia.StreamSeekable.__init__"]], "duplicate() (streamseekable method)": [[229, "skia.StreamSeekable.duplicate"]], "fork() (streamseekable method)": [[229, "skia.StreamSeekable.fork"]], "getlength() (streamseekable method)": [[229, "skia.StreamSeekable.getLength"]], "getmemorybase() (streamseekable method)": [[229, "skia.StreamSeekable.getMemoryBase"]], "getposition() (streamseekable method)": [[229, "skia.StreamSeekable.getPosition"]], "haslength() (streamseekable method)": [[229, "skia.StreamSeekable.hasLength"]], "hasposition() (streamseekable method)": [[229, "skia.StreamSeekable.hasPosition"]], "isatend() (streamseekable method)": [[229, "skia.StreamSeekable.isAtEnd"]], "move() (streamseekable method)": [[229, "skia.StreamSeekable.move"]], "peek() (streamseekable method)": [[229, "skia.StreamSeekable.peek"]], "read() (streamseekable method)": [[229, "skia.StreamSeekable.read"]], "readbool() (streamseekable method)": [[229, "skia.StreamSeekable.readBool"]], "readpackeduint() (streamseekable method)": [[229, "skia.StreamSeekable.readPackedUInt"]], "reads16() (streamseekable method)": [[229, "skia.StreamSeekable.readS16"]], "reads32() (streamseekable method)": [[229, "skia.StreamSeekable.readS32"]], "reads8() (streamseekable method)": [[229, "skia.StreamSeekable.readS8"]], "readscalar() (streamseekable method)": [[229, "skia.StreamSeekable.readScalar"]], "readu16() (streamseekable method)": [[229, "skia.StreamSeekable.readU16"]], "readu32() (streamseekable method)": [[229, "skia.StreamSeekable.readU32"]], "readu8() (streamseekable method)": [[229, "skia.StreamSeekable.readU8"]], "rewind() (streamseekable method)": [[229, "skia.StreamSeekable.rewind"]], "seek() (streamseekable method)": [[229, "skia.StreamSeekable.seek"]], "skip() (streamseekable method)": [[229, "skia.StreamSeekable.skip"]], "string (class in skia)": [[230, "skia.String"]], "__init__() (string method)": [[230, "skia.String.__init__"]], "append() (string method)": [[230, "skia.String.append"]], "appendhex() (string method)": [[230, "skia.String.appendHex"]], "appends32() (string method)": [[230, "skia.String.appendS32"]], "appends64() (string method)": [[230, "skia.String.appendS64"]], "appendscalar() (string method)": [[230, "skia.String.appendScalar"]], "appendu32() (string method)": [[230, "skia.String.appendU32"]], "appendu64() (string method)": [[230, "skia.String.appendU64"]], "appendunichar() (string method)": [[230, "skia.String.appendUnichar"]], "c_str() (string method)": [[230, "skia.String.c_str"]], "contains() (string method)": [[230, "skia.String.contains"]], "endswith() (string method)": [[230, "skia.String.endsWith"]], "equals() (string method)": [[230, "skia.String.equals"]], "find() (string method)": [[230, "skia.String.find"]], "findlastof() (string method)": [[230, "skia.String.findLastOf"]], "insert() (string method)": [[230, "skia.String.insert"]], "inserthex() (string method)": [[230, "skia.String.insertHex"]], "inserts32() (string method)": [[230, "skia.String.insertS32"]], "inserts64() (string method)": [[230, "skia.String.insertS64"]], "insertscalar() (string method)": [[230, "skia.String.insertScalar"]], "insertu32() (string method)": [[230, "skia.String.insertU32"]], "insertu64() (string method)": [[230, "skia.String.insertU64"]], "insertunichar() (string method)": [[230, "skia.String.insertUnichar"]], "isempty() (string method)": [[230, "skia.String.isEmpty"]], "prepend() (string method)": [[230, "skia.String.prepend"]], "prependhex() (string method)": [[230, "skia.String.prependHex"]], "prepends32() (string method)": [[230, "skia.String.prependS32"]], "prepends64() (string method)": [[230, "skia.String.prependS64"]], "prependscalar() (string method)": [[230, "skia.String.prependScalar"]], "prependunichar() (string method)": [[230, "skia.String.prependUnichar"]], "remove() (string method)": [[230, "skia.String.remove"]], "reset() (string method)": [[230, "skia.String.reset"]], "resize() (string method)": [[230, "skia.String.resize"]], "set() (string method)": [[230, "skia.String.set"]], "size() (string method)": [[230, "skia.String.size"]], "startswith() (string method)": [[230, "skia.String.startsWith"]], "swap() (string method)": [[230, "skia.String.swap"]], "getinflationradius() (strokerec static method)": [[231, "skia.StrokeRec.GetInflationRadius"]], "strokerec (class in skia)": [[231, "skia.StrokeRec"]], "__init__() (strokerec method)": [[231, "skia.StrokeRec.__init__"]], "applytopaint() (strokerec method)": [[231, "skia.StrokeRec.applyToPaint"]], "applytopath() (strokerec method)": [[231, "skia.StrokeRec.applyToPath"]], "getcap() (strokerec method)": [[231, "skia.StrokeRec.getCap"]], "getinflationradius() (strokerec method)": [[231, "skia.StrokeRec.getInflationRadius"]], "getjoin() (strokerec method)": [[231, "skia.StrokeRec.getJoin"]], "getmiter() (strokerec method)": [[231, "skia.StrokeRec.getMiter"]], "getresscale() (strokerec method)": [[231, "skia.StrokeRec.getResScale"]], "getstyle() (strokerec method)": [[231, "skia.StrokeRec.getStyle"]], "getwidth() (strokerec method)": [[231, "skia.StrokeRec.getWidth"]], "hasequaleffect() (strokerec method)": [[231, "skia.StrokeRec.hasEqualEffect"]], "isfillstyle() (strokerec method)": [[231, "skia.StrokeRec.isFillStyle"]], "ishairlinestyle() (strokerec method)": [[231, "skia.StrokeRec.isHairlineStyle"]], "kfill_initstyle (strokerec attribute)": [[231, "skia.StrokeRec.kFill_InitStyle"]], "kfill_style (strokerec attribute)": [[231, "skia.StrokeRec.kFill_Style"]], "khairline_initstyle (strokerec attribute)": [[231, "skia.StrokeRec.kHairline_InitStyle"]], "khairline_style (strokerec attribute)": [[231, "skia.StrokeRec.kHairline_Style"]], "kstrokeandfill_style (strokerec attribute)": [[231, "skia.StrokeRec.kStrokeAndFill_Style"]], "kstroke_style (strokerec attribute)": [[231, "skia.StrokeRec.kStroke_Style"]], "kstylecount (strokerec attribute)": [[231, "skia.StrokeRec.kStyleCount"]], "needtoapply() (strokerec method)": [[231, "skia.StrokeRec.needToApply"]], "setfillstyle() (strokerec method)": [[231, "skia.StrokeRec.setFillStyle"]], "sethairlinestyle() (strokerec method)": [[231, "skia.StrokeRec.setHairlineStyle"]], "setresscale() (strokerec method)": [[231, "skia.StrokeRec.setResScale"]], "setstrokeparams() (strokerec method)": [[231, "skia.StrokeRec.setStrokeParams"]], "setstrokestyle() (strokerec method)": [[231, "skia.StrokeRec.setStrokeStyle"]], "initstyle (class in skia.strokerec)": [[232, "skia.StrokeRec.InitStyle"]], "__init__() (initstyle method)": [[232, "skia.StrokeRec.InitStyle.__init__"]], "kfill_initstyle (initstyle attribute)": [[232, "skia.StrokeRec.InitStyle.kFill_InitStyle"]], "khairline_initstyle (initstyle attribute)": [[232, "skia.StrokeRec.InitStyle.kHairline_InitStyle"]], "name (initstyle attribute)": [[232, "skia.StrokeRec.InitStyle.name"]], "value (initstyle attribute)": [[232, "skia.StrokeRec.InitStyle.value"]], "style (class in skia.strokerec)": [[233, "skia.StrokeRec.Style"]], "khairline_style (style attribute)": [[233, "skia.StrokeRec.Style.kHairline_Style"]], "makefrombackendrendertarget() (surface static method)": [[234, "skia.Surface.MakeFromBackendRenderTarget"]], "makefrombackendtexture() (surface static method)": [[234, "skia.Surface.MakeFromBackendTexture"]], "makenull() (surface static method)": [[234, "skia.Surface.MakeNull"]], "makeraster() (surface static method)": [[234, "skia.Surface.MakeRaster"]], "makerasterdirect() (surface static method)": [[234, "skia.Surface.MakeRasterDirect"]], "makerastern32premul() (surface static method)": [[234, "skia.Surface.MakeRasterN32Premul"]], "makerendertarget() (surface static method)": [[234, "skia.Surface.MakeRenderTarget"]], "raster() (surface method)": [[234, "skia.Surface.Raster"]], "surface (class in skia)": [[234, "skia.Surface"]], "wrapbackendrendertarget() (surface static method)": [[234, "skia.Surface.WrapBackendRenderTarget"]], "__init__() (surface method)": [[234, "skia.Surface.__init__"]], "asyncrescaleandreadpixels() (surface method)": [[234, "skia.Surface.asyncRescaleAndReadPixels"]], "characterize() (surface method)": [[234, "skia.Surface.characterize"]], "draw() (surface method)": [[234, "skia.Surface.draw"]], "flush() (surface method)": [[234, "skia.Surface.flush"]], "flushandsubmit() (surface method)": [[234, "skia.Surface.flushAndSubmit"]], "generationid() (surface method)": [[234, "skia.Surface.generationID"]], "getbackendrendertarget() (surface method)": [[234, "skia.Surface.getBackendRenderTarget"]], "getbackendtexture() (surface method)": [[234, "skia.Surface.getBackendTexture"]], "getcanvas() (surface method)": [[234, "skia.Surface.getCanvas"]], "height() (surface method)": [[234, "skia.Surface.height"]], "imageinfo() (surface method)": [[234, "skia.Surface.imageInfo"]], "iscompatible() (surface method)": [[234, "skia.Surface.isCompatible"]], "kdiscardwrite_backendhandleaccess (surface attribute)": [[234, "skia.Surface.kDiscardWrite_BackendHandleAccess"]], "kdiscard_contentchangemode (surface attribute)": [[234, "skia.Surface.kDiscard_ContentChangeMode"]], "kflushread_backendhandleaccess (surface attribute)": [[234, "skia.Surface.kFlushRead_BackendHandleAccess"]], "kflushwrite_backendhandleaccess (surface attribute)": [[234, "skia.Surface.kFlushWrite_BackendHandleAccess"]], "klinear (surface attribute)": [[234, "skia.Surface.kLinear"]], "knoaccess (surface attribute)": [[234, "skia.Surface.kNoAccess"]], "kpresent (surface attribute)": [[234, "skia.Surface.kPresent"]], "kretain_contentchangemode (surface attribute)": [[234, "skia.Surface.kRetain_ContentChangeMode"]], "ksrc (surface attribute)": [[234, "skia.Surface.kSrc"]], "makeimagesnapshot() (surface method)": [[234, "skia.Surface.makeImageSnapshot"]], "makesurface() (surface method)": [[234, "skia.Surface.makeSurface"]], "notifycontentwillchange() (surface method)": [[234, "skia.Surface.notifyContentWillChange"]], "peekpixels() (surface method)": [[234, "skia.Surface.peekPixels"]], "props() (surface method)": [[234, "skia.Surface.props"]], "readpixels() (surface method)": [[234, "skia.Surface.readPixels"]], "recordingcontext() (surface method)": [[234, "skia.Surface.recordingContext"]], "ref() (surface method)": [[234, "skia.Surface.ref"]], "replacebackendtexture() (surface method)": [[234, "skia.Surface.replaceBackendTexture"]], "toarray() (surface method)": [[234, "skia.Surface.toarray"]], "unique() (surface method)": [[234, "skia.Surface.unique"]], "unref() (surface method)": [[234, "skia.Surface.unref"]], "width() (surface method)": [[234, "skia.Surface.width"]], "writepixels() (surface method)": [[234, "skia.Surface.writePixels"]], "asyncreadresult (class in skia.surface)": [[235, "skia.Surface.AsyncReadResult"]], "__init__() (asyncreadresult method)": [[235, "skia.Surface.AsyncReadResult.__init__"], [244, "skia.Surfaces.AsyncReadResult.__init__"]], "count() (asyncreadresult method)": [[235, "skia.Surface.AsyncReadResult.count"], [244, "skia.Surfaces.AsyncReadResult.count"]], "data() (asyncreadresult method)": [[235, "skia.Surface.AsyncReadResult.data"], [244, "skia.Surfaces.AsyncReadResult.data"]], "rowbytes() (asyncreadresult method)": [[235, "skia.Surface.AsyncReadResult.rowBytes"], [244, "skia.Surfaces.AsyncReadResult.rowBytes"]], "backendhandleaccess (class in skia.surface)": [[236, "skia.Surface.BackendHandleAccess"]], "__init__() (backendhandleaccess method)": [[236, "skia.Surface.BackendHandleAccess.__init__"], [245, "skia.Surfaces.BackendHandleAccess.__init__"]], "kdiscardwrite_backendhandleaccess (backendhandleaccess attribute)": [[236, "skia.Surface.BackendHandleAccess.kDiscardWrite_BackendHandleAccess"], [245, "skia.Surfaces.BackendHandleAccess.kDiscardWrite_BackendHandleAccess"]], "kflushread_backendhandleaccess (backendhandleaccess attribute)": [[236, "skia.Surface.BackendHandleAccess.kFlushRead_BackendHandleAccess"], [245, "skia.Surfaces.BackendHandleAccess.kFlushRead_BackendHandleAccess"]], "kflushwrite_backendhandleaccess (backendhandleaccess attribute)": [[236, "skia.Surface.BackendHandleAccess.kFlushWrite_BackendHandleAccess"], [245, "skia.Surfaces.BackendHandleAccess.kFlushWrite_BackendHandleAccess"]], "name (backendhandleaccess attribute)": [[236, "skia.Surface.BackendHandleAccess.name"], [245, "skia.Surfaces.BackendHandleAccess.name"]], "value (backendhandleaccess attribute)": [[236, "skia.Surface.BackendHandleAccess.value"], [245, "skia.Surfaces.BackendHandleAccess.value"]], "backendsurfaceaccess (class in skia.surface)": [[237, "skia.Surface.BackendSurfaceAccess"]], "__init__() (backendsurfaceaccess method)": [[237, "skia.Surface.BackendSurfaceAccess.__init__"], [246, "skia.Surfaces.BackendSurfaceAccess.__init__"]], "knoaccess (backendsurfaceaccess attribute)": [[237, "skia.Surface.BackendSurfaceAccess.kNoAccess"], [246, "skia.Surfaces.BackendSurfaceAccess.kNoAccess"]], "kpresent (backendsurfaceaccess attribute)": [[237, "skia.Surface.BackendSurfaceAccess.kPresent"], [246, "skia.Surfaces.BackendSurfaceAccess.kPresent"]], "name (backendsurfaceaccess attribute)": [[237, "skia.Surface.BackendSurfaceAccess.name"], [246, "skia.Surfaces.BackendSurfaceAccess.name"]], "value (backendsurfaceaccess attribute)": [[237, "skia.Surface.BackendSurfaceAccess.value"], [246, "skia.Surfaces.BackendSurfaceAccess.value"]], "contentchangemode (class in skia.surface)": [[238, "skia.Surface.ContentChangeMode"]], "__init__() (contentchangemode method)": [[238, "skia.Surface.ContentChangeMode.__init__"], [247, "skia.Surfaces.ContentChangeMode.__init__"]], "kdiscard_contentchangemode (contentchangemode attribute)": [[238, "skia.Surface.ContentChangeMode.kDiscard_ContentChangeMode"], [247, "skia.Surfaces.ContentChangeMode.kDiscard_ContentChangeMode"]], "kretain_contentchangemode (contentchangemode attribute)": [[238, "skia.Surface.ContentChangeMode.kRetain_ContentChangeMode"], [247, "skia.Surfaces.ContentChangeMode.kRetain_ContentChangeMode"]], "name (contentchangemode attribute)": [[238, "skia.Surface.ContentChangeMode.name"], [247, "skia.Surfaces.ContentChangeMode.name"]], "value (contentchangemode attribute)": [[238, "skia.Surface.ContentChangeMode.value"], [247, "skia.Surfaces.ContentChangeMode.value"]], "rescalegamma (class in skia.surface)": [[239, "skia.Surface.RescaleGamma"]], "__init__() (rescalegamma method)": [[239, "skia.Surface.RescaleGamma.__init__"], [248, "skia.Surfaces.RescaleGamma.__init__"]], "klinear (rescalegamma attribute)": [[239, "skia.Surface.RescaleGamma.kLinear"], [248, "skia.Surfaces.RescaleGamma.kLinear"]], "ksrc (rescalegamma attribute)": [[239, "skia.Surface.RescaleGamma.kSrc"], [248, "skia.Surfaces.RescaleGamma.kSrc"]], "name (rescalegamma attribute)": [[239, "skia.Surface.RescaleGamma.name"], [248, "skia.Surfaces.RescaleGamma.name"]], "value (rescalegamma attribute)": [[239, "skia.Surface.RescaleGamma.value"], [248, "skia.Surfaces.RescaleGamma.value"]], "surfacecharacterization (class in skia)": [[240, "skia.SurfaceCharacterization"]], "__init__() (surfacecharacterization method)": [[240, "skia.SurfaceCharacterization.__init__"]], "cachemaxresourcebytes() (surfacecharacterization method)": [[240, "skia.SurfaceCharacterization.cacheMaxResourceBytes"]], "colorspace() (surfacecharacterization method)": [[240, "skia.SurfaceCharacterization.colorSpace"]], "createbackendformat() (surfacecharacterization method)": [[240, "skia.SurfaceCharacterization.createBackendFormat"]], "createcolorspace() (surfacecharacterization method)": [[240, "skia.SurfaceCharacterization.createColorSpace"]], "createfbo0() (surfacecharacterization method)": [[240, "skia.SurfaceCharacterization.createFBO0"]], "createresized() (surfacecharacterization method)": [[240, "skia.SurfaceCharacterization.createResized"]], "height() (surfacecharacterization method)": [[240, "skia.SurfaceCharacterization.height"]], "ismipmapped() (surfacecharacterization method)": [[240, "skia.SurfaceCharacterization.isMipMapped"]], "istextureable() (surfacecharacterization method)": [[240, "skia.SurfaceCharacterization.isTextureable"]], "isvalid() (surfacecharacterization method)": [[240, "skia.SurfaceCharacterization.isValid"]], "refcolorspace() (surfacecharacterization method)": [[240, "skia.SurfaceCharacterization.refColorSpace"]], "surfaceprops() (surfacecharacterization method)": [[240, "skia.SurfaceCharacterization.surfaceProps"]], "usesglfbo0() (surfacecharacterization method)": [[240, "skia.SurfaceCharacterization.usesGLFBO0"]], "vulkansecondarycbcompatible() (surfacecharacterization method)": [[240, "skia.SurfaceCharacterization.vulkanSecondaryCBCompatible"]], "width() (surfacecharacterization method)": [[240, "skia.SurfaceCharacterization.width"]], "surfaceprops (class in skia)": [[241, "skia.SurfaceProps"]], "__init__() (surfaceprops method)": [[241, "skia.SurfaceProps.__init__"]], "flags() (surfaceprops method)": [[241, "skia.SurfaceProps.flags"]], "isusedeviceindependentfonts() (surfaceprops method)": [[241, "skia.SurfaceProps.isUseDeviceIndependentFonts"]], "kalwaysdither_flag (surfaceprops attribute)": [[241, "skia.SurfaceProps.kAlwaysDither_Flag"]], "kdefault_flag (surfaceprops attribute)": [[241, "skia.SurfaceProps.kDefault_Flag"]], "kdynamicmsaa_flag (surfaceprops attribute)": [[241, "skia.SurfaceProps.kDynamicMSAA_Flag"]], "kusedeviceindependentfonts_flag (surfaceprops attribute)": [[241, "skia.SurfaceProps.kUseDeviceIndependentFonts_Flag"]], "pixelgeometry() (surfaceprops method)": [[241, "skia.SurfaceProps.pixelGeometry"]], "flags (class in skia.surfaceprops)": [[242, "skia.SurfaceProps.Flags"]], "kalwaysdither_flag (flags attribute)": [[242, "skia.SurfaceProps.Flags.kAlwaysDither_Flag"]], "kdefault_flag (flags attribute)": [[242, "skia.SurfaceProps.Flags.kDefault_Flag"]], "kdynamicmsaa_flag (flags attribute)": [[242, "skia.SurfaceProps.Flags.kDynamicMSAA_Flag"]], "kusedeviceindependentfonts_flag (flags attribute)": [[242, "skia.SurfaceProps.Flags.kUseDeviceIndependentFonts_Flag"]], "makefrombackendrendertarget() (surfaces static method)": [[243, "skia.Surfaces.MakeFromBackendRenderTarget"]], "makefrombackendtexture() (surfaces static method)": [[243, "skia.Surfaces.MakeFromBackendTexture"]], "makenull() (surfaces static method)": [[243, "skia.Surfaces.MakeNull"]], "makeraster() (surfaces static method)": [[243, "skia.Surfaces.MakeRaster"]], "makerasterdirect() (surfaces static method)": [[243, "skia.Surfaces.MakeRasterDirect"]], "makerastern32premul() (surfaces static method)": [[243, "skia.Surfaces.MakeRasterN32Premul"]], "makerendertarget() (surfaces static method)": [[243, "skia.Surfaces.MakeRenderTarget"]], "raster() (surfaces method)": [[243, "skia.Surfaces.Raster"]], "surfaces (in module skia)": [[243, "skia.Surfaces"]], "wrapbackendrendertarget() (surfaces static method)": [[243, "skia.Surfaces.WrapBackendRenderTarget"]], "__init__() (surfaces method)": [[243, "skia.Surfaces.__init__"]], "asyncrescaleandreadpixels() (surfaces method)": [[243, "skia.Surfaces.asyncRescaleAndReadPixels"]], "characterize() (surfaces method)": [[243, "skia.Surfaces.characterize"]], "draw() (surfaces method)": [[243, "skia.Surfaces.draw"]], "flush() (surfaces method)": [[243, "skia.Surfaces.flush"]], "flushandsubmit() (surfaces method)": [[243, "skia.Surfaces.flushAndSubmit"]], "generationid() (surfaces method)": [[243, "skia.Surfaces.generationID"]], "getbackendrendertarget() (surfaces method)": [[243, "skia.Surfaces.getBackendRenderTarget"]], "getbackendtexture() (surfaces method)": [[243, "skia.Surfaces.getBackendTexture"]], "getcanvas() (surfaces method)": [[243, "skia.Surfaces.getCanvas"]], "height() (surfaces method)": [[243, "skia.Surfaces.height"]], "imageinfo() (surfaces method)": [[243, "skia.Surfaces.imageInfo"]], "iscompatible() (surfaces method)": [[243, "skia.Surfaces.isCompatible"]], "kdiscardwrite_backendhandleaccess (surfaces attribute)": [[243, "skia.Surfaces.kDiscardWrite_BackendHandleAccess"]], "kdiscard_contentchangemode (surfaces attribute)": [[243, "skia.Surfaces.kDiscard_ContentChangeMode"]], "kflushread_backendhandleaccess (surfaces attribute)": [[243, "skia.Surfaces.kFlushRead_BackendHandleAccess"]], "kflushwrite_backendhandleaccess (surfaces attribute)": [[243, "skia.Surfaces.kFlushWrite_BackendHandleAccess"]], "klinear (surfaces attribute)": [[243, "skia.Surfaces.kLinear"]], "knoaccess (surfaces attribute)": [[243, "skia.Surfaces.kNoAccess"]], "kpresent (surfaces attribute)": [[243, "skia.Surfaces.kPresent"]], "kretain_contentchangemode (surfaces attribute)": [[243, "skia.Surfaces.kRetain_ContentChangeMode"]], "ksrc (surfaces attribute)": [[243, "skia.Surfaces.kSrc"]], "makeimagesnapshot() (surfaces method)": [[243, "skia.Surfaces.makeImageSnapshot"]], "makesurface() (surfaces method)": [[243, "skia.Surfaces.makeSurface"]], "notifycontentwillchange() (surfaces method)": [[243, "skia.Surfaces.notifyContentWillChange"]], "peekpixels() (surfaces method)": [[243, "skia.Surfaces.peekPixels"]], "props() (surfaces method)": [[243, "skia.Surfaces.props"]], "readpixels() (surfaces method)": [[243, "skia.Surfaces.readPixels"]], "recordingcontext() (surfaces method)": [[243, "skia.Surfaces.recordingContext"]], "ref() (surfaces method)": [[243, "skia.Surfaces.ref"]], "replacebackendtexture() (surfaces method)": [[243, "skia.Surfaces.replaceBackendTexture"]], "toarray() (surfaces method)": [[243, "skia.Surfaces.toarray"]], "unique() (surfaces method)": [[243, "skia.Surfaces.unique"]], "unref() (surfaces method)": [[243, "skia.Surfaces.unref"]], "width() (surfaces method)": [[243, "skia.Surfaces.width"]], "writepixels() (surfaces method)": [[243, "skia.Surfaces.writePixels"]], "asyncreadresult (class in skia.surfaces)": [[244, "skia.Surfaces.AsyncReadResult"]], "backendhandleaccess (class in skia.surfaces)": [[245, "skia.Surfaces.BackendHandleAccess"]], "backendsurfaceaccess (class in skia.surfaces)": [[246, "skia.Surfaces.BackendSurfaceAccess"]], "contentchangemode (class in skia.surfaces)": [[247, "skia.Surfaces.ContentChangeMode"]], "rescalegamma (class in skia.surfaces)": [[248, "skia.Surfaces.RescaleGamma"]], "make() (tablecolorfilter static method)": [[249, "skia.TableColorFilter.Make"]], "makeargb() (tablecolorfilter static method)": [[249, "skia.TableColorFilter.MakeARGB"]], "tablecolorfilter (class in skia)": [[249, "skia.TableColorFilter"]], "__init__() (tablecolorfilter method)": [[249, "skia.TableColorFilter.__init__"]], "create() (tablemaskfilter static method)": [[250, "skia.TableMaskFilter.Create"]], "createclip() (tablemaskfilter static method)": [[250, "skia.TableMaskFilter.CreateClip"]], "creategamma() (tablemaskfilter static method)": [[250, "skia.TableMaskFilter.CreateGamma"]], "makecliptable() (tablemaskfilter static method)": [[250, "skia.TableMaskFilter.MakeClipTable"]], "makegammatable() (tablemaskfilter static method)": [[250, "skia.TableMaskFilter.MakeGammaTable"]], "tablemaskfilter (class in skia)": [[250, "skia.TableMaskFilter"]], "__init__() (tablemaskfilter method)": [[250, "skia.TableMaskFilter.__init__"]], "deserialize() (textblob static method)": [[251, "skia.TextBlob.Deserialize"]], "makefrompostext() (textblob static method)": [[251, "skia.TextBlob.MakeFromPosText"]], "makefrompostexth() (textblob static method)": [[251, "skia.TextBlob.MakeFromPosTextH"]], "makefromrsxform() (textblob static method)": [[251, "skia.TextBlob.MakeFromRSXform"]], "makefromshapedtext() (textblob static method)": [[251, "skia.TextBlob.MakeFromShapedText"]], "makefromstring() (textblob static method)": [[251, "skia.TextBlob.MakeFromString"]], "makefromtext() (textblob static method)": [[251, "skia.TextBlob.MakeFromText"]], "textblob (class in skia)": [[251, "skia.TextBlob"]], "__init__() (textblob method)": [[251, "skia.TextBlob.__init__"]], "bounds() (textblob method)": [[251, "skia.TextBlob.bounds"]], "deref() (textblob method)": [[251, "skia.TextBlob.deref"]], "getintercepts() (textblob method)": [[251, "skia.TextBlob.getIntercepts"]], "ref() (textblob method)": [[251, "skia.TextBlob.ref"]], "refcntgreaterthan() (textblob method)": [[251, "skia.TextBlob.refCntGreaterThan"]], "serialize() (textblob method)": [[251, "skia.TextBlob.serialize"]], "unique() (textblob method)": [[251, "skia.TextBlob.unique"]], "uniqueid() (textblob method)": [[251, "skia.TextBlob.uniqueID"]], "unref() (textblob method)": [[251, "skia.TextBlob.unref"]], "iter (class in skia.textblob)": [[252, "skia.TextBlob.Iter"]], "run (class in skia.textblob.iter)": [[253, "skia.TextBlob.Iter.Run"]], "__init__() (run method)": [[253, "skia.TextBlob.Iter.Run.__init__"]], "fglyphcount (run attribute)": [[253, "skia.TextBlob.Iter.Run.fGlyphCount"]], "fglyphindices (run attribute)": [[253, "skia.TextBlob.Iter.Run.fGlyphIndices"]], "ftypeface (run attribute)": [[253, "skia.TextBlob.Iter.Run.fTypeface"]], "textblobbuilder (class in skia)": [[254, "skia.TextBlobBuilder"]], "__init__() (textblobbuilder method)": [[254, "skia.TextBlobBuilder.__init__"]], "allocrun() (textblobbuilder method)": [[254, "skia.TextBlobBuilder.allocRun"]], "allocrunpos() (textblobbuilder method)": [[254, "skia.TextBlobBuilder.allocRunPos"]], "allocrunposh() (textblobbuilder method)": [[254, "skia.TextBlobBuilder.allocRunPosH"]], "allocrunrsxform() (textblobbuilder method)": [[254, "skia.TextBlobBuilder.allocRunRSXform"]], "make() (textblobbuilder method)": [[254, "skia.TextBlobBuilder.make"]], "textencoding (class in skia)": [[255, "skia.TextEncoding"]], "__init__() (textencoding method)": [[255, "skia.TextEncoding.__init__"]], "kglyphid (textencoding attribute)": [[255, "skia.TextEncoding.kGlyphID"]], "kutf16 (textencoding attribute)": [[255, "skia.TextEncoding.kUTF16"]], "kutf32 (textencoding attribute)": [[255, "skia.TextEncoding.kUTF32"]], "kutf8 (textencoding attribute)": [[255, "skia.TextEncoding.kUTF8"]], "name (textencoding attribute)": [[255, "skia.TextEncoding.name"]], "value (textencoding attribute)": [[255, "skia.TextEncoding.value"]], "tilemode (class in skia)": [[256, "skia.TileMode"]], "__init__() (tilemode method)": [[256, "skia.TileMode.__init__"]], "kclamp (tilemode attribute)": [[256, "skia.TileMode.kClamp"]], "kdecal (tilemode attribute)": [[256, "skia.TileMode.kDecal"]], "klasttilemode (tilemode attribute)": [[256, "skia.TileMode.kLastTileMode"]], "kmirror (tilemode attribute)": [[256, "skia.TileMode.kMirror"]], "krepeat (tilemode attribute)": [[256, "skia.TileMode.kRepeat"]], "name (tilemode attribute)": [[256, "skia.TileMode.name"]], "value (tilemode attribute)": [[256, "skia.TileMode.value"]], "make() (trimpatheffect static method)": [[257, "skia.TrimPathEffect.Make"]], "trimpatheffect (class in skia)": [[257, "skia.TrimPathEffect"]], "__init__() (trimpatheffect method)": [[257, "skia.TrimPathEffect.__init__"]], "kinverted (trimpatheffect attribute)": [[257, "skia.TrimPathEffect.kInverted"]], "knormal (trimpatheffect attribute)": [[257, "skia.TrimPathEffect.kNormal"]], "mode (class in skia.trimpatheffect)": [[258, "skia.TrimPathEffect.Mode"]], "__init__() (mode method)": [[258, "skia.TrimPathEffect.Mode.__init__"]], "kinverted (mode attribute)": [[258, "skia.TrimPathEffect.Mode.kInverted"]], "knormal (mode attribute)": [[258, "skia.TrimPathEffect.Mode.kNormal"]], "name (mode attribute)": [[258, "skia.TrimPathEffect.Mode.name"]], "value (mode attribute)": [[258, "skia.TrimPathEffect.Mode.value"]], "equal() (typeface static method)": [[259, "skia.Typeface.Equal"]], "makedefault() (typeface static method)": [[259, "skia.Typeface.MakeDefault"]], "makedeserialize() (typeface static method)": [[259, "skia.Typeface.MakeDeserialize"]], "makeempty() (typeface static method)": [[259, "skia.Typeface.MakeEmpty"]], "makefromdata() (typeface static method)": [[259, "skia.Typeface.MakeFromData"]], "makefromfile() (typeface static method)": [[259, "skia.Typeface.MakeFromFile"]], "makefromname() (typeface static method)": [[259, "skia.Typeface.MakeFromName"]], "typeface (class in skia)": [[259, "skia.Typeface"]], "__init__() (typeface method)": [[259, "skia.Typeface.__init__"]], "copytabledata() (typeface method)": [[259, "skia.Typeface.copyTableData"]], "countglyphs() (typeface method)": [[259, "skia.Typeface.countGlyphs"]], "counttables() (typeface method)": [[259, "skia.Typeface.countTables"]], "fontstyle() (typeface method)": [[259, "skia.Typeface.fontStyle"]], "getbounds() (typeface method)": [[259, "skia.Typeface.getBounds"]], "getfamilyname() (typeface method)": [[259, "skia.Typeface.getFamilyName"]], "getfamilynames() (typeface method)": [[259, "skia.Typeface.getFamilyNames"]], "getkerningpairadjustments() (typeface method)": [[259, "skia.Typeface.getKerningPairAdjustments"]], "getpostscriptname() (typeface method)": [[259, "skia.Typeface.getPostScriptName"]], "gettabledata() (typeface method)": [[259, "skia.Typeface.getTableData"]], "gettablesize() (typeface method)": [[259, "skia.Typeface.getTableSize"]], "gettabletags() (typeface method)": [[259, "skia.Typeface.getTableTags"]], "getunitsperem() (typeface method)": [[259, "skia.Typeface.getUnitsPerEm"]], "getvariationdesignparameters() (typeface method)": [[259, "skia.Typeface.getVariationDesignParameters"]], "getvariationdesignposition() (typeface method)": [[259, "skia.Typeface.getVariationDesignPosition"]], "isbold() (typeface method)": [[259, "skia.Typeface.isBold"]], "isfixedpitch() (typeface method)": [[259, "skia.Typeface.isFixedPitch"]], "isitalic() (typeface method)": [[259, "skia.Typeface.isItalic"]], "kdoincludedata (typeface attribute)": [[259, "skia.Typeface.kDoIncludeData"]], "kdontincludedata (typeface attribute)": [[259, "skia.Typeface.kDontIncludeData"]], "kincludedataiflocal (typeface attribute)": [[259, "skia.Typeface.kIncludeDataIfLocal"]], "makeclone() (typeface method)": [[259, "skia.Typeface.makeClone"]], "ref() (typeface method)": [[259, "skia.Typeface.ref"]], "serialize() (typeface method)": [[259, "skia.Typeface.serialize"]], "unichartoglyph() (typeface method)": [[259, "skia.Typeface.unicharToGlyph"]], "unicharstoglyphs() (typeface method)": [[259, "skia.Typeface.unicharsToGlyphs"]], "unique() (typeface method)": [[259, "skia.Typeface.unique"]], "uniqueid() (typeface method)": [[259, "skia.Typeface.uniqueID"]], "unref() (typeface method)": [[259, "skia.Typeface.unref"]], "serializebehavior (class in skia.typeface)": [[260, "skia.Typeface.SerializeBehavior"]], "__init__() (serializebehavior method)": [[260, "skia.Typeface.SerializeBehavior.__init__"]], "kdoincludedata (serializebehavior attribute)": [[260, "skia.Typeface.SerializeBehavior.kDoIncludeData"]], "kdontincludedata (serializebehavior attribute)": [[260, "skia.Typeface.SerializeBehavior.kDontIncludeData"]], "kincludedataiflocal (serializebehavior attribute)": [[260, "skia.Typeface.SerializeBehavior.kIncludeDataIfLocal"]], "name (serializebehavior attribute)": [[260, "skia.Typeface.SerializeBehavior.name"]], "value (serializebehavior attribute)": [[260, "skia.Typeface.SerializeBehavior.value"]], "icu_make() (unicode static method)": [[261, "skia.Unicode.ICU_Make"]], "unicode (class in skia)": [[261, "skia.Unicode"]], "__init__() (unicode method)": [[261, "skia.Unicode.__init__"]], "ref() (unicode method)": [[261, "skia.Unicode.ref"]], "unique() (unicode method)": [[261, "skia.Unicode.unique"]], "unref() (unicode method)": [[261, "skia.Unicode.unref"]], "v2 (class in skia)": [[262, "skia.V2"]], "__init__() (v2 method)": [[262, "skia.V2.__init__"]], "v3 (class in skia)": [[263, "skia.V3"]], "__init__() (v3 method)": [[263, "skia.V3.__init__"]], "v4 (class in skia)": [[264, "skia.V4"]], "__init__() (v4 method)": [[264, "skia.V4.__init__"]], "vectorruntimeeffectchild (class in skia)": [[265, "skia.VectorRuntimeEffectChild"]], "__init__() (vectorruntimeeffectchild method)": [[265, "skia.VectorRuntimeEffectChild.__init__"]], "append() (vectorruntimeeffectchild method)": [[265, "skia.VectorRuntimeEffectChild.append"]], "clear() (vectorruntimeeffectchild method)": [[265, "skia.VectorRuntimeEffectChild.clear"]], "extend() (vectorruntimeeffectchild method)": [[265, "skia.VectorRuntimeEffectChild.extend"]], "insert() (vectorruntimeeffectchild method)": [[265, "skia.VectorRuntimeEffectChild.insert"]], "pop() (vectorruntimeeffectchild method)": [[265, "skia.VectorRuntimeEffectChild.pop"]], "vectorruntimeeffectchildptr (class in skia)": [[266, "skia.VectorRuntimeEffectChildPtr"]], "__init__() (vectorruntimeeffectchildptr method)": [[266, "skia.VectorRuntimeEffectChildPtr.__init__"]], "append() (vectorruntimeeffectchildptr method)": [[266, "skia.VectorRuntimeEffectChildPtr.append"]], "clear() (vectorruntimeeffectchildptr method)": [[266, "skia.VectorRuntimeEffectChildPtr.clear"]], "extend() (vectorruntimeeffectchildptr method)": [[266, "skia.VectorRuntimeEffectChildPtr.extend"]], "insert() (vectorruntimeeffectchildptr method)": [[266, "skia.VectorRuntimeEffectChildPtr.insert"]], "pop() (vectorruntimeeffectchildptr method)": [[266, "skia.VectorRuntimeEffectChildPtr.pop"]], "makecopy() (vertices static method)": [[267, "skia.Vertices.MakeCopy"]], "vertices (class in skia)": [[267, "skia.Vertices"]], "__init__() (vertices method)": [[267, "skia.Vertices.__init__"]], "approximatesize() (vertices method)": [[267, "skia.Vertices.approximateSize"]], "bounds() (vertices method)": [[267, "skia.Vertices.bounds"]], "deref() (vertices method)": [[267, "skia.Vertices.deref"]], "klast_vertexmode (vertices attribute)": [[267, "skia.Vertices.kLast_VertexMode"]], "ktrianglefan_vertexmode (vertices attribute)": [[267, "skia.Vertices.kTriangleFan_VertexMode"]], "ktrianglestrip_vertexmode (vertices attribute)": [[267, "skia.Vertices.kTriangleStrip_VertexMode"]], "ktriangles_vertexmode (vertices attribute)": [[267, "skia.Vertices.kTriangles_VertexMode"]], "ref() (vertices method)": [[267, "skia.Vertices.ref"]], "refcntgreaterthan() (vertices method)": [[267, "skia.Vertices.refCntGreaterThan"]], "unique() (vertices method)": [[267, "skia.Vertices.unique"]], "uniqueid() (vertices method)": [[267, "skia.Vertices.uniqueID"]], "unref() (vertices method)": [[267, "skia.Vertices.unref"]], "vertexmode (class in skia.vertices)": [[268, "skia.Vertices.VertexMode"]], "__init__() (vertexmode method)": [[268, "skia.Vertices.VertexMode.__init__"]], "klast_vertexmode (vertexmode attribute)": [[268, "skia.Vertices.VertexMode.kLast_VertexMode"]], "ktrianglefan_vertexmode (vertexmode attribute)": [[268, "skia.Vertices.VertexMode.kTriangleFan_VertexMode"]], "ktrianglestrip_vertexmode (vertexmode attribute)": [[268, "skia.Vertices.VertexMode.kTriangleStrip_VertexMode"]], "ktriangles_vertexmode (vertexmode attribute)": [[268, "skia.Vertices.VertexMode.kTriangles_VertexMode"]], "name (vertexmode attribute)": [[268, "skia.Vertices.VertexMode.name"]], "value (vertexmode attribute)": [[268, "skia.Vertices.VertexMode.value"]], "vkformat (class in skia)": [[269, "skia.VkFormat"]], "__init__() (vkformat method)": [[269, "skia.VkFormat.__init__"]], "name (vkformat attribute)": [[269, "skia.VkFormat.name"]], "value (vkformat attribute)": [[269, "skia.VkFormat.value"]], "vkimagelayout (class in skia)": [[270, "skia.VkImageLayout"]], "__init__() (vkimagelayout method)": [[270, "skia.VkImageLayout.__init__"]], "name (vkimagelayout attribute)": [[270, "skia.VkImageLayout.name"]], "value (vkimagelayout attribute)": [[270, "skia.VkImageLayout.value"]], "sizeofpackeduint() (wstream static method)": [[271, "skia.WStream.SizeOfPackedUInt"]], "wstream (class in skia)": [[271, "skia.WStream"]], "__init__() (wstream method)": [[271, "skia.WStream.__init__"]], "byteswritten() (wstream method)": [[271, "skia.WStream.bytesWritten"]], "flush() (wstream method)": [[271, "skia.WStream.flush"]], "newline() (wstream method)": [[271, "skia.WStream.newline"]], "write() (wstream method)": [[271, "skia.WStream.write"]], "write16() (wstream method)": [[271, "skia.WStream.write16"]], "write32() (wstream method)": [[271, "skia.WStream.write32"]], "write8() (wstream method)": [[271, "skia.WStream.write8"]], "writebigdecastext() (wstream method)": [[271, "skia.WStream.writeBigDecAsText"]], "writebool() (wstream method)": [[271, "skia.WStream.writeBool"]], "writedecastext() (wstream method)": [[271, "skia.WStream.writeDecAsText"]], "writehexastext() (wstream method)": [[271, "skia.WStream.writeHexAsText"]], "writepackeduint() (wstream method)": [[271, "skia.WStream.writePackedUInt"]], "writescalar() (wstream method)": [[271, "skia.WStream.writeScalar"]], "writescalarastext() (wstream method)": [[271, "skia.WStream.writeScalarAsText"]], "writestream() (wstream method)": [[271, "skia.WStream.writeStream"]], "writetext() (wstream method)": [[271, "skia.WStream.writeText"]], "hasalpha() (yuvainfo static method)": [[272, "skia.YUVAInfo.HasAlpha"]], "numchannelsinplane() (yuvainfo static method)": [[272, "skia.YUVAInfo.NumChannelsInPlane"]], "numplanes() (yuvainfo static method)": [[272, "skia.YUVAInfo.NumPlanes"]], "planedimensions() (yuvainfo static method)": [[272, "skia.YUVAInfo.PlaneDimensions"]], "yuvainfo (class in skia)": [[272, "skia.YUVAInfo"]], "__init__() (yuvainfo method)": [[272, "skia.YUVAInfo.__init__"]], "computetotalbytes() (yuvainfo method)": [[272, "skia.YUVAInfo.computeTotalBytes"]], "dimensions() (yuvainfo method)": [[272, "skia.YUVAInfo.dimensions"]], "hasalpha() (yuvainfo method)": [[272, "skia.YUVAInfo.hasAlpha"]], "height() (yuvainfo method)": [[272, "skia.YUVAInfo.height"]], "k410 (yuvainfo attribute)": [[272, "skia.YUVAInfo.k410"]], "k411 (yuvainfo attribute)": [[272, "skia.YUVAInfo.k411"]], "k420 (yuvainfo attribute)": [[272, "skia.YUVAInfo.k420"]], "k422 (yuvainfo attribute)": [[272, "skia.YUVAInfo.k422"]], "k440 (yuvainfo attribute)": [[272, "skia.YUVAInfo.k440"]], "k444 (yuvainfo attribute)": [[272, "skia.YUVAInfo.k444"]], "kcentered (yuvainfo attribute)": [[272, "skia.YUVAInfo.kCentered"]], "kmaxplanes (yuvainfo attribute)": [[272, "skia.YUVAInfo.kMaxPlanes"]], "kuyv (yuvainfo attribute)": [[272, "skia.YUVAInfo.kUYV"]], "kuyva (yuvainfo attribute)": [[272, "skia.YUVAInfo.kUYVA"]], "kunknown (yuvainfo attribute)": [[272, "skia.YUVAInfo.kUnknown"]], "kyuv (yuvainfo attribute)": [[272, "skia.YUVAInfo.kYUV"]], "kyuva (yuvainfo attribute)": [[272, "skia.YUVAInfo.kYUVA"]], "ky_uv (yuvainfo attribute)": [[272, "skia.YUVAInfo.kY_UV"]], "ky_uv_a (yuvainfo attribute)": [[272, "skia.YUVAInfo.kY_UV_A"]], "ky_u_v (yuvainfo attribute)": [[272, "skia.YUVAInfo.kY_U_V"]], "ky_u_v_a (yuvainfo attribute)": [[272, "skia.YUVAInfo.kY_U_V_A"]], "ky_vu (yuvainfo attribute)": [[272, "skia.YUVAInfo.kY_VU"]], "ky_vu_a (yuvainfo attribute)": [[272, "skia.YUVAInfo.kY_VU_A"]], "ky_v_u (yuvainfo attribute)": [[272, "skia.YUVAInfo.kY_V_U"]], "ky_v_u_a (yuvainfo attribute)": [[272, "skia.YUVAInfo.kY_V_U_A"]], "numchannelsinplane() (yuvainfo method)": [[272, "skia.YUVAInfo.numChannelsInPlane"]], "numplanes() (yuvainfo method)": [[272, "skia.YUVAInfo.numPlanes"]], "origin() (yuvainfo method)": [[272, "skia.YUVAInfo.origin"]], "planeconfig() (yuvainfo method)": [[272, "skia.YUVAInfo.planeConfig"]], "planedimensions() (yuvainfo method)": [[272, "skia.YUVAInfo.planeDimensions"]], "sitingx() (yuvainfo method)": [[272, "skia.YUVAInfo.sitingX"]], "sitingy() (yuvainfo method)": [[272, "skia.YUVAInfo.sitingY"]], "subsampling() (yuvainfo method)": [[272, "skia.YUVAInfo.subSampling"]], "width() (yuvainfo method)": [[272, "skia.YUVAInfo.width"]], "yuvcolorspace() (yuvainfo method)": [[272, "skia.YUVAInfo.yuvColorSpace"]], "planeconfig (class in skia.yuvainfo)": [[273, "skia.YUVAInfo.PlaneConfig"]], "__init__() (planeconfig method)": [[273, "skia.YUVAInfo.PlaneConfig.__init__"]], "kuyv (planeconfig attribute)": [[273, "skia.YUVAInfo.PlaneConfig.kUYV"]], "kuyva (planeconfig attribute)": [[273, "skia.YUVAInfo.PlaneConfig.kUYVA"]], "kunknown (planeconfig attribute)": [[273, "skia.YUVAInfo.PlaneConfig.kUnknown"]], "kyuv (planeconfig attribute)": [[273, "skia.YUVAInfo.PlaneConfig.kYUV"]], "kyuva (planeconfig attribute)": [[273, "skia.YUVAInfo.PlaneConfig.kYUVA"]], "ky_uv (planeconfig attribute)": [[273, "skia.YUVAInfo.PlaneConfig.kY_UV"]], "ky_uv_a (planeconfig attribute)": [[273, "skia.YUVAInfo.PlaneConfig.kY_UV_A"]], "ky_u_v (planeconfig attribute)": [[273, "skia.YUVAInfo.PlaneConfig.kY_U_V"]], "ky_u_v_a (planeconfig attribute)": [[273, "skia.YUVAInfo.PlaneConfig.kY_U_V_A"]], "ky_vu (planeconfig attribute)": [[273, "skia.YUVAInfo.PlaneConfig.kY_VU"]], "ky_vu_a (planeconfig attribute)": [[273, "skia.YUVAInfo.PlaneConfig.kY_VU_A"]], "ky_v_u (planeconfig attribute)": [[273, "skia.YUVAInfo.PlaneConfig.kY_V_U"]], "ky_v_u_a (planeconfig attribute)": [[273, "skia.YUVAInfo.PlaneConfig.kY_V_U_A"]], "name (planeconfig attribute)": [[273, "skia.YUVAInfo.PlaneConfig.name"]], "value (planeconfig attribute)": [[273, "skia.YUVAInfo.PlaneConfig.value"]], "siting (class in skia.yuvainfo)": [[274, "skia.YUVAInfo.Siting"]], "__init__() (siting method)": [[274, "skia.YUVAInfo.Siting.__init__"]], "kcentered (siting attribute)": [[274, "skia.YUVAInfo.Siting.kCentered"]], "name (siting attribute)": [[274, "skia.YUVAInfo.Siting.name"]], "value (siting attribute)": [[274, "skia.YUVAInfo.Siting.value"]], "subsampling (class in skia.yuvainfo)": [[275, "skia.YUVAInfo.Subsampling"]], "__init__() (subsampling method)": [[275, "skia.YUVAInfo.Subsampling.__init__"]], "k410 (subsampling attribute)": [[275, "skia.YUVAInfo.Subsampling.k410"]], "k411 (subsampling attribute)": [[275, "skia.YUVAInfo.Subsampling.k411"]], "k420 (subsampling attribute)": [[275, "skia.YUVAInfo.Subsampling.k420"]], "k422 (subsampling attribute)": [[275, "skia.YUVAInfo.Subsampling.k422"]], "k440 (subsampling attribute)": [[275, "skia.YUVAInfo.Subsampling.k440"]], "k444 (subsampling attribute)": [[275, "skia.YUVAInfo.Subsampling.k444"]], "kunknown (subsampling attribute)": [[275, "skia.YUVAInfo.Subsampling.kUnknown"]], "name (subsampling attribute)": [[275, "skia.YUVAInfo.Subsampling.name"]], "value (subsampling attribute)": [[275, "skia.YUVAInfo.Subsampling.value"]], "defaultcolortypefordatatype() (yuvapixmapinfo static method)": [[276, "skia.YUVAPixmapInfo.DefaultColorTypeForDataType"]], "numchannelsanddatatype() (yuvapixmapinfo static method)": [[276, "skia.YUVAPixmapInfo.NumChannelsAndDataType"]], "yuvapixmapinfo (class in skia)": [[276, "skia.YUVAPixmapInfo"]], "__init__() (yuvapixmapinfo method)": [[276, "skia.YUVAPixmapInfo.__init__"]], "computetotalbytes() (yuvapixmapinfo method)": [[276, "skia.YUVAPixmapInfo.computeTotalBytes"]], "datatype() (yuvapixmapinfo method)": [[276, "skia.YUVAPixmapInfo.dataType"]], "initpixmapsfromsingleallocation() (yuvapixmapinfo method)": [[276, "skia.YUVAPixmapInfo.initPixmapsFromSingleAllocation"]], "issupported() (yuvapixmapinfo method)": [[276, "skia.YUVAPixmapInfo.isSupported"]], "isvalid() (yuvapixmapinfo method)": [[276, "skia.YUVAPixmapInfo.isValid"]], "kfloat16 (yuvapixmapinfo attribute)": [[276, "skia.YUVAPixmapInfo.kFloat16"]], "klast (yuvapixmapinfo attribute)": [[276, "skia.YUVAPixmapInfo.kLast"]], "kmaxplanes (yuvapixmapinfo attribute)": [[276, "skia.YUVAPixmapInfo.kMaxPlanes"]], "kunorm10_unorm2 (yuvapixmapinfo attribute)": [[276, "skia.YUVAPixmapInfo.kUnorm10_Unorm2"]], "kunorm16 (yuvapixmapinfo attribute)": [[276, "skia.YUVAPixmapInfo.kUnorm16"]], "kunorm8 (yuvapixmapinfo attribute)": [[276, "skia.YUVAPixmapInfo.kUnorm8"]], "numplanes() (yuvapixmapinfo method)": [[276, "skia.YUVAPixmapInfo.numPlanes"]], "planeinfo() (yuvapixmapinfo method)": [[276, "skia.YUVAPixmapInfo.planeInfo"]], "rowbytes() (yuvapixmapinfo method)": [[276, "skia.YUVAPixmapInfo.rowBytes"]], "yuvcolorspace() (yuvapixmapinfo method)": [[276, "skia.YUVAPixmapInfo.yuvColorSpace"]], "yuvainfo() (yuvapixmapinfo method)": [[276, "skia.YUVAPixmapInfo.yuvaInfo"]], "datatype (class in skia.yuvapixmapinfo)": [[277, "skia.YUVAPixmapInfo.DataType"]], "__init__() (datatype method)": [[277, "skia.YUVAPixmapInfo.DataType.__init__"]], "kfloat16 (datatype attribute)": [[277, "skia.YUVAPixmapInfo.DataType.kFloat16"]], "klast (datatype attribute)": [[277, "skia.YUVAPixmapInfo.DataType.kLast"]], "kunorm10_unorm2 (datatype attribute)": [[277, "skia.YUVAPixmapInfo.DataType.kUnorm10_Unorm2"]], "kunorm16 (datatype attribute)": [[277, "skia.YUVAPixmapInfo.DataType.kUnorm16"]], "kunorm8 (datatype attribute)": [[277, "skia.YUVAPixmapInfo.DataType.kUnorm8"]], "name (datatype attribute)": [[277, "skia.YUVAPixmapInfo.DataType.name"]], "value (datatype attribute)": [[277, "skia.YUVAPixmapInfo.DataType.value"]], "all() (supporteddatatypes static method)": [[278, "skia.YUVAPixmapInfo.SupportedDataTypes.All"]], "supporteddatatypes (class in skia.yuvapixmapinfo)": [[278, "skia.YUVAPixmapInfo.SupportedDataTypes"]], "__init__() (supporteddatatypes method)": [[278, "skia.YUVAPixmapInfo.SupportedDataTypes.__init__"]], "enabledatatype() (supporteddatatypes method)": [[278, "skia.YUVAPixmapInfo.SupportedDataTypes.enableDataType"]], "supported() (supporteddatatypes method)": [[278, "skia.YUVAPixmapInfo.SupportedDataTypes.supported"]], "allocate() (yuvapixmaps static method)": [[279, "skia.YUVAPixmaps.Allocate"]], "fromdata() (yuvapixmaps static method)": [[279, "skia.YUVAPixmaps.FromData"]], "fromexternalmemory() (yuvapixmaps static method)": [[279, "skia.YUVAPixmaps.FromExternalMemory"]], "fromexternalpixmaps() (yuvapixmaps static method)": [[279, "skia.YUVAPixmaps.FromExternalPixmaps"]], "yuvapixmaps (class in skia)": [[279, "skia.YUVAPixmaps"]], "__init__() (yuvapixmaps method)": [[279, "skia.YUVAPixmaps.__init__"]], "isvalid() (yuvapixmaps method)": [[279, "skia.YUVAPixmaps.isValid"]], "numplanes() (yuvapixmaps method)": [[279, "skia.YUVAPixmaps.numPlanes"]], "plane() (yuvapixmaps method)": [[279, "skia.YUVAPixmaps.plane"]], "planes() (yuvapixmaps method)": [[279, "skia.YUVAPixmaps.planes"]], "yuvainfo() (yuvapixmaps method)": [[279, "skia.YUVAPixmaps.yuvaInfo"]], "yuvcolorspace (class in skia)": [[280, "skia.YUVColorSpace"]], "__init__() (yuvcolorspace method)": [[280, "skia.YUVColorSpace.__init__"]], "kbt2020_yuvcolorspace (yuvcolorspace attribute)": [[280, "skia.YUVColorSpace.kBT2020_YUVColorSpace"]], "kidentity_yuvcolorspace (yuvcolorspace attribute)": [[280, "skia.YUVColorSpace.kIdentity_YUVColorSpace"]], "kjpeg_yuvcolorspace (yuvcolorspace attribute)": [[280, "skia.YUVColorSpace.kJPEG_YUVColorSpace"]], "klastenum_yuvcolorspace (yuvcolorspace attribute)": [[280, "skia.YUVColorSpace.kLastEnum_YUVColorSpace"]], "krec601_yuvcolorspace (yuvcolorspace attribute)": [[280, "skia.YUVColorSpace.kRec601_YUVColorSpace"]], "krec709_yuvcolorspace (yuvcolorspace attribute)": [[280, "skia.YUVColorSpace.kRec709_YUVColorSpace"]], "name (yuvcolorspace attribute)": [[280, "skia.YUVColorSpace.name"]], "value (yuvcolorspace attribute)": [[280, "skia.YUVColorSpace.value"]], "__init__() (gpubackendapi method)": [[281, "skia.gpuBackendApi.__init__"]], "gpubackendapi (class in skia)": [[281, "skia.gpuBackendApi"]], "kdawn (gpubackendapi attribute)": [[281, "skia.gpuBackendApi.kDawn"]], "kmetal (gpubackendapi attribute)": [[281, "skia.gpuBackendApi.kMetal"]], "kmock (gpubackendapi attribute)": [[281, "skia.gpuBackendApi.kMock"]], "kvulkan (gpubackendapi attribute)": [[281, "skia.gpuBackendApi.kVulkan"]], "name (gpubackendapi attribute)": [[281, "skia.gpuBackendApi.name"]], "value (gpubackendapi attribute)": [[281, "skia.gpuBackendApi.value"]], "__init__() (textlayout_fontcollection method)": [[282, "skia.textlayout_FontCollection.__init__"]], "ref() (textlayout_fontcollection method)": [[282, "skia.textlayout_FontCollection.ref"]], "setdefaultfontmanager() (textlayout_fontcollection method)": [[282, "skia.textlayout_FontCollection.setDefaultFontManager"]], "textlayout_fontcollection (class in skia)": [[282, "skia.textlayout_FontCollection"]], "unique() (textlayout_fontcollection method)": [[282, "skia.textlayout_FontCollection.unique"]], "unref() (textlayout_fontcollection method)": [[282, "skia.textlayout_FontCollection.unref"]], "alphabeticbaseline (textlayout_paragraph attribute)": [[283, "skia.textlayout_Paragraph.AlphabeticBaseline"]], "exceedmaxlines (textlayout_paragraph attribute)": [[283, "skia.textlayout_Paragraph.ExceedMaxLines"]], "height (textlayout_paragraph attribute)": [[283, "skia.textlayout_Paragraph.Height"]], "ideographicbaseline (textlayout_paragraph attribute)": [[283, "skia.textlayout_Paragraph.IdeographicBaseline"]], "longestline (textlayout_paragraph attribute)": [[283, "skia.textlayout_Paragraph.LongestLine"]], "maxintrinsicwidth (textlayout_paragraph attribute)": [[283, "skia.textlayout_Paragraph.MaxIntrinsicWidth"]], "minintrinsicwidth (textlayout_paragraph attribute)": [[283, "skia.textlayout_Paragraph.MinIntrinsicWidth"]], "width (textlayout_paragraph attribute)": [[283, "skia.textlayout_Paragraph.Width"]], "__init__() (textlayout_paragraph method)": [[283, "skia.textlayout_Paragraph.__init__"]], "layout() (textlayout_paragraph method)": [[283, "skia.textlayout_Paragraph.layout"]], "paint() (textlayout_paragraph method)": [[283, "skia.textlayout_Paragraph.paint"]], "textlayout_paragraph (class in skia)": [[283, "skia.textlayout_Paragraph"]], "build() (textlayout_paragraphbuilder method)": [[284, "skia.textlayout_ParagraphBuilder.Build"]], "__init__() (textlayout_paragraphbuilder method)": [[284, "skia.textlayout_ParagraphBuilder.__init__"]], "addtext() (textlayout_paragraphbuilder method)": [[284, "skia.textlayout_ParagraphBuilder.addText"]], "make() (textlayout_paragraphbuilder static method)": [[284, "skia.textlayout_ParagraphBuilder.make"]], "pop() (textlayout_paragraphbuilder method)": [[284, "skia.textlayout_ParagraphBuilder.pop"]], "pushstyle() (textlayout_paragraphbuilder method)": [[284, "skia.textlayout_ParagraphBuilder.pushStyle"]], "textlayout_paragraphbuilder (class in skia)": [[284, "skia.textlayout_ParagraphBuilder"]], "__init__() (textlayout_paragraphstyle method)": [[285, "skia.textlayout_ParagraphStyle.__init__"]], "setstrutstyle() (textlayout_paragraphstyle method)": [[285, "skia.textlayout_ParagraphStyle.setStrutStyle"]], "settextalign() (textlayout_paragraphstyle method)": [[285, "skia.textlayout_ParagraphStyle.setTextAlign"]], "settextstyle() (textlayout_paragraphstyle method)": [[285, "skia.textlayout_ParagraphStyle.setTextStyle"]], "textlayout_paragraphstyle (class in skia)": [[285, "skia.textlayout_ParagraphStyle"]], "__init__() (textlayout_strutstyle method)": [[286, "skia.textlayout_StrutStyle.__init__"]], "setleading() (textlayout_strutstyle method)": [[286, "skia.textlayout_StrutStyle.setLeading"]], "setstrutenabled() (textlayout_strutstyle method)": [[286, "skia.textlayout_StrutStyle.setStrutEnabled"]], "textlayout_strutstyle (class in skia)": [[286, "skia.textlayout_StrutStyle"]], "__init__() (textlayout_textalign method)": [[287, "skia.textlayout_TextAlign.__init__"]], "kcenter (textlayout_textalign attribute)": [[287, "skia.textlayout_TextAlign.kCenter"]], "kend (textlayout_textalign attribute)": [[287, "skia.textlayout_TextAlign.kEnd"]], "kjustify (textlayout_textalign attribute)": [[287, "skia.textlayout_TextAlign.kJustify"]], "kleft (textlayout_textalign attribute)": [[287, "skia.textlayout_TextAlign.kLeft"]], "kright (textlayout_textalign attribute)": [[287, "skia.textlayout_TextAlign.kRight"]], "kstart (textlayout_textalign attribute)": [[287, "skia.textlayout_TextAlign.kStart"]], "name (textlayout_textalign attribute)": [[287, "skia.textlayout_TextAlign.name"]], "textlayout_textalign (class in skia)": [[287, "skia.textlayout_TextAlign"]], "value (textlayout_textalign attribute)": [[287, "skia.textlayout_TextAlign.value"]], "__init__() (textlayout_textdecoration method)": [[288, "skia.textlayout_TextDecoration.__init__"]], "klinethrough (textlayout_textdecoration attribute)": [[288, "skia.textlayout_TextDecoration.kLineThrough"]], "knodecoration (textlayout_textdecoration attribute)": [[288, "skia.textlayout_TextDecoration.kNoDecoration"]], "koverline (textlayout_textdecoration attribute)": [[288, "skia.textlayout_TextDecoration.kOverline"]], "koverlinelinethrough (textlayout_textdecoration attribute)": [[288, "skia.textlayout_TextDecoration.kOverlineLineThrough"]], "kunderline (textlayout_textdecoration attribute)": [[288, "skia.textlayout_TextDecoration.kUnderline"]], "kunderlinelinethrough (textlayout_textdecoration attribute)": [[288, "skia.textlayout_TextDecoration.kUnderlineLineThrough"]], "kunderlineoverline (textlayout_textdecoration attribute)": [[288, "skia.textlayout_TextDecoration.kUnderlineOverline"]], "kunderlineoverlinelinethrough (textlayout_textdecoration attribute)": [[288, "skia.textlayout_TextDecoration.kUnderlineOverlineLineThrough"]], "name (textlayout_textdecoration attribute)": [[288, "skia.textlayout_TextDecoration.name"]], "textlayout_textdecoration (class in skia)": [[288, "skia.textlayout_TextDecoration"]], "value (textlayout_textdecoration attribute)": [[288, "skia.textlayout_TextDecoration.value"]], "__init__() (textlayout_textdecorationmode method)": [[289, "skia.textlayout_TextDecorationMode.__init__"]], "kgaps (textlayout_textdecorationmode attribute)": [[289, "skia.textlayout_TextDecorationMode.kGaps"]], "kthrough (textlayout_textdecorationmode attribute)": [[289, "skia.textlayout_TextDecorationMode.kThrough"]], "name (textlayout_textdecorationmode attribute)": [[289, "skia.textlayout_TextDecorationMode.name"]], "textlayout_textdecorationmode (class in skia)": [[289, "skia.textlayout_TextDecorationMode"]], "value (textlayout_textdecorationmode attribute)": [[289, "skia.textlayout_TextDecorationMode.value"]], "__init__() (textlayout_textdecorationstyle method)": [[290, "skia.textlayout_TextDecorationStyle.__init__"]], "kdashed (textlayout_textdecorationstyle attribute)": [[290, "skia.textlayout_TextDecorationStyle.kDashed"]], "kdotted (textlayout_textdecorationstyle attribute)": [[290, "skia.textlayout_TextDecorationStyle.kDotted"]], "kdouble (textlayout_textdecorationstyle attribute)": [[290, "skia.textlayout_TextDecorationStyle.kDouble"]], "ksolid (textlayout_textdecorationstyle attribute)": [[290, "skia.textlayout_TextDecorationStyle.kSolid"]], "kwavy (textlayout_textdecorationstyle attribute)": [[290, "skia.textlayout_TextDecorationStyle.kWavy"]], "name (textlayout_textdecorationstyle attribute)": [[290, "skia.textlayout_TextDecorationStyle.name"]], "textlayout_textdecorationstyle (class in skia)": [[290, "skia.textlayout_TextDecorationStyle"]], "value (textlayout_textdecorationstyle attribute)": [[290, "skia.textlayout_TextDecorationStyle.value"]], "__init__() (textlayout_textstyle method)": [[291, "skia.textlayout_TextStyle.__init__"]], "cloneforplaceholder() (textlayout_textstyle method)": [[291, "skia.textlayout_TextStyle.cloneForPlaceholder"]], "setcolor() (textlayout_textstyle method)": [[291, "skia.textlayout_TextStyle.setColor"]], "setdecoration() (textlayout_textstyle method)": [[291, "skia.textlayout_TextStyle.setDecoration"]], "setdecorationcolor() (textlayout_textstyle method)": [[291, "skia.textlayout_TextStyle.setDecorationColor"]], "setdecorationmode() (textlayout_textstyle method)": [[291, "skia.textlayout_TextStyle.setDecorationMode"]], "setdecorationstyle() (textlayout_textstyle method)": [[291, "skia.textlayout_TextStyle.setDecorationStyle"]], "setdecorationthicknessmultiplier() (textlayout_textstyle method)": [[291, "skia.textlayout_TextStyle.setDecorationThicknessMultiplier"]], "setfontfamilies() (textlayout_textstyle method)": [[291, "skia.textlayout_TextStyle.setFontFamilies"]], "setfontsize() (textlayout_textstyle method)": [[291, "skia.textlayout_TextStyle.setFontSize"]], "setfontstyle() (textlayout_textstyle method)": [[291, "skia.textlayout_TextStyle.setFontStyle"]], "setforegroundcolor() (textlayout_textstyle method)": [[291, "skia.textlayout_TextStyle.setForegroundColor"]], "setforegroundpaint() (textlayout_textstyle method)": [[291, "skia.textlayout_TextStyle.setForegroundPaint"]], "setletterspacing() (textlayout_textstyle method)": [[291, "skia.textlayout_TextStyle.setLetterSpacing"]], "setlocale() (textlayout_textstyle method)": [[291, "skia.textlayout_TextStyle.setLocale"]], "setwordspacing() (textlayout_textstyle method)": [[291, "skia.textlayout_TextStyle.setWordSpacing"]], "textlayout_textstyle (class in skia)": [[291, "skia.textlayout_TextStyle"]], "new_custom_directory() (textlayout_typefacefontprovider static method)": [[292, "skia.textlayout_TypefaceFontProvider.New_Custom_Directory"]], "new_custom_empty() (textlayout_typefacefontprovider static method)": [[292, "skia.textlayout_TypefaceFontProvider.New_Custom_Empty"]], "onefontmgr() (textlayout_typefacefontprovider method)": [[292, "skia.textlayout_TypefaceFontProvider.OneFontMgr"]], "refdefault() (textlayout_typefacefontprovider static method)": [[292, "skia.textlayout_TypefaceFontProvider.RefDefault"]], "__init__() (textlayout_typefacefontprovider method)": [[292, "skia.textlayout_TypefaceFontProvider.__init__"]], "countfamilies() (textlayout_typefacefontprovider method)": [[292, "skia.textlayout_TypefaceFontProvider.countFamilies"]], "createstyleset() (textlayout_typefacefontprovider method)": [[292, "skia.textlayout_TypefaceFontProvider.createStyleSet"]], "getfamilyname() (textlayout_typefacefontprovider method)": [[292, "skia.textlayout_TypefaceFontProvider.getFamilyName"]], "legacymaketypeface() (textlayout_typefacefontprovider method)": [[292, "skia.textlayout_TypefaceFontProvider.legacyMakeTypeface"]], "makefromdata() (textlayout_typefacefontprovider method)": [[292, "skia.textlayout_TypefaceFontProvider.makeFromData"]], "makefromfile() (textlayout_typefacefontprovider method)": [[292, "skia.textlayout_TypefaceFontProvider.makeFromFile"]], "matchfamily() (textlayout_typefacefontprovider method)": [[292, "skia.textlayout_TypefaceFontProvider.matchFamily"]], "matchfamilystyle() (textlayout_typefacefontprovider method)": [[292, "skia.textlayout_TypefaceFontProvider.matchFamilyStyle"]], "matchfamilystylecharacter() (textlayout_typefacefontprovider method)": [[292, "skia.textlayout_TypefaceFontProvider.matchFamilyStyleCharacter"]], "ref() (textlayout_typefacefontprovider method)": [[292, "skia.textlayout_TypefaceFontProvider.ref"]], "registertypeface() (textlayout_typefacefontprovider method)": [[292, "skia.textlayout_TypefaceFontProvider.registerTypeface"]], "textlayout_typefacefontprovider (class in skia)": [[292, "skia.textlayout_TypefaceFontProvider"]], "unique() (textlayout_typefacefontprovider method)": [[292, "skia.textlayout_TypefaceFontProvider.unique"]], "unref() (textlayout_typefacefontprovider method)": [[292, "skia.textlayout_TypefaceFontProvider.unref"]]}})