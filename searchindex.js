Search.setIndex({"docnames": ["development", "index", "install", "reference", "reference/skia", "reference/skia.AlphaType", "reference/skia.ApplyPerspectiveClip", "reference/skia.AutoCanvasRestore", "reference/skia.BBHFactory", "reference/skia.BBoxHierarchy", "reference/skia.BBoxHierarchy.Metadata", "reference/skia.Bitmap", "reference/skia.Bitmap.AllocFlags", "reference/skia.BlendMode", "reference/skia.BlendModeCoeff", "reference/skia.BlurMaskFilter", "reference/skia.BlurStyle", "reference/skia.Budgeted", "reference/skia.Canvas", "reference/skia.Canvas.Lattice", "reference/skia.Canvas.Lattice.RectType", "reference/skia.Canvas.PointMode", "reference/skia.Canvas.QuadAAFlags", "reference/skia.Canvas.SaveLayerFlags", "reference/skia.Canvas.SaveLayerRec", "reference/skia.Canvas.SrcRectConstraint", "reference/skia.ClipOp", "reference/skia.Codec", "reference/skia.Codec.DisposalMethod", "reference/skia.Codec.FrameInfo", "reference/skia.Codec.Options", "reference/skia.Codec.Result", "reference/skia.Codec.ScanlineOrder", "reference/skia.Codec.SelectionPolicy", "reference/skia.Codec.ZeroInitialized", "reference/skia.Color4f", "reference/skia.ColorChannel", "reference/skia.ColorChannelFlag", "reference/skia.ColorFilter", "reference/skia.ColorFilter.Type", "reference/skia.ColorFilters", "reference/skia.ColorInfo", "reference/skia.ColorMatrix", "reference/skia.ColorMatrixFilter", "reference/skia.ColorMatrixFilter.Type", "reference/skia.ColorSpace", "reference/skia.ColorType", "reference/skia.ConvergeMode", "reference/skia.CornerPathEffect", "reference/skia.DashPathEffect", "reference/skia.Data", "reference/skia.DiscretePathEffect", "reference/skia.Document", "reference/skia.Drawable", "reference/skia.Drawable.Type", "reference/skia.DynamicMemoryWStream", "reference/skia.EncodedImageFormat", "reference/skia.EncodedOrigin", "reference/skia.FILEStream", "reference/skia.FILEWStream", "reference/skia.FilterMode", "reference/skia.Flattanable", "reference/skia.Flattanable.Type", "reference/skia.Font", "reference/skia.Font.Edging", "reference/skia.FontArguments", "reference/skia.FontArguments.VariationPosition", "reference/skia.FontArguments.VariationPosition.Coordinate", "reference/skia.FontArguments.VariationPosition.Coordinates", "reference/skia.FontHinting", "reference/skia.FontMetrics", "reference/skia.FontMetrics.FontMetricsFlags", "reference/skia.FontMgr", "reference/skia.FontParameters", "reference/skia.FontParameters.Variation", "reference/skia.FontParameters.Variation.Axis", "reference/skia.FontStyle", "reference/skia.FontStyle.Slant", "reference/skia.FontStyle.Weight", "reference/skia.FontStyle.Width", "reference/skia.FontStyleSet", "reference/skia.GrBackendApi", "reference/skia.GrBackendFormat", "reference/skia.GrBackendRenderTarget", "reference/skia.GrBackendSemaphore", "reference/skia.GrBackendTexture", "reference/skia.GrColorType", "reference/skia.GrContext", "reference/skia.GrContextOptions", "reference/skia.GrContext_Base", "reference/skia.GrDirectContext", "reference/skia.GrFlushInfo", "reference/skia.GrGLBackendState", "reference/skia.GrGLFormat", "reference/skia.GrGLFramebufferInfo", "reference/skia.GrGLInterface", "reference/skia.GrGLTextureInfo", "reference/skia.GrImageContext", "reference/skia.GrMipmapped", "reference/skia.GrMockOptions", "reference/skia.GrMockRenderTargetInfo", "reference/skia.GrMockTextureInfo", "reference/skia.GrProtected", "reference/skia.GrPurgeResourceOptions", "reference/skia.GrRecordingContext", "reference/skia.GrRenderable", "reference/skia.GrSemaphoresSubmitted", "reference/skia.GrSurfaceOrigin", "reference/skia.GrSyncCpu", "reference/skia.GrTextureType", "reference/skia.GrVkAlloc", "reference/skia.GrVkBackendContext", "reference/skia.GrVkDrawableInfo", "reference/skia.GrVkExtensionFlags", "reference/skia.GrVkFeatureFlags", "reference/skia.GrVkImageInfo", "reference/skia.GrVkYcbcrConversionInfo", "reference/skia.GradientShader", "reference/skia.GradientShader.Flags", "reference/skia.HighContrastConfig", "reference/skia.HighContrastConfig.InvertStyle", "reference/skia.HighContrastFilter", "reference/skia.IPoint", "reference/skia.IRect", "reference/skia.ISize", "reference/skia.Image", "reference/skia.Image.BitDepth", "reference/skia.Image.CachingHint", "reference/skia.Image.CompressionType", "reference/skia.Image.LegacyBitmapMode", "reference/skia.ImageFilter", "reference/skia.ImageFilter.CropRect", "reference/skia.ImageFilter.MapDirection", "reference/skia.ImageFilter.Type", "reference/skia.ImageFilters", "reference/skia.ImageInfo", "reference/skia.Line2DPathEffect", "reference/skia.LumaColorFilter", "reference/skia.M44", "reference/skia.MaskFilter", "reference/skia.MaskFilter.Type", "reference/skia.Matrix", "reference/skia.Matrix.ScaleToFit", "reference/skia.Matrix.TypeMask", "reference/skia.MemoryStream", "reference/skia.MipmapBuilder", "reference/skia.NullWStream", "reference/skia.OpBuilder", "reference/skia.OverdrawColorFilter", "reference/skia.PDF", "reference/skia.PDF.AttributeList", "reference/skia.PDF.Metadata", "reference/skia.PDF.StructureElementNode", "reference/skia.Paint", "reference/skia.Paint.Cap", "reference/skia.Paint.Join", "reference/skia.Paint.Style", "reference/skia.Path", "reference/skia.Path.AddPathMode", "reference/skia.Path.ArcSize", "reference/skia.Path.Iter", "reference/skia.Path.RawIter", "reference/skia.Path.SegmentMask", "reference/skia.Path.Verb", "reference/skia.Path1DPathEffect", "reference/skia.Path1DPathEffect.Style", "reference/skia.Path2DPathEffect", "reference/skia.PathBuilder", "reference/skia.PathBuilder.ArcSize", "reference/skia.PathDirection", "reference/skia.PathEffect", "reference/skia.PathEffect.DashInfo", "reference/skia.PathEffect.DashType", "reference/skia.PathEffect.Type", "reference/skia.PathFillType", "reference/skia.PathMeasure", "reference/skia.PathMeasure.GetPosAndTan", "reference/skia.PathOp", "reference/skia.PathSegmentMask", "reference/skia.PathVerb", "reference/skia.PerlinNoiseShader", "reference/skia.Picture", "reference/skia.PictureRecorder", "reference/skia.PixelGeometry", "reference/skia.PixelRef", "reference/skia.Pixmap", "reference/skia.Point", "reference/skia.Point3", "reference/skia.RRect", "reference/skia.RRect.Corner", "reference/skia.RRect.Type", "reference/skia.RSXform", "reference/skia.RTreeFactory", "reference/skia.Rect", "reference/skia.RefCnt", "reference/skia.RefCntBase", "reference/skia.Region", "reference/skia.Region.Cliperator", "reference/skia.Region.Iterator", "reference/skia.Region.Op", "reference/skia.Region.Spanerator", "reference/skia.SVGCanvas", "reference/skia.SVGDOM", "reference/skia.SamplingOptions", "reference/skia.Shader", "reference/skia.Shader.Type", "reference/skia.ShaderMaskFilter", "reference/skia.Shaders", "reference/skia.Size", "reference/skia.Stream", "reference/skia.StreamAsset", "reference/skia.StreamMemory", "reference/skia.StreamRewindable", "reference/skia.StreamSeekable", "reference/skia.String", "reference/skia.StrokeRec", "reference/skia.StrokeRec.InitStyle", "reference/skia.StrokeRec.Style", "reference/skia.Surface", "reference/skia.Surface.AsyncReadResult", "reference/skia.Surface.BackendHandleAccess", "reference/skia.Surface.BackendSurfaceAccess", "reference/skia.Surface.ContentChangeMode", "reference/skia.Surface.RescaleGamma", "reference/skia.SurfaceCharacterization", "reference/skia.SurfaceProps", "reference/skia.SurfaceProps.Flags", "reference/skia.TableColorFilter", "reference/skia.TableMaskFilter", "reference/skia.TextBlob", "reference/skia.TextBlob.Iter", "reference/skia.TextBlob.Iter.Run", "reference/skia.TextBlobBuilder", "reference/skia.TextEncoding", "reference/skia.TileMode", "reference/skia.TrimPathEffect", "reference/skia.TrimPathEffect.Mode", "reference/skia.Typeface", "reference/skia.Typeface.SerializeBehavior", "reference/skia.Vertices", "reference/skia.Vertices.VertexMode", "reference/skia.VkFormat", "reference/skia.VkImageLayout", "reference/skia.WStream", "reference/skia.YUVAInfo", "reference/skia.YUVAInfo.PlaneConfig", "reference/skia.YUVAInfo.Siting", "reference/skia.YUVAInfo.Subsampling", "reference/skia.YUVAPixmapInfo", "reference/skia.YUVAPixmapInfo.DataType", "reference/skia.YUVAPixmapInfo.SupportedDataTypes", "reference/skia.YUVAPixmaps", "reference/skia.YUVColorSpace", "reference/skia.gpuBackendApi", "tutorial/canvas", "tutorial/index", "tutorial/overview", "tutorial/paint", "tutorial/path"], "filenames": ["development.rst", "index.rst", "install.rst", "reference.rst", "reference/skia.rst", "reference/skia.AlphaType.rst", "reference/skia.ApplyPerspectiveClip.rst", "reference/skia.AutoCanvasRestore.rst", "reference/skia.BBHFactory.rst", "reference/skia.BBoxHierarchy.rst", "reference/skia.BBoxHierarchy.Metadata.rst", "reference/skia.Bitmap.rst", "reference/skia.Bitmap.AllocFlags.rst", "reference/skia.BlendMode.rst", "reference/skia.BlendModeCoeff.rst", "reference/skia.BlurMaskFilter.rst", "reference/skia.BlurStyle.rst", "reference/skia.Budgeted.rst", "reference/skia.Canvas.rst", "reference/skia.Canvas.Lattice.rst", "reference/skia.Canvas.Lattice.RectType.rst", "reference/skia.Canvas.PointMode.rst", "reference/skia.Canvas.QuadAAFlags.rst", "reference/skia.Canvas.SaveLayerFlags.rst", "reference/skia.Canvas.SaveLayerRec.rst", "reference/skia.Canvas.SrcRectConstraint.rst", "reference/skia.ClipOp.rst", "reference/skia.Codec.rst", "reference/skia.Codec.DisposalMethod.rst", "reference/skia.Codec.FrameInfo.rst", "reference/skia.Codec.Options.rst", "reference/skia.Codec.Result.rst", "reference/skia.Codec.ScanlineOrder.rst", "reference/skia.Codec.SelectionPolicy.rst", "reference/skia.Codec.ZeroInitialized.rst", "reference/skia.Color4f.rst", "reference/skia.ColorChannel.rst", "reference/skia.ColorChannelFlag.rst", "reference/skia.ColorFilter.rst", "reference/skia.ColorFilter.Type.rst", "reference/skia.ColorFilters.rst", "reference/skia.ColorInfo.rst", "reference/skia.ColorMatrix.rst", "reference/skia.ColorMatrixFilter.rst", "reference/skia.ColorMatrixFilter.Type.rst", "reference/skia.ColorSpace.rst", "reference/skia.ColorType.rst", "reference/skia.ConvergeMode.rst", "reference/skia.CornerPathEffect.rst", "reference/skia.DashPathEffect.rst", "reference/skia.Data.rst", "reference/skia.DiscretePathEffect.rst", "reference/skia.Document.rst", "reference/skia.Drawable.rst", "reference/skia.Drawable.Type.rst", "reference/skia.DynamicMemoryWStream.rst", "reference/skia.EncodedImageFormat.rst", "reference/skia.EncodedOrigin.rst", "reference/skia.FILEStream.rst", "reference/skia.FILEWStream.rst", "reference/skia.FilterMode.rst", "reference/skia.Flattanable.rst", "reference/skia.Flattanable.Type.rst", "reference/skia.Font.rst", "reference/skia.Font.Edging.rst", "reference/skia.FontArguments.rst", "reference/skia.FontArguments.VariationPosition.rst", "reference/skia.FontArguments.VariationPosition.Coordinate.rst", "reference/skia.FontArguments.VariationPosition.Coordinates.rst", "reference/skia.FontHinting.rst", "reference/skia.FontMetrics.rst", "reference/skia.FontMetrics.FontMetricsFlags.rst", "reference/skia.FontMgr.rst", "reference/skia.FontParameters.rst", "reference/skia.FontParameters.Variation.rst", "reference/skia.FontParameters.Variation.Axis.rst", "reference/skia.FontStyle.rst", "reference/skia.FontStyle.Slant.rst", "reference/skia.FontStyle.Weight.rst", "reference/skia.FontStyle.Width.rst", "reference/skia.FontStyleSet.rst", "reference/skia.GrBackendApi.rst", "reference/skia.GrBackendFormat.rst", "reference/skia.GrBackendRenderTarget.rst", "reference/skia.GrBackendSemaphore.rst", "reference/skia.GrBackendTexture.rst", "reference/skia.GrColorType.rst", "reference/skia.GrContext.rst", "reference/skia.GrContextOptions.rst", "reference/skia.GrContext_Base.rst", "reference/skia.GrDirectContext.rst", "reference/skia.GrFlushInfo.rst", "reference/skia.GrGLBackendState.rst", "reference/skia.GrGLFormat.rst", "reference/skia.GrGLFramebufferInfo.rst", "reference/skia.GrGLInterface.rst", "reference/skia.GrGLTextureInfo.rst", "reference/skia.GrImageContext.rst", "reference/skia.GrMipmapped.rst", "reference/skia.GrMockOptions.rst", "reference/skia.GrMockRenderTargetInfo.rst", "reference/skia.GrMockTextureInfo.rst", "reference/skia.GrProtected.rst", "reference/skia.GrPurgeResourceOptions.rst", "reference/skia.GrRecordingContext.rst", "reference/skia.GrRenderable.rst", "reference/skia.GrSemaphoresSubmitted.rst", "reference/skia.GrSurfaceOrigin.rst", "reference/skia.GrSyncCpu.rst", "reference/skia.GrTextureType.rst", "reference/skia.GrVkAlloc.rst", "reference/skia.GrVkBackendContext.rst", "reference/skia.GrVkDrawableInfo.rst", "reference/skia.GrVkExtensionFlags.rst", "reference/skia.GrVkFeatureFlags.rst", "reference/skia.GrVkImageInfo.rst", "reference/skia.GrVkYcbcrConversionInfo.rst", "reference/skia.GradientShader.rst", "reference/skia.GradientShader.Flags.rst", "reference/skia.HighContrastConfig.rst", "reference/skia.HighContrastConfig.InvertStyle.rst", "reference/skia.HighContrastFilter.rst", "reference/skia.IPoint.rst", "reference/skia.IRect.rst", "reference/skia.ISize.rst", "reference/skia.Image.rst", "reference/skia.Image.BitDepth.rst", "reference/skia.Image.CachingHint.rst", "reference/skia.Image.CompressionType.rst", "reference/skia.Image.LegacyBitmapMode.rst", "reference/skia.ImageFilter.rst", "reference/skia.ImageFilter.CropRect.rst", "reference/skia.ImageFilter.MapDirection.rst", "reference/skia.ImageFilter.Type.rst", "reference/skia.ImageFilters.rst", "reference/skia.ImageInfo.rst", "reference/skia.Line2DPathEffect.rst", "reference/skia.LumaColorFilter.rst", "reference/skia.M44.rst", "reference/skia.MaskFilter.rst", "reference/skia.MaskFilter.Type.rst", "reference/skia.Matrix.rst", "reference/skia.Matrix.ScaleToFit.rst", "reference/skia.Matrix.TypeMask.rst", "reference/skia.MemoryStream.rst", "reference/skia.MipmapBuilder.rst", "reference/skia.NullWStream.rst", "reference/skia.OpBuilder.rst", "reference/skia.OverdrawColorFilter.rst", "reference/skia.PDF.rst", "reference/skia.PDF.AttributeList.rst", "reference/skia.PDF.Metadata.rst", "reference/skia.PDF.StructureElementNode.rst", "reference/skia.Paint.rst", "reference/skia.Paint.Cap.rst", "reference/skia.Paint.Join.rst", "reference/skia.Paint.Style.rst", "reference/skia.Path.rst", "reference/skia.Path.AddPathMode.rst", "reference/skia.Path.ArcSize.rst", "reference/skia.Path.Iter.rst", "reference/skia.Path.RawIter.rst", "reference/skia.Path.SegmentMask.rst", "reference/skia.Path.Verb.rst", "reference/skia.Path1DPathEffect.rst", "reference/skia.Path1DPathEffect.Style.rst", "reference/skia.Path2DPathEffect.rst", "reference/skia.PathBuilder.rst", "reference/skia.PathBuilder.ArcSize.rst", "reference/skia.PathDirection.rst", "reference/skia.PathEffect.rst", "reference/skia.PathEffect.DashInfo.rst", "reference/skia.PathEffect.DashType.rst", "reference/skia.PathEffect.Type.rst", "reference/skia.PathFillType.rst", "reference/skia.PathMeasure.rst", "reference/skia.PathMeasure.GetPosAndTan.rst", "reference/skia.PathOp.rst", "reference/skia.PathSegmentMask.rst", "reference/skia.PathVerb.rst", "reference/skia.PerlinNoiseShader.rst", "reference/skia.Picture.rst", "reference/skia.PictureRecorder.rst", "reference/skia.PixelGeometry.rst", "reference/skia.PixelRef.rst", "reference/skia.Pixmap.rst", "reference/skia.Point.rst", "reference/skia.Point3.rst", "reference/skia.RRect.rst", "reference/skia.RRect.Corner.rst", "reference/skia.RRect.Type.rst", "reference/skia.RSXform.rst", "reference/skia.RTreeFactory.rst", "reference/skia.Rect.rst", "reference/skia.RefCnt.rst", "reference/skia.RefCntBase.rst", "reference/skia.Region.rst", "reference/skia.Region.Cliperator.rst", "reference/skia.Region.Iterator.rst", "reference/skia.Region.Op.rst", "reference/skia.Region.Spanerator.rst", "reference/skia.SVGCanvas.rst", "reference/skia.SVGDOM.rst", "reference/skia.SamplingOptions.rst", "reference/skia.Shader.rst", "reference/skia.Shader.Type.rst", "reference/skia.ShaderMaskFilter.rst", "reference/skia.Shaders.rst", "reference/skia.Size.rst", "reference/skia.Stream.rst", "reference/skia.StreamAsset.rst", "reference/skia.StreamMemory.rst", "reference/skia.StreamRewindable.rst", "reference/skia.StreamSeekable.rst", "reference/skia.String.rst", "reference/skia.StrokeRec.rst", "reference/skia.StrokeRec.InitStyle.rst", "reference/skia.StrokeRec.Style.rst", "reference/skia.Surface.rst", "reference/skia.Surface.AsyncReadResult.rst", "reference/skia.Surface.BackendHandleAccess.rst", "reference/skia.Surface.BackendSurfaceAccess.rst", "reference/skia.Surface.ContentChangeMode.rst", "reference/skia.Surface.RescaleGamma.rst", "reference/skia.SurfaceCharacterization.rst", "reference/skia.SurfaceProps.rst", "reference/skia.SurfaceProps.Flags.rst", "reference/skia.TableColorFilter.rst", "reference/skia.TableMaskFilter.rst", "reference/skia.TextBlob.rst", "reference/skia.TextBlob.Iter.rst", "reference/skia.TextBlob.Iter.Run.rst", "reference/skia.TextBlobBuilder.rst", "reference/skia.TextEncoding.rst", "reference/skia.TileMode.rst", "reference/skia.TrimPathEffect.rst", "reference/skia.TrimPathEffect.Mode.rst", "reference/skia.Typeface.rst", "reference/skia.Typeface.SerializeBehavior.rst", "reference/skia.Vertices.rst", "reference/skia.Vertices.VertexMode.rst", "reference/skia.VkFormat.rst", "reference/skia.VkImageLayout.rst", "reference/skia.WStream.rst", "reference/skia.YUVAInfo.rst", "reference/skia.YUVAInfo.PlaneConfig.rst", "reference/skia.YUVAInfo.Siting.rst", "reference/skia.YUVAInfo.Subsampling.rst", "reference/skia.YUVAPixmapInfo.rst", "reference/skia.YUVAPixmapInfo.DataType.rst", "reference/skia.YUVAPixmapInfo.SupportedDataTypes.rst", "reference/skia.YUVAPixmaps.rst", "reference/skia.YUVColorSpace.rst", "reference/skia.gpuBackendApi.rst", "tutorial/canvas.rst", "tutorial/index.rst", "tutorial/overview.rst", "tutorial/paint.rst", "tutorial/path.rst"], "titles": ["Development", "skia-python", "Install", "Reference", "skia", "AlphaType", "ApplyPerspectiveClip", "AutoCanvasRestore", "BBHFactory", "BBoxHierarchy", "BBoxHierarchy.Metadata", "Bitmap", "Bitmap.AllocFlags", "BlendMode", "BlendModeCoeff", "BlurMaskFilter", "BlurStyle", "Budgeted", "Canvas", "Canvas.Lattice", "Canvas.Lattice.RectType", "Canvas.PointMode", "Canvas.QuadAAFlags", "Canvas.SaveLayerFlags", "Canvas.SaveLayerRec", "Canvas.SrcRectConstraint", "ClipOp", "Codec", "Codec.DisposalMethod", "Codec.FrameInfo", "Codec.Options", "Codec.Result", "Codec.ScanlineOrder", "Codec.SelectionPolicy", "Codec.ZeroInitialized", "Color4f", "ColorChannel", "ColorChannelFlag", "ColorFilter", "ColorFilter.Type", "ColorFilters", "ColorInfo", "ColorMatrix", "ColorMatrixFilter", "ColorMatrixFilter.Type", "ColorSpace", "ColorType", "ConvergeMode", "CornerPathEffect", "DashPathEffect", "Data", "DiscretePathEffect", "Document", "Drawable", "Drawable.Type", "DynamicMemoryWStream", "EncodedImageFormat", "EncodedOrigin", "FILEStream", "FILEWStream", "FilterMode", "Flattanable", "Flattanable.Type", "Font", "Font.Edging", "FontArguments", "FontArguments.VariationPosition", "FontArguments.VariationPosition.Coordinate", "FontArguments.VariationPosition.Coordinates", "FontHinting", "FontMetrics", "FontMetrics.FontMetricsFlags", "FontMgr", "FontParameters", "FontParameters.Variation", "FontParameters.Variation.Axis", "FontStyle", "FontStyle.Slant", "FontStyle.Weight", "FontStyle.Width", "FontStyleSet", "GrBackendApi", "GrBackendFormat", "GrBackendRenderTarget", "GrBackendSemaphore", "GrBackendTexture", "GrColorType", "GrContext", "GrContextOptions", "GrContext_Base", "GrDirectContext", "GrFlushInfo", "GrGLBackendState", "GrGLFormat", "GrGLFramebufferInfo", "GrGLInterface", "GrGLTextureInfo", "GrImageContext", "GrMipmapped", "GrMockOptions", "GrMockRenderTargetInfo", "GrMockTextureInfo", "GrProtected", "GrPurgeResourceOptions", "GrRecordingContext", "GrRenderable", "GrSemaphoresSubmitted", "GrSurfaceOrigin", "GrSyncCpu", "GrTextureType", "GrVkAlloc", "GrVkBackendContext", "GrVkDrawableInfo", "GrVkExtensionFlags", "GrVkFeatureFlags", "GrVkImageInfo", "GrVkYcbcrConversionInfo", "GradientShader", "GradientShader.Flags", "HighContrastConfig", "HighContrastConfig.InvertStyle", "HighContrastFilter", "IPoint", "IRect", "ISize", "Image", "Image.BitDepth", "Image.CachingHint", "Image.CompressionType", "Image.LegacyBitmapMode", "ImageFilter", "ImageFilter.CropRect", "ImageFilter.MapDirection", "ImageFilter.Type", "ImageFilters", "ImageInfo", "Line2DPathEffect", "LumaColorFilter", "M44", "MaskFilter", "MaskFilter.Type", "Matrix", "Matrix.ScaleToFit", "Matrix.TypeMask", "MemoryStream", "MipmapBuilder", "NullWStream", "OpBuilder", "OverdrawColorFilter", "PDF", "PDF.AttributeList", "PDF.Metadata", "PDF.StructureElementNode", "Paint", "Paint.Cap", "Paint.Join", "Paint.Style", "Path", "Path.AddPathMode", "Path.ArcSize", "Path.Iter", "Path.RawIter", "Path.SegmentMask", "Path.Verb", "Path1DPathEffect", "Path1DPathEffect.Style", "Path2DPathEffect", "PathBuilder", "PathBuilder.ArcSize", "PathDirection", "PathEffect", "PathEffect.DashInfo", "PathEffect.DashType", "PathEffect.Type", "PathFillType", "PathMeasure", "PathMeasure.GetPosAndTan", "PathOp", "PathSegmentMask", "PathVerb", "PerlinNoiseShader", "Picture", "PictureRecorder", "PixelGeometry", "PixelRef", "Pixmap", "Point", "Point3", "RRect", "RRect.Corner", "RRect.Type", "RSXform", "RTreeFactory", "Rect", "RefCnt", "RefCntBase", "Region", "Region.Cliperator", "Region.Iterator", "Region.Op", "Region.Spanerator", "SVGCanvas", "SVGDOM", "SamplingOptions", "Shader", "Shader.Type", "ShaderMaskFilter", "Shaders", "Size", "Stream", "StreamAsset", "StreamMemory", "StreamRewindable", "StreamSeekable", "String", "StrokeRec", "StrokeRec.InitStyle", "StrokeRec.Style", "Surface", "Surface.AsyncReadResult", "Surface.BackendHandleAccess", "Surface.BackendSurfaceAccess", "Surface.ContentChangeMode", "Surface.RescaleGamma", "SurfaceCharacterization", "SurfaceProps", "SurfaceProps.Flags", "TableColorFilter", "TableMaskFilter", "TextBlob", "TextBlob.Iter", "TextBlob.Iter.Run", "TextBlobBuilder", "TextEncoding", "TileMode", "TrimPathEffect", "TrimPathEffect.Mode", "Typeface", "Typeface.SerializeBehavior", "Vertices", "Vertices.VertexMode", "VkFormat", "VkImageLayout", "WStream", "YUVAInfo", "YUVAInfo.PlaneConfig", "YUVAInfo.Siting", "YUVAInfo.Subsampling", "YUVAPixmapInfo", "YUVAPixmapInfo.DataType", "YUVAPixmapInfo.SupportedDataTypes", "YUVAPixmaps", "YUVColorSpace", "gpuBackendApi", "Canvas Creation", "Tutorial", "Overview", "Paint Overview", "Path Overview"], "terms": {"skia": [0, 2, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258], "i": [0, 1, 2, 4, 5, 7, 9, 11, 12, 14, 18, 19, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 41, 43, 45, 48, 49, 50, 51, 52, 53, 55, 58, 61, 63, 68, 70, 71, 72, 75, 80, 81, 83, 87, 89, 90, 91, 95, 97, 104, 111, 115, 117, 121, 122, 123, 125, 129, 130, 134, 135, 137, 139, 141, 144, 147, 149, 151, 152, 153, 157, 158, 160, 161, 167, 170, 172, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 201, 202, 204, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 227, 229, 232, 235, 237, 244, 245, 246, 247, 248, 250, 251, 254, 255, 256, 257, 258], "built": [0, 2, 11, 18, 125, 185, 229, 232], "upon": [0, 53, 218], "pybind11": [0, 2], "ar": [0, 2, 4, 5, 9, 11, 14, 18, 19, 27, 28, 31, 32, 35, 38, 41, 43, 45, 52, 53, 58, 61, 63, 70, 71, 72, 80, 87, 89, 90, 91, 92, 95, 97, 104, 111, 117, 122, 123, 124, 125, 130, 134, 135, 139, 141, 144, 145, 149, 151, 153, 157, 160, 161, 167, 170, 175, 181, 182, 183, 185, 186, 187, 188, 193, 194, 195, 196, 202, 204, 208, 209, 210, 211, 212, 213, 218, 227, 229, 232, 235, 237, 244, 245, 246, 247, 248, 249, 250, 251, 254, 256, 257, 258], "mostli": 0, "plain": 0, "convers": [0, 11, 121, 125, 185, 186], "from": [0, 4, 11, 13, 18, 19, 27, 29, 31, 32, 35, 41, 45, 48, 51, 57, 63, 70, 72, 87, 90, 91, 122, 123, 125, 134, 135, 138, 141, 151, 153, 157, 160, 161, 167, 170, 177, 180, 181, 182, 185, 186, 187, 188, 193, 196, 201, 218, 219, 229, 232, 237, 248, 254, 256, 257, 258], "c": [0, 2, 4, 11, 40, 41, 46, 125, 135, 141, 157, 188, 193, 207, 224, 257], "api": [0, 1, 18, 32, 35, 52, 81, 83, 87, 89, 90, 91, 97, 104, 125, 209, 218, 253, 255], "function": [0, 9, 11, 14, 18, 24, 27, 35, 40, 41, 45, 53, 55, 59, 63, 68, 76, 82, 83, 85, 87, 90, 91, 94, 96, 100, 101, 119, 122, 123, 124, 125, 131, 134, 135, 141, 144, 146, 149, 151, 153, 157, 160, 161, 167, 175, 180, 181, 182, 185, 186, 187, 188, 191, 193, 196, 198, 204, 207, 208, 214, 215, 218, 225, 229, 237, 243, 244, 248], "name": [0, 4, 5, 6, 12, 13, 14, 16, 17, 20, 21, 22, 23, 25, 26, 28, 31, 32, 33, 34, 36, 37, 38, 39, 43, 44, 46, 47, 53, 54, 56, 57, 60, 61, 62, 64, 69, 71, 72, 77, 78, 79, 81, 86, 92, 93, 98, 102, 103, 105, 106, 107, 108, 109, 113, 114, 118, 120, 126, 127, 128, 129, 130, 132, 133, 137, 139, 140, 142, 143, 150, 151, 154, 155, 156, 157, 158, 159, 162, 163, 165, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 183, 189, 190, 199, 204, 205, 216, 217, 220, 221, 222, 223, 226, 233, 234, 236, 237, 238, 240, 241, 242, 245, 246, 247, 249, 252, 253], "remain": [0, 11, 19, 27, 65, 75, 125, 141, 188, 201, 228, 248, 251, 258], "same": [0, 4, 11, 18, 24, 27, 32, 38, 41, 45, 49, 50, 51, 53, 58, 63, 87, 90, 91, 125, 130, 134, 135, 141, 144, 149, 153, 157, 172, 174, 182, 187, 188, 196, 204, 209, 210, 211, 212, 213, 215, 218, 237, 248, 254], "A": [0, 18, 27, 31, 35, 40, 49, 87, 90, 92, 134, 141, 149, 151, 152, 157, 191, 218, 227, 238, 244, 245, 247, 248, 249, 257, 258], "few": [0, 2, 125, 196], "differ": [0, 4, 11, 18, 27, 36, 47, 51, 53, 125, 141, 157, 188, 196, 209, 218, 227, 247, 257], "all": [0, 4, 9, 11, 18, 19, 27, 32, 34, 35, 38, 43, 49, 52, 53, 58, 61, 63, 68, 72, 80, 87, 89, 90, 91, 95, 97, 104, 111, 123, 125, 130, 134, 135, 139, 141, 143, 144, 147, 153, 157, 170, 172, 181, 185, 188, 193, 194, 195, 196, 202, 204, 209, 210, 211, 212, 213, 218, 227, 229, 235, 237, 244, 248, 250, 254, 256, 257], "resid": [0, 125, 218], "modul": [0, 3, 4, 204], "remov": [0, 18, 68, 153, 157, 214], "class": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256], "prefix": 0, "sk": [0, 141], "e": [0, 14, 27, 28, 29, 31, 35, 40, 48, 53, 87, 90, 111, 121, 125, 130, 134, 141, 151, 153, 183, 187, 204, 215, 218, 225, 228, 235, 245, 247, 256, 257], "g": [0, 4, 11, 27, 29, 31, 35, 48, 53, 87, 90, 111, 121, 125, 134, 137, 141, 151, 153, 183, 204, 218, 225, 227, 228, 235, 245, 247, 252, 256, 257], "skcanva": [0, 7, 18, 52, 53, 134, 149, 181, 182], "canva": [0, 1, 4, 7, 11, 52, 53, 125, 130, 134, 138, 149, 152, 153, 157, 167, 170, 181, 182, 185, 196, 201, 202, 218, 239, 255, 257, 258], "some": [0, 11, 18, 27, 45, 53, 63, 87, 90, 125, 130, 157, 181, 185, 201, 204, 218, 228, 237, 256, 257], "method": [0, 256], "signatur": [0, 153, 237], "adapt": 0, "style": [0, 18, 63, 72, 139, 153, 164, 215, 237, 256, 257, 258], "surfac": [0, 11, 18, 41, 87, 90, 104, 107, 125, 134, 135, 157, 185, 225, 232, 254, 256], "__init__": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253], "accept": [0, 125, 130, 134], "addit": [0, 11, 30, 63, 125, 153, 157, 170, 185, 218, 246], "arg": [0, 2, 8, 9, 10, 11, 15, 18, 19, 24, 27, 35, 38, 40, 41, 43, 45, 48, 49, 51, 52, 53, 55, 59, 61, 63, 68, 73, 74, 76, 80, 82, 83, 85, 87, 89, 90, 94, 96, 97, 100, 101, 104, 112, 117, 119, 121, 122, 123, 124, 125, 130, 131, 134, 135, 136, 137, 139, 141, 144, 146, 148, 149, 151, 153, 157, 160, 161, 164, 166, 167, 170, 175, 180, 182, 184, 185, 186, 187, 188, 191, 193, 194, 195, 196, 198, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 225, 227, 228, 235, 237, 243, 244, 248], "paint": [0, 1, 7, 11, 18, 24, 38, 63, 125, 130, 157, 170, 181, 204, 215, 218, 229, 237, 254, 255, 256, 258], "implicitli": [0, 11, 135, 153], "convert": [0, 4, 11, 18, 31, 35, 38, 41, 43, 45, 50, 63, 122, 123, 125, 135, 151, 153, 185, 186, 187, 193, 218, 256], "dict": [0, 151, 153], "take": [0, 11, 32, 34, 63, 87, 90, 134, 141, 153, 157, 215, 218, 235, 237, 248], "void": 0, "ptr": [0, 50, 204], "us": [0, 2, 7, 11, 14, 18, 24, 27, 29, 30, 32, 34, 35, 37, 45, 46, 47, 50, 51, 52, 55, 63, 65, 72, 81, 87, 90, 91, 98, 104, 121, 125, 130, 134, 135, 137, 138, 139, 141, 148, 149, 151, 153, 157, 166, 167, 180, 181, 182, 183, 184, 185, 186, 193, 196, 198, 204, 218, 221, 229, 232, 237, 239, 247, 248, 251, 253, 254, 256, 257, 258], "buffer": [0, 11, 18, 27, 29, 38, 43, 50, 53, 55, 58, 59, 61, 87, 90, 125, 130, 135, 139, 141, 144, 146, 157, 170, 185, 188, 196, 201, 204, 209, 210, 211, 212, 213, 218, 229, 243, 248, 251], "protocol": [0, 11, 50, 185], "return": [0, 4, 7, 9, 11, 18, 27, 29, 30, 31, 32, 35, 38, 41, 43, 45, 50, 52, 53, 55, 58, 59, 61, 63, 68, 70, 72, 75, 80, 83, 87, 89, 90, 91, 95, 97, 104, 117, 121, 122, 123, 124, 125, 129, 130, 134, 135, 139, 141, 144, 145, 146, 147, 149, 153, 157, 160, 161, 167, 170, 172, 175, 179, 181, 182, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 208, 209, 210, 211, 212, 213, 215, 218, 228, 229, 232, 234, 235, 237, 243, 244, 248, 251, 257], "raw": [0, 125, 153], "memori": [0, 9, 11, 12, 18, 27, 34, 45, 55, 87, 90, 125, 135, 151, 157, 184, 185, 188, 196, 209, 218, 229, 237, 244, 248, 251, 254, 258], "address": [0, 11, 18, 55, 58, 59, 125, 135, 144, 146, 185, 209, 210, 211, 212, 213, 218, 243, 256], "wrap": [0, 11, 18, 87, 90, 111, 115, 125, 135, 157, 185, 218, 251], "memoryview": [0, 11, 18, 35, 50, 125, 157, 185, 193, 218, 229], "numpi": [0, 2, 18, 125, 141, 185, 218, 254, 256], "export": [0, 2, 18, 125, 218, 256], "ad": [0, 81, 123, 125, 134, 147, 157, 167, 169, 182, 186, 188, 193, 232, 258], "imag": [0, 11, 13, 18, 19, 27, 29, 30, 31, 32, 33, 57, 87, 90, 104, 107, 130, 134, 135, 145, 151, 153, 180, 185, 204, 218, 234, 244, 248, 254, 255, 256, 257], "support": [0, 2, 11, 18, 27, 30, 31, 41, 50, 52, 58, 63, 75, 81, 87, 90, 104, 111, 125, 134, 135, 144, 151, 157, 185, 196, 209, 210, 211, 212, 213, 218, 237, 246, 248, 250, 256, 257], "bitmap": [0, 4, 18, 19, 20, 63, 71, 125, 129, 130, 134, 135, 184, 185, 204, 218, 256], "pixmap": [0, 11, 18, 27, 87, 90, 125, 135, 218, 244, 245, 248, 250, 251, 256], "happen": [0, 1, 87, 90, 130, 134, 218, 237], "github": [0, 1, 2], "feel": 0, "free": [0, 11, 87, 90, 175, 181, 251], "post": [0, 130], "issu": [0, 91, 218], "make": [0, 4, 18, 20, 27, 30, 45, 48, 49, 51, 58, 87, 90, 121, 122, 123, 124, 125, 135, 136, 137, 141, 144, 151, 153, 157, 164, 166, 186, 187, 191, 193, 196, 197, 198, 201, 204, 206, 208, 218, 227, 232, 235, 254, 257, 258], "pr": 0, "bind": [1, 2, 4, 87, 90], "graphic": [1, 18, 111, 115], "librari": [1, 2, 254], "an": [1, 4, 11, 14, 17, 18, 27, 29, 31, 32, 35, 41, 45, 48, 49, 50, 58, 63, 68, 70, 72, 83, 87, 90, 91, 92, 123, 125, 130, 134, 135, 137, 139, 141, 144, 149, 151, 153, 157, 160, 161, 167, 172, 174, 175, 180, 181, 182, 185, 186, 188, 193, 195, 196, 198, 201, 204, 209, 210, 211, 212, 213, 215, 218, 225, 229, 232, 237, 239, 248, 251, 254, 256, 257, 258], "open": [1, 18, 21, 50, 58, 125, 144, 157, 160, 209, 210, 211, 212, 213, 256, 258], "sourc": [1, 4, 11, 13, 18, 19, 27, 38, 41, 43, 45, 125, 130, 134, 135, 141, 153, 185, 204, 209, 218, 257], "2d": [1, 117, 141], "which": [1, 4, 11, 18, 27, 30, 31, 32, 38, 40, 41, 51, 53, 70, 87, 90, 111, 125, 130, 134, 135, 141, 151, 153, 157, 175, 180, 181, 182, 185, 209, 218, 237, 238, 254, 257, 258], "provid": [1, 11, 18, 27, 41, 50, 87, 90, 91, 119, 121, 125, 134, 141, 151, 160, 180, 185, 186, 188, 196, 200, 201, 218, 229], "common": [1, 18, 32, 123, 157, 167, 193, 196, 228, 258], "work": [1, 18, 51, 87, 90, 91, 125, 157, 218], "across": [1, 18, 53, 125, 185, 218, 235], "varieti": 1, "hardwar": [1, 125], "softwar": 1, "platform": [1, 2, 11, 18, 63, 125, 218, 237], "develop": 1, "instal": [1, 130, 254], "pypi": 1, "distribut": [1, 117, 153], "build": [1, 11, 52, 125, 135, 153, 181, 188, 232], "instruct": [1, 33, 63], "test": [1, 45, 51, 81, 123, 125, 153, 157, 188, 193, 196], "tutori": 1, "overview": [1, 255], "creation": [1, 111, 218, 255], "path": [1, 2, 4, 18, 49, 50, 51, 58, 59, 63, 72, 125, 144, 147, 153, 164, 166, 167, 170, 174, 175, 177, 196, 209, 210, 211, 212, 213, 215, 235, 237, 255, 256], "notebook": [1, 256], "exampl": [1, 4, 7, 27, 32, 35, 49, 72, 122, 123, 135, 139, 141, 153, 157, 160, 170, 181, 186, 187, 193, 196, 218, 229, 230, 237, 254, 256, 257, 258], "design": [1, 65, 123, 193, 237], "contribut": [1, 141, 157], "refer": [1, 9, 11, 18, 38, 43, 50, 52, 53, 61, 72, 80, 87, 89, 90, 95, 97, 104, 125, 130, 135, 139, 141, 153, 157, 167, 170, 181, 182, 185, 188, 194, 195, 202, 204, 218, 237, 257], "index": [1, 11, 27, 29, 30, 63, 65, 68, 72, 80, 115, 125, 130, 135, 141, 157, 185, 189, 237], "search": [1, 9], "page": [1, 2, 52, 149, 254], "binari": [2, 125, 157, 188, 193, 196], "packag": [2, 254], "avail": [2, 4, 11, 18, 37, 125, 130, 218, 237, 257], "pip": [2, 254], "python": [2, 4, 50, 52, 125, 153, 255], "x86_64": 2, "aarch64": 2, "arm64": 2, "For": [2, 4, 14, 18, 27, 32, 33, 45, 49, 52, 63, 87, 90, 125, 130, 135, 141, 153, 157, 170, 185, 218, 235, 256, 257], "must": [2, 9, 11, 18, 27, 30, 34, 38, 43, 48, 50, 52, 53, 58, 61, 65, 72, 80, 83, 87, 89, 90, 95, 97, 104, 111, 117, 125, 130, 134, 135, 139, 141, 144, 157, 170, 180, 181, 182, 185, 194, 195, 201, 202, 204, 209, 210, 211, 212, 213, 218, 220, 229, 235, 237, 248, 251, 254], "opengl": [2, 18, 87, 90, 141, 255], "fontconfig": 2, "apt": 2, "get": [2, 18, 27, 30, 32, 51, 83, 87, 90, 91, 104, 141, 157, 172, 176, 209, 237, 248, 251], "libfontconfig1": 2, "libgl1": 2, "mesa": 2, "glx": 2, "dri": 2, "Or": [2, 11, 185], "yum": 2, "libgl": 2, "driver": [2, 87, 90, 91, 218], "unsupport": 2, "check": [2, 4, 11, 18, 45, 63, 87, 90, 104, 123, 135, 153, 157, 185, 188, 193, 218, 250, 256], "first": [2, 4, 18, 27, 30, 38, 43, 58, 63, 87, 90, 134, 141, 144, 147, 157, 167, 170, 177, 193, 209, 210, 211, 212, 213, 248, 257, 258], "clone": [2, 237], "repo": 2, "git": 2, "recurs": [2, 130], "http": [2, 117, 180], "com": 2, "kyamagu": 2, "cd": 2, "The": [2, 4, 11, 18, 19, 27, 28, 29, 30, 31, 32, 34, 43, 50, 52, 53, 55, 58, 59, 63, 65, 70, 75, 87, 89, 90, 91, 97, 104, 111, 117, 123, 125, 130, 134, 135, 139, 141, 144, 146, 147, 149, 151, 153, 157, 164, 167, 170, 175, 177, 180, 181, 182, 185, 186, 188, 193, 196, 201, 204, 209, 210, 211, 212, 213, 218, 219, 225, 229, 235, 237, 243, 244, 248, 251, 254, 256, 257], "repositori": 2, "bundl": 2, "its": [2, 4, 11, 18, 29, 53, 63, 72, 87, 90, 123, 125, 134, 137, 141, 147, 149, 157, 164, 181, 185, 188, 193, 195, 201, 204, 209, 218, 225, 227, 232, 234, 237, 251, 258], "tool": 2, "depot_tool": 2, "submodul": 2, "actual": [2, 11, 32, 50, 58, 65, 87, 90, 91, 125, 130, 137, 144, 209, 210, 211, 212, 213, 218, 238, 244, 248, 254, 256], "ci": 2, "procedur": 2, "implement": [2, 11, 18, 27, 31, 38, 43, 53, 55, 58, 59, 61, 87, 90, 125, 130, 134, 135, 139, 144, 146, 153, 157, 167, 170, 185, 188, 204, 209, 210, 211, 212, 213, 243, 257], "script": 2, "build_": 2, "o": [2, 125, 141, 204, 255, 256], "sh": 2, "compil": [2, 11, 157, 185, 186, 188, 193], "time": [2, 11, 18, 27, 32, 51, 53, 55, 63, 87, 90, 135, 141, 157, 160, 161, 181, 185, 186, 198, 218], "requir": [2, 4, 11, 18, 27, 30, 31, 38, 41, 45, 63, 87, 90, 91, 125, 130, 135, 141, 153, 185, 186, 218, 229, 258], "run": [2, 196, 229, 230, 232, 237, 256], "type": [2, 4, 11, 18, 19, 27, 32, 37, 38, 43, 45, 50, 53, 61, 63, 87, 90, 104, 125, 130, 135, 139, 141, 157, 160, 161, 170, 180, 185, 188, 204, 218, 228, 237, 248, 249, 250, 257], "inform": [2, 18, 29, 87, 90, 151, 157], "rtti": 2, "enabl": [2, 87, 90], "frtti": 2, "flag": [2, 11, 63, 87, 90, 117, 125, 157, 167, 175, 180, 201, 218, 225], "clang": 2, "gcc": 2, "gr": 2, "cl": [2, 141], "ex": 2, "visual": [2, 141], "md": 2, "set": [2, 4, 11, 18, 24, 27, 30, 41, 45, 49, 51, 53, 58, 63, 65, 70, 71, 72, 75, 83, 87, 90, 92, 111, 122, 123, 124, 125, 135, 137, 141, 144, 148, 151, 153, 156, 157, 160, 161, 180, 185, 186, 187, 188, 191, 193, 196, 197, 198, 200, 208, 209, 210, 211, 212, 213, 214, 218, 228, 232, 237, 239, 244, 248, 257], "gn": 2, "should": [2, 11, 17, 18, 27, 28, 29, 32, 33, 48, 50, 52, 53, 63, 87, 90, 91, 104, 115, 125, 130, 134, 151, 152, 157, 171, 180, 185, 204, 209, 215, 218, 244, 248, 254, 256], "includ": [2, 4, 11, 18, 27, 123, 125, 134, 135, 141, 151, 153, 157, 181, 185, 193, 218, 235, 238, 254], "skia_enable_tool": 2, "true": [2, 4, 7, 9, 11, 18, 27, 35, 38, 43, 45, 50, 52, 53, 55, 58, 59, 61, 63, 70, 72, 80, 83, 87, 89, 90, 95, 97, 104, 122, 123, 124, 125, 130, 134, 135, 139, 141, 144, 146, 147, 151, 153, 157, 160, 167, 170, 175, 180, 181, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 200, 202, 204, 208, 209, 210, 211, 212, 213, 215, 218, 229, 237, 243, 244, 248, 256, 257, 258], "h": [2, 4, 123, 141, 193], "header": 2, "detail": [2, 87, 90, 125, 218, 255], "offici": 2, "prerequisit": 2, "2": [2, 4, 5, 11, 13, 14, 16, 18, 19, 20, 21, 22, 23, 27, 28, 31, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 49, 53, 54, 56, 57, 61, 62, 63, 64, 69, 70, 71, 76, 77, 79, 81, 86, 92, 93, 109, 113, 114, 119, 120, 125, 128, 130, 133, 135, 139, 140, 141, 142, 143, 153, 154, 155, 156, 157, 162, 163, 164, 165, 170, 173, 174, 175, 176, 177, 178, 179, 180, 183, 185, 186, 188, 189, 190, 196, 199, 201, 204, 205, 215, 217, 218, 220, 233, 234, 235, 237, 238, 239, 240, 244, 245, 247, 248, 249, 253, 257], "7": [2, 13, 14, 27, 31, 37, 45, 46, 56, 57, 76, 79, 86, 93, 141, 244, 245, 257], "onli": [2, 4, 9, 11, 18, 25, 27, 30, 38, 43, 47, 49, 50, 52, 53, 61, 63, 72, 80, 87, 89, 90, 95, 97, 104, 125, 129, 130, 134, 139, 141, 153, 157, 170, 181, 185, 188, 194, 195, 202, 204, 218, 229, 234, 237, 246, 247, 254, 257], "glibc": 2, "17": [2, 13, 46, 86, 93], "10": [2, 7, 13, 14, 46, 49, 56, 93, 157, 180, 244, 245, 249, 252, 256, 257], "93": 2, "depend": [2, 11, 13, 18, 87, 90, 125, 157, 160, 161, 167, 218, 229, 244], "y": [2, 11, 18, 19, 27, 32, 53, 63, 70, 122, 123, 125, 134, 135, 138, 141, 142, 157, 167, 180, 181, 185, 186, 187, 188, 193, 196, 197, 198, 200, 218, 229, 232, 244, 245, 247, 249, 252, 257], "dev": [2, 51, 117], "devel": 2, "up": [2, 11, 27, 49, 91, 111, 157, 167, 185, 188, 193, 197, 198, 218, 257], "At": 2, "thi": [2, 4, 7, 9, 11, 12, 18, 24, 27, 28, 29, 30, 31, 32, 33, 34, 38, 43, 45, 49, 50, 51, 52, 53, 55, 58, 61, 63, 72, 75, 80, 83, 87, 89, 90, 91, 95, 97, 104, 111, 117, 121, 123, 125, 130, 134, 135, 137, 139, 141, 144, 145, 149, 151, 153, 157, 167, 170, 175, 180, 181, 182, 183, 184, 185, 186, 188, 193, 194, 195, 196, 202, 204, 209, 210, 211, 212, 213, 214, 215, 218, 229, 232, 235, 237, 238, 244, 248, 251, 254, 256, 257], "point": [2, 4, 11, 18, 21, 35, 45, 49, 58, 60, 63, 87, 90, 117, 122, 134, 141, 144, 149, 153, 157, 160, 161, 164, 167, 175, 179, 185, 187, 188, 191, 193, 196, 197, 198, 209, 210, 211, 212, 213, 229, 232, 237, 239, 248, 249, 256, 258], "execut": [2, 11, 18, 87, 90, 254], "note": [2, 9, 27, 29, 38, 43, 49, 51, 52, 53, 61, 63, 72, 80, 87, 89, 90, 91, 95, 97, 104, 125, 130, 134, 137, 139, 141, 170, 181, 186, 194, 195, 202, 204, 209, 215, 218, 235, 237, 247, 256], "rel": [2, 58, 63, 117, 141, 144, 157, 196, 209, 210, 211, 212, 213, 218, 232, 237, 246, 256, 257], "new": [2, 9, 18, 24, 35, 38, 41, 43, 45, 50, 52, 53, 61, 72, 80, 87, 89, 90, 91, 92, 95, 97, 104, 125, 130, 135, 139, 145, 153, 157, 167, 170, 181, 182, 186, 187, 194, 195, 198, 201, 202, 204, 215, 218, 229, 232, 237, 258], "pwd": 2, "python2": 2, "sync": [2, 87, 90, 218], "dep": 2, "bin": 2, "gen": 2, "out": [2, 4, 7, 11, 18, 27, 35, 52, 87, 90, 141, 153, 157, 185, 195, 201, 257], "releas": [2, 11, 87, 90, 111, 125, 135, 157, 185, 195], "is_official_build": 2, "skia_use_system_libjpeg_turbo": 2, "fals": [2, 4, 11, 18, 27, 45, 50, 58, 63, 70, 82, 83, 87, 90, 123, 125, 134, 141, 144, 153, 157, 167, 170, 175, 181, 185, 186, 187, 188, 193, 196, 198, 209, 210, 211, 212, 213, 215, 218, 237, 244, 248, 254], "skia_use_system_libwebp": 2, "skia_use_system_libpng": 2, "skia_use_system_icu": 2, "skia_use_system_harfbuzz": 2, "extra_cflags_cc": 2, "extra_ldflag": 2, "lrt": 2, "ninja": 2, "Then": 2, "desir": [2, 27, 65, 87, 90, 123, 185, 218], "version": [2, 18, 27, 40, 55, 125, 153, 218], "skia_path": 2, "skia_out_path": 2, "m": [2, 134, 141], "wheel": 2, "setup": 2, "py": [2, 11, 18, 141, 157, 160, 185], "bdist_wheel": 2, "xcode": 2, "command": [2, 18, 87, 90, 91, 125, 149, 181, 182, 201, 218, 254, 256], "line": [2, 4, 18, 21, 27, 63, 70, 141, 157, 158, 167, 171, 186, 196, 200, 229, 256, 258], "14": [2, 13, 46, 86, 93], "can": [2, 4, 11, 18, 27, 29, 30, 32, 36, 38, 41, 43, 45, 47, 48, 50, 51, 52, 53, 58, 72, 75, 87, 90, 91, 92, 104, 107, 115, 121, 125, 130, 134, 135, 141, 144, 149, 151, 153, 170, 172, 177, 180, 181, 184, 185, 186, 188, 209, 210, 211, 212, 213, 218, 225, 237, 238, 239, 248, 251, 254, 256, 257, 258], "gener": [2, 11, 18, 27, 31, 53, 91, 117, 125, 141, 153, 157, 160, 172, 181, 182, 185, 188, 193, 201, 257], "step": [2, 11], "abov": [2, 18, 70, 228, 248, 256], "env": 2, "skia_use_system_expat": 2, "skia_use_system_zlib": 2, "ehsc": 2, "target_cpu": 2, "pytest": 2, "glfw": [2, 254], "altern": [2, 92, 234, 254, 256], "tox": 2, "under": [2, 134], "variou": [2, 31, 48, 153, 172, 256, 257], "onc": [2, 11, 18, 32, 87, 90, 153, 172, 204, 237, 258], "sphinx": 2, "rtd": 2, "theme": 2, "build_sphinx": 2, "alphatypeisopaqu": 4, "alphatyp": [4, 11, 18, 41, 87, 90, 125, 135, 185, 218, 256], "bool": [4, 7, 9, 11, 18, 27, 35, 38, 41, 43, 45, 50, 52, 53, 55, 58, 59, 61, 63, 70, 72, 75, 80, 82, 83, 84, 85, 87, 89, 90, 91, 95, 97, 104, 119, 122, 123, 124, 125, 130, 134, 135, 139, 141, 144, 146, 153, 157, 160, 167, 170, 175, 181, 185, 186, 187, 188, 191, 193, 194, 195, 196, 197, 198, 200, 202, 204, 208, 209, 210, 211, 212, 213, 214, 215, 218, 224, 225, 229, 230, 237, 239, 243, 244, 248, 250, 251], "equal": [4, 11, 18, 27, 30, 45, 50, 63, 75, 122, 123, 124, 125, 135, 141, 157, 167, 172, 181, 185, 186, 188, 190, 193, 196, 208, 214, 215, 237], "kopaque_alphatyp": [4, 5, 11, 125, 135, 185], "hint": [4, 11, 18, 24, 63, 125, 135, 167, 181, 218, 237], "colortyp": [4, 11, 18, 41, 82, 87, 90, 100, 101, 104, 125, 135, 185, 218, 224, 248], "opaqu": [4, 5, 11, 18, 29, 35, 63, 64, 125, 135, 151, 153, 185, 204], "alpha": [4, 5, 11, 14, 18, 27, 29, 35, 41, 43, 46, 47, 125, 134, 135, 137, 148, 153, 185, 204, 218, 228, 244, 245, 247, 249, 257], "valu": [4, 5, 6, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 44, 46, 47, 51, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 67, 69, 70, 71, 75, 77, 78, 79, 81, 86, 87, 90, 92, 93, 98, 102, 103, 105, 106, 107, 108, 109, 113, 114, 117, 118, 120, 122, 123, 125, 126, 127, 128, 129, 132, 133, 134, 135, 140, 141, 142, 143, 146, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 162, 163, 165, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 181, 183, 185, 186, 187, 188, 189, 190, 193, 196, 199, 204, 205, 214, 215, 216, 217, 218, 220, 221, 222, 223, 226, 228, 229, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 257, 258], "1": [4, 5, 6, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 41, 43, 45, 46, 47, 50, 52, 53, 56, 57, 60, 61, 63, 64, 69, 70, 71, 72, 76, 77, 79, 80, 81, 86, 87, 89, 90, 92, 93, 95, 97, 98, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 132, 134, 135, 139, 141, 142, 143, 148, 149, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 188, 189, 190, 191, 194, 195, 196, 199, 201, 202, 204, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 247, 248, 249, 252, 253, 257], "0": [4, 5, 6, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 38, 39, 41, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 69, 72, 76, 77, 78, 81, 86, 87, 90, 93, 94, 96, 98, 102, 103, 104, 105, 106, 107, 108, 109, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 137, 139, 140, 141, 142, 143, 144, 146, 148, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 193, 196, 199, 201, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 257, 258], "equival": [4, 11, 18, 55, 87, 90, 122, 141, 153, 154, 155, 157, 185, 186, 215, 218, 229], "If": [4, 9, 11, 18, 19, 24, 27, 30, 31, 32, 33, 38, 41, 43, 45, 50, 51, 52, 53, 58, 61, 63, 70, 72, 80, 83, 87, 89, 90, 91, 95, 97, 104, 115, 117, 123, 125, 130, 134, 135, 139, 141, 144, 145, 151, 153, 157, 160, 161, 167, 170, 172, 175, 180, 181, 182, 183, 185, 186, 187, 188, 193, 194, 195, 196, 202, 204, 209, 210, 211, 212, 213, 215, 218, 227, 229, 232, 235, 237, 244, 247, 248, 256, 258], "result": [4, 9, 11, 13, 18, 27, 38, 43, 49, 51, 53, 63, 72, 87, 90, 121, 123, 125, 130, 134, 135, 141, 147, 149, 153, 157, 160, 161, 170, 175, 180, 181, 182, 185, 188, 193, 195, 196, 197, 198, 215, 218, 219, 227, 229, 237, 256], "draw": [4, 11, 18, 19, 20, 21, 28, 38, 41, 52, 53, 63, 64, 81, 87, 90, 125, 130, 134, 135, 139, 149, 151, 152, 153, 157, 167, 170, 174, 181, 182, 185, 196, 201, 218, 225, 229, 232, 234, 254, 255, 257, 258], "ani": [4, 11, 18, 19, 27, 29, 30, 45, 58, 65, 70, 72, 87, 90, 111, 125, 134, 135, 141, 144, 149, 157, 170, 181, 182, 185, 193, 204, 209, 210, 211, 212, 213, 215, 218, 237, 256, 257], "pixel": [4, 5, 11, 12, 13, 18, 27, 31, 41, 46, 49, 63, 64, 107, 125, 130, 134, 135, 148, 151, 153, 183, 184, 185, 196, 218, 248, 251, 256], "less": [4, 11, 18, 27, 63, 123, 125, 135, 141, 153, 157, 167, 181, 185, 188, 193, 196], "than": [4, 11, 18, 24, 27, 63, 123, 125, 130, 135, 141, 153, 157, 167, 174, 180, 181, 185, 186, 188, 193, 196, 204, 209, 218, 229, 237, 247], "undefin": [4, 11, 18, 27, 123, 125, 141, 160, 161, 182, 185], "aswind": 4, "fill": [4, 11, 18, 19, 27, 51, 87, 90, 125, 130, 141, 142, 153, 156, 157, 166, 170, 172, 180, 190, 215, 248, 256, 257, 258], "wind": [4, 157, 174], "area": [4, 11, 18, 28, 123, 124, 125, 135, 157, 180, 185, 186, 188, 193, 196, 258], "success": [4, 11, 27, 31, 55, 58, 59, 87, 90, 91, 141, 144, 146, 181, 185, 209, 210, 211, 212, 213, 218, 229, 243], "doe": [4, 11, 18, 27, 29, 30, 45, 51, 58, 63, 81, 87, 90, 123, 125, 134, 135, 137, 141, 144, 153, 157, 161, 167, 181, 182, 185, 188, 193, 196, 197, 198, 209, 210, 211, 212, 213, 215, 218, 229, 232, 237, 244, 248, 251, 254, 256, 258], "detect": [4, 134, 157], "contain": [4, 11, 18, 24, 27, 29, 30, 31, 33, 41, 49, 63, 66, 111, 123, 125, 134, 135, 141, 153, 157, 167, 175, 180, 181, 182, 184, 186, 188, 193, 196, 197, 214, 218, 229, 235, 237, 245, 258], "contour": [4, 18, 63, 157, 158, 160, 167, 169, 175, 179, 235, 258], "self": [4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253], "cross": [4, 174, 186, 187], "other": [4, 11, 13, 18, 27, 45, 50, 87, 90, 91, 123, 125, 138, 141, 157, 181, 182, 185, 186, 193, 196, 214, 215, 218, 229, 237, 247, 254, 256], "case": [4, 9, 27, 30, 38, 41, 43, 45, 50, 51, 52, 53, 61, 70, 72, 80, 87, 89, 90, 91, 95, 97, 104, 125, 130, 135, 139, 141, 157, 170, 175, 181, 193, 194, 195, 202, 204, 209, 218, 237, 256, 257], "mai": [4, 9, 11, 18, 24, 27, 34, 38, 41, 43, 52, 53, 55, 58, 61, 63, 65, 71, 72, 80, 81, 87, 89, 90, 95, 97, 104, 107, 117, 123, 125, 130, 135, 139, 141, 144, 149, 151, 153, 157, 160, 167, 170, 181, 182, 185, 186, 188, 193, 194, 195, 196, 200, 201, 202, 204, 209, 210, 211, 212, 213, 215, 218, 229, 232, 237, 239, 253, 256, 257, 258], "even": [4, 11, 18, 19, 30, 31, 41, 49, 87, 90, 91, 125, 135, 171, 188, 196, 235, 237, 254, 258], "though": [4, 11, 18, 135, 141, 196, 237, 254, 256], "oper": [4, 13, 18, 40, 47, 125, 141, 147, 177, 181, 182, 186, 196, 218, 227], "wa": [4, 11, 18, 31, 53, 87, 90, 125, 141, 151, 157, 160, 175, 181, 196, 198, 200, 215, 218, 229, 237, 256], "abl": [4, 18, 27, 63, 91, 218], "produc": [4, 45, 52, 130, 134, 141, 180, 193, 204, 215], "otherwis": [4, 11, 18, 27, 45, 58, 63, 83, 123, 125, 130, 141, 144, 149, 153, 157, 167, 172, 175, 181, 185, 186, 187, 188, 193, 196, 198, 209, 210, 211, 212, 213, 215, 218, 229], "throw": [4, 214], "runtim": 4, "error": [4, 29, 31, 45, 87, 90, 91, 125, 149, 153, 186, 195, 209, 237], "input": [4, 11, 27, 31, 40, 55, 59, 117, 123, 130, 134, 137, 141, 146, 153, 170, 185, 186, 188, 193, 218, 243, 244, 256], "paramet": [4, 7, 11, 18, 27, 31, 35, 41, 45, 49, 50, 51, 55, 58, 59, 63, 65, 70, 72, 74, 87, 90, 117, 122, 123, 125, 134, 135, 139, 141, 144, 146, 147, 149, 153, 157, 160, 161, 164, 167, 172, 180, 181, 182, 185, 186, 188, 193, 196, 197, 198, 200, 201, 209, 210, 211, 212, 213, 215, 218, 229, 232, 237, 239, 243, 248, 256], "typic": [4, 53, 70, 87, 90, 125, 130, 185, 218], "odd": [4, 18, 49, 174], "blendmode_ascoeff": 4, "mode": [4, 13, 14, 18, 27, 38, 40, 43, 47, 117, 125, 130, 134, 153, 157, 181, 207, 218, 235, 239, 254, 257], "blendmod": [4, 18, 38, 40, 43, 47, 134, 153, 207, 218, 256, 257], "src": [4, 11, 14, 18, 38, 40, 43, 50, 87, 90, 130, 134, 141, 145, 148, 153, 157, 170, 193, 196, 207, 214, 215, 218, 257], "blendmodecoeff": 4, "dst": [4, 11, 14, 18, 27, 30, 38, 40, 43, 45, 55, 125, 134, 141, 148, 153, 157, 170, 175, 185, 186, 188, 207, 215, 218, 257], "coeffici": [4, 14, 45, 134], "base": [4, 11, 14, 18, 27, 28, 29, 52, 53, 61, 87, 90, 104, 111, 125, 130, 134, 135, 139, 145, 157, 164, 170, 180, 185, 195, 218, 229, 237], "blend": [4, 13, 14, 18, 29, 30, 40, 134, 207, 256, 257], "klastcoeffmod": [4, 13, 14], "": [4, 9, 27, 28, 30, 32, 35, 38, 43, 52, 53, 58, 61, 63, 72, 80, 87, 89, 90, 91, 92, 95, 97, 104, 125, 130, 134, 139, 141, 144, 145, 149, 151, 167, 170, 175, 179, 181, 187, 194, 195, 202, 204, 209, 210, 211, 212, 213, 218, 234, 237, 248, 254, 257], "blendmode_nam": [4, 257], "str": [4, 18, 27, 38, 43, 50, 53, 55, 58, 59, 61, 63, 72, 87, 90, 130, 139, 144, 146, 150, 170, 188, 202, 204, 209, 210, 211, 212, 213, 214, 229, 232, 237, 243], "null": [4, 24, 27, 30, 31, 45, 50, 58, 72, 87, 90, 117, 130, 134, 144, 149, 172, 180, 181, 182, 209, 210, 211, 212, 213, 218, 227, 235, 237], "termin": [4, 254], "string": [4, 18, 151, 229], "color": [4, 11, 13, 14, 18, 19, 27, 28, 29, 35, 36, 37, 38, 41, 43, 45, 87, 90, 104, 117, 121, 125, 134, 135, 137, 148, 153, 185, 204, 207, 218, 227, 234, 239, 248, 250, 251, 254, 256, 258], "r": [4, 11, 35, 123, 134, 137, 141, 153, 157, 167, 188, 193, 196, 215, 227, 245, 252, 257], "int": [4, 5, 6, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 90, 92, 93, 94, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 162, 163, 165, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 183, 185, 186, 188, 189, 190, 193, 196, 199, 200, 201, 205, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253], "b": [4, 11, 35, 53, 61, 123, 134, 137, 141, 153, 157, 186, 187, 193, 204, 227, 245, 247, 252], "255": [4, 11, 18, 43, 153, 180, 185, 228, 256, 257], "8": [4, 11, 13, 14, 18, 22, 27, 31, 37, 46, 56, 57, 63, 70, 71, 76, 79, 86, 92, 93, 113, 125, 141, 143, 153, 157, 162, 178, 185, 229, 244, 245, 249, 254, 257, 258], "bit": [4, 11, 18, 41, 45, 46, 87, 90, 122, 123, 125, 135, 141, 143, 153, 157, 185, 186, 187, 188, 193, 237, 249], "compon": [4, 5, 11, 13, 18, 35, 41, 43, 125, 134, 135, 141, 153, 185, 186, 227, 256, 258], "In": [4, 18, 27, 28, 30, 87, 90, 91, 125, 130, 141, 157, 180, 181, 196, 218, 254, 257], "repres": [4, 18, 27, 30, 37, 38, 43, 45, 63, 65, 125, 130, 135, 141, 153, 157, 172, 181, 186, 188, 193, 237, 248, 250, 257], "32": [4, 18, 46, 86, 92, 113, 122, 123, 135, 153, 157, 185, 186, 187, 188, 193, 256, 257], "argb": [4, 18, 35, 153], "word": [4, 46, 185], "where": [4, 14, 18, 27, 87, 90, 125, 134, 141, 153, 157, 167, 250, 256, 257], "each": [4, 11, 13, 18, 21, 27, 43, 46, 48, 52, 63, 117, 121, 125, 134, 135, 141, 152, 157, 160, 164, 170, 180, 181, 183, 185, 186, 188, 218, 227, 228, 229, 232, 237, 244, 245, 248, 250, 254, 256, 257, 258], "ha": [4, 11, 18, 27, 29, 34, 50, 52, 53, 63, 70, 87, 90, 91, 98, 104, 123, 125, 135, 141, 153, 157, 160, 161, 172, 181, 185, 187, 188, 193, 196, 204, 218, 237, 248, 254, 256], "specifi": [4, 11, 14, 18, 27, 28, 30, 48, 49, 50, 52, 53, 58, 63, 65, 70, 72, 87, 90, 117, 125, 135, 141, 144, 157, 164, 166, 170, 174, 175, 181, 185, 188, 197, 204, 209, 210, 211, 212, 213, 215, 218, 229, 232, 237, 239, 244, 245, 247, 248, 254, 256, 257], "liter": 4, "construct": [4, 11, 18, 38, 43, 45, 63, 122, 123, 141, 153, 157, 180, 181, 186, 188, 193, 196, 229, 232], "float": [4, 11, 18, 27, 35, 38, 40, 43, 45, 46, 48, 49, 51, 52, 53, 55, 58, 59, 63, 67, 70, 117, 119, 125, 134, 136, 139, 141, 144, 146, 150, 153, 157, 160, 161, 164, 167, 175, 180, 182, 185, 186, 187, 188, 191, 193, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 228, 229, 232, 235, 243, 249, 256], "represent": [4, 27, 141, 151, 152, 157, 188, 193], "via": [4, 9, 27, 38, 43, 52, 53, 61, 72, 80, 87, 89, 90, 91, 95, 97, 104, 125, 130, 139, 170, 181, 194, 195, 202, 204, 218, 237, 254, 256], "color4f": [4, 11, 18, 38, 40, 43, 87, 90, 153, 185, 207], "0xffff0000": 4, "rgb": [4, 11, 18, 43, 45, 121, 125, 134, 153, 245], "rgba": [4, 35, 40, 134, 153, 245, 256], "colorsetrgb": 4, "colorsetargb": [4, 257], "assert": [4, 11, 35, 50, 72, 123, 135, 141, 153, 185, 188, 193, 254, 257], "sk_debug": [4, 11, 35, 123, 141, 185, 193], "defin": [4, 11, 18, 35, 123, 125, 134, 141, 157, 166, 185, 188, 193, 201, 218, 229, 232, 257], "exce": [4, 11, 18, 87, 90, 125, 135, 185, 188, 218], "sinc": [4, 11, 18, 27, 30, 32, 123, 125, 141, 193, 254, 258], "unpremultipli": [4, 11, 18, 35, 153, 185, 227], "smaller": [4, 18, 123, 130, 135, 157, 159, 167, 168, 193, 229], "largest": [4, 154, 155, 190], "amount": [4, 11, 18, 153, 157], "red": [4, 11, 35, 41, 46, 135, 137, 153], "full": [4, 11, 18, 27, 30, 32, 125, 134, 153, 218, 244, 252], "green": [4, 11, 35, 41, 46, 135, 137, 153], "blue": [4, 11, 35, 41, 46, 135, 137, 153], "fulli": [4, 11, 13, 18, 125, 153, 248], "transpar": [4, 11, 13, 18, 20, 24, 28, 41, 63, 64, 125, 135, 153, 185, 204, 218, 234], "colorgeta": [4, 153], "byte": [4, 11, 18, 27, 41, 46, 47, 50, 55, 58, 59, 87, 90, 125, 135, 144, 146, 157, 181, 185, 188, 196, 209, 210, 211, 212, 213, 218, 229, 237, 243, 244, 248], "colorgetb": [4, 153], "zero": [4, 11, 12, 13, 18, 27, 30, 34, 41, 63, 70, 71, 122, 123, 125, 135, 137, 141, 149, 153, 157, 160, 161, 167, 174, 175, 181, 185, 186, 188, 190, 193, 195, 196, 218, 229, 237, 248, 254, 256, 258], "colorgetg": [4, 153], "colorgetr": [4, 153], "colorseta": 4, "ignor": [4, 11, 18, 30, 31, 41, 43, 50, 52, 63, 65, 70, 87, 90, 125, 135, 157, 160, 170, 172, 185, 218, 229, 248], "replac": [4, 11, 13, 18, 130, 153, 157, 196, 218], "pack": [4, 125, 153, 249], "eight": [4, 188], "per": [4, 11, 18, 27, 41, 125, 134, 135, 151, 157, 185, 218, 237, 244, 248], "colortohsv": 4, "list": [4, 18, 27, 38, 40, 43, 49, 63, 68, 72, 87, 90, 117, 134, 141, 148, 150, 157, 160, 161, 167, 188, 193, 196, 204, 227, 228, 229, 232, 237, 239, 244, 248, 251, 254, 257, 258], "hsv": 4, "hue": [4, 13], "assign": [4, 186, 196, 257], "360": [4, 18, 117, 149, 157, 167], "satur": [4, 13], "one": [4, 11, 18, 20, 28, 29, 30, 32, 33, 36, 41, 43, 45, 53, 63, 87, 90, 104, 111, 125, 130, 134, 135, 141, 147, 153, 157, 167, 175, 181, 182, 185, 186, 188, 196, 218, 229, 235, 237, 254, 256, 258], "three": [4, 157, 186, 187, 188, 257, 258], "element": [4, 18, 35, 134, 141, 149, 153, 157, 160, 161, 196, 197, 198, 201], "arrai": [4, 11, 18, 19, 21, 35, 49, 50, 63, 91, 117, 125, 134, 135, 141, 157, 160, 161, 185, 186, 188, 193, 196, 197, 198, 218, 229, 232, 237, 239, 248, 251, 254, 256], "hold": [4, 11, 18, 19, 27, 35, 50, 52, 87, 90, 122, 123, 125, 135, 141, 185, 186, 187, 193, 256, 257], "colortypebytesperpixel": 4, "ct": [4, 41, 135, 257], "number": [4, 11, 18, 19, 27, 28, 29, 41, 49, 50, 55, 58, 59, 63, 87, 90, 125, 130, 135, 144, 146, 157, 171, 174, 180, 181, 185, 188, 193, 196, 209, 210, 211, 212, 213, 218, 229, 237, 243, 244, 248, 251, 256, 257], "store": [4, 11, 18, 27, 50, 52, 91, 107, 123, 125, 141, 157, 160, 161, 185, 188, 193, 196, 215, 218, 244, 248, 251, 256], "unus": [4, 11, 185], "pad": [4, 135], "kunknown_colortyp": [4, 11, 18, 41, 46, 125, 135, 185, 218], "invalid": [4, 11, 18, 31, 53, 63, 83, 87, 90, 92, 117, 123, 125, 141, 182, 188, 193, 218, 244, 248, 251], "colortypeisalwaysopaqu": 4, "alwai": [4, 18, 19, 27, 35, 50, 53, 63, 87, 90, 125, 130, 153, 157, 167, 185, 196, 209, 218, 234, 237, 258], "decod": [4, 27, 29, 30, 31, 32, 33, 125, 229], "reserv": [4, 11, 70, 167], "encod": [4, 18, 27, 41, 56, 57, 63, 87, 90, 125, 134, 135, 137, 151, 153, 185, 196, 218, 229, 232, 237, 256], "colortypevalidatealphatyp": 4, "canon": 4, "none": [4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257], "valid": [4, 5, 11, 13, 18, 27, 31, 41, 53, 63, 65, 70, 71, 83, 87, 90, 104, 121, 123, 125, 135, 153, 157, 181, 185, 188, 193, 201, 218, 229, 237, 247, 248, 251, 252], "more": [4, 11, 18, 27, 31, 55, 58, 87, 90, 125, 130, 134, 141, 144, 147, 151, 157, 167, 181, 185, 188, 196, 209, 210, 211, 212, 213, 218, 255, 257, 258], "nullptr": [4, 11, 18, 24, 41, 45, 58, 63, 72, 121, 125, 135, 141, 144, 145, 153, 157, 181, 185, 198, 200, 204, 209, 210, 211, 212, 213, 218, 229, 232, 237, 248], "kunknown_alphatyp": [4, 5, 11, 41, 125, 135, 185], "output": [4, 11, 27, 32, 33, 38, 43, 52, 63, 125, 134, 141, 151, 157, 170, 188, 193, 201, 218, 254, 256], "storag": [4, 11, 18, 63, 70, 125, 135, 141, 157, 160, 161, 167, 181, 185, 218, 229, 251], "associ": [4, 11, 18, 63, 87, 90, 104, 125, 135, 149, 151, 152, 157, 160, 161, 175, 185, 204, 229, 237], "computeisopaqu": [4, 185], "bm": [4, 141], "determin": [4, 11, 18, 27, 32, 125, 130, 134, 141, 157, 185, 218, 229, 232, 244, 248, 258], "how": [4, 18, 27, 28, 29, 33, 41, 58, 63, 91, 125, 134, 135, 137, 141, 144, 153, 164, 183, 185, 209, 210, 211, 212, 213, 237, 238, 244, 245, 246, 249, 254, 256, 257], "whether": [4, 17, 18, 27, 29, 34, 50, 63, 64, 75, 87, 90, 98, 104, 125, 141, 153, 157, 185, 218, 250, 258], "describ": [4, 11, 14, 18, 27, 36, 41, 45, 47, 56, 63, 123, 125, 135, 141, 153, 157, 160, 161, 167, 180, 181, 185, 188, 193, 196, 218, 225, 229, 246, 251, 252, 256, 258], "without": [4, 11, 18, 27, 50, 125, 141, 151, 153, 175, 180, 185, 218, 248, 258], "have": [4, 7, 9, 11, 18, 27, 38, 43, 45, 48, 50, 52, 53, 58, 61, 71, 72, 80, 87, 89, 90, 91, 95, 97, 104, 123, 125, 130, 134, 139, 141, 144, 157, 160, 170, 180, 181, 182, 185, 188, 193, 194, 195, 196, 202, 204, 209, 210, 211, 212, 213, 215, 218, 237, 244, 247, 248, 251, 254, 256, 257], "greater": [4, 11, 18, 63, 123, 125, 135, 141, 153, 157, 167, 172, 181, 185, 188, 193, 196, 218], "krgb_565_colortyp": [4, 11, 46, 185], "kgray_8_colortyp": [4, 11, 46, 125, 185], "kalpha_8_colortyp": [4, 11, 18, 46, 125, 135, 185], "kbgra_8888_colortyp": [4, 11, 46, 135, 185], "krgba_8888_colortyp": [4, 11, 18, 46, 125, 135, 185, 218, 254, 256], "kargb_4444_colortyp": [4, 11, 46, 185], "15": [4, 13, 18, 22, 37, 46, 86, 93, 185], "krgba_f16_colortyp": [4, 11, 46, 185], "encodedorigintomatrix": 4, "origin": [4, 11, 18, 19, 27, 30, 51, 63, 70, 123, 125, 130, 134, 135, 141, 151, 153, 157, 170, 185, 186, 188, 193, 204, 218, 234, 235, 244, 258], "encodedorigin": [4, 27, 244], "w": [4, 123, 141, 157, 167, 193, 204], "matrix": [4, 6, 7, 11, 18, 38, 40, 43, 45, 53, 63, 117, 125, 130, 134, 136, 138, 153, 157, 166, 170, 175, 181, 188, 191, 204, 218, 256], "given": [4, 11, 18, 27, 32, 35, 45, 68, 72, 87, 90, 104, 111, 117, 125, 130, 134, 135, 141, 153, 157, 170, 175, 180, 209, 218, 225, 227, 237, 244, 245], "width": [4, 11, 18, 30, 52, 63, 70, 75, 76, 83, 85, 87, 90, 123, 124, 125, 135, 136, 153, 157, 170, 182, 185, 188, 190, 191, 193, 196, 208, 215, 218, 224, 244, 248, 254], "height": [4, 11, 18, 30, 52, 63, 70, 83, 85, 87, 90, 123, 124, 125, 134, 135, 157, 182, 185, 188, 190, 191, 193, 196, 208, 218, 224, 244, 254], "data": [4, 11, 18, 27, 31, 38, 43, 45, 53, 55, 56, 57, 58, 61, 72, 87, 90, 125, 130, 139, 144, 157, 160, 161, 170, 181, 185, 188, 196, 197, 198, 204, 209, 210, 211, 212, 213, 218, 219, 229, 237, 238, 239, 244, 248, 249, 250, 251, 254, 257], "transform": [4, 18, 27, 45, 63, 119, 121, 125, 130, 134, 139, 141, 153, 157, 164, 170, 183, 188, 218, 244, 256], "rectangl": [4, 11, 18, 20, 28, 123, 125, 134, 135, 141, 153, 157, 181, 182, 185, 188, 193, 196, 197, 198, 218, 237, 256], "upper": [4, 70, 123, 157, 193, 229], "left": [4, 11, 18, 27, 30, 41, 70, 107, 123, 125, 135, 141, 142, 149, 157, 185, 186, 188, 189, 193, 196, 200, 218, 227], "corner": [4, 18, 48, 141, 153, 157, 188, 193, 218], "correctli": [4, 87, 90, 218], "orient": [4, 18, 27, 57, 218, 244], "destin": [4, 11, 13, 18, 19, 27, 45, 58, 125, 130, 135, 141, 142, 144, 153, 158, 185, 209, 210, 211, 212, 213, 218, 256, 257], "hsvtocolor": 4, "pass": [4, 11, 18, 27, 30, 34, 38, 51, 63, 72, 83, 87, 90, 91, 111, 115, 125, 134, 141, 151, 152, 153, 172, 181, 182, 193, 196, 197, 218, 229, 248, 251], "through": [4, 27, 63, 130, 157, 160, 161, 167, 196], "unchang": [4, 11, 18, 58, 123, 125, 135, 141, 144, 153, 157, 167, 175, 185, 188, 193, 209, 210, 211, 212, 213, 215, 218, 227], "angl": [4, 18, 134, 141, 157, 167, 186], "vari": [4, 125, 141], "rang": [4, 11, 18, 35, 41, 50, 121, 125, 135, 141, 153, 157, 180, 185, 218, 252, 257], "pin": [4, 43, 175, 188, 218, 235], "makenullcanva": 4, "op": [4, 18, 27, 47, 87, 90, 125, 147, 177, 196], "two": [4, 11, 18, 47, 50, 53, 117, 122, 125, 130, 134, 141, 157, 177, 186, 196, 215, 229, 232, 237, 256, 258], "pathop": [4, 147], "appli": [4, 6, 18, 24, 38, 43, 45, 47, 63, 121, 125, 130, 134, 139, 141, 147, 153, 157, 170, 186, 204, 215, 218, 227, 228, 235, 257], "operand": [4, 147, 196], "non": [4, 18, 27, 29, 30, 45, 87, 90, 104, 125, 141, 151, 157, 172, 174, 180, 181, 185, 190, 218, 229, 237, 248, 252], "overlap": [4, 18, 157, 188, 258], "curv": [4, 157, 167, 188, 256, 258], "order": [4, 18, 27, 32, 35, 87, 90, 121, 130, 134, 141, 149, 157, 180, 193, 218, 235, 237, 245], "reduc": [4, 87, 90, 125, 153, 157, 185, 188, 196, 258], "possibl": [4, 11, 27, 32, 53, 72, 81, 87, 90, 125, 141, 153, 157, 167, 185, 186, 209, 218, 237, 253, 254], "so": [4, 11, 18, 27, 29, 34, 49, 63, 72, 87, 90, 91, 104, 123, 125, 130, 135, 137, 141, 147, 153, 157, 167, 175, 180, 182, 185, 186, 188, 193, 196, 201, 218, 229, 234, 235, 237, 251, 257, 258], "cubic": [4, 18, 157], "turn": [4, 48, 130, 257], "quadrat": [4, 157], "mayb": [4, 11], "minuend": 4, "second": [4, 43, 87, 90, 134, 147, 157, 167, 170, 257, 258], "subtrahend": 4, "product": [4, 13, 137, 147, 151, 186, 187], "pathfilltype_converttononinvers": 4, "ft": [4, 157], "pathfilltyp": [4, 157, 167], "pathfilltype_isevenodd": 4, "pathfilltype_isinvers": 4, "premultiplyargb": 4, "skpmcolor": 4, "premultipli": [4, 5, 13, 18, 227], "premultiplycolor": 4, "pmcolor": [4, 11, 218], "closest": [4, 27, 35, 58, 72, 144, 209, 210, 211, 212, 213, 237], "multipli": [4, 13, 43, 137, 141, 186], "arrang": [4, 11, 183, 218], "match": [4, 11, 18, 27, 31, 53, 57, 72, 87, 90, 111, 125, 130, 157, 185, 188, 196, 218, 237, 254], "format": [4, 11, 18, 27, 32, 33, 35, 37, 56, 63, 65, 82, 83, 87, 90, 94, 96, 104, 125, 151, 157, 218, 254], "kn32_colortyp": [4, 18, 46, 135], "rgbtohsv": 4, "simplifi": 4, "tightbound": 4, "rect": [4, 9, 11, 18, 24, 52, 53, 63, 123, 125, 130, 131, 134, 141, 153, 157, 167, 170, 181, 182, 185, 188, 196, 197, 198, 201, 218, 229, 232, 237, 239, 256, 257, 258], "tight": [4, 157], "bound": [4, 9, 11, 18, 19, 24, 25, 27, 30, 53, 63, 70, 87, 90, 123, 125, 130, 135, 141, 153, 157, 167, 181, 182, 185, 188, 193, 196, 197, 200, 201, 215, 218, 229, 232, 234, 237, 239, 257], "measur": [4, 63, 81, 157, 167, 175, 186, 187, 237, 257], "member": [5, 6, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 25, 26, 28, 31, 32, 33, 34, 36, 37, 39, 44, 46, 47, 54, 56, 57, 60, 62, 64, 69, 71, 77, 78, 79, 81, 86, 92, 93, 98, 102, 103, 105, 106, 107, 108, 109, 111, 113, 114, 118, 120, 123, 126, 127, 128, 129, 132, 133, 140, 141, 142, 143, 154, 155, 156, 158, 159, 162, 163, 165, 168, 169, 172, 173, 174, 176, 177, 178, 179, 183, 186, 189, 190, 193, 199, 205, 216, 217, 220, 221, 222, 223, 226, 233, 234, 236, 238, 240, 241, 242, 245, 246, 247, 249, 252, 253], "uniniti": [5, 29, 46, 50, 87, 90], "kpremul_alphatyp": [5, 11, 18, 125, 135], "kunpremul_alphatyp": [5, 11, 18, 125, 185, 218, 256], "independ": [5, 18, 29, 32, 153, 218, 249, 258], "klastenum_alphatyp": 5, "last": [5, 11, 13, 18, 68, 157, 160, 167, 185, 252, 258], "3": [5, 11, 13, 14, 16, 18, 27, 28, 31, 36, 37, 38, 39, 41, 43, 44, 46, 47, 53, 54, 56, 57, 61, 62, 69, 76, 79, 81, 86, 93, 109, 125, 128, 130, 133, 134, 135, 139, 140, 141, 142, 153, 157, 163, 170, 173, 174, 175, 176, 177, 179, 183, 185, 188, 189, 190, 196, 199, 204, 205, 215, 217, 218, 233, 234, 244, 245, 247, 248, 249, 252, 253, 257, 258], "kno": [6, 17, 87, 90, 98, 102, 104, 105, 106, 108, 125, 218, 254], "don": [6, 72, 91, 218], "t": [6, 35, 40, 72, 87, 90, 91, 122, 123, 124, 125, 141, 180, 186, 187, 193, 207, 208, 218, 235, 248, 251], "pre": 6, "clip": [6, 7, 18, 24, 53, 130, 141, 153, 157, 181, 196, 197, 218, 228, 256, 257], "geometri": [6, 18, 130, 153, 156, 157, 170, 215, 225, 257], "befor": [6, 9, 18, 27, 28, 29, 38, 43, 50, 52, 53, 61, 63, 72, 80, 87, 89, 90, 95, 97, 104, 111, 125, 130, 134, 139, 141, 147, 157, 160, 167, 170, 181, 183, 186, 194, 195, 201, 202, 204, 218, 237, 244, 257], "perspect": [6, 141, 143, 151, 157, 256], "kye": [6, 17, 87, 90, 98, 102, 105, 106, 108, 125, 141, 157, 218], "do": [6, 11, 18, 27, 45, 91, 123, 125, 137, 153, 157, 193, 196, 218, 254, 256, 257], "stack": [7, 9, 18, 38, 43, 52, 53, 61, 72, 80, 87, 89, 90, 95, 97, 104, 125, 130, 139, 170, 181, 194, 195, 202, 204, 218, 237, 256, 257], "helper": [7, 50, 153, 228, 232, 251], "call": [7, 9, 11, 18, 27, 30, 38, 43, 50, 52, 53, 55, 58, 59, 61, 72, 80, 83, 87, 89, 90, 91, 95, 97, 104, 121, 123, 125, 130, 139, 141, 144, 146, 149, 153, 157, 160, 161, 167, 170, 172, 175, 181, 182, 193, 194, 195, 196, 198, 201, 202, 204, 209, 210, 211, 212, 213, 218, 229, 237, 243, 254, 256, 257], "restoretocount": [7, 18], "when": [7, 11, 18, 24, 27, 38, 45, 47, 50, 52, 53, 55, 58, 63, 71, 87, 90, 91, 104, 115, 123, 125, 134, 135, 141, 144, 152, 153, 157, 160, 161, 177, 181, 182, 185, 188, 193, 195, 196, 209, 210, 211, 212, 213, 218, 229, 232, 237, 254, 257], "goe": [7, 134, 138, 185, 195, 201], "scope": [7, 18, 52, 185, 195, 201], "guarante": [7, 29, 50, 53, 58, 87, 90, 104, 144, 157, 201, 204, 209, 210, 211, 212, 213, 214, 218], "restor": [7, 18, 256, 257], "known": [7, 35, 58, 125, 144, 209, 210, 211, 212, 213, 237], "state": [7, 11, 18, 24, 53, 58, 83, 85, 87, 90, 92, 104, 125, 141, 144, 147, 153, 157, 182, 209, 210, 211, 212, 213, 218, 232, 256, 257], "drawcircl": [7, 18, 254, 256, 257], "50": [7, 157, 256, 258], "dosav": 7, "preserv": [7, 11, 13, 24, 123, 141, 157, 185, 186, 188, 193, 218, 222], "save": [7, 18, 55, 125, 181, 254, 256, 257], "count": [7, 9, 11, 17, 18, 27, 38, 43, 45, 49, 50, 52, 53, 61, 72, 80, 87, 89, 90, 95, 97, 104, 125, 130, 134, 135, 139, 141, 157, 170, 181, 185, 186, 193, 194, 195, 196, 202, 204, 218, 219, 229, 237, 239, 257], "option": [7, 11, 18, 24, 27, 34, 38, 41, 63, 87, 90, 91, 125, 134, 135, 141, 151, 153, 157, 160, 181, 185, 196, 215, 218, 229, 232, 237, 239, 244, 245, 248, 256, 258], "guard": 7, "util": [7, 18, 185, 228], "destructor": [7, 87, 90, 195], "immedi": [7, 18, 52, 87, 90, 91, 218], "subsequ": [7, 11, 18, 87, 90, 125, 141, 149, 153, 157, 160, 167, 182, 218], "effect": [7, 11, 12, 18, 38, 43, 48, 50, 63, 123, 125, 130, 134, 141, 153, 157, 170, 172, 193, 196, 209, 215, 218, 256, 258], "kwarg": [8, 9, 10, 11, 15, 18, 19, 24, 27, 35, 38, 40, 41, 43, 45, 48, 49, 51, 52, 53, 55, 59, 61, 63, 68, 73, 74, 76, 80, 82, 83, 85, 87, 89, 90, 94, 96, 97, 100, 101, 104, 112, 117, 119, 121, 122, 123, 124, 125, 130, 131, 134, 135, 136, 137, 139, 141, 144, 146, 148, 149, 151, 153, 157, 160, 161, 164, 166, 167, 170, 175, 180, 182, 184, 185, 186, 187, 188, 191, 193, 194, 195, 196, 198, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 225, 227, 228, 235, 237, 243, 244, 248], "bytesus": 9, "approxim": [9, 27, 45, 63, 134, 135, 157, 181], "size": [9, 11, 18, 19, 24, 27, 31, 45, 50, 55, 58, 59, 63, 87, 90, 104, 123, 125, 134, 135, 141, 144, 146, 149, 151, 153, 157, 167, 180, 181, 185, 191, 193, 196, 202, 209, 210, 211, 212, 213, 214, 218, 229, 237, 243, 244, 248, 256], "insert": [9, 68, 87, 90, 181, 214], "overload": [9, 11, 18, 24, 27, 35, 40, 41, 45, 53, 55, 59, 63, 68, 76, 82, 83, 85, 87, 90, 94, 96, 100, 101, 119, 122, 123, 124, 125, 131, 134, 135, 141, 144, 146, 149, 151, 153, 157, 160, 161, 167, 175, 182, 185, 186, 187, 188, 191, 193, 196, 198, 204, 207, 208, 214, 215, 218, 225, 237, 243, 244, 248], "n": [9, 134, 141, 209, 257], "box": [9, 63, 70, 181, 182, 188, 229, 232], "hierarchi": [9, 182], "metadata": [9, 149], "ref": [9, 38, 43, 45, 50, 52, 53, 61, 72, 80, 87, 89, 90, 95, 97, 104, 111, 125, 130, 139, 170, 181, 194, 195, 202, 204, 218, 229, 237, 239], "refcntbas": [9, 38, 43, 52, 53, 61, 72, 80, 87, 89, 90, 95, 97, 104, 125, 130, 139, 170, 181, 194, 202, 204, 218, 237], "increment": [9, 27, 30, 31, 38, 43, 52, 53, 61, 63, 72, 80, 87, 89, 90, 95, 97, 104, 125, 130, 139, 153, 170, 181, 185, 194, 195, 202, 204, 218, 237], "balanc": [9, 18, 38, 43, 52, 53, 61, 72, 80, 87, 89, 90, 95, 97, 104, 125, 130, 139, 170, 181, 194, 195, 202, 204, 218, 237], "unref": [9, 38, 43, 45, 50, 52, 53, 61, 72, 80, 87, 89, 90, 95, 97, 104, 125, 130, 139, 170, 181, 182, 194, 195, 202, 204, 218, 229, 237, 239], "queri": [9, 125], "std": [9, 125, 186], "vector": [9, 27, 123, 134, 141, 157, 167, 175, 186, 187], "alloc": [9, 11, 17, 18, 38, 43, 52, 53, 61, 72, 80, 87, 89, 90, 95, 97, 98, 104, 125, 130, 139, 157, 170, 172, 181, 185, 186, 194, 195, 196, 202, 204, 218, 237, 244, 248, 251, 256], "popul": 9, "indic": [9, 17, 27, 30, 32, 49, 63, 70, 71, 87, 90, 130, 149, 196, 218, 239, 244, 250], "intersect": [9, 11, 18, 123, 177, 185, 193, 196, 197, 200, 218, 229, 232], "uniqu": [9, 11, 38, 43, 45, 50, 52, 53, 61, 72, 80, 87, 89, 90, 95, 97, 104, 125, 130, 139, 152, 157, 170, 181, 194, 195, 202, 204, 218, 229, 237, 239, 254], "caller": [9, 11, 18, 27, 38, 43, 50, 51, 52, 53, 61, 72, 80, 87, 89, 90, 95, 97, 104, 125, 130, 139, 141, 151, 157, 170, 181, 182, 185, 194, 195, 202, 204, 209, 218, 237, 251, 257], "owner": [9, 11, 38, 43, 52, 53, 61, 72, 80, 87, 89, 90, 95, 97, 104, 125, 130, 135, 139, 150, 170, 181, 185, 194, 195, 202, 204, 218, 237], "ensur": [9, 11, 38, 43, 52, 53, 61, 72, 80, 87, 89, 90, 95, 97, 104, 125, 130, 139, 170, 181, 185, 194, 195, 202, 204, 218, 237, 251], "previou": [9, 23, 28, 38, 43, 52, 53, 61, 63, 72, 80, 87, 89, 90, 91, 95, 97, 104, 125, 130, 137, 139, 153, 157, 170, 181, 194, 195, 202, 204, 218, 237, 254], "action": [9, 38, 43, 52, 53, 61, 72, 80, 87, 89, 90, 95, 97, 104, 125, 130, 139, 170, 181, 194, 195, 202, 204, 218, 237], "complet": [9, 27, 29, 38, 43, 52, 53, 61, 72, 80, 87, 89, 90, 95, 97, 104, 123, 125, 130, 135, 139, 141, 170, 181, 193, 194, 195, 196, 197, 198, 201, 202, 204, 218, 237, 254], "decrement": [9, 38, 43, 52, 53, 61, 72, 80, 87, 89, 90, 95, 97, 104, 125, 130, 139, 170, 181, 194, 195, 202, 204, 218, 237], "delet": [9, 18, 38, 43, 52, 53, 61, 72, 80, 87, 89, 90, 91, 95, 97, 104, 111, 125, 130, 139, 149, 170, 175, 181, 194, 195, 201, 202, 204, 218, 237], "object": [9, 11, 18, 27, 38, 43, 50, 52, 53, 61, 63, 72, 80, 87, 89, 90, 91, 95, 97, 104, 111, 117, 125, 130, 134, 135, 139, 141, 149, 153, 170, 175, 181, 182, 185, 194, 195, 202, 204, 218, 220, 221, 227, 228, 229, 237, 239, 244, 248, 254, 256, 257], "need": [9, 18, 27, 29, 30, 38, 43, 52, 53, 61, 72, 80, 87, 89, 90, 95, 97, 104, 111, 123, 125, 130, 139, 157, 167, 170, 175, 181, 193, 194, 195, 202, 204, 218, 237], "been": [9, 11, 27, 34, 38, 43, 52, 53, 58, 61, 72, 80, 87, 89, 90, 91, 95, 97, 104, 125, 130, 139, 144, 160, 161, 170, 181, 182, 185, 194, 195, 202, 204, 209, 210, 211, 212, 213, 218, 237, 244, 248, 254], "isdraw": 10, "dimension": [11, 125, 186, 256], "raster": [11, 18, 125, 151, 157, 185, 218, 255, 256], "imageinfo": [11, 18, 27, 41, 125, 145, 185, 218, 248, 254, 256], "integ": [11, 18, 122, 123, 125, 135, 157, 167, 185, 186, 193, 196, 237, 256], "colorspac": [11, 18, 27, 38, 40, 41, 43, 87, 90, 125, 135, 153, 185, 207, 218, 224, 254], "pixelref": [11, 27, 125, 185], "physic": [11, 134], "locat": [11, 18, 27, 63, 125, 134], "anywher": 11, "insid": [11, 13, 16, 18, 25, 28, 123, 157, 174, 185, 188, 193, 196, 197, 258], "drawn": [11, 18, 19, 24, 28, 29, 52, 63, 125, 130, 134, 135, 153, 157, 170, 182, 196, 204, 218, 229, 237, 254, 256, 257, 258], "flexibl": [11, 134], "limit": [11, 18, 24, 87, 90, 123, 134, 141, 153, 155, 157, 180, 181, 193], "optim": [11, 18, 135, 147, 181, 204, 225], "target": [11, 18, 82, 83, 87, 90, 96, 104, 125, 134, 218], "primarili": 11, "read": [11, 18, 27, 50, 55, 58, 125, 129, 141, 144, 153, 157, 185, 188, 196, 209, 210, 211, 212, 213, 218], "better": [11, 141, 151], "perform": [11, 18, 27, 87, 90, 139, 141, 147, 157, 167, 177, 185, 218, 225, 229, 258], "written": [11, 18, 55, 59, 141, 146, 149, 157, 188, 193, 196, 237, 243], "declar": 11, "const": [11, 50, 72, 141], "prevent": [11, 87, 90, 153], "alter": [11, 153, 157, 160, 182, 232], "cannot": [11, 27, 31, 50, 58, 125, 137, 141, 144, 153, 170, 181, 193, 209, 210, 211, 212, 213], "chang": [11, 18, 27, 53, 63, 83, 87, 90, 125, 141, 157, 170, 181, 185, 186, 193, 196, 204, 215, 218, 222, 237], "It": [11, 18, 27, 32, 34, 41, 48, 72, 81, 87, 90, 91, 104, 111, 135, 153, 180, 181, 185, 186, 195, 218, 229, 237, 254, 256], "affect": [11, 18, 49, 63, 125, 130, 157, 167, 170, 181, 229], "write": [11, 27, 34, 50, 55, 59, 125, 141, 146, 149, 157, 185, 188, 193, 196, 218, 243, 254, 256], "configur": [11, 27, 119, 121, 218, 244, 248], "content": [11, 18, 23, 24, 50, 52, 53, 55, 68, 72, 87, 90, 107, 125, 134, 149, 151, 152, 153, 182, 196, 214, 218, 227, 232, 237, 256, 258], "thread": [11, 38, 50, 125, 141, 157, 184, 185, 218, 237, 254], "safe": [11, 32, 38, 87, 89, 90, 97, 104, 141, 157, 185, 186, 218], "own": [11, 18, 52, 87, 90, 91, 218], "copi": [11, 18, 24, 50, 58, 65, 68, 83, 125, 134, 144, 153, 157, 172, 175, 185, 188, 196, 209, 210, 211, 212, 213, 218, 227, 232, 237, 239, 258], "field": [11, 63, 141, 149], "although": [11, 27, 157, 167, 258], "share": [11, 18, 38, 50, 125, 135, 153, 157, 184, 185, 195, 196, 218, 229, 232, 237, 254, 258], "underli": [11, 87, 90, 91, 104, 111, 125, 157, 196, 218, 237], "mount": [11, 185], "np": [11, 50, 185, 254, 256], "100": [11, 76, 78, 125, 151, 181, 185, 196, 254, 258], "4": [11, 13, 14, 18, 22, 23, 27, 28, 31, 37, 38, 39, 41, 43, 44, 46, 47, 53, 54, 56, 57, 61, 62, 70, 71, 76, 79, 81, 86, 92, 93, 113, 114, 125, 130, 133, 134, 139, 140, 141, 143, 157, 162, 163, 170, 173, 177, 178, 179, 180, 183, 185, 188, 190, 196, 199, 204, 205, 215, 218, 227, 244, 245, 247, 248, 251, 254, 256, 257], "uint8": [11, 185, 254, 256], "setinfo": 11, "maken32premul": [11, 135, 185, 254], "setpixel": 11, "creat": [11, 18, 24, 27, 41, 43, 45, 50, 52, 63, 72, 87, 90, 91, 104, 111, 123, 125, 130, 134, 135, 139, 141, 149, 151, 153, 157, 180, 181, 185, 193, 196, 204, 218, 227, 228, 229, 237, 239, 254, 256, 257, 258], "both": [11, 18, 33, 45, 122, 125, 141, 157, 167, 180, 186, 188, 218], "empti": [11, 18, 27, 50, 63, 72, 117, 123, 125, 135, 141, 147, 149, 153, 157, 160, 161, 167, 180, 185, 188, 193, 196, 197, 198, 207, 229, 232, 248], "volatil": [11, 157], "after": [11, 18, 27, 50, 52, 58, 87, 90, 91, 123, 125, 130, 134, 141, 144, 153, 157, 160, 167, 175, 185, 209, 210, 211, 212, 213, 218, 244, 258], "param": [11, 18, 63, 125, 135, 141, 167, 185, 186, 193, 218, 237], "allocn32pixel": 11, "isopaqu": [11, 35, 41, 125, 135, 185, 204], "nativ": [11, 18, 27, 151, 218, 237], "abort": [11, 52], "29": [11, 86, 125], "neg": [11, 18, 27, 70, 123, 125, 157, 180, 185, 188, 193, 218], "fail": [11, 45, 87, 90, 91, 125, 181, 185, 214, 218, 229, 248, 254], "user": [11, 75, 119, 121, 229], "sk_abort": 11, "devic": [11, 18, 87, 90, 104, 111, 130, 218, 254], "skip": [11, 18, 20, 27, 30, 32, 34, 58, 63, 144, 209, 210, 211, 212, 213, 218], "column": [11, 18, 19, 125, 135, 141, 185, 218], "row": [11, 18, 19, 27, 30, 32, 41, 45, 87, 90, 125, 134, 135, 141, 185, 218, 244, 248], "allocpixel": 11, "info": [11, 18, 27, 31, 83, 85, 87, 90, 125, 170, 172, 185, 218, 248, 254, 256], "skimageinfo": [11, 27, 185], "rowbyt": [11, 18, 27, 31, 125, 135, 185, 218, 219, 244, 248], "follow": [11, 55, 87, 90, 104, 117, 121, 125, 141, 157, 160, 161, 218, 254, 256, 257, 258], "rule": [11, 125, 157], "meth": [11, 185], "bytesperpixel": [11, 27, 41, 135, 185], "comput": [11, 18, 50, 53, 130, 135, 137, 141, 147, 153, 157, 174, 175, 186, 218, 229, 232], "minimum": [11, 75, 134, 135, 141, 157, 185, 196], "could": [11, 18, 27, 29, 58, 125, 141, 144, 209, 210, 211, 212, 213, 218, 254], "On": [11, 141], "most": [11, 32, 72, 141, 157, 167, 229, 237], "succe": [11, 87, 90, 125], "suffici": [11, 18, 157, 237, 251], "place": [11, 18, 186, 196], "until": [11, 18, 87, 90, 125, 149, 157, 196, 201, 218, 258], "behavior": [11, 18, 24, 45, 123, 182, 237], "malloc": 11, "larger": [11, 18, 32, 123, 125, 135, 148, 151, 157, 159, 167, 168, 185, 193, 218, 229], "allocpixelsflag": 11, "calloc": 11, "kzeropixels_allocflag": [11, 12], "skalphatyp": 11, "irect": [11, 18, 27, 125, 130, 134, 135, 185, 193, 196, 197, 198, 218, 256], "integr": [11, 18, 125, 135, 185], "immut": [11, 27, 50, 125, 129, 135, 181, 182, 185, 229, 232, 237, 239], "skcolortyp": [11, 87, 90, 104, 248], "computebytes": [11, 135, 185], "rowbytesaspixel": [11, 185], "size_max": [11, 135, 185, 244, 248], "fit": [11, 18, 19, 123, 125, 135, 157, 167, 185, 188, 193], "size_t": [11, 135, 185], "dimens": [11, 18, 24, 27, 31, 41, 63, 83, 85, 125, 134, 135, 157, 181, 185, 193, 196, 218, 244, 248, 251, 256], "isiz": [11, 18, 27, 83, 85, 123, 125, 134, 135, 180, 185, 193, 208, 244], "drawsnoth": 11, "either": [11, 38, 61, 87, 90, 91, 107, 111, 115, 121, 123, 124, 125, 134, 135, 141, 149, 157, 167, 188, 193, 196, 208, 218, 235, 237, 257], "enclos": [11, 123, 193], "eras": [11, 185, 256], "interpret": [11, 117, 134, 153], "being": [11, 153, 204, 218, 237, 256], "srgb": [11, 27, 41, 45, 125, 135, 151, 153, 185, 218], "treat": [11, 18, 28, 91, 125, 134, 141, 157, 160, 167, 170, 187, 193, 218, 227, 237], "deprec": [11, 18, 70, 125, 141], "eraseargb": 11, "extractalpha": 11, "skpaint": [11, 63, 125, 153], "offset": [11, 18, 49, 50, 55, 58, 63, 122, 123, 125, 134, 135, 144, 157, 167, 171, 185, 186, 188, 193, 196, 209, 210, 211, 212, 213, 214, 218, 232, 256], "ipoint": [11, 18, 123, 125, 134, 141, 186, 196, 256], "maskfilt": [11, 18, 47, 63, 153, 206, 228, 255], "mask": [11, 18, 37, 47, 125, 139, 153, 157, 228, 256], "heapalloc": 11, "top": [11, 18, 27, 28, 30, 70, 107, 123, 125, 142, 157, 185, 188, 189, 193, 218], "posit": [11, 18, 58, 63, 65, 68, 70, 117, 123, 125, 141, 144, 157, 164, 167, 175, 176, 188, 193, 196, 209, 210, 211, 212, 213, 218, 229, 232, 237, 239], "align": [11, 18, 63, 125, 135, 141, 142, 157, 167, 188, 190], "unless": [11, 29, 125, 141], "layer": [11, 18, 24, 27, 257], "extractsubset": [11, 185], "subset": [11, 27, 30, 32, 50, 87, 90, 125, 134, 181, 185, 218, 235], "outsid": [11, 13, 16, 18, 25, 58, 87, 90, 121, 123, 125, 134, 135, 144, 153, 155, 157, 174, 181, 182, 193, 209, 210, 211, 212, 213, 218, 234, 235, 258], "discard": [11, 18, 27, 125, 157, 181, 193, 218, 222], "isvolatil": [11, 157, 167], "getalphaf": [11, 153, 185], "x": [11, 18, 19, 53, 63, 68, 70, 122, 123, 125, 134, 135, 138, 141, 142, 157, 167, 180, 181, 185, 186, 187, 188, 193, 196, 197, 198, 218, 229, 232, 257], "look": [11, 185], "normal": [11, 63, 72, 76, 87, 90, 134, 157, 185, 186, 187, 237, 249], "roughli": [11, 185], "getcolora": [11, 185], "getcolor": [11, 153, 185], "effic": [11, 185], "precis": [11, 141, 153, 157, 175, 185, 193], "getbound": [11, 53, 63, 157, 188, 196, 237], "black": [11, 18, 24, 185, 234], "trigger": [11, 18, 24, 153, 185, 186], "crash": [11, 87, 90, 185], "sk_releas": [11, 185], "lost": [11, 87, 90, 185], "getgenerationid": [11, 53, 157], "correspond": [11, 27, 28, 63, 87, 90, 107, 117, 134, 141, 151, 157, 175, 185, 218, 237, 246], "notifypixelschang": 11, "examin": 11, "getpixel": [11, 27, 30, 34], "getsubset": 11, "within": [11, 18, 30, 58, 87, 90, 134, 135, 141, 144, 151, 152, 188, 196, 197, 200, 209, 210, 211, 212, 213, 218, 229, 232, 234, 245], "Will": [11, 72, 185, 237, 251], "pixelreforigin": 11, "fy": [11, 122, 123, 141, 157, 167, 186, 187, 193], "installpixel": 11, "minrowbyt": [11, 125, 135, 185, 218], "reset": [11, 55, 87, 90, 125, 135, 141, 147, 153, 157, 167, 175, 185, 198, 214, 232, 258], "lifetim": [11, 50, 125, 149, 185, 201, 204, 218], "skpixmap": [11, 27, 87, 90, 125, 145], "addr": [11, 125, 185], "isimmut": 11, "debug": [11, 63, 135, 153, 188], "isnul": 11, "explicitli": [11, 135, 141, 195, 254, 256], "incorrectli": [11, 135], "allow": [11, 18, 27, 45, 53, 125, 134, 135, 141, 153, 157, 181, 185, 188, 204, 232, 237, 248, 257], "makeshad": [11, 18, 125, 181, 257], "tmx": [11, 125, 181], "tilemod": [11, 18, 117, 125, 134, 181, 204, 257], "kclamp": [11, 18, 117, 125, 234], "tmy": [11, 125, 181], "sampl": [11, 18, 25, 32, 60, 87, 90, 104, 125, 134, 153, 181, 185, 218, 244, 247], "samplingopt": [11, 18, 125, 134, 185], "0x7f03af012d30": 11, "localmatrix": [11, 117, 125, 130, 181, 204], "skshader": [11, 125, 153], "mark": [11, 125, 157], "peekpixel": [11, 18, 125, 218], "leav": [11, 18, 58, 123, 125, 144, 153, 157, 175, 185, 193, 196, 209, 210, 211, 212, 213, 218], "becom": [11, 87, 90, 125, 188, 218], "futur": [11, 18, 27, 87, 90, 141, 218], "readabl": [11, 18, 125, 185, 218, 220], "direct": [11, 18, 125, 130, 134, 157, 169, 181, 185, 186, 187, 218, 229, 256], "access": [11, 18, 35, 50, 72, 125, 134, 157, 184, 185, 218, 251], "constant": [11, 14, 55, 157, 252], "readpixel": [11, 18, 125, 185, 218], "dstinfo": [11, 18, 27, 125, 185, 218], "dstpixel": [11, 18, 125, 185, 218], "dstrowbyt": [11, 18, 125, 185, 218], "srcx": [11, 18, 125, 185, 218], "srcy": [11, 18, 125, 185, 218], "start": [11, 18, 27, 32, 58, 117, 125, 141, 144, 157, 160, 167, 175, 185, 198, 200, 209, 210, 211, 212, 213, 235, 251, 257, 258], "specif": [11, 18, 63, 87, 90, 92, 125, 130, 215, 218, 237, 257], "gap": [11, 125, 185], "next": [11, 18, 27, 28, 29, 32, 38, 53, 87, 90, 91, 125, 141, 157, 160, 161, 175, 179, 185, 197, 198, 200, 218, 230], "ab": [11, 125, 185], "length": [11, 18, 45, 49, 50, 51, 55, 58, 59, 125, 141, 144, 146, 151, 157, 167, 171, 175, 185, 186, 187, 188, 196, 209, 210, 211, 212, 213, 229, 237, 243, 258], "whose": [11, 38, 43, 45, 125, 185, 187, 237, 257], "absolut": [11, 58, 125, 144, 185, 186, 209, 210, 211, 212, 213], "readytodraw": 11, "refcolorspac": [11, 41, 125, 135, 185, 224], "smart": [11, 125, 135, 184, 185], "pointer": [11, 18, 83, 125, 134, 135, 157, 185, 193, 196, 200, 218, 229], "track": [11, 32, 125, 135, 185, 218], "destruct": [11, 125, 135, 185], "initi": [11, 18, 23, 24, 27, 34, 35, 87, 90, 91, 134, 141, 147, 153, 157, 160, 161, 164, 167, 170, 175, 182, 188, 198, 201, 218, 232, 244, 248, 251], "had": [11, 31], "decreas": [11, 63, 153], "sole": [11, 125], "interv": [11, 18, 49, 171, 172, 185, 200, 218, 229, 235], "least": [11, 27, 55, 58, 59, 72, 111, 125, 135, 137, 144, 146, 185, 188, 209, 210, 211, 212, 213, 243, 248, 251], "larg": [11, 18, 19, 27, 45, 125, 135, 157, 180, 181, 185, 186, 193, 218, 237, 238], "suppli": [11, 18, 51, 91, 125, 147, 229, 237], "enough": [11, 18, 19, 27, 45, 125, 135, 218, 257], "maximum": [11, 18, 51, 70, 75, 87, 90, 104, 125, 134, 135, 141, 157, 185, 196, 218, 237], "setalphatyp": 11, "compat": [11, 87, 90, 125, 145, 157, 218, 248, 251], "current": [11, 18, 24, 27, 30, 52, 53, 55, 58, 63, 83, 87, 90, 125, 144, 157, 164, 175, 182, 196, 209, 210, 211, 212, 213, 218, 246, 254, 256], "setimmut": 11, "intern": [11, 31, 53, 87, 90, 125, 141, 157, 196, 218, 257, 258], "also": [11, 27, 28, 55, 87, 90, 115, 125, 141, 157, 160, 186, 218, 238, 247, 254, 257, 258], "clear": [11, 18, 24, 28, 63, 68, 141, 143, 153, 181, 257], "permit": [11, 125, 181, 229], "31": [11, 135], "successfulli": [11, 27, 141], "respons": [11, 53, 87, 90, 91, 125, 218, 251], "handl": [11, 32, 125, 237], "ownership": [11, 87, 90, 151, 182, 201, 251], "union": [11, 18, 50, 123, 125, 130, 147, 157, 177, 185, 193, 196, 218, 229, 237], "bytearrai": [11, 18, 50, 125, 157, 185, 218, 229, 257], "manag": [11, 63, 72, 125, 185, 218, 254, 256], "shiftperpixel": [11, 41, 135, 185], "shift": [11, 41, 134, 135, 185], "swap": [11, 123, 157, 193, 196, 214], "exchang": [11, 125, 157, 196], "tobyt": [11, 125, 185, 256], "tryallocn32pixel": 11, "tryallocpixel": 11, "tryallocpixelsflag": 11, "fx": [11, 122, 123, 141, 157, 167, 186, 187, 193], "writepixel": [11, 18, 218], "dstx": [11, 218], "dsty": [11, 218], "allocflag": 11, "No": [12, 185], "default": [12, 18, 27, 33, 34, 41, 50, 51, 63, 65, 72, 75, 87, 90, 104, 125, 130, 135, 151, 153, 157, 172, 218, 229, 237, 248, 250, 251], "kclear": [13, 257], "ksrc": [13, 18, 218, 223, 257], "kdst": [13, 257], "ksrcover": [13, 18, 153, 257], "over": [13, 29, 63, 134], "kdstover": [13, 257], "ksrcin": [13, 257], "trim": [13, 218, 235], "kdstin": [13, 257], "ksrcout": [13, 257], "kdstout": [13, 257], "ksrcatop": [13, 257], "kdstatop": [13, 257], "kxor": [13, 47, 257], "kplu": [13, 257], "sum": [13, 49, 63, 134, 147, 170, 174], "kmodul": [13, 18, 257], "darken": 13, "kscreen": [13, 256, 257], "invers": [13, 14, 18, 121, 141, 157], "invert": [13, 32, 141], "brighten": 13, "porter": [13, 14, 47, 257], "duff": [13, 14, 47, 257], "koverlai": [13, 257], "screen": [13, 138, 221, 254, 256], "kdarken": [13, 257], "darker": 13, "klighten": [13, 257], "lighter": 13, "kcolordodg": [13, 257], "reflect": [13, 18, 134, 141, 151, 182], "kcolorburn": [13, 257], "khardlight": [13, 257], "ksoftlight": [13, 257], "lighten": 13, "kdiffer": [13, 26, 47, 257], "subtract": [13, 122, 123, 177, 186, 188, 193], "higher": 13, "contrast": [13, 119, 121], "kexclus": [13, 257], "lower": [13, 70, 123, 157, 193, 229], "kmultipli": [13, 257], "klastseparablemod": 13, "separ": [13, 21, 134, 157, 181, 218, 245], "khue": [13, 257], "luminos": 13, "ksatur": [13, 257], "kcolor": [13, 257], "kluminos": [13, 257], "klastmod": 13, "27": [13, 86, 93], "19": [13, 46, 86, 93], "18": [13, 46, 86, 93, 256], "16": [13, 18, 23, 37, 46, 86, 92, 93, 113, 125, 185, 249, 257], "22": [13, 46, 86, 93], "6": [13, 14, 27, 31, 38, 39, 43, 44, 46, 53, 54, 56, 57, 61, 62, 76, 79, 86, 93, 130, 133, 139, 140, 141, 148, 157, 163, 170, 173, 196, 204, 205, 244, 245, 247, 257, 258], "23": [13, 86, 93], "20": [13, 46, 49, 86, 93, 257, 258], "25": [13, 35, 49, 157, 256, 257], "28": [13, 86], "24": [13, 86, 93, 257, 258], "13": [13, 18, 46, 93], "12": [13, 18, 86, 93, 244, 245], "26": [13, 86], "21": [13, 46, 86, 93, 257], "9": [13, 14, 27, 31, 46, 56, 76, 79, 86, 93, 244, 245], "5": [13, 14, 27, 31, 35, 38, 39, 43, 44, 46, 49, 53, 54, 56, 57, 61, 62, 76, 79, 86, 130, 133, 139, 140, 141, 148, 157, 163, 170, 173, 179, 188, 190, 193, 196, 199, 204, 205, 235, 244, 245, 247, 252, 256, 257], "11": [13, 56, 244, 245], "skblendmod": 14, "those": [14, 27, 87, 90, 125, 130, 182, 248, 257], "equat": [14, 45], "dstcoeff": 14, "srccoeff": 14, "kzero": 14, "kone": 14, "ksc": 14, "kisc": 14, "sc": 14, "kdc": 14, "kidc": 14, "dc": [14, 141], "ksa": 14, "kisa": 14, "sa": 14, "kda": 14, "kida": 14, "da": 14, "kcoeffcount": 14, "knormal_blurstyl": [16, 153, 257], "fuzzi": 16, "ksolid_blurstyl": 16, "solid": [16, 153, 257], "kouter_blurstyl": 16, "noth": [16, 18, 91, 250, 254], "kinner_blurstyl": 16, "klastenum_blurstyl": 16, "against": [17, 50, 125], "cach": [17, 18, 53, 61, 87, 90, 92, 125, 141, 157, 254], "interfac": [18, 75, 87, 90, 157, 196], "togeth": [18, 45, 134, 147], "basedevic": [18, 153, 157, 218], "concaten": 18, "typefac": [18, 63, 72, 80, 229, 256, 257], "text": [18, 24, 55, 59, 63, 141, 146, 151, 157, 188, 193, 214, 229, 232, 237, 243, 255, 256, 257], "stroke": [18, 49, 63, 70, 153, 154, 156, 157, 170, 215, 229, 256, 257, 258], "shader": [18, 117, 125, 153, 180, 181, 206, 234, 255, 256], "To": [18, 27, 52, 53, 87, 90, 104, 181, 218, 254, 256], "gpu": [18, 87, 90, 91, 107, 125, 157, 218, 255], "request": [18, 27, 31, 32, 63, 72, 125, 153, 170, 209, 215, 218, 237], "obtain": 18, "visibl": [18, 58, 144, 180, 209, 210, 211, 212, 213, 254, 258], "cpu": [18, 81, 125, 218, 254], "vulkan": [18, 83, 87, 90, 111, 125, 218, 254], "document": [18, 141, 149, 151, 218, 254], "svg": [18, 157, 167, 180, 201, 255], "pdf": [18, 52, 57, 255], "picturerecord": [18, 181, 254], "subclass": [18, 38, 48, 53, 130, 139, 170, 204, 209, 243, 257], "approach": [18, 125, 172], "static": [18, 27, 35, 38, 40, 43, 45, 48, 49, 50, 51, 53, 55, 58, 59, 61, 72, 76, 80, 82, 87, 90, 117, 121, 122, 123, 124, 125, 130, 134, 135, 136, 137, 139, 141, 144, 146, 148, 149, 157, 164, 166, 170, 180, 181, 186, 187, 188, 191, 193, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 218, 227, 228, 229, 235, 237, 239, 243, 244, 248, 250, 251], "makerasterdirect": [18, 218], "surfaceprop": [18, 218, 224], "sksurfaceprop": 18, "directli": [18, 27, 125, 153, 157, 186, 188, 193, 218, 254, 256], "flush": [18, 55, 59, 87, 90, 91, 125, 146, 201, 218, 243, 254], "prop": [18, 218, 225], "lcd": [18, 24, 183, 218], "stripe": [18, 218], "font": [18, 61, 65, 70, 71, 72, 74, 75, 218, 229, 232, 237, 238, 254, 256, 257, 258], "makerasterdirectn32": 18, "inlin": [18, 141], "back": [18, 87, 89, 90, 97, 104, 125, 149, 157, 185, 204, 209, 218, 220, 221, 251], "ndarrai": [18, 125, 141, 185, 218], "shape": [18, 125, 153, 166, 185, 218, 229, 256, 257], "channel": [18, 35, 36, 37, 43, 47, 125, 134, 137, 148, 185, 218, 244, 245, 248, 249, 250, 251], "appropri": [18, 27, 38, 43, 125, 218], "dtype": [18, 125, 218, 254], "custom": [18, 134, 229, 257], "inittyp": 18, "choos": [18, 27, 33, 157, 167, 170, 237], "dynam": 18, "rotat": [18, 45, 125, 130, 141, 143, 157, 167, 183, 191, 256], "multipl": [18, 51, 141, 153, 157, 184, 195, 196, 218, 229, 235, 254, 257], "monitor": 18, "characterist": [18, 256], "best": [18, 125], "reli": [18, 63], "legaci": [18, 81, 125], "klegacyfonthost": 18, "edit": [18, 258], "like": [18, 31, 49, 50, 65, 125, 141, 157, 218, 237, 248, 256, 257], "accesstoplayerpixel": 18, "while": [18, 45, 151, 157, 160, 167, 186, 218, 230, 251, 254], "inaccess": 18, "androidframework_setdevicecliprestrict": 18, "cliprect": [18, 257], "cliprrect": 18, "clippath": 18, "retroact": 18, "restrict": [18, 134, 256], "record": [18, 87, 90, 157, 181, 182, 218, 254], "pictur": [18, 53, 125, 134, 182, 255, 256], "disabl": [18, 196, 218, 225], "privat": [18, 153], "android": [18, 157], "framework": [18, 157], "coordin": [18, 19, 27, 32, 66, 70, 122, 123, 130, 134, 138, 141, 157, 181, 186, 187, 193, 196, 237, 256], "clipop": 18, "doantialia": 18, "alias": [18, 196, 218], "anti": [18, 196, 218], "edg": [18, 63, 117, 123, 134, 153, 155, 157, 174, 188, 193, 234], "filltyp": [18, 157, 167], "itself": [18, 53, 123, 193], "anoth": [18, 27, 50, 87, 90, 125, 130, 141, 151, 188, 254], "form": [18, 141, 157, 186, 191, 258], "part": [18, 41, 61, 135, 138, 157, 167, 175, 181, 188, 197, 198, 229, 244, 257], "combin": [18, 27, 41, 47, 72, 87, 90, 134, 135, 141, 145, 153, 177, 196, 229, 248, 250], "rrect": [18, 157, 167, 256], "clipregion": 18, "devicergn": 18, "region": [18, 47, 134, 256], "kintersect": [18, 26, 47], "unaffect": [18, 185], "concat": [18, 141], "exist": [18, 125, 147, 157, 175, 195, 196, 218, 237, 251], "m44": 18, "necessari": [18, 30, 125, 151, 157], "done": [18, 27, 50, 58, 91, 144, 175, 182, 197, 198, 209, 210, 211, 212, 213, 218], "drawannot": 18, "kei": [18, 61, 87, 90, 256], "annot": [18, 251], "pair": [18, 21, 157, 159, 167, 168, 185, 188, 229, 237, 258], "utf": [18, 63, 229], "extent": [18, 70, 157], "lookup": [18, 228], "drawarc": 18, "oval": [18, 157, 167, 188, 256, 258], "startangl": [18, 117, 157, 167], "sweepangl": [18, 157, 167], "usecent": 18, "arc": [18, 157, 159, 167, 168, 258], "sweep": [18, 157, 167], "plu": [18, 38, 43, 157, 258], "degre": [18, 141, 157, 167, 256], "right": [18, 70, 123, 138, 141, 142, 157, 186, 188, 189, 193, 196, 200], "middl": [18, 235, 258], "end": [18, 27, 29, 58, 68, 87, 90, 91, 117, 125, 144, 153, 157, 160, 167, 186, 200, 209, 210, 211, 212, 213, 218, 220, 221, 256, 257, 258], "clockwis": [18, 141, 157, 167, 169], "counterclockwis": [18, 157, 167], "circl": [18, 117, 141, 154, 155, 157, 167, 188, 258], "wedg": 18, "center": [18, 117, 134, 142, 157, 167, 188, 246, 257], "between": [18, 38, 60, 63, 70, 117, 125, 134, 151, 153, 157, 164, 180, 184, 186, 214, 235, 237], "begin": [18, 52, 58, 63, 117, 130, 144, 153, 157, 167, 175, 209, 210, 211, 212, 213, 218, 256], "drawatla": 18, "atla": 18, "xform": [18, 229, 232], "rsxform": [18, 141, 229, 232], "tex": [18, 239], "0x7f03af0024b0": 18, "cullrect": [18, 153, 181, 182], "sprite": 18, "alia": [18, 87], "colorfilt": [18, 43, 121, 130, 134, 137, 148, 153, 204, 218, 227, 255], "imagefilt": [18, 24, 38, 125, 153, 218, 255], "present": [18, 27, 38, 65, 125, 182, 218, 221, 237, 247, 249], "entri": [18, 19, 49, 87, 90, 157, 186, 193, 237, 248, 258], "space": [18, 19, 27, 40, 45, 63, 65, 107, 121, 125, 130, 134, 135, 141, 153, 164, 172, 218, 227, 244, 251], "conserv": [18, 29, 53, 141, 215, 229, 237], "map": [18, 27, 41, 45, 63, 87, 90, 125, 130, 134, 135, 141, 185, 218, 229, 245, 252, 256], "effici": [18, 27, 55, 157, 196, 257], "drawbitmap": 18, "drawloop": [18, 218], "extend": [18, 68, 153, 155, 157, 167, 218, 237], "beyond": [18, 218, 248, 257], "replic": [18, 164, 234, 257], "just": [18, 27, 72, 218, 238, 256], "made": [18, 27, 50, 58, 144, 153, 181, 209, 210, 211, 212, 213, 218, 254], "makebitmapshad": 18, "side": [18, 19, 123, 134, 141, 186, 193], "drawbitmaprect": 18, "constraint": [18, 225], "srcrectconstraint": 18, "kstrict_srcrectconstraint": [18, 25], "scale": [18, 19, 27, 31, 63, 125, 134, 141, 142, 143, 157, 167, 181, 183, 185, 186, 187, 191, 218, 229, 237, 257], "translat": [18, 123, 125, 141, 143, 157, 181, 188, 196, 256, 257, 258], "addition": [18, 87, 90, 125, 157, 218], "filterqu": [18, 125, 134, 153, 185], "kfast_srcrectconstraint": [18, 25], "improv": [18, 119, 121, 141, 157, 258], "filter": [18, 24, 38, 43, 51, 121, 125, 130, 134, 137, 153, 180, 185, 227], "strictli": [18, 117], "faster": [18, 25, 186, 196, 237], "isrc": 18, "boundari": [18, 125], "fraction": [18, 193], "cx": [18, 117, 257], "cy": [18, 117, 257], "radiu": [18, 48, 117, 134, 141, 157, 167, 188, 257], "thick": [18, 70, 153, 215], "axi": [18, 19, 63, 65, 67, 74, 122, 123, 125, 134, 141, 157, 167, 186, 187, 188, 190, 193, 196, 197, 198, 218, 232, 237], "half": [18, 46, 157, 188, 235, 249], "diamet": 18, "drawcolor": [18, 256, 257], "drawdrrect": 18, "outer": [18, 40, 123, 134, 170, 193, 257], "inner": [18, 38, 40, 43, 134, 170, 257], "join": [18, 123, 153, 157, 170, 193, 215], "round": [18, 45, 48, 63, 157, 167, 188, 193, 218, 256, 257], "squar": [18, 141, 154, 188], "concav": [18, 157], "These": [18, 47, 57, 92, 218, 257], "ident": [18, 27, 125, 141, 143, 157, 188, 196, 227, 258], "fast": [18, 45, 153, 157], "drawirect": 18, "drawimag": [18, 256, 257], "0x7f03af009f30": 18, "drawimagerect": [18, 134, 256], "uncompress": 18, "rectangular": [18, 19, 30, 196], "0x7f03aeffdf30": 18, "system": [18, 70, 72, 125, 130, 138, 218], "ctm": [18, 130, 139], "drawrect": [18, 256, 257], "0x7f03af002030": 18, "0x7f03aeffdfb0": 18, "drawlin": [18, 153, 181], "x0": 18, "y0": 18, "x1": [18, 157, 167], "y1": [18, 157, 167], "segment": [18, 21, 51, 157, 175, 196, 200, 235, 257], "cap": [18, 153, 157, 215], "were": [18, 27, 58, 87, 90, 91, 130, 144, 182, 209, 210, 211, 212, 213, 218, 232], "kstroke": 18, "p0": [18, 157, 193], "p1": [18, 157, 167, 193], "drawov": [18, 257], "drawpaint": [18, 153, 256, 257], "patheffect": [18, 48, 49, 51, 63, 136, 153, 164, 166, 229, 235, 255], "drawpatch": 18, "texcoord": 18, "coon": 18, "patch": [18, 188], "interpol": [18, 60, 157], "four": [18, 35, 75, 123, 141, 153, 157, 160, 161, 167, 188, 193, 196, 218], "textur": [18, 37, 85, 87, 90, 98, 104, 107, 111, 125, 218, 244, 245, 254], "everi": [18, 157], "fourth": [18, 134], "bottom": [18, 27, 32, 70, 107, 123, 141, 142, 157, 188, 189, 193, 218], "deriv": 18, "drawpath": [18, 256, 257, 258], "close": [18, 52, 58, 149, 157, 158, 160, 167, 169, 175, 237, 257, 258], "drawpictur": [18, 181], "seri": [18, 147, 167, 258], "later": [18, 27, 160, 161, 181, 185, 198, 254], "playback": [18, 181, 254], "savelay": [18, 257], "plai": [18, 27, 125, 181], "drawpoint": 18, "kround": 18, "ksquar": 18, "butt": 18, "p": [18, 141, 157, 186], "pointmod": 18, "pt": [18, 141, 149, 157, 160, 161, 167, 179, 186, 193, 237, 257], "kpoint": 18, "kline": [18, 179, 258], "kpolygon": 18, "kbutt": 18, "One": [18, 185], "final": [18, 91, 130, 157, 197, 198, 258], "adjac": [18, 234], "minu": [18, 123, 157, 188, 193], "respect": [18, 24, 63, 87, 90, 125, 256], "unlik": [18, 27, 157, 182, 256, 257], "iter": [18, 68, 157, 161, 179, 196, 197, 200, 229, 232], "drawrrect": [18, 256], "uniformli": [18, 141, 157], "radii": [18, 134, 157, 167, 188, 189, 190], "drawregion": 18, "drawroundrect": [18, 256], "rx": [18, 157], "ry": [18, 157], "thei": [18, 27, 32, 38, 51, 83, 87, 90, 91, 153, 182, 196, 204, 209, 218, 227, 235, 237, 251, 257], "down": [18, 19, 32, 70, 138, 175, 218], "skrect": [18, 123, 141, 142, 193], "skrrect": [18, 188], "drawsimpletext": 18, "charact": [18, 63, 70, 72, 75, 229, 237], "glyph": [18, 63, 70, 229, 232, 237, 256], "fallback": [18, 45, 72, 229], "found": [18, 63, 72, 141, 157, 200, 229, 237], "kern": [18, 229, 237], "complex": [18, 196, 229], "advanc": [18, 63, 160, 161, 164, 197, 198, 200, 229], "By": [18, 32, 141, 151, 157], "code": [18, 31, 63, 72, 157, 188, 193, 218, 229, 237, 256], "drawstr": [18, 258], "char": [18, 72, 237], "drawtextblob": [18, 256, 257], "blob": [18, 229, 232, 257], "textblob": [18, 232, 256, 257], "skew": [18, 63, 141, 143, 256], "fake": [18, 63], "bold": [18, 63, 76, 237], "embed": [18, 71], "linear": [18, 41, 45, 117, 125, 135, 137, 218, 257], "subpixel": [18, 63], "textencod": [18, 63, 229, 232], "kglyphid": [18, 233], "dither": [18, 153], "horizont": [18, 63, 141, 196, 200, 218, 232, 234, 237, 247, 257], "vertic": [18, 141, 218, 232, 234, 247, 257], "drawvertic": [18, 239], "triangl": 18, "mesh": 18, "vvertic": 18, "pend": [18, 125, 218], "resolv": [18, 147, 218], "never": [18, 72, 87, 90, 130, 157, 181, 196, 214, 218, 237, 258], "defer": [18, 125, 135], "getbaselayers": 18, "root": [18, 201], "global": [18, 50, 87, 90, 157], "due": [18, 72, 91, 215], "getdeviceclipbound": 18, "makeempti": [18, 50, 123, 124, 188, 193, 208, 237], "getlocalclipbound": 18, "outset": [18, 123, 188, 193, 215, 257], "account": [18, 63, 153, 157, 215, 218, 237], "partial": [18, 30, 31, 63, 64, 92, 125, 153], "coverag": [18, 47], "local": [18, 117, 125, 130, 134], "getlocaltodevic": 18, "getprop": 18, "writabl": [18, 125, 141, 157, 185, 220], "getsavecount": 18, "depth": [18, 135], "getsurfac": 18, "sksurfac": [18, 87, 90], "sometim": [18, 45, 225, 237], "bare": 18, "els": [18, 125, 130, 141, 153, 175, 209, 234], "gettotalmatrix": 18, "strip": [18, 183, 191], "awai": [18, 51, 138, 181], "z": [18, 138, 141, 186, 187], "3x3": [18, 45, 134, 141, 256], "isclipempti": 18, "often": [18, 72, 218], "howev": [18, 30, 87, 90, 141, 218, 256, 257], "iscliprect": 18, "makesurfac": [18, 218], "beginpag": [18, 52], "beginrecord": [18, 181, 182, 254], "debugcanva": 18, "quickreject": [18, 153, 196], "quickli": [18, 180, 196], "compar": [18, 45, 122, 157, 186, 196, 215], "instanc": [18, 35, 38, 50, 53, 87, 90, 111, 125, 130, 153, 164, 201, 218, 237, 258], "too": [18, 19, 31, 32, 45, 151, 157, 167, 185, 196, 218], "small": [18, 19, 31, 45, 157, 167, 180, 185, 196, 218], "resetmatrix": 18, "skmatrix": [18, 141, 143, 188], "prior": [18, 24, 30, 87, 90, 134, 157, 158, 185, 186], "overwritten": [18, 157, 220], "savecount": 18, "savelayerpreservelcdtextrequest": 18, "savelayeralpha": 18, "mathemat": [18, 141], "px": [18, 141], "about": [18, 27, 29, 91, 141], "setmatrix": 18, "put": 18, "suggest": [18, 27], "layerrec": 18, "savelayerrec": 18, "opac": 18, "onto": [18, 38, 254, 256], "sx": [18, 141], "sy": [18, 141], "skm44": 18, "increas": [18, 63, 117, 121, 153, 157, 175, 196], "toarrai": [18, 125, 218, 256], "dx": [18, 123, 134, 141, 157, 167, 186, 188, 193, 196], "dy": [18, 123, 134, 141, 157, 167, 186, 188, 193, 196], "along": [18, 130, 134, 141, 164, 197, 198, 232, 237, 257], "move": [18, 27, 51, 58, 63, 123, 125, 134, 141, 144, 157, 175, 185, 193, 209, 210, 211, 212, 213], "distanc": [18, 48, 63, 70, 134, 157, 164, 167, 175, 186, 187, 258], "kall_quadaaflag": [18, 22], "quadaaflag": 18, "kbottom_quadaaflag": [18, 22], "kf16colortyp": [18, 23], "savelayerflag": [18, 24], "kinitwithprevious_savelayerflag": [18, 23], "kleft_quadaaflag": [18, 22], "klines_pointmod": [18, 21], "knone_quadaaflag": [18, 22], "kpoints_pointmod": [18, 21], "kpolygon_pointmod": [18, 21], "kpreservelcdtext_savelayerflag": [18, 23], "kright_quadaaflag": [18, 22], "ktop_quadaaflag": [18, 22], "divid": [19, 218, 245], "grid": 19, "fix": [19, 45, 237], "proportion": [19, 188], "fbound": [19, 24], "fcolor": [19, 20], "frecttyp": 19, "fxcount": 19, "fxdiv": 19, "fycount": 19, "fydiv": 19, "kdefault": [19, 20], "recttyp": 19, "kfixedcolor": [19, 20], "ktranspar": [19, 20, 35], "polygon": [21, 157], "fpaint": 24, "fbackdrop": 24, "fsavelayerflag": 24, "overlai": 24, "modifi": [24, 27, 29, 50, 51, 63, 87, 90, 125, 139, 153, 157, 175, 180, 185, 186, 188, 196, 204, 257], "backdrop": 24, "caus": [24, 53, 125, 141, 186, 188, 218], "kinitwithprevi": 24, "rather": [24, 174, 180, 256], "slower": [25, 151, 157], "abstract": [27, 181, 209], "makefromdata": [27, 72, 181, 237], "we": [27, 30, 45, 87, 90, 91, 92, 175, 218, 254, 256], "know": [27, 72, 91, 256], "minbufferedbytesneed": 27, "resulttostr": 27, "textual": 27, "stream": [27, 29, 52, 55, 58, 59, 61, 125, 144, 146, 149, 157, 181, 201, 202, 210, 211, 212, 213, 237, 243, 254], "getencodedformat": 27, "skencodedimageformat": 27, "getframecount": 27, "frame": [27, 28, 29, 30, 51, 125], "getframeinfo": [27, 30], "frameinfo": 27, "singl": [27, 60, 63, 147, 153, 180, 181, 196, 204, 229, 254, 257, 258], "multi": [27, 29, 30, 218], "pars": [27, 45, 125, 197, 198, 225], "alreadi": [27, 30, 50, 125, 134, 187, 257], "As": [27, 32, 141], "rewind": [27, 31, 58, 144, 157, 198, 209, 210, 211, 212, 213], "still": [27, 29, 32, 33, 87, 90, 218, 254], "anim": [27, 33, 53, 125, 157], "getinfo": [27, 30], "reason": 27, "icc": [27, 45], "profil": [27, 45, 134], "getorigin": 27, "exif": [27, 57], "ktopleft": [27, 218], "block": [27, 246, 254], "fheight": [27, 124, 208], "fwidth": [27, 124, 208], "repeat": [27, 141, 157, 180, 196, 234, 257], "give": [27, 152, 215, 254], "scanlin": [27, 30, 32], "progress": 27, "client": [27, 30, 32, 50, 53, 63, 81, 83, 87, 90, 91, 111, 175, 218, 221, 254, 257], "startscanlinedecod": 27, "descript": [27, 125, 183, 218, 258], "config": [27, 121, 244], "expect": [27, 125, 244], "simpli": [27, 87, 90, 218], "contract": 27, "decid": [27, 170, 238], "impli": [27, 141, 181], "kinvalidscal": [27, 31], "skcolorspac": 27, "report": [27, 30, 58, 87, 90, 104, 125, 144, 209, 210, 211, 212, 213, 248], "geticcprofil": 27, "ksuccess": [27, 31], "explain": [27, 32], "failur": [27, 45, 58, 87, 90, 125, 144, 157, 209, 210, 211, 212, 213, 218, 237], "getrepetitioncount": 27, "repetit": 27, "mean": [27, 50, 63, 87, 90, 134, 141, 209, 215, 218, 229], "stop": [27, 52, 175, 235], "krepetitioncountinfinit": 27, "loop": [27, 157, 258], "forev": 27, "find": [27, 72, 214, 237], "getscaleddimens": 27, "desiredscal": 27, "factor": [27, 134, 141, 186, 257], "exact": [27, 30, 130, 157, 188, 193, 258], "getscanlineord": 27, "scanlineord": 27, "enum": [27, 56, 81, 92, 238, 245, 247], "getscanlin": [27, 30], "countlin": 27, "Not": [27, 50, 257], "getvalidsubset": 27, "desiredsubset": 27, "anyth": [27, 63, 81, 257], "similar": [27, 28, 45, 87, 90, 134, 137, 141, 254, 256], "particular": [27, 87, 90, 141, 257], "someth": [27, 137, 209, 257], "potenti": [27, 125], "getyuvaplan": 27, "yuvapixmap": [27, 125], "skyuvapixmap": [27, 125], "attempt": [27, 29, 30, 58, 125, 144, 209, 210, 211, 212, 213], "planar": [27, 125, 244], "queryyuvainfo": 27, "prealloc": 27, "accord": [27, 117], "incrementaldecod": 27, "rowsdecod": 27, "continu": [27, 31, 157], "startincrementaldecod": 27, "kincompleteinput": [27, 31], "again": [27, 87, 90, 172, 209, 218, 237], "skstream": 27, "latter": 27, "variabl": [27, 70, 141], "total": [27, 58, 87, 90, 130, 144, 175, 209, 210, 211, 212, 213, 244, 248], "meaning": [27, 30, 63, 141], "mani": [27, 58, 123, 134, 144, 147, 193, 209, 210, 211, 212, 213, 258], "necessarili": [27, 123, 193], "finish": [27, 87, 90, 91, 125], "interlac": 27, "png": [27, 125, 254, 256, 257], "what": [27, 53, 87, 90, 130, 204, 218, 238, 248, 256, 257], "nextscanlin": [27, 32], "fcurrscanlin": 27, "except": [27, 28, 31, 134, 182, 218], "strang": 27, "bmp": [27, 32, 125], "outputscanlin": 27, "inputscanlin": 27, "gif": [27, 28, 125], "supporteddatatyp": [27, 248], "skyuvapixmapinfo": [27, 248], "yuv": [27, 125, 244, 245, 248], "subsampl": [27, 244, 246], "chroma": [27, 246], "site": [27, 244], "plane": [27, 125, 244, 245, 247, 248, 249, 250, 251], "skipscanlin": 27, "ongetscanlin": 27, "reallyhasalpha": 27, "incomplet": [27, 31], "past": [27, 58, 144, 209, 210, 211, 212, 213], "prepar": [27, 157], "readi": [27, 218], "kcouldnotrewind": [27, 31], "kerrorininput": [27, 31], "kinternalerror": [27, 31], "kinvalidconvers": [27, 31], "kinvalidinput": [27, 31], "kinvalidparamet": [27, 31], "kkeep": [27, 28, 32], "disposalmethod": 27, "knofram": [27, 29, 30], "kno_zeroiniti": [27, 34], "zeroiniti": 27, "kpreferanim": [27, 33], "selectionpolici": 27, "kpreferstillimag": [27, 33], "krestorebgcolor": [27, 28, 32], "krestoreprevi": [27, 28, 29, 30], "kunimpl": [27, 31], "kyes_zeroiniti": [27, 34], "89a": 28, "spec": [28, 117], "keep": [28, 32, 87, 90, 125, 141, 204, 218], "background": [28, 87, 90, 134, 257], "disregard": 28, "restoreprevi": 28, "individu": [29, 188], "falphatyp": 29, "fdisposalmethod": 29, "fdurat": 29, "millisecond": 29, "show": [29, 183, 254, 257], "ffullyreceiv": 29, "marker": 29, "There": [29, 251, 257], "frequiredfram": [29, 30], "earliest": 29, "fframeindex": 30, "fpriorfram": 30, "fzeroiniti": 30, "fsubset": 30, "encodedformat": 30, "encodedimageformat": [30, 125], "kwebp": [30, 56, 125], "sens": 30, "control": [30, 63, 151, 153, 157, 175, 188, 218, 223, 238, 256], "dure": [30, 87, 90, 91, 149, 181, 182, 218, 225], "besid": [31, 257], "etc": [31, 49, 87, 90, 134, 167, 238, 256], "did": [31, 87, 90, 125, 160, 161, 218], "fulfil": [31, 209], "oom": [31, 87, 90], "variat": [32, 65, 237], "far": [32, 193], "reliabl": 32, "logic": [32, 45, 177, 235], "revers": [32, 123, 157, 193], "kbottomup": 32, "forc": [32, 141, 160], "advantag": [32, 34], "tough": 32, "simplest": 32, "ask": [32, 180, 254], "chunk": 32, "caution": [32, 50], "deliv": 32, "upsid": 32, "sequenc": [33, 53, 63, 157, 197, 198, 256, 257, 258], "select": [33, 141, 218], "struct": [34, 45, 83, 91, 111, 119], "public": 35, "0xffffffff": [35, 153, 181], "tupl": [35, 38, 43, 63, 80, 122, 123, 124, 125, 141, 160, 161, 175, 186, 187, 193, 208, 248], "tocolor": 35, "frombytes_rgba": 35, "fromcolor": [35, 153], "see": [35, 41, 45, 47, 50, 87, 90, 123, 130, 135, 153, 157, 193, 218, 237, 256, 257], "fitsinbyt": 35, "fa": 35, "makeopaqu": 35, "tobytes_rgba": 35, "vec": [35, 141, 186, 187], "fb": 35, "fg": 35, "fr": [35, 141], "kblack": 35, "kblue": 35, "kcyan": 35, "kdkgrai": 35, "kgrai": 35, "kgreen": 35, "kltgrai": 35, "75": [35, 257], "kmagenta": 35, "kred": 35, "kwhite": 35, "kyellow": 35, "manipul": 36, "kr": 36, "kg": 36, "kb": 36, "ka": 36, "klastenum": 36, "kred_colorchannelflag": 37, "kgreen_colorchannelflag": 37, "kblue_colorchannelflag": 37, "kalpha_colorchannelflag": 37, "kgray_colorchannelflag": 37, "krg_colorchannelflag": 37, "krgb_colorchannelflag": 37, "krgba_colorchannelflag": 37, "pipelin": [38, 257], "stage": 38, "xfermod": [38, 130, 134, 255, 256], "reentrant": 38, "legal": [38, 41, 135, 153, 157, 175, 235, 250], "sever": [38, 45, 235, 256, 257], "deseri": [38, 43, 45, 53, 61, 130, 139, 170, 204, 229, 237], "asacolormatrix": [38, 43], "5x4": [38, 43], "asacolormod": [38, 43], "ascolormod": [38, 43], "filtercolor": [38, 43], "filtercolor4f": [38, 43], "srccolor": [38, 43], "srcc": [38, 43], "dstc": [38, 43], "getflattenabletyp": [38, 43, 53, 61, 130, 139, 170, 204], "flattan": [38, 39, 43, 44, 53, 54, 130, 133, 139, 140, 170, 173, 204, 205], "gettypenam": [38, 43, 53, 61, 130, 139, 170, 204], "drawabl": [38, 43, 61, 130, 139, 170, 181, 182, 204], "makecompos": [38, 43, 170, 257], "serial": [38, 43, 45, 53, 61, 130, 139, 157, 170, 181, 204, 229, 237, 238, 254], "kcolorfilter_typ": [38, 39, 43, 44, 53, 54, 61, 62, 130, 133, 139, 140, 170, 173, 204, 205], "kdrawlooper_typ": [38, 39, 43, 44, 53, 54, 61, 62, 130, 133, 139, 140, 170, 173, 204, 205], "kdrawable_typ": [38, 39, 43, 44, 53, 54, 61, 62, 130, 133, 139, 140, 170, 173, 204, 205], "kimagefilter_typ": [38, 39, 43, 44, 53, 54, 61, 62, 130, 133, 139, 140, 170, 173, 204, 205], "kmaskfilter_typ": [38, 39, 43, 44, 53, 54, 61, 62, 130, 133, 139, 140, 170, 173, 204, 205], "kpatheffect_typ": [38, 39, 43, 44, 53, 54, 61, 62, 130, 133, 139, 140, 170, 173, 204, 205], "compos": [40, 134, 258], "hslamatrix": 40, "rowmajor": 40, "colormatrix": [40, 257], "hsla": 40, "instead": [40, 63, 125, 134, 153, 157, 167, 181, 193, 204, 254, 257], "lerp": [40, 207], "lineartosrgbgamma": 40, "srgbtolineargamma": 40, "arg0": [41, 68, 82, 104, 125, 145, 151, 175, 202, 230], "gammaclosetosrgb": [41, 45, 135], "makealphatyp": [41, 135], "newalphatyp": [41, 135], "incompat": [41, 135, 218], "makecolorspac": [41, 125, 135], "makecolortyp": [41, 135], "newcolortyp": [41, 135], "makelightingfilt": 43, "mul": 43, "add": [43, 52, 68, 70, 92, 122, 147, 151, 154, 155, 157, 158, 160, 167, 181, 186, 250], "argument": [43, 65, 153, 218, 237], "capsul": [45, 58, 84, 144, 209, 210, 211, 212, 213, 219], "deeper": 45, "cm": [45, 141], "iccprofil": 45, "skcm": 45, "makergb": 45, "transferfn": 45, "transferfunct": 45, "toxyz": 45, "matrix3x3": 45, "transfer": [45, 125, 153, 201, 218, 257], "major": [45, 141], "xyz": 45, "makesrgb": [45, 125, 254], "makesrgblinear": [45, 125], "primari": 45, "gamma": [45, 135, 137, 218, 223, 228], "deref": [45, 50, 229, 239], "gammaislinear": 45, "gamuttransformto": 45, "src_to_dst": 45, "hash": 45, "invtransferfn": 45, "fn": 45, "isnumericaltransferfn": 45, "standard": [45, 139, 141, 157, 188, 193, 257], "eg": 45, "pq": 45, "hlg": 45, "issrgb": 45, "littl": [45, 46, 256], "toler": 45, "might": [45, 123, 141, 256], "numer": [45, 157, 167], "white": 45, "d50": 45, "decis": 45, "consid": [45, 87, 90, 123, 181, 193], "2f": 45, "exponenti": [45, 134], "them": [45, 87, 90, 91, 111, 125, 153, 186, 187, 201, 218, 235, 257, 258], "makecolorspin": 45, "gbr": 45, "brg": 45, "testabl": 45, "makelineargamma": 45, "gamut": [45, 153], "term": [45, 91], "makesrgbgamma": 45, "refcntgreaterthan": [45, 50, 229, 239], "skdata": [45, 196], "toprofil": 45, "toxyzd50": 45, "toxyzd50hash": 45, "veri": [45, 157, 193, 196], "risk": 45, "collis": 45, "gabcdef": 45, "transferfnhash": 45, "writetomemori": [45, 157, 188, 196], "krgb_888x_colortyp": 46, "krgba_1010102_colortyp": 46, "kbgra_1010102_colortyp": 46, "krgb_101010x_colortyp": 46, "kbgr_101010x_colortyp": 46, "grayscal": [46, 119, 121, 257], "level": [46, 52, 63, 87, 90, 98, 125, 145, 185, 256], "krgba_f16norm_colortyp": 46, "64": [46, 92, 113, 135, 185, 257], "krgba_f32_colortyp": 46, "128": [46, 92, 256, 257], "kr8g8_unorm_colortyp": 46, "ka16_float_colortyp": 46, "kr16g16_float_colortyp": 46, "ka16_unorm_colortyp": 46, "kr16g16_unorm_colortyp": 46, "endian": [46, 237], "uint16_t": 46, "kr16g16b16a16_unorm_colortyp": 46, "geometr": [47, 141], "ala": 47, "thought": [47, 141], "variant": [47, 125, 218], "wai": [47, 130, 254, 256], "kunion": 47, "kreversediffer": 47, "klast": [47, 86, 93, 119, 120, 125, 128, 248, 249], "sharp": [48, 153, 188, 257], "treatment": [48, 257], "phase": [49, 164], "dash": [49, 153, 164, 170, 171, 172], "off": [49, 125, 151, 171], "55": 49, "85": 49, "would": [49, 130, 151, 180, 237], "becaus": [49, 87, 90], "30": [49, 86, 257, 258], "mod": [49, 164], "life": [50, 65], "dataref": 50, "eventu": [50, 209], "makefromfilenam": [50, 125, 257], "file": [50, 52, 58, 72, 125, 144, 151, 209, 210, 211, 212, 213, 237, 254, 256], "makesubset": [50, 125], "makeuniniti": 50, "writable_data": 50, "makewithcopi": [50, 125], "makewithoutcopi": 50, "outliv": 50, "suitabl": [50, 218], "buf": 50, "cast": [50, 123, 157, 167, 186], "copyrang": 50, "clamp": [50, 134, 228, 257], "memcmp": 50, "isempti": [50, 123, 124, 135, 157, 188, 193, 196, 208, 214], "WITH": 50, "refcnt": [50, 63, 153, 182], "precaut": 50, "seglength": 51, "seedassist": 51, "break": 51, "randomli": [51, 257], "endpoint": 51, "deviat": [51, 139], "seed": [51, 180], "random": 51, "want": [51, 53, 195, 204, 215, 218, 256, 257], "behaviour": 51, "high": [52, 125, 256], "doc": 52, "draw_my_cont": 52, "endpag": 52, "syntax": 52, "filewstream": [52, 55, 146, 201, 243, 254], "makedocu": [52, 149, 254], "480": [52, 201, 218, 254], "640": [52, 201, 218, 254, 257], "trust": 52, "go": [52, 87, 90, 195], "longer": [52, 87, 90, 125, 204, 218], "automat": [52, 125], "anonym": 52, "namespac": 52, "pyautodocumentpag": 52, "id": [53, 87, 90, 96, 100, 101, 125, 149, 152, 232, 237], "whenev": 53, "savelevel": 53, "extern": [53, 218, 244, 251, 256], "presum": 53, "render": [53, 83, 87, 90, 104, 134, 141, 151, 157, 180, 202, 218, 225, 229, 254], "thing": 53, "well": [53, 111, 125, 170, 181, 256], "notifydrawingchang": 53, "newpicturesnapshot": [53, 182], "sizeofpackeduint": [55, 59, 146, 243], "byteswritten": [55, 59, 146, 243], "wstream": [55, 59, 146, 149, 157, 201], "copyto": 55, "copytoandreset": 55, "detachasdata": 55, "detachasstream": 55, "streamasset": [55, 58, 144, 209, 211, 212, 213], "reader": 55, "reimplement": [55, 58, 59, 144, 146, 209, 210, 211, 212, 213, 243], "nullwstream": [55, 59, 243], "newlin": [55, 59, 146, 243], "padtoalign4": 55, "prependtoandreset": 55, "prepend": [55, 214], "write16": [55, 59, 146, 243], "write32": [55, 59, 146, 243], "write8": [55, 59, 146, 243], "writebigdecastext": [55, 59, 146, 243], "mindigit": [55, 59, 146, 214, 243], "writebool": [55, 59, 146, 243], "writedecastext": [55, 59, 146, 243], "writehexastext": [55, 59, 146, 243], "writepackeduint": [55, 59, 146, 243], "writescalar": [55, 59, 146, 243], "writescalarastext": [55, 59, 146, 243], "writestream": [55, 59, 146, 243], "writetext": [55, 59, 146, 243], "writetoandreset": 55, "writetostream": 55, "kbmp": [56, 125], "kgif": [56, 125], "kico": [56, 125], "kjpeg": [56, 125], "kpng": [56, 125, 254, 256], "kwbmp": 56, "kpkm": 56, "kktx": 56, "kastc": 56, "kdng": 56, "kheif": 56, "www": [57, 180], "org": [57, 117, 180], "exif2": 57, "ktopleft_encodedorigin": [57, 244], "ktopright_encodedorigin": 57, "kbottomright_encodedorigin": 57, "kbottomleft_encodedorigin": 57, "klefttop_encodedorigin": 57, "krighttop_encodedorigin": 57, "krightbottom_encodedorigin": 57, "kleftbottom_encodedorigin": 57, "kdefault_encodedorigin": 57, "klast_encodedorigin": 57, "makefromfil": [58, 72, 144, 209, 210, 211, 212, 213, 237], "skstreamasset": [58, 144, 209, 210, 211, 212, 213], "duplic": [58, 144, 209, 210, 211, 212, 213, 258], "streamseek": [58, 144, 209, 210, 211, 212], "fork": [58, 144, 209, 210, 211, 212, 213], "getlength": [58, 144, 175, 209, 210, 211, 212, 213], "memorystream": [58, 209, 210, 211, 212, 213], "getmemorybas": [58, 144, 209, 210, 211, 212, 213], "streammemori": [58, 144, 209, 210, 212, 213], "getposit": [58, 144, 209, 210, 211, 212, 213], "haslength": [58, 144, 209, 210, 211, 212, 213], "hasposit": [58, 144, 209, 210, 211, 212, 213], "isatend": [58, 144, 209, 210, 211, 212, 213], "earli": [58, 144, 209, 210, 211, 212, 213], "late": [58, 144, 209, 210, 211, 212, 213], "unsuccess": [58, 144, 209, 210, 211, 212, 213], "isvalid": [58, 59, 82, 83, 85, 119, 125, 157, 188, 218, 224, 248, 251], "seek": [58, 125, 144, 209, 210, 211, 212, 213], "peek": [58, 144, 161, 209, 210, 211, 212, 213], "min": [58, 75, 141, 144, 209, 210, 211, 212, 213, 228, 257], "peekabl": [58, 144, 209, 210, 211, 212, 213], "regardless": [58, 87, 90, 144, 209, 210, 211, 212, 213, 218], "readbool": [58, 144, 209, 210, 211, 212, 213], "readpackeduint": [58, 144, 209, 210, 211, 212, 213], "reads16": [58, 144, 209, 210, 211, 212, 213], "reads32": [58, 144, 209, 210, 211, 212, 213], "reads8": [58, 144, 209, 210, 211, 212, 213], "readscalar": [58, 144, 209, 210, 211, 212, 213], "readu16": [58, 144, 209, 210, 211, 212, 213], "readu32": [58, 144, 209, 210, 211, 212, 213], "readu8": [58, 144, 209, 210, 211, 212, 213], "streamrewind": [58, 144, 209, 210, 211, 213], "fsync": 59, "dynamicmemorywstream": [59, 146, 243], "knearest": 60, "nearest": [60, 125, 185, 235], "neighbor": [60, 125, 185], "klinear": [60, 218, 223], "interpor": 60, "2x2": 60, "bilinear": 60, "flatten": 61, "transport": 61, "typograph": 63, "scalex": [63, 141], "skewx": [63, 141], "emul": 63, "condens": 63, "expand": [63, 246], "obliqu": 63, "shear": 63, "counttext": 63, "kutf8": [63, 229, 232, 233], "kutf16": [63, 229, 233], "kutf32": [63, 229, 233], "unicod": [63, 237], "codepoint": 63, "dump": [63, 141, 157, 188, 193], "skdebugf": 63, "aid": 63, "retriev": [63, 87, 90, 104, 125, 135, 153, 218, 244], "getedg": 63, "gethint": 63, "fonthint": 63, "outlin": [63, 153, 157, 196], "adjust": [63, 123, 153, 188, 237], "getmetr": 63, "skfontmetr": 63, "fontmetr": 63, "getpath": 63, "glyphid": [63, 237], "degener": [63, 141, 157, 160, 187], "getpo": 63, "getscalex": [63, 141], "getsiz": 63, "getskewx": [63, 141], "getspac": 63, "recommend": [63, 75, 254], "metric": [63, 70, 71, 125, 157, 232], "descent": 63, "ascent": 63, "lead": 63, "gettypefac": 63, "previous": [63, 87, 90, 153, 181, 237, 256], "getwidth": [63, 215], "getwidthsbound": 63, "getxpo": 63, "isbaselinesnap": 63, "baselin": [63, 70, 232], "snap": [63, 182], "isembeddedbitmap": 63, "engin": [63, 225], "isembolden": 63, "isforceautohint": 63, "freetyp": 63, "islinearmetr": 63, "linearli": [63, 87, 90], "scalabl": 63, "issubpixel": 63, "sub": [63, 218, 247], "makewiths": 63, "infinit": [63, 188, 193], "nan": [63, 141, 186, 193, 235], "measuretext": [63, 257], "reftypefac": 63, "setbaselinesnap": 63, "baselinesnap": 63, "setedg": 63, "setembeddedbitmap": 63, "embeddedbitmap": 63, "setembolden": 63, "embolden": 63, "setforceautohint": 63, "forceautohint": 63, "sethint": 63, "hintinglevel": 63, "setlinearmetr": 63, "linearmetr": 63, "setscalex": [63, 141], "setsiz": 63, "textsiz": [63, 237], "setskewx": [63, 141], "setsubpixel": 63, "settypefac": 63, "tf": 63, "texttoglyph": [63, 257], "unichartoglyph": [63, 237], "uni": 63, "unicharstoglyph": [63, 237], "kalia": [63, 64], "kantialia": [63, 64], "ksubpixelantialia": [63, 64], "getcollectionindex": 65, "getvariationdesignposit": [65, 237], "variationposit": [65, 237], "setcollectionindex": 65, "collectionindex": 65, "ttc": [65, 72], "dfont": 65, "cff": 65, "cid": 65, "pfr": 65, "t42": 65, "t1": 65, "fon": 65, "collect": [65, 153], "setvariationdesignposit": 65, "coordinatecount": [66, 237], "constructor": [68, 111, 125, 141, 157, 196, 197, 200, 256], "append": [68, 157, 158, 167, 196, 214], "item": 68, "l": [68, 123, 141, 193], "pop": 68, "knone": [69, 109, 125, 128], "kslight": 69, "knormal": [69, 235, 236], "kfull": 69, "consist": [70, 135, 157, 229], "hasstrikeoutposit": 70, "strikeout": [70, 71], "underlin": [70, 71], "hasstrikeoutthick": 70, "hasunderlineposit": 70, "hasunderlinethick": 70, "fascent": 70, "favgcharwidth": 70, "averag": [70, 141, 157, 193], "unknown": [70, 141, 183], "fbottom": [70, 123, 141, 188, 193], "greatest": 70, "below": [70, 228], "fcapheight": 70, "letter": 70, "fdescent": 70, "fflag": 70, "fontmetricsflag": 70, "flead": 70, "fmaxcharwidth": 70, "fstrikeoutposit": [70, 71], "fstrikeoutthick": [70, 71], "ftop": [70, 123, 141, 188, 193], "funderlineposit": [70, 71], "funderlinethick": [70, 71], "fxheight": 70, "fxmax": 70, "fxmin": 70, "kstrikeoutpositionisvalid_flag": [70, 71], "kstrikeoutthicknessisvalid_flag": [70, 71], "kunderlinepositionisvalid_flag": [70, 71], "kunderlinethicknessisvalid_flag": [70, 71], "certain": 71, "print": [72, 122, 123, 157, 160, 186, 187, 193, 229, 230], "familynam": [72, 237], "matchfamilystyl": 72, "fontstyl": [72, 80, 237], "new_custom_empti": 72, "refdefault": 72, "countfamili": 72, "createstyleset": 72, "fontstyleset": 72, "getfamilynam": [72, 237], "legacymaketypefac": 72, "ttcindex": 72, "recogn": [72, 125, 157], "filenam": 72, "matchfamili": 72, "famili": [72, 111, 237], "hidden": [72, 75, 141], "auto": 72, "activ": [72, 104, 153, 182], "good": [72, 87, 90], "matchfamilystylecharact": 72, "bcp47": 72, "iso": 72, "639": 72, "15924": 72, "3166": 72, "fine": 72, "here": [72, 81, 180, 218, 254], "signific": 72, "bcp47count": 72, "ishidden": 75, "sethidden": 75, "def": [75, 254, 257], "max": [75, 134, 141, 157, 228, 257], "tag": [75, 125, 151, 237], "identifi": [75, 125, 157, 181, 218, 229], "weight": [75, 76, 157, 160, 161, 167, 257], "slant": [75, 76], "ital": [75, 76], "boldital": 76, "kblack_weight": [76, 78], "900": [76, 78], "kbold_weight": [76, 78], "700": [76, 78], "kcondensed_width": [76, 79], "kexpanded_width": [76, 79], "kextrablack_weight": [76, 78], "1000": [76, 78], "kextrabold_weight": [76, 78], "800": [76, 78], "kextracondensed_width": [76, 79], "kextraexpanded_width": [76, 79], "kextralight_weight": [76, 78], "200": [76, 78, 254], "kinvisible_weight": [76, 78], "kitalic_sl": [76, 77], "klight_weight": [76, 78], "300": [76, 78], "kmedium_weight": [76, 78], "500": [76, 78], "knormal_weight": [76, 78], "400": [76, 78], "knormal_width": [76, 79], "koblique_sl": [76, 77], "ksemibold_weight": [76, 78], "600": [76, 78], "ksemicondensed_width": [76, 79], "ksemiexpanded_width": [76, 79], "kthin_weight": [76, 78], "kultracondensed_width": [76, 79], "kultraexpanded_width": [76, 79], "kupright_sl": [76, 77], "createempti": 80, "createtypefac": 80, "getstyl": [80, 153, 215], "matchstyl": 80, "pattern": [80, 157, 171, 172, 188, 193, 257], "3d": [81, 87, 89, 90, 97, 104, 187, 218, 253], "ganesh": [81, 254], "kopengl": [81, 87, 90], "kvulkan": [81, 253], "kmetal": [81, 253], "kdirect3d": 81, "kmock": [81, 253], "mock": [81, 83], "backend": [81, 82, 83, 85, 87, 89, 90, 91, 92, 97, 104, 125, 218, 254], "unit": [81, 87, 90, 149, 186, 187, 237], "overhead": 81, "kopengl_grbackend": 81, "grbackend": 81, "who": [81, 130, 151, 182], "referenc": [81, 125, 153, 181, 185, 237, 257], "makegl": [82, 87, 90, 254], "makemock": [82, 87, 90], "grcolortyp": [82, 100, 101], "compress": [82, 87, 90, 125, 141, 191, 256], "sktexturecompressiontyp": [82, 87, 90, 101], "isstencilformat": 82, "makevk": 82, "vkformat": 82, "willusedrmformatmodifi": 82, "ycbcrinfo": 82, "skgpu": [82, 85, 87, 90, 125, 218], "vulkanycbcrconversioninfo": 82, "asglformat": 82, "grglformat": 82, "asmockcolortyp": 82, "asmockcompressiontyp": 82, "asvkformat": 82, "grbackendapi": [82, 83, 85, 87, 89, 90, 97, 104], "channelmask": 82, "getvkycbcrconversioninfo": 82, "maketexture2d": 82, "texturetyp": 82, "grtexturetyp": 82, "samplecnt": [83, 218, 254], "stencilbit": [83, 254], "glinfo": [83, 85], "grglframebufferinfo": [83, 254], "vkinfo": [83, 85], "grvkimageinfo": [83, 85, 218], "mockinfo": [83, 85], "grmockrendertargetinfo": 83, "getbackendformat": [83, 85, 100, 101], "grbackendformat": [83, 85, 87, 90, 100, 101, 104, 218, 224], "getglframebufferinfo": 83, "gl": [83, 87, 90, 91, 92, 141, 218, 254], "snapshot": [83, 167], "getmockrendertargetinfo": 83, "grmocktextureinfo": [83, 85], "getvkimageinfo": [83, 85], "fimagelayout": 83, "layout": [83, 85, 87, 90, 218], "isframebufferonli": 83, "isprotect": [83, 85, 87, 90, 125, 218], "setvkimagelayout": [83, 85], "vkimagelayout": [83, 85, 87, 90], "anytim": [83, 149, 182, 257], "vkimag": [83, 87, 90, 218], "captur": [83, 218], "notifi": [83, 87, 90, 91, 218], "initvulkan": 84, "semaphor": [84, 87, 90, 91, 125, 218], "isiniti": 84, "vksemaphor": 84, "mipmap": [85, 87, 90, 125], "grmipmap": [85, 87, 90, 125], "grgltextureinfo": 85, "getgltextureinfo": 85, "getmocktextureinfo": 85, "gltextureparametersmodifi": 85, "hasmipmap": [85, 125], "issametextur": 85, "setmutablest": 85, "mutabletexturest": [85, 87, 90, 218], "kunknown": [86, 93, 183, 244, 245, 247], "kalpha_8": 86, "kbgr_565": 86, "kabgr_4444": 86, "krgba_8888": 86, "krgba_8888_srgb": 86, "krgb_888x": 86, "krg_88": 86, "kbgra_8888": 86, "krgba_1010102": 86, "kgray_8": 86, "kalpha_f16": 86, "krgba_f16": 86, "krgba_f16_clamp": 86, "krgba_f32": 86, "kalpha_16": 86, "krg_1616": 86, "krg_f16": 86, "krgba_16161616": 86, "kalpha_8xxx": 86, "kalpha_f32xxx": 86, "kgray_8xxx": 86, "krgb_888": 86, "kr_8": 86, "kr_16": 86, "kr_f16": 86, "kgray_f16": 86, "grdirectcontext": [87, 89, 91, 97, 104, 125, 254], "computeimages": [87, 90], "skimag": [87, 90, 125, 145], "usenextpow2": [87, 90], "grglinterfac": [87, 90], "grcontextopt": [87, 90], "context": [87, 89, 90, 92, 97, 104, 117, 125, 218, 229, 254, 256], "grglmakenativeinterfac": [87, 90], "mockopt": [87, 90], "grmockopt": [87, 90], "makevulkan": [87, 90], "backendcontext": [87, 90, 111], "grvkbackendcontext": [87, 90], "vkqueue": [87, 90], "vkdevic": [87, 90, 111], "vkinstanc": [87, 90], "kept": [87, 90], "aliv": [87, 90, 218], "destroi": [87, 90, 111, 218], "abandoncontext": [87, 90, 254], "abandon": [87, 90, 104, 218], "resourc": [87, 90, 125, 256, 257], "assum": [87, 90, 125, 135, 138, 153, 248, 254], "usabl": [87, 90], "you": [87, 90, 121, 215, 254, 256, 257], "thu": [87, 90, 123, 172, 218, 256], "now": [87, 90, 157, 257], "further": [87, 90, 218], "gotten": [87, 90], "unrecoverarbl": [87, 90], "ve": [87, 90], "vk_error_device_lost": [87, 90], "asdirectcontext": [87, 89, 90, 97, 104], "grcontext_bas": [87, 90, 97, 104], "downcast": [87, 89, 90, 97, 104], "checkasyncworkcomplet": [87, 90], "asynchron": [87, 90, 125, 218], "relat": [87, 90, 229, 254], "callback": [87, 90, 181, 218], "colortypesupportedasimag": [87, 90, 104], "colortypesupportedassurfac": [87, 90, 104], "msaa": [87, 90, 104, 218], "maxsurfacesamplecountforcolortyp": [87, 90, 104], "compressedbackendformat": [87, 90, 125], "compressiontyp": [87, 90, 101, 125], "createcompressedsbackendtextur": [87, 90], "createbackendtextur": [87, 90, 104], "backendformat": [87, 90, 224], "grrender": [87, 90, 104], "grprotect": [87, 90, 125], "view": [87, 90], "grbackendtextur": [87, 90, 115, 125, 218], "vk_image_layout_undefin": [87, 90], "finishedproc": [87, 90, 91, 218], "upload": [87, 90, 125], "submit": [87, 90, 91, 125, 157, 193, 218], "send": [87, 90, 91, 201], "vk_image_layout_shader_read_only_optim": [87, 90], "srcdata": [87, 90], "defaultbackendformat": [87, 90, 104], "numlevel": [87, 90], "miplevel": [87, 90], "pleas": [87, 90, 218], "skmipmap": [87, 90], "computelevels": [87, 90], "computelevelcount": [87, 90], "createcompressedbackendtextur": [87, 90], "surfacecharacter": [87, 90, 104, 218], "deletebackendtextur": [87, 90], "grflushinfo": [87, 90, 125, 218], "grsemaphoressubmit": [87, 90, 125, 218], "sent": [87, 90, 91, 151, 181, 218], "glflush": [87, 90, 218], "submiss": [87, 90, 91, 218], "occur": [87, 90, 130, 218, 223, 237], "metal": [87, 90, 218], "d3d": [87, 90, 218], "dawn": [87, 90, 218], "grbackendsemaphor": [87, 90, 91, 218], "wait": [87, 90, 91, 218], "signal": [87, 90, 91, 182, 218], "regardleess": [87, 90, 218], "emphas": [87, 90, 218], "flushandsubmit": [87, 90, 125, 218, 254], "grsynccpu": [87, 90, 218], "freegpuresourc": [87, 90], "pressur": [87, 90], "getresourcecachelimit": [87, 90], "getresourcecachepurgeablebyt": [87, 90], "consum": [87, 90], "purgeabl": [87, 90], "unlock": [87, 90], "getresourcecacheusag": [87, 90], "resourcecount": [87, 90], "maxresourcebyt": [87, 90], "usag": [87, 90, 125, 244], "held": [87, 90, 111], "video": [87, 90], "maxrendertargets": [87, 90, 104], "maxtextures": [87, 90, 104], "glgeterror": [87, 90], "swallow": [87, 90], "gl_out_of_memori": [87, 90], "therefor": [87, 90, 91, 182], "hide": [87, 90], "advis": [87, 90], "fskipglerrorcheck": [87, 90], "That": [87, 90, 254], "ever": [87, 90], "vk_error_out_of_host_memori": [87, 90], "vk_error_out_of_device_memori": [87, 90], "precompileshad": [87, 90], "purgeresourcesnotusedinm": [87, 90], "msnotus": [87, 90], "datetim": [87, 90], "timedelta": [87, 90], "purgeunlockedresourc": [87, 90], "maxbytestopurg": [87, 90], "preferscratchresourc": [87, 90], "purg": [87, 90, 125], "reach": [87, 90], "polici": [87, 90], "lru": [87, 90], "overridden": [87, 90], "prefer": [87, 90], "scratch": [87, 90], "opt": [87, 90], "grpurgeresourceopt": [87, 90], "intend": [87, 90, 244], "app": [87, 90], "suspend": [87, 90], "kscratchresourcesonli": [87, 90, 103], "enforc": [87, 90, 180], "budget": [87, 90, 125, 218, 254], "releaseresourcesandabandoncontext": [87, 90], "yet": [87, 90, 134], "cleanup": [87, 90], "perhap": [87, 90], "ed": [87, 90, 237], "elsewher": [87, 90], "resetcontext": [87, 90], "4294967295": [87, 90], "whatev": [87, 90, 141, 237, 256], "resend": [87, 90], "shouldn": [87, 90], "frequent": [87, 90], "resetgltexturebind": [87, 90], "unmodifi": [87, 90, 125, 157, 196], "twice": [87, 90, 157, 229, 237], "interven": [87, 90, 175], "setbackendrendertargetst": [87, 90], "grbackendrendertarget": [87, 90, 218, 254], "mutablest": [87, 90], "previousst": [87, 90], "setbackendtexturest": [87, 90], "updat": [87, 90, 141, 157, 182, 250], "rendertarget": [87, 90], "grbackendsurfacemutablest": [87, 90, 218], "awar": [87, 90], "updatebackendtextur": [87, 90], "queuefamilyindex": [87, 90, 111], "vk_queue_family_ignor": [87, 90, 115], "tell": [87, 90], "setresourcecachelimit": [87, 90], "storevkpipelinecachedata": [87, 90], "outstand": [87, 90, 125], "un": [87, 90], "synchron": [87, 90, 209, 218], "try": [87, 90, 121, 185, 209, 254], "synccpu": [87, 90], "supportsdistancefieldtext": [87, 90], "threadsafeproxi": [87, 89, 90, 97, 104], "grcontextthreadsafeproxi": [87, 89, 90, 97, 104], "backendtextur": [87, 90, 125, 218], "mip": [87, 90, 98, 125, 145, 185, 218], "deletesemaphoresafterwait": [87, 90], "grcontext": [90, 92, 125, 218], "fnumsemaphor": 91, "themselv": [91, 182], "soon": 91, "proc": [91, 125, 229], "submittedproc": 91, "possibli": [91, 141, 175, 218, 249], "reattempt": 91, "realli": 91, "main": 91, "d": [92, 141, 153], "krendertarget_grglbackendst": 92, "ktexturebinding_grglbackendst": 92, "kview_grglbackendst": 92, "kblend_grglbackendst": 92, "kmsaaenable_grglbackendst": 92, "kvertex_grglbackendst": 92, "kstencil_grglbackendst": 92, "kpixelstore_grglbackendst": 92, "kprogram_grglbackendst": 92, "kfixedfunction_grglbackendst": 92, "kmisc_grglbackendst": 92, "kall_grglbackendst": 92, "65535": 92, "512": [92, 180, 256, 257], "1024": 92, "256": [92, 256, 257], "krgba8": 93, "kr8": 93, "kalpha8": 93, "kluminance8": 93, "kbgra8": 93, "krgb565": 93, "krgba16f": 93, "kr16f": 93, "krgb8": 93, "krg8": 93, "krgb10_a2": 93, "krgba4": 93, "ksrgb8_alpha8": 93, "kcompressed_etc1_rgb8": 93, "kcompressed_rgb8_etc2": 93, "kcompressed_rgb8_bc1": 93, "kcompressed_rgba8_bc1": 93, "kr16": 93, "krg16": 93, "krgba16": 93, "krg16f": 93, "kluminance16f": 93, "fboid": 94, "ffboid": 94, "fformat": [94, 96], "fid": 96, "ftarget": 96, "sai": 98, "kallresourc": 103, "disconnect": 104, "statu": 104, "transit": [104, 111, 153, 218], "ktopleft_grsurfaceorigin": 107, "kbottomleft_grsurfaceorigin": [107, 218, 254], "k2d": 109, "krectangl": 109, "kextern": 109, "grvkgpu": 111, "assumpt": 111, "queue": [111, 115, 125, 218], "commandpool": 111, "grbackendobject": 111, "hand": [111, 130, 138], "u": [111, 244, 245, 247, 249, 252], "manual": 111, "kext_debug_report_grvkextensionflag": 113, "knv_glsl_shader_grvkextensionflag": 113, "kkhr_surface_grvkextensionflag": 113, "kkhr_swapchain_grvkextensionflag": 113, "kkhr_win32_surface_grvkextensionflag": 113, "kkhr_android_surface_grvkextensionflag": 113, "kkhr_xcb_surface_grvkextensionflag": 113, "kgeometryshader_grvkfeatureflag": 114, "kdualsrcblend_grvkfeatureflag": 114, "ksamplerateshading_grvkfeatureflag": 114, "grbackendrendendertarget": 115, "fcurrentqueuefamili": 115, "vk_queue_family_extern": 115, "vk_queue_family_foreign_ext": 115, "fsharingmod": 115, "vk_sharing_mode_exclus": 115, "falloc": 115, "flevelcount": 115, "fprotect": 115, "fycbcrconversioninfo": 115, "makelinear": [117, 257], "gradient": [117, 153, 204], "scalar": [117, 141, 157, 186, 188, 193, 229, 232], "evenli": 117, "intermedi": [117, 218], "tile": [117, 125, 134, 180, 181, 204, 218], "makeradi": [117, 257], "radial": 117, "makesweep": [117, 257], "endangl": 117, "conic": [117, 157, 160, 161, 167], "html": [117, 157, 167, 180], "w3": [117, 180], "html5": 117, "2dcontext": 117, "dom": 117, "createradialgradi": 117, "maketwopointcon": [117, 257], "startradiu": [117, 257], "endradiu": [117, 257], "kinterpolatecolorsinpremul_flag": [117, 118], "highcontrastfilt": 119, "low": [119, 121, 125, 185, 256], "vision": [119, 121], "invertstyl": 119, "fcontrast": 119, "fgrayscal": 119, "finvertstyl": 119, "kinvertbright": [119, 120], "kinvertlight": [119, 120], "knoinvert": [119, 120], "highcontrastconfig": 121, "hsl": 121, "iszero": [122, 124, 186, 208], "180": [123, 157, 167, 193, 256, 257], "120": [123, 125, 193, 257, 258], "conveni": [123, 185, 193], "special": [123, 193, 257], "makeltrb": [123, 193], "sort": [123, 188, 193, 197, 198, 209], "fleft": [123, 141, 188, 193], "fright": [123, 141, 157, 188, 193], "makes": [123, 193], "makewh": [123, 135, 193], "makexywh": [123, 193, 257], "dl": [123, 141], "dt": 123, "dr": 123, "db": 123, "narrow": [123, 186, 193], "widen": 123, "shrink": 123, "lengthen": 123, "containsnoemptycheck": 123, "span": [123, 186, 188, 193, 200], "sign": [123, 135, 174, 186], "height64": 123, "safer": 123, "overflow": [123, 141, 193, 244, 248], "calcul": [123, 134, 235], "int64_t": 123, "inset": [123, 134, 188, 193], "wider": [123, 193], "shorter": [123, 193], "taller": [123, 193], "isempty64": 123, "width64": 123, "expans": [123, 193], "makeinset": [123, 193], "symmetr": [123, 193], "makeoffset": [123, 188, 193], "upward": [123, 193], "downward": [123, 193], "makeoutset": [123, 193], "makesort": [123, 193], "delta": [123, 193], "offsetto": [123, 193], "newx": [123, 193], "newi": [123, 193], "setempti": [123, 124, 188, 193, 196, 208], "setltrb": [123, 193], "setwh": [123, 193], "setxywh": [123, 193], "topleft": 123, "iff": [124, 204, 208], "yuv_colorspac": 125, "heif": 125, "ico": 125, "jpeg": [125, 151], "wbmp": 125, "webp": 125, "resiz": [125, 214], "jpg": [125, 257], "import": [125, 254, 256, 257], "fromarrai": [125, 256], "frombyt": [125, 256], "makebackendtexturefromimag": 125, "singli": 125, "makecrosscontextfrompixmap": 125, "buildmip": 125, "limittomaxtextures": 125, "group": 125, "dstcolorspac": 125, "downscal": 125, "makefromadoptedtextur": 125, "grrecordingcontext": [125, 218], "grsurfaceorigin": [125, 218], "makefrombitmap": 125, "shareabl": 125, "makefromcompressedtextur": 125, "character": [125, 218], "natur": 125, "etc1": 125, "usual": [125, 130, 180], "seen": 125, "makefromencod": [125, 257], "deferr": 125, "re": [125, 175], "makefrompictur": 125, "skpictur": [125, 134], "bitdepth": 125, "ku8": [125, 126], "makefromrast": 125, "makefromtextur": 125, "makefromyuvapixmap": 125, "imagecolorspac": 125, "yuvainfo": [125, 248, 250, 251], "yuva": [125, 245, 248], "silent": 125, "makerastercopi": 125, "makerasterdata": 125, "makerasterfromcompress": 125, "decompress": 125, "maketexturefromcompress": 125, "doesn": 125, "drm": 125, "protect": [125, 218], "aslegacybitmap": 125, "legacybitmapmod": 125, "kro_legacybitmapmod": [125, 129], "capabl": [125, 218], "receiv": [125, 134, 157, 181, 209, 254], "alphattyp": 125, "rais": [125, 181, 254], "encodetodata": 125, "qualiti": [125, 134, 151, 218], "sk_encode_jpeg": 125, "sk_encode_png": 125, "sk_encode_webp": 125, "sk_build_for_mac": 125, "sk_build_for_io": 125, "trade": [125, 151], "miss": 125, "arg1": [125, 175, 202], "promis": 125, "cull": [125, 181, 182], "getbackendtextur": [125, 218], "flushpendinggrcontextio": 125, "isalphaonli": 125, "islazygener": 125, "servic": 125, "demand": 125, "istextureback": 125, "lazi": 125, "makecolortypeandcolorspac": 125, "targetcolortyp": 125, "targetcolorspac": 125, "experiment": [125, 254], "makenontextureimag": 125, "makerasterimag": 125, "cachinghint": 125, "kallow_cachinghint": [125, 127], "retain": [125, 141, 151, 157, 218, 251], "kdisallow_cachinghint": [125, 127], "0x7f03af02ce70": 125, "taken": [125, 215], "maketextureimag": 125, "newli": [125, 149], "makewithfilt": 125, "skimagefilt": [125, 153], "clipbound": 125, "outsubset": 125, "process": [125, 134, 141, 151, 160, 181, 218], "reus": [125, 157, 232], "fp": [125, 141], "shortcut": 125, "hasattr": 125, "refencodeddata": 125, "reinterpretcolorspac": 125, "newcolorspac": 125, "0x7f03af5ae8b0": 125, "none_filterqu": [125, 185], "fastest": [125, 185], "klow_filterqu": [125, 185], "bilerp": [125, 185], "kmedium_filterqu": [125, 153, 185], "khigh_filterqu": [125, 185], "slowest": [125, 185], "bicub": [125, 185], "wb": 125, "f": [125, 141, 257], "scalepixel": [125, 185], "0x7f03af5b2470": 125, "uniqueid": [125, 181, 229, 237, 239], "withdefaultmipmap": 125, "attach": [125, 157, 254], "kbc1_rgb8_unorm": [125, 128], "kbc1_rgba8_unorm": [125, 128], "ketc2_rgb8_unorm": [125, 128], "kf16": [125, 126], "offscreen": [130, 256], "blur": [130, 134, 139, 153], "ax": [130, 134, 141, 157, 167, 191, 193, 196, 237], "achiev": 130, "unrot": 130, "easili": 130, "asacolorfilt": 130, "ascolorfilt": 130, "cancomputefastbound": [130, 153], "computefastbound": [130, 153], "countinput": 130, "filterbound": 130, "mapdirect": 130, "inputrect": 130, "forward": 130, "backward": 130, "dag": [130, 134], "kforward_mapdirect": [130, 132], "touch": [130, 157, 167], "kreverse_mapdirect": [130, 132], "temp": 130, "real": 130, "answer": [130, 135], "krevers": 130, "kforward": 130, "incorrect": [130, 135, 193], "getinput": 130, "connect": [130, 155, 157, 167, 256, 258], "iscolorfilternod": 130, "makewithlocalmatrix": [130, 204], "arithmet": [134, 256], "k1": 134, "k2": 134, "k3": 134, "k4": 134, "enforcepmcolor": 134, "foreground": 134, "croprect": 134, "third": [134, 157, 235, 258], "crop": [134, 181], "sigmax": 134, "sigmai": 134, "kdecal": [134, 234], "sigma": [134, 139], "kernel": 134, "gaussian": [134, 139], "todo": 134, "michaelludwig": 134, "kmirror": [134, 234], "cf": 134, "evalu": 134, "dilat": 134, "radiusx": 134, "radiusi": 134, "displacementmap": 134, "xchannelselector": 134, "colorchannel": 134, "ychannelselector": 134, "displac": [134, 257], "xchannel": 134, "ychannel": 134, "selector": [134, 157], "extract": [134, 153], "distantlitdiffus": 134, "point3": [134, 141], "lightcolor": 134, "surfacescal": 134, "kd": 134, "diffus": 134, "illumin": 134, "distant": 134, "light": [134, 257], "distantlitspecular": 134, "k": [134, 141, 157, 257], "shini": 134, "specular": 134, "expon": 134, "dropshadow": [134, 257], "drop": 134, "shadow": [134, 157], "dropshadowonli": 134, "exactli": [134, 157, 180, 193, 256], "manner": 134, "erod": 134, "srcrect": [134, 218], "dstrect": 134, "0x7f03af5b27f0": 134, "portion": [134, 141, 193], "0x7f03af6ea5f0": 134, "magnifi": 134, "zoomamount": 134, "mimic": 134, "zoom": 134, "len": [134, 257], "matrixconvolut": 134, "kernels": 134, "gain": 134, "bia": 134, "kerneloffset": 134, "convolvealpha": 134, "nxm": 134, "sharpen": 134, "convolut": 134, "convolv": 134, "matrixtransform": 134, "come": 134, "merg": 134, "pic": 134, "targetrect": 134, "skirect": 134, "pointlitdiffus": 134, "pointlitspecular": 134, "spotlitdiffus": 134, "falloffexpon": 134, "cutoffangl": 134, "spot": 134, "toward": [134, 157], "falloff": 134, "spotlitspecular": 134, "composit": 134, "bytesizeoverflow": 135, "bytes": 135, "computeminbytes": 135, "colorinfo": 135, "makea8": 135, "maken32": 135, "whichev": 135, "makes32": 135, "makeunknown": 135, "dimensionless": [135, 196], "computeoffset": 135, "makedimens": 135, "newsiz": 135, "newdimens": 135, "newwidth": 135, "newheight": 135, "minrowbytes64": 135, "unsign": [135, 185, 249], "validrowbyt": 135, "properli": 135, "luma": [137, 246], "luminancetoalpha": 137, "fecolormatrix": 137, "fold": 137, "despit": 137, "dot": [137, 186, 187], "lumin": [137, 245, 252], "agre": [137, 185, 218], "4x4": 138, "viewer": 138, "makeblur": [139, 153, 257], "blurstyl": 139, "respectctm": 139, "setident": [141, 191], "settransl": 141, "setscal": [141, 257], "setskew": 141, "setrot": 141, "set9": 141, "setal": 141, "classifi": 141, "gettyp": [141, 188], "j": [141, 247], "q": 141, "aj": 141, "cp": 141, "ak": 141, "bn": 141, "cq": 141, "al": 141, "bo": 141, "cr": 141, "dj": 141, "em": [141, 237], "dk": 141, "en": 141, "fq": 141, "eo": 141, "gj": 141, "hm": 141, "ip": 141, "gk": 141, "hn": 141, "iq": 141, "ho": 141, "ir": 141, "express": 141, "invalidmatrix": 141, "sk_scalarmax": [141, 157, 193], "makeal": 141, "transx": 141, "skewi": 141, "scalei": 141, "transi": 141, "pers0": 141, "pers1": 141, "pers2": 141, "makerecttorect": 141, "stf": 141, "scaletofit": 141, "aspect": [141, 257], "ratio": [141, 186], "rotatedeg": 141, "deg": 141, "pivot": 141, "rotaterad": 141, "rad": 141, "setaffineident": 141, "affin": 141, "matric": [141, 256], "xp": 141, "float32": 141, "asaffin": 141, "decomposescal": 141, "decompos": 141, "remaind": 141, "finit": [141, 157, 188, 193, 218], "nearli": [141, 157, 167, 186, 187], "dirtymatrixtypecach": 141, "modif": [141, 153, 180, 257], "reconstruct": [141, 157, 188, 193, 237], "kmscalex": 141, "kmskewx": 141, "kmtransx": 141, "kmskewi": 141, "kmscalei": 141, "kmtransi": 141, "kmpersp0": 141, "kmpersp1": 141, "kmpersp2": 141, "get9": 141, "nine": [141, 188], "ascend": 141, "getmaxscal": 141, "getminmaxscal": 141, "getminscal": 141, "getperspx": 141, "getperspi": 141, "With": [141, 157], "mappoint": 141, "getscalei": 141, "getskewi": 141, "gettranslatex": 141, "gettranslatei": 141, "typemask": 141, "kperspective_mask": [141, 143], "kidentity_mask": [141, 143], "ktranslate_mask": [141, 143], "kscale_mask": [141, 143], "kaffine_mask": [141, 143], "hasperspect": 141, "reciproc": 141, "isfinit": [141, 157, 186, 187, 193], "infin": [141, 186, 188, 193], "isident": 141, "isscaletransl": 141, "issimilar": 141, "tol": 141, "000244140625": 141, "uniform": 141, "collaps": 141, "alik": 141, "euclidean": [141, 186], "arm": 141, "istransl": 141, "maphomogeneouspoint": 141, "cz": 141, "ei": 141, "fz": [141, 187], "gx": 141, "hy": 141, "iz": 141, "homogen": 141, "mapradiu": 141, "ellips": [141, 157, 167], "minor": 141, "maprect": 141, "pc": [141, 157], "applyperspectiveclip": [141, 157], "maprectscaletransl": 141, "maprecttoquad": 141, "suspect": 141, "mapvector": 141, "dhy": 141, "mapxi": 141, "normalizeperspect": 141, "categor": 141, "behav": [141, 157, 209], "rest": 141, "postconcat": 141, "postrot": 141, "co": [141, 257], "sin": [141, 257], "cj": 141, "sm": 141, "ck": 141, "sn": 141, "sj": 141, "cn": 141, "sl": 141, "upright": [141, 157], "postscal": 141, "postskew": 141, "kx": 141, "ky": 141, "posttransl": 141, "preconcat": 141, "prerot": [141, 257], "ac": 141, "bc": 141, "ec": 141, "gc": 141, "hc": 141, "prescal": 141, "preskew": 141, "pretransl": 141, "preservesaxisalign": 141, "90": [141, 157, 167, 256], "mirror": [141, 234, 257], "rectstaysrect": [141, 191], "preservesrightangl": 141, "rc": 141, "fetch": 141, "anticip": 141, "recomput": 141, "setaffin": 141, "persp0": 141, "persp1": 141, "persp2": 141, "setconcat": 141, "setperspx": 141, "v": [141, 193, 244, 245, 247, 249, 252], "proport": [141, 186], "setperspi": 141, "setpolytopoli": 141, "setrsxform": 141, "skrsxform": 141, "fssin": [141, 191], "fsco": [141, 191], "ftx": [141, 191], "fty": [141, 191], "setrecttorect": 141, "setscaletransl": 141, "tx": [141, 191], "ty": [141, 191], "setscalei": 141, "setsinco": 141, "sinvalu": 141, "cosvalu": 141, "setskewi": 141, "settranslatex": 141, "settranslatei": 141, "kascalex": 141, "kascalei": 141, "kaskewx": 141, "kaskewi": 141, "katransx": 141, "katransi": 141, "kcenter_scaletofit": [141, 142], "kend_scaletofit": [141, 142], "kfill_scaletofit": [141, 142], "kstart_scaletofit": [141, 142], "makecopi": [144, 239], "makedirect": 144, "copydata": 144, "asdata": 144, "getatpo": 144, "filestream": [144, 209, 210, 211, 212, 213], "setdata": 144, "setmemori": 144, "skiptoalign4": 144, "attachto": 145, "countlevel": 145, "builder": [147, 167, 232], "emptypath": 147, "succeed": [147, 188], "makewithcolor": 148, "knumcolor": 148, "72": [149, 257], "inch": [149, 151], "127": 149, "mm": 149, "pdfmetadata": 149, "setnodeid": [149, 152], "nodeid": [149, 152], "node": [149, 152], "appear": [149, 237], "structureelementnod": 149, "structur": [149, 151, 152, 244, 250], "tree": [149, 151, 152], "appendfloat": 150, "appendfloatarrai": 150, "appendint": 150, "appendstr": 150, "appendstringarrai": 150, "factori": 151, "fauthor": 151, "person": 151, "fcreator": 151, "conform": 151, "fencodingqu": 151, "101": 151, "percent": 151, "lossless": 151, "fkeyword": 151, "keyword": [151, 153], "comma": 151, "delin": 151, "fpdfa": 151, "xmp": 151, "uuid": 151, "intent": 151, "reproduc": 151, "featur": [151, 225], "2b": 151, "fproduc": 151, "frasterdpi": 151, "dpi": 151, "fidel": 151, "onlin": 151, "printer": 151, "fstructureelementtreeroot": 151, "semant": [151, 152], "fsubject": 151, "subject": [151, 204], "ftitl": 151, "titl": 151, "fadditionalnodeid": 152, "falt": 152, "fattribut": 152, "flang": 152, "fnodeid": 152, "ftypestr": 152, "algorithm": [153, 180, 237], "alphaf": 153, "antialia": [153, 256, 257, 258], "colorblu": [153, 256, 257, 258], "strokewidth": [153, 215, 256, 257, 258], "kstroke_styl": [153, 156, 157, 215, 217, 256, 257, 258], "0xff0000ff": [153, 257], "shallow": 153, "setxxx": 153, "0xff00ff00": 153, "lumacolorfilt": 153, "dashpatheffect": [153, 257], "strokecap": [153, 258], "kbutt_cap": [153, 154], "strokejoin": 153, "kmiter_join": [153, 155], "strokemit": 153, "extens": [153, 154], "orig": 153, "stylist": [153, 256, 257], "computefaststrokebound": 153, "docomputefastbound": 153, "overrid": [153, 204, 257], "getalpha": 153, "getcolor4f": 153, "getcolorfilt": 153, "skcolorfilt": 153, "getfillpath": 153, "skpath": [153, 157, 160, 164, 166, 170, 196, 215], "resscal": [153, 175, 215], "favor": 153, "speed": [153, 157], "hairlin": [153, 215], "getimagefilt": 153, "getmaskfilt": 153, "skmaskfilt": 153, "getpatheffect": 153, "skpatheffect": 153, "getshad": 153, "getstrokecap": 153, "getstrokejoin": 153, "getstrokemit": 153, "bevel": 153, "miter": [153, 155], "getstrokewidth": 153, "pen": [153, 256], "isantialia": 153, "antialias": 153, "isdith": 153, "smooth": 153, "issrcov": 153, "nothingtodraw": 153, "refcolorfilt": 153, "refimagefilt": 153, "refmaskfilt": 153, "refpatheffect": 153, "refshad": 153, "setargb": 153, "setalpha": 153, "setalphaf": 153, "setantialia": 153, "aa": 153, "setblendmod": [153, 256, 257], "setcolor": [153, 256, 257, 258], "setcolor4f": 153, "setcolorfilt": 153, "setdith": 153, "diter": 153, "setimagefilt": 153, "setmaskfilt": 153, "unalt": [153, 157, 158, 161], "setpatheffect": 153, "setshad": 153, "setstrokecap": [153, 258], "setstrokejoin": 153, "setstrokemit": 153, "setstrokewidth": [153, 257, 258], "setstyl": [153, 258], "kbevel_join": [153, 155], "kcapcount": 153, "kdefault_cap": [153, 154], "kdefault_join": [153, 155], "kfill_styl": [153, 156, 157, 215, 217, 256, 257], "kjoincount": 153, "klast_cap": [153, 154], "ksquare_cap": [153, 154, 258], "klast_join": [153, 155], "kround_cap": [153, 154, 258], "kround_join": [153, 155], "kstrokeandfill_styl": [153, 156, 215, 217, 258], "kstylecount": [153, 215], "verb": [157, 160, 161, 258], "figur": 157, "cartesian": 157, "bezier": 157, "lazili": 157, "convex": 157, "updateboundscach": 157, "addcircl": [157, 167, 258], "addrect": [157, 167], "60": [157, 256, 257], "70": [157, 258], "center_x": [157, 167], "center_i": [157, 167], "pathdirect": [157, 167], "kcw": [157, 167, 169], "convertconictoquad": 157, "p2": [157, 167], "pow2": 157, "quad": [157, 193, 258], "influenc": 157, "ellipt": 157, "section": 157, "hyperbol": 157, "parabol": 157, "power": 157, "iscubicdegener": 157, "p3": 157, "p4": 157, "short": [157, 237], "islinedegener": 157, "isquaddegener": 157, "conicweight": [157, 160, 161, 179], "illeg": 157, "encount": 157, "startindex": [157, 167], "isclos": [157, 167, 175], "kwind": [157, 174], "expos": [157, 196], "addarc": [157, 167], "modulo": [157, 167, 209], "dir": 157, "pathverb": [157, 258], "kmove": [157, 179, 258], "kconic": [157, 179], "kclose": [157, 179, 258], "kccw": [157, 169], "addov": [157, 167, 257], "kmove_verb": [157, 160, 163], "kconic_verb": [157, 160, 161, 163], "kclose_verb": [157, 160, 163], "centeri": [157, 193], "kcw_direct": [157, 167], "addpath": 157, "addpathmod": 157, "kappend_addpathmod": [157, 158], "kextend_addpathmod": [157, 158], "refe": 157, "renc": 157, "addpoli": 157, "addrrect": [157, 167], "attr": [157, 160], "kline_verb": [157, 160, 163], "addroundrect": 157, "approximatebytesus": [157, 181], "arcto": [157, 167], "forcemoveto": [157, 167], "x2": [157, 167], "y2": [157, 167], "tangent": [157, 164, 167, 175, 176], "parallel": [157, 167, 218, 229], "postscript": [157, 167, 237, 256], "arct": [157, 167], "xaxisrot": [157, 167], "largearc": [157, 167], "arcsiz": [157, 167], "rout": [157, 167], "opposit": [157, 167], "xy": [157, 167, 204], "computetightbound": 157, "conicto": [157, 167, 258], "kquad_verb": [157, 163], "conservativelycontainsrect": 157, "countpoint": 157, "countverb": 157, "kcubic_verb": [157, 163], "cubicto": [157, 167, 256], "x3": [157, 167], "y3": [157, 167], "dumpashex": 157, "forceclos": [157, 160, 175], "hexadecim": [157, 188, 193], "dumphex": [157, 188, 193], "getfilltyp": 157, "bug": 157, "1762": 157, "getlastpt": 157, "lastpt": 157, "getpoint": 157, "excess": 157, "getsegmentmask": 157, "segmentmask": 157, "getverb": 157, "increserv": [157, 167], "extraptcount": [157, 167], "grow": 157, "formula": 157, "point_arrai": 157, "isinterpolat": 157, "isconvex": 157, "sk_scalarinfin": [157, 186], "sk_scalarnegativeinfin": 157, "sk_scalarnan": 157, "trivial": 157, "isinversefilltyp": 157, "indefinit": 157, "kinversewind": [157, 174], "kinverseevenodd": [157, 174], "islastcontourclos": 157, "islin": 157, "isov": [157, 188], "isrrect": 157, "isrect": [157, 188, 196], "corrupt": [157, 188], "lineto": [157, 167, 257, 258], "moveto": [157, 167, 175, 179, 257, 258], "quadto": [157, 167, 258], "rarcto": 157, "rconicto": [157, 167], "dx1": 157, "dy1": 157, "dx2": 157, "dy2": 157, "stand": 157, "rcubicto": [157, 167], "dx3": 157, "dy3": 157, "rlineto": [157, 167], "rmoveto": 157, "rquadto": [157, 167], "readfrommemori": [157, 188, 196], "inconsist": 157, "concert": 157, "reverseaddpath": 157, "front": 157, "critic": 157, "setfilltyp": [157, 167], "setisvolatil": [157, 167], "temporari": 157, "setlastpt": 157, "lightweight": [157, 196], "toggleinversefilltyp": [157, 167], "instantan": 157, "avoid": [157, 186, 193], "race": 157, "condit": 157, "kconic_segmentmask": [157, 162], "kcubic_segmentmask": [157, 162], "kdone_verb": [157, 160, 161, 163], "klarge_arcs": [157, 159, 167, 168], "kline_segmentmask": [157, 162], "kquad_segmentmask": [157, 162], "ksmall_arcs": [157, 159, 167, 168], "setpath": [160, 161, 175, 196], "iscloselin": 160, "isclosedcontour": 160, "exhaust": [160, 161], "klastenum_styl": [164, 165], "kmorph_styl": [164, 165], "krotate_styl": [164, 165, 257], "ktranslate_styl": [164, 165], "stamp": [166, 257], "latic": [166, 257], "startangledeg": 167, "sweepangledeg": 167, "addpolygon": 167, "skpoint": [167, 186], "computebound": 167, "pt1": 167, "pt2": 167, "pt3": 167, "detach": 167, "extraverbcount": 167, "extra": 167, "polylineto": 167, "counter": 169, "primit": [170, 218, 256], "makesum": [170, 257], "appl": 170, "asadash": [170, 172], "dashinfo": [170, 172], "dashtyp": 170, "filterpath": 170, "stroke_rec": 170, "strokerec": 170, "cullr": 170, "rec": [170, 215], "kdash_dashtyp": [170, 172], "knone_dashtyp": [170, 172], "fcount": [171, 172], "finterv": 171, "fphase": 171, "memcpi": 172, "kevenodd": 174, "evenodd": 174, "slow": 175, "getmatrix": 175, "getposandtan": 175, "kgetposandtan_matrixflag": [175, 176], "getpostan": 175, "getseg": 175, "startd": 175, "stopd": 175, "startwithmoveto": 175, "untouch": 175, "nextcontour": 175, "kgetposition_matrixflag": [175, 176], "kgettangent_matrixflag": [175, 176], "kdifference_pathop": 177, "kintersect_pathop": 177, "kunion_pathop": 177, "inclus": [177, 235], "kxor_pathop": 177, "exclus": 177, "kreversedifference_pathop": 177, "kline_pathsegmentmask": 178, "kquad_pathsegmentmask": 178, "kconic_pathsegmentmask": 178, "kcubic_pathsegmentmask": 178, "kquad": 179, "kcubic": 179, "perlin": 180, "turbul": 180, "tileabl": 180, "nois": 180, "stitch": 180, "stitchtil": 180, "seam": [180, 234], "tr": 180, "feturbulenceel": 180, "makefractalnois": [180, 257], "basefrequencyx": 180, "basefrequencyi": 180, "numoctav": 180, "tiles": 180, "fractal": 180, "frequenc": 180, "octav": 180, "fairli": 180, "doubl": 180, "basefrequ": 180, "yield": [180, 254], "insignificantli": 180, "period": 180, "resembl": 180, "regular": 180, "unstructur": 180, "isn": [180, 251], "maketurbul": [180, 257], "whole": 181, "finishrecordingaspictur": [181, 182, 254], "recreat": [181, 229], "valueerror": 181, "makefromstream": [181, 202], "makeplacehold": 181, "placehold": 181, "intercept": [181, 229], "approximateopcount": 181, "nest": [181, 182], "fall": [181, 182], "filtermod": 181, "superset": 181, "replai": 181, "interrupt": 181, "among": [181, 229, 245], "bbh": 182, "bboxhierarchi": 182, "finishrecordingasdraw": 182, "getrecordingcanva": 182, "live": 182, "finishrecordingaspicturewithcul": 182, "overal": 182, "meant": 183, "portabl": 183, "kunknown_pixelgeometri": 183, "krgb_h_pixelgeometri": 183, "kbgr_h_pixelgeometri": 183, "krgb_v_pixelgeometri": 183, "kbgr_v_pixelgeometri": 183, "nor": 185, "creator": 185, "addr16": 185, "addr32": 185, "addr64": 185, "addr8": 185, "warn": [185, 193], "0x7f03b0b76c30": 185, "setcolorspac": 185, "writable_addr": 185, "crossproduct": [186, 187], "straight": [186, 257], "dotproduct": [186, 187], "magnitud": 186, "cosin": 186, "sqrt": 186, "skscalar": 186, "distancetoorigin": 186, "iset": 186, "promot": [186, 193], "negat": 186, "former": 186, "setab": 186, "setlength": 186, "setnorm": 186, "euclidian": 187, "makescal": [187, 257], "css": 188, "properti": [188, 218, 225], "kempty_typ": [188, 190], "makeov": [188, 256], "koval_typ": [188, 190], "makerect": 188, "makerectxi": 188, "xrad": 188, "yrad": 188, "krect_typ": [188, 190], "ksimple_typ": [188, 190], "ashex": [188, 193], "dumptostr": 188, "skstring": 188, "getsimpleradii": 188, "kninepatch_typ": [188, 190], "kcomplex_typ": [188, 190], "simpl": [188, 257], "curvatur": 188, "iscomplex": [188, 196], "isninepatch": 188, "issimpl": 188, "parma": 188, "ksizeinmemori": 188, "setninepatch": 188, "leftrad": 188, "toprad": 188, "rightrad": 188, "bottomrad": 188, "setov": 188, "setrect": [188, 196], "setrectradii": 188, "setrectxi": 188, "klasttyp": [188, 190], "klowerleft_corn": [188, 189], "klowerright_corn": [188, 189], "48": [188, 258], "kupperleft_corn": [188, 189], "kupperright_corn": [188, 189], "arbitrari": 190, "sco": 191, "ssin": 191, "makefromradian": 191, "radian": 191, "ai": 191, "toquad": [191, 193], "quqd": 191, "totristrip": 191, "unsort": 193, "makeiwh": 193, "lose": [193, 258], "asscalar": 193, "centerx": 193, "midpoint": 193, "sk_scalarmin": 193, "issort": 193, "joinnonemptyarg": 193, "joinpossiblyemptyrect": 193, "skscalarroundtoint": 193, "roundin": 193, "skscalarceiltoint": 193, "skscalarfloortoint": 193, "roundout": 193, "smallest": 193, "setbound": 193, "setboundscheck": 193, "setboundsnocheck": 193, "setiwh": 193, "virtual": 195, "getrefcnt": 195, "compact": 196, "scan": [196, 200], "regiona": 196, "regionb": 196, "inequ": 196, "xor": 196, "cliper": 196, "computeregioncomplex": 196, "getboundarypath": 196, "quickcontain": 196, "rgn": [196, 198], "setregion": 196, "spaner": 196, "ivector": 196, "kdifference_op": [196, 199], "kintersect_op": [196, 199], "klastop": [196, 199], "kreplace_op": [196, 199], "kopcnt": 196, "kreversedifference_op": [196, 199], "kunion_op": [196, 199], "kxor_op": [196, 199], "predict": [197, 198], "sure": 201, "del": [201, 254], "viewport": 201, "viewbox": 201, "kconverttexttopaths_flag": 201, "knoprettyxml_flag": 201, "containers": 202, "rendernod": 202, "setcontainers": 202, "easi": 204, "isaimag": 204, "makewithcolorfilt": 204, "invok": 204, "blender": 207, "skblender": 207, "toceil": 208, "tofloor": 208, "toround": 208, "classic": 209, "async": 209, "fewer": 209, "eof": 209, "hit": 209, "hope": 209, "appendhex": 214, "appends32": 214, "appends64": 214, "appendscalar": 214, "appendu32": 214, "appendu64": 214, "appendunichar": 214, "c_str": 214, "substr": 214, "subchar": 214, "endswith": 214, "suffixstr": 214, "suffixchar": 214, "findlastof": 214, "inserthex": 214, "inserts32": 214, "inserts64": 214, "insertscalar": 214, "insertu32": 214, "insertu64": 214, "insertunichar": 214, "prependhex": 214, "prepends32": 214, "prepends64": 214, "prependscalar": 214, "prependunichar": 214, "startswith": 214, "prefixstr": 214, "prefixchar": 214, "getinflationradiu": 215, "miterlimit": 215, "initstyl": 215, "applytopaint": 215, "applytopath": 215, "getcap": 215, "inflat": 215, "getjoin": 215, "getmit": 215, "getresscal": 215, "hasequaleffect": 215, "skstrokerec": 215, "isfillstyl": 215, "ishairlinestyl": 215, "needtoappli": 215, "setfillstyl": 215, "sethairlinestyl": 215, "setresscal": 215, "setstrokeparam": 215, "setstrokestyl": 215, "strokeandfil": 215, "kfill_initstyl": [215, 216], "khairline_initstyl": [215, 216], "khairline_styl": [215, 217], "grrendertarget": 218, "care": 218, "getcanva": 218, "makeimagesnapshot": [218, 254, 256], "makefrombackendrendertarget": [218, 254], "backendrendertarget": 218, "releaseproc": 218, "sk_support_gpu": 218, "makefrombackendtextur": 218, "texturereleaseproc": 218, "scene": 218, "makenul": 218, "makerast": 218, "chosen": 218, "makerastern32premul": 218, "kpremul": 218, "makerendertarget": [218, 254], "samplecount": 218, "surfaceorigin": 218, "shouldcreatewithmip": 218, "kbottomleft": 218, "host": [218, 237, 256], "ness": 218, "asyncrescaleandreadpixel": [218, 219, 223], "rescalegamma": 218, "rescal": [218, 223, 228], "asyncreadresult": 218, "subrectangl": 218, "rescalequ": 218, "cost": 218, "deferreddisplaylistrecord": 218, "backendsurfaceaccess": 218, "knoaccess": [218, 221], "kpresent": [218, 221], "foreign": 218, "vk_image_layout_present_src_khr": 218, "newstat": 218, "ctualli": 218, "grbackendsurfac": 218, "prep": 218, "correct": [218, 254], "window": [218, 255], "generationid": 218, "notifycontentwillchang": 218, "getbackendrendertarget": 218, "backendhandleaccess": 218, "iscompat": 218, "viabl": 218, "deferreddisplaylist": 218, "interest": 218, "sanit": 218, "contentchangemod": 218, "kn32": 218, "recordingcontext": 218, "replacebackendtextur": 218, "kretain_contentchangemod": [218, 222], "substitut": 218, "kdiscardwrite_backendhandleaccess": [218, 220], "kdiscard_contentchangemod": [218, 222], "kflushread_backendhandleaccess": [218, 220], "kflushwrite_backendhandleaccess": [218, 220], "asyncrescaleandreadpixelsyuv420": [219, 223], "cachemaxresourcebyt": 224, "createbackendformat": 224, "createcolorspac": 224, "createfbo0": 224, "usesglfbo0": 224, "createres": 224, "ismipmap": 224, "istextur": 224, "vulkansecondarycbcompat": 224, "expens": 225, "pixelgeometri": 225, "isusedeviceindependentfont": 225, "kusedeviceindependentfonts_flag": [225, 226], "tabl": [227, 228, 237], "compoent": 227, "incom": 227, "temporarili": 227, "remultipli": 227, "makeargb": [227, 257], "tablea": 227, "tabler": 227, "tableg": 227, "tableb": 227, "createclip": 228, "creategamma": 228, "makeclipt": 228, "makegammat": 228, "fglyphindic": [229, 231], "ftypefaceproc": 229, "ftypefacectx": 229, "makefrompostext": 229, "po": [229, 232], "textblobbuild": [229, 256], "allocrunposh": [229, 232], "makefrompostexth": 229, "xpo": [229, 232], "consti": 229, "makefromrsxform": 229, "makefromshapedtext": 229, "utf8text": 229, "lefttoright": 229, "makefromstr": 229, "attribut": [229, 256, 257], "makefromtext": 229, "getintercept": 229, "fglyphcount": 231, "ftypefac": 231, "allocrun": 232, "placement": 232, "suppress": 232, "runbuff": 232, "allocrunpo": 232, "allocrunrsxform": 232, "krepeat": [234, 257], "domain": 234, "everywher": 234, "klasttilemod": 234, "startt": 235, "stopt": 235, "2nd": [235, 258], "33333": 235, "66667": 235, "entir": [235, 256], "spread": 235, "kinvert": [235, 236], "intrins": 237, "textskewx": 237, "textscalex": 237, "kfakeboldtext_mask": 237, "arial": 237, "makedefault": 237, "makedeseri": 237, "dat": 237, "makefromnam": 237, "face": 237, "copytabledata": 237, "gettabledata": 237, "countglyph": 237, "counttabl": 237, "utf8": 237, "languag": 237, "getkerningpairadjust": 237, "getunitsperem": 237, "getpostscriptnam": 237, "truetyp": 237, "big": 237, "gettables": 237, "gettabletag": 237, "getvariationdesignparamet": 237, "fontparamet": 237, "fontargu": 237, "isbold": 237, "kbold": 237, "isfixedpitch": 237, "claim": 237, "pitch": 237, "isital": 237, "kital": 237, "makeclon": 237, "parameter": 237, "exaclti": 237, "serializebehavior": 237, "kincludedataifloc": [237, 238], "unichar": 237, "utf32": 237, "cut": 237, "32bit": 237, "kdoincludedata": [237, 238], "kdontincludedata": [237, 238], "descriptor": 238, "vertex": 239, "vertexmod": 239, "approximates": 239, "klast_vertexmod": [239, 240], "ktrianglefan_vertexmod": [239, 240], "ktrianglestrip_vertexmod": [239, 240], "ktriangles_vertexmod": [239, 240], "hasalpha": 244, "planeconfig": [244, 247, 250], "numchannelsinplan": 244, "ith": [244, 248, 251], "numplan": [244, 248, 251], "planedimens": 244, "imagedimens": 244, "displai": [244, 254], "yuvcolorspac": [244, 248], "sittingx": 244, "kcenter": [244, 246], "sittingi": 244, "resolut": [244, 247], "computetotalbyt": [244, 248, 251], "returnplanes": [244, 248], "planes": [244, 248], "forigin": 244, "ret": 244, "sitingx": 244, "sitingi": 244, "k410": [244, 247], "k411": [244, 247], "k420": [244, 247], "k422": [244, 247], "k440": [244, 247], "k444": [244, 247], "kmaxplan": [244, 248], "kuyv": [244, 245], "kuyva": [244, 245], "kyuv": [244, 245], "kyuva": [244, 245], "ky_uv": [244, 245], "ky_uv_a": [244, 245], "ky_u_v": [244, 245], "ky_u_v_a": [244, 245], "ky_vu": [244, 245], "ky_vu_a": [244, 245], "ky_v_u": [244, 245], "ky_v_u_a": [244, 245], "underscor": 245, "grai": 245, "rg": 245, "uv": [245, 247], "vu": 245, "uyv": 245, "uyva": 245, "notat": 247, "defaultcolortypefordatatyp": 248, "datatyp": [248, 250], "numchannel": [248, 250], "kunknown_skcolortyp": 248, "numchannelsanddatatyp": 248, "aren": 248, "bpp": 248, "planess": 248, "initpixmapsfromsinglealloc": 248, "issupport": 248, "planeinfo": 248, "kfloat16": [248, 249], "kunorm10_unorm2": [248, 249], "kunorm16": [248, 249], "kunorm8": [248, 249], "unorm": 249, "planarconfig": 250, "enabledatatyp": 250, "yuvapixmapinfo": 251, "fromdata": 251, "fromexternalmemori": 251, "fromexternalpixmap": 251, "fixeds": 251, "kjpeg_yuvcolorspac": 252, "krec601_yuvcolorspac": 252, "sdtv": 252, "krec709_yuvcolorspac": 252, "hdtv": 252, "kbt2020_yuvcolorspac": 252, "uhdtv": 252, "kidentity_yuvcolorspac": 252, "klastenum_yuvcolorspac": 252, "graphit": 253, "kdawn": 253, "acceler": 254, "40": [254, 256, 258], "colorgreen": [254, 256], "matplotlib": 254, "pyplot": 254, "plt": 254, "imshow": 254, "contextlib": 254, "contextmanag": 254, "glfw_context": 254, "init": 254, "runtimeerror": 254, "window_hint": 254, "stencil_bit": 254, "create_window": 254, "make_context_curr": 254, "shown": 254, "glfw_window": 254, "skia_surfac": 254, "fb_width": 254, "fb_height": 254, "get_framebuffer_s": 254, "backend_render_target": 254, "gl_rgba8": 254, "glclear": 254, "gl_color_buffer_bit": 254, "swap_buff": 254, "get_kei": 254, "key_escap": 254, "press": 254, "window_should_clos": 254, "wait_ev": 254, "demonstr": [254, 256, 257], "svgcanva": 254, "interoper": 255, "glanc": 255, "showcas": 255, "organ": 256, "around": 256, "96": [256, 257], "much": [256, 257], "maintain": [256, 257], "cairo": 256, "awt": 256, "45": 256, "enorm": 256, "easier": 256, "colorwhit": [256, 257], "cours": 256, "yourself": 256, "110": [256, 258], "colorcyan": [256, 257], "80": [256, 257], "coloryellow": [256, 257], "768": 256, "color_wheel": [256, 257], "rect2": 256, "paint2": [256, 257], "hello": 256, "320": 256, "240": 256, "pil": 256, "skia_imag": 256, "pil_imag": 256, "autocanvasrestor": [256, 257], "paint1": 257, "136": [257, 258], "paint3": 257, "blob1": 257, "blob2": 257, "144": 257, "224": 257, "intermix": 257, "freeli": 257, "proce": 257, "fillpaint": 257, "strokepaint": 257, "150": [257, 258], "0xff": 257, "0x00": 257, "220": 257, "gradientshad": 257, "0xffffff00": 257, "transfermod": 257, "speak": 257, "gettextbound": 257, "getfontmetr": 257, "magenta": 257, "cyan": 257, "draw_utf8_str": 257, "colormagenta": 257, "0x00ffffff": 257, "tall": 257, "192": 257, "desc": 257, "68": 257, "colorltgrai": 257, "colortranspar": 257, "mention": 257, "perlinnoiseshad": 257, "05": 257, "025": 257, "colorblack": 257, "160": [257, 258], "mandrill_512_q075": 257, "07": 257, "tablecolorfilt": 257, "path2dpatheffect": 257, "lattic": 257, "line2dpatheffect": 257, "path1dpatheffect": 257, "122": 257, "star": 257, "math": 257, "115": 257, "6927937": 257, "cornerpatheffect": 257, "chop": 257, "discretepatheffect": 257, "path_effect": 257, "1245": 257, "path_conic_weight": 258, "path_verb": 258, "round_rect": 258, "inspect": 258, "124": 258, "108": 258, "172": 258, "36": 258, "148": 258, "66": 258, "188": 258, "path_fill_typ": 258, "hole": 258, "88": 258, "satisfi": 258, "path_verb_arrai": 258, "1st": 258, "130": 258, "3rd": 258, "preced": 258, "path_last_point": 258, "paint_stroke_join": 258, "paint_stroke_cap": 258, "travel": 258, "56": 258}, "objects": {"": [[4, 0, 0, "-", "skia"]], "skia": [[5, 1, 1, "", "AlphaType"], [4, 4, 1, "", "AlphaTypeIsOpaque"], [6, 1, 1, "", "ApplyPerspectiveClip"], [4, 4, 1, "", "AsWinding"], [7, 1, 1, "", "AutoCanvasRestore"], [8, 1, 1, "", "BBHFactory"], [9, 1, 1, "", "BBoxHierarchy"], [11, 1, 1, "", "Bitmap"], [13, 1, 1, "", "BlendMode"], [14, 1, 1, "", "BlendModeCoeff"], [4, 4, 1, "", "BlendMode_AsCoeff"], [4, 4, 1, "", "BlendMode_Name"], [15, 1, 1, "", "BlurMaskFilter"], [16, 1, 1, "", "BlurStyle"], [17, 1, 1, "", "Budgeted"], [18, 1, 1, "", "Canvas"], [26, 1, 1, "", "ClipOp"], [27, 1, 1, "", "Codec"], [4, 4, 1, "", "Color"], [35, 1, 1, "", "Color4f"], [36, 1, 1, "", "ColorChannel"], [37, 1, 1, "", "ColorChannelFlag"], [38, 1, 1, "", "ColorFilter"], [40, 1, 1, "", "ColorFilters"], [4, 4, 1, "", "ColorGetA"], [4, 4, 1, "", "ColorGetB"], [4, 4, 1, "", "ColorGetG"], [4, 4, 1, "", "ColorGetR"], [41, 1, 1, "", "ColorInfo"], [42, 1, 1, "", "ColorMatrix"], [43, 1, 1, "", "ColorMatrixFilter"], [4, 4, 1, "", "ColorSetA"], [4, 4, 1, "", "ColorSetARGB"], [4, 4, 1, "", "ColorSetRGB"], [45, 1, 1, "", "ColorSpace"], [4, 4, 1, "", "ColorToHSV"], [46, 1, 1, "", "ColorType"], [4, 4, 1, "", "ColorTypeBytesPerPixel"], [4, 4, 1, "", "ColorTypeIsAlwaysOpaque"], [4, 4, 1, "", "ColorTypeValidateAlphaType"], [4, 4, 1, "", "ComputeIsOpaque"], [47, 1, 1, "", "ConvergeMode"], [48, 1, 1, "", "CornerPathEffect"], [49, 1, 1, "", "DashPathEffect"], [50, 1, 1, "", "Data"], [51, 1, 1, "", "DiscretePathEffect"], [52, 1, 1, "", "Document"], [53, 1, 1, "", "Drawable"], [55, 1, 1, "", "DynamicMemoryWStream"], [56, 1, 1, "", "EncodedImageFormat"], [57, 1, 1, "", "EncodedOrigin"], [4, 4, 1, "", "EncodedOriginToMatrix"], [58, 1, 1, "", "FILEStream"], [59, 1, 1, "", "FILEWStream"], [60, 1, 1, "", "FilterMode"], [61, 1, 1, "", "Flattanable"], [63, 1, 1, "", "Font"], [65, 1, 1, "", "FontArguments"], [69, 1, 1, "", "FontHinting"], [70, 1, 1, "", "FontMetrics"], [72, 1, 1, "", "FontMgr"], [73, 1, 1, "", "FontParameters"], [76, 1, 1, "", "FontStyle"], [80, 1, 1, "", "FontStyleSet"], [81, 1, 1, "", "GrBackendApi"], [82, 1, 1, "", "GrBackendFormat"], [83, 1, 1, "", "GrBackendRenderTarget"], [84, 1, 1, "", "GrBackendSemaphore"], [85, 1, 1, "", "GrBackendTexture"], [86, 1, 1, "", "GrColorType"], [87, 3, 1, "", "GrContext"], [88, 1, 1, "", "GrContextOptions"], [89, 1, 1, "", "GrContext_Base"], [90, 1, 1, "", "GrDirectContext"], [91, 1, 1, "", "GrFlushInfo"], [92, 1, 1, "", "GrGLBackendState"], [93, 1, 1, "", "GrGLFormat"], [94, 1, 1, "", "GrGLFramebufferInfo"], [95, 1, 1, "", "GrGLInterface"], [96, 1, 1, "", "GrGLTextureInfo"], [97, 1, 1, "", "GrImageContext"], [98, 1, 1, "", "GrMipmapped"], [99, 1, 1, "", "GrMockOptions"], [100, 1, 1, "", "GrMockRenderTargetInfo"], [101, 1, 1, "", "GrMockTextureInfo"], [102, 1, 1, "", "GrProtected"], [103, 1, 1, "", "GrPurgeResourceOptions"], [104, 1, 1, "", "GrRecordingContext"], [105, 1, 1, "", "GrRenderable"], [106, 1, 1, "", "GrSemaphoresSubmitted"], [107, 1, 1, "", "GrSurfaceOrigin"], [108, 1, 1, "", "GrSyncCpu"], [109, 1, 1, "", "GrTextureType"], [110, 1, 1, "", "GrVkAlloc"], [111, 1, 1, "", "GrVkBackendContext"], [112, 1, 1, "", "GrVkDrawableInfo"], [113, 1, 1, "", "GrVkExtensionFlags"], [114, 1, 1, "", "GrVkFeatureFlags"], [115, 1, 1, "", "GrVkImageInfo"], [116, 1, 1, "", "GrVkYcbcrConversionInfo"], [117, 1, 1, "", "GradientShader"], [4, 4, 1, "", "HSVToColor"], [119, 1, 1, "", "HighContrastConfig"], [121, 1, 1, "", "HighContrastFilter"], [122, 1, 1, "", "IPoint"], [123, 1, 1, "", "IRect"], [124, 1, 1, "", "ISize"], [125, 1, 1, "", "Image"], [130, 1, 1, "", "ImageFilter"], [134, 1, 1, "", "ImageFilters"], [135, 1, 1, "", "ImageInfo"], [136, 1, 1, "", "Line2DPathEffect"], [137, 1, 1, "", "LumaColorFilter"], [138, 1, 1, "", "M44"], [4, 4, 1, "", "MakeNullCanvas"], [139, 1, 1, "", "MaskFilter"], [141, 1, 1, "", "Matrix"], [144, 1, 1, "", "MemoryStream"], [145, 1, 1, "", "MipmapBuilder"], [146, 1, 1, "", "NullWStream"], [4, 4, 1, "", "Op"], [147, 1, 1, "", "OpBuilder"], [148, 1, 1, "", "OverdrawColorFilter"], [149, 1, 1, "", "PDF"], [153, 1, 1, "", "Paint"], [157, 1, 1, "", "Path"], [164, 1, 1, "", "Path1DPathEffect"], [166, 1, 1, "", "Path2DPathEffect"], [167, 1, 1, "", "PathBuilder"], [169, 1, 1, "", "PathDirection"], [170, 1, 1, "", "PathEffect"], [174, 1, 1, "", "PathFillType"], [4, 4, 1, "", "PathFillType_ConvertToNonInverse"], [4, 4, 1, "", "PathFillType_IsEvenOdd"], [4, 4, 1, "", "PathFillType_IsInverse"], [175, 1, 1, "", "PathMeasure"], [177, 1, 1, "", "PathOp"], [178, 1, 1, "", "PathSegmentMask"], [179, 1, 1, "", "PathVerb"], [180, 1, 1, "", "PerlinNoiseShader"], [181, 1, 1, "", "Picture"], [182, 1, 1, "", "PictureRecorder"], [183, 1, 1, "", "PixelGeometry"], [184, 1, 1, "", "PixelRef"], [185, 1, 1, "", "Pixmap"], [186, 1, 1, "", "Point"], [187, 1, 1, "", "Point3"], [4, 4, 1, "", "PreMultiplyARGB"], [4, 4, 1, "", "PreMultiplyColor"], [4, 4, 1, "", "RGBToHSV"], [188, 1, 1, "", "RRect"], [191, 1, 1, "", "RSXform"], [192, 1, 1, "", "RTreeFactory"], [193, 1, 1, "", "Rect"], [194, 1, 1, "", "RefCnt"], [195, 1, 1, "", "RefCntBase"], [196, 1, 1, "", "Region"], [201, 1, 1, "", "SVGCanvas"], [202, 1, 1, "", "SVGDOM"], [203, 1, 1, "", "SamplingOptions"], [204, 1, 1, "", "Shader"], [206, 1, 1, "", "ShaderMaskFilter"], [207, 1, 1, "", "Shaders"], [4, 4, 1, "", "Simplify"], [208, 1, 1, "", "Size"], [209, 1, 1, "", "Stream"], [210, 1, 1, "", "StreamAsset"], [211, 1, 1, "", "StreamMemory"], [212, 1, 1, "", "StreamRewindable"], [213, 1, 1, "", "StreamSeekable"], [214, 1, 1, "", "String"], [215, 1, 1, "", "StrokeRec"], [218, 1, 1, "", "Surface"], [224, 1, 1, "", "SurfaceCharacterization"], [225, 1, 1, "", "SurfaceProps"], [227, 1, 1, "", "TableColorFilter"], [228, 1, 1, "", "TableMaskFilter"], [229, 1, 1, "", "TextBlob"], [232, 1, 1, "", "TextBlobBuilder"], [233, 1, 1, "", "TextEncoding"], [4, 4, 1, "", "TightBounds"], [234, 1, 1, "", "TileMode"], [235, 1, 1, "", "TrimPathEffect"], [237, 1, 1, "", "Typeface"], [239, 1, 1, "", "Vertices"], [241, 1, 1, "", "VkFormat"], [242, 1, 1, "", "VkImageLayout"], [243, 1, 1, "", "WStream"], [244, 1, 1, "", "YUVAInfo"], [248, 1, 1, "", "YUVAPixmapInfo"], [251, 1, 1, "", "YUVAPixmaps"], [252, 1, 1, "", "YUVColorSpace"], [253, 1, 1, "", "gpuBackendApi"]], "skia.AlphaType": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "kLastEnum_AlphaType"], [5, 3, 1, "", "kOpaque_AlphaType"], [5, 3, 1, "", "kPremul_AlphaType"], [5, 3, 1, "", "kUnknown_AlphaType"], [5, 3, 1, "", "kUnpremul_AlphaType"], [5, 3, 1, "", "name"], [5, 3, 1, "", "value"]], "skia.ApplyPerspectiveClip": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "kNo"], [6, 3, 1, "", "kYes"], [6, 3, 1, "", "name"], [6, 3, 1, "", "value"]], "skia.AutoCanvasRestore": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "restore"]], "skia.BBHFactory": [[8, 2, 1, "", "__init__"]], "skia.BBoxHierarchy": [[10, 1, 1, "", "Metadata"], [9, 2, 1, "", "__init__"], [9, 2, 1, "", "bytesUsed"], [9, 2, 1, "", "insert"], [9, 2, 1, "", "ref"], [9, 2, 1, "", "search"], [9, 2, 1, "", "unique"], [9, 2, 1, "", "unref"]], "skia.BBoxHierarchy.Metadata": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "isDraw"]], "skia.Bitmap": [[12, 1, 1, "", "AllocFlags"], [11, 2, 1, "", "__init__"], [11, 2, 1, "", "allocN32Pixels"], [11, 2, 1, "", "allocPixels"], [11, 2, 1, "", "allocPixelsFlags"], [11, 2, 1, "", "alphaType"], [11, 2, 1, "", "bounds"], [11, 2, 1, "", "bytesPerPixel"], [11, 2, 1, "", "colorSpace"], [11, 2, 1, "", "colorType"], [11, 2, 1, "", "computeByteSize"], [11, 2, 1, "", "dimensions"], [11, 2, 1, "", "drawsNothing"], [11, 2, 1, "", "empty"], [11, 2, 1, "", "erase"], [11, 2, 1, "", "eraseARGB"], [11, 2, 1, "", "extractAlpha"], [11, 2, 1, "", "extractSubset"], [11, 2, 1, "", "getAlphaf"], [11, 2, 1, "", "getBounds"], [11, 2, 1, "", "getColor"], [11, 2, 1, "", "getGenerationID"], [11, 2, 1, "", "getPixels"], [11, 2, 1, "", "getSubset"], [11, 2, 1, "", "height"], [11, 2, 1, "", "info"], [11, 2, 1, "", "installPixels"], [11, 2, 1, "", "isImmutable"], [11, 2, 1, "", "isNull"], [11, 2, 1, "", "isOpaque"], [11, 3, 1, "", "kZeroPixels_AllocFlag"], [11, 2, 1, "", "makeShader"], [11, 2, 1, "", "notifyPixelsChanged"], [11, 2, 1, "", "peekPixels"], [11, 2, 1, "", "pixmap"], [11, 2, 1, "", "readPixels"], [11, 2, 1, "", "readyToDraw"], [11, 2, 1, "", "refColorSpace"], [11, 2, 1, "", "reset"], [11, 2, 1, "", "rowBytes"], [11, 2, 1, "", "rowBytesAsPixels"], [11, 2, 1, "", "setAlphaType"], [11, 2, 1, "", "setImmutable"], [11, 2, 1, "", "setInfo"], [11, 2, 1, "", "setPixels"], [11, 2, 1, "", "shiftPerPixel"], [11, 2, 1, "", "swap"], [11, 2, 1, "", "tobytes"], [11, 2, 1, "", "tryAllocN32Pixels"], [11, 2, 1, "", "tryAllocPixels"], [11, 2, 1, "", "tryAllocPixelsFlags"], [11, 2, 1, "", "width"], [11, 2, 1, "", "writePixels"]], "skia.Bitmap.AllocFlags": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "kZeroPixels_AllocFlag"], [12, 3, 1, "", "name"], [12, 3, 1, "", "value"]], "skia.BlendMode": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "kClear"], [13, 3, 1, "", "kColor"], [13, 3, 1, "", "kColorBurn"], [13, 3, 1, "", "kColorDodge"], [13, 3, 1, "", "kDarken"], [13, 3, 1, "", "kDifference"], [13, 3, 1, "", "kDst"], [13, 3, 1, "", "kDstATop"], [13, 3, 1, "", "kDstIn"], [13, 3, 1, "", "kDstOut"], [13, 3, 1, "", "kDstOver"], [13, 3, 1, "", "kExclusion"], [13, 3, 1, "", "kHardLight"], [13, 3, 1, "", "kHue"], [13, 3, 1, "", "kLastCoeffMode"], [13, 3, 1, "", "kLastMode"], [13, 3, 1, "", "kLastSeparableMode"], [13, 3, 1, "", "kLighten"], [13, 3, 1, "", "kLuminosity"], [13, 3, 1, "", "kModulate"], [13, 3, 1, "", "kMultiply"], [13, 3, 1, "", "kOverlay"], [13, 3, 1, "", "kPlus"], [13, 3, 1, "", "kSaturation"], [13, 3, 1, "", "kScreen"], [13, 3, 1, "", "kSoftLight"], [13, 3, 1, "", "kSrc"], [13, 3, 1, "", "kSrcATop"], [13, 3, 1, "", "kSrcIn"], [13, 3, 1, "", "kSrcOut"], [13, 3, 1, "", "kSrcOver"], [13, 3, 1, "", "kXor"], [13, 3, 1, "", "name"], [13, 3, 1, "", "value"]], "skia.BlendModeCoeff": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "kCoeffCount"], [14, 3, 1, "", "kDA"], [14, 3, 1, "", "kDC"], [14, 3, 1, "", "kIDA"], [14, 3, 1, "", "kIDC"], [14, 3, 1, "", "kISA"], [14, 3, 1, "", "kISC"], [14, 3, 1, "", "kOne"], [14, 3, 1, "", "kSA"], [14, 3, 1, "", "kSC"], [14, 3, 1, "", "kZero"], [14, 3, 1, "", "name"], [14, 3, 1, "", "value"]], "skia.BlurMaskFilter": [[15, 2, 1, "", "__init__"]], "skia.BlurStyle": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "kInner_BlurStyle"], [16, 3, 1, "", "kLastEnum_BlurStyle"], [16, 3, 1, "", "kNormal_BlurStyle"], [16, 3, 1, "", "kOuter_BlurStyle"], [16, 3, 1, "", "kSolid_BlurStyle"], [16, 3, 1, "", "name"], [16, 3, 1, "", "value"]], "skia.Budgeted": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "kNo"], [17, 3, 1, "", "kYes"], [17, 3, 1, "", "name"], [17, 3, 1, "", "value"]], "skia.Canvas": [[19, 1, 1, "", "Lattice"], [18, 2, 1, "", "MakeRasterDirect"], [18, 2, 1, "", "MakeRasterDirectN32"], [21, 1, 1, "", "PointMode"], [22, 1, 1, "", "QuadAAFlags"], [23, 1, 1, "", "SaveLayerFlags"], [24, 1, 1, "", "SaveLayerRec"], [25, 1, 1, "", "SrcRectConstraint"], [18, 2, 1, "", "__init__"], [18, 2, 1, "", "accessTopLayerPixels"], [18, 2, 1, "", "androidFramework_setDeviceClipRestriction"], [18, 2, 1, "", "clear"], [18, 2, 1, "", "clipPath"], [18, 2, 1, "", "clipRRect"], [18, 2, 1, "", "clipRect"], [18, 2, 1, "", "clipRegion"], [18, 2, 1, "", "concat"], [18, 2, 1, "", "discard"], [18, 2, 1, "", "drawAnnotation"], [18, 2, 1, "", "drawArc"], [18, 2, 1, "", "drawAtlas"], [18, 2, 1, "", "drawBitmap"], [18, 2, 1, "", "drawBitmapRect"], [18, 2, 1, "", "drawCircle"], [18, 2, 1, "", "drawColor"], [18, 2, 1, "", "drawDRRect"], [18, 2, 1, "", "drawIRect"], [18, 2, 1, "", "drawImage"], [18, 2, 1, "", "drawImageRect"], [18, 2, 1, "", "drawLine"], [18, 2, 1, "", "drawOval"], [18, 2, 1, "", "drawPaint"], [18, 2, 1, "", "drawPatch"], [18, 2, 1, "", "drawPath"], [18, 2, 1, "", "drawPicture"], [18, 2, 1, "", "drawPoint"], [18, 2, 1, "", "drawPoints"], [18, 2, 1, "", "drawRRect"], [18, 2, 1, "", "drawRect"], [18, 2, 1, "", "drawRegion"], [18, 2, 1, "", "drawRoundRect"], [18, 2, 1, "", "drawSimpleText"], [18, 2, 1, "", "drawString"], [18, 2, 1, "", "drawTextBlob"], [18, 2, 1, "", "drawVertices"], [18, 2, 1, "", "flush"], [18, 2, 1, "", "getBaseLayerSize"], [18, 2, 1, "", "getDeviceClipBounds"], [18, 2, 1, "", "getLocalClipBounds"], [18, 2, 1, "", "getLocalToDevice"], [18, 2, 1, "", "getProps"], [18, 2, 1, "", "getSaveCount"], [18, 2, 1, "", "getSurface"], [18, 2, 1, "", "getTotalMatrix"], [18, 2, 1, "", "imageInfo"], [18, 2, 1, "", "isClipEmpty"], [18, 2, 1, "", "isClipRect"], [18, 3, 1, "", "kAll_QuadAAFlags"], [18, 3, 1, "", "kBottom_QuadAAFlag"], [18, 3, 1, "", "kF16ColorType"], [18, 3, 1, "", "kFast_SrcRectConstraint"], [18, 3, 1, "", "kInitWithPrevious_SaveLayerFlag"], [18, 3, 1, "", "kLeft_QuadAAFlag"], [18, 3, 1, "", "kLines_PointMode"], [18, 3, 1, "", "kNone_QuadAAFlags"], [18, 3, 1, "", "kPoints_PointMode"], [18, 3, 1, "", "kPolygon_PointMode"], [18, 3, 1, "", "kPreserveLCDText_SaveLayerFlag"], [18, 3, 1, "", "kRight_QuadAAFlag"], [18, 3, 1, "", "kStrict_SrcRectConstraint"], [18, 3, 1, "", "kTop_QuadAAFlag"], [18, 2, 1, "", "makeSurface"], [18, 2, 1, "", "peekPixels"], [18, 2, 1, "", "quickReject"], [18, 2, 1, "", "readPixels"], [18, 2, 1, "", "resetMatrix"], [18, 2, 1, "", "restore"], [18, 2, 1, "", "restoreToCount"], [18, 2, 1, "", "rotate"], [18, 2, 1, "", "save"], [18, 2, 1, "", "saveLayer"], [18, 2, 1, "", "saveLayerAlpha"], [18, 2, 1, "", "scale"], [18, 2, 1, "", "setMatrix"], [18, 2, 1, "", "skew"], [18, 2, 1, "", "toarray"], [18, 2, 1, "", "translate"], [18, 2, 1, "", "writePixels"]], "skia.Canvas.Lattice": [[20, 1, 1, "", "RectType"], [19, 2, 1, "", "__init__"], [19, 3, 1, "", "fBounds"], [19, 3, 1, "", "fColors"], [19, 3, 1, "", "fRectTypes"], [19, 3, 1, "", "fXCount"], [19, 3, 1, "", "fXDivs"], [19, 3, 1, "", "fYCount"], [19, 3, 1, "", "fYDivs"], [19, 3, 1, "", "kDefault"], [19, 3, 1, "", "kFixedColor"], [19, 3, 1, "", "kTransparent"]], "skia.Canvas.Lattice.RectType": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "kDefault"], [20, 3, 1, "", "kFixedColor"], [20, 3, 1, "", "kTransparent"], [20, 3, 1, "", "name"], [20, 3, 1, "", "value"]], "skia.Canvas.PointMode": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "kLines_PointMode"], [21, 3, 1, "", "kPoints_PointMode"], [21, 3, 1, "", "kPolygon_PointMode"], [21, 3, 1, "", "name"], [21, 3, 1, "", "value"]], "skia.Canvas.QuadAAFlags": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "kAll_QuadAAFlags"], [22, 3, 1, "", "kBottom_QuadAAFlag"], [22, 3, 1, "", "kLeft_QuadAAFlag"], [22, 3, 1, "", "kNone_QuadAAFlags"], [22, 3, 1, "", "kRight_QuadAAFlag"], [22, 3, 1, "", "kTop_QuadAAFlag"], [22, 3, 1, "", "name"], [22, 3, 1, "", "value"]], "skia.Canvas.SaveLayerFlags": [[23, 2, 1, "", "__init__"], [23, 3, 1, "", "kF16ColorType"], [23, 3, 1, "", "kInitWithPrevious_SaveLayerFlag"], [23, 3, 1, "", "kPreserveLCDText_SaveLayerFlag"], [23, 3, 1, "", "name"], [23, 3, 1, "", "value"]], "skia.Canvas.SaveLayerRec": [[24, 2, 1, "", "__init__"], [24, 3, 1, "", "fBackdrop"], [24, 3, 1, "", "fBounds"], [24, 3, 1, "", "fPaint"], [24, 3, 1, "", "fSaveLayerFlags"]], "skia.Canvas.SrcRectConstraint": [[25, 2, 1, "", "__init__"], [25, 3, 1, "", "kFast_SrcRectConstraint"], [25, 3, 1, "", "kStrict_SrcRectConstraint"], [25, 3, 1, "", "name"], [25, 3, 1, "", "value"]], "skia.ClipOp": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "kDifference"], [26, 3, 1, "", "kIntersect"], [26, 3, 1, "", "name"], [26, 3, 1, "", "value"]], "skia.Codec": [[28, 1, 1, "", "DisposalMethod"], [29, 1, 1, "", "FrameInfo"], [27, 2, 1, "", "MakeFromData"], [27, 2, 1, "", "MinBufferedBytesNeeded"], [30, 1, 1, "", "Options"], [31, 1, 1, "", "Result"], [27, 2, 1, "", "ResultToString"], [32, 1, 1, "", "ScanlineOrder"], [33, 1, 1, "", "SelectionPolicy"], [34, 1, 1, "", "ZeroInitialized"], [27, 2, 1, "", "__init__"], [27, 2, 1, "", "bounds"], [27, 2, 1, "", "dimensions"], [27, 2, 1, "", "getEncodedFormat"], [27, 2, 1, "", "getFrameCount"], [27, 2, 1, "", "getFrameInfo"], [27, 2, 1, "", "getInfo"], [27, 2, 1, "", "getOrigin"], [27, 2, 1, "", "getPixels"], [27, 2, 1, "", "getRepetitionCount"], [27, 2, 1, "", "getScaledDimensions"], [27, 2, 1, "", "getScanlineOrder"], [27, 2, 1, "", "getScanlines"], [27, 2, 1, "", "getValidSubset"], [27, 2, 1, "", "getYUVAPlanes"], [27, 2, 1, "", "incrementalDecode"], [27, 3, 1, "", "kCouldNotRewind"], [27, 3, 1, "", "kErrorInInput"], [27, 3, 1, "", "kIncompleteInput"], [27, 3, 1, "", "kInternalError"], [27, 3, 1, "", "kInvalidConversion"], [27, 3, 1, "", "kInvalidInput"], [27, 3, 1, "", "kInvalidParameters"], [27, 3, 1, "", "kInvalidScale"], [27, 3, 1, "", "kKeep"], [27, 3, 1, "", "kNoFrame"], [27, 3, 1, "", "kNo_ZeroInitialized"], [27, 3, 1, "", "kPreferAnimation"], [27, 3, 1, "", "kPreferStillImage"], [27, 3, 1, "", "kRepetitionCountInfinite"], [27, 3, 1, "", "kRestoreBGColor"], [27, 3, 1, "", "kRestorePrevious"], [27, 3, 1, "", "kSuccess"], [27, 3, 1, "", "kUnimplemented"], [27, 3, 1, "", "kYes_ZeroInitialized"], [27, 2, 1, "", "nextScanline"], [27, 2, 1, "", "outputScanline"], [27, 2, 1, "", "queryYUVAInfo"], [27, 2, 1, "", "skipScanlines"], [27, 2, 1, "", "startIncrementalDecode"], [27, 2, 1, "", "startScanlineDecode"]], "skia.Codec.DisposalMethod": [[28, 2, 1, "", "__init__"], [28, 3, 1, "", "kKeep"], [28, 3, 1, "", "kRestoreBGColor"], [28, 3, 1, "", "kRestorePrevious"], [28, 3, 1, "", "name"], [28, 3, 1, "", "value"]], "skia.Codec.FrameInfo": [[29, 2, 1, "", "__init__"], [29, 3, 1, "", "fAlphaType"], [29, 3, 1, "", "fDisposalMethod"], [29, 3, 1, "", "fDuration"], [29, 3, 1, "", "fFullyReceived"], [29, 3, 1, "", "fRequiredFrame"]], "skia.Codec.Options": [[30, 2, 1, "", "__init__"], [30, 3, 1, "", "fFrameIndex"], [30, 3, 1, "", "fPriorFrame"], [30, 3, 1, "", "fSubset"], [30, 3, 1, "", "fZeroInitialized"]], "skia.Codec.Result": [[31, 2, 1, "", "__init__"], [31, 3, 1, "", "kCouldNotRewind"], [31, 3, 1, "", "kErrorInInput"], [31, 3, 1, "", "kIncompleteInput"], [31, 3, 1, "", "kInternalError"], [31, 3, 1, "", "kInvalidConversion"], [31, 3, 1, "", "kInvalidInput"], [31, 3, 1, "", "kInvalidParameters"], [31, 3, 1, "", "kInvalidScale"], [31, 3, 1, "", "kSuccess"], [31, 3, 1, "", "kUnimplemented"], [31, 3, 1, "", "name"], [31, 3, 1, "", "value"]], "skia.Codec.ScanlineOrder": [[32, 2, 1, "", "__init__"], [32, 3, 1, "", "kKeep"], [32, 3, 1, "", "kRestoreBGColor"], [32, 3, 1, "", "name"], [32, 3, 1, "", "value"]], "skia.Codec.SelectionPolicy": [[33, 2, 1, "", "__init__"], [33, 3, 1, "", "kPreferAnimation"], [33, 3, 1, "", "kPreferStillImage"], [33, 3, 1, "", "name"], [33, 3, 1, "", "value"]], "skia.Codec.ZeroInitialized": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "kNo_ZeroInitialized"], [34, 3, 1, "", "kYes_ZeroInitialized"], [34, 3, 1, "", "name"], [34, 3, 1, "", "value"]], "skia.Color4f": [[35, 2, 1, "", "FromBytes_RGBA"], [35, 2, 1, "", "FromColor"], [35, 2, 1, "", "__init__"], [35, 3, 1, "", "fA"], [35, 3, 1, "", "fB"], [35, 3, 1, "", "fG"], [35, 3, 1, "", "fR"], [35, 2, 1, "", "fitsInBytes"], [35, 2, 1, "", "isOpaque"], [35, 3, 1, "", "kBlack"], [35, 3, 1, "", "kBlue"], [35, 3, 1, "", "kCyan"], [35, 3, 1, "", "kDkGray"], [35, 3, 1, "", "kGray"], [35, 3, 1, "", "kGreen"], [35, 3, 1, "", "kLtGray"], [35, 3, 1, "", "kMagenta"], [35, 3, 1, "", "kRed"], [35, 3, 1, "", "kTransparent"], [35, 3, 1, "", "kWhite"], [35, 3, 1, "", "kYellow"], [35, 2, 1, "", "makeOpaque"], [35, 2, 1, "", "toBytes_RGBA"], [35, 2, 1, "", "toColor"], [35, 2, 1, "", "vec"]], "skia.ColorChannel": [[36, 2, 1, "", "__init__"], [36, 3, 1, "", "kA"], [36, 3, 1, "", "kB"], [36, 3, 1, "", "kG"], [36, 3, 1, "", "kLastEnum"], [36, 3, 1, "", "kR"], [36, 3, 1, "", "name"], [36, 3, 1, "", "value"]], "skia.ColorChannelFlag": [[37, 2, 1, "", "__init__"], [37, 3, 1, "", "kAlpha_ColorChannelFlag"], [37, 3, 1, "", "kBlue_ColorChannelFlag"], [37, 3, 1, "", "kGray_ColorChannelFlag"], [37, 3, 1, "", "kGreen_ColorChannelFlag"], [37, 3, 1, "", "kRGBA_ColorChannelFlags"], [37, 3, 1, "", "kRGB_ColorChannelFlags"], [37, 3, 1, "", "kRG_ColorChannelFlags"], [37, 3, 1, "", "kRed_ColorChannelFlag"], [37, 3, 1, "", "name"], [37, 3, 1, "", "value"]], "skia.ColorFilter": [[38, 2, 1, "", "Deserialize"], [39, 1, 1, "", "Type"], [38, 2, 1, "", "__init__"], [38, 2, 1, "", "asAColorMatrix"], [38, 2, 1, "", "asAColorMode"], [38, 2, 1, "", "asColorMode"], [38, 2, 1, "", "filterColor"], [38, 2, 1, "", "filterColor4f"], [38, 2, 1, "", "getFlattenableType"], [38, 2, 1, "", "getTypeName"], [38, 3, 1, "", "kColorFilter_Type"], [38, 3, 1, "", "kDrawLooper_Type"], [38, 3, 1, "", "kDrawable_Type"], [38, 3, 1, "", "kImageFilter_Type"], [38, 3, 1, "", "kMaskFilter_Type"], [38, 3, 1, "", "kPathEffect_Type"], [38, 2, 1, "", "makeComposed"], [38, 2, 1, "", "ref"], [38, 2, 1, "", "serialize"], [38, 2, 1, "", "unique"], [38, 2, 1, "", "unref"]], "skia.ColorFilter.Type": [[39, 2, 1, "", "__init__"], [39, 3, 1, "", "kColorFilter_Type"], [39, 3, 1, "", "kDrawLooper_Type"], [39, 3, 1, "", "kDrawable_Type"], [39, 3, 1, "", "kImageFilter_Type"], [39, 3, 1, "", "kMaskFilter_Type"], [39, 3, 1, "", "kPathEffect_Type"], [39, 3, 1, "", "name"], [39, 3, 1, "", "value"]], "skia.ColorFilters": [[40, 2, 1, "", "Blend"], [40, 2, 1, "", "Compose"], [40, 2, 1, "", "HSLAMatrix"], [40, 2, 1, "", "Lerp"], [40, 2, 1, "", "LinearToSRGBGamma"], [40, 2, 1, "", "Matrix"], [40, 2, 1, "", "SRGBToLinearGamma"], [40, 2, 1, "", "__init__"]], "skia.ColorInfo": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "alphaType"], [41, 2, 1, "", "bytesPerPixel"], [41, 2, 1, "", "colorSpace"], [41, 2, 1, "", "colorType"], [41, 2, 1, "", "gammaCloseToSRGB"], [41, 2, 1, "", "isOpaque"], [41, 2, 1, "", "makeAlphaType"], [41, 2, 1, "", "makeColorSpace"], [41, 2, 1, "", "makeColorType"], [41, 2, 1, "", "refColorSpace"], [41, 2, 1, "", "shiftPerPixel"]], "skia.ColorMatrix": [[42, 2, 1, "", "__init__"]], "skia.ColorMatrixFilter": [[43, 2, 1, "", "Deserialize"], [43, 2, 1, "", "MakeLightingFilter"], [44, 1, 1, "", "Type"], [43, 2, 1, "", "__init__"], [43, 2, 1, "", "asAColorMatrix"], [43, 2, 1, "", "asAColorMode"], [43, 2, 1, "", "asColorMode"], [43, 2, 1, "", "filterColor"], [43, 2, 1, "", "filterColor4f"], [43, 2, 1, "", "getFlattenableType"], [43, 2, 1, "", "getTypeName"], [43, 3, 1, "", "kColorFilter_Type"], [43, 3, 1, "", "kDrawLooper_Type"], [43, 3, 1, "", "kDrawable_Type"], [43, 3, 1, "", "kImageFilter_Type"], [43, 3, 1, "", "kMaskFilter_Type"], [43, 3, 1, "", "kPathEffect_Type"], [43, 2, 1, "", "makeComposed"], [43, 2, 1, "", "ref"], [43, 2, 1, "", "serialize"], [43, 2, 1, "", "unique"], [43, 2, 1, "", "unref"]], "skia.ColorMatrixFilter.Type": [[44, 2, 1, "", "__init__"], [44, 3, 1, "", "kColorFilter_Type"], [44, 3, 1, "", "kDrawLooper_Type"], [44, 3, 1, "", "kDrawable_Type"], [44, 3, 1, "", "kImageFilter_Type"], [44, 3, 1, "", "kMaskFilter_Type"], [44, 3, 1, "", "kPathEffect_Type"], [44, 3, 1, "", "name"], [44, 3, 1, "", "value"]], "skia.ColorSpace": [[45, 2, 1, "", "Deserialize"], [45, 2, 1, "", "Equals"], [45, 2, 1, "", "Make"], [45, 2, 1, "", "MakeRGB"], [45, 2, 1, "", "MakeSRGB"], [45, 2, 1, "", "MakeSRGBLinear"], [45, 2, 1, "", "__init__"], [45, 2, 1, "", "deref"], [45, 2, 1, "", "gammaCloseToSRGB"], [45, 2, 1, "", "gammaIsLinear"], [45, 2, 1, "", "gamutTransformTo"], [45, 2, 1, "", "hash"], [45, 2, 1, "", "invTransferFn"], [45, 2, 1, "", "isNumericalTransferFn"], [45, 2, 1, "", "isSRGB"], [45, 2, 1, "", "makeColorSpin"], [45, 2, 1, "", "makeLinearGamma"], [45, 2, 1, "", "makeSRGBGamma"], [45, 2, 1, "", "ref"], [45, 2, 1, "", "refCntGreaterThan"], [45, 2, 1, "", "serialize"], [45, 2, 1, "", "toProfile"], [45, 2, 1, "", "toXYZD50"], [45, 2, 1, "", "toXYZD50Hash"], [45, 2, 1, "", "transferFn"], [45, 2, 1, "", "transferFnHash"], [45, 2, 1, "", "unique"], [45, 2, 1, "", "unref"], [45, 2, 1, "", "writeToMemory"]], "skia.ColorType": [[46, 2, 1, "", "__init__"], [46, 3, 1, "", "kA16_float_ColorType"], [46, 3, 1, "", "kA16_unorm_ColorType"], [46, 3, 1, "", "kARGB_4444_ColorType"], [46, 3, 1, "", "kAlpha_8_ColorType"], [46, 3, 1, "", "kBGRA_1010102_ColorType"], [46, 3, 1, "", "kBGRA_8888_ColorType"], [46, 3, 1, "", "kBGR_101010x_ColorType"], [46, 3, 1, "", "kGray_8_ColorType"], [46, 3, 1, "", "kN32_ColorType"], [46, 3, 1, "", "kR16G16B16A16_unorm_ColorType"], [46, 3, 1, "", "kR16G16_float_ColorType"], [46, 3, 1, "", "kR16G16_unorm_ColorType"], [46, 3, 1, "", "kR8G8_unorm_ColorType"], [46, 3, 1, "", "kRGBA_1010102_ColorType"], [46, 3, 1, "", "kRGBA_8888_ColorType"], [46, 3, 1, "", "kRGBA_F16Norm_ColorType"], [46, 3, 1, "", "kRGBA_F16_ColorType"], [46, 3, 1, "", "kRGBA_F32_ColorType"], [46, 3, 1, "", "kRGB_101010x_ColorType"], [46, 3, 1, "", "kRGB_565_ColorType"], [46, 3, 1, "", "kRGB_888x_ColorType"], [46, 3, 1, "", "kUnknown_ColorType"], [46, 3, 1, "", "name"], [46, 3, 1, "", "value"]], "skia.ConvergeMode": [[47, 2, 1, "", "__init__"], [47, 3, 1, "", "kDifference"], [47, 3, 1, "", "kIntersect"], [47, 3, 1, "", "kLast"], [47, 3, 1, "", "kReverseDifference"], [47, 3, 1, "", "kUnion"], [47, 3, 1, "", "kXor"], [47, 3, 1, "", "name"], [47, 3, 1, "", "value"]], "skia.CornerPathEffect": [[48, 2, 1, "", "Make"], [48, 2, 1, "", "__init__"]], "skia.DashPathEffect": [[49, 2, 1, "", "Make"], [49, 2, 1, "", "__init__"]], "skia.Data": [[50, 2, 1, "", "MakeEmpty"], [50, 2, 1, "", "MakeFromFileName"], [50, 2, 1, "", "MakeSubset"], [50, 2, 1, "", "MakeUninitialized"], [50, 2, 1, "", "MakeWithCopy"], [50, 2, 1, "", "MakeWithoutCopy"], [50, 2, 1, "", "__init__"], [50, 2, 1, "", "bytes"], [50, 2, 1, "", "copyRange"], [50, 2, 1, "", "data"], [50, 2, 1, "", "deref"], [50, 2, 1, "", "equals"], [50, 2, 1, "", "isEmpty"], [50, 2, 1, "", "ref"], [50, 2, 1, "", "refCntGreaterThan"], [50, 2, 1, "", "size"], [50, 2, 1, "", "unique"], [50, 2, 1, "", "unref"], [50, 2, 1, "", "writable_data"]], "skia.DiscretePathEffect": [[51, 2, 1, "", "Make"], [51, 2, 1, "", "__init__"]], "skia.Document": [[52, 2, 1, "", "__init__"], [52, 2, 1, "", "abort"], [52, 2, 1, "", "beginPage"], [52, 2, 1, "", "close"], [52, 2, 1, "", "endPage"], [52, 2, 1, "", "page"], [52, 2, 1, "", "ref"], [52, 2, 1, "", "unique"], [52, 2, 1, "", "unref"]], "skia.Drawable": [[53, 2, 1, "", "Deserialize"], [54, 1, 1, "", "Type"], [53, 2, 1, "", "__init__"], [53, 2, 1, "", "draw"], [53, 2, 1, "", "getBounds"], [53, 2, 1, "", "getFlattenableType"], [53, 2, 1, "", "getGenerationID"], [53, 2, 1, "", "getTypeName"], [53, 3, 1, "", "kColorFilter_Type"], [53, 3, 1, "", "kDrawLooper_Type"], [53, 3, 1, "", "kDrawable_Type"], [53, 3, 1, "", "kImageFilter_Type"], [53, 3, 1, "", "kMaskFilter_Type"], [53, 3, 1, "", "kPathEffect_Type"], [53, 2, 1, "", "newPictureSnapshot"], [53, 2, 1, "", "notifyDrawingChanged"], [53, 2, 1, "", "ref"], [53, 2, 1, "", "serialize"], [53, 2, 1, "", "unique"], [53, 2, 1, "", "unref"]], "skia.Drawable.Type": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "kColorFilter_Type"], [54, 3, 1, "", "kDrawLooper_Type"], [54, 3, 1, "", "kDrawable_Type"], [54, 3, 1, "", "kImageFilter_Type"], [54, 3, 1, "", "kMaskFilter_Type"], [54, 3, 1, "", "kPathEffect_Type"], [54, 3, 1, "", "name"], [54, 3, 1, "", "value"]], "skia.DynamicMemoryWStream": [[55, 2, 1, "", "SizeOfPackedUInt"], [55, 2, 1, "", "__init__"], [55, 2, 1, "", "bytesWritten"], [55, 2, 1, "", "copyTo"], [55, 2, 1, "", "copyToAndReset"], [55, 2, 1, "", "detachAsData"], [55, 2, 1, "", "detachAsStream"], [55, 2, 1, "", "flush"], [55, 2, 1, "", "newline"], [55, 2, 1, "", "padToAlign4"], [55, 2, 1, "", "prependToAndReset"], [55, 2, 1, "", "read"], [55, 2, 1, "", "reset"], [55, 2, 1, "", "write"], [55, 2, 1, "", "write16"], [55, 2, 1, "", "write32"], [55, 2, 1, "", "write8"], [55, 2, 1, "", "writeBigDecAsText"], [55, 2, 1, "", "writeBool"], [55, 2, 1, "", "writeDecAsText"], [55, 2, 1, "", "writeHexAsText"], [55, 2, 1, "", "writePackedUInt"], [55, 2, 1, "", "writeScalar"], [55, 2, 1, "", "writeScalarAsText"], [55, 2, 1, "", "writeStream"], [55, 2, 1, "", "writeText"], [55, 2, 1, "", "writeToAndReset"], [55, 2, 1, "", "writeToStream"]], "skia.EncodedImageFormat": [[56, 2, 1, "", "__init__"], [56, 3, 1, "", "kASTC"], [56, 3, 1, "", "kBMP"], [56, 3, 1, "", "kDNG"], [56, 3, 1, "", "kGIF"], [56, 3, 1, "", "kHEIF"], [56, 3, 1, "", "kICO"], [56, 3, 1, "", "kJPEG"], [56, 3, 1, "", "kKTX"], [56, 3, 1, "", "kPKM"], [56, 3, 1, "", "kPNG"], [56, 3, 1, "", "kWBMP"], [56, 3, 1, "", "kWEBP"], [56, 3, 1, "", "name"], [56, 3, 1, "", "value"]], "skia.EncodedOrigin": [[57, 2, 1, "", "__init__"], [57, 3, 1, "", "kBottomLeft_EncodedOrigin"], [57, 3, 1, "", "kBottomRight_EncodedOrigin"], [57, 3, 1, "", "kDefault_EncodedOrigin"], [57, 3, 1, "", "kLast_EncodedOrigin"], [57, 3, 1, "", "kLeftBottom_EncodedOrigin"], [57, 3, 1, "", "kLeftTop_EncodedOrigin"], [57, 3, 1, "", "kRightBottom_EncodedOrigin"], [57, 3, 1, "", "kRightTop_EncodedOrigin"], [57, 3, 1, "", "kTopLeft_EncodedOrigin"], [57, 3, 1, "", "kTopRight_EncodedOrigin"], [57, 3, 1, "", "name"], [57, 3, 1, "", "value"]], "skia.FILEStream": [[58, 2, 1, "", "Make"], [58, 2, 1, "", "MakeFromFile"], [58, 2, 1, "", "__init__"], [58, 2, 1, "", "close"], [58, 2, 1, "", "duplicate"], [58, 2, 1, "", "fork"], [58, 2, 1, "", "getLength"], [58, 2, 1, "", "getMemoryBase"], [58, 2, 1, "", "getPosition"], [58, 2, 1, "", "hasLength"], [58, 2, 1, "", "hasPosition"], [58, 2, 1, "", "isAtEnd"], [58, 2, 1, "", "isValid"], [58, 2, 1, "", "move"], [58, 2, 1, "", "peek"], [58, 2, 1, "", "read"], [58, 2, 1, "", "readBool"], [58, 2, 1, "", "readPackedUInt"], [58, 2, 1, "", "readS16"], [58, 2, 1, "", "readS32"], [58, 2, 1, "", "readS8"], [58, 2, 1, "", "readScalar"], [58, 2, 1, "", "readU16"], [58, 2, 1, "", "readU32"], [58, 2, 1, "", "readU8"], [58, 2, 1, "", "rewind"], [58, 2, 1, "", "seek"], [58, 2, 1, "", "skip"]], "skia.FILEWStream": [[59, 2, 1, "", "SizeOfPackedUInt"], [59, 2, 1, "", "__init__"], [59, 2, 1, "", "bytesWritten"], [59, 2, 1, "", "flush"], [59, 2, 1, "", "fsync"], [59, 2, 1, "", "isValid"], [59, 2, 1, "", "newline"], [59, 2, 1, "", "write"], [59, 2, 1, "", "write16"], [59, 2, 1, "", "write32"], [59, 2, 1, "", "write8"], [59, 2, 1, "", "writeBigDecAsText"], [59, 2, 1, "", "writeBool"], [59, 2, 1, "", "writeDecAsText"], [59, 2, 1, "", "writeHexAsText"], [59, 2, 1, "", "writePackedUInt"], [59, 2, 1, "", "writeScalar"], [59, 2, 1, "", "writeScalarAsText"], [59, 2, 1, "", "writeStream"], [59, 2, 1, "", "writeText"]], "skia.FilterMode": [[60, 2, 1, "", "__init__"], [60, 3, 1, "", "kLinear"], [60, 3, 1, "", "kNearest"], [60, 3, 1, "", "name"], [60, 3, 1, "", "value"]], "skia.Flattanable": [[61, 2, 1, "", "Deserialize"], [62, 1, 1, "", "Type"], [61, 2, 1, "", "__init__"], [61, 2, 1, "", "getFlattenableType"], [61, 2, 1, "", "getTypeName"], [61, 3, 1, "", "kColorFilter_Type"], [61, 3, 1, "", "kDrawLooper_Type"], [61, 3, 1, "", "kDrawable_Type"], [61, 3, 1, "", "kImageFilter_Type"], [61, 3, 1, "", "kMaskFilter_Type"], [61, 3, 1, "", "kPathEffect_Type"], [61, 2, 1, "", "ref"], [61, 2, 1, "", "serialize"], [61, 2, 1, "", "unique"], [61, 2, 1, "", "unref"]], "skia.Flattanable.Type": [[62, 2, 1, "", "__init__"], [62, 3, 1, "", "kColorFilter_Type"], [62, 3, 1, "", "kDrawLooper_Type"], [62, 3, 1, "", "kDrawable_Type"], [62, 3, 1, "", "kImageFilter_Type"], [62, 3, 1, "", "kMaskFilter_Type"], [62, 3, 1, "", "kPathEffect_Type"], [62, 3, 1, "", "name"], [62, 3, 1, "", "value"]], "skia.Font": [[64, 1, 1, "", "Edging"], [63, 2, 1, "", "__init__"], [63, 2, 1, "", "countText"], [63, 2, 1, "", "dump"], [63, 2, 1, "", "getBounds"], [63, 2, 1, "", "getEdging"], [63, 2, 1, "", "getHinting"], [63, 2, 1, "", "getMetrics"], [63, 2, 1, "", "getPath"], [63, 2, 1, "", "getPaths"], [63, 2, 1, "", "getPos"], [63, 2, 1, "", "getScaleX"], [63, 2, 1, "", "getSize"], [63, 2, 1, "", "getSkewX"], [63, 2, 1, "", "getSpacing"], [63, 2, 1, "", "getTypeface"], [63, 2, 1, "", "getWidths"], [63, 2, 1, "", "getWidthsBounds"], [63, 2, 1, "", "getXPos"], [63, 2, 1, "", "isBaselineSnap"], [63, 2, 1, "", "isEmbeddedBitmaps"], [63, 2, 1, "", "isEmbolden"], [63, 2, 1, "", "isForceAutoHinting"], [63, 2, 1, "", "isLinearMetrics"], [63, 2, 1, "", "isSubpixel"], [63, 3, 1, "", "kAlias"], [63, 3, 1, "", "kAntiAlias"], [63, 3, 1, "", "kSubpixelAntiAlias"], [63, 2, 1, "", "makeWithSize"], [63, 2, 1, "", "measureText"], [63, 2, 1, "", "refTypeface"], [63, 2, 1, "", "setBaselineSnap"], [63, 2, 1, "", "setEdging"], [63, 2, 1, "", "setEmbeddedBitmaps"], [63, 2, 1, "", "setEmbolden"], [63, 2, 1, "", "setForceAutoHinting"], [63, 2, 1, "", "setHinting"], [63, 2, 1, "", "setLinearMetrics"], [63, 2, 1, "", "setScaleX"], [63, 2, 1, "", "setSize"], [63, 2, 1, "", "setSkewX"], [63, 2, 1, "", "setSubpixel"], [63, 2, 1, "", "setTypeface"], [63, 2, 1, "", "textToGlyphs"], [63, 2, 1, "", "unicharToGlyph"], [63, 2, 1, "", "unicharsToGlyphs"]], "skia.Font.Edging": [[64, 2, 1, "", "__init__"], [64, 3, 1, "", "kAlias"], [64, 3, 1, "", "kAntiAlias"], [64, 3, 1, "", "kSubpixelAntiAlias"], [64, 3, 1, "", "name"], [64, 3, 1, "", "value"]], "skia.FontArguments": [[66, 1, 1, "", "VariationPosition"], [65, 2, 1, "", "__init__"], [65, 2, 1, "", "getCollectionIndex"], [65, 2, 1, "", "getVariationDesignPosition"], [65, 2, 1, "", "setCollectionIndex"], [65, 2, 1, "", "setVariationDesignPosition"]], "skia.FontArguments.VariationPosition": [[67, 1, 1, "", "Coordinate"], [68, 1, 1, "", "Coordinates"], [66, 2, 1, "", "__init__"], [66, 3, 1, "", "coordinateCount"], [66, 3, 1, "", "coordinates"]], "skia.FontArguments.VariationPosition.Coordinate": [[67, 2, 1, "", "__init__"], [67, 3, 1, "", "axis"], [67, 3, 1, "", "value"]], "skia.FontArguments.VariationPosition.Coordinates": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "append"], [68, 2, 1, "", "clear"], [68, 2, 1, "", "extend"], [68, 2, 1, "", "insert"], [68, 2, 1, "", "pop"]], "skia.FontHinting": [[69, 2, 1, "", "__init__"], [69, 3, 1, "", "kFull"], [69, 3, 1, "", "kNone"], [69, 3, 1, "", "kNormal"], [69, 3, 1, "", "kSlight"], [69, 3, 1, "", "name"], [69, 3, 1, "", "value"]], "skia.FontMetrics": [[71, 1, 1, "", "FontMetricsFlags"], [70, 2, 1, "", "__init__"], [70, 3, 1, "", "fAscent"], [70, 3, 1, "", "fAvgCharWidth"], [70, 3, 1, "", "fBottom"], [70, 3, 1, "", "fCapHeight"], [70, 3, 1, "", "fDescent"], [70, 3, 1, "", "fFlags"], [70, 3, 1, "", "fLeading"], [70, 3, 1, "", "fMaxCharWidth"], [70, 3, 1, "", "fStrikeoutPosition"], [70, 3, 1, "", "fStrikeoutThickness"], [70, 3, 1, "", "fTop"], [70, 3, 1, "", "fUnderlinePosition"], [70, 3, 1, "", "fUnderlineThickness"], [70, 3, 1, "", "fXHeight"], [70, 3, 1, "", "fXMax"], [70, 3, 1, "", "fXMin"], [70, 2, 1, "", "hasStrikeoutPosition"], [70, 2, 1, "", "hasStrikeoutThickness"], [70, 2, 1, "", "hasUnderlinePosition"], [70, 2, 1, "", "hasUnderlineThickness"], [70, 3, 1, "", "kStrikeoutPositionIsValid_Flag"], [70, 3, 1, "", "kStrikeoutThicknessIsValid_Flag"], [70, 3, 1, "", "kUnderlinePositionIsValid_Flag"], [70, 3, 1, "", "kUnderlineThicknessIsValid_Flag"]], "skia.FontMetrics.FontMetricsFlags": [[71, 2, 1, "", "__init__"], [71, 3, 1, "", "kStrikeoutPositionIsValid_Flag"], [71, 3, 1, "", "kStrikeoutThicknessIsValid_Flag"], [71, 3, 1, "", "kUnderlinePositionIsValid_Flag"], [71, 3, 1, "", "kUnderlineThicknessIsValid_Flag"], [71, 3, 1, "", "name"], [71, 3, 1, "", "value"]], "skia.FontMgr": [[72, 2, 1, "", "New_Custom_Empty"], [72, 2, 1, "", "RefDefault"], [72, 2, 1, "", "__init__"], [72, 2, 1, "", "countFamilies"], [72, 2, 1, "", "createStyleSet"], [72, 2, 1, "", "getFamilyName"], [72, 2, 1, "", "legacyMakeTypeface"], [72, 2, 1, "", "makeFromData"], [72, 2, 1, "", "makeFromFile"], [72, 2, 1, "", "matchFamily"], [72, 2, 1, "", "matchFamilyStyle"], [72, 2, 1, "", "matchFamilyStyleCharacter"], [72, 2, 1, "", "ref"], [72, 2, 1, "", "unique"], [72, 2, 1, "", "unref"]], "skia.FontParameters": [[74, 1, 1, "", "Variation"], [73, 2, 1, "", "__init__"]], "skia.FontParameters.Variation": [[75, 1, 1, "", "Axis"], [74, 2, 1, "", "__init__"]], "skia.FontParameters.Variation.Axis": [[75, 2, 1, "", "__init__"], [75, 3, 1, "", "def"], [75, 2, 1, "", "isHidden"], [75, 3, 1, "", "max"], [75, 3, 1, "", "min"], [75, 2, 1, "", "setHidden"], [75, 3, 1, "", "tag"]], "skia.FontStyle": [[76, 2, 1, "", "Bold"], [76, 2, 1, "", "BoldItalic"], [76, 2, 1, "", "Italic"], [76, 2, 1, "", "Normal"], [77, 1, 1, "", "Slant"], [78, 1, 1, "", "Weight"], [79, 1, 1, "", "Width"], [76, 2, 1, "", "__init__"], [76, 3, 1, "", "kBlack_Weight"], [76, 3, 1, "", "kBold_Weight"], [76, 3, 1, "", "kCondensed_Width"], [76, 3, 1, "", "kExpanded_Width"], [76, 3, 1, "", "kExtraBlack_Weight"], [76, 3, 1, "", "kExtraBold_Weight"], [76, 3, 1, "", "kExtraCondensed_Width"], [76, 3, 1, "", "kExtraExpanded_Width"], [76, 3, 1, "", "kExtraLight_Weight"], [76, 3, 1, "", "kInvisible_Weight"], [76, 3, 1, "", "kItalic_Slant"], [76, 3, 1, "", "kLight_Weight"], [76, 3, 1, "", "kMedium_Weight"], [76, 3, 1, "", "kNormal_Weight"], [76, 3, 1, "", "kNormal_Width"], [76, 3, 1, "", "kOblique_Slant"], [76, 3, 1, "", "kSemiBold_Weight"], [76, 3, 1, "", "kSemiCondensed_Width"], [76, 3, 1, "", "kSemiExpanded_Width"], [76, 3, 1, "", "kThin_Weight"], [76, 3, 1, "", "kUltraCondensed_Width"], [76, 3, 1, "", "kUltraExpanded_Width"], [76, 3, 1, "", "kUpright_Slant"], [76, 2, 1, "", "slant"], [76, 2, 1, "", "weight"], [76, 2, 1, "", "width"]], "skia.FontStyle.Slant": [[77, 2, 1, "", "__init__"], [77, 3, 1, "", "kItalic_Slant"], [77, 3, 1, "", "kOblique_Slant"], [77, 3, 1, "", "kUpright_Slant"], [77, 3, 1, "", "name"], [77, 3, 1, "", "value"]], "skia.FontStyle.Weight": [[78, 2, 1, "", "__init__"], [78, 3, 1, "", "kBlack_Weight"], [78, 3, 1, "", "kBold_Weight"], [78, 3, 1, "", "kExtraBlack_Weight"], [78, 3, 1, "", "kExtraBold_Weight"], [78, 3, 1, "", "kExtraLight_Weight"], [78, 3, 1, "", "kInvisible_Weight"], [78, 3, 1, "", "kLight_Weight"], [78, 3, 1, "", "kMedium_Weight"], [78, 3, 1, "", "kNormal_Weight"], [78, 3, 1, "", "kSemiBold_Weight"], [78, 3, 1, "", "kThin_Weight"], [78, 3, 1, "", "name"], [78, 3, 1, "", "value"]], "skia.FontStyle.Width": [[79, 2, 1, "", "__init__"], [79, 3, 1, "", "kCondensed_Width"], [79, 3, 1, "", "kExpanded_Width"], [79, 3, 1, "", "kExtraCondensed_Width"], [79, 3, 1, "", "kExtraExpanded_Width"], [79, 3, 1, "", "kNormal_Width"], [79, 3, 1, "", "kSemiCondensed_Width"], [79, 3, 1, "", "kSemiExpanded_Width"], [79, 3, 1, "", "kUltraCondensed_Width"], [79, 3, 1, "", "kUltraExpanded_Width"], [79, 3, 1, "", "name"], [79, 3, 1, "", "value"]], "skia.FontStyleSet": [[80, 2, 1, "", "CreateEmpty"], [80, 2, 1, "", "__init__"], [80, 2, 1, "", "count"], [80, 2, 1, "", "createTypeface"], [80, 2, 1, "", "getStyle"], [80, 2, 1, "", "matchStyle"], [80, 2, 1, "", "ref"], [80, 2, 1, "", "unique"], [80, 2, 1, "", "unref"]], "skia.GrBackendApi": [[81, 2, 1, "", "__init__"], [81, 3, 1, "", "kDirect3D"], [81, 3, 1, "", "kMetal"], [81, 3, 1, "", "kMock"], [81, 3, 1, "", "kOpenGL"], [81, 3, 1, "", "kOpenGL_GrBackend"], [81, 3, 1, "", "kVulkan"], [81, 3, 1, "", "name"], [81, 3, 1, "", "value"]], "skia.GrBackendFormat": [[82, 2, 1, "", "MakeGL"], [82, 2, 1, "", "MakeMock"], [82, 2, 1, "", "MakeVk"], [82, 2, 1, "", "__init__"], [82, 2, 1, "", "asGLFormat"], [82, 2, 1, "", "asMockColorType"], [82, 2, 1, "", "asMockCompressionType"], [82, 2, 1, "", "asVkFormat"], [82, 2, 1, "", "backend"], [82, 2, 1, "", "channelMask"], [82, 2, 1, "", "getVkYcbcrConversionInfo"], [82, 2, 1, "", "isValid"], [82, 2, 1, "", "makeTexture2D"], [82, 2, 1, "", "textureType"]], "skia.GrBackendRenderTarget": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "backend"], [83, 2, 1, "", "dimensions"], [83, 2, 1, "", "getBackendFormat"], [83, 2, 1, "", "getGLFramebufferInfo"], [83, 2, 1, "", "getMockRenderTargetInfo"], [83, 2, 1, "", "getVkImageInfo"], [83, 2, 1, "", "height"], [83, 2, 1, "", "isFramebufferOnly"], [83, 2, 1, "", "isProtected"], [83, 2, 1, "", "isValid"], [83, 2, 1, "", "sampleCnt"], [83, 2, 1, "", "setVkImageLayout"], [83, 2, 1, "", "stencilBits"], [83, 2, 1, "", "width"]], "skia.GrBackendSemaphore": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "initVulkan"], [84, 2, 1, "", "isInitialized"], [84, 2, 1, "", "vkSemaphore"]], "skia.GrBackendTexture": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "backend"], [85, 2, 1, "", "dimensions"], [85, 2, 1, "", "getBackendFormat"], [85, 2, 1, "", "getGLTextureInfo"], [85, 2, 1, "", "getMockTextureInfo"], [85, 2, 1, "", "getVkImageInfo"], [85, 2, 1, "", "glTextureParametersModified"], [85, 2, 1, "", "hasMipmaps"], [85, 2, 1, "", "height"], [85, 2, 1, "", "isProtected"], [85, 2, 1, "", "isSameTexture"], [85, 2, 1, "", "isValid"], [85, 2, 1, "", "setMutableState"], [85, 2, 1, "", "setVkImageLayout"], [85, 2, 1, "", "width"]], "skia.GrColorType": [[86, 2, 1, "", "__init__"], [86, 3, 1, "", "kABGR_4444"], [86, 3, 1, "", "kAlpha_16"], [86, 3, 1, "", "kAlpha_8"], [86, 3, 1, "", "kAlpha_8xxx"], [86, 3, 1, "", "kAlpha_F16"], [86, 3, 1, "", "kAlpha_F32xxx"], [86, 3, 1, "", "kBGRA_8888"], [86, 3, 1, "", "kBGR_565"], [86, 3, 1, "", "kGray_8"], [86, 3, 1, "", "kGray_8xxx"], [86, 3, 1, "", "kGray_F16"], [86, 3, 1, "", "kLast"], [86, 3, 1, "", "kRGBA_1010102"], [86, 3, 1, "", "kRGBA_16161616"], [86, 3, 1, "", "kRGBA_8888"], [86, 3, 1, "", "kRGBA_8888_SRGB"], [86, 3, 1, "", "kRGBA_F16"], [86, 3, 1, "", "kRGBA_F16_Clamped"], [86, 3, 1, "", "kRGBA_F32"], [86, 3, 1, "", "kRGB_888"], [86, 3, 1, "", "kRGB_888x"], [86, 3, 1, "", "kRG_1616"], [86, 3, 1, "", "kRG_88"], [86, 3, 1, "", "kRG_F16"], [86, 3, 1, "", "kR_16"], [86, 3, 1, "", "kR_8"], [86, 3, 1, "", "kR_F16"], [86, 3, 1, "", "kUnknown"], [86, 3, 1, "", "name"], [86, 3, 1, "", "value"]], "skia.GrContext": [[87, 2, 1, "", "ComputeImageSize"], [87, 2, 1, "", "MakeGL"], [87, 2, 1, "", "MakeMock"], [87, 2, 1, "", "MakeVulkan"], [87, 2, 1, "", "__init__"], [87, 2, 1, "", "abandonContext"], [87, 2, 1, "", "abandoned"], [87, 2, 1, "", "asDirectContext"], [87, 2, 1, "", "backend"], [87, 2, 1, "", "checkAsyncWorkCompletion"], [87, 2, 1, "", "colorTypeSupportedAsImage"], [87, 2, 1, "", "colorTypeSupportedAsSurface"], [87, 2, 1, "", "compressedBackendFormat"], [87, 2, 1, "", "createBackendTexture"], [87, 2, 1, "", "createCompressedBackendTexture"], [87, 2, 1, "", "defaultBackendFormat"], [87, 2, 1, "", "deleteBackendTexture"], [87, 2, 1, "", "flush"], [87, 2, 1, "", "flushAndSubmit"], [87, 2, 1, "", "freeGpuResources"], [87, 2, 1, "", "getResourceCacheLimit"], [87, 2, 1, "", "getResourceCachePurgeableBytes"], [87, 2, 1, "", "getResourceCacheUsage"], [87, 2, 1, "", "maxRenderTargetSize"], [87, 2, 1, "", "maxSurfaceSampleCountForColorType"], [87, 2, 1, "", "maxTextureSize"], [87, 2, 1, "", "oomed"], [87, 2, 1, "", "precompileShader"], [87, 2, 1, "", "purgeResourcesNotUsedInMs"], [87, 2, 1, "", "purgeUnlockedResources"], [87, 2, 1, "", "ref"], [87, 2, 1, "", "releaseResourcesAndAbandonContext"], [87, 2, 1, "", "resetContext"], [87, 2, 1, "", "resetGLTextureBindings"], [87, 2, 1, "", "setBackendRenderTargetState"], [87, 2, 1, "", "setBackendTextureState"], [87, 2, 1, "", "setResourceCacheLimit"], [87, 2, 1, "", "storeVkPipelineCacheData"], [87, 2, 1, "", "submit"], [87, 2, 1, "", "supportsDistanceFieldText"], [87, 2, 1, "", "threadSafeProxy"], [87, 2, 1, "", "unique"], [87, 2, 1, "", "unref"], [87, 2, 1, "", "updateBackendTexture"], [87, 2, 1, "", "wait"]], "skia.GrContextOptions": [[88, 2, 1, "", "__init__"]], "skia.GrContext_Base": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "asDirectContext"], [89, 2, 1, "", "backend"], [89, 2, 1, "", "ref"], [89, 2, 1, "", "threadSafeProxy"], [89, 2, 1, "", "unique"], [89, 2, 1, "", "unref"]], "skia.GrDirectContext": [[90, 2, 1, "", "ComputeImageSize"], [90, 2, 1, "", "MakeGL"], [90, 2, 1, "", "MakeMock"], [90, 2, 1, "", "MakeVulkan"], [90, 2, 1, "", "__init__"], [90, 2, 1, "", "abandonContext"], [90, 2, 1, "", "abandoned"], [90, 2, 1, "", "asDirectContext"], [90, 2, 1, "", "backend"], [90, 2, 1, "", "checkAsyncWorkCompletion"], [90, 2, 1, "", "colorTypeSupportedAsImage"], [90, 2, 1, "", "colorTypeSupportedAsSurface"], [90, 2, 1, "", "compressedBackendFormat"], [90, 2, 1, "", "createBackendTexture"], [90, 2, 1, "", "createCompressedBackendTexture"], [90, 2, 1, "", "defaultBackendFormat"], [90, 2, 1, "", "deleteBackendTexture"], [90, 2, 1, "", "flush"], [90, 2, 1, "", "flushAndSubmit"], [90, 2, 1, "", "freeGpuResources"], [90, 2, 1, "", "getResourceCacheLimit"], [90, 2, 1, "", "getResourceCachePurgeableBytes"], [90, 2, 1, "", "getResourceCacheUsage"], [90, 2, 1, "", "maxRenderTargetSize"], [90, 2, 1, "", "maxSurfaceSampleCountForColorType"], [90, 2, 1, "", "maxTextureSize"], [90, 2, 1, "", "oomed"], [90, 2, 1, "", "precompileShader"], [90, 2, 1, "", "purgeResourcesNotUsedInMs"], [90, 2, 1, "", "purgeUnlockedResources"], [90, 2, 1, "", "ref"], [90, 2, 1, "", "releaseResourcesAndAbandonContext"], [90, 2, 1, "", "resetContext"], [90, 2, 1, "", "resetGLTextureBindings"], [90, 2, 1, "", "setBackendRenderTargetState"], [90, 2, 1, "", "setBackendTextureState"], [90, 2, 1, "", "setResourceCacheLimit"], [90, 2, 1, "", "storeVkPipelineCacheData"], [90, 2, 1, "", "submit"], [90, 2, 1, "", "supportsDistanceFieldText"], [90, 2, 1, "", "threadSafeProxy"], [90, 2, 1, "", "unique"], [90, 2, 1, "", "unref"], [90, 2, 1, "", "updateBackendTexture"], [90, 2, 1, "", "wait"]], "skia.GrFlushInfo": [[91, 2, 1, "", "__init__"], [91, 3, 1, "", "fNumSemaphores"], [91, 3, 1, "", "semaphores"]], "skia.GrGLBackendState": [[92, 2, 1, "", "__init__"], [92, 3, 1, "", "kALL_GrGLBackendState"], [92, 3, 1, "", "kBlend_GrGLBackendState"], [92, 3, 1, "", "kFixedFunction_GrGLBackendState"], [92, 3, 1, "", "kMSAAEnable_GrGLBackendState"], [92, 3, 1, "", "kMisc_GrGLBackendState"], [92, 3, 1, "", "kPixelStore_GrGLBackendState"], [92, 3, 1, "", "kProgram_GrGLBackendState"], [92, 3, 1, "", "kRenderTarget_GrGLBackendState"], [92, 3, 1, "", "kStencil_GrGLBackendState"], [92, 3, 1, "", "kTextureBinding_GrGLBackendState"], [92, 3, 1, "", "kVertex_GrGLBackendState"], [92, 3, 1, "", "kView_GrGLBackendState"], [92, 3, 1, "", "name"], [92, 3, 1, "", "value"]], "skia.GrGLFormat": [[93, 2, 1, "", "__init__"], [93, 3, 1, "", "kALPHA8"], [93, 3, 1, "", "kBGRA8"], [93, 3, 1, "", "kCOMPRESSED_ETC1_RGB8"], [93, 3, 1, "", "kCOMPRESSED_RGB8_BC1"], [93, 3, 1, "", "kCOMPRESSED_RGB8_ETC2"], [93, 3, 1, "", "kCOMPRESSED_RGBA8_BC1"], [93, 3, 1, "", "kLUMINANCE16F"], [93, 3, 1, "", "kLUMINANCE8"], [93, 3, 1, "", "kLast"], [93, 3, 1, "", "kR16"], [93, 3, 1, "", "kR16F"], [93, 3, 1, "", "kR8"], [93, 3, 1, "", "kRG16"], [93, 3, 1, "", "kRG16F"], [93, 3, 1, "", "kRG8"], [93, 3, 1, "", "kRGB10_A2"], [93, 3, 1, "", "kRGB565"], [93, 3, 1, "", "kRGB8"], [93, 3, 1, "", "kRGBA16"], [93, 3, 1, "", "kRGBA16F"], [93, 3, 1, "", "kRGBA4"], [93, 3, 1, "", "kRGBA8"], [93, 3, 1, "", "kSRGB8_ALPHA8"], [93, 3, 1, "", "kUnknown"], [93, 3, 1, "", "name"], [93, 3, 1, "", "value"]], "skia.GrGLFramebufferInfo": [[94, 2, 1, "", "__init__"], [94, 3, 1, "", "fFBOID"], [94, 3, 1, "", "fFormat"]], "skia.GrGLInterface": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "ref"], [95, 2, 1, "", "unique"], [95, 2, 1, "", "unref"]], "skia.GrGLTextureInfo": [[96, 2, 1, "", "__init__"], [96, 3, 1, "", "fFormat"], [96, 3, 1, "", "fID"], [96, 3, 1, "", "fTarget"]], "skia.GrImageContext": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "asDirectContext"], [97, 2, 1, "", "backend"], [97, 2, 1, "", "ref"], [97, 2, 1, "", "threadSafeProxy"], [97, 2, 1, "", "unique"], [97, 2, 1, "", "unref"]], "skia.GrMipmapped": [[98, 2, 1, "", "__init__"], [98, 3, 1, "", "kNo"], [98, 3, 1, "", "kYes"], [98, 3, 1, "", "name"], [98, 3, 1, "", "value"]], "skia.GrMockOptions": [[99, 2, 1, "", "__init__"]], "skia.GrMockRenderTargetInfo": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "colorType"], [100, 2, 1, "", "getBackendFormat"]], "skia.GrMockTextureInfo": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "colorType"], [101, 2, 1, "", "compressionType"], [101, 2, 1, "", "getBackendFormat"], [101, 2, 1, "", "id"]], "skia.GrProtected": [[102, 2, 1, "", "__init__"], [102, 3, 1, "", "kNo"], [102, 3, 1, "", "kYes"], [102, 3, 1, "", "name"], [102, 3, 1, "", "value"]], "skia.GrPurgeResourceOptions": [[103, 2, 1, "", "__init__"], [103, 3, 1, "", "kAllResources"], [103, 3, 1, "", "kScratchResourcesOnly"], [103, 3, 1, "", "name"], [103, 3, 1, "", "value"]], "skia.GrRecordingContext": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "abandoned"], [104, 2, 1, "", "asDirectContext"], [104, 2, 1, "", "backend"], [104, 2, 1, "", "colorTypeSupportedAsImage"], [104, 2, 1, "", "colorTypeSupportedAsSurface"], [104, 2, 1, "", "defaultBackendFormat"], [104, 2, 1, "", "maxRenderTargetSize"], [104, 2, 1, "", "maxSurfaceSampleCountForColorType"], [104, 2, 1, "", "maxTextureSize"], [104, 2, 1, "", "ref"], [104, 2, 1, "", "threadSafeProxy"], [104, 2, 1, "", "unique"], [104, 2, 1, "", "unref"]], "skia.GrRenderable": [[105, 2, 1, "", "__init__"], [105, 3, 1, "", "kNo"], [105, 3, 1, "", "kYes"], [105, 3, 1, "", "name"], [105, 3, 1, "", "value"]], "skia.GrSemaphoresSubmitted": [[106, 2, 1, "", "__init__"], [106, 3, 1, "", "kNo"], [106, 3, 1, "", "kYes"], [106, 3, 1, "", "name"], [106, 3, 1, "", "value"]], "skia.GrSurfaceOrigin": [[107, 2, 1, "", "__init__"], [107, 3, 1, "", "kBottomLeft_GrSurfaceOrigin"], [107, 3, 1, "", "kTopLeft_GrSurfaceOrigin"], [107, 3, 1, "", "name"], [107, 3, 1, "", "value"]], "skia.GrSyncCpu": [[108, 2, 1, "", "__init__"], [108, 3, 1, "", "kNo"], [108, 3, 1, "", "kYes"], [108, 3, 1, "", "name"], [108, 3, 1, "", "value"]], "skia.GrTextureType": [[109, 2, 1, "", "__init__"], [109, 3, 1, "", "k2D"], [109, 3, 1, "", "kExternal"], [109, 3, 1, "", "kNone"], [109, 3, 1, "", "kRectangle"], [109, 3, 1, "", "name"], [109, 3, 1, "", "value"]], "skia.GrVkAlloc": [[110, 2, 1, "", "__init__"]], "skia.GrVkBackendContext": [[111, 2, 1, "", "__init__"]], "skia.GrVkDrawableInfo": [[112, 2, 1, "", "__init__"]], "skia.GrVkExtensionFlags": [[113, 2, 1, "", "__init__"], [113, 3, 1, "", "kEXT_debug_report_GrVkExtensionFlag"], [113, 3, 1, "", "kKHR_android_surface_GrVkExtensionFlag"], [113, 3, 1, "", "kKHR_surface_GrVkExtensionFlag"], [113, 3, 1, "", "kKHR_swapchain_GrVkExtensionFlag"], [113, 3, 1, "", "kKHR_win32_surface_GrVkExtensionFlag"], [113, 3, 1, "", "kKHR_xcb_surface_GrVkExtensionFlag"], [113, 3, 1, "", "kNV_glsl_shader_GrVkExtensionFlag"], [113, 3, 1, "", "name"], [113, 3, 1, "", "value"]], "skia.GrVkFeatureFlags": [[114, 2, 1, "", "__init__"], [114, 3, 1, "", "kDualSrcBlend_GrVkFeatureFlag"], [114, 3, 1, "", "kGeometryShader_GrVkFeatureFlag"], [114, 3, 1, "", "kSampleRateShading_GrVkFeatureFlag"], [114, 3, 1, "", "name"], [114, 3, 1, "", "value"]], "skia.GrVkImageInfo": [[115, 2, 1, "", "__init__"], [115, 3, 1, "", "fAlloc"], [115, 3, 1, "", "fCurrentQueueFamily"], [115, 3, 1, "", "fLevelCount"], [115, 3, 1, "", "fProtected"], [115, 3, 1, "", "fSharingMode"], [115, 3, 1, "", "fYcbcrConversionInfo"]], "skia.GrVkYcbcrConversionInfo": [[116, 2, 1, "", "__init__"]], "skia.GradientShader": [[118, 1, 1, "", "Flags"], [117, 2, 1, "", "MakeLinear"], [117, 2, 1, "", "MakeRadial"], [117, 2, 1, "", "MakeSweep"], [117, 2, 1, "", "MakeTwoPointConical"], [117, 2, 1, "", "__init__"], [117, 3, 1, "", "kInterpolateColorsInPremul_Flag"]], "skia.GradientShader.Flags": [[118, 2, 1, "", "__init__"], [118, 3, 1, "", "kInterpolateColorsInPremul_Flag"], [118, 3, 1, "", "name"], [118, 3, 1, "", "value"]], "skia.HighContrastConfig": [[120, 1, 1, "", "InvertStyle"], [119, 2, 1, "", "__init__"], [119, 3, 1, "", "fContrast"], [119, 3, 1, "", "fGrayscale"], [119, 3, 1, "", "fInvertStyle"], [119, 2, 1, "", "isValid"], [119, 3, 1, "", "kInvertBrightness"], [119, 3, 1, "", "kInvertLightness"], [119, 3, 1, "", "kLast"], [119, 3, 1, "", "kNoInvert"]], "skia.HighContrastConfig.InvertStyle": [[120, 2, 1, "", "__init__"], [120, 3, 1, "", "kInvertBrightness"], [120, 3, 1, "", "kInvertLightness"], [120, 3, 1, "", "kLast"], [120, 3, 1, "", "kNoInvert"], [120, 3, 1, "", "name"], [120, 3, 1, "", "value"]], "skia.HighContrastFilter": [[121, 2, 1, "", "Make"], [121, 2, 1, "", "__init__"]], "skia.IPoint": [[122, 2, 1, "", "Make"], [122, 2, 1, "", "__init__"], [122, 2, 1, "", "equals"], [122, 3, 1, "", "fX"], [122, 3, 1, "", "fY"], [122, 2, 1, "", "isZero"], [122, 2, 1, "", "set"], [122, 2, 1, "", "x"], [122, 2, 1, "", "y"]], "skia.IRect": [[123, 2, 1, "", "Intersects"], [123, 2, 1, "", "MakeEmpty"], [123, 2, 1, "", "MakeLTRB"], [123, 2, 1, "", "MakeSize"], [123, 2, 1, "", "MakeWH"], [123, 2, 1, "", "MakeXYWH"], [123, 2, 1, "", "__init__"], [123, 2, 1, "", "adjust"], [123, 2, 1, "", "bottom"], [123, 2, 1, "", "contains"], [123, 2, 1, "", "containsNoEmptyCheck"], [123, 3, 1, "", "fBottom"], [123, 3, 1, "", "fLeft"], [123, 3, 1, "", "fRight"], [123, 3, 1, "", "fTop"], [123, 2, 1, "", "height"], [123, 2, 1, "", "height64"], [123, 2, 1, "", "inset"], [123, 2, 1, "", "intersect"], [123, 2, 1, "", "isEmpty"], [123, 2, 1, "", "isEmpty64"], [123, 2, 1, "", "join"], [123, 2, 1, "", "left"], [123, 2, 1, "", "makeInset"], [123, 2, 1, "", "makeOffset"], [123, 2, 1, "", "makeOutset"], [123, 2, 1, "", "makeSorted"], [123, 2, 1, "", "offset"], [123, 2, 1, "", "offsetTo"], [123, 2, 1, "", "outset"], [123, 2, 1, "", "right"], [123, 2, 1, "", "setEmpty"], [123, 2, 1, "", "setLTRB"], [123, 2, 1, "", "setWH"], [123, 2, 1, "", "setXYWH"], [123, 2, 1, "", "size"], [123, 2, 1, "", "sort"], [123, 2, 1, "", "top"], [123, 2, 1, "", "topLeft"], [123, 2, 1, "", "width"], [123, 2, 1, "", "width64"], [123, 2, 1, "", "x"], [123, 2, 1, "", "y"]], "skia.ISize": [[124, 2, 1, "", "Make"], [124, 2, 1, "", "MakeEmpty"], [124, 2, 1, "", "__init__"], [124, 2, 1, "", "area"], [124, 2, 1, "", "equals"], [124, 3, 1, "", "fHeight"], [124, 3, 1, "", "fWidth"], [124, 2, 1, "", "height"], [124, 2, 1, "", "isEmpty"], [124, 2, 1, "", "isZero"], [124, 2, 1, "", "set"], [124, 2, 1, "", "setEmpty"], [124, 2, 1, "", "width"]], "skia.Image": [[126, 1, 1, "", "BitDepth"], [127, 1, 1, "", "CachingHint"], [128, 1, 1, "", "CompressionType"], [129, 1, 1, "", "LegacyBitmapMode"], [125, 2, 1, "", "MakeBackendTextureFromImage"], [125, 2, 1, "", "MakeCrossContextFromPixmap"], [125, 2, 1, "", "MakeFromAdoptedTexture"], [125, 2, 1, "", "MakeFromBitmap"], [125, 2, 1, "", "MakeFromCompressedTexture"], [125, 2, 1, "", "MakeFromEncoded"], [125, 2, 1, "", "MakeFromPicture"], [125, 2, 1, "", "MakeFromRaster"], [125, 2, 1, "", "MakeFromTexture"], [125, 2, 1, "", "MakeFromYUVAPixmaps"], [125, 2, 1, "", "MakeRasterCopy"], [125, 2, 1, "", "MakeRasterData"], [125, 2, 1, "", "MakeRasterFromCompressed"], [125, 2, 1, "", "MakeTextureFromCompressed"], [125, 2, 1, "", "__init__"], [125, 2, 1, "", "alphaType"], [125, 2, 1, "", "asLegacyBitmap"], [125, 2, 1, "", "bitmap"], [125, 2, 1, "", "bounds"], [125, 2, 1, "", "colorSpace"], [125, 2, 1, "", "colorType"], [125, 2, 1, "", "convert"], [125, 2, 1, "", "dimensions"], [125, 2, 1, "", "encodeToData"], [125, 2, 1, "", "flush"], [125, 2, 1, "", "flushAndSubmit"], [125, 2, 1, "", "fromarray"], [125, 2, 1, "", "frombytes"], [125, 2, 1, "", "getBackendTexture"], [125, 2, 1, "", "hasMipmaps"], [125, 2, 1, "", "height"], [125, 2, 1, "", "imageInfo"], [125, 2, 1, "", "isAlphaOnly"], [125, 2, 1, "", "isLazyGenerated"], [125, 2, 1, "", "isOpaque"], [125, 2, 1, "", "isTextureBacked"], [125, 2, 1, "", "isValid"], [125, 3, 1, "", "kAllow_CachingHint"], [125, 3, 1, "", "kBC1_RGB8_UNORM"], [125, 3, 1, "", "kBC1_RGBA8_UNORM"], [125, 3, 1, "", "kDisallow_CachingHint"], [125, 3, 1, "", "kETC2_RGB8_UNORM"], [125, 3, 1, "", "kF16"], [125, 3, 1, "", "kLast"], [125, 3, 1, "", "kNone"], [125, 3, 1, "", "kRO_LegacyBitmapMode"], [125, 3, 1, "", "kU8"], [125, 2, 1, "", "makeColorSpace"], [125, 2, 1, "", "makeColorTypeAndColorSpace"], [125, 2, 1, "", "makeNonTextureImage"], [125, 2, 1, "", "makeRasterImage"], [125, 2, 1, "", "makeShader"], [125, 2, 1, "", "makeSubset"], [125, 2, 1, "", "makeTextureImage"], [125, 2, 1, "", "makeWithFilter"], [125, 2, 1, "", "open"], [125, 2, 1, "", "peekPixels"], [125, 2, 1, "", "readPixels"], [125, 2, 1, "", "ref"], [125, 2, 1, "", "refColorSpace"], [125, 2, 1, "", "refEncodedData"], [125, 2, 1, "", "reinterpretColorSpace"], [125, 2, 1, "", "resize"], [125, 2, 1, "", "save"], [125, 2, 1, "", "scalePixels"], [125, 2, 1, "", "toarray"], [125, 2, 1, "", "tobytes"], [125, 2, 1, "", "unique"], [125, 2, 1, "", "uniqueID"], [125, 2, 1, "", "unref"], [125, 2, 1, "", "width"], [125, 2, 1, "", "withDefaultMipmaps"]], "skia.Image.BitDepth": [[126, 2, 1, "", "__init__"], [126, 3, 1, "", "kF16"], [126, 3, 1, "", "kU8"], [126, 3, 1, "", "name"], [126, 3, 1, "", "value"]], "skia.Image.CachingHint": [[127, 2, 1, "", "__init__"], [127, 3, 1, "", "kAllow_CachingHint"], [127, 3, 1, "", "kDisallow_CachingHint"], [127, 3, 1, "", "name"], [127, 3, 1, "", "value"]], "skia.Image.CompressionType": [[128, 2, 1, "", "__init__"], [128, 3, 1, "", "kBC1_RGB8_UNORM"], [128, 3, 1, "", "kBC1_RGBA8_UNORM"], [128, 3, 1, "", "kETC2_RGB8_UNORM"], [128, 3, 1, "", "kLast"], [128, 3, 1, "", "kNone"], [128, 3, 1, "", "name"], [128, 3, 1, "", "value"]], "skia.Image.LegacyBitmapMode": [[129, 2, 1, "", "__init__"], [129, 3, 1, "", "kRO_LegacyBitmapMode"], [129, 3, 1, "", "name"], [129, 3, 1, "", "value"]], "skia.ImageFilter": [[131, 1, 1, "", "CropRect"], [130, 2, 1, "", "Deserialize"], [132, 1, 1, "", "MapDirection"], [133, 1, 1, "", "Type"], [130, 2, 1, "", "__init__"], [130, 2, 1, "", "asAColorFilter"], [130, 2, 1, "", "asColorFilter"], [130, 2, 1, "", "canComputeFastBounds"], [130, 2, 1, "", "computeFastBounds"], [130, 2, 1, "", "countInputs"], [130, 2, 1, "", "filterBounds"], [130, 2, 1, "", "getFlattenableType"], [130, 2, 1, "", "getInput"], [130, 2, 1, "", "getTypeName"], [130, 2, 1, "", "isColorFilterNode"], [130, 3, 1, "", "kColorFilter_Type"], [130, 3, 1, "", "kDrawLooper_Type"], [130, 3, 1, "", "kDrawable_Type"], [130, 3, 1, "", "kForward_MapDirection"], [130, 3, 1, "", "kImageFilter_Type"], [130, 3, 1, "", "kMaskFilter_Type"], [130, 3, 1, "", "kPathEffect_Type"], [130, 3, 1, "", "kReverse_MapDirection"], [130, 2, 1, "", "makeWithLocalMatrix"], [130, 2, 1, "", "ref"], [130, 2, 1, "", "serialize"], [130, 2, 1, "", "unique"], [130, 2, 1, "", "unref"]], "skia.ImageFilter.CropRect": [[131, 2, 1, "", "__init__"]], "skia.ImageFilter.MapDirection": [[132, 2, 1, "", "__init__"], [132, 3, 1, "", "kForward_MapDirection"], [132, 3, 1, "", "kReverse_MapDirection"], [132, 3, 1, "", "name"], [132, 3, 1, "", "value"]], "skia.ImageFilter.Type": [[133, 2, 1, "", "__init__"], [133, 3, 1, "", "kColorFilter_Type"], [133, 3, 1, "", "kDrawLooper_Type"], [133, 3, 1, "", "kDrawable_Type"], [133, 3, 1, "", "kImageFilter_Type"], [133, 3, 1, "", "kMaskFilter_Type"], [133, 3, 1, "", "kPathEffect_Type"], [133, 3, 1, "", "name"], [133, 3, 1, "", "value"]], "skia.ImageFilters": [[134, 2, 1, "", "Arithmetic"], [134, 2, 1, "", "Blur"], [134, 2, 1, "", "ColorFilter"], [134, 2, 1, "", "Compose"], [134, 2, 1, "", "Dilate"], [134, 2, 1, "", "DisplacementMap"], [134, 2, 1, "", "DistantLitDiffuse"], [134, 2, 1, "", "DistantLitSpecular"], [134, 2, 1, "", "DropShadow"], [134, 2, 1, "", "DropShadowOnly"], [134, 2, 1, "", "Erode"], [134, 2, 1, "", "Image"], [134, 2, 1, "", "Magnifier"], [134, 2, 1, "", "MatrixConvolution"], [134, 2, 1, "", "MatrixTransform"], [134, 2, 1, "", "Merge"], [134, 2, 1, "", "Offset"], [134, 2, 1, "", "Picture"], [134, 2, 1, "", "PointLitDiffuse"], [134, 2, 1, "", "PointLitSpecular"], [134, 2, 1, "", "SpotLitDiffuse"], [134, 2, 1, "", "SpotLitSpecular"], [134, 2, 1, "", "Tile"], [134, 2, 1, "", "Xfermode"], [134, 2, 1, "", "__init__"]], "skia.ImageInfo": [[135, 2, 1, "", "ByteSizeOverflowed"], [135, 2, 1, "", "Make"], [135, 2, 1, "", "MakeA8"], [135, 2, 1, "", "MakeN32"], [135, 2, 1, "", "MakeN32Premul"], [135, 2, 1, "", "MakeS32"], [135, 2, 1, "", "MakeUnknown"], [135, 2, 1, "", "__init__"], [135, 2, 1, "", "alphaType"], [135, 2, 1, "", "bounds"], [135, 2, 1, "", "bytesPerPixel"], [135, 2, 1, "", "colorInfo"], [135, 2, 1, "", "colorSpace"], [135, 2, 1, "", "colorType"], [135, 2, 1, "", "computeByteSize"], [135, 2, 1, "", "computeMinByteSize"], [135, 2, 1, "", "computeOffset"], [135, 2, 1, "", "dimensions"], [135, 2, 1, "", "gammaCloseToSRGB"], [135, 2, 1, "", "height"], [135, 2, 1, "", "isEmpty"], [135, 2, 1, "", "isOpaque"], [135, 2, 1, "", "makeAlphaType"], [135, 2, 1, "", "makeColorSpace"], [135, 2, 1, "", "makeColorType"], [135, 2, 1, "", "makeDimensions"], [135, 2, 1, "", "makeWH"], [135, 2, 1, "", "minRowBytes"], [135, 2, 1, "", "minRowBytes64"], [135, 2, 1, "", "refColorSpace"], [135, 2, 1, "", "reset"], [135, 2, 1, "", "shiftPerPixel"], [135, 2, 1, "", "validRowBytes"], [135, 2, 1, "", "width"]], "skia.Line2DPathEffect": [[136, 2, 1, "", "Make"], [136, 2, 1, "", "__init__"]], "skia.LumaColorFilter": [[137, 2, 1, "", "Make"], [137, 2, 1, "", "__init__"]], "skia.M44": [[138, 2, 1, "", "__init__"]], "skia.MaskFilter": [[139, 2, 1, "", "Deserialize"], [139, 2, 1, "", "MakeBlur"], [140, 1, 1, "", "Type"], [139, 2, 1, "", "__init__"], [139, 2, 1, "", "getFlattenableType"], [139, 2, 1, "", "getTypeName"], [139, 3, 1, "", "kColorFilter_Type"], [139, 3, 1, "", "kDrawLooper_Type"], [139, 3, 1, "", "kDrawable_Type"], [139, 3, 1, "", "kImageFilter_Type"], [139, 3, 1, "", "kMaskFilter_Type"], [139, 3, 1, "", "kPathEffect_Type"], [139, 2, 1, "", "ref"], [139, 2, 1, "", "serialize"], [139, 2, 1, "", "unique"], [139, 2, 1, "", "unref"]], "skia.MaskFilter.Type": [[140, 2, 1, "", "__init__"], [140, 3, 1, "", "kColorFilter_Type"], [140, 3, 1, "", "kDrawLooper_Type"], [140, 3, 1, "", "kDrawable_Type"], [140, 3, 1, "", "kImageFilter_Type"], [140, 3, 1, "", "kMaskFilter_Type"], [140, 3, 1, "", "kPathEffect_Type"], [140, 3, 1, "", "name"], [140, 3, 1, "", "value"]], "skia.Matrix": [[141, 2, 1, "", "Concat"], [141, 2, 1, "", "I"], [141, 2, 1, "", "InvalidMatrix"], [141, 2, 1, "", "MakeAll"], [141, 2, 1, "", "MakeRectToRect"], [141, 2, 1, "", "RotateDeg"], [141, 2, 1, "", "RotateRad"], [141, 2, 1, "", "Scale"], [142, 1, 1, "", "ScaleToFit"], [141, 2, 1, "", "SetAffineIdentity"], [141, 2, 1, "", "Translate"], [143, 1, 1, "", "TypeMask"], [141, 2, 1, "", "__init__"], [141, 2, 1, "", "asAffine"], [141, 2, 1, "", "decomposeScale"], [141, 2, 1, "", "dirtyMatrixTypeCache"], [141, 2, 1, "", "dump"], [141, 2, 1, "", "get"], [141, 2, 1, "", "get9"], [141, 2, 1, "", "getMaxScale"], [141, 2, 1, "", "getMinMaxScales"], [141, 2, 1, "", "getMinScale"], [141, 2, 1, "", "getPerspX"], [141, 2, 1, "", "getPerspY"], [141, 2, 1, "", "getScaleX"], [141, 2, 1, "", "getScaleY"], [141, 2, 1, "", "getSkewX"], [141, 2, 1, "", "getSkewY"], [141, 2, 1, "", "getTranslateX"], [141, 2, 1, "", "getTranslateY"], [141, 2, 1, "", "getType"], [141, 2, 1, "", "hasPerspective"], [141, 2, 1, "", "invert"], [141, 2, 1, "", "isFinite"], [141, 2, 1, "", "isIdentity"], [141, 2, 1, "", "isScaleTranslate"], [141, 2, 1, "", "isSimilarity"], [141, 2, 1, "", "isTranslate"], [141, 3, 1, "", "kAScaleX"], [141, 3, 1, "", "kAScaleY"], [141, 3, 1, "", "kASkewX"], [141, 3, 1, "", "kASkewY"], [141, 3, 1, "", "kATransX"], [141, 3, 1, "", "kATransY"], [141, 3, 1, "", "kAffine_Mask"], [141, 3, 1, "", "kCenter_ScaleToFit"], [141, 3, 1, "", "kEnd_ScaleToFit"], [141, 3, 1, "", "kFill_ScaleToFit"], [141, 3, 1, "", "kIdentity_Mask"], [141, 3, 1, "", "kMPersp0"], [141, 3, 1, "", "kMPersp1"], [141, 3, 1, "", "kMPersp2"], [141, 3, 1, "", "kMScaleX"], [141, 3, 1, "", "kMScaleY"], [141, 3, 1, "", "kMSkewX"], [141, 3, 1, "", "kMSkewY"], [141, 3, 1, "", "kMTransX"], [141, 3, 1, "", "kMTransY"], [141, 3, 1, "", "kPerspective_Mask"], [141, 3, 1, "", "kScale_Mask"], [141, 3, 1, "", "kStart_ScaleToFit"], [141, 3, 1, "", "kTranslate_Mask"], [141, 2, 1, "", "mapHomogeneousPoints"], [141, 2, 1, "", "mapPoints"], [141, 2, 1, "", "mapRadius"], [141, 2, 1, "", "mapRect"], [141, 2, 1, "", "mapRectScaleTranslate"], [141, 2, 1, "", "mapRectToQuad"], [141, 2, 1, "", "mapVector"], [141, 2, 1, "", "mapVectors"], [141, 2, 1, "", "mapXY"], [141, 2, 1, "", "normalizePerspective"], [141, 2, 1, "", "postConcat"], [141, 2, 1, "", "postRotate"], [141, 2, 1, "", "postScale"], [141, 2, 1, "", "postSkew"], [141, 2, 1, "", "postTranslate"], [141, 2, 1, "", "preConcat"], [141, 2, 1, "", "preRotate"], [141, 2, 1, "", "preScale"], [141, 2, 1, "", "preSkew"], [141, 2, 1, "", "preTranslate"], [141, 2, 1, "", "preservesAxisAlignment"], [141, 2, 1, "", "preservesRightAngles"], [141, 2, 1, "", "rc"], [141, 2, 1, "", "rectStaysRect"], [141, 2, 1, "", "reset"], [141, 2, 1, "", "set"], [141, 2, 1, "", "set9"], [141, 2, 1, "", "setAffine"], [141, 2, 1, "", "setAll"], [141, 2, 1, "", "setConcat"], [141, 2, 1, "", "setIdentity"], [141, 2, 1, "", "setPerspX"], [141, 2, 1, "", "setPerspY"], [141, 2, 1, "", "setPolyToPoly"], [141, 2, 1, "", "setRSXform"], [141, 2, 1, "", "setRectToRect"], [141, 2, 1, "", "setRotate"], [141, 2, 1, "", "setScale"], [141, 2, 1, "", "setScaleTranslate"], [141, 2, 1, "", "setScaleX"], [141, 2, 1, "", "setScaleY"], [141, 2, 1, "", "setSinCos"], [141, 2, 1, "", "setSkew"], [141, 2, 1, "", "setSkewX"], [141, 2, 1, "", "setSkewY"], [141, 2, 1, "", "setTranslate"], [141, 2, 1, "", "setTranslateX"], [141, 2, 1, "", "setTranslateY"]], "skia.Matrix.ScaleToFit": [[142, 2, 1, "", "__init__"], [142, 3, 1, "", "kCenter_ScaleToFit"], [142, 3, 1, "", "kEnd_ScaleToFit"], [142, 3, 1, "", "kFill_ScaleToFit"], [142, 3, 1, "", "kStart_ScaleToFit"], [142, 3, 1, "", "name"], [142, 3, 1, "", "value"]], "skia.Matrix.TypeMask": [[143, 2, 1, "", "__init__"], [143, 3, 1, "", "kAffine_Mask"], [143, 3, 1, "", "kIdentity_Mask"], [143, 3, 1, "", "kPerspective_Mask"], [143, 3, 1, "", "kScale_Mask"], [143, 3, 1, "", "kTranslate_Mask"], [143, 3, 1, "", "name"], [143, 3, 1, "", "value"]], "skia.MemoryStream": [[144, 2, 1, "", "Make"], [144, 2, 1, "", "MakeCopy"], [144, 2, 1, "", "MakeDirect"], [144, 2, 1, "", "MakeFromFile"], [144, 2, 1, "", "__init__"], [144, 2, 1, "", "asData"], [144, 2, 1, "", "duplicate"], [144, 2, 1, "", "fork"], [144, 2, 1, "", "getAtPos"], [144, 2, 1, "", "getLength"], [144, 2, 1, "", "getMemoryBase"], [144, 2, 1, "", "getPosition"], [144, 2, 1, "", "hasLength"], [144, 2, 1, "", "hasPosition"], [144, 2, 1, "", "isAtEnd"], [144, 2, 1, "", "move"], [144, 2, 1, "", "peek"], [144, 2, 1, "", "read"], [144, 2, 1, "", "readBool"], [144, 2, 1, "", "readPackedUInt"], [144, 2, 1, "", "readS16"], [144, 2, 1, "", "readS32"], [144, 2, 1, "", "readS8"], [144, 2, 1, "", "readScalar"], [144, 2, 1, "", "readU16"], [144, 2, 1, "", "readU32"], [144, 2, 1, "", "readU8"], [144, 2, 1, "", "rewind"], [144, 2, 1, "", "seek"], [144, 2, 1, "", "setData"], [144, 2, 1, "", "setMemory"], [144, 2, 1, "", "skip"], [144, 2, 1, "", "skipToAlign4"]], "skia.MipmapBuilder": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "attachTo"], [145, 2, 1, "", "countLevels"], [145, 2, 1, "", "level"]], "skia.NullWStream": [[146, 2, 1, "", "SizeOfPackedUInt"], [146, 2, 1, "", "__init__"], [146, 2, 1, "", "bytesWritten"], [146, 2, 1, "", "flush"], [146, 2, 1, "", "newline"], [146, 2, 1, "", "write"], [146, 2, 1, "", "write16"], [146, 2, 1, "", "write32"], [146, 2, 1, "", "write8"], [146, 2, 1, "", "writeBigDecAsText"], [146, 2, 1, "", "writeBool"], [146, 2, 1, "", "writeDecAsText"], [146, 2, 1, "", "writeHexAsText"], [146, 2, 1, "", "writePackedUInt"], [146, 2, 1, "", "writeScalar"], [146, 2, 1, "", "writeScalarAsText"], [146, 2, 1, "", "writeStream"], [146, 2, 1, "", "writeText"]], "skia.OpBuilder": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "add"], [147, 2, 1, "", "resolve"]], "skia.OverdrawColorFilter": [[148, 2, 1, "", "MakeWithColors"], [148, 2, 1, "", "__init__"], [148, 3, 1, "", "kNumColors"]], "skia.PDF": [[150, 1, 1, "", "AttributeList"], [149, 2, 1, "", "MakeDocument"], [151, 1, 1, "", "Metadata"], [149, 2, 1, "", "SetNodeId"], [152, 1, 1, "", "StructureElementNode"], [149, 2, 1, "", "__init__"]], "skia.PDF.AttributeList": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "appendFloat"], [150, 2, 1, "", "appendFloatArray"], [150, 2, 1, "", "appendInt"], [150, 2, 1, "", "appendString"], [150, 2, 1, "", "appendStringArray"]], "skia.PDF.Metadata": [[151, 2, 1, "", "__init__"], [151, 3, 1, "", "fAuthor"], [151, 3, 1, "", "fCreator"], [151, 3, 1, "", "fEncodingQuality"], [151, 3, 1, "", "fKeywords"], [151, 3, 1, "", "fPDFA"], [151, 3, 1, "", "fProducer"], [151, 3, 1, "", "fRasterDPI"], [151, 3, 1, "", "fStructureElementTreeRoot"], [151, 3, 1, "", "fSubject"], [151, 3, 1, "", "fTitle"]], "skia.PDF.StructureElementNode": [[152, 2, 1, "", "__init__"], [152, 3, 1, "", "fAdditionalNodeIds"], [152, 3, 1, "", "fAlt"], [152, 3, 1, "", "fAttributes"], [152, 3, 1, "", "fLang"], [152, 3, 1, "", "fNodeId"], [152, 3, 1, "", "fTypeString"]], "skia.Paint": [[154, 1, 1, "", "Cap"], [155, 1, 1, "", "Join"], [156, 1, 1, "", "Style"], [153, 2, 1, "", "__init__"], [153, 2, 1, "", "canComputeFastBounds"], [153, 2, 1, "", "computeFastBounds"], [153, 2, 1, "", "computeFastStrokeBounds"], [153, 2, 1, "", "doComputeFastBounds"], [153, 2, 1, "", "getAlpha"], [153, 2, 1, "", "getAlphaf"], [153, 2, 1, "", "getColor"], [153, 2, 1, "", "getColor4f"], [153, 2, 1, "", "getColorFilter"], [153, 2, 1, "", "getFillPath"], [153, 2, 1, "", "getImageFilter"], [153, 2, 1, "", "getMaskFilter"], [153, 2, 1, "", "getPathEffect"], [153, 2, 1, "", "getShader"], [153, 2, 1, "", "getStrokeCap"], [153, 2, 1, "", "getStrokeJoin"], [153, 2, 1, "", "getStrokeMiter"], [153, 2, 1, "", "getStrokeWidth"], [153, 2, 1, "", "getStyle"], [153, 2, 1, "", "isAntiAlias"], [153, 2, 1, "", "isDither"], [153, 2, 1, "", "isSrcOver"], [153, 3, 1, "", "kBevel_Join"], [153, 3, 1, "", "kButt_Cap"], [153, 3, 1, "", "kCapCount"], [153, 3, 1, "", "kDefault_Cap"], [153, 3, 1, "", "kDefault_Join"], [153, 3, 1, "", "kFill_Style"], [153, 3, 1, "", "kJoinCount"], [153, 3, 1, "", "kLast_Cap"], [153, 3, 1, "", "kLast_Join"], [153, 3, 1, "", "kMiter_Join"], [153, 3, 1, "", "kRound_Cap"], [153, 3, 1, "", "kRound_Join"], [153, 3, 1, "", "kSquare_Cap"], [153, 3, 1, "", "kStrokeAndFill_Style"], [153, 3, 1, "", "kStroke_Style"], [153, 3, 1, "", "kStyleCount"], [153, 2, 1, "", "nothingToDraw"], [153, 2, 1, "", "refColorFilter"], [153, 2, 1, "", "refImageFilter"], [153, 2, 1, "", "refMaskFilter"], [153, 2, 1, "", "refPathEffect"], [153, 2, 1, "", "refShader"], [153, 2, 1, "", "reset"], [153, 2, 1, "", "setARGB"], [153, 2, 1, "", "setAlpha"], [153, 2, 1, "", "setAlphaf"], [153, 2, 1, "", "setAntiAlias"], [153, 2, 1, "", "setBlendMode"], [153, 2, 1, "", "setColor"], [153, 2, 1, "", "setColor4f"], [153, 2, 1, "", "setColorFilter"], [153, 2, 1, "", "setDither"], [153, 2, 1, "", "setImageFilter"], [153, 2, 1, "", "setMaskFilter"], [153, 2, 1, "", "setPathEffect"], [153, 2, 1, "", "setShader"], [153, 2, 1, "", "setStrokeCap"], [153, 2, 1, "", "setStrokeJoin"], [153, 2, 1, "", "setStrokeMiter"], [153, 2, 1, "", "setStrokeWidth"], [153, 2, 1, "", "setStyle"]], "skia.Paint.Cap": [[154, 2, 1, "", "__init__"], [154, 3, 1, "", "kButt_Cap"], [154, 3, 1, "", "kDefault_Cap"], [154, 3, 1, "", "kLast_Cap"], [154, 3, 1, "", "kRound_Cap"], [154, 3, 1, "", "kSquare_Cap"], [154, 3, 1, "", "name"], [154, 3, 1, "", "value"]], "skia.Paint.Join": [[155, 2, 1, "", "__init__"], [155, 3, 1, "", "kBevel_Join"], [155, 3, 1, "", "kDefault_Join"], [155, 3, 1, "", "kLast_Join"], [155, 3, 1, "", "kMiter_Join"], [155, 3, 1, "", "kRound_Join"], [155, 3, 1, "", "name"], [155, 3, 1, "", "value"]], "skia.Paint.Style": [[156, 2, 1, "", "__init__"], [156, 3, 1, "", "kFill_Style"], [156, 3, 1, "", "kStrokeAndFill_Style"], [156, 3, 1, "", "kStroke_Style"], [156, 3, 1, "", "name"], [156, 3, 1, "", "value"]], "skia.Path": [[158, 1, 1, "", "AddPathMode"], [159, 1, 1, "", "ArcSize"], [157, 2, 1, "", "Circle"], [157, 2, 1, "", "ConvertConicToQuads"], [157, 2, 1, "", "IsCubicDegenerate"], [157, 2, 1, "", "IsLineDegenerate"], [157, 2, 1, "", "IsQuadDegenerate"], [160, 1, 1, "", "Iter"], [157, 2, 1, "", "Line"], [157, 2, 1, "", "Make"], [157, 2, 1, "", "Oval"], [157, 2, 1, "", "Polygon"], [157, 2, 1, "", "RRect"], [161, 1, 1, "", "RawIter"], [157, 2, 1, "", "Rect"], [162, 1, 1, "", "SegmentMask"], [163, 1, 1, "", "Verb"], [157, 2, 1, "", "__init__"], [157, 2, 1, "", "addArc"], [157, 2, 1, "", "addCircle"], [157, 2, 1, "", "addOval"], [157, 2, 1, "", "addPath"], [157, 2, 1, "", "addPoly"], [157, 2, 1, "", "addRRect"], [157, 2, 1, "", "addRect"], [157, 2, 1, "", "addRoundRect"], [157, 2, 1, "", "approximateBytesUsed"], [157, 2, 1, "", "arcTo"], [157, 2, 1, "", "close"], [157, 2, 1, "", "computeTightBounds"], [157, 2, 1, "", "conicTo"], [157, 2, 1, "", "conservativelyContainsRect"], [157, 2, 1, "", "contains"], [157, 2, 1, "", "countPoints"], [157, 2, 1, "", "countVerbs"], [157, 2, 1, "", "cubicTo"], [157, 2, 1, "", "dump"], [157, 2, 1, "", "dumpHex"], [157, 2, 1, "", "getBounds"], [157, 2, 1, "", "getFillType"], [157, 2, 1, "", "getGenerationID"], [157, 2, 1, "", "getLastPt"], [157, 2, 1, "", "getPoint"], [157, 2, 1, "", "getPoints"], [157, 2, 1, "", "getSegmentMasks"], [157, 2, 1, "", "getVerbs"], [157, 2, 1, "", "incReserve"], [157, 2, 1, "", "interpolate"], [157, 2, 1, "", "isConvex"], [157, 2, 1, "", "isEmpty"], [157, 2, 1, "", "isFinite"], [157, 2, 1, "", "isInterpolatable"], [157, 2, 1, "", "isInverseFillType"], [157, 2, 1, "", "isLastContourClosed"], [157, 2, 1, "", "isLine"], [157, 2, 1, "", "isOval"], [157, 2, 1, "", "isRRect"], [157, 2, 1, "", "isRect"], [157, 2, 1, "", "isValid"], [157, 2, 1, "", "isVolatile"], [157, 3, 1, "", "kAppend_AddPathMode"], [157, 3, 1, "", "kClose_Verb"], [157, 3, 1, "", "kConic_SegmentMask"], [157, 3, 1, "", "kConic_Verb"], [157, 3, 1, "", "kCubic_SegmentMask"], [157, 3, 1, "", "kCubic_Verb"], [157, 3, 1, "", "kDone_Verb"], [157, 3, 1, "", "kExtend_AddPathMode"], [157, 3, 1, "", "kLarge_ArcSize"], [157, 3, 1, "", "kLine_SegmentMask"], [157, 3, 1, "", "kLine_Verb"], [157, 3, 1, "", "kMove_Verb"], [157, 3, 1, "", "kQuad_SegmentMask"], [157, 3, 1, "", "kQuad_Verb"], [157, 3, 1, "", "kSmall_ArcSize"], [157, 2, 1, "", "lineTo"], [157, 2, 1, "", "moveTo"], [157, 2, 1, "", "offset"], [157, 2, 1, "", "quadTo"], [157, 2, 1, "", "rArcTo"], [157, 2, 1, "", "rConicTo"], [157, 2, 1, "", "rCubicTo"], [157, 2, 1, "", "rLineTo"], [157, 2, 1, "", "rMoveTo"], [157, 2, 1, "", "rQuadTo"], [157, 2, 1, "", "readFromMemory"], [157, 2, 1, "", "reset"], [157, 2, 1, "", "reverseAddPath"], [157, 2, 1, "", "rewind"], [157, 2, 1, "", "serialize"], [157, 2, 1, "", "setFillType"], [157, 2, 1, "", "setIsVolatile"], [157, 2, 1, "", "setLastPt"], [157, 2, 1, "", "swap"], [157, 2, 1, "", "toggleInverseFillType"], [157, 2, 1, "", "transform"], [157, 2, 1, "", "updateBoundsCache"], [157, 2, 1, "", "writeToMemory"]], "skia.Path.AddPathMode": [[158, 2, 1, "", "__init__"], [158, 3, 1, "", "kAppend_AddPathMode"], [158, 3, 1, "", "kExtend_AddPathMode"], [158, 3, 1, "", "name"], [158, 3, 1, "", "value"]], "skia.Path.ArcSize": [[159, 2, 1, "", "__init__"], [159, 3, 1, "", "kLarge_ArcSize"], [159, 3, 1, "", "kSmall_ArcSize"], [159, 3, 1, "", "name"], [159, 3, 1, "", "value"]], "skia.Path.Iter": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "conicWeight"], [160, 2, 1, "", "isCloseLine"], [160, 2, 1, "", "isClosedContour"], [160, 2, 1, "", "next"], [160, 2, 1, "", "setPath"]], "skia.Path.RawIter": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "conicWeight"], [161, 2, 1, "", "next"], [161, 2, 1, "", "peek"], [161, 2, 1, "", "setPath"]], "skia.Path.SegmentMask": [[162, 2, 1, "", "__init__"], [162, 3, 1, "", "kConic_SegmentMask"], [162, 3, 1, "", "kCubic_SegmentMask"], [162, 3, 1, "", "kLine_SegmentMask"], [162, 3, 1, "", "kQuad_SegmentMask"], [162, 3, 1, "", "name"], [162, 3, 1, "", "value"]], "skia.Path.Verb": [[163, 2, 1, "", "__init__"], [163, 3, 1, "", "kClose_Verb"], [163, 3, 1, "", "kConic_Verb"], [163, 3, 1, "", "kCubic_Verb"], [163, 3, 1, "", "kDone_Verb"], [163, 3, 1, "", "kLine_Verb"], [163, 3, 1, "", "kMove_Verb"], [163, 3, 1, "", "kQuad_Verb"], [163, 3, 1, "", "name"], [163, 3, 1, "", "value"]], "skia.Path1DPathEffect": [[164, 2, 1, "", "Make"], [165, 1, 1, "", "Style"], [164, 2, 1, "", "__init__"], [164, 3, 1, "", "kLastEnum_Style"], [164, 3, 1, "", "kMorph_Style"], [164, 3, 1, "", "kRotate_Style"], [164, 3, 1, "", "kTranslate_Style"]], "skia.Path1DPathEffect.Style": [[165, 2, 1, "", "__init__"], [165, 3, 1, "", "kLastEnum_Style"], [165, 3, 1, "", "kMorph_Style"], [165, 3, 1, "", "kRotate_Style"], [165, 3, 1, "", "kTranslate_Style"], [165, 3, 1, "", "name"], [165, 3, 1, "", "value"]], "skia.Path2DPathEffect": [[166, 2, 1, "", "Make"], [166, 2, 1, "", "__init__"]], "skia.PathBuilder": [[168, 1, 1, "", "ArcSize"], [167, 2, 1, "", "__init__"], [167, 2, 1, "", "addArc"], [167, 2, 1, "", "addCircle"], [167, 2, 1, "", "addOval"], [167, 2, 1, "", "addPolygon"], [167, 2, 1, "", "addRRect"], [167, 2, 1, "", "addRect"], [167, 2, 1, "", "arcTo"], [167, 2, 1, "", "close"], [167, 2, 1, "", "computeBounds"], [167, 2, 1, "", "conicTo"], [167, 2, 1, "", "cubicTo"], [167, 2, 1, "", "detach"], [167, 2, 1, "", "fillType"], [167, 2, 1, "", "incReserve"], [167, 3, 1, "", "kLarge_ArcSize"], [167, 3, 1, "", "kSmall_ArcSize"], [167, 2, 1, "", "lineTo"], [167, 2, 1, "", "moveTo"], [167, 2, 1, "", "offset"], [167, 2, 1, "", "polylineTo"], [167, 2, 1, "", "quadTo"], [167, 2, 1, "", "rConicTo"], [167, 2, 1, "", "rCubicTo"], [167, 2, 1, "", "rLineTo"], [167, 2, 1, "", "rQuadTo"], [167, 2, 1, "", "reset"], [167, 2, 1, "", "setFillType"], [167, 2, 1, "", "setIsVolatile"], [167, 2, 1, "", "snapshot"], [167, 2, 1, "", "toggleInverseFillType"]], "skia.PathBuilder.ArcSize": [[168, 2, 1, "", "__init__"], [168, 3, 1, "", "kLarge_ArcSize"], [168, 3, 1, "", "kSmall_ArcSize"], [168, 3, 1, "", "name"], [168, 3, 1, "", "value"]], "skia.PathDirection": [[169, 2, 1, "", "__init__"], [169, 3, 1, "", "kCCW"], [169, 3, 1, "", "kCW"], [169, 3, 1, "", "name"], [169, 3, 1, "", "value"]], "skia.PathEffect": [[171, 1, 1, "", "DashInfo"], [172, 1, 1, "", "DashType"], [170, 2, 1, "", "Deserialize"], [170, 2, 1, "", "GetFlattenableType"], [170, 2, 1, "", "MakeCompose"], [170, 2, 1, "", "MakeSum"], [173, 1, 1, "", "Type"], [170, 2, 1, "", "__init__"], [170, 2, 1, "", "asADash"], [170, 2, 1, "", "filterPath"], [170, 2, 1, "", "getFlattenableType"], [170, 2, 1, "", "getTypeName"], [170, 3, 1, "", "kColorFilter_Type"], [170, 3, 1, "", "kDash_DashType"], [170, 3, 1, "", "kDrawLooper_Type"], [170, 3, 1, "", "kDrawable_Type"], [170, 3, 1, "", "kImageFilter_Type"], [170, 3, 1, "", "kMaskFilter_Type"], [170, 3, 1, "", "kNone_DashType"], [170, 3, 1, "", "kPathEffect_Type"], [170, 2, 1, "", "ref"], [170, 2, 1, "", "serialize"], [170, 2, 1, "", "unique"], [170, 2, 1, "", "unref"]], "skia.PathEffect.DashInfo": [[171, 2, 1, "", "__init__"], [171, 3, 1, "", "fCount"], [171, 3, 1, "", "fIntervals"], [171, 3, 1, "", "fPhase"]], "skia.PathEffect.DashType": [[172, 2, 1, "", "__init__"], [172, 3, 1, "", "kDash_DashType"], [172, 3, 1, "", "kNone_DashType"], [172, 3, 1, "", "name"], [172, 3, 1, "", "value"]], "skia.PathEffect.Type": [[173, 2, 1, "", "__init__"], [173, 3, 1, "", "kColorFilter_Type"], [173, 3, 1, "", "kDrawLooper_Type"], [173, 3, 1, "", "kDrawable_Type"], [173, 3, 1, "", "kImageFilter_Type"], [173, 3, 1, "", "kMaskFilter_Type"], [173, 3, 1, "", "kPathEffect_Type"], [173, 3, 1, "", "name"], [173, 3, 1, "", "value"]], "skia.PathFillType": [[174, 2, 1, "", "__init__"], [174, 3, 1, "", "kEvenOdd"], [174, 3, 1, "", "kInverseEvenOdd"], [174, 3, 1, "", "kInverseWinding"], [174, 3, 1, "", "kWinding"], [174, 3, 1, "", "name"], [174, 3, 1, "", "value"]], "skia.PathMeasure": [[176, 1, 1, "", "GetPosAndTan"], [175, 2, 1, "", "__init__"], [175, 2, 1, "", "getLength"], [175, 2, 1, "", "getMatrix"], [175, 2, 1, "", "getPosTan"], [175, 2, 1, "", "getSegment"], [175, 2, 1, "", "isClosed"], [175, 3, 1, "", "kGetPosAndTan_MatrixFlag"], [175, 3, 1, "", "kGetPosition_MatrixFlag"], [175, 3, 1, "", "kGetTangent_MatrixFlag"], [175, 2, 1, "", "nextContour"], [175, 2, 1, "", "setPath"]], "skia.PathMeasure.GetPosAndTan": [[176, 2, 1, "", "__init__"], [176, 3, 1, "", "kGetPosAndTan_MatrixFlag"], [176, 3, 1, "", "kGetPosition_MatrixFlag"], [176, 3, 1, "", "kGetTangent_MatrixFlag"], [176, 3, 1, "", "name"], [176, 3, 1, "", "value"]], "skia.PathOp": [[177, 2, 1, "", "__init__"], [177, 3, 1, "", "kDifference_PathOp"], [177, 3, 1, "", "kIntersect_PathOp"], [177, 3, 1, "", "kReverseDifference_PathOp"], [177, 3, 1, "", "kUnion_PathOp"], [177, 3, 1, "", "kXOR_PathOp"], [177, 3, 1, "", "name"], [177, 3, 1, "", "value"]], "skia.PathSegmentMask": [[178, 2, 1, "", "__init__"], [178, 3, 1, "", "kConic_PathSegmentMask"], [178, 3, 1, "", "kCubic_PathSegmentMask"], [178, 3, 1, "", "kLine_PathSegmentMask"], [178, 3, 1, "", "kQuad_PathSegmentMask"], [178, 3, 1, "", "name"], [178, 3, 1, "", "value"]], "skia.PathVerb": [[179, 2, 1, "", "__init__"], [179, 3, 1, "", "kClose"], [179, 3, 1, "", "kConic"], [179, 3, 1, "", "kCubic"], [179, 3, 1, "", "kLine"], [179, 3, 1, "", "kMove"], [179, 3, 1, "", "kQuad"], [179, 3, 1, "", "name"], [179, 3, 1, "", "value"]], "skia.PerlinNoiseShader": [[180, 2, 1, "", "MakeFractalNoise"], [180, 2, 1, "", "MakeTurbulence"], [180, 2, 1, "", "__init__"]], "skia.Picture": [[181, 2, 1, "", "MakeFromData"], [181, 2, 1, "", "MakeFromStream"], [181, 2, 1, "", "MakePlaceholder"], [181, 2, 1, "", "__init__"], [181, 2, 1, "", "approximateBytesUsed"], [181, 2, 1, "", "approximateOpCount"], [181, 2, 1, "", "cullRect"], [181, 2, 1, "", "makeShader"], [181, 2, 1, "", "playback"], [181, 2, 1, "", "ref"], [181, 2, 1, "", "serialize"], [181, 2, 1, "", "unique"], [181, 2, 1, "", "uniqueID"], [181, 2, 1, "", "unref"]], "skia.PictureRecorder": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "beginRecording"], [182, 2, 1, "", "finishRecordingAsDrawable"], [182, 2, 1, "", "finishRecordingAsPicture"], [182, 2, 1, "", "finishRecordingAsPictureWithCull"], [182, 2, 1, "", "getRecordingCanvas"]], "skia.PixelGeometry": [[183, 2, 1, "", "__init__"], [183, 3, 1, "", "kBGR_H_PixelGeometry"], [183, 3, 1, "", "kBGR_V_PixelGeometry"], [183, 3, 1, "", "kRGB_H_PixelGeometry"], [183, 3, 1, "", "kRGB_V_PixelGeometry"], [183, 3, 1, "", "kUnknown_PixelGeometry"], [183, 3, 1, "", "name"], [183, 3, 1, "", "value"]], "skia.PixelRef": [[184, 2, 1, "", "__init__"]], "skia.Pixmap": [[185, 2, 1, "", "__init__"], [185, 2, 1, "", "addr"], [185, 2, 1, "", "addr16"], [185, 2, 1, "", "addr32"], [185, 2, 1, "", "addr64"], [185, 2, 1, "", "addr8"], [185, 2, 1, "", "alphaType"], [185, 2, 1, "", "bounds"], [185, 2, 1, "", "colorSpace"], [185, 2, 1, "", "colorType"], [185, 2, 1, "", "computeByteSize"], [185, 2, 1, "", "computeIsOpaque"], [185, 2, 1, "", "dimensions"], [185, 2, 1, "", "erase"], [185, 2, 1, "", "extractSubset"], [185, 2, 1, "", "getAlphaf"], [185, 2, 1, "", "getColor"], [185, 2, 1, "", "height"], [185, 2, 1, "", "info"], [185, 2, 1, "", "isOpaque"], [185, 2, 1, "", "readPixels"], [185, 2, 1, "", "refColorSpace"], [185, 2, 1, "", "reset"], [185, 2, 1, "", "rowBytes"], [185, 2, 1, "", "rowBytesAsPixels"], [185, 2, 1, "", "scalePixels"], [185, 2, 1, "", "setColorSpace"], [185, 2, 1, "", "shiftPerPixel"], [185, 2, 1, "", "tobytes"], [185, 2, 1, "", "width"], [185, 2, 1, "", "writable_addr"]], "skia.Point": [[186, 2, 1, "", "CrossProduct"], [186, 2, 1, "", "Distance"], [186, 2, 1, "", "DotProduct"], [186, 2, 1, "", "Length"], [186, 2, 1, "", "Make"], [186, 2, 1, "", "Normalize"], [186, 2, 1, "", "Offset"], [186, 2, 1, "", "__init__"], [186, 2, 1, "", "cross"], [186, 2, 1, "", "distanceToOrigin"], [186, 2, 1, "", "dot"], [186, 2, 1, "", "equals"], [186, 3, 1, "", "fX"], [186, 3, 1, "", "fY"], [186, 2, 1, "", "isFinite"], [186, 2, 1, "", "isZero"], [186, 2, 1, "", "iset"], [186, 2, 1, "", "length"], [186, 2, 1, "", "negate"], [186, 2, 1, "", "normalize"], [186, 2, 1, "", "offset"], [186, 2, 1, "", "scale"], [186, 2, 1, "", "set"], [186, 2, 1, "", "setAbs"], [186, 2, 1, "", "setLength"], [186, 2, 1, "", "setNormalize"], [186, 2, 1, "", "x"], [186, 2, 1, "", "y"]], "skia.Point3": [[187, 2, 1, "", "CrossProduct"], [187, 2, 1, "", "DotProduct"], [187, 2, 1, "", "Length"], [187, 2, 1, "", "Make"], [187, 2, 1, "", "__init__"], [187, 2, 1, "", "cross"], [187, 2, 1, "", "dot"], [187, 3, 1, "", "fX"], [187, 3, 1, "", "fY"], [187, 3, 1, "", "fZ"], [187, 2, 1, "", "isFinite"], [187, 2, 1, "", "length"], [187, 2, 1, "", "makeScale"], [187, 2, 1, "", "normalize"], [187, 2, 1, "", "scale"], [187, 2, 1, "", "set"], [187, 2, 1, "", "x"], [187, 2, 1, "", "y"], [187, 2, 1, "", "z"]], "skia.RRect": [[189, 1, 1, "", "Corner"], [188, 2, 1, "", "MakeEmpty"], [188, 2, 1, "", "MakeOval"], [188, 2, 1, "", "MakeRect"], [188, 2, 1, "", "MakeRectXY"], [190, 1, 1, "", "Type"], [188, 2, 1, "", "__init__"], [188, 2, 1, "", "contains"], [188, 2, 1, "", "dump"], [188, 2, 1, "", "dumpHex"], [188, 2, 1, "", "dumpToString"], [188, 2, 1, "", "getBounds"], [188, 2, 1, "", "getSimpleRadii"], [188, 2, 1, "", "getType"], [188, 2, 1, "", "height"], [188, 2, 1, "", "inset"], [188, 2, 1, "", "isComplex"], [188, 2, 1, "", "isEmpty"], [188, 2, 1, "", "isNinePatch"], [188, 2, 1, "", "isOval"], [188, 2, 1, "", "isRect"], [188, 2, 1, "", "isSimple"], [188, 2, 1, "", "isValid"], [188, 3, 1, "", "kComplex_Type"], [188, 3, 1, "", "kEmpty_Type"], [188, 3, 1, "", "kLastType"], [188, 3, 1, "", "kLowerLeft_Corner"], [188, 3, 1, "", "kLowerRight_Corner"], [188, 3, 1, "", "kNinePatch_Type"], [188, 3, 1, "", "kOval_Type"], [188, 3, 1, "", "kRect_Type"], [188, 3, 1, "", "kSimple_Type"], [188, 3, 1, "", "kSizeInMemory"], [188, 3, 1, "", "kUpperLeft_Corner"], [188, 3, 1, "", "kUpperRight_Corner"], [188, 2, 1, "", "makeOffset"], [188, 2, 1, "", "offset"], [188, 2, 1, "", "outset"], [188, 2, 1, "", "radii"], [188, 2, 1, "", "readFromMemory"], [188, 2, 1, "", "rect"], [188, 2, 1, "", "setEmpty"], [188, 2, 1, "", "setNinePatch"], [188, 2, 1, "", "setOval"], [188, 2, 1, "", "setRect"], [188, 2, 1, "", "setRectRadii"], [188, 2, 1, "", "setRectXY"], [188, 2, 1, "", "transform"], [188, 2, 1, "", "type"], [188, 2, 1, "", "width"], [188, 2, 1, "", "writeToMemory"]], "skia.RRect.Corner": [[189, 2, 1, "", "__init__"], [189, 3, 1, "", "kLowerLeft_Corner"], [189, 3, 1, "", "kLowerRight_Corner"], [189, 3, 1, "", "kUpperLeft_Corner"], [189, 3, 1, "", "kUpperRight_Corner"], [189, 3, 1, "", "name"], [189, 3, 1, "", "value"]], "skia.RRect.Type": [[190, 2, 1, "", "__init__"], [190, 3, 1, "", "kComplex_Type"], [190, 3, 1, "", "kEmpty_Type"], [190, 3, 1, "", "kLastType"], [190, 3, 1, "", "kNinePatch_Type"], [190, 3, 1, "", "kOval_Type"], [190, 3, 1, "", "kRect_Type"], [190, 3, 1, "", "kSimple_Type"], [190, 3, 1, "", "name"], [190, 3, 1, "", "value"]], "skia.RSXform": [[191, 2, 1, "", "Make"], [191, 2, 1, "", "MakeFromRadians"], [191, 2, 1, "", "__init__"], [191, 3, 1, "", "fSCos"], [191, 3, 1, "", "fSSin"], [191, 3, 1, "", "fTx"], [191, 3, 1, "", "fTy"], [191, 2, 1, "", "rectStaysRect"], [191, 2, 1, "", "set"], [191, 2, 1, "", "setIdentity"], [191, 2, 1, "", "toQuad"], [191, 2, 1, "", "toTriStrip"]], "skia.RTreeFactory": [[192, 2, 1, "", "__init__"]], "skia.Rect": [[193, 2, 1, "", "Intersects"], [193, 2, 1, "", "Make"], [193, 2, 1, "", "MakeEmpty"], [193, 2, 1, "", "MakeIWH"], [193, 2, 1, "", "MakeLTRB"], [193, 2, 1, "", "MakeSize"], [193, 2, 1, "", "MakeWH"], [193, 2, 1, "", "MakeXYWH"], [193, 2, 1, "", "__init__"], [193, 2, 1, "", "asScalars"], [193, 2, 1, "", "bottom"], [193, 2, 1, "", "centerX"], [193, 2, 1, "", "centerY"], [193, 2, 1, "", "contains"], [193, 2, 1, "", "dump"], [193, 2, 1, "", "dumpHex"], [193, 3, 1, "", "fBottom"], [193, 3, 1, "", "fLeft"], [193, 3, 1, "", "fRight"], [193, 3, 1, "", "fTop"], [193, 2, 1, "", "height"], [193, 2, 1, "", "inset"], [193, 2, 1, "", "intersect"], [193, 2, 1, "", "intersects"], [193, 2, 1, "", "isEmpty"], [193, 2, 1, "", "isFinite"], [193, 2, 1, "", "isSorted"], [193, 2, 1, "", "join"], [193, 2, 1, "", "joinNonEmptyArg"], [193, 2, 1, "", "joinPossiblyEmptyRect"], [193, 2, 1, "", "left"], [193, 2, 1, "", "makeInset"], [193, 2, 1, "", "makeOffset"], [193, 2, 1, "", "makeOutset"], [193, 2, 1, "", "makeSorted"], [193, 2, 1, "", "offset"], [193, 2, 1, "", "offsetTo"], [193, 2, 1, "", "outset"], [193, 2, 1, "", "right"], [193, 2, 1, "", "round"], [193, 2, 1, "", "roundIn"], [193, 2, 1, "", "roundOut"], [193, 2, 1, "", "set"], [193, 2, 1, "", "setBounds"], [193, 2, 1, "", "setBoundsCheck"], [193, 2, 1, "", "setBoundsNoCheck"], [193, 2, 1, "", "setEmpty"], [193, 2, 1, "", "setIWH"], [193, 2, 1, "", "setLTRB"], [193, 2, 1, "", "setWH"], [193, 2, 1, "", "setXYWH"], [193, 2, 1, "", "sort"], [193, 2, 1, "", "toQuad"], [193, 2, 1, "", "top"], [193, 2, 1, "", "width"], [193, 2, 1, "", "x"], [193, 2, 1, "", "y"]], "skia.RefCnt": [[194, 2, 1, "", "__init__"], [194, 2, 1, "", "ref"], [194, 2, 1, "", "unique"], [194, 2, 1, "", "unref"]], "skia.RefCntBase": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "ref"], [195, 2, 1, "", "unique"], [195, 2, 1, "", "unref"]], "skia.Region": [[197, 1, 1, "", "Cliperator"], [198, 1, 1, "", "Iterator"], [199, 1, 1, "", "Op"], [200, 1, 1, "", "Spanerator"], [196, 2, 1, "", "__init__"], [196, 2, 1, "", "cliperator"], [196, 2, 1, "", "computeRegionComplexity"], [196, 2, 1, "", "contains"], [196, 2, 1, "", "getBoundaryPath"], [196, 2, 1, "", "getBounds"], [196, 2, 1, "", "intersects"], [196, 2, 1, "", "isComplex"], [196, 2, 1, "", "isEmpty"], [196, 2, 1, "", "isRect"], [196, 2, 1, "", "iterator"], [196, 3, 1, "", "kDifference_Op"], [196, 3, 1, "", "kIntersect_Op"], [196, 3, 1, "", "kLastOp"], [196, 3, 1, "", "kOpCnt"], [196, 3, 1, "", "kReplace_Op"], [196, 3, 1, "", "kReverseDifference_Op"], [196, 3, 1, "", "kUnion_Op"], [196, 3, 1, "", "kXOR_Op"], [196, 2, 1, "", "op"], [196, 2, 1, "", "quickContains"], [196, 2, 1, "", "quickReject"], [196, 2, 1, "", "readFromMemory"], [196, 2, 1, "", "set"], [196, 2, 1, "", "setEmpty"], [196, 2, 1, "", "setPath"], [196, 2, 1, "", "setRect"], [196, 2, 1, "", "setRects"], [196, 2, 1, "", "setRegion"], [196, 2, 1, "", "spanerator"], [196, 2, 1, "", "swap"], [196, 2, 1, "", "translate"], [196, 2, 1, "", "writeToMemory"]], "skia.Region.Cliperator": [[197, 2, 1, "", "__init__"], [197, 2, 1, "", "done"], [197, 2, 1, "", "next"], [197, 2, 1, "", "rect"]], "skia.Region.Iterator": [[198, 2, 1, "", "__init__"], [198, 2, 1, "", "done"], [198, 2, 1, "", "next"], [198, 2, 1, "", "rect"], [198, 2, 1, "", "reset"], [198, 2, 1, "", "rewind"], [198, 2, 1, "", "rgn"]], "skia.Region.Op": [[199, 2, 1, "", "__init__"], [199, 3, 1, "", "kDifference_Op"], [199, 3, 1, "", "kIntersect_Op"], [199, 3, 1, "", "kLastOp"], [199, 3, 1, "", "kReplace_Op"], [199, 3, 1, "", "kReverseDifference_Op"], [199, 3, 1, "", "kUnion_Op"], [199, 3, 1, "", "kXOR_Op"], [199, 3, 1, "", "name"], [199, 3, 1, "", "value"]], "skia.Region.Spanerator": [[200, 2, 1, "", "__init__"], [200, 2, 1, "", "next"]], "skia.SVGCanvas": [[201, 2, 1, "", "Make"], [201, 2, 1, "", "__init__"], [201, 3, 1, "", "kConvertTextToPaths_Flag"], [201, 3, 1, "", "kNoPrettyXML_Flag"]], "skia.SVGDOM": [[202, 2, 1, "", "MakeFromStream"], [202, 2, 1, "", "__init__"], [202, 2, 1, "", "containerSize"], [202, 2, 1, "", "ref"], [202, 2, 1, "", "render"], [202, 2, 1, "", "renderNode"], [202, 2, 1, "", "setContainerSize"], [202, 2, 1, "", "unique"], [202, 2, 1, "", "unref"]], "skia.SamplingOptions": [[203, 2, 1, "", "__init__"]], "skia.Shader": [[204, 2, 1, "", "Deserialize"], [205, 1, 1, "", "Type"], [204, 2, 1, "", "__init__"], [204, 2, 1, "", "getFlattenableType"], [204, 2, 1, "", "getTypeName"], [204, 2, 1, "", "isAImage"], [204, 2, 1, "", "isOpaque"], [204, 3, 1, "", "kColorFilter_Type"], [204, 3, 1, "", "kDrawLooper_Type"], [204, 3, 1, "", "kDrawable_Type"], [204, 3, 1, "", "kImageFilter_Type"], [204, 3, 1, "", "kMaskFilter_Type"], [204, 3, 1, "", "kPathEffect_Type"], [204, 2, 1, "", "makeWithColorFilter"], [204, 2, 1, "", "makeWithLocalMatrix"], [204, 2, 1, "", "ref"], [204, 2, 1, "", "serialize"], [204, 2, 1, "", "unique"], [204, 2, 1, "", "unref"]], "skia.Shader.Type": [[205, 2, 1, "", "__init__"], [205, 3, 1, "", "kColorFilter_Type"], [205, 3, 1, "", "kDrawLooper_Type"], [205, 3, 1, "", "kDrawable_Type"], [205, 3, 1, "", "kImageFilter_Type"], [205, 3, 1, "", "kMaskFilter_Type"], [205, 3, 1, "", "kPathEffect_Type"], [205, 3, 1, "", "name"], [205, 3, 1, "", "value"]], "skia.ShaderMaskFilter": [[206, 2, 1, "", "Make"], [206, 2, 1, "", "__init__"]], "skia.Shaders": [[207, 2, 1, "", "Blend"], [207, 2, 1, "", "Color"], [207, 2, 1, "", "Empty"], [207, 2, 1, "", "Lerp"], [207, 2, 1, "", "__init__"]], "skia.Size": [[208, 2, 1, "", "Make"], [208, 2, 1, "", "MakeEmpty"], [208, 2, 1, "", "__init__"], [208, 2, 1, "", "equals"], [208, 3, 1, "", "fHeight"], [208, 3, 1, "", "fWidth"], [208, 2, 1, "", "height"], [208, 2, 1, "", "isEmpty"], [208, 2, 1, "", "isZero"], [208, 2, 1, "", "set"], [208, 2, 1, "", "setEmpty"], [208, 2, 1, "", "toCeil"], [208, 2, 1, "", "toFloor"], [208, 2, 1, "", "toRound"], [208, 2, 1, "", "width"]], "skia.Stream": [[209, 2, 1, "", "MakeFromFile"], [209, 2, 1, "", "__init__"], [209, 2, 1, "", "duplicate"], [209, 2, 1, "", "fork"], [209, 2, 1, "", "getLength"], [209, 2, 1, "", "getMemoryBase"], [209, 2, 1, "", "getPosition"], [209, 2, 1, "", "hasLength"], [209, 2, 1, "", "hasPosition"], [209, 2, 1, "", "isAtEnd"], [209, 2, 1, "", "move"], [209, 2, 1, "", "peek"], [209, 2, 1, "", "read"], [209, 2, 1, "", "readBool"], [209, 2, 1, "", "readPackedUInt"], [209, 2, 1, "", "readS16"], [209, 2, 1, "", "readS32"], [209, 2, 1, "", "readS8"], [209, 2, 1, "", "readScalar"], [209, 2, 1, "", "readU16"], [209, 2, 1, "", "readU32"], [209, 2, 1, "", "readU8"], [209, 2, 1, "", "rewind"], [209, 2, 1, "", "seek"], [209, 2, 1, "", "skip"]], "skia.StreamAsset": [[210, 2, 1, "", "MakeFromFile"], [210, 2, 1, "", "__init__"], [210, 2, 1, "", "duplicate"], [210, 2, 1, "", "fork"], [210, 2, 1, "", "getLength"], [210, 2, 1, "", "getMemoryBase"], [210, 2, 1, "", "getPosition"], [210, 2, 1, "", "hasLength"], [210, 2, 1, "", "hasPosition"], [210, 2, 1, "", "isAtEnd"], [210, 2, 1, "", "move"], [210, 2, 1, "", "peek"], [210, 2, 1, "", "read"], [210, 2, 1, "", "readBool"], [210, 2, 1, "", "readPackedUInt"], [210, 2, 1, "", "readS16"], [210, 2, 1, "", "readS32"], [210, 2, 1, "", "readS8"], [210, 2, 1, "", "readScalar"], [210, 2, 1, "", "readU16"], [210, 2, 1, "", "readU32"], [210, 2, 1, "", "readU8"], [210, 2, 1, "", "rewind"], [210, 2, 1, "", "seek"], [210, 2, 1, "", "skip"]], "skia.StreamMemory": [[211, 2, 1, "", "MakeFromFile"], [211, 2, 1, "", "__init__"], [211, 2, 1, "", "duplicate"], [211, 2, 1, "", "fork"], [211, 2, 1, "", "getLength"], [211, 2, 1, "", "getMemoryBase"], [211, 2, 1, "", "getPosition"], [211, 2, 1, "", "hasLength"], [211, 2, 1, "", "hasPosition"], [211, 2, 1, "", "isAtEnd"], [211, 2, 1, "", "move"], [211, 2, 1, "", "peek"], [211, 2, 1, "", "read"], [211, 2, 1, "", "readBool"], [211, 2, 1, "", "readPackedUInt"], [211, 2, 1, "", "readS16"], [211, 2, 1, "", "readS32"], [211, 2, 1, "", "readS8"], [211, 2, 1, "", "readScalar"], [211, 2, 1, "", "readU16"], [211, 2, 1, "", "readU32"], [211, 2, 1, "", "readU8"], [211, 2, 1, "", "rewind"], [211, 2, 1, "", "seek"], [211, 2, 1, "", "skip"]], "skia.StreamRewindable": [[212, 2, 1, "", "MakeFromFile"], [212, 2, 1, "", "__init__"], [212, 2, 1, "", "duplicate"], [212, 2, 1, "", "fork"], [212, 2, 1, "", "getLength"], [212, 2, 1, "", "getMemoryBase"], [212, 2, 1, "", "getPosition"], [212, 2, 1, "", "hasLength"], [212, 2, 1, "", "hasPosition"], [212, 2, 1, "", "isAtEnd"], [212, 2, 1, "", "move"], [212, 2, 1, "", "peek"], [212, 2, 1, "", "read"], [212, 2, 1, "", "readBool"], [212, 2, 1, "", "readPackedUInt"], [212, 2, 1, "", "readS16"], [212, 2, 1, "", "readS32"], [212, 2, 1, "", "readS8"], [212, 2, 1, "", "readScalar"], [212, 2, 1, "", "readU16"], [212, 2, 1, "", "readU32"], [212, 2, 1, "", "readU8"], [212, 2, 1, "", "rewind"], [212, 2, 1, "", "seek"], [212, 2, 1, "", "skip"]], "skia.StreamSeekable": [[213, 2, 1, "", "MakeFromFile"], [213, 2, 1, "", "__init__"], [213, 2, 1, "", "duplicate"], [213, 2, 1, "", "fork"], [213, 2, 1, "", "getLength"], [213, 2, 1, "", "getMemoryBase"], [213, 2, 1, "", "getPosition"], [213, 2, 1, "", "hasLength"], [213, 2, 1, "", "hasPosition"], [213, 2, 1, "", "isAtEnd"], [213, 2, 1, "", "move"], [213, 2, 1, "", "peek"], [213, 2, 1, "", "read"], [213, 2, 1, "", "readBool"], [213, 2, 1, "", "readPackedUInt"], [213, 2, 1, "", "readS16"], [213, 2, 1, "", "readS32"], [213, 2, 1, "", "readS8"], [213, 2, 1, "", "readScalar"], [213, 2, 1, "", "readU16"], [213, 2, 1, "", "readU32"], [213, 2, 1, "", "readU8"], [213, 2, 1, "", "rewind"], [213, 2, 1, "", "seek"], [213, 2, 1, "", "skip"]], "skia.String": [[214, 2, 1, "", "__init__"], [214, 2, 1, "", "append"], [214, 2, 1, "", "appendHex"], [214, 2, 1, "", "appendS32"], [214, 2, 1, "", "appendS64"], [214, 2, 1, "", "appendScalar"], [214, 2, 1, "", "appendU32"], [214, 2, 1, "", "appendU64"], [214, 2, 1, "", "appendUnichar"], [214, 2, 1, "", "c_str"], [214, 2, 1, "", "contains"], [214, 2, 1, "", "endsWith"], [214, 2, 1, "", "equals"], [214, 2, 1, "", "find"], [214, 2, 1, "", "findLastOf"], [214, 2, 1, "", "insert"], [214, 2, 1, "", "insertHex"], [214, 2, 1, "", "insertS32"], [214, 2, 1, "", "insertS64"], [214, 2, 1, "", "insertScalar"], [214, 2, 1, "", "insertU32"], [214, 2, 1, "", "insertU64"], [214, 2, 1, "", "insertUnichar"], [214, 2, 1, "", "isEmpty"], [214, 2, 1, "", "prepend"], [214, 2, 1, "", "prependHex"], [214, 2, 1, "", "prependS32"], [214, 2, 1, "", "prependS64"], [214, 2, 1, "", "prependScalar"], [214, 2, 1, "", "prependUnichar"], [214, 2, 1, "", "remove"], [214, 2, 1, "", "reset"], [214, 2, 1, "", "resize"], [214, 2, 1, "", "set"], [214, 2, 1, "", "size"], [214, 2, 1, "", "startsWith"], [214, 2, 1, "", "swap"]], "skia.StrokeRec": [[215, 2, 1, "", "GetInflationRadius"], [216, 1, 1, "", "InitStyle"], [217, 1, 1, "", "Style"], [215, 2, 1, "", "__init__"], [215, 2, 1, "", "applyToPaint"], [215, 2, 1, "", "applyToPath"], [215, 2, 1, "", "getCap"], [215, 2, 1, "", "getInflationRadius"], [215, 2, 1, "", "getJoin"], [215, 2, 1, "", "getMiter"], [215, 2, 1, "", "getResScale"], [215, 2, 1, "", "getStyle"], [215, 2, 1, "", "getWidth"], [215, 2, 1, "", "hasEqualEffect"], [215, 2, 1, "", "isFillStyle"], [215, 2, 1, "", "isHairlineStyle"], [215, 3, 1, "", "kFill_InitStyle"], [215, 3, 1, "", "kFill_Style"], [215, 3, 1, "", "kHairline_InitStyle"], [215, 3, 1, "", "kHairline_Style"], [215, 3, 1, "", "kStrokeAndFill_Style"], [215, 3, 1, "", "kStroke_Style"], [215, 3, 1, "", "kStyleCount"], [215, 2, 1, "", "needToApply"], [215, 2, 1, "", "setFillStyle"], [215, 2, 1, "", "setHairlineStyle"], [215, 2, 1, "", "setResScale"], [215, 2, 1, "", "setStrokeParams"], [215, 2, 1, "", "setStrokeStyle"]], "skia.StrokeRec.InitStyle": [[216, 2, 1, "", "__init__"], [216, 3, 1, "", "kFill_InitStyle"], [216, 3, 1, "", "kHairline_InitStyle"], [216, 3, 1, "", "name"], [216, 3, 1, "", "value"]], "skia.StrokeRec.Style": [[217, 2, 1, "", "__init__"], [217, 3, 1, "", "kFill_Style"], [217, 3, 1, "", "kHairline_Style"], [217, 3, 1, "", "kStrokeAndFill_Style"], [217, 3, 1, "", "kStroke_Style"], [217, 3, 1, "", "name"], [217, 3, 1, "", "value"]], "skia.Surface": [[219, 1, 1, "", "AsyncReadResult"], [220, 1, 1, "", "BackendHandleAccess"], [221, 1, 1, "", "BackendSurfaceAccess"], [222, 1, 1, "", "ContentChangeMode"], [218, 2, 1, "", "MakeFromBackendRenderTarget"], [218, 2, 1, "", "MakeFromBackendTexture"], [218, 2, 1, "", "MakeNull"], [218, 2, 1, "", "MakeRaster"], [218, 2, 1, "", "MakeRasterDirect"], [218, 2, 1, "", "MakeRasterN32Premul"], [218, 2, 1, "", "MakeRenderTarget"], [223, 1, 1, "", "RescaleGamma"], [218, 2, 1, "", "__init__"], [218, 2, 1, "", "asyncRescaleAndReadPixels"], [218, 2, 1, "", "characterize"], [218, 2, 1, "", "draw"], [218, 2, 1, "", "flush"], [218, 2, 1, "", "flushAndSubmit"], [218, 2, 1, "", "generationID"], [218, 2, 1, "", "getBackendRenderTarget"], [218, 2, 1, "", "getBackendTexture"], [218, 2, 1, "", "getCanvas"], [218, 2, 1, "", "height"], [218, 2, 1, "", "imageInfo"], [218, 2, 1, "", "isCompatible"], [218, 3, 1, "", "kDiscardWrite_BackendHandleAccess"], [218, 3, 1, "", "kDiscard_ContentChangeMode"], [218, 3, 1, "", "kFlushRead_BackendHandleAccess"], [218, 3, 1, "", "kFlushWrite_BackendHandleAccess"], [218, 3, 1, "", "kLinear"], [218, 3, 1, "", "kNoAccess"], [218, 3, 1, "", "kPresent"], [218, 3, 1, "", "kRetain_ContentChangeMode"], [218, 3, 1, "", "kSrc"], [218, 2, 1, "", "makeImageSnapshot"], [218, 2, 1, "", "makeSurface"], [218, 2, 1, "", "notifyContentWillChange"], [218, 2, 1, "", "peekPixels"], [218, 2, 1, "", "props"], [218, 2, 1, "", "readPixels"], [218, 2, 1, "", "recordingContext"], [218, 2, 1, "", "ref"], [218, 2, 1, "", "replaceBackendTexture"], [218, 2, 1, "", "toarray"], [218, 2, 1, "", "unique"], [218, 2, 1, "", "unref"], [218, 2, 1, "", "width"], [218, 2, 1, "", "writePixels"]], "skia.Surface.AsyncReadResult": [[219, 2, 1, "", "__init__"], [219, 2, 1, "", "count"], [219, 2, 1, "", "data"], [219, 2, 1, "", "rowBytes"]], "skia.Surface.BackendHandleAccess": [[220, 2, 1, "", "__init__"], [220, 3, 1, "", "kDiscardWrite_BackendHandleAccess"], [220, 3, 1, "", "kFlushRead_BackendHandleAccess"], [220, 3, 1, "", "kFlushWrite_BackendHandleAccess"], [220, 3, 1, "", "name"], [220, 3, 1, "", "value"]], "skia.Surface.BackendSurfaceAccess": [[221, 2, 1, "", "__init__"], [221, 3, 1, "", "kNoAccess"], [221, 3, 1, "", "kPresent"], [221, 3, 1, "", "name"], [221, 3, 1, "", "value"]], "skia.Surface.ContentChangeMode": [[222, 2, 1, "", "__init__"], [222, 3, 1, "", "kDiscard_ContentChangeMode"], [222, 3, 1, "", "kRetain_ContentChangeMode"], [222, 3, 1, "", "name"], [222, 3, 1, "", "value"]], "skia.Surface.RescaleGamma": [[223, 2, 1, "", "__init__"], [223, 3, 1, "", "kLinear"], [223, 3, 1, "", "kSrc"], [223, 3, 1, "", "name"], [223, 3, 1, "", "value"]], "skia.SurfaceCharacterization": [[224, 2, 1, "", "__init__"], [224, 2, 1, "", "cacheMaxResourceBytes"], [224, 2, 1, "", "colorSpace"], [224, 2, 1, "", "createBackendFormat"], [224, 2, 1, "", "createColorSpace"], [224, 2, 1, "", "createFBO0"], [224, 2, 1, "", "createResized"], [224, 2, 1, "", "height"], [224, 2, 1, "", "isMipMapped"], [224, 2, 1, "", "isTextureable"], [224, 2, 1, "", "isValid"], [224, 2, 1, "", "refColorSpace"], [224, 2, 1, "", "surfaceProps"], [224, 2, 1, "", "usesGLFBO0"], [224, 2, 1, "", "vulkanSecondaryCBCompatible"], [224, 2, 1, "", "width"]], "skia.SurfaceProps": [[226, 1, 1, "", "Flags"], [225, 2, 1, "", "__init__"], [225, 2, 1, "", "flags"], [225, 2, 1, "", "isUseDeviceIndependentFonts"], [225, 3, 1, "", "kUseDeviceIndependentFonts_Flag"], [225, 2, 1, "", "pixelGeometry"]], "skia.SurfaceProps.Flags": [[226, 2, 1, "", "__init__"], [226, 3, 1, "", "kUseDeviceIndependentFonts_Flag"], [226, 3, 1, "", "name"], [226, 3, 1, "", "value"]], "skia.TableColorFilter": [[227, 2, 1, "", "Make"], [227, 2, 1, "", "MakeARGB"], [227, 2, 1, "", "__init__"]], "skia.TableMaskFilter": [[228, 2, 1, "", "Create"], [228, 2, 1, "", "CreateClip"], [228, 2, 1, "", "CreateGamma"], [228, 2, 1, "", "MakeClipTable"], [228, 2, 1, "", "MakeGammaTable"], [228, 2, 1, "", "__init__"]], "skia.TextBlob": [[229, 2, 1, "", "Deserialize"], [230, 1, 1, "", "Iter"], [229, 2, 1, "", "MakeFromPosText"], [229, 2, 1, "", "MakeFromPosTextH"], [229, 2, 1, "", "MakeFromRSXform"], [229, 2, 1, "", "MakeFromShapedText"], [229, 2, 1, "", "MakeFromString"], [229, 2, 1, "", "MakeFromText"], [229, 2, 1, "", "__init__"], [229, 2, 1, "", "bounds"], [229, 2, 1, "", "deref"], [229, 2, 1, "", "getIntercepts"], [229, 2, 1, "", "ref"], [229, 2, 1, "", "refCntGreaterThan"], [229, 2, 1, "", "serialize"], [229, 2, 1, "", "unique"], [229, 2, 1, "", "uniqueID"], [229, 2, 1, "", "unref"]], "skia.TextBlob.Iter": [[231, 1, 1, "", "Run"], [230, 2, 1, "", "__init__"], [230, 2, 1, "", "next"]], "skia.TextBlob.Iter.Run": [[231, 2, 1, "", "__init__"], [231, 3, 1, "", "fGlyphCount"], [231, 3, 1, "", "fGlyphIndices"], [231, 3, 1, "", "fTypeface"]], "skia.TextBlobBuilder": [[232, 2, 1, "", "__init__"], [232, 2, 1, "", "allocRun"], [232, 2, 1, "", "allocRunPos"], [232, 2, 1, "", "allocRunPosH"], [232, 2, 1, "", "allocRunRSXform"], [232, 2, 1, "", "make"]], "skia.TextEncoding": [[233, 2, 1, "", "__init__"], [233, 3, 1, "", "kGlyphID"], [233, 3, 1, "", "kUTF16"], [233, 3, 1, "", "kUTF32"], [233, 3, 1, "", "kUTF8"], [233, 3, 1, "", "name"], [233, 3, 1, "", "value"]], "skia.TileMode": [[234, 2, 1, "", "__init__"], [234, 3, 1, "", "kClamp"], [234, 3, 1, "", "kDecal"], [234, 3, 1, "", "kLastTileMode"], [234, 3, 1, "", "kMirror"], [234, 3, 1, "", "kRepeat"], [234, 3, 1, "", "name"], [234, 3, 1, "", "value"]], "skia.TrimPathEffect": [[235, 2, 1, "", "Make"], [236, 1, 1, "", "Mode"], [235, 2, 1, "", "__init__"], [235, 3, 1, "", "kInverted"], [235, 3, 1, "", "kNormal"]], "skia.TrimPathEffect.Mode": [[236, 2, 1, "", "__init__"], [236, 3, 1, "", "kInverted"], [236, 3, 1, "", "kNormal"], [236, 3, 1, "", "name"], [236, 3, 1, "", "value"]], "skia.Typeface": [[237, 2, 1, "", "Equal"], [237, 2, 1, "", "MakeDefault"], [237, 2, 1, "", "MakeDeserialize"], [237, 2, 1, "", "MakeEmpty"], [237, 2, 1, "", "MakeFromData"], [237, 2, 1, "", "MakeFromFile"], [237, 2, 1, "", "MakeFromName"], [238, 1, 1, "", "SerializeBehavior"], [237, 2, 1, "", "__init__"], [237, 2, 1, "", "copyTableData"], [237, 2, 1, "", "countGlyphs"], [237, 2, 1, "", "countTables"], [237, 2, 1, "", "fontStyle"], [237, 2, 1, "", "getBounds"], [237, 2, 1, "", "getFamilyName"], [237, 2, 1, "", "getFamilyNames"], [237, 2, 1, "", "getKerningPairAdjustments"], [237, 2, 1, "", "getPostScriptName"], [237, 2, 1, "", "getTableData"], [237, 2, 1, "", "getTableSize"], [237, 2, 1, "", "getTableTags"], [237, 2, 1, "", "getUnitsPerEm"], [237, 2, 1, "", "getVariationDesignParameters"], [237, 2, 1, "", "getVariationDesignPosition"], [237, 2, 1, "", "isBold"], [237, 2, 1, "", "isFixedPitch"], [237, 2, 1, "", "isItalic"], [237, 3, 1, "", "kDoIncludeData"], [237, 3, 1, "", "kDontIncludeData"], [237, 3, 1, "", "kIncludeDataIfLocal"], [237, 2, 1, "", "makeClone"], [237, 2, 1, "", "ref"], [237, 2, 1, "", "serialize"], [237, 2, 1, "", "unicharToGlyph"], [237, 2, 1, "", "unicharsToGlyphs"], [237, 2, 1, "", "unique"], [237, 2, 1, "", "uniqueID"], [237, 2, 1, "", "unref"]], "skia.Typeface.SerializeBehavior": [[238, 2, 1, "", "__init__"], [238, 3, 1, "", "kDoIncludeData"], [238, 3, 1, "", "kDontIncludeData"], [238, 3, 1, "", "kIncludeDataIfLocal"], [238, 3, 1, "", "name"], [238, 3, 1, "", "value"]], "skia.Vertices": [[239, 2, 1, "", "MakeCopy"], [240, 1, 1, "", "VertexMode"], [239, 2, 1, "", "__init__"], [239, 2, 1, "", "approximateSize"], [239, 2, 1, "", "bounds"], [239, 2, 1, "", "deref"], [239, 3, 1, "", "kLast_VertexMode"], [239, 3, 1, "", "kTriangleFan_VertexMode"], [239, 3, 1, "", "kTriangleStrip_VertexMode"], [239, 3, 1, "", "kTriangles_VertexMode"], [239, 2, 1, "", "ref"], [239, 2, 1, "", "refCntGreaterThan"], [239, 2, 1, "", "unique"], [239, 2, 1, "", "uniqueID"], [239, 2, 1, "", "unref"]], "skia.Vertices.VertexMode": [[240, 2, 1, "", "__init__"], [240, 3, 1, "", "kLast_VertexMode"], [240, 3, 1, "", "kTriangleFan_VertexMode"], [240, 3, 1, "", "kTriangleStrip_VertexMode"], [240, 3, 1, "", "kTriangles_VertexMode"], [240, 3, 1, "", "name"], [240, 3, 1, "", "value"]], "skia.VkFormat": [[241, 2, 1, "", "__init__"], [241, 3, 1, "", "name"], [241, 3, 1, "", "value"]], "skia.VkImageLayout": [[242, 2, 1, "", "__init__"], [242, 3, 1, "", "name"], [242, 3, 1, "", "value"]], "skia.WStream": [[243, 2, 1, "", "SizeOfPackedUInt"], [243, 2, 1, "", "__init__"], [243, 2, 1, "", "bytesWritten"], [243, 2, 1, "", "flush"], [243, 2, 1, "", "newline"], [243, 2, 1, "", "write"], [243, 2, 1, "", "write16"], [243, 2, 1, "", "write32"], [243, 2, 1, "", "write8"], [243, 2, 1, "", "writeBigDecAsText"], [243, 2, 1, "", "writeBool"], [243, 2, 1, "", "writeDecAsText"], [243, 2, 1, "", "writeHexAsText"], [243, 2, 1, "", "writePackedUInt"], [243, 2, 1, "", "writeScalar"], [243, 2, 1, "", "writeScalarAsText"], [243, 2, 1, "", "writeStream"], [243, 2, 1, "", "writeText"]], "skia.YUVAInfo": [[244, 2, 1, "", "HasAlpha"], [244, 2, 1, "", "NumChannelsInPlane"], [244, 2, 1, "", "NumPlanes"], [245, 1, 1, "", "PlaneConfig"], [244, 2, 1, "", "PlaneDimensions"], [246, 1, 1, "", "Siting"], [247, 1, 1, "", "Subsampling"], [244, 2, 1, "", "__init__"], [244, 2, 1, "", "computeTotalBytes"], [244, 2, 1, "", "dimensions"], [244, 2, 1, "", "hasAlpha"], [244, 2, 1, "", "height"], [244, 3, 1, "", "k410"], [244, 3, 1, "", "k411"], [244, 3, 1, "", "k420"], [244, 3, 1, "", "k422"], [244, 3, 1, "", "k440"], [244, 3, 1, "", "k444"], [244, 3, 1, "", "kCentered"], [244, 3, 1, "", "kMaxPlanes"], [244, 3, 1, "", "kUYV"], [244, 3, 1, "", "kUYVA"], [244, 3, 1, "", "kUnknown"], [244, 3, 1, "", "kYUV"], [244, 3, 1, "", "kYUVA"], [244, 3, 1, "", "kY_UV"], [244, 3, 1, "", "kY_UV_A"], [244, 3, 1, "", "kY_U_V"], [244, 3, 1, "", "kY_U_V_A"], [244, 3, 1, "", "kY_VU"], [244, 3, 1, "", "kY_VU_A"], [244, 3, 1, "", "kY_V_U"], [244, 3, 1, "", "kY_V_U_A"], [244, 2, 1, "", "numChannelsInPlane"], [244, 2, 1, "", "numPlanes"], [244, 2, 1, "", "origin"], [244, 2, 1, "", "planeConfig"], [244, 2, 1, "", "planeDimensions"], [244, 2, 1, "", "sitingX"], [244, 2, 1, "", "sitingY"], [244, 2, 1, "", "subSampling"], [244, 2, 1, "", "width"], [244, 2, 1, "", "yuvColorSpace"]], "skia.YUVAInfo.PlaneConfig": [[245, 2, 1, "", "__init__"], [245, 3, 1, "", "kUYV"], [245, 3, 1, "", "kUYVA"], [245, 3, 1, "", "kUnknown"], [245, 3, 1, "", "kYUV"], [245, 3, 1, "", "kYUVA"], [245, 3, 1, "", "kY_UV"], [245, 3, 1, "", "kY_UV_A"], [245, 3, 1, "", "kY_U_V"], [245, 3, 1, "", "kY_U_V_A"], [245, 3, 1, "", "kY_VU"], [245, 3, 1, "", "kY_VU_A"], [245, 3, 1, "", "kY_V_U"], [245, 3, 1, "", "kY_V_U_A"], [245, 3, 1, "", "name"], [245, 3, 1, "", "value"]], "skia.YUVAInfo.Siting": [[246, 2, 1, "", "__init__"], [246, 3, 1, "", "kCentered"], [246, 3, 1, "", "name"], [246, 3, 1, "", "value"]], "skia.YUVAInfo.Subsampling": [[247, 2, 1, "", "__init__"], [247, 3, 1, "", "k410"], [247, 3, 1, "", "k411"], [247, 3, 1, "", "k420"], [247, 3, 1, "", "k422"], [247, 3, 1, "", "k440"], [247, 3, 1, "", "k444"], [247, 3, 1, "", "kUnknown"], [247, 3, 1, "", "name"], [247, 3, 1, "", "value"]], "skia.YUVAPixmapInfo": [[249, 1, 1, "", "DataType"], [248, 2, 1, "", "DefaultColorTypeForDataType"], [248, 2, 1, "", "NumChannelsAndDataType"], [250, 1, 1, "", "SupportedDataTypes"], [248, 2, 1, "", "__init__"], [248, 2, 1, "", "computeTotalBytes"], [248, 2, 1, "", "dataType"], [248, 2, 1, "", "initPixmapsFromSingleAllocation"], [248, 2, 1, "", "isSupported"], [248, 2, 1, "", "isValid"], [248, 3, 1, "", "kFloat16"], [248, 3, 1, "", "kLast"], [248, 3, 1, "", "kMaxPlanes"], [248, 3, 1, "", "kUnorm10_Unorm2"], [248, 3, 1, "", "kUnorm16"], [248, 3, 1, "", "kUnorm8"], [248, 2, 1, "", "numPlanes"], [248, 2, 1, "", "planeInfo"], [248, 2, 1, "", "rowBytes"], [248, 2, 1, "", "yuvColorSpace"], [248, 2, 1, "", "yuvaInfo"]], "skia.YUVAPixmapInfo.DataType": [[249, 2, 1, "", "__init__"], [249, 3, 1, "", "kFloat16"], [249, 3, 1, "", "kLast"], [249, 3, 1, "", "kUnorm10_Unorm2"], [249, 3, 1, "", "kUnorm16"], [249, 3, 1, "", "kUnorm8"], [249, 3, 1, "", "name"], [249, 3, 1, "", "value"]], "skia.YUVAPixmapInfo.SupportedDataTypes": [[250, 2, 1, "", "All"], [250, 2, 1, "", "__init__"], [250, 2, 1, "", "enableDataType"], [250, 2, 1, "", "supported"]], "skia.YUVAPixmaps": [[251, 2, 1, "", "Allocate"], [251, 2, 1, "", "FromData"], [251, 2, 1, "", "FromExternalMemory"], [251, 2, 1, "", "FromExternalPixmaps"], [251, 2, 1, "", "__init__"], [251, 2, 1, "", "isValid"], [251, 2, 1, "", "numPlanes"], [251, 2, 1, "", "plane"], [251, 2, 1, "", "planes"], [251, 2, 1, "", "yuvaInfo"]], "skia.YUVColorSpace": [[252, 2, 1, "", "__init__"], [252, 3, 1, "", "kBT2020_YUVColorSpace"], [252, 3, 1, "", "kIdentity_YUVColorSpace"], [252, 3, 1, "", "kJPEG_YUVColorSpace"], [252, 3, 1, "", "kLastEnum_YUVColorSpace"], [252, 3, 1, "", "kRec601_YUVColorSpace"], [252, 3, 1, "", "kRec709_YUVColorSpace"], [252, 3, 1, "", "name"], [252, 3, 1, "", "value"]], "skia.gpuBackendApi": [[253, 2, 1, "", "__init__"], [253, 3, 1, "", "kDawn"], [253, 3, 1, "", "kMetal"], [253, 3, 1, "", "kMock"], [253, 3, 1, "", "kVulkan"], [253, 3, 1, "", "name"], [253, 3, 1, "", "value"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"develop": 0, "python": [0, 1, 256], "bind": 0, "design": 0, "contribut": 0, "skia": [1, 4], "document": [1, 2, 52], "indic": 1, "tabl": [1, 257], "instal": 2, "pypi": 2, "distribut": 2, "build": 2, "instruct": 2, "linux": 2, "maco": 2, "window": [2, 254], "test": 2, "refer": 3, "function": 4, "alphatyp": 5, "method": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253], "attribut": [5, 6, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 46, 47, 53, 54, 56, 57, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 75, 76, 77, 78, 79, 81, 86, 91, 92, 93, 94, 96, 98, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 139, 140, 141, 142, 143, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 186, 187, 188, 189, 190, 191, 193, 196, 199, 201, 204, 205, 208, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 252, 253], "applyperspectiveclip": 6, "autocanvasrestor": 7, "bbhfactori": 8, "bboxhierarchi": [9, 10], "metadata": [10, 151], "bitmap": [11, 12, 257], "allocflag": 12, "blendmod": 13, "blendmodecoeff": 14, "blurmaskfilt": 15, "blurstyl": 16, "budget": 17, "canva": [18, 19, 20, 21, 22, 23, 24, 25, 254, 256], "lattic": [19, 20], "recttyp": 20, "pointmod": 21, "quadaaflag": 22, "savelayerflag": 23, "savelayerrec": 24, "srcrectconstraint": 25, "clipop": 26, "codec": [27, 28, 29, 30, 31, 32, 33, 34], "disposalmethod": 28, "frameinfo": 29, "option": 30, "result": 31, "scanlineord": 32, "selectionpolici": 33, "zeroiniti": 34, "color4f": 35, "colorchannel": 36, "colorchannelflag": 37, "colorfilt": [38, 39, 40, 257], "type": [39, 44, 54, 62, 133, 140, 173, 190, 205], "colorinfo": 41, "colormatrix": 42, "colormatrixfilt": [43, 44], "colorspac": 45, "colortyp": 46, "convergemod": 47, "cornerpatheffect": 48, "dashpatheffect": 49, "data": 50, "discretepatheffect": 51, "drawabl": [53, 54], "dynamicmemorywstream": 55, "encodedimageformat": 56, "encodedorigin": 57, "filestream": 58, "filewstream": 59, "filtermod": 60, "flattan": [61, 62], "font": [63, 64], "edg": 64, "fontargu": [65, 66, 67, 68], "variationposit": [66, 67, 68], "coordin": [67, 68], "fonthint": 69, "fontmetr": [70, 71], "fontmetricsflag": 71, "fontmgr": 72, "fontparamet": [73, 74, 75], "variat": [74, 75], "axi": 75, "fontstyl": [76, 77, 78, 79], "slant": 77, "weight": 78, "width": 79, "fontstyleset": 80, "grbackendapi": 81, "grbackendformat": 82, "grbackendrendertarget": 83, "grbackendsemaphor": 84, "grbackendtextur": 85, "grcolortyp": 86, "grcontext": 87, "grcontextopt": 88, "grcontext_bas": 89, "grdirectcontext": 90, "grflushinfo": 91, "grglbackendst": 92, "grglformat": 93, "grglframebufferinfo": 94, "grglinterfac": 95, "grgltextureinfo": 96, "grimagecontext": 97, "grmipmap": 98, "grmockopt": 99, "grmockrendertargetinfo": 100, "grmocktextureinfo": 101, "grprotect": 102, "grpurgeresourceopt": 103, "grrecordingcontext": 104, "grrender": 105, "grsemaphoressubmit": 106, "grsurfaceorigin": 107, "grsynccpu": 108, "grtexturetyp": 109, "grvkalloc": 110, "grvkbackendcontext": 111, "grvkdrawableinfo": 112, "grvkextensionflag": 113, "grvkfeatureflag": 114, "grvkimageinfo": 115, "grvkycbcrconversioninfo": 116, "gradientshad": [117, 118], "flag": [118, 226], "highcontrastconfig": [119, 120], "invertstyl": 120, "highcontrastfilt": 121, "ipoint": 122, "irect": 123, "isiz": 124, "imag": [125, 126, 127, 128, 129], "bitdepth": 126, "cachinghint": 127, "compressiontyp": 128, "legacybitmapmod": 129, "imagefilt": [130, 131, 132, 133, 134, 257], "croprect": 131, "mapdirect": 132, "imageinfo": 135, "line2dpatheffect": 136, "lumacolorfilt": 137, "m44": 138, "maskfilt": [139, 140, 257], "matrix": [141, 142, 143, 257], "scaletofit": 142, "typemask": 143, "memorystream": 144, "mipmapbuild": 145, "nullwstream": 146, "opbuild": 147, "overdrawcolorfilt": 148, "pdf": [149, 150, 151, 152, 254], "attributelist": 150, "structureelementnod": 152, "paint": [153, 154, 155, 156, 257], "cap": 154, "join": 155, "style": [156, 165, 217], "path": [157, 158, 159, 160, 161, 162, 163, 257, 258], "addpathmod": 158, "arcsiz": [159, 168], "iter": [160, 198, 230, 231], "rawit": 161, "segmentmask": 162, "verb": 163, "path1dpatheffect": [164, 165], "path2dpatheffect": 166, "pathbuild": [167, 168], "pathdirect": 169, "patheffect": [170, 171, 172, 173, 257], "dashinfo": 171, "dashtyp": 172, "pathfilltyp": 174, "pathmeasur": [175, 176], "getposandtan": 176, "pathop": 177, "pathsegmentmask": 178, "pathverb": 179, "perlinnoiseshad": 180, "pictur": [181, 254], "picturerecord": 182, "pixelgeometri": 183, "pixelref": 184, "pixmap": 185, "point": [186, 257], "point3": 187, "rrect": [188, 189, 190], "corner": [189, 257], "rsxform": 191, "rtreefactori": 192, "rect": 193, "refcnt": 194, "refcntbas": 195, "region": [196, 197, 198, 199, 200], "cliper": 197, "op": 199, "spaner": 200, "svgcanva": 201, "svgdom": 202, "samplingopt": 203, "shader": [204, 205, 207, 257], "shadermaskfilt": 206, "size": 208, "stream": 209, "streamasset": 210, "streammemori": 211, "streamrewind": 212, "streamseek": 213, "string": 214, "strokerec": [215, 216, 217], "initstyl": 216, "surfac": [218, 219, 220, 221, 222, 223], "asyncreadresult": 219, "backendhandleaccess": 220, "backendsurfaceaccess": 221, "contentchangemod": 222, "rescalegamma": 223, "surfacecharacter": 224, "surfaceprop": [225, 226], "tablecolorfilt": 227, "tablemaskfilt": 228, "textblob": [229, 230, 231], "run": 231, "textblobbuild": 232, "textencod": 233, "tilemod": 234, "trimpatheffect": [235, 236], "mode": 236, "typefac": [237, 238], "serializebehavior": 238, "vertic": [239, 240], "vertexmod": 240, "vkformat": 241, "vkimagelayout": 242, "wstream": 243, "yuvainfo": [244, 245, 246, 247], "planeconfig": 245, "site": 246, "subsampl": 247, "yuvapixmapinfo": [248, 249, 250], "datatyp": 249, "supporteddatatyp": 250, "yuvapixmap": 251, "yuvcolorspac": 252, "gpubackendapi": 253, "creation": 254, "raster": 254, "gpu": 254, "opengl": 254, "svg": 254, "tutori": 255, "notebook": 255, "exampl": 255, "overview": [256, 257, 258], "detail": 256, "more": 256, "draw": 256, "interoper": 256, "api": 256, "glanc": 256, "xfermod": 257, "radial": 257, "gradient": 257, "two": 257, "conic": 257, "sweep": 257, "fractal": 257, "perlin": 257, "nois": 257, "turbul": 257, "compos": 257, "drop": 257, "shadow": 257, "dilat": 257, "erod": 257, "blur": 257, "mask": 257, "filter": 257, "color": 257, "2d": 257, "effect": 257, "line": 257, "1d": 257, "dash": 257, "discret": 257, "sum": 257}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Development": [[0, "development"]], "Python binding design": [[0, "python-binding-design"]], "Contributing": [[0, "contributing"]], "skia-python": [[1, "skia-python"]], "Documentation": [[1, "documentation"], [2, "documentation"]], "Indices and tables": [[1, "indices-and-tables"]], "Install": [[2, "install"]], "PyPI distribution": [[2, "pypi-distribution"]], "Build instruction": [[2, "build-instruction"]], "Linux": [[2, "linux"]], "macOS": [[2, "macos"]], "Windows": [[2, "windows"]], "Testing": [[2, "testing"]], "Reference": [[3, "reference"]], "skia": [[4, "module-skia"]], "Functions": [[4, "functions"]], "AlphaType": [[5, "alphatype"]], "Methods": [[5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [9, "methods"], [10, "methods"], [11, "methods"], [12, "methods"], [13, "methods"], [14, "methods"], [15, "methods"], [16, "methods"], [17, "methods"], [18, "methods"], [19, "methods"], [20, "methods"], [21, "methods"], [22, "methods"], [23, "methods"], [24, "methods"], [25, "methods"], [26, "methods"], [27, "methods"], [28, "methods"], [29, "methods"], [30, "methods"], [31, "methods"], [32, "methods"], [33, "methods"], [34, "methods"], [35, "methods"], [36, "methods"], [37, "methods"], [38, "methods"], [39, "methods"], [40, "methods"], [41, "methods"], [42, "methods"], [43, "methods"], [44, "methods"], [45, "methods"], [46, "methods"], [47, "methods"], [48, "methods"], [49, "methods"], [50, "methods"], [51, "methods"], [52, "methods"], [53, "methods"], [54, "methods"], [55, "methods"], [56, "methods"], [57, "methods"], [58, "methods"], [59, "methods"], [60, "methods"], [61, "methods"], [62, "methods"], [63, "methods"], [64, "methods"], [65, "methods"], [66, "methods"], [67, "methods"], [68, "methods"], [69, "methods"], [70, "methods"], [71, "methods"], [72, "methods"], [73, "methods"], [74, "methods"], [75, "methods"], [76, "methods"], [77, "methods"], [78, "methods"], [79, "methods"], [80, "methods"], [81, "methods"], [82, "methods"], [83, "methods"], [84, "methods"], [85, "methods"], [86, "methods"], [87, "methods"], [88, "methods"], [89, "methods"], [90, "methods"], [91, "methods"], [92, "methods"], [93, "methods"], [94, "methods"], [95, "methods"], [96, "methods"], [97, "methods"], [98, "methods"], [99, "methods"], [100, "methods"], [101, "methods"], [102, "methods"], [103, "methods"], [104, "methods"], [105, "methods"], [106, "methods"], [107, "methods"], [108, "methods"], [109, "methods"], [110, "methods"], [111, "methods"], [112, "methods"], [113, "methods"], [114, "methods"], [115, "methods"], [116, "methods"], [117, "methods"], [118, "methods"], [119, "methods"], [120, "methods"], [121, "methods"], [122, "methods"], [123, "methods"], [124, "methods"], [125, "methods"], [126, "methods"], [127, "methods"], [128, "methods"], [129, "methods"], [130, "methods"], [131, "methods"], [132, "methods"], [133, "methods"], [134, "methods"], [135, "methods"], [136, "methods"], [137, "methods"], [138, "methods"], [139, "methods"], [140, "methods"], [141, "methods"], [142, "methods"], [143, "methods"], [144, "methods"], [145, "methods"], [146, "methods"], [147, "methods"], [148, "methods"], [149, "methods"], [150, "methods"], [151, "methods"], [152, "methods"], [153, "methods"], [154, "methods"], [155, "methods"], [156, "methods"], [157, "methods"], [158, "methods"], [159, "methods"], [160, "methods"], [161, "methods"], [162, "methods"], [163, "methods"], [164, "methods"], [165, "methods"], [166, "methods"], [167, "methods"], [168, "methods"], [169, "methods"], [170, "methods"], [171, "methods"], [172, "methods"], [173, "methods"], [174, "methods"], [175, "methods"], [176, "methods"], [177, "methods"], [178, "methods"], [179, "methods"], [180, "methods"], [181, "methods"], [182, "methods"], [183, "methods"], [184, "methods"], [185, "methods"], [186, "methods"], [187, "methods"], [188, "methods"], [189, "methods"], [190, "methods"], [191, "methods"], [192, "methods"], [193, "methods"], [194, "methods"], [195, "methods"], [196, "methods"], [197, "methods"], [198, "methods"], [199, "methods"], [200, "methods"], [201, "methods"], [202, "methods"], [203, "methods"], [204, "methods"], [205, "methods"], [206, "methods"], [207, "methods"], [208, "methods"], [209, "methods"], [210, "methods"], [211, "methods"], [212, "methods"], [213, "methods"], [214, "methods"], [215, "methods"], [216, "methods"], [217, "methods"], [218, "methods"], [219, "methods"], [220, "methods"], [221, "methods"], [222, "methods"], [223, "methods"], [224, "methods"], [225, "methods"], [226, "methods"], [227, "methods"], [228, "methods"], [229, "methods"], [230, "methods"], [231, "methods"], [232, "methods"], [233, "methods"], [234, "methods"], [235, "methods"], [236, "methods"], [237, "methods"], [238, "methods"], [239, "methods"], [240, "methods"], [241, "methods"], [242, "methods"], [243, "methods"], [244, "methods"], [245, "methods"], [246, "methods"], [247, "methods"], [248, "methods"], [249, "methods"], [250, "methods"], [251, "methods"], [252, "methods"], [253, "methods"]], "Attributes": [[5, "attributes"], [6, "attributes"], [10, "attributes"], [11, "attributes"], [12, "attributes"], [13, "attributes"], [14, "attributes"], [16, "attributes"], [17, "attributes"], [18, "attributes"], [19, "attributes"], [20, "attributes"], [21, "attributes"], [22, "attributes"], [23, "attributes"], [24, "attributes"], [25, "attributes"], [26, "attributes"], [27, "attributes"], [28, "attributes"], [29, "attributes"], [30, "attributes"], [31, "attributes"], [32, "attributes"], [33, "attributes"], [34, "attributes"], [35, "attributes"], [36, "attributes"], [37, "attributes"], [38, "attributes"], [39, "attributes"], [43, "attributes"], [44, "attributes"], [46, "attributes"], [47, "attributes"], [53, "attributes"], [54, "attributes"], [56, "attributes"], [57, "attributes"], [60, "attributes"], [61, "attributes"], [62, "attributes"], [63, "attributes"], [64, "attributes"], [66, "attributes"], [67, "attributes"], [69, "attributes"], [70, "attributes"], [71, "attributes"], [75, "attributes"], [76, "attributes"], [77, "attributes"], [78, "attributes"], [79, "attributes"], [81, "attributes"], [86, "attributes"], [91, "attributes"], [92, "attributes"], [93, "attributes"], [94, "attributes"], [96, "attributes"], [98, "attributes"], [102, "attributes"], [103, "attributes"], [105, "attributes"], [106, "attributes"], [107, "attributes"], [108, "attributes"], [109, "attributes"], [113, "attributes"], [114, "attributes"], [115, "attributes"], [117, "attributes"], [118, "attributes"], [119, "attributes"], [120, "attributes"], [122, "attributes"], [123, "attributes"], [124, "attributes"], [125, "attributes"], [126, "attributes"], [127, "attributes"], [128, "attributes"], [129, "attributes"], [130, "attributes"], [132, "attributes"], [133, "attributes"], [139, "attributes"], [140, "attributes"], [141, "attributes"], [142, "attributes"], [143, "attributes"], [148, "attributes"], [151, "attributes"], [152, "attributes"], [153, "attributes"], [154, "attributes"], [155, "attributes"], [156, "attributes"], [157, "attributes"], [158, "attributes"], [159, "attributes"], [162, "attributes"], [163, "attributes"], [164, "attributes"], [165, "attributes"], [167, "attributes"], [168, "attributes"], [169, "attributes"], [170, "attributes"], [171, "attributes"], [172, "attributes"], [173, "attributes"], [174, "attributes"], [175, "attributes"], [176, "attributes"], [177, "attributes"], [178, "attributes"], [179, "attributes"], [183, "attributes"], [186, "attributes"], [187, "attributes"], [188, "attributes"], [189, "attributes"], [190, "attributes"], [191, "attributes"], [193, "attributes"], [196, "attributes"], [199, "attributes"], [201, "attributes"], [204, "attributes"], [205, "attributes"], [208, "attributes"], [215, "attributes"], [216, "attributes"], [217, "attributes"], [218, "attributes"], [220, "attributes"], [221, "attributes"], [222, "attributes"], [223, "attributes"], [225, "attributes"], [226, "attributes"], [231, "attributes"], [233, "attributes"], [234, "attributes"], [235, "attributes"], [236, "attributes"], [237, "attributes"], [238, "attributes"], [239, "attributes"], [240, "attributes"], [241, "attributes"], [242, "attributes"], [244, "attributes"], [245, "attributes"], [246, "attributes"], [247, "attributes"], [248, "attributes"], [249, "attributes"], [252, "attributes"], [253, "attributes"]], "ApplyPerspectiveClip": [[6, "applyperspectiveclip"]], "AutoCanvasRestore": [[7, "autocanvasrestore"]], "BBHFactory": [[8, "bbhfactory"]], "BBoxHierarchy": [[9, "bboxhierarchy"]], "BBoxHierarchy.Metadata": [[10, "bboxhierarchy-metadata"]], "Bitmap": [[11, "bitmap"]], "Bitmap.AllocFlags": [[12, "bitmap-allocflags"]], "BlendMode": [[13, "blendmode"]], "BlendModeCoeff": [[14, "blendmodecoeff"]], "BlurMaskFilter": [[15, "blurmaskfilter"]], "BlurStyle": [[16, "blurstyle"]], "Budgeted": [[17, "budgeted"]], "Canvas": [[18, "canvas"]], "Canvas.Lattice": [[19, "canvas-lattice"]], "Canvas.Lattice.RectType": [[20, "canvas-lattice-recttype"]], "Canvas.PointMode": [[21, "canvas-pointmode"]], "Canvas.QuadAAFlags": [[22, "canvas-quadaaflags"]], "Canvas.SaveLayerFlags": [[23, "canvas-savelayerflags"]], "Canvas.SaveLayerRec": [[24, "canvas-savelayerrec"]], "Canvas.SrcRectConstraint": [[25, "canvas-srcrectconstraint"]], "ClipOp": [[26, "clipop"]], "Codec": [[27, "codec"]], "Codec.DisposalMethod": [[28, "codec-disposalmethod"]], "Codec.FrameInfo": [[29, "codec-frameinfo"]], "Codec.Options": [[30, "codec-options"]], "Codec.Result": [[31, "codec-result"]], "Codec.ScanlineOrder": [[32, "codec-scanlineorder"]], "Codec.SelectionPolicy": [[33, "codec-selectionpolicy"]], "Codec.ZeroInitialized": [[34, "codec-zeroinitialized"]], "Color4f": [[35, "color4f"]], "ColorChannel": [[36, "colorchannel"]], "ColorChannelFlag": [[37, "colorchannelflag"]], "ColorFilter": [[38, "colorfilter"], [257, "colorfilter"]], "ColorFilter.Type": [[39, "colorfilter-type"]], "ColorFilters": [[40, "colorfilters"]], "ColorInfo": [[41, "colorinfo"]], "ColorMatrix": [[42, "colormatrix"]], "ColorMatrixFilter": [[43, "colormatrixfilter"]], "ColorMatrixFilter.Type": [[44, "colormatrixfilter-type"]], "ColorSpace": [[45, "colorspace"]], "ColorType": [[46, "colortype"]], "ConvergeMode": [[47, "convergemode"]], "CornerPathEffect": [[48, "cornerpatheffect"]], "DashPathEffect": [[49, "dashpatheffect"]], "Data": [[50, "data"]], "DiscretePathEffect": [[51, "discretepatheffect"]], "Document": [[52, "document"]], "Drawable": [[53, "drawable"]], "Drawable.Type": [[54, "drawable-type"]], "DynamicMemoryWStream": [[55, "dynamicmemorywstream"]], "EncodedImageFormat": [[56, "encodedimageformat"]], "EncodedOrigin": [[57, "encodedorigin"]], "FILEStream": [[58, "filestream"]], "FILEWStream": [[59, "filewstream"]], "FilterMode": [[60, "filtermode"]], "Flattanable": [[61, "flattanable"]], "Flattanable.Type": [[62, "flattanable-type"]], "Font": [[63, "font"]], "Font.Edging": [[64, "font-edging"]], "FontArguments": [[65, "fontarguments"]], "FontArguments.VariationPosition": [[66, "fontarguments-variationposition"]], "FontArguments.VariationPosition.Coordinate": [[67, "fontarguments-variationposition-coordinate"]], "FontArguments.VariationPosition.Coordinates": [[68, "fontarguments-variationposition-coordinates"]], "FontHinting": [[69, "fonthinting"]], "FontMetrics": [[70, "fontmetrics"]], "FontMetrics.FontMetricsFlags": [[71, "fontmetrics-fontmetricsflags"]], "FontMgr": [[72, "fontmgr"]], "FontParameters": [[73, "fontparameters"]], "FontParameters.Variation": [[74, "fontparameters-variation"]], "FontParameters.Variation.Axis": [[75, "fontparameters-variation-axis"]], "FontStyle": [[76, "fontstyle"]], "FontStyle.Slant": [[77, "fontstyle-slant"]], "FontStyle.Weight": [[78, "fontstyle-weight"]], "FontStyle.Width": [[79, "fontstyle-width"]], "FontStyleSet": [[80, "fontstyleset"]], "GrBackendApi": [[81, "grbackendapi"]], "GrBackendFormat": [[82, "grbackendformat"]], "GrBackendRenderTarget": [[83, "grbackendrendertarget"]], "GrBackendSemaphore": [[84, "grbackendsemaphore"]], "GrBackendTexture": [[85, "grbackendtexture"]], "GrColorType": [[86, "grcolortype"]], "GrContext": [[87, "grcontext"]], "GrContextOptions": [[88, "grcontextoptions"]], "GrContext_Base": [[89, "grcontext-base"]], "GrDirectContext": [[90, "grdirectcontext"]], "GrFlushInfo": [[91, "grflushinfo"]], "GrGLBackendState": [[92, "grglbackendstate"]], "GrGLFormat": [[93, "grglformat"]], "GrGLFramebufferInfo": [[94, "grglframebufferinfo"]], "GrGLInterface": [[95, "grglinterface"]], "GrGLTextureInfo": [[96, "grgltextureinfo"]], "GrImageContext": [[97, "grimagecontext"]], "GrMipmapped": [[98, "grmipmapped"]], "GrMockOptions": [[99, "grmockoptions"]], "GrMockRenderTargetInfo": [[100, "grmockrendertargetinfo"]], "GrMockTextureInfo": [[101, "grmocktextureinfo"]], "GrProtected": [[102, "grprotected"]], "GrPurgeResourceOptions": [[103, "grpurgeresourceoptions"]], "GrRecordingContext": [[104, "grrecordingcontext"]], "GrRenderable": [[105, "grrenderable"]], "GrSemaphoresSubmitted": [[106, "grsemaphoressubmitted"]], "GrSurfaceOrigin": [[107, "grsurfaceorigin"]], "GrSyncCpu": [[108, "grsynccpu"]], "GrTextureType": [[109, "grtexturetype"]], "GrVkAlloc": [[110, "grvkalloc"]], "GrVkBackendContext": [[111, "grvkbackendcontext"]], "GrVkDrawableInfo": [[112, "grvkdrawableinfo"]], "GrVkExtensionFlags": [[113, "grvkextensionflags"]], "GrVkFeatureFlags": [[114, "grvkfeatureflags"]], "GrVkImageInfo": [[115, "grvkimageinfo"]], "GrVkYcbcrConversionInfo": [[116, "grvkycbcrconversioninfo"]], "GradientShader": [[117, "gradientshader"]], "GradientShader.Flags": [[118, "gradientshader-flags"]], "HighContrastConfig": [[119, "highcontrastconfig"]], "HighContrastConfig.InvertStyle": [[120, "highcontrastconfig-invertstyle"]], "HighContrastFilter": [[121, "highcontrastfilter"]], "IPoint": [[122, "ipoint"]], "IRect": [[123, "irect"]], "ISize": [[124, "isize"]], "Image": [[125, "image"]], "Image.BitDepth": [[126, "image-bitdepth"]], "Image.CachingHint": [[127, "image-cachinghint"]], "Image.CompressionType": [[128, "image-compressiontype"]], "Image.LegacyBitmapMode": [[129, "image-legacybitmapmode"]], "ImageFilter": [[130, "imagefilter"], [257, "imagefilter"]], "ImageFilter.CropRect": [[131, "imagefilter-croprect"]], "ImageFilter.MapDirection": [[132, "imagefilter-mapdirection"]], "ImageFilter.Type": [[133, "imagefilter-type"]], "ImageFilters": [[134, "imagefilters"]], "ImageInfo": [[135, "imageinfo"]], "Line2DPathEffect": [[136, "line2dpatheffect"]], "LumaColorFilter": [[137, "lumacolorfilter"]], "M44": [[138, "m44"]], "MaskFilter": [[139, "maskfilter"], [257, "maskfilter"]], "MaskFilter.Type": [[140, "maskfilter-type"]], "Matrix": [[141, "matrix"]], "Matrix.ScaleToFit": [[142, "matrix-scaletofit"]], "Matrix.TypeMask": [[143, "matrix-typemask"]], "MemoryStream": [[144, "memorystream"]], "MipmapBuilder": [[145, "mipmapbuilder"]], "NullWStream": [[146, "nullwstream"]], "OpBuilder": [[147, "opbuilder"]], "OverdrawColorFilter": [[148, "overdrawcolorfilter"]], "PDF": [[149, "pdf"], [254, "pdf"]], "PDF.AttributeList": [[150, "pdf-attributelist"]], "PDF.Metadata": [[151, "pdf-metadata"]], "PDF.StructureElementNode": [[152, "pdf-structureelementnode"]], "Paint": [[153, "paint"]], "Paint.Cap": [[154, "paint-cap"]], "Paint.Join": [[155, "paint-join"]], "Paint.Style": [[156, "paint-style"]], "Path": [[157, "path"]], "Path.AddPathMode": [[158, "path-addpathmode"]], "Path.ArcSize": [[159, "path-arcsize"]], "Path.Iter": [[160, "path-iter"]], "Path.RawIter": [[161, "path-rawiter"]], "Path.SegmentMask": [[162, "path-segmentmask"]], "Path.Verb": [[163, "path-verb"]], "Path1DPathEffect": [[164, "path1dpatheffect"]], "Path1DPathEffect.Style": [[165, "path1dpatheffect-style"]], "Path2DPathEffect": [[166, "path2dpatheffect"]], "PathBuilder": [[167, "pathbuilder"]], "PathBuilder.ArcSize": [[168, "pathbuilder-arcsize"]], "PathDirection": [[169, "pathdirection"]], "PathEffect": [[170, "patheffect"], [257, "patheffect"]], "PathEffect.DashInfo": [[171, "patheffect-dashinfo"]], "PathEffect.DashType": [[172, "patheffect-dashtype"]], "PathEffect.Type": [[173, "patheffect-type"]], "PathFillType": [[174, "pathfilltype"]], "PathMeasure": [[175, "pathmeasure"]], "PathMeasure.GetPosAndTan": [[176, "pathmeasure-getposandtan"]], "PathOp": [[177, "pathop"]], "PathSegmentMask": [[178, "pathsegmentmask"]], "PathVerb": [[179, "pathverb"]], "PerlinNoiseShader": [[180, "perlinnoiseshader"]], "Picture": [[181, "picture"], [254, "picture"]], "PictureRecorder": [[182, "picturerecorder"]], "PixelGeometry": [[183, "pixelgeometry"]], "PixelRef": [[184, "pixelref"]], "Pixmap": [[185, "pixmap"]], "Point": [[186, "point"]], "Point3": [[187, "point3"]], "RRect": [[188, "rrect"]], "RRect.Corner": [[189, "rrect-corner"]], "RRect.Type": [[190, "rrect-type"]], "RSXform": [[191, "rsxform"]], "RTreeFactory": [[192, "rtreefactory"]], "Rect": [[193, "rect"]], "RefCnt": [[194, "refcnt"]], "RefCntBase": [[195, "refcntbase"]], "Region": [[196, "region"]], "Region.Cliperator": [[197, "region-cliperator"]], "Region.Iterator": [[198, "region-iterator"]], "Region.Op": [[199, "region-op"]], "Region.Spanerator": [[200, "region-spanerator"]], "SVGCanvas": [[201, "svgcanvas"]], "SVGDOM": [[202, "svgdom"]], "SamplingOptions": [[203, "samplingoptions"]], "Shader": [[204, "shader"], [257, "shader"]], "Shader.Type": [[205, "shader-type"]], "ShaderMaskFilter": [[206, "shadermaskfilter"]], "Shaders": [[207, "shaders"]], "Size": [[208, "size"]], "Stream": [[209, "stream"]], "StreamAsset": [[210, "streamasset"]], "StreamMemory": [[211, "streammemory"]], "StreamRewindable": [[212, "streamrewindable"]], "StreamSeekable": [[213, "streamseekable"]], "String": [[214, "string"]], "StrokeRec": [[215, "strokerec"]], "StrokeRec.InitStyle": [[216, "strokerec-initstyle"]], "StrokeRec.Style": [[217, "strokerec-style"]], "Surface": [[218, "surface"]], "Surface.AsyncReadResult": [[219, "surface-asyncreadresult"]], "Surface.BackendHandleAccess": [[220, "surface-backendhandleaccess"]], "Surface.BackendSurfaceAccess": [[221, "surface-backendsurfaceaccess"]], "Surface.ContentChangeMode": [[222, "surface-contentchangemode"]], "Surface.RescaleGamma": [[223, "surface-rescalegamma"]], "SurfaceCharacterization": [[224, "surfacecharacterization"]], "SurfaceProps": [[225, "surfaceprops"]], "SurfaceProps.Flags": [[226, "surfaceprops-flags"]], "TableColorFilter": [[227, "tablecolorfilter"]], "TableMaskFilter": [[228, "tablemaskfilter"]], "TextBlob": [[229, "textblob"]], "TextBlob.Iter": [[230, "textblob-iter"]], "TextBlob.Iter.Run": [[231, "textblob-iter-run"]], "TextBlobBuilder": [[232, "textblobbuilder"]], "TextEncoding": [[233, "textencoding"]], "TileMode": [[234, "tilemode"]], "TrimPathEffect": [[235, "trimpatheffect"]], "TrimPathEffect.Mode": [[236, "trimpatheffect-mode"]], "Typeface": [[237, "typeface"]], "Typeface.SerializeBehavior": [[238, "typeface-serializebehavior"]], "Vertices": [[239, "vertices"]], "Vertices.VertexMode": [[240, "vertices-vertexmode"]], "VkFormat": [[241, "vkformat"]], "VkImageLayout": [[242, "vkimagelayout"]], "WStream": [[243, "wstream"]], "YUVAInfo": [[244, "yuvainfo"]], "YUVAInfo.PlaneConfig": [[245, "yuvainfo-planeconfig"]], "YUVAInfo.Siting": [[246, "yuvainfo-siting"]], "YUVAInfo.Subsampling": [[247, "yuvainfo-subsampling"]], "YUVAPixmapInfo": [[248, "yuvapixmapinfo"]], "YUVAPixmapInfo.DataType": [[249, "yuvapixmapinfo-datatype"]], "YUVAPixmapInfo.SupportedDataTypes": [[250, "yuvapixmapinfo-supporteddatatypes"]], "YUVAPixmaps": [[251, "yuvapixmaps"]], "YUVColorSpace": [[252, "yuvcolorspace"]], "gpuBackendApi": [[253, "gpubackendapi"]], "Canvas Creation": [[254, "canvas-creation"]], "Raster": [[254, "raster"]], "GPU": [[254, "gpu"]], "OpenGL window": [[254, "opengl-window"]], "SVG": [[254, "svg"]], "Tutorial": [[255, "tutorial"]], "Notebook examples": [[255, "notebook-examples"]], "Overview": [[256, "overview"]], "Canvas details": [[256, "canvas-details"]], "More drawings": [[256, "more-drawings"]], "Python interoperability": [[256, "python-interoperability"]], "APIs at a glance": [[256, "apis-at-a-glance"]], "Paint Overview": [[257, "paint-overview"]], "Xfermode": [[257, "xfermode"]], "Bitmap Shader": [[257, "bitmap-shader"]], "Radial Gradient Shader": [[257, "radial-gradient-shader"]], "Two-Point Conical Gradient Shader": [[257, "two-point-conical-gradient-shader"]], "Sweep Gradient Shader": [[257, "sweep-gradient-shader"]], "Fractal Perlin Noise Shader": [[257, "fractal-perlin-noise-shader"]], "Turbulence Perlin Noise Shader": [[257, "turbulence-perlin-noise-shader"]], "Compose Shader": [[257, "compose-shader"]], "Drop Shadow": [[257, "drop-shadow"]], "Dilate": [[257, "dilate"]], "Erode": [[257, "erode"]], "Blur Mask Filter": [[257, "blur-mask-filter"]], "Color Matrix Color Filter": [[257, "color-matrix-color-filter"]], "Color Table Color Filter": [[257, "color-table-color-filter"]], "Path 2D Path Effect": [[257, "path-2d-path-effect"]], "Line 2D Path Effect": [[257, "line-2d-path-effect"]], "Path 1D Path Effect": [[257, "path-1d-path-effect"]], "Corner Path Effect": [[257, "corner-path-effect"]], "Dash Path Effect": [[257, "dash-path-effect"]], "Discrete Path Effect": [[257, "discrete-path-effect"]], "Compose Path Effect": [[257, "compose-path-effect"]], "Sum Path Effect": [[257, "sum-path-effect"]], "Path Overview": [[258, "path-overview"]]}, "indexentries": {"alphatypeisopaque() (in module skia)": [[4, "skia.AlphaTypeIsOpaque"]], "aswinding() (in module skia)": [[4, "skia.AsWinding"]], "blendmode_ascoeff() (in module skia)": [[4, "skia.BlendMode_AsCoeff"]], "blendmode_name() (in module skia)": [[4, "skia.BlendMode_Name"]], "color() (in module skia)": [[4, "skia.Color"]], "colorgeta() (in module skia)": [[4, "skia.ColorGetA"]], "colorgetb() (in module skia)": [[4, "skia.ColorGetB"]], "colorgetg() (in module skia)": [[4, "skia.ColorGetG"]], "colorgetr() (in module skia)": [[4, "skia.ColorGetR"]], "colorseta() (in module skia)": [[4, "skia.ColorSetA"]], "colorsetargb() (in module skia)": [[4, "skia.ColorSetARGB"]], "colorsetrgb() (in module skia)": [[4, "skia.ColorSetRGB"]], "colortohsv() (in module skia)": [[4, "skia.ColorToHSV"]], "colortypebytesperpixel() (in module skia)": [[4, "skia.ColorTypeBytesPerPixel"]], "colortypeisalwaysopaque() (in module skia)": [[4, "skia.ColorTypeIsAlwaysOpaque"]], "colortypevalidatealphatype() (in module skia)": [[4, "skia.ColorTypeValidateAlphaType"]], "computeisopaque() (in module skia)": [[4, "skia.ComputeIsOpaque"]], "encodedorigintomatrix() (in module skia)": [[4, "skia.EncodedOriginToMatrix"]], "hsvtocolor() (in module skia)": [[4, "skia.HSVToColor"]], "makenullcanvas() (in module skia)": [[4, "skia.MakeNullCanvas"]], "op() (in module skia)": [[4, "skia.Op"]], "pathfilltype_converttononinverse() (in module skia)": [[4, "skia.PathFillType_ConvertToNonInverse"]], "pathfilltype_isevenodd() (in module skia)": [[4, "skia.PathFillType_IsEvenOdd"]], "pathfilltype_isinverse() (in module skia)": [[4, "skia.PathFillType_IsInverse"]], "premultiplyargb() (in module skia)": [[4, "skia.PreMultiplyARGB"]], "premultiplycolor() (in module skia)": [[4, "skia.PreMultiplyColor"]], "rgbtohsv() (in module skia)": [[4, "skia.RGBToHSV"]], "simplify() (in module skia)": [[4, "skia.Simplify"]], "tightbounds() (in module skia)": [[4, "skia.TightBounds"]], "module": [[4, "module-skia"]], "skia": [[4, "module-skia"]], "alphatype (class in skia)": [[5, "skia.AlphaType"]], "__init__() (alphatype method)": [[5, "skia.AlphaType.__init__"]], "klastenum_alphatype (alphatype attribute)": [[5, "skia.AlphaType.kLastEnum_AlphaType"]], "kopaque_alphatype (alphatype attribute)": [[5, "skia.AlphaType.kOpaque_AlphaType"]], "kpremul_alphatype (alphatype attribute)": [[5, "skia.AlphaType.kPremul_AlphaType"]], "kunknown_alphatype (alphatype attribute)": [[5, "skia.AlphaType.kUnknown_AlphaType"]], "kunpremul_alphatype (alphatype attribute)": [[5, "skia.AlphaType.kUnpremul_AlphaType"]], "name (alphatype attribute)": [[5, "skia.AlphaType.name"]], "value (alphatype attribute)": [[5, "skia.AlphaType.value"]], "applyperspectiveclip (class in skia)": [[6, "skia.ApplyPerspectiveClip"]], "__init__() (applyperspectiveclip method)": [[6, "skia.ApplyPerspectiveClip.__init__"]], "kno (applyperspectiveclip attribute)": [[6, "skia.ApplyPerspectiveClip.kNo"]], "kyes (applyperspectiveclip attribute)": [[6, "skia.ApplyPerspectiveClip.kYes"]], "name (applyperspectiveclip attribute)": [[6, "skia.ApplyPerspectiveClip.name"]], "value (applyperspectiveclip attribute)": [[6, "skia.ApplyPerspectiveClip.value"]], "autocanvasrestore (class in skia)": [[7, "skia.AutoCanvasRestore"]], "__init__() (autocanvasrestore method)": [[7, "skia.AutoCanvasRestore.__init__"]], "restore() (autocanvasrestore method)": [[7, "skia.AutoCanvasRestore.restore"]], "bbhfactory (class in skia)": [[8, "skia.BBHFactory"]], "__init__() (bbhfactory method)": [[8, "skia.BBHFactory.__init__"]], "bboxhierarchy (class in skia)": [[9, "skia.BBoxHierarchy"]], "__init__() (bboxhierarchy method)": [[9, "skia.BBoxHierarchy.__init__"]], "bytesused() (bboxhierarchy method)": [[9, "skia.BBoxHierarchy.bytesUsed"]], "insert() (bboxhierarchy method)": [[9, "skia.BBoxHierarchy.insert"]], "ref() (bboxhierarchy method)": [[9, "skia.BBoxHierarchy.ref"]], "search() (bboxhierarchy method)": [[9, "skia.BBoxHierarchy.search"]], "unique() (bboxhierarchy method)": [[9, "skia.BBoxHierarchy.unique"]], "unref() (bboxhierarchy method)": [[9, "skia.BBoxHierarchy.unref"]], "metadata (class in skia.bboxhierarchy)": [[10, "skia.BBoxHierarchy.Metadata"]], "__init__() (metadata method)": [[10, "skia.BBoxHierarchy.Metadata.__init__"], [151, "skia.PDF.Metadata.__init__"]], "isdraw (metadata attribute)": [[10, "skia.BBoxHierarchy.Metadata.isDraw"]], "bitmap (class in skia)": [[11, "skia.Bitmap"]], "__init__() (bitmap method)": [[11, "skia.Bitmap.__init__"]], "allocn32pixels() (bitmap method)": [[11, "skia.Bitmap.allocN32Pixels"]], "allocpixels() (bitmap method)": [[11, "skia.Bitmap.allocPixels"]], "allocpixelsflags() (bitmap method)": [[11, "skia.Bitmap.allocPixelsFlags"]], "alphatype() (bitmap method)": [[11, "skia.Bitmap.alphaType"]], "bounds() (bitmap method)": [[11, "skia.Bitmap.bounds"]], "bytesperpixel() (bitmap method)": [[11, "skia.Bitmap.bytesPerPixel"]], "colorspace() (bitmap method)": [[11, "skia.Bitmap.colorSpace"]], "colortype() (bitmap method)": [[11, "skia.Bitmap.colorType"]], "computebytesize() (bitmap method)": [[11, "skia.Bitmap.computeByteSize"]], "dimensions() (bitmap method)": [[11, "skia.Bitmap.dimensions"]], "drawsnothing() (bitmap method)": [[11, "skia.Bitmap.drawsNothing"]], "empty() (bitmap method)": [[11, "skia.Bitmap.empty"]], "erase() (bitmap method)": [[11, "skia.Bitmap.erase"]], "eraseargb() (bitmap method)": [[11, "skia.Bitmap.eraseARGB"]], "extractalpha() (bitmap method)": [[11, "skia.Bitmap.extractAlpha"]], "extractsubset() (bitmap method)": [[11, "skia.Bitmap.extractSubset"]], "getalphaf() (bitmap method)": [[11, "skia.Bitmap.getAlphaf"]], "getbounds() (bitmap method)": [[11, "skia.Bitmap.getBounds"]], "getcolor() (bitmap method)": [[11, "skia.Bitmap.getColor"]], "getgenerationid() (bitmap method)": [[11, "skia.Bitmap.getGenerationID"]], "getpixels() (bitmap method)": [[11, "skia.Bitmap.getPixels"]], "getsubset() (bitmap method)": [[11, "skia.Bitmap.getSubset"]], "height() (bitmap method)": [[11, "skia.Bitmap.height"]], "info() (bitmap method)": [[11, "skia.Bitmap.info"]], "installpixels() (bitmap method)": [[11, "skia.Bitmap.installPixels"]], "isimmutable() (bitmap method)": [[11, "skia.Bitmap.isImmutable"]], "isnull() (bitmap method)": [[11, "skia.Bitmap.isNull"]], "isopaque() (bitmap method)": [[11, "skia.Bitmap.isOpaque"]], "kzeropixels_allocflag (bitmap attribute)": [[11, "skia.Bitmap.kZeroPixels_AllocFlag"]], "makeshader() (bitmap method)": [[11, "skia.Bitmap.makeShader"]], "notifypixelschanged() (bitmap method)": [[11, "skia.Bitmap.notifyPixelsChanged"]], "peekpixels() (bitmap method)": [[11, "skia.Bitmap.peekPixels"]], "pixmap() (bitmap method)": [[11, "skia.Bitmap.pixmap"]], "readpixels() (bitmap method)": [[11, "skia.Bitmap.readPixels"]], "readytodraw() (bitmap method)": [[11, "skia.Bitmap.readyToDraw"]], "refcolorspace() (bitmap method)": [[11, "skia.Bitmap.refColorSpace"]], "reset() (bitmap method)": [[11, "skia.Bitmap.reset"]], "rowbytes() (bitmap method)": [[11, "skia.Bitmap.rowBytes"]], "rowbytesaspixels() (bitmap method)": [[11, "skia.Bitmap.rowBytesAsPixels"]], "setalphatype() (bitmap method)": [[11, "skia.Bitmap.setAlphaType"]], "setimmutable() (bitmap method)": [[11, "skia.Bitmap.setImmutable"]], "setinfo() (bitmap method)": [[11, "skia.Bitmap.setInfo"]], "setpixels() (bitmap method)": [[11, "skia.Bitmap.setPixels"]], "shiftperpixel() (bitmap method)": [[11, "skia.Bitmap.shiftPerPixel"]], "swap() (bitmap method)": [[11, "skia.Bitmap.swap"]], "tobytes() (bitmap method)": [[11, "skia.Bitmap.tobytes"]], "tryallocn32pixels() (bitmap method)": [[11, "skia.Bitmap.tryAllocN32Pixels"]], "tryallocpixels() (bitmap method)": [[11, "skia.Bitmap.tryAllocPixels"]], "tryallocpixelsflags() (bitmap method)": [[11, "skia.Bitmap.tryAllocPixelsFlags"]], "width() (bitmap method)": [[11, "skia.Bitmap.width"]], "writepixels() (bitmap method)": [[11, "skia.Bitmap.writePixels"]], "allocflags (class in skia.bitmap)": [[12, "skia.Bitmap.AllocFlags"]], "__init__() (allocflags method)": [[12, "skia.Bitmap.AllocFlags.__init__"]], "kzeropixels_allocflag (allocflags attribute)": [[12, "skia.Bitmap.AllocFlags.kZeroPixels_AllocFlag"]], "name (allocflags attribute)": [[12, "skia.Bitmap.AllocFlags.name"]], "value (allocflags attribute)": [[12, "skia.Bitmap.AllocFlags.value"]], "blendmode (class in skia)": [[13, "skia.BlendMode"]], "__init__() (blendmode method)": [[13, "skia.BlendMode.__init__"]], "kclear (blendmode attribute)": [[13, "skia.BlendMode.kClear"]], "kcolor (blendmode attribute)": [[13, "skia.BlendMode.kColor"]], "kcolorburn (blendmode attribute)": [[13, "skia.BlendMode.kColorBurn"]], "kcolordodge (blendmode attribute)": [[13, "skia.BlendMode.kColorDodge"]], "kdarken (blendmode attribute)": [[13, "skia.BlendMode.kDarken"]], "kdifference (blendmode attribute)": [[13, "skia.BlendMode.kDifference"]], "kdst (blendmode attribute)": [[13, "skia.BlendMode.kDst"]], "kdstatop (blendmode attribute)": [[13, "skia.BlendMode.kDstATop"]], "kdstin (blendmode attribute)": [[13, "skia.BlendMode.kDstIn"]], "kdstout (blendmode attribute)": [[13, "skia.BlendMode.kDstOut"]], "kdstover (blendmode attribute)": [[13, "skia.BlendMode.kDstOver"]], "kexclusion (blendmode attribute)": [[13, "skia.BlendMode.kExclusion"]], "khardlight (blendmode attribute)": [[13, "skia.BlendMode.kHardLight"]], "khue (blendmode attribute)": [[13, "skia.BlendMode.kHue"]], "klastcoeffmode (blendmode attribute)": [[13, "skia.BlendMode.kLastCoeffMode"]], "klastmode (blendmode attribute)": [[13, "skia.BlendMode.kLastMode"]], "klastseparablemode (blendmode attribute)": [[13, "skia.BlendMode.kLastSeparableMode"]], "klighten (blendmode attribute)": [[13, "skia.BlendMode.kLighten"]], "kluminosity (blendmode attribute)": [[13, "skia.BlendMode.kLuminosity"]], "kmodulate (blendmode attribute)": [[13, "skia.BlendMode.kModulate"]], "kmultiply (blendmode attribute)": [[13, "skia.BlendMode.kMultiply"]], "koverlay (blendmode attribute)": [[13, "skia.BlendMode.kOverlay"]], "kplus (blendmode attribute)": [[13, "skia.BlendMode.kPlus"]], "ksaturation (blendmode attribute)": [[13, "skia.BlendMode.kSaturation"]], "kscreen (blendmode attribute)": [[13, "skia.BlendMode.kScreen"]], "ksoftlight (blendmode attribute)": [[13, "skia.BlendMode.kSoftLight"]], "ksrc (blendmode attribute)": [[13, "skia.BlendMode.kSrc"]], "ksrcatop (blendmode attribute)": [[13, "skia.BlendMode.kSrcATop"]], "ksrcin (blendmode attribute)": [[13, "skia.BlendMode.kSrcIn"]], "ksrcout (blendmode attribute)": [[13, "skia.BlendMode.kSrcOut"]], "ksrcover (blendmode attribute)": [[13, "skia.BlendMode.kSrcOver"]], "kxor (blendmode attribute)": [[13, "skia.BlendMode.kXor"]], "name (blendmode attribute)": [[13, "skia.BlendMode.name"]], "value (blendmode attribute)": [[13, "skia.BlendMode.value"]], "blendmodecoeff (class in skia)": [[14, "skia.BlendModeCoeff"]], "__init__() (blendmodecoeff method)": [[14, "skia.BlendModeCoeff.__init__"]], "kcoeffcount (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kCoeffCount"]], "kda (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kDA"]], "kdc (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kDC"]], "kida (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kIDA"]], "kidc (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kIDC"]], "kisa (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kISA"]], "kisc (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kISC"]], "kone (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kOne"]], "ksa (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kSA"]], "ksc (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kSC"]], "kzero (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kZero"]], "name (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.name"]], "value (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.value"]], "blurmaskfilter (class in skia)": [[15, "skia.BlurMaskFilter"]], "__init__() (blurmaskfilter method)": [[15, "skia.BlurMaskFilter.__init__"]], "blurstyle (class in skia)": [[16, "skia.BlurStyle"]], "__init__() (blurstyle method)": [[16, "skia.BlurStyle.__init__"]], "kinner_blurstyle (blurstyle attribute)": [[16, "skia.BlurStyle.kInner_BlurStyle"]], "klastenum_blurstyle (blurstyle attribute)": [[16, "skia.BlurStyle.kLastEnum_BlurStyle"]], "knormal_blurstyle (blurstyle attribute)": [[16, "skia.BlurStyle.kNormal_BlurStyle"]], "kouter_blurstyle (blurstyle attribute)": [[16, "skia.BlurStyle.kOuter_BlurStyle"]], "ksolid_blurstyle (blurstyle attribute)": [[16, "skia.BlurStyle.kSolid_BlurStyle"]], "name (blurstyle attribute)": [[16, "skia.BlurStyle.name"]], "value (blurstyle attribute)": [[16, "skia.BlurStyle.value"]], "budgeted (class in skia)": [[17, "skia.Budgeted"]], "__init__() (budgeted method)": [[17, "skia.Budgeted.__init__"]], "kno (budgeted attribute)": [[17, "skia.Budgeted.kNo"]], "kyes (budgeted attribute)": [[17, "skia.Budgeted.kYes"]], "name (budgeted attribute)": [[17, "skia.Budgeted.name"]], "value (budgeted attribute)": [[17, "skia.Budgeted.value"]], "canvas (class in skia)": [[18, "skia.Canvas"]], "makerasterdirect() (canvas static method)": [[18, "skia.Canvas.MakeRasterDirect"]], "makerasterdirectn32() (canvas static method)": [[18, "skia.Canvas.MakeRasterDirectN32"]], "__init__() (canvas method)": [[18, "skia.Canvas.__init__"]], "accesstoplayerpixels() (canvas method)": [[18, "skia.Canvas.accessTopLayerPixels"]], "androidframework_setdevicecliprestriction() (canvas method)": [[18, "skia.Canvas.androidFramework_setDeviceClipRestriction"]], "clear() (canvas method)": [[18, "skia.Canvas.clear"]], "clippath() (canvas method)": [[18, "skia.Canvas.clipPath"]], "cliprrect() (canvas method)": [[18, "skia.Canvas.clipRRect"]], "cliprect() (canvas method)": [[18, "skia.Canvas.clipRect"]], "clipregion() (canvas method)": [[18, "skia.Canvas.clipRegion"]], "concat() (canvas method)": [[18, "skia.Canvas.concat"]], "discard() (canvas method)": [[18, "skia.Canvas.discard"]], "drawannotation() (canvas method)": [[18, "skia.Canvas.drawAnnotation"]], "drawarc() (canvas method)": [[18, "skia.Canvas.drawArc"]], "drawatlas() (canvas method)": [[18, "skia.Canvas.drawAtlas"]], "drawbitmap() (canvas method)": [[18, "skia.Canvas.drawBitmap"]], "drawbitmaprect() (canvas method)": [[18, "skia.Canvas.drawBitmapRect"]], "drawcircle() (canvas method)": [[18, "skia.Canvas.drawCircle"]], "drawcolor() (canvas method)": [[18, "skia.Canvas.drawColor"]], "drawdrrect() (canvas method)": [[18, "skia.Canvas.drawDRRect"]], "drawirect() (canvas method)": [[18, "skia.Canvas.drawIRect"]], "drawimage() (canvas method)": [[18, "skia.Canvas.drawImage"]], "drawimagerect() (canvas method)": [[18, "skia.Canvas.drawImageRect"]], "drawline() (canvas method)": [[18, "skia.Canvas.drawLine"]], "drawoval() (canvas method)": [[18, "skia.Canvas.drawOval"]], "drawpaint() (canvas method)": [[18, "skia.Canvas.drawPaint"]], "drawpatch() (canvas method)": [[18, "skia.Canvas.drawPatch"]], "drawpath() (canvas method)": [[18, "skia.Canvas.drawPath"]], "drawpicture() (canvas method)": [[18, "skia.Canvas.drawPicture"]], "drawpoint() (canvas method)": [[18, "skia.Canvas.drawPoint"]], "drawpoints() (canvas method)": [[18, "skia.Canvas.drawPoints"]], "drawrrect() (canvas method)": [[18, "skia.Canvas.drawRRect"]], "drawrect() (canvas method)": [[18, "skia.Canvas.drawRect"]], "drawregion() (canvas method)": [[18, "skia.Canvas.drawRegion"]], "drawroundrect() (canvas method)": [[18, "skia.Canvas.drawRoundRect"]], "drawsimpletext() (canvas method)": [[18, "skia.Canvas.drawSimpleText"]], "drawstring() (canvas method)": [[18, "skia.Canvas.drawString"]], "drawtextblob() (canvas method)": [[18, "skia.Canvas.drawTextBlob"]], "drawvertices() (canvas method)": [[18, "skia.Canvas.drawVertices"]], "flush() (canvas method)": [[18, "skia.Canvas.flush"]], "getbaselayersize() (canvas method)": [[18, "skia.Canvas.getBaseLayerSize"]], "getdeviceclipbounds() (canvas method)": [[18, "skia.Canvas.getDeviceClipBounds"]], "getlocalclipbounds() (canvas method)": [[18, "skia.Canvas.getLocalClipBounds"]], "getlocaltodevice() (canvas method)": [[18, "skia.Canvas.getLocalToDevice"]], "getprops() (canvas method)": [[18, "skia.Canvas.getProps"]], "getsavecount() (canvas method)": [[18, "skia.Canvas.getSaveCount"]], "getsurface() (canvas method)": [[18, "skia.Canvas.getSurface"]], "gettotalmatrix() (canvas method)": [[18, "skia.Canvas.getTotalMatrix"]], "imageinfo() (canvas method)": [[18, "skia.Canvas.imageInfo"]], "isclipempty() (canvas method)": [[18, "skia.Canvas.isClipEmpty"]], "iscliprect() (canvas method)": [[18, "skia.Canvas.isClipRect"]], "kall_quadaaflags (canvas attribute)": [[18, "skia.Canvas.kAll_QuadAAFlags"]], "kbottom_quadaaflag (canvas attribute)": [[18, "skia.Canvas.kBottom_QuadAAFlag"]], "kf16colortype (canvas attribute)": [[18, "skia.Canvas.kF16ColorType"]], "kfast_srcrectconstraint (canvas attribute)": [[18, "skia.Canvas.kFast_SrcRectConstraint"]], "kinitwithprevious_savelayerflag (canvas attribute)": [[18, "skia.Canvas.kInitWithPrevious_SaveLayerFlag"]], "kleft_quadaaflag (canvas attribute)": [[18, "skia.Canvas.kLeft_QuadAAFlag"]], "klines_pointmode (canvas attribute)": [[18, "skia.Canvas.kLines_PointMode"]], "knone_quadaaflags (canvas attribute)": [[18, "skia.Canvas.kNone_QuadAAFlags"]], "kpoints_pointmode (canvas attribute)": [[18, "skia.Canvas.kPoints_PointMode"]], "kpolygon_pointmode (canvas attribute)": [[18, "skia.Canvas.kPolygon_PointMode"]], "kpreservelcdtext_savelayerflag (canvas attribute)": [[18, "skia.Canvas.kPreserveLCDText_SaveLayerFlag"]], "kright_quadaaflag (canvas attribute)": [[18, "skia.Canvas.kRight_QuadAAFlag"]], "kstrict_srcrectconstraint (canvas attribute)": [[18, "skia.Canvas.kStrict_SrcRectConstraint"]], "ktop_quadaaflag (canvas attribute)": [[18, "skia.Canvas.kTop_QuadAAFlag"]], "makesurface() (canvas method)": [[18, "skia.Canvas.makeSurface"]], "peekpixels() (canvas method)": [[18, "skia.Canvas.peekPixels"]], "quickreject() (canvas method)": [[18, "skia.Canvas.quickReject"]], "readpixels() (canvas method)": [[18, "skia.Canvas.readPixels"]], "resetmatrix() (canvas method)": [[18, "skia.Canvas.resetMatrix"]], "restore() (canvas method)": [[18, "skia.Canvas.restore"]], "restoretocount() (canvas method)": [[18, "skia.Canvas.restoreToCount"]], "rotate() (canvas method)": [[18, "skia.Canvas.rotate"]], "save() (canvas method)": [[18, "skia.Canvas.save"]], "savelayer() (canvas method)": [[18, "skia.Canvas.saveLayer"]], "savelayeralpha() (canvas method)": [[18, "skia.Canvas.saveLayerAlpha"]], "scale() (canvas method)": [[18, "skia.Canvas.scale"]], "setmatrix() (canvas method)": [[18, "skia.Canvas.setMatrix"]], "skew() (canvas method)": [[18, "skia.Canvas.skew"]], "toarray() (canvas method)": [[18, "skia.Canvas.toarray"]], "translate() (canvas method)": [[18, "skia.Canvas.translate"]], "writepixels() (canvas method)": [[18, "skia.Canvas.writePixels"]], "lattice (class in skia.canvas)": [[19, "skia.Canvas.Lattice"]], "__init__() (lattice method)": [[19, "skia.Canvas.Lattice.__init__"]], "fbounds (lattice attribute)": [[19, "skia.Canvas.Lattice.fBounds"]], "fcolors (lattice attribute)": [[19, "skia.Canvas.Lattice.fColors"]], "frecttypes (lattice attribute)": [[19, "skia.Canvas.Lattice.fRectTypes"]], "fxcount (lattice attribute)": [[19, "skia.Canvas.Lattice.fXCount"]], "fxdivs (lattice attribute)": [[19, "skia.Canvas.Lattice.fXDivs"]], "fycount (lattice attribute)": [[19, "skia.Canvas.Lattice.fYCount"]], "fydivs (lattice attribute)": [[19, "skia.Canvas.Lattice.fYDivs"]], "kdefault (lattice attribute)": [[19, "skia.Canvas.Lattice.kDefault"]], "kfixedcolor (lattice attribute)": [[19, "skia.Canvas.Lattice.kFixedColor"]], "ktransparent (lattice attribute)": [[19, "skia.Canvas.Lattice.kTransparent"]], "recttype (class in skia.canvas.lattice)": [[20, "skia.Canvas.Lattice.RectType"]], "__init__() (recttype method)": [[20, "skia.Canvas.Lattice.RectType.__init__"]], "kdefault (recttype attribute)": [[20, "skia.Canvas.Lattice.RectType.kDefault"]], "kfixedcolor (recttype attribute)": [[20, "skia.Canvas.Lattice.RectType.kFixedColor"]], "ktransparent (recttype attribute)": [[20, "skia.Canvas.Lattice.RectType.kTransparent"]], "name (recttype attribute)": [[20, "skia.Canvas.Lattice.RectType.name"]], "value (recttype attribute)": [[20, "skia.Canvas.Lattice.RectType.value"]], "pointmode (class in skia.canvas)": [[21, "skia.Canvas.PointMode"]], "__init__() (pointmode method)": [[21, "skia.Canvas.PointMode.__init__"]], "klines_pointmode (pointmode attribute)": [[21, "skia.Canvas.PointMode.kLines_PointMode"]], "kpoints_pointmode (pointmode attribute)": [[21, "skia.Canvas.PointMode.kPoints_PointMode"]], "kpolygon_pointmode (pointmode attribute)": [[21, "skia.Canvas.PointMode.kPolygon_PointMode"]], "name (pointmode attribute)": [[21, "skia.Canvas.PointMode.name"]], "value (pointmode attribute)": [[21, "skia.Canvas.PointMode.value"]], "quadaaflags (class in skia.canvas)": [[22, "skia.Canvas.QuadAAFlags"]], "__init__() (quadaaflags method)": [[22, "skia.Canvas.QuadAAFlags.__init__"]], "kall_quadaaflags (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.kAll_QuadAAFlags"]], "kbottom_quadaaflag (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.kBottom_QuadAAFlag"]], "kleft_quadaaflag (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.kLeft_QuadAAFlag"]], "knone_quadaaflags (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.kNone_QuadAAFlags"]], "kright_quadaaflag (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.kRight_QuadAAFlag"]], "ktop_quadaaflag (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.kTop_QuadAAFlag"]], "name (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.name"]], "value (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.value"]], "savelayerflags (class in skia.canvas)": [[23, "skia.Canvas.SaveLayerFlags"]], "__init__() (savelayerflags method)": [[23, "skia.Canvas.SaveLayerFlags.__init__"]], "kf16colortype (savelayerflags attribute)": [[23, "skia.Canvas.SaveLayerFlags.kF16ColorType"]], "kinitwithprevious_savelayerflag (savelayerflags attribute)": [[23, "skia.Canvas.SaveLayerFlags.kInitWithPrevious_SaveLayerFlag"]], "kpreservelcdtext_savelayerflag (savelayerflags attribute)": [[23, "skia.Canvas.SaveLayerFlags.kPreserveLCDText_SaveLayerFlag"]], "name (savelayerflags attribute)": [[23, "skia.Canvas.SaveLayerFlags.name"]], "value (savelayerflags attribute)": [[23, "skia.Canvas.SaveLayerFlags.value"]], "savelayerrec (class in skia.canvas)": [[24, "skia.Canvas.SaveLayerRec"]], "__init__() (savelayerrec method)": [[24, "skia.Canvas.SaveLayerRec.__init__"]], "fbackdrop (savelayerrec attribute)": [[24, "skia.Canvas.SaveLayerRec.fBackdrop"]], "fbounds (savelayerrec attribute)": [[24, "skia.Canvas.SaveLayerRec.fBounds"]], "fpaint (savelayerrec attribute)": [[24, "skia.Canvas.SaveLayerRec.fPaint"]], "fsavelayerflags (savelayerrec attribute)": [[24, "skia.Canvas.SaveLayerRec.fSaveLayerFlags"]], "srcrectconstraint (class in skia.canvas)": [[25, "skia.Canvas.SrcRectConstraint"]], "__init__() (srcrectconstraint method)": [[25, "skia.Canvas.SrcRectConstraint.__init__"]], "kfast_srcrectconstraint (srcrectconstraint attribute)": [[25, "skia.Canvas.SrcRectConstraint.kFast_SrcRectConstraint"]], "kstrict_srcrectconstraint (srcrectconstraint attribute)": [[25, "skia.Canvas.SrcRectConstraint.kStrict_SrcRectConstraint"]], "name (srcrectconstraint attribute)": [[25, "skia.Canvas.SrcRectConstraint.name"]], "value (srcrectconstraint attribute)": [[25, "skia.Canvas.SrcRectConstraint.value"]], "clipop (class in skia)": [[26, "skia.ClipOp"]], "__init__() (clipop method)": [[26, "skia.ClipOp.__init__"]], "kdifference (clipop attribute)": [[26, "skia.ClipOp.kDifference"]], "kintersect (clipop attribute)": [[26, "skia.ClipOp.kIntersect"]], "name (clipop attribute)": [[26, "skia.ClipOp.name"]], "value (clipop attribute)": [[26, "skia.ClipOp.value"]], "codec (class in skia)": [[27, "skia.Codec"]], "makefromdata() (codec static method)": [[27, "skia.Codec.MakeFromData"]], "minbufferedbytesneeded() (codec static method)": [[27, "skia.Codec.MinBufferedBytesNeeded"]], "resulttostring() (codec static method)": [[27, "skia.Codec.ResultToString"]], "__init__() (codec method)": [[27, "skia.Codec.__init__"]], "bounds() (codec method)": [[27, "skia.Codec.bounds"]], "dimensions() (codec method)": [[27, "skia.Codec.dimensions"]], "getencodedformat() (codec method)": [[27, "skia.Codec.getEncodedFormat"]], "getframecount() (codec method)": [[27, "skia.Codec.getFrameCount"]], "getframeinfo() (codec method)": [[27, "skia.Codec.getFrameInfo"]], "getinfo() (codec method)": [[27, "skia.Codec.getInfo"]], "getorigin() (codec method)": [[27, "skia.Codec.getOrigin"]], "getpixels() (codec method)": [[27, "skia.Codec.getPixels"]], "getrepetitioncount() (codec method)": [[27, "skia.Codec.getRepetitionCount"]], "getscaleddimensions() (codec method)": [[27, "skia.Codec.getScaledDimensions"]], "getscanlineorder() (codec method)": [[27, "skia.Codec.getScanlineOrder"]], "getscanlines() (codec method)": [[27, "skia.Codec.getScanlines"]], "getvalidsubset() (codec method)": [[27, "skia.Codec.getValidSubset"]], "getyuvaplanes() (codec method)": [[27, "skia.Codec.getYUVAPlanes"]], "incrementaldecode() (codec method)": [[27, "skia.Codec.incrementalDecode"]], "kcouldnotrewind (codec attribute)": [[27, "skia.Codec.kCouldNotRewind"]], "kerrorininput (codec attribute)": [[27, "skia.Codec.kErrorInInput"]], "kincompleteinput (codec attribute)": [[27, "skia.Codec.kIncompleteInput"]], "kinternalerror (codec attribute)": [[27, "skia.Codec.kInternalError"]], "kinvalidconversion (codec attribute)": [[27, "skia.Codec.kInvalidConversion"]], "kinvalidinput (codec attribute)": [[27, "skia.Codec.kInvalidInput"]], "kinvalidparameters (codec attribute)": [[27, "skia.Codec.kInvalidParameters"]], "kinvalidscale (codec attribute)": [[27, "skia.Codec.kInvalidScale"]], "kkeep (codec attribute)": [[27, "skia.Codec.kKeep"]], "knoframe (codec attribute)": [[27, "skia.Codec.kNoFrame"]], "kno_zeroinitialized (codec attribute)": [[27, "skia.Codec.kNo_ZeroInitialized"]], "kpreferanimation (codec attribute)": [[27, "skia.Codec.kPreferAnimation"]], "kpreferstillimage (codec attribute)": [[27, "skia.Codec.kPreferStillImage"]], "krepetitioncountinfinite (codec attribute)": [[27, "skia.Codec.kRepetitionCountInfinite"]], "krestorebgcolor (codec attribute)": [[27, "skia.Codec.kRestoreBGColor"]], "krestoreprevious (codec attribute)": [[27, "skia.Codec.kRestorePrevious"]], "ksuccess (codec attribute)": [[27, "skia.Codec.kSuccess"]], "kunimplemented (codec attribute)": [[27, "skia.Codec.kUnimplemented"]], "kyes_zeroinitialized (codec attribute)": [[27, "skia.Codec.kYes_ZeroInitialized"]], "nextscanline() (codec method)": [[27, "skia.Codec.nextScanline"]], "outputscanline() (codec method)": [[27, "skia.Codec.outputScanline"]], "queryyuvainfo() (codec method)": [[27, "skia.Codec.queryYUVAInfo"]], "skipscanlines() (codec method)": [[27, "skia.Codec.skipScanlines"]], "startincrementaldecode() (codec method)": [[27, "skia.Codec.startIncrementalDecode"]], "startscanlinedecode() (codec method)": [[27, "skia.Codec.startScanlineDecode"]], "disposalmethod (class in skia.codec)": [[28, "skia.Codec.DisposalMethod"]], "__init__() (disposalmethod method)": [[28, "skia.Codec.DisposalMethod.__init__"]], "kkeep (disposalmethod attribute)": [[28, "skia.Codec.DisposalMethod.kKeep"]], "krestorebgcolor (disposalmethod attribute)": [[28, "skia.Codec.DisposalMethod.kRestoreBGColor"]], "krestoreprevious (disposalmethod attribute)": [[28, "skia.Codec.DisposalMethod.kRestorePrevious"]], "name (disposalmethod attribute)": [[28, "skia.Codec.DisposalMethod.name"]], "value (disposalmethod attribute)": [[28, "skia.Codec.DisposalMethod.value"]], "frameinfo (class in skia.codec)": [[29, "skia.Codec.FrameInfo"]], "__init__() (frameinfo method)": [[29, "skia.Codec.FrameInfo.__init__"]], "falphatype (frameinfo attribute)": [[29, "skia.Codec.FrameInfo.fAlphaType"]], "fdisposalmethod (frameinfo attribute)": [[29, "skia.Codec.FrameInfo.fDisposalMethod"]], "fduration (frameinfo attribute)": [[29, "skia.Codec.FrameInfo.fDuration"]], "ffullyreceived (frameinfo attribute)": [[29, "skia.Codec.FrameInfo.fFullyReceived"]], "frequiredframe (frameinfo attribute)": [[29, "skia.Codec.FrameInfo.fRequiredFrame"]], "options (class in skia.codec)": [[30, "skia.Codec.Options"]], "__init__() (options method)": [[30, "skia.Codec.Options.__init__"]], "fframeindex (options attribute)": [[30, "skia.Codec.Options.fFrameIndex"]], "fpriorframe (options attribute)": [[30, "skia.Codec.Options.fPriorFrame"]], "fsubset (options attribute)": [[30, "skia.Codec.Options.fSubset"]], "fzeroinitialized (options attribute)": [[30, "skia.Codec.Options.fZeroInitialized"]], "result (class in skia.codec)": [[31, "skia.Codec.Result"]], "__init__() (result method)": [[31, "skia.Codec.Result.__init__"]], "kcouldnotrewind (result attribute)": [[31, "skia.Codec.Result.kCouldNotRewind"]], "kerrorininput (result attribute)": [[31, "skia.Codec.Result.kErrorInInput"]], "kincompleteinput (result attribute)": [[31, "skia.Codec.Result.kIncompleteInput"]], "kinternalerror (result attribute)": [[31, "skia.Codec.Result.kInternalError"]], "kinvalidconversion (result attribute)": [[31, "skia.Codec.Result.kInvalidConversion"]], "kinvalidinput (result attribute)": [[31, "skia.Codec.Result.kInvalidInput"]], "kinvalidparameters (result attribute)": [[31, "skia.Codec.Result.kInvalidParameters"]], "kinvalidscale (result attribute)": [[31, "skia.Codec.Result.kInvalidScale"]], "ksuccess (result attribute)": [[31, "skia.Codec.Result.kSuccess"]], "kunimplemented (result attribute)": [[31, "skia.Codec.Result.kUnimplemented"]], "name (result attribute)": [[31, "skia.Codec.Result.name"]], "value (result attribute)": [[31, "skia.Codec.Result.value"]], "scanlineorder (class in skia.codec)": [[32, "skia.Codec.ScanlineOrder"]], "__init__() (scanlineorder method)": [[32, "skia.Codec.ScanlineOrder.__init__"]], "kkeep (scanlineorder attribute)": [[32, "skia.Codec.ScanlineOrder.kKeep"]], "krestorebgcolor (scanlineorder attribute)": [[32, "skia.Codec.ScanlineOrder.kRestoreBGColor"]], "name (scanlineorder attribute)": [[32, "skia.Codec.ScanlineOrder.name"]], "value (scanlineorder attribute)": [[32, "skia.Codec.ScanlineOrder.value"]], "selectionpolicy (class in skia.codec)": [[33, "skia.Codec.SelectionPolicy"]], "__init__() (selectionpolicy method)": [[33, "skia.Codec.SelectionPolicy.__init__"]], "kpreferanimation (selectionpolicy attribute)": [[33, "skia.Codec.SelectionPolicy.kPreferAnimation"]], "kpreferstillimage (selectionpolicy attribute)": [[33, "skia.Codec.SelectionPolicy.kPreferStillImage"]], "name (selectionpolicy attribute)": [[33, "skia.Codec.SelectionPolicy.name"]], "value (selectionpolicy attribute)": [[33, "skia.Codec.SelectionPolicy.value"]], "zeroinitialized (class in skia.codec)": [[34, "skia.Codec.ZeroInitialized"]], "__init__() (zeroinitialized method)": [[34, "skia.Codec.ZeroInitialized.__init__"]], "kno_zeroinitialized (zeroinitialized attribute)": [[34, "skia.Codec.ZeroInitialized.kNo_ZeroInitialized"]], "kyes_zeroinitialized (zeroinitialized attribute)": [[34, "skia.Codec.ZeroInitialized.kYes_ZeroInitialized"]], "name (zeroinitialized attribute)": [[34, "skia.Codec.ZeroInitialized.name"]], "value (zeroinitialized attribute)": [[34, "skia.Codec.ZeroInitialized.value"]], "color4f (class in skia)": [[35, "skia.Color4f"]], "frombytes_rgba() (color4f static method)": [[35, "skia.Color4f.FromBytes_RGBA"]], "fromcolor() (color4f static method)": [[35, "skia.Color4f.FromColor"]], "__init__() (color4f method)": [[35, "skia.Color4f.__init__"]], "fa (color4f attribute)": [[35, "skia.Color4f.fA"]], "fb (color4f attribute)": [[35, "skia.Color4f.fB"]], "fg (color4f attribute)": [[35, "skia.Color4f.fG"]], "fr (color4f attribute)": [[35, "skia.Color4f.fR"]], "fitsinbytes() (color4f method)": [[35, "skia.Color4f.fitsInBytes"]], "isopaque() (color4f method)": [[35, "skia.Color4f.isOpaque"]], "kblack (color4f attribute)": [[35, "skia.Color4f.kBlack"]], "kblue (color4f attribute)": [[35, "skia.Color4f.kBlue"]], "kcyan (color4f attribute)": [[35, "skia.Color4f.kCyan"]], "kdkgray (color4f attribute)": [[35, "skia.Color4f.kDkGray"]], "kgray (color4f attribute)": [[35, "skia.Color4f.kGray"]], "kgreen (color4f attribute)": [[35, "skia.Color4f.kGreen"]], "kltgray (color4f attribute)": [[35, "skia.Color4f.kLtGray"]], "kmagenta (color4f attribute)": [[35, "skia.Color4f.kMagenta"]], "kred (color4f attribute)": [[35, "skia.Color4f.kRed"]], "ktransparent (color4f attribute)": [[35, "skia.Color4f.kTransparent"]], "kwhite (color4f attribute)": [[35, "skia.Color4f.kWhite"]], "kyellow (color4f attribute)": [[35, "skia.Color4f.kYellow"]], "makeopaque() (color4f method)": [[35, "skia.Color4f.makeOpaque"]], "tobytes_rgba() (color4f method)": [[35, "skia.Color4f.toBytes_RGBA"]], "tocolor() (color4f method)": [[35, "skia.Color4f.toColor"]], "vec() (color4f method)": [[35, "skia.Color4f.vec"]], "colorchannel (class in skia)": [[36, "skia.ColorChannel"]], "__init__() (colorchannel method)": [[36, "skia.ColorChannel.__init__"]], "ka (colorchannel attribute)": [[36, "skia.ColorChannel.kA"]], "kb (colorchannel attribute)": [[36, "skia.ColorChannel.kB"]], "kg (colorchannel attribute)": [[36, "skia.ColorChannel.kG"]], "klastenum (colorchannel attribute)": [[36, "skia.ColorChannel.kLastEnum"]], "kr (colorchannel attribute)": [[36, "skia.ColorChannel.kR"]], "name (colorchannel attribute)": [[36, "skia.ColorChannel.name"]], "value (colorchannel attribute)": [[36, "skia.ColorChannel.value"]], "colorchannelflag (class in skia)": [[37, "skia.ColorChannelFlag"]], "__init__() (colorchannelflag method)": [[37, "skia.ColorChannelFlag.__init__"]], "kalpha_colorchannelflag (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kAlpha_ColorChannelFlag"]], "kblue_colorchannelflag (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kBlue_ColorChannelFlag"]], "kgray_colorchannelflag (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kGray_ColorChannelFlag"]], "kgreen_colorchannelflag (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kGreen_ColorChannelFlag"]], "krgba_colorchannelflags (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kRGBA_ColorChannelFlags"]], "krgb_colorchannelflags (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kRGB_ColorChannelFlags"]], "krg_colorchannelflags (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kRG_ColorChannelFlags"]], "kred_colorchannelflag (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kRed_ColorChannelFlag"]], "name (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.name"]], "value (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.value"]], "colorfilter (class in skia)": [[38, "skia.ColorFilter"]], "deserialize() (colorfilter static method)": [[38, "skia.ColorFilter.Deserialize"]], "__init__() (colorfilter method)": [[38, "skia.ColorFilter.__init__"]], "asacolormatrix() (colorfilter method)": [[38, "skia.ColorFilter.asAColorMatrix"]], "asacolormode() (colorfilter method)": [[38, "skia.ColorFilter.asAColorMode"]], "ascolormode() (colorfilter method)": [[38, "skia.ColorFilter.asColorMode"]], "filtercolor() (colorfilter method)": [[38, "skia.ColorFilter.filterColor"]], "filtercolor4f() (colorfilter method)": [[38, "skia.ColorFilter.filterColor4f"]], "getflattenabletype() (colorfilter method)": [[38, "skia.ColorFilter.getFlattenableType"]], "gettypename() (colorfilter method)": [[38, "skia.ColorFilter.getTypeName"]], "kcolorfilter_type (colorfilter attribute)": [[38, "skia.ColorFilter.kColorFilter_Type"]], "kdrawlooper_type (colorfilter attribute)": [[38, "skia.ColorFilter.kDrawLooper_Type"]], "kdrawable_type (colorfilter attribute)": [[38, "skia.ColorFilter.kDrawable_Type"]], "kimagefilter_type (colorfilter attribute)": [[38, "skia.ColorFilter.kImageFilter_Type"]], "kmaskfilter_type (colorfilter attribute)": [[38, "skia.ColorFilter.kMaskFilter_Type"]], "kpatheffect_type (colorfilter attribute)": [[38, "skia.ColorFilter.kPathEffect_Type"]], "makecomposed() (colorfilter method)": [[38, "skia.ColorFilter.makeComposed"]], "ref() (colorfilter method)": [[38, "skia.ColorFilter.ref"]], "serialize() (colorfilter method)": [[38, "skia.ColorFilter.serialize"]], "unique() (colorfilter method)": [[38, "skia.ColorFilter.unique"]], "unref() (colorfilter method)": [[38, "skia.ColorFilter.unref"]], "type (class in skia.colorfilter)": [[39, "skia.ColorFilter.Type"]], "__init__() (type method)": [[39, "skia.ColorFilter.Type.__init__"], [44, "skia.ColorMatrixFilter.Type.__init__"], [54, "skia.Drawable.Type.__init__"], [62, "skia.Flattanable.Type.__init__"], [133, "skia.ImageFilter.Type.__init__"], [140, "skia.MaskFilter.Type.__init__"], [173, "skia.PathEffect.Type.__init__"], [190, "skia.RRect.Type.__init__"], [205, "skia.Shader.Type.__init__"]], "kcolorfilter_type (type attribute)": [[39, "skia.ColorFilter.Type.kColorFilter_Type"], [44, "skia.ColorMatrixFilter.Type.kColorFilter_Type"], [54, "skia.Drawable.Type.kColorFilter_Type"], [62, "skia.Flattanable.Type.kColorFilter_Type"], [133, "skia.ImageFilter.Type.kColorFilter_Type"], [140, "skia.MaskFilter.Type.kColorFilter_Type"], [173, "skia.PathEffect.Type.kColorFilter_Type"], [205, "skia.Shader.Type.kColorFilter_Type"]], "kdrawlooper_type (type attribute)": [[39, "skia.ColorFilter.Type.kDrawLooper_Type"], [44, "skia.ColorMatrixFilter.Type.kDrawLooper_Type"], [54, "skia.Drawable.Type.kDrawLooper_Type"], [62, "skia.Flattanable.Type.kDrawLooper_Type"], [133, "skia.ImageFilter.Type.kDrawLooper_Type"], [140, "skia.MaskFilter.Type.kDrawLooper_Type"], [173, "skia.PathEffect.Type.kDrawLooper_Type"], [205, "skia.Shader.Type.kDrawLooper_Type"]], "kdrawable_type (type attribute)": [[39, "skia.ColorFilter.Type.kDrawable_Type"], [44, "skia.ColorMatrixFilter.Type.kDrawable_Type"], [54, "skia.Drawable.Type.kDrawable_Type"], [62, "skia.Flattanable.Type.kDrawable_Type"], [133, "skia.ImageFilter.Type.kDrawable_Type"], [140, "skia.MaskFilter.Type.kDrawable_Type"], [173, "skia.PathEffect.Type.kDrawable_Type"], [205, "skia.Shader.Type.kDrawable_Type"]], "kimagefilter_type (type attribute)": [[39, "skia.ColorFilter.Type.kImageFilter_Type"], [44, "skia.ColorMatrixFilter.Type.kImageFilter_Type"], [54, "skia.Drawable.Type.kImageFilter_Type"], [62, "skia.Flattanable.Type.kImageFilter_Type"], [133, "skia.ImageFilter.Type.kImageFilter_Type"], [140, "skia.MaskFilter.Type.kImageFilter_Type"], [173, "skia.PathEffect.Type.kImageFilter_Type"], [205, "skia.Shader.Type.kImageFilter_Type"]], "kmaskfilter_type (type attribute)": [[39, "skia.ColorFilter.Type.kMaskFilter_Type"], [44, "skia.ColorMatrixFilter.Type.kMaskFilter_Type"], [54, "skia.Drawable.Type.kMaskFilter_Type"], [62, "skia.Flattanable.Type.kMaskFilter_Type"], [133, "skia.ImageFilter.Type.kMaskFilter_Type"], [140, "skia.MaskFilter.Type.kMaskFilter_Type"], [173, "skia.PathEffect.Type.kMaskFilter_Type"], [205, "skia.Shader.Type.kMaskFilter_Type"]], "kpatheffect_type (type attribute)": [[39, "skia.ColorFilter.Type.kPathEffect_Type"], [44, "skia.ColorMatrixFilter.Type.kPathEffect_Type"], [54, "skia.Drawable.Type.kPathEffect_Type"], [62, "skia.Flattanable.Type.kPathEffect_Type"], [133, "skia.ImageFilter.Type.kPathEffect_Type"], [140, "skia.MaskFilter.Type.kPathEffect_Type"], [173, "skia.PathEffect.Type.kPathEffect_Type"], [205, "skia.Shader.Type.kPathEffect_Type"]], "name (type attribute)": [[39, "skia.ColorFilter.Type.name"], [44, "skia.ColorMatrixFilter.Type.name"], [54, "skia.Drawable.Type.name"], [62, "skia.Flattanable.Type.name"], [133, "skia.ImageFilter.Type.name"], [140, "skia.MaskFilter.Type.name"], [173, "skia.PathEffect.Type.name"], [190, "skia.RRect.Type.name"], [205, "skia.Shader.Type.name"]], "value (type attribute)": [[39, "skia.ColorFilter.Type.value"], [44, "skia.ColorMatrixFilter.Type.value"], [54, "skia.Drawable.Type.value"], [62, "skia.Flattanable.Type.value"], [133, "skia.ImageFilter.Type.value"], [140, "skia.MaskFilter.Type.value"], [173, "skia.PathEffect.Type.value"], [190, "skia.RRect.Type.value"], [205, "skia.Shader.Type.value"]], "blend() (colorfilters static method)": [[40, "skia.ColorFilters.Blend"]], "colorfilters (class in skia)": [[40, "skia.ColorFilters"]], "compose() (colorfilters static method)": [[40, "skia.ColorFilters.Compose"]], "hslamatrix() (colorfilters static method)": [[40, "skia.ColorFilters.HSLAMatrix"]], "lerp() (colorfilters static method)": [[40, "skia.ColorFilters.Lerp"]], "lineartosrgbgamma() (colorfilters static method)": [[40, "skia.ColorFilters.LinearToSRGBGamma"]], "matrix() (colorfilters static method)": [[40, "skia.ColorFilters.Matrix"]], "srgbtolineargamma() (colorfilters static method)": [[40, "skia.ColorFilters.SRGBToLinearGamma"]], "__init__() (colorfilters method)": [[40, "skia.ColorFilters.__init__"]], "colorinfo (class in skia)": [[41, "skia.ColorInfo"]], "__init__() (colorinfo method)": [[41, "skia.ColorInfo.__init__"]], "alphatype() (colorinfo method)": [[41, "skia.ColorInfo.alphaType"]], "bytesperpixel() (colorinfo method)": [[41, "skia.ColorInfo.bytesPerPixel"]], "colorspace() (colorinfo method)": [[41, "skia.ColorInfo.colorSpace"]], "colortype() (colorinfo method)": [[41, "skia.ColorInfo.colorType"]], "gammaclosetosrgb() (colorinfo method)": [[41, "skia.ColorInfo.gammaCloseToSRGB"]], "isopaque() (colorinfo method)": [[41, "skia.ColorInfo.isOpaque"]], "makealphatype() (colorinfo method)": [[41, "skia.ColorInfo.makeAlphaType"]], "makecolorspace() (colorinfo method)": [[41, "skia.ColorInfo.makeColorSpace"]], "makecolortype() (colorinfo method)": [[41, "skia.ColorInfo.makeColorType"]], "refcolorspace() (colorinfo method)": [[41, "skia.ColorInfo.refColorSpace"]], "shiftperpixel() (colorinfo method)": [[41, "skia.ColorInfo.shiftPerPixel"]], "colormatrix (class in skia)": [[42, "skia.ColorMatrix"]], "__init__() (colormatrix method)": [[42, "skia.ColorMatrix.__init__"]], "colormatrixfilter (class in skia)": [[43, "skia.ColorMatrixFilter"]], "deserialize() (colormatrixfilter static method)": [[43, "skia.ColorMatrixFilter.Deserialize"]], "makelightingfilter() (colormatrixfilter static method)": [[43, "skia.ColorMatrixFilter.MakeLightingFilter"]], "__init__() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.__init__"]], "asacolormatrix() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.asAColorMatrix"]], "asacolormode() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.asAColorMode"]], "ascolormode() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.asColorMode"]], "filtercolor() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.filterColor"]], "filtercolor4f() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.filterColor4f"]], "getflattenabletype() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.getFlattenableType"]], "gettypename() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.getTypeName"]], "kcolorfilter_type (colormatrixfilter attribute)": [[43, "skia.ColorMatrixFilter.kColorFilter_Type"]], "kdrawlooper_type (colormatrixfilter attribute)": [[43, "skia.ColorMatrixFilter.kDrawLooper_Type"]], "kdrawable_type (colormatrixfilter attribute)": [[43, "skia.ColorMatrixFilter.kDrawable_Type"]], "kimagefilter_type (colormatrixfilter attribute)": [[43, "skia.ColorMatrixFilter.kImageFilter_Type"]], "kmaskfilter_type (colormatrixfilter attribute)": [[43, "skia.ColorMatrixFilter.kMaskFilter_Type"]], "kpatheffect_type (colormatrixfilter attribute)": [[43, "skia.ColorMatrixFilter.kPathEffect_Type"]], "makecomposed() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.makeComposed"]], "ref() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.ref"]], "serialize() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.serialize"]], "unique() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.unique"]], "unref() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.unref"]], "type (class in skia.colormatrixfilter)": [[44, "skia.ColorMatrixFilter.Type"]], "colorspace (class in skia)": [[45, "skia.ColorSpace"]], "deserialize() (colorspace static method)": [[45, "skia.ColorSpace.Deserialize"]], "equals() (colorspace static method)": [[45, "skia.ColorSpace.Equals"]], "make() (colorspace static method)": [[45, "skia.ColorSpace.Make"]], "makergb() (colorspace static method)": [[45, "skia.ColorSpace.MakeRGB"]], "makesrgb() (colorspace static method)": [[45, "skia.ColorSpace.MakeSRGB"]], "makesrgblinear() (colorspace static method)": [[45, "skia.ColorSpace.MakeSRGBLinear"]], "__init__() (colorspace method)": [[45, "skia.ColorSpace.__init__"]], "deref() (colorspace method)": [[45, "skia.ColorSpace.deref"]], "gammaclosetosrgb() (colorspace method)": [[45, "skia.ColorSpace.gammaCloseToSRGB"]], "gammaislinear() (colorspace method)": [[45, "skia.ColorSpace.gammaIsLinear"]], "gamuttransformto() (colorspace method)": [[45, "skia.ColorSpace.gamutTransformTo"]], "hash() (colorspace method)": [[45, "skia.ColorSpace.hash"]], "invtransferfn() (colorspace method)": [[45, "skia.ColorSpace.invTransferFn"]], "isnumericaltransferfn() (colorspace method)": [[45, "skia.ColorSpace.isNumericalTransferFn"]], "issrgb() (colorspace method)": [[45, "skia.ColorSpace.isSRGB"]], "makecolorspin() (colorspace method)": [[45, "skia.ColorSpace.makeColorSpin"]], "makelineargamma() (colorspace method)": [[45, "skia.ColorSpace.makeLinearGamma"]], "makesrgbgamma() (colorspace method)": [[45, "skia.ColorSpace.makeSRGBGamma"]], "ref() (colorspace method)": [[45, "skia.ColorSpace.ref"]], "refcntgreaterthan() (colorspace method)": [[45, "skia.ColorSpace.refCntGreaterThan"]], "serialize() (colorspace method)": [[45, "skia.ColorSpace.serialize"]], "toprofile() (colorspace method)": [[45, "skia.ColorSpace.toProfile"]], "toxyzd50() (colorspace method)": [[45, "skia.ColorSpace.toXYZD50"]], "toxyzd50hash() (colorspace method)": [[45, "skia.ColorSpace.toXYZD50Hash"]], "transferfn() (colorspace method)": [[45, "skia.ColorSpace.transferFn"]], "transferfnhash() (colorspace method)": [[45, "skia.ColorSpace.transferFnHash"]], "unique() (colorspace method)": [[45, "skia.ColorSpace.unique"]], "unref() (colorspace method)": [[45, "skia.ColorSpace.unref"]], "writetomemory() (colorspace method)": [[45, "skia.ColorSpace.writeToMemory"]], "colortype (class in skia)": [[46, "skia.ColorType"]], "__init__() (colortype method)": [[46, "skia.ColorType.__init__"]], "ka16_float_colortype (colortype attribute)": [[46, "skia.ColorType.kA16_float_ColorType"]], "ka16_unorm_colortype (colortype attribute)": [[46, "skia.ColorType.kA16_unorm_ColorType"]], "kargb_4444_colortype (colortype attribute)": [[46, "skia.ColorType.kARGB_4444_ColorType"]], "kalpha_8_colortype (colortype attribute)": [[46, "skia.ColorType.kAlpha_8_ColorType"]], "kbgra_1010102_colortype (colortype attribute)": [[46, "skia.ColorType.kBGRA_1010102_ColorType"]], "kbgra_8888_colortype (colortype attribute)": [[46, "skia.ColorType.kBGRA_8888_ColorType"]], "kbgr_101010x_colortype (colortype attribute)": [[46, "skia.ColorType.kBGR_101010x_ColorType"]], "kgray_8_colortype (colortype attribute)": [[46, "skia.ColorType.kGray_8_ColorType"]], "kn32_colortype (colortype attribute)": [[46, "skia.ColorType.kN32_ColorType"]], "kr16g16b16a16_unorm_colortype (colortype attribute)": [[46, "skia.ColorType.kR16G16B16A16_unorm_ColorType"]], "kr16g16_float_colortype (colortype attribute)": [[46, "skia.ColorType.kR16G16_float_ColorType"]], "kr16g16_unorm_colortype (colortype attribute)": [[46, "skia.ColorType.kR16G16_unorm_ColorType"]], "kr8g8_unorm_colortype (colortype attribute)": [[46, "skia.ColorType.kR8G8_unorm_ColorType"]], "krgba_1010102_colortype (colortype attribute)": [[46, "skia.ColorType.kRGBA_1010102_ColorType"]], "krgba_8888_colortype (colortype attribute)": [[46, "skia.ColorType.kRGBA_8888_ColorType"]], "krgba_f16norm_colortype (colortype attribute)": [[46, "skia.ColorType.kRGBA_F16Norm_ColorType"]], "krgba_f16_colortype (colortype attribute)": [[46, "skia.ColorType.kRGBA_F16_ColorType"]], "krgba_f32_colortype (colortype attribute)": [[46, "skia.ColorType.kRGBA_F32_ColorType"]], "krgb_101010x_colortype (colortype attribute)": [[46, "skia.ColorType.kRGB_101010x_ColorType"]], "krgb_565_colortype (colortype attribute)": [[46, "skia.ColorType.kRGB_565_ColorType"]], "krgb_888x_colortype (colortype attribute)": [[46, "skia.ColorType.kRGB_888x_ColorType"]], "kunknown_colortype (colortype attribute)": [[46, "skia.ColorType.kUnknown_ColorType"]], "name (colortype attribute)": [[46, "skia.ColorType.name"]], "value (colortype attribute)": [[46, "skia.ColorType.value"]], "convergemode (class in skia)": [[47, "skia.ConvergeMode"]], "__init__() (convergemode method)": [[47, "skia.ConvergeMode.__init__"]], "kdifference (convergemode attribute)": [[47, "skia.ConvergeMode.kDifference"]], "kintersect (convergemode attribute)": [[47, "skia.ConvergeMode.kIntersect"]], "klast (convergemode attribute)": [[47, "skia.ConvergeMode.kLast"]], "kreversedifference (convergemode attribute)": [[47, "skia.ConvergeMode.kReverseDifference"]], "kunion (convergemode attribute)": [[47, "skia.ConvergeMode.kUnion"]], "kxor (convergemode attribute)": [[47, "skia.ConvergeMode.kXor"]], "name (convergemode attribute)": [[47, "skia.ConvergeMode.name"]], "value (convergemode attribute)": [[47, "skia.ConvergeMode.value"]], "cornerpatheffect (class in skia)": [[48, "skia.CornerPathEffect"]], "make() (cornerpatheffect static method)": [[48, "skia.CornerPathEffect.Make"]], "__init__() (cornerpatheffect method)": [[48, "skia.CornerPathEffect.__init__"]], "dashpatheffect (class in skia)": [[49, "skia.DashPathEffect"]], "make() (dashpatheffect static method)": [[49, "skia.DashPathEffect.Make"]], "__init__() (dashpatheffect method)": [[49, "skia.DashPathEffect.__init__"]], "data (class in skia)": [[50, "skia.Data"]], "makeempty() (data static method)": [[50, "skia.Data.MakeEmpty"]], "makefromfilename() (data static method)": [[50, "skia.Data.MakeFromFileName"]], "makesubset() (data static method)": [[50, "skia.Data.MakeSubset"]], "makeuninitialized() (data static method)": [[50, "skia.Data.MakeUninitialized"]], "makewithcopy() (data static method)": [[50, "skia.Data.MakeWithCopy"]], "makewithoutcopy() (data static method)": [[50, "skia.Data.MakeWithoutCopy"]], "__init__() (data method)": [[50, "skia.Data.__init__"]], "bytes() (data method)": [[50, "skia.Data.bytes"]], "copyrange() (data method)": [[50, "skia.Data.copyRange"]], "data() (data method)": [[50, "skia.Data.data"]], "deref() (data method)": [[50, "skia.Data.deref"]], "equals() (data method)": [[50, "skia.Data.equals"]], "isempty() (data method)": [[50, "skia.Data.isEmpty"]], "ref() (data method)": [[50, "skia.Data.ref"]], "refcntgreaterthan() (data method)": [[50, "skia.Data.refCntGreaterThan"]], "size() (data method)": [[50, "skia.Data.size"]], "unique() (data method)": [[50, "skia.Data.unique"]], "unref() (data method)": [[50, "skia.Data.unref"]], "writable_data() (data method)": [[50, "skia.Data.writable_data"]], "discretepatheffect (class in skia)": [[51, "skia.DiscretePathEffect"]], "make() (discretepatheffect static method)": [[51, "skia.DiscretePathEffect.Make"]], "__init__() (discretepatheffect method)": [[51, "skia.DiscretePathEffect.__init__"]], "document (class in skia)": [[52, "skia.Document"]], "__init__() (document method)": [[52, "skia.Document.__init__"]], "abort() (document method)": [[52, "skia.Document.abort"]], "beginpage() (document method)": [[52, "skia.Document.beginPage"]], "close() (document method)": [[52, "skia.Document.close"]], "endpage() (document method)": [[52, "skia.Document.endPage"]], "page() (document method)": [[52, "skia.Document.page"]], "ref() (document method)": [[52, "skia.Document.ref"]], "unique() (document method)": [[52, "skia.Document.unique"]], "unref() (document method)": [[52, "skia.Document.unref"]], "deserialize() (drawable static method)": [[53, "skia.Drawable.Deserialize"]], "drawable (class in skia)": [[53, "skia.Drawable"]], "__init__() (drawable method)": [[53, "skia.Drawable.__init__"]], "draw() (drawable method)": [[53, "skia.Drawable.draw"]], "getbounds() (drawable method)": [[53, "skia.Drawable.getBounds"]], "getflattenabletype() (drawable method)": [[53, "skia.Drawable.getFlattenableType"]], "getgenerationid() (drawable method)": [[53, "skia.Drawable.getGenerationID"]], "gettypename() (drawable method)": [[53, "skia.Drawable.getTypeName"]], "kcolorfilter_type (drawable attribute)": [[53, "skia.Drawable.kColorFilter_Type"]], "kdrawlooper_type (drawable attribute)": [[53, "skia.Drawable.kDrawLooper_Type"]], "kdrawable_type (drawable attribute)": [[53, "skia.Drawable.kDrawable_Type"]], "kimagefilter_type (drawable attribute)": [[53, "skia.Drawable.kImageFilter_Type"]], "kmaskfilter_type (drawable attribute)": [[53, "skia.Drawable.kMaskFilter_Type"]], "kpatheffect_type (drawable attribute)": [[53, "skia.Drawable.kPathEffect_Type"]], "newpicturesnapshot() (drawable method)": [[53, "skia.Drawable.newPictureSnapshot"]], "notifydrawingchanged() (drawable method)": [[53, "skia.Drawable.notifyDrawingChanged"]], "ref() (drawable method)": [[53, "skia.Drawable.ref"]], "serialize() (drawable method)": [[53, "skia.Drawable.serialize"]], "unique() (drawable method)": [[53, "skia.Drawable.unique"]], "unref() (drawable method)": [[53, "skia.Drawable.unref"]], "type (class in skia.drawable)": [[54, "skia.Drawable.Type"]], "dynamicmemorywstream (class in skia)": [[55, "skia.DynamicMemoryWStream"]], "sizeofpackeduint() (dynamicmemorywstream static method)": [[55, "skia.DynamicMemoryWStream.SizeOfPackedUInt"]], "__init__() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.__init__"]], "byteswritten() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.bytesWritten"]], "copyto() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.copyTo"]], "copytoandreset() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.copyToAndReset"]], "detachasdata() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.detachAsData"]], "detachasstream() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.detachAsStream"]], "flush() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.flush"]], "newline() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.newline"]], "padtoalign4() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.padToAlign4"]], "prependtoandreset() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.prependToAndReset"]], "read() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.read"]], "reset() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.reset"]], "write() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.write"]], "write16() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.write16"]], "write32() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.write32"]], "write8() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.write8"]], "writebigdecastext() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.writeBigDecAsText"]], "writebool() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.writeBool"]], "writedecastext() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.writeDecAsText"]], "writehexastext() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.writeHexAsText"]], "writepackeduint() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.writePackedUInt"]], "writescalar() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.writeScalar"]], "writescalarastext() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.writeScalarAsText"]], "writestream() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.writeStream"]], "writetext() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.writeText"]], "writetoandreset() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.writeToAndReset"]], "writetostream() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.writeToStream"]], "encodedimageformat (class in skia)": [[56, "skia.EncodedImageFormat"]], "__init__() (encodedimageformat method)": [[56, "skia.EncodedImageFormat.__init__"]], "kastc (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kASTC"]], "kbmp (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kBMP"]], "kdng (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kDNG"]], "kgif (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kGIF"]], "kheif (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kHEIF"]], "kico (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kICO"]], "kjpeg (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kJPEG"]], "kktx (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kKTX"]], "kpkm (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kPKM"]], "kpng (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kPNG"]], "kwbmp (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kWBMP"]], "kwebp (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kWEBP"]], "name (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.name"]], "value (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.value"]], "encodedorigin (class in skia)": [[57, "skia.EncodedOrigin"]], "__init__() (encodedorigin method)": [[57, "skia.EncodedOrigin.__init__"]], "kbottomleft_encodedorigin (encodedorigin attribute)": [[57, "skia.EncodedOrigin.kBottomLeft_EncodedOrigin"]], "kbottomright_encodedorigin (encodedorigin attribute)": [[57, "skia.EncodedOrigin.kBottomRight_EncodedOrigin"]], "kdefault_encodedorigin (encodedorigin attribute)": [[57, "skia.EncodedOrigin.kDefault_EncodedOrigin"]], "klast_encodedorigin (encodedorigin attribute)": [[57, "skia.EncodedOrigin.kLast_EncodedOrigin"]], "kleftbottom_encodedorigin (encodedorigin attribute)": [[57, "skia.EncodedOrigin.kLeftBottom_EncodedOrigin"]], "klefttop_encodedorigin (encodedorigin attribute)": [[57, "skia.EncodedOrigin.kLeftTop_EncodedOrigin"]], "krightbottom_encodedorigin (encodedorigin attribute)": [[57, "skia.EncodedOrigin.kRightBottom_EncodedOrigin"]], "krighttop_encodedorigin (encodedorigin attribute)": [[57, "skia.EncodedOrigin.kRightTop_EncodedOrigin"]], "ktopleft_encodedorigin (encodedorigin attribute)": [[57, "skia.EncodedOrigin.kTopLeft_EncodedOrigin"]], "ktopright_encodedorigin (encodedorigin attribute)": [[57, "skia.EncodedOrigin.kTopRight_EncodedOrigin"]], "name (encodedorigin attribute)": [[57, "skia.EncodedOrigin.name"]], "value (encodedorigin attribute)": [[57, "skia.EncodedOrigin.value"]], "filestream (class in skia)": [[58, "skia.FILEStream"]], "make() (filestream static method)": [[58, "skia.FILEStream.Make"]], "makefromfile() (filestream static method)": [[58, "skia.FILEStream.MakeFromFile"]], "__init__() (filestream method)": [[58, "skia.FILEStream.__init__"]], "close() (filestream method)": [[58, "skia.FILEStream.close"]], "duplicate() (filestream method)": [[58, "skia.FILEStream.duplicate"]], "fork() (filestream method)": [[58, "skia.FILEStream.fork"]], "getlength() (filestream method)": [[58, "skia.FILEStream.getLength"]], "getmemorybase() (filestream method)": [[58, "skia.FILEStream.getMemoryBase"]], "getposition() (filestream method)": [[58, "skia.FILEStream.getPosition"]], "haslength() (filestream method)": [[58, "skia.FILEStream.hasLength"]], "hasposition() (filestream method)": [[58, "skia.FILEStream.hasPosition"]], "isatend() (filestream method)": [[58, "skia.FILEStream.isAtEnd"]], "isvalid() (filestream method)": [[58, "skia.FILEStream.isValid"]], "move() (filestream method)": [[58, "skia.FILEStream.move"]], "peek() (filestream method)": [[58, "skia.FILEStream.peek"]], "read() (filestream method)": [[58, "skia.FILEStream.read"]], "readbool() (filestream method)": [[58, "skia.FILEStream.readBool"]], "readpackeduint() (filestream method)": [[58, "skia.FILEStream.readPackedUInt"]], "reads16() (filestream method)": [[58, "skia.FILEStream.readS16"]], "reads32() (filestream method)": [[58, "skia.FILEStream.readS32"]], "reads8() (filestream method)": [[58, "skia.FILEStream.readS8"]], "readscalar() (filestream method)": [[58, "skia.FILEStream.readScalar"]], "readu16() (filestream method)": [[58, "skia.FILEStream.readU16"]], "readu32() (filestream method)": [[58, "skia.FILEStream.readU32"]], "readu8() (filestream method)": [[58, "skia.FILEStream.readU8"]], "rewind() (filestream method)": [[58, "skia.FILEStream.rewind"]], "seek() (filestream method)": [[58, "skia.FILEStream.seek"]], "skip() (filestream method)": [[58, "skia.FILEStream.skip"]], "filewstream (class in skia)": [[59, "skia.FILEWStream"]], "sizeofpackeduint() (filewstream static method)": [[59, "skia.FILEWStream.SizeOfPackedUInt"]], "__init__() (filewstream method)": [[59, "skia.FILEWStream.__init__"]], "byteswritten() (filewstream method)": [[59, "skia.FILEWStream.bytesWritten"]], "flush() (filewstream method)": [[59, "skia.FILEWStream.flush"]], "fsync() (filewstream method)": [[59, "skia.FILEWStream.fsync"]], "isvalid() (filewstream method)": [[59, "skia.FILEWStream.isValid"]], "newline() (filewstream method)": [[59, "skia.FILEWStream.newline"]], "write() (filewstream method)": [[59, "skia.FILEWStream.write"]], "write16() (filewstream method)": [[59, "skia.FILEWStream.write16"]], "write32() (filewstream method)": [[59, "skia.FILEWStream.write32"]], "write8() (filewstream method)": [[59, "skia.FILEWStream.write8"]], "writebigdecastext() (filewstream method)": [[59, "skia.FILEWStream.writeBigDecAsText"]], "writebool() (filewstream method)": [[59, "skia.FILEWStream.writeBool"]], "writedecastext() (filewstream method)": [[59, "skia.FILEWStream.writeDecAsText"]], "writehexastext() (filewstream method)": [[59, "skia.FILEWStream.writeHexAsText"]], "writepackeduint() (filewstream method)": [[59, "skia.FILEWStream.writePackedUInt"]], "writescalar() (filewstream method)": [[59, "skia.FILEWStream.writeScalar"]], "writescalarastext() (filewstream method)": [[59, "skia.FILEWStream.writeScalarAsText"]], "writestream() (filewstream method)": [[59, "skia.FILEWStream.writeStream"]], "writetext() (filewstream method)": [[59, "skia.FILEWStream.writeText"]], "filtermode (class in skia)": [[60, "skia.FilterMode"]], "__init__() (filtermode method)": [[60, "skia.FilterMode.__init__"]], "klinear (filtermode attribute)": [[60, "skia.FilterMode.kLinear"]], "knearest (filtermode attribute)": [[60, "skia.FilterMode.kNearest"]], "name (filtermode attribute)": [[60, "skia.FilterMode.name"]], "value (filtermode attribute)": [[60, "skia.FilterMode.value"]], "deserialize() (flattanable static method)": [[61, "skia.Flattanable.Deserialize"]], "flattanable (class in skia)": [[61, "skia.Flattanable"]], "__init__() (flattanable method)": [[61, "skia.Flattanable.__init__"]], "getflattenabletype() (flattanable method)": [[61, "skia.Flattanable.getFlattenableType"]], "gettypename() (flattanable method)": [[61, "skia.Flattanable.getTypeName"]], "kcolorfilter_type (flattanable attribute)": [[61, "skia.Flattanable.kColorFilter_Type"]], "kdrawlooper_type (flattanable attribute)": [[61, "skia.Flattanable.kDrawLooper_Type"]], "kdrawable_type (flattanable attribute)": [[61, "skia.Flattanable.kDrawable_Type"]], "kimagefilter_type (flattanable attribute)": [[61, "skia.Flattanable.kImageFilter_Type"]], "kmaskfilter_type (flattanable attribute)": [[61, "skia.Flattanable.kMaskFilter_Type"]], "kpatheffect_type (flattanable attribute)": [[61, "skia.Flattanable.kPathEffect_Type"]], "ref() (flattanable method)": [[61, "skia.Flattanable.ref"]], "serialize() (flattanable method)": [[61, "skia.Flattanable.serialize"]], "unique() (flattanable method)": [[61, "skia.Flattanable.unique"]], "unref() (flattanable method)": [[61, "skia.Flattanable.unref"]], "type (class in skia.flattanable)": [[62, "skia.Flattanable.Type"]], "font (class in skia)": [[63, "skia.Font"]], "__init__() (font method)": [[63, "skia.Font.__init__"]], "counttext() (font method)": [[63, "skia.Font.countText"]], "dump() (font method)": [[63, "skia.Font.dump"]], "getbounds() (font method)": [[63, "skia.Font.getBounds"]], "getedging() (font method)": [[63, "skia.Font.getEdging"]], "gethinting() (font method)": [[63, "skia.Font.getHinting"]], "getmetrics() (font method)": [[63, "skia.Font.getMetrics"]], "getpath() (font method)": [[63, "skia.Font.getPath"]], "getpaths() (font method)": [[63, "skia.Font.getPaths"]], "getpos() (font method)": [[63, "skia.Font.getPos"]], "getscalex() (font method)": [[63, "skia.Font.getScaleX"]], "getsize() (font method)": [[63, "skia.Font.getSize"]], "getskewx() (font method)": [[63, "skia.Font.getSkewX"]], "getspacing() (font method)": [[63, "skia.Font.getSpacing"]], "gettypeface() (font method)": [[63, "skia.Font.getTypeface"]], "getwidths() (font method)": [[63, "skia.Font.getWidths"]], "getwidthsbounds() (font method)": [[63, "skia.Font.getWidthsBounds"]], "getxpos() (font method)": [[63, "skia.Font.getXPos"]], "isbaselinesnap() (font method)": [[63, "skia.Font.isBaselineSnap"]], "isembeddedbitmaps() (font method)": [[63, "skia.Font.isEmbeddedBitmaps"]], "isembolden() (font method)": [[63, "skia.Font.isEmbolden"]], "isforceautohinting() (font method)": [[63, "skia.Font.isForceAutoHinting"]], "islinearmetrics() (font method)": [[63, "skia.Font.isLinearMetrics"]], "issubpixel() (font method)": [[63, "skia.Font.isSubpixel"]], "kalias (font attribute)": [[63, "skia.Font.kAlias"]], "kantialias (font attribute)": [[63, "skia.Font.kAntiAlias"]], "ksubpixelantialias (font attribute)": [[63, "skia.Font.kSubpixelAntiAlias"]], "makewithsize() (font method)": [[63, "skia.Font.makeWithSize"]], "measuretext() (font method)": [[63, "skia.Font.measureText"]], "reftypeface() (font method)": [[63, "skia.Font.refTypeface"]], "setbaselinesnap() (font method)": [[63, "skia.Font.setBaselineSnap"]], "setedging() (font method)": [[63, "skia.Font.setEdging"]], "setembeddedbitmaps() (font method)": [[63, "skia.Font.setEmbeddedBitmaps"]], "setembolden() (font method)": [[63, "skia.Font.setEmbolden"]], "setforceautohinting() (font method)": [[63, "skia.Font.setForceAutoHinting"]], "sethinting() (font method)": [[63, "skia.Font.setHinting"]], "setlinearmetrics() (font method)": [[63, "skia.Font.setLinearMetrics"]], "setscalex() (font method)": [[63, "skia.Font.setScaleX"]], "setsize() (font method)": [[63, "skia.Font.setSize"]], "setskewx() (font method)": [[63, "skia.Font.setSkewX"]], "setsubpixel() (font method)": [[63, "skia.Font.setSubpixel"]], "settypeface() (font method)": [[63, "skia.Font.setTypeface"]], "texttoglyphs() (font method)": [[63, "skia.Font.textToGlyphs"]], "unichartoglyph() (font method)": [[63, "skia.Font.unicharToGlyph"]], "unicharstoglyphs() (font method)": [[63, "skia.Font.unicharsToGlyphs"]], "edging (class in skia.font)": [[64, "skia.Font.Edging"]], "__init__() (edging method)": [[64, "skia.Font.Edging.__init__"]], "kalias (edging attribute)": [[64, "skia.Font.Edging.kAlias"]], "kantialias (edging attribute)": [[64, "skia.Font.Edging.kAntiAlias"]], "ksubpixelantialias (edging attribute)": [[64, "skia.Font.Edging.kSubpixelAntiAlias"]], "name (edging attribute)": [[64, "skia.Font.Edging.name"]], "value (edging attribute)": [[64, "skia.Font.Edging.value"]], "fontarguments (class in skia)": [[65, "skia.FontArguments"]], "__init__() (fontarguments method)": [[65, "skia.FontArguments.__init__"]], "getcollectionindex() (fontarguments method)": [[65, "skia.FontArguments.getCollectionIndex"]], "getvariationdesignposition() (fontarguments method)": [[65, "skia.FontArguments.getVariationDesignPosition"]], "setcollectionindex() (fontarguments method)": [[65, "skia.FontArguments.setCollectionIndex"]], "setvariationdesignposition() (fontarguments method)": [[65, "skia.FontArguments.setVariationDesignPosition"]], "variationposition (class in skia.fontarguments)": [[66, "skia.FontArguments.VariationPosition"]], "__init__() (variationposition method)": [[66, "skia.FontArguments.VariationPosition.__init__"]], "coordinatecount (variationposition attribute)": [[66, "skia.FontArguments.VariationPosition.coordinateCount"]], "coordinates (variationposition attribute)": [[66, "skia.FontArguments.VariationPosition.coordinates"]], "coordinate (class in skia.fontarguments.variationposition)": [[67, "skia.FontArguments.VariationPosition.Coordinate"]], "__init__() (coordinate method)": [[67, "skia.FontArguments.VariationPosition.Coordinate.__init__"]], "axis (coordinate attribute)": [[67, "skia.FontArguments.VariationPosition.Coordinate.axis"]], "value (coordinate attribute)": [[67, "skia.FontArguments.VariationPosition.Coordinate.value"]], "coordinates (class in skia.fontarguments.variationposition)": [[68, "skia.FontArguments.VariationPosition.Coordinates"]], "__init__() (coordinates method)": [[68, "skia.FontArguments.VariationPosition.Coordinates.__init__"]], "append() (coordinates method)": [[68, "skia.FontArguments.VariationPosition.Coordinates.append"]], "clear() (coordinates method)": [[68, "skia.FontArguments.VariationPosition.Coordinates.clear"]], "extend() (coordinates method)": [[68, "skia.FontArguments.VariationPosition.Coordinates.extend"]], "insert() (coordinates method)": [[68, "skia.FontArguments.VariationPosition.Coordinates.insert"]], "pop() (coordinates method)": [[68, "skia.FontArguments.VariationPosition.Coordinates.pop"]], "fonthinting (class in skia)": [[69, "skia.FontHinting"]], "__init__() (fonthinting method)": [[69, "skia.FontHinting.__init__"]], "kfull (fonthinting attribute)": [[69, "skia.FontHinting.kFull"]], "knone (fonthinting attribute)": [[69, "skia.FontHinting.kNone"]], "knormal (fonthinting attribute)": [[69, "skia.FontHinting.kNormal"]], "kslight (fonthinting attribute)": [[69, "skia.FontHinting.kSlight"]], "name (fonthinting attribute)": [[69, "skia.FontHinting.name"]], "value (fonthinting attribute)": [[69, "skia.FontHinting.value"]], "fontmetrics (class in skia)": [[70, "skia.FontMetrics"]], "__init__() (fontmetrics method)": [[70, "skia.FontMetrics.__init__"]], "fascent (fontmetrics attribute)": [[70, "skia.FontMetrics.fAscent"]], "favgcharwidth (fontmetrics attribute)": [[70, "skia.FontMetrics.fAvgCharWidth"]], "fbottom (fontmetrics attribute)": [[70, "skia.FontMetrics.fBottom"]], "fcapheight (fontmetrics attribute)": [[70, "skia.FontMetrics.fCapHeight"]], "fdescent (fontmetrics attribute)": [[70, "skia.FontMetrics.fDescent"]], "fflags (fontmetrics attribute)": [[70, "skia.FontMetrics.fFlags"]], "fleading (fontmetrics attribute)": [[70, "skia.FontMetrics.fLeading"]], "fmaxcharwidth (fontmetrics attribute)": [[70, "skia.FontMetrics.fMaxCharWidth"]], "fstrikeoutposition (fontmetrics attribute)": [[70, "skia.FontMetrics.fStrikeoutPosition"]], "fstrikeoutthickness (fontmetrics attribute)": [[70, "skia.FontMetrics.fStrikeoutThickness"]], "ftop (fontmetrics attribute)": [[70, "skia.FontMetrics.fTop"]], "funderlineposition (fontmetrics attribute)": [[70, "skia.FontMetrics.fUnderlinePosition"]], "funderlinethickness (fontmetrics attribute)": [[70, "skia.FontMetrics.fUnderlineThickness"]], "fxheight (fontmetrics attribute)": [[70, "skia.FontMetrics.fXHeight"]], "fxmax (fontmetrics attribute)": [[70, "skia.FontMetrics.fXMax"]], "fxmin (fontmetrics attribute)": [[70, "skia.FontMetrics.fXMin"]], "hasstrikeoutposition() (fontmetrics method)": [[70, "skia.FontMetrics.hasStrikeoutPosition"]], "hasstrikeoutthickness() (fontmetrics method)": [[70, "skia.FontMetrics.hasStrikeoutThickness"]], "hasunderlineposition() (fontmetrics method)": [[70, "skia.FontMetrics.hasUnderlinePosition"]], "hasunderlinethickness() (fontmetrics method)": [[70, "skia.FontMetrics.hasUnderlineThickness"]], "kstrikeoutpositionisvalid_flag (fontmetrics attribute)": [[70, "skia.FontMetrics.kStrikeoutPositionIsValid_Flag"]], "kstrikeoutthicknessisvalid_flag (fontmetrics attribute)": [[70, "skia.FontMetrics.kStrikeoutThicknessIsValid_Flag"]], "kunderlinepositionisvalid_flag (fontmetrics attribute)": [[70, "skia.FontMetrics.kUnderlinePositionIsValid_Flag"]], "kunderlinethicknessisvalid_flag (fontmetrics attribute)": [[70, "skia.FontMetrics.kUnderlineThicknessIsValid_Flag"]], "fontmetricsflags (class in skia.fontmetrics)": [[71, "skia.FontMetrics.FontMetricsFlags"]], "__init__() (fontmetricsflags method)": [[71, "skia.FontMetrics.FontMetricsFlags.__init__"]], "kstrikeoutpositionisvalid_flag (fontmetricsflags attribute)": [[71, "skia.FontMetrics.FontMetricsFlags.kStrikeoutPositionIsValid_Flag"]], "kstrikeoutthicknessisvalid_flag (fontmetricsflags attribute)": [[71, "skia.FontMetrics.FontMetricsFlags.kStrikeoutThicknessIsValid_Flag"]], "kunderlinepositionisvalid_flag (fontmetricsflags attribute)": [[71, "skia.FontMetrics.FontMetricsFlags.kUnderlinePositionIsValid_Flag"]], "kunderlinethicknessisvalid_flag (fontmetricsflags attribute)": [[71, "skia.FontMetrics.FontMetricsFlags.kUnderlineThicknessIsValid_Flag"]], "name (fontmetricsflags attribute)": [[71, "skia.FontMetrics.FontMetricsFlags.name"]], "value (fontmetricsflags attribute)": [[71, "skia.FontMetrics.FontMetricsFlags.value"]], "fontmgr (class in skia)": [[72, "skia.FontMgr"]], "new_custom_empty() (fontmgr static method)": [[72, "skia.FontMgr.New_Custom_Empty"]], "refdefault() (fontmgr static method)": [[72, "skia.FontMgr.RefDefault"]], "__init__() (fontmgr method)": [[72, "skia.FontMgr.__init__"]], "countfamilies() (fontmgr method)": [[72, "skia.FontMgr.countFamilies"]], "createstyleset() (fontmgr method)": [[72, "skia.FontMgr.createStyleSet"]], "getfamilyname() (fontmgr method)": [[72, "skia.FontMgr.getFamilyName"]], "legacymaketypeface() (fontmgr method)": [[72, "skia.FontMgr.legacyMakeTypeface"]], "makefromdata() (fontmgr method)": [[72, "skia.FontMgr.makeFromData"]], "makefromfile() (fontmgr method)": [[72, "skia.FontMgr.makeFromFile"]], "matchfamily() (fontmgr method)": [[72, "skia.FontMgr.matchFamily"]], "matchfamilystyle() (fontmgr method)": [[72, "skia.FontMgr.matchFamilyStyle"]], "matchfamilystylecharacter() (fontmgr method)": [[72, "skia.FontMgr.matchFamilyStyleCharacter"]], "ref() (fontmgr method)": [[72, "skia.FontMgr.ref"]], "unique() (fontmgr method)": [[72, "skia.FontMgr.unique"]], "unref() (fontmgr method)": [[72, "skia.FontMgr.unref"]], "fontparameters (class in skia)": [[73, "skia.FontParameters"]], "__init__() (fontparameters method)": [[73, "skia.FontParameters.__init__"]], "variation (class in skia.fontparameters)": [[74, "skia.FontParameters.Variation"]], "__init__() (variation method)": [[74, "skia.FontParameters.Variation.__init__"]], "axis (class in skia.fontparameters.variation)": [[75, "skia.FontParameters.Variation.Axis"]], "__init__() (axis method)": [[75, "skia.FontParameters.Variation.Axis.__init__"]], "def (axis attribute)": [[75, "skia.FontParameters.Variation.Axis.def"]], "ishidden() (axis method)": [[75, "skia.FontParameters.Variation.Axis.isHidden"]], "max (axis attribute)": [[75, "skia.FontParameters.Variation.Axis.max"]], "min (axis attribute)": [[75, "skia.FontParameters.Variation.Axis.min"]], "sethidden() (axis method)": [[75, "skia.FontParameters.Variation.Axis.setHidden"]], "tag (axis attribute)": [[75, "skia.FontParameters.Variation.Axis.tag"]], "bold() (fontstyle static method)": [[76, "skia.FontStyle.Bold"]], "bolditalic() (fontstyle static method)": [[76, "skia.FontStyle.BoldItalic"]], "fontstyle (class in skia)": [[76, "skia.FontStyle"]], "italic() (fontstyle static method)": [[76, "skia.FontStyle.Italic"]], "normal() (fontstyle static method)": [[76, "skia.FontStyle.Normal"]], "__init__() (fontstyle method)": [[76, "skia.FontStyle.__init__"]], "kblack_weight (fontstyle attribute)": [[76, "skia.FontStyle.kBlack_Weight"]], "kbold_weight (fontstyle attribute)": [[76, "skia.FontStyle.kBold_Weight"]], "kcondensed_width (fontstyle attribute)": [[76, "skia.FontStyle.kCondensed_Width"]], "kexpanded_width (fontstyle attribute)": [[76, "skia.FontStyle.kExpanded_Width"]], "kextrablack_weight (fontstyle attribute)": [[76, "skia.FontStyle.kExtraBlack_Weight"]], "kextrabold_weight (fontstyle attribute)": [[76, "skia.FontStyle.kExtraBold_Weight"]], "kextracondensed_width (fontstyle attribute)": [[76, "skia.FontStyle.kExtraCondensed_Width"]], "kextraexpanded_width (fontstyle attribute)": [[76, "skia.FontStyle.kExtraExpanded_Width"]], "kextralight_weight (fontstyle attribute)": [[76, "skia.FontStyle.kExtraLight_Weight"]], "kinvisible_weight (fontstyle attribute)": [[76, "skia.FontStyle.kInvisible_Weight"]], "kitalic_slant (fontstyle attribute)": [[76, "skia.FontStyle.kItalic_Slant"]], "klight_weight (fontstyle attribute)": [[76, "skia.FontStyle.kLight_Weight"]], "kmedium_weight (fontstyle attribute)": [[76, "skia.FontStyle.kMedium_Weight"]], "knormal_weight (fontstyle attribute)": [[76, "skia.FontStyle.kNormal_Weight"]], "knormal_width (fontstyle attribute)": [[76, "skia.FontStyle.kNormal_Width"]], "koblique_slant (fontstyle attribute)": [[76, "skia.FontStyle.kOblique_Slant"]], "ksemibold_weight (fontstyle attribute)": [[76, "skia.FontStyle.kSemiBold_Weight"]], "ksemicondensed_width (fontstyle attribute)": [[76, "skia.FontStyle.kSemiCondensed_Width"]], "ksemiexpanded_width (fontstyle attribute)": [[76, "skia.FontStyle.kSemiExpanded_Width"]], "kthin_weight (fontstyle attribute)": [[76, "skia.FontStyle.kThin_Weight"]], "kultracondensed_width (fontstyle attribute)": [[76, "skia.FontStyle.kUltraCondensed_Width"]], "kultraexpanded_width (fontstyle attribute)": [[76, "skia.FontStyle.kUltraExpanded_Width"]], "kupright_slant (fontstyle attribute)": [[76, "skia.FontStyle.kUpright_Slant"]], "slant() (fontstyle method)": [[76, "skia.FontStyle.slant"]], "weight() (fontstyle method)": [[76, "skia.FontStyle.weight"]], "width() (fontstyle method)": [[76, "skia.FontStyle.width"]], "slant (class in skia.fontstyle)": [[77, "skia.FontStyle.Slant"]], "__init__() (slant method)": [[77, "skia.FontStyle.Slant.__init__"]], "kitalic_slant (slant attribute)": [[77, "skia.FontStyle.Slant.kItalic_Slant"]], "koblique_slant (slant attribute)": [[77, "skia.FontStyle.Slant.kOblique_Slant"]], "kupright_slant (slant attribute)": [[77, "skia.FontStyle.Slant.kUpright_Slant"]], "name (slant attribute)": [[77, "skia.FontStyle.Slant.name"]], "value (slant attribute)": [[77, "skia.FontStyle.Slant.value"]], "weight (class in skia.fontstyle)": [[78, "skia.FontStyle.Weight"]], "__init__() (weight method)": [[78, "skia.FontStyle.Weight.__init__"]], "kblack_weight (weight attribute)": [[78, "skia.FontStyle.Weight.kBlack_Weight"]], "kbold_weight (weight attribute)": [[78, "skia.FontStyle.Weight.kBold_Weight"]], "kextrablack_weight (weight attribute)": [[78, "skia.FontStyle.Weight.kExtraBlack_Weight"]], "kextrabold_weight (weight attribute)": [[78, "skia.FontStyle.Weight.kExtraBold_Weight"]], "kextralight_weight (weight attribute)": [[78, "skia.FontStyle.Weight.kExtraLight_Weight"]], "kinvisible_weight (weight attribute)": [[78, "skia.FontStyle.Weight.kInvisible_Weight"]], "klight_weight (weight attribute)": [[78, "skia.FontStyle.Weight.kLight_Weight"]], "kmedium_weight (weight attribute)": [[78, "skia.FontStyle.Weight.kMedium_Weight"]], "knormal_weight (weight attribute)": [[78, "skia.FontStyle.Weight.kNormal_Weight"]], "ksemibold_weight (weight attribute)": [[78, "skia.FontStyle.Weight.kSemiBold_Weight"]], "kthin_weight (weight attribute)": [[78, "skia.FontStyle.Weight.kThin_Weight"]], "name (weight attribute)": [[78, "skia.FontStyle.Weight.name"]], "value (weight attribute)": [[78, "skia.FontStyle.Weight.value"]], "width (class in skia.fontstyle)": [[79, "skia.FontStyle.Width"]], "__init__() (width method)": [[79, "skia.FontStyle.Width.__init__"]], "kcondensed_width (width attribute)": [[79, "skia.FontStyle.Width.kCondensed_Width"]], "kexpanded_width (width attribute)": [[79, "skia.FontStyle.Width.kExpanded_Width"]], "kextracondensed_width (width attribute)": [[79, "skia.FontStyle.Width.kExtraCondensed_Width"]], "kextraexpanded_width (width attribute)": [[79, "skia.FontStyle.Width.kExtraExpanded_Width"]], "knormal_width (width attribute)": [[79, "skia.FontStyle.Width.kNormal_Width"]], "ksemicondensed_width (width attribute)": [[79, "skia.FontStyle.Width.kSemiCondensed_Width"]], "ksemiexpanded_width (width attribute)": [[79, "skia.FontStyle.Width.kSemiExpanded_Width"]], "kultracondensed_width (width attribute)": [[79, "skia.FontStyle.Width.kUltraCondensed_Width"]], "kultraexpanded_width (width attribute)": [[79, "skia.FontStyle.Width.kUltraExpanded_Width"]], "name (width attribute)": [[79, "skia.FontStyle.Width.name"]], "value (width attribute)": [[79, "skia.FontStyle.Width.value"]], "createempty() (fontstyleset static method)": [[80, "skia.FontStyleSet.CreateEmpty"]], "fontstyleset (class in skia)": [[80, "skia.FontStyleSet"]], "__init__() (fontstyleset method)": [[80, "skia.FontStyleSet.__init__"]], "count() (fontstyleset method)": [[80, "skia.FontStyleSet.count"]], "createtypeface() (fontstyleset method)": [[80, "skia.FontStyleSet.createTypeface"]], "getstyle() (fontstyleset method)": [[80, "skia.FontStyleSet.getStyle"]], "matchstyle() (fontstyleset method)": [[80, "skia.FontStyleSet.matchStyle"]], "ref() (fontstyleset method)": [[80, "skia.FontStyleSet.ref"]], "unique() (fontstyleset method)": [[80, "skia.FontStyleSet.unique"]], "unref() (fontstyleset method)": [[80, "skia.FontStyleSet.unref"]], "grbackendapi (class in skia)": [[81, "skia.GrBackendApi"]], "__init__() (grbackendapi method)": [[81, "skia.GrBackendApi.__init__"]], "kdirect3d (grbackendapi attribute)": [[81, "skia.GrBackendApi.kDirect3D"]], "kmetal (grbackendapi attribute)": [[81, "skia.GrBackendApi.kMetal"]], "kmock (grbackendapi attribute)": [[81, "skia.GrBackendApi.kMock"]], "kopengl (grbackendapi attribute)": [[81, "skia.GrBackendApi.kOpenGL"]], "kopengl_grbackend (grbackendapi attribute)": [[81, "skia.GrBackendApi.kOpenGL_GrBackend"]], "kvulkan (grbackendapi attribute)": [[81, "skia.GrBackendApi.kVulkan"]], "name (grbackendapi attribute)": [[81, "skia.GrBackendApi.name"]], "value (grbackendapi attribute)": [[81, "skia.GrBackendApi.value"]], "grbackendformat (class in skia)": [[82, "skia.GrBackendFormat"]], "makegl() (grbackendformat static method)": [[82, "skia.GrBackendFormat.MakeGL"]], "makemock() (grbackendformat static method)": [[82, "skia.GrBackendFormat.MakeMock"]], "makevk() (grbackendformat static method)": [[82, "skia.GrBackendFormat.MakeVk"]], "__init__() (grbackendformat method)": [[82, "skia.GrBackendFormat.__init__"]], "asglformat() (grbackendformat method)": [[82, "skia.GrBackendFormat.asGLFormat"]], "asmockcolortype() (grbackendformat method)": [[82, "skia.GrBackendFormat.asMockColorType"]], "asmockcompressiontype() (grbackendformat method)": [[82, "skia.GrBackendFormat.asMockCompressionType"]], "asvkformat() (grbackendformat method)": [[82, "skia.GrBackendFormat.asVkFormat"]], "backend() (grbackendformat method)": [[82, "skia.GrBackendFormat.backend"]], "channelmask() (grbackendformat method)": [[82, "skia.GrBackendFormat.channelMask"]], "getvkycbcrconversioninfo() (grbackendformat method)": [[82, "skia.GrBackendFormat.getVkYcbcrConversionInfo"]], "isvalid() (grbackendformat method)": [[82, "skia.GrBackendFormat.isValid"]], "maketexture2d() (grbackendformat method)": [[82, "skia.GrBackendFormat.makeTexture2D"]], "texturetype() (grbackendformat method)": [[82, "skia.GrBackendFormat.textureType"]], "grbackendrendertarget (class in skia)": [[83, "skia.GrBackendRenderTarget"]], "__init__() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.__init__"]], "backend() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.backend"]], "dimensions() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.dimensions"]], "getbackendformat() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.getBackendFormat"]], "getglframebufferinfo() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.getGLFramebufferInfo"]], "getmockrendertargetinfo() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.getMockRenderTargetInfo"]], "getvkimageinfo() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.getVkImageInfo"]], "height() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.height"]], "isframebufferonly() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.isFramebufferOnly"]], "isprotected() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.isProtected"]], "isvalid() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.isValid"]], "samplecnt() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.sampleCnt"]], "setvkimagelayout() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.setVkImageLayout"]], "stencilbits() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.stencilBits"]], "width() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.width"]], "grbackendsemaphore (class in skia)": [[84, "skia.GrBackendSemaphore"]], "__init__() (grbackendsemaphore method)": [[84, "skia.GrBackendSemaphore.__init__"]], "initvulkan() (grbackendsemaphore method)": [[84, "skia.GrBackendSemaphore.initVulkan"]], "isinitialized() (grbackendsemaphore method)": [[84, "skia.GrBackendSemaphore.isInitialized"]], "vksemaphore() (grbackendsemaphore method)": [[84, "skia.GrBackendSemaphore.vkSemaphore"]], "grbackendtexture (class in skia)": [[85, "skia.GrBackendTexture"]], "__init__() (grbackendtexture method)": [[85, "skia.GrBackendTexture.__init__"]], "backend() (grbackendtexture method)": [[85, "skia.GrBackendTexture.backend"]], "dimensions() (grbackendtexture method)": [[85, "skia.GrBackendTexture.dimensions"]], "getbackendformat() (grbackendtexture method)": [[85, "skia.GrBackendTexture.getBackendFormat"]], "getgltextureinfo() (grbackendtexture method)": [[85, "skia.GrBackendTexture.getGLTextureInfo"]], "getmocktextureinfo() (grbackendtexture method)": [[85, "skia.GrBackendTexture.getMockTextureInfo"]], "getvkimageinfo() (grbackendtexture method)": [[85, "skia.GrBackendTexture.getVkImageInfo"]], "gltextureparametersmodified() (grbackendtexture method)": [[85, "skia.GrBackendTexture.glTextureParametersModified"]], "hasmipmaps() (grbackendtexture method)": [[85, "skia.GrBackendTexture.hasMipmaps"]], "height() (grbackendtexture method)": [[85, "skia.GrBackendTexture.height"]], "isprotected() (grbackendtexture method)": [[85, "skia.GrBackendTexture.isProtected"]], "issametexture() (grbackendtexture method)": [[85, "skia.GrBackendTexture.isSameTexture"]], "isvalid() (grbackendtexture method)": [[85, "skia.GrBackendTexture.isValid"]], "setmutablestate() (grbackendtexture method)": [[85, "skia.GrBackendTexture.setMutableState"]], "setvkimagelayout() (grbackendtexture method)": [[85, "skia.GrBackendTexture.setVkImageLayout"]], "width() (grbackendtexture method)": [[85, "skia.GrBackendTexture.width"]], "grcolortype (class in skia)": [[86, "skia.GrColorType"]], "__init__() (grcolortype method)": [[86, "skia.GrColorType.__init__"]], "kabgr_4444 (grcolortype attribute)": [[86, "skia.GrColorType.kABGR_4444"]], "kalpha_16 (grcolortype attribute)": [[86, "skia.GrColorType.kAlpha_16"]], "kalpha_8 (grcolortype attribute)": [[86, "skia.GrColorType.kAlpha_8"]], "kalpha_8xxx (grcolortype attribute)": [[86, "skia.GrColorType.kAlpha_8xxx"]], "kalpha_f16 (grcolortype attribute)": [[86, "skia.GrColorType.kAlpha_F16"]], "kalpha_f32xxx (grcolortype attribute)": [[86, "skia.GrColorType.kAlpha_F32xxx"]], "kbgra_8888 (grcolortype attribute)": [[86, "skia.GrColorType.kBGRA_8888"]], "kbgr_565 (grcolortype attribute)": [[86, "skia.GrColorType.kBGR_565"]], "kgray_8 (grcolortype attribute)": [[86, "skia.GrColorType.kGray_8"]], "kgray_8xxx (grcolortype attribute)": [[86, "skia.GrColorType.kGray_8xxx"]], "kgray_f16 (grcolortype attribute)": [[86, "skia.GrColorType.kGray_F16"]], "klast (grcolortype attribute)": [[86, "skia.GrColorType.kLast"]], "krgba_1010102 (grcolortype attribute)": [[86, "skia.GrColorType.kRGBA_1010102"]], "krgba_16161616 (grcolortype attribute)": [[86, "skia.GrColorType.kRGBA_16161616"]], "krgba_8888 (grcolortype attribute)": [[86, "skia.GrColorType.kRGBA_8888"]], "krgba_8888_srgb (grcolortype attribute)": [[86, "skia.GrColorType.kRGBA_8888_SRGB"]], "krgba_f16 (grcolortype attribute)": [[86, "skia.GrColorType.kRGBA_F16"]], "krgba_f16_clamped (grcolortype attribute)": [[86, "skia.GrColorType.kRGBA_F16_Clamped"]], "krgba_f32 (grcolortype attribute)": [[86, "skia.GrColorType.kRGBA_F32"]], "krgb_888 (grcolortype attribute)": [[86, "skia.GrColorType.kRGB_888"]], "krgb_888x (grcolortype attribute)": [[86, "skia.GrColorType.kRGB_888x"]], "krg_1616 (grcolortype attribute)": [[86, "skia.GrColorType.kRG_1616"]], "krg_88 (grcolortype attribute)": [[86, "skia.GrColorType.kRG_88"]], "krg_f16 (grcolortype attribute)": [[86, "skia.GrColorType.kRG_F16"]], "kr_16 (grcolortype attribute)": [[86, "skia.GrColorType.kR_16"]], "kr_8 (grcolortype attribute)": [[86, "skia.GrColorType.kR_8"]], "kr_f16 (grcolortype attribute)": [[86, "skia.GrColorType.kR_F16"]], "kunknown (grcolortype attribute)": [[86, "skia.GrColorType.kUnknown"]], "name (grcolortype attribute)": [[86, "skia.GrColorType.name"]], "value (grcolortype attribute)": [[86, "skia.GrColorType.value"]], "computeimagesize() (grcontext static method)": [[87, "skia.GrContext.ComputeImageSize"]], "grcontext (in module skia)": [[87, "skia.GrContext"]], "makegl() (grcontext static method)": [[87, "skia.GrContext.MakeGL"]], "makemock() (grcontext static method)": [[87, "skia.GrContext.MakeMock"]], "makevulkan() (grcontext static method)": [[87, "skia.GrContext.MakeVulkan"]], "__init__() (grcontext method)": [[87, "skia.GrContext.__init__"]], "abandoncontext() (grcontext method)": [[87, "skia.GrContext.abandonContext"]], "abandoned() (grcontext method)": [[87, "skia.GrContext.abandoned"]], "asdirectcontext() (grcontext method)": [[87, "skia.GrContext.asDirectContext"]], "backend() (grcontext method)": [[87, "skia.GrContext.backend"]], "checkasyncworkcompletion() (grcontext method)": [[87, "skia.GrContext.checkAsyncWorkCompletion"]], "colortypesupportedasimage() (grcontext method)": [[87, "skia.GrContext.colorTypeSupportedAsImage"]], "colortypesupportedassurface() (grcontext method)": [[87, "skia.GrContext.colorTypeSupportedAsSurface"]], "compressedbackendformat() (grcontext method)": [[87, "skia.GrContext.compressedBackendFormat"]], "createbackendtexture() (grcontext method)": [[87, "skia.GrContext.createBackendTexture"]], "createcompressedbackendtexture() (grcontext method)": [[87, "skia.GrContext.createCompressedBackendTexture"]], "defaultbackendformat() (grcontext method)": [[87, "skia.GrContext.defaultBackendFormat"]], "deletebackendtexture() (grcontext method)": [[87, "skia.GrContext.deleteBackendTexture"]], "flush() (grcontext method)": [[87, "skia.GrContext.flush"]], "flushandsubmit() (grcontext method)": [[87, "skia.GrContext.flushAndSubmit"]], "freegpuresources() (grcontext method)": [[87, "skia.GrContext.freeGpuResources"]], "getresourcecachelimit() (grcontext method)": [[87, "skia.GrContext.getResourceCacheLimit"]], "getresourcecachepurgeablebytes() (grcontext method)": [[87, "skia.GrContext.getResourceCachePurgeableBytes"]], "getresourcecacheusage() (grcontext method)": [[87, "skia.GrContext.getResourceCacheUsage"]], "maxrendertargetsize() (grcontext method)": [[87, "skia.GrContext.maxRenderTargetSize"]], "maxsurfacesamplecountforcolortype() (grcontext method)": [[87, "skia.GrContext.maxSurfaceSampleCountForColorType"]], "maxtexturesize() (grcontext method)": [[87, "skia.GrContext.maxTextureSize"]], "oomed() (grcontext method)": [[87, "skia.GrContext.oomed"]], "precompileshader() (grcontext method)": [[87, "skia.GrContext.precompileShader"]], "purgeresourcesnotusedinms() (grcontext method)": [[87, "skia.GrContext.purgeResourcesNotUsedInMs"]], "purgeunlockedresources() (grcontext method)": [[87, "skia.GrContext.purgeUnlockedResources"]], "ref() (grcontext method)": [[87, "skia.GrContext.ref"]], "releaseresourcesandabandoncontext() (grcontext method)": [[87, "skia.GrContext.releaseResourcesAndAbandonContext"]], "resetcontext() (grcontext method)": [[87, "skia.GrContext.resetContext"]], "resetgltexturebindings() (grcontext method)": [[87, "skia.GrContext.resetGLTextureBindings"]], "setbackendrendertargetstate() (grcontext method)": [[87, "skia.GrContext.setBackendRenderTargetState"]], "setbackendtexturestate() (grcontext method)": [[87, "skia.GrContext.setBackendTextureState"]], "setresourcecachelimit() (grcontext method)": [[87, "skia.GrContext.setResourceCacheLimit"]], "storevkpipelinecachedata() (grcontext method)": [[87, "skia.GrContext.storeVkPipelineCacheData"]], "submit() (grcontext method)": [[87, "skia.GrContext.submit"]], "supportsdistancefieldtext() (grcontext method)": [[87, "skia.GrContext.supportsDistanceFieldText"]], "threadsafeproxy() (grcontext method)": [[87, "skia.GrContext.threadSafeProxy"]], "unique() (grcontext method)": [[87, "skia.GrContext.unique"]], "unref() (grcontext method)": [[87, "skia.GrContext.unref"]], "updatebackendtexture() (grcontext method)": [[87, "skia.GrContext.updateBackendTexture"]], "wait() (grcontext method)": [[87, "skia.GrContext.wait"]], "grcontextoptions (class in skia)": [[88, "skia.GrContextOptions"]], "__init__() (grcontextoptions method)": [[88, "skia.GrContextOptions.__init__"]], "grcontext_base (class in skia)": [[89, "skia.GrContext_Base"]], "__init__() (grcontext_base method)": [[89, "skia.GrContext_Base.__init__"]], "asdirectcontext() (grcontext_base method)": [[89, "skia.GrContext_Base.asDirectContext"]], "backend() (grcontext_base method)": [[89, "skia.GrContext_Base.backend"]], "ref() (grcontext_base method)": [[89, "skia.GrContext_Base.ref"]], "threadsafeproxy() (grcontext_base method)": [[89, "skia.GrContext_Base.threadSafeProxy"]], "unique() (grcontext_base method)": [[89, "skia.GrContext_Base.unique"]], "unref() (grcontext_base method)": [[89, "skia.GrContext_Base.unref"]], "computeimagesize() (grdirectcontext static method)": [[90, "skia.GrDirectContext.ComputeImageSize"]], "grdirectcontext (class in skia)": [[90, "skia.GrDirectContext"]], "makegl() (grdirectcontext static method)": [[90, "skia.GrDirectContext.MakeGL"]], "makemock() (grdirectcontext static method)": [[90, "skia.GrDirectContext.MakeMock"]], "makevulkan() (grdirectcontext static method)": [[90, "skia.GrDirectContext.MakeVulkan"]], "__init__() (grdirectcontext method)": [[90, "skia.GrDirectContext.__init__"]], "abandoncontext() (grdirectcontext method)": [[90, "skia.GrDirectContext.abandonContext"]], "abandoned() (grdirectcontext method)": [[90, "skia.GrDirectContext.abandoned"]], "asdirectcontext() (grdirectcontext method)": [[90, "skia.GrDirectContext.asDirectContext"]], "backend() (grdirectcontext method)": [[90, "skia.GrDirectContext.backend"]], "checkasyncworkcompletion() (grdirectcontext method)": [[90, "skia.GrDirectContext.checkAsyncWorkCompletion"]], "colortypesupportedasimage() (grdirectcontext method)": [[90, "skia.GrDirectContext.colorTypeSupportedAsImage"]], "colortypesupportedassurface() (grdirectcontext method)": [[90, "skia.GrDirectContext.colorTypeSupportedAsSurface"]], "compressedbackendformat() (grdirectcontext method)": [[90, "skia.GrDirectContext.compressedBackendFormat"]], "createbackendtexture() (grdirectcontext method)": [[90, "skia.GrDirectContext.createBackendTexture"]], "createcompressedbackendtexture() (grdirectcontext method)": [[90, "skia.GrDirectContext.createCompressedBackendTexture"]], "defaultbackendformat() (grdirectcontext method)": [[90, "skia.GrDirectContext.defaultBackendFormat"]], "deletebackendtexture() (grdirectcontext method)": [[90, "skia.GrDirectContext.deleteBackendTexture"]], "flush() (grdirectcontext method)": [[90, "skia.GrDirectContext.flush"]], "flushandsubmit() (grdirectcontext method)": [[90, "skia.GrDirectContext.flushAndSubmit"]], "freegpuresources() (grdirectcontext method)": [[90, "skia.GrDirectContext.freeGpuResources"]], "getresourcecachelimit() (grdirectcontext method)": [[90, "skia.GrDirectContext.getResourceCacheLimit"]], "getresourcecachepurgeablebytes() (grdirectcontext method)": [[90, "skia.GrDirectContext.getResourceCachePurgeableBytes"]], "getresourcecacheusage() (grdirectcontext method)": [[90, "skia.GrDirectContext.getResourceCacheUsage"]], "maxrendertargetsize() (grdirectcontext method)": [[90, "skia.GrDirectContext.maxRenderTargetSize"]], "maxsurfacesamplecountforcolortype() (grdirectcontext method)": [[90, "skia.GrDirectContext.maxSurfaceSampleCountForColorType"]], "maxtexturesize() (grdirectcontext method)": [[90, "skia.GrDirectContext.maxTextureSize"]], "oomed() (grdirectcontext method)": [[90, "skia.GrDirectContext.oomed"]], "precompileshader() (grdirectcontext method)": [[90, "skia.GrDirectContext.precompileShader"]], "purgeresourcesnotusedinms() (grdirectcontext method)": [[90, "skia.GrDirectContext.purgeResourcesNotUsedInMs"]], "purgeunlockedresources() (grdirectcontext method)": [[90, "skia.GrDirectContext.purgeUnlockedResources"]], "ref() (grdirectcontext method)": [[90, "skia.GrDirectContext.ref"]], "releaseresourcesandabandoncontext() (grdirectcontext method)": [[90, "skia.GrDirectContext.releaseResourcesAndAbandonContext"]], "resetcontext() (grdirectcontext method)": [[90, "skia.GrDirectContext.resetContext"]], "resetgltexturebindings() (grdirectcontext method)": [[90, "skia.GrDirectContext.resetGLTextureBindings"]], "setbackendrendertargetstate() (grdirectcontext method)": [[90, "skia.GrDirectContext.setBackendRenderTargetState"]], "setbackendtexturestate() (grdirectcontext method)": [[90, "skia.GrDirectContext.setBackendTextureState"]], "setresourcecachelimit() (grdirectcontext method)": [[90, "skia.GrDirectContext.setResourceCacheLimit"]], "storevkpipelinecachedata() (grdirectcontext method)": [[90, "skia.GrDirectContext.storeVkPipelineCacheData"]], "submit() (grdirectcontext method)": [[90, "skia.GrDirectContext.submit"]], "supportsdistancefieldtext() (grdirectcontext method)": [[90, "skia.GrDirectContext.supportsDistanceFieldText"]], "threadsafeproxy() (grdirectcontext method)": [[90, "skia.GrDirectContext.threadSafeProxy"]], "unique() (grdirectcontext method)": [[90, "skia.GrDirectContext.unique"]], "unref() (grdirectcontext method)": [[90, "skia.GrDirectContext.unref"]], "updatebackendtexture() (grdirectcontext method)": [[90, "skia.GrDirectContext.updateBackendTexture"]], "wait() (grdirectcontext method)": [[90, "skia.GrDirectContext.wait"]], "grflushinfo (class in skia)": [[91, "skia.GrFlushInfo"]], "__init__() (grflushinfo method)": [[91, "skia.GrFlushInfo.__init__"]], "fnumsemaphores (grflushinfo attribute)": [[91, "skia.GrFlushInfo.fNumSemaphores"]], "semaphores (grflushinfo attribute)": [[91, "skia.GrFlushInfo.semaphores"]], "grglbackendstate (class in skia)": [[92, "skia.GrGLBackendState"]], "__init__() (grglbackendstate method)": [[92, "skia.GrGLBackendState.__init__"]], "kall_grglbackendstate (grglbackendstate attribute)": [[92, "skia.GrGLBackendState.kALL_GrGLBackendState"]], "kblend_grglbackendstate (grglbackendstate attribute)": [[92, "skia.GrGLBackendState.kBlend_GrGLBackendState"]], "kfixedfunction_grglbackendstate (grglbackendstate attribute)": [[92, "skia.GrGLBackendState.kFixedFunction_GrGLBackendState"]], "kmsaaenable_grglbackendstate (grglbackendstate attribute)": [[92, "skia.GrGLBackendState.kMSAAEnable_GrGLBackendState"]], "kmisc_grglbackendstate (grglbackendstate attribute)": [[92, "skia.GrGLBackendState.kMisc_GrGLBackendState"]], "kpixelstore_grglbackendstate (grglbackendstate attribute)": [[92, "skia.GrGLBackendState.kPixelStore_GrGLBackendState"]], "kprogram_grglbackendstate (grglbackendstate attribute)": [[92, "skia.GrGLBackendState.kProgram_GrGLBackendState"]], "krendertarget_grglbackendstate (grglbackendstate attribute)": [[92, "skia.GrGLBackendState.kRenderTarget_GrGLBackendState"]], "kstencil_grglbackendstate (grglbackendstate attribute)": [[92, "skia.GrGLBackendState.kStencil_GrGLBackendState"]], "ktexturebinding_grglbackendstate (grglbackendstate attribute)": [[92, "skia.GrGLBackendState.kTextureBinding_GrGLBackendState"]], "kvertex_grglbackendstate (grglbackendstate attribute)": [[92, "skia.GrGLBackendState.kVertex_GrGLBackendState"]], "kview_grglbackendstate (grglbackendstate attribute)": [[92, "skia.GrGLBackendState.kView_GrGLBackendState"]], "name (grglbackendstate attribute)": [[92, "skia.GrGLBackendState.name"]], "value (grglbackendstate attribute)": [[92, "skia.GrGLBackendState.value"]], "grglformat (class in skia)": [[93, "skia.GrGLFormat"]], "__init__() (grglformat method)": [[93, "skia.GrGLFormat.__init__"]], "kalpha8 (grglformat attribute)": [[93, "skia.GrGLFormat.kALPHA8"]], "kbgra8 (grglformat attribute)": [[93, "skia.GrGLFormat.kBGRA8"]], "kcompressed_etc1_rgb8 (grglformat attribute)": [[93, "skia.GrGLFormat.kCOMPRESSED_ETC1_RGB8"]], "kcompressed_rgb8_bc1 (grglformat attribute)": [[93, "skia.GrGLFormat.kCOMPRESSED_RGB8_BC1"]], "kcompressed_rgb8_etc2 (grglformat attribute)": [[93, "skia.GrGLFormat.kCOMPRESSED_RGB8_ETC2"]], "kcompressed_rgba8_bc1 (grglformat attribute)": [[93, "skia.GrGLFormat.kCOMPRESSED_RGBA8_BC1"]], "kluminance16f (grglformat attribute)": [[93, "skia.GrGLFormat.kLUMINANCE16F"]], "kluminance8 (grglformat attribute)": [[93, "skia.GrGLFormat.kLUMINANCE8"]], "klast (grglformat attribute)": [[93, "skia.GrGLFormat.kLast"]], "kr16 (grglformat attribute)": [[93, "skia.GrGLFormat.kR16"]], "kr16f (grglformat attribute)": [[93, "skia.GrGLFormat.kR16F"]], "kr8 (grglformat attribute)": [[93, "skia.GrGLFormat.kR8"]], "krg16 (grglformat attribute)": [[93, "skia.GrGLFormat.kRG16"]], "krg16f (grglformat attribute)": [[93, "skia.GrGLFormat.kRG16F"]], "krg8 (grglformat attribute)": [[93, "skia.GrGLFormat.kRG8"]], "krgb10_a2 (grglformat attribute)": [[93, "skia.GrGLFormat.kRGB10_A2"]], "krgb565 (grglformat attribute)": [[93, "skia.GrGLFormat.kRGB565"]], "krgb8 (grglformat attribute)": [[93, "skia.GrGLFormat.kRGB8"]], "krgba16 (grglformat attribute)": [[93, "skia.GrGLFormat.kRGBA16"]], "krgba16f (grglformat attribute)": [[93, "skia.GrGLFormat.kRGBA16F"]], "krgba4 (grglformat attribute)": [[93, "skia.GrGLFormat.kRGBA4"]], "krgba8 (grglformat attribute)": [[93, "skia.GrGLFormat.kRGBA8"]], "ksrgb8_alpha8 (grglformat attribute)": [[93, "skia.GrGLFormat.kSRGB8_ALPHA8"]], "kunknown (grglformat attribute)": [[93, "skia.GrGLFormat.kUnknown"]], "name (grglformat attribute)": [[93, "skia.GrGLFormat.name"]], "value (grglformat attribute)": [[93, "skia.GrGLFormat.value"]], "grglframebufferinfo (class in skia)": [[94, "skia.GrGLFramebufferInfo"]], "__init__() (grglframebufferinfo method)": [[94, "skia.GrGLFramebufferInfo.__init__"]], "ffboid (grglframebufferinfo attribute)": [[94, "skia.GrGLFramebufferInfo.fFBOID"]], "fformat (grglframebufferinfo attribute)": [[94, "skia.GrGLFramebufferInfo.fFormat"]], "grglinterface (class in skia)": [[95, "skia.GrGLInterface"]], "__init__() (grglinterface method)": [[95, "skia.GrGLInterface.__init__"]], "ref() (grglinterface method)": [[95, "skia.GrGLInterface.ref"]], "unique() (grglinterface method)": [[95, "skia.GrGLInterface.unique"]], "unref() (grglinterface method)": [[95, "skia.GrGLInterface.unref"]], "grgltextureinfo (class in skia)": [[96, "skia.GrGLTextureInfo"]], "__init__() (grgltextureinfo method)": [[96, "skia.GrGLTextureInfo.__init__"]], "fformat (grgltextureinfo attribute)": [[96, "skia.GrGLTextureInfo.fFormat"]], "fid (grgltextureinfo attribute)": [[96, "skia.GrGLTextureInfo.fID"]], "ftarget (grgltextureinfo attribute)": [[96, "skia.GrGLTextureInfo.fTarget"]], "grimagecontext (class in skia)": [[97, "skia.GrImageContext"]], "__init__() (grimagecontext method)": [[97, "skia.GrImageContext.__init__"]], "asdirectcontext() (grimagecontext method)": [[97, "skia.GrImageContext.asDirectContext"]], "backend() (grimagecontext method)": [[97, "skia.GrImageContext.backend"]], "ref() (grimagecontext method)": [[97, "skia.GrImageContext.ref"]], "threadsafeproxy() (grimagecontext method)": [[97, "skia.GrImageContext.threadSafeProxy"]], "unique() (grimagecontext method)": [[97, "skia.GrImageContext.unique"]], "unref() (grimagecontext method)": [[97, "skia.GrImageContext.unref"]], "grmipmapped (class in skia)": [[98, "skia.GrMipmapped"]], "__init__() (grmipmapped method)": [[98, "skia.GrMipmapped.__init__"]], "kno (grmipmapped attribute)": [[98, "skia.GrMipmapped.kNo"]], "kyes (grmipmapped attribute)": [[98, "skia.GrMipmapped.kYes"]], "name (grmipmapped attribute)": [[98, "skia.GrMipmapped.name"]], "value (grmipmapped attribute)": [[98, "skia.GrMipmapped.value"]], "grmockoptions (class in skia)": [[99, "skia.GrMockOptions"]], "__init__() (grmockoptions method)": [[99, "skia.GrMockOptions.__init__"]], "grmockrendertargetinfo (class in skia)": [[100, "skia.GrMockRenderTargetInfo"]], "__init__() (grmockrendertargetinfo method)": [[100, "skia.GrMockRenderTargetInfo.__init__"]], "colortype() (grmockrendertargetinfo method)": [[100, "skia.GrMockRenderTargetInfo.colorType"]], "getbackendformat() (grmockrendertargetinfo method)": [[100, "skia.GrMockRenderTargetInfo.getBackendFormat"]], "grmocktextureinfo (class in skia)": [[101, "skia.GrMockTextureInfo"]], "__init__() (grmocktextureinfo method)": [[101, "skia.GrMockTextureInfo.__init__"]], "colortype() (grmocktextureinfo method)": [[101, "skia.GrMockTextureInfo.colorType"]], "compressiontype() (grmocktextureinfo method)": [[101, "skia.GrMockTextureInfo.compressionType"]], "getbackendformat() (grmocktextureinfo method)": [[101, "skia.GrMockTextureInfo.getBackendFormat"]], "id() (grmocktextureinfo method)": [[101, "skia.GrMockTextureInfo.id"]], "grprotected (class in skia)": [[102, "skia.GrProtected"]], "__init__() (grprotected method)": [[102, "skia.GrProtected.__init__"]], "kno (grprotected attribute)": [[102, "skia.GrProtected.kNo"]], "kyes (grprotected attribute)": [[102, "skia.GrProtected.kYes"]], "name (grprotected attribute)": [[102, "skia.GrProtected.name"]], "value (grprotected attribute)": [[102, "skia.GrProtected.value"]], "grpurgeresourceoptions (class in skia)": [[103, "skia.GrPurgeResourceOptions"]], "__init__() (grpurgeresourceoptions method)": [[103, "skia.GrPurgeResourceOptions.__init__"]], "kallresources (grpurgeresourceoptions attribute)": [[103, "skia.GrPurgeResourceOptions.kAllResources"]], "kscratchresourcesonly (grpurgeresourceoptions attribute)": [[103, "skia.GrPurgeResourceOptions.kScratchResourcesOnly"]], "name (grpurgeresourceoptions attribute)": [[103, "skia.GrPurgeResourceOptions.name"]], "value (grpurgeresourceoptions attribute)": [[103, "skia.GrPurgeResourceOptions.value"]], "grrecordingcontext (class in skia)": [[104, "skia.GrRecordingContext"]], "__init__() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.__init__"]], "abandoned() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.abandoned"]], "asdirectcontext() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.asDirectContext"]], "backend() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.backend"]], "colortypesupportedasimage() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.colorTypeSupportedAsImage"]], "colortypesupportedassurface() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.colorTypeSupportedAsSurface"]], "defaultbackendformat() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.defaultBackendFormat"]], "maxrendertargetsize() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.maxRenderTargetSize"]], "maxsurfacesamplecountforcolortype() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.maxSurfaceSampleCountForColorType"]], "maxtexturesize() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.maxTextureSize"]], "ref() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.ref"]], "threadsafeproxy() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.threadSafeProxy"]], "unique() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.unique"]], "unref() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.unref"]], "grrenderable (class in skia)": [[105, "skia.GrRenderable"]], "__init__() (grrenderable method)": [[105, "skia.GrRenderable.__init__"]], "kno (grrenderable attribute)": [[105, "skia.GrRenderable.kNo"]], "kyes (grrenderable attribute)": [[105, "skia.GrRenderable.kYes"]], "name (grrenderable attribute)": [[105, "skia.GrRenderable.name"]], "value (grrenderable attribute)": [[105, "skia.GrRenderable.value"]], "grsemaphoressubmitted (class in skia)": [[106, "skia.GrSemaphoresSubmitted"]], "__init__() (grsemaphoressubmitted method)": [[106, "skia.GrSemaphoresSubmitted.__init__"]], "kno (grsemaphoressubmitted attribute)": [[106, "skia.GrSemaphoresSubmitted.kNo"]], "kyes (grsemaphoressubmitted attribute)": [[106, "skia.GrSemaphoresSubmitted.kYes"]], "name (grsemaphoressubmitted attribute)": [[106, "skia.GrSemaphoresSubmitted.name"]], "value (grsemaphoressubmitted attribute)": [[106, "skia.GrSemaphoresSubmitted.value"]], "grsurfaceorigin (class in skia)": [[107, "skia.GrSurfaceOrigin"]], "__init__() (grsurfaceorigin method)": [[107, "skia.GrSurfaceOrigin.__init__"]], "kbottomleft_grsurfaceorigin (grsurfaceorigin attribute)": [[107, "skia.GrSurfaceOrigin.kBottomLeft_GrSurfaceOrigin"]], "ktopleft_grsurfaceorigin (grsurfaceorigin attribute)": [[107, "skia.GrSurfaceOrigin.kTopLeft_GrSurfaceOrigin"]], "name (grsurfaceorigin attribute)": [[107, "skia.GrSurfaceOrigin.name"]], "value (grsurfaceorigin attribute)": [[107, "skia.GrSurfaceOrigin.value"]], "grsynccpu (class in skia)": [[108, "skia.GrSyncCpu"]], "__init__() (grsynccpu method)": [[108, "skia.GrSyncCpu.__init__"]], "kno (grsynccpu attribute)": [[108, "skia.GrSyncCpu.kNo"]], "kyes (grsynccpu attribute)": [[108, "skia.GrSyncCpu.kYes"]], "name (grsynccpu attribute)": [[108, "skia.GrSyncCpu.name"]], "value (grsynccpu attribute)": [[108, "skia.GrSyncCpu.value"]], "grtexturetype (class in skia)": [[109, "skia.GrTextureType"]], "__init__() (grtexturetype method)": [[109, "skia.GrTextureType.__init__"]], "k2d (grtexturetype attribute)": [[109, "skia.GrTextureType.k2D"]], "kexternal (grtexturetype attribute)": [[109, "skia.GrTextureType.kExternal"]], "knone (grtexturetype attribute)": [[109, "skia.GrTextureType.kNone"]], "krectangle (grtexturetype attribute)": [[109, "skia.GrTextureType.kRectangle"]], "name (grtexturetype attribute)": [[109, "skia.GrTextureType.name"]], "value (grtexturetype attribute)": [[109, "skia.GrTextureType.value"]], "grvkalloc (class in skia)": [[110, "skia.GrVkAlloc"]], "__init__() (grvkalloc method)": [[110, "skia.GrVkAlloc.__init__"]], "grvkbackendcontext (class in skia)": [[111, "skia.GrVkBackendContext"]], "__init__() (grvkbackendcontext method)": [[111, "skia.GrVkBackendContext.__init__"]], "grvkdrawableinfo (class in skia)": [[112, "skia.GrVkDrawableInfo"]], "__init__() (grvkdrawableinfo method)": [[112, "skia.GrVkDrawableInfo.__init__"]], "grvkextensionflags (class in skia)": [[113, "skia.GrVkExtensionFlags"]], "__init__() (grvkextensionflags method)": [[113, "skia.GrVkExtensionFlags.__init__"]], "kext_debug_report_grvkextensionflag (grvkextensionflags attribute)": [[113, "skia.GrVkExtensionFlags.kEXT_debug_report_GrVkExtensionFlag"]], "kkhr_android_surface_grvkextensionflag (grvkextensionflags attribute)": [[113, "skia.GrVkExtensionFlags.kKHR_android_surface_GrVkExtensionFlag"]], "kkhr_surface_grvkextensionflag (grvkextensionflags attribute)": [[113, "skia.GrVkExtensionFlags.kKHR_surface_GrVkExtensionFlag"]], "kkhr_swapchain_grvkextensionflag (grvkextensionflags attribute)": [[113, "skia.GrVkExtensionFlags.kKHR_swapchain_GrVkExtensionFlag"]], "kkhr_win32_surface_grvkextensionflag (grvkextensionflags attribute)": [[113, "skia.GrVkExtensionFlags.kKHR_win32_surface_GrVkExtensionFlag"]], "kkhr_xcb_surface_grvkextensionflag (grvkextensionflags attribute)": [[113, "skia.GrVkExtensionFlags.kKHR_xcb_surface_GrVkExtensionFlag"]], "knv_glsl_shader_grvkextensionflag (grvkextensionflags attribute)": [[113, "skia.GrVkExtensionFlags.kNV_glsl_shader_GrVkExtensionFlag"]], "name (grvkextensionflags attribute)": [[113, "skia.GrVkExtensionFlags.name"]], "value (grvkextensionflags attribute)": [[113, "skia.GrVkExtensionFlags.value"]], "grvkfeatureflags (class in skia)": [[114, "skia.GrVkFeatureFlags"]], "__init__() (grvkfeatureflags method)": [[114, "skia.GrVkFeatureFlags.__init__"]], "kdualsrcblend_grvkfeatureflag (grvkfeatureflags attribute)": [[114, "skia.GrVkFeatureFlags.kDualSrcBlend_GrVkFeatureFlag"]], "kgeometryshader_grvkfeatureflag (grvkfeatureflags attribute)": [[114, "skia.GrVkFeatureFlags.kGeometryShader_GrVkFeatureFlag"]], "ksamplerateshading_grvkfeatureflag (grvkfeatureflags attribute)": [[114, "skia.GrVkFeatureFlags.kSampleRateShading_GrVkFeatureFlag"]], "name (grvkfeatureflags attribute)": [[114, "skia.GrVkFeatureFlags.name"]], "value (grvkfeatureflags attribute)": [[114, "skia.GrVkFeatureFlags.value"]], "grvkimageinfo (class in skia)": [[115, "skia.GrVkImageInfo"]], "__init__() (grvkimageinfo method)": [[115, "skia.GrVkImageInfo.__init__"]], "falloc (grvkimageinfo attribute)": [[115, "skia.GrVkImageInfo.fAlloc"]], "fcurrentqueuefamily (grvkimageinfo attribute)": [[115, "skia.GrVkImageInfo.fCurrentQueueFamily"]], "flevelcount (grvkimageinfo attribute)": [[115, "skia.GrVkImageInfo.fLevelCount"]], "fprotected (grvkimageinfo attribute)": [[115, "skia.GrVkImageInfo.fProtected"]], "fsharingmode (grvkimageinfo attribute)": [[115, "skia.GrVkImageInfo.fSharingMode"]], "fycbcrconversioninfo (grvkimageinfo attribute)": [[115, "skia.GrVkImageInfo.fYcbcrConversionInfo"]], "grvkycbcrconversioninfo (class in skia)": [[116, "skia.GrVkYcbcrConversionInfo"]], "__init__() (grvkycbcrconversioninfo method)": [[116, "skia.GrVkYcbcrConversionInfo.__init__"]], "gradientshader (class in skia)": [[117, "skia.GradientShader"]], "makelinear() (gradientshader static method)": [[117, "skia.GradientShader.MakeLinear"]], "makeradial() (gradientshader static method)": [[117, "skia.GradientShader.MakeRadial"]], "makesweep() (gradientshader static method)": [[117, "skia.GradientShader.MakeSweep"]], "maketwopointconical() (gradientshader static method)": [[117, "skia.GradientShader.MakeTwoPointConical"]], "__init__() (gradientshader method)": [[117, "skia.GradientShader.__init__"]], "kinterpolatecolorsinpremul_flag (gradientshader attribute)": [[117, "skia.GradientShader.kInterpolateColorsInPremul_Flag"]], "flags (class in skia.gradientshader)": [[118, "skia.GradientShader.Flags"]], "__init__() (flags method)": [[118, "skia.GradientShader.Flags.__init__"], [226, "skia.SurfaceProps.Flags.__init__"]], "kinterpolatecolorsinpremul_flag (flags attribute)": [[118, "skia.GradientShader.Flags.kInterpolateColorsInPremul_Flag"]], "name (flags attribute)": [[118, "skia.GradientShader.Flags.name"], [226, "skia.SurfaceProps.Flags.name"]], "value (flags attribute)": [[118, "skia.GradientShader.Flags.value"], [226, "skia.SurfaceProps.Flags.value"]], "highcontrastconfig (class in skia)": [[119, "skia.HighContrastConfig"]], "__init__() (highcontrastconfig method)": [[119, "skia.HighContrastConfig.__init__"]], "fcontrast (highcontrastconfig attribute)": [[119, "skia.HighContrastConfig.fContrast"]], "fgrayscale (highcontrastconfig attribute)": [[119, "skia.HighContrastConfig.fGrayscale"]], "finvertstyle (highcontrastconfig attribute)": [[119, "skia.HighContrastConfig.fInvertStyle"]], "isvalid() (highcontrastconfig method)": [[119, "skia.HighContrastConfig.isValid"]], "kinvertbrightness (highcontrastconfig attribute)": [[119, "skia.HighContrastConfig.kInvertBrightness"]], "kinvertlightness (highcontrastconfig attribute)": [[119, "skia.HighContrastConfig.kInvertLightness"]], "klast (highcontrastconfig attribute)": [[119, "skia.HighContrastConfig.kLast"]], "knoinvert (highcontrastconfig attribute)": [[119, "skia.HighContrastConfig.kNoInvert"]], "invertstyle (class in skia.highcontrastconfig)": [[120, "skia.HighContrastConfig.InvertStyle"]], "__init__() (invertstyle method)": [[120, "skia.HighContrastConfig.InvertStyle.__init__"]], "kinvertbrightness (invertstyle attribute)": [[120, "skia.HighContrastConfig.InvertStyle.kInvertBrightness"]], "kinvertlightness (invertstyle attribute)": [[120, "skia.HighContrastConfig.InvertStyle.kInvertLightness"]], "klast (invertstyle attribute)": [[120, "skia.HighContrastConfig.InvertStyle.kLast"]], "knoinvert (invertstyle attribute)": [[120, "skia.HighContrastConfig.InvertStyle.kNoInvert"]], "name (invertstyle attribute)": [[120, "skia.HighContrastConfig.InvertStyle.name"]], "value (invertstyle attribute)": [[120, "skia.HighContrastConfig.InvertStyle.value"]], "highcontrastfilter (class in skia)": [[121, "skia.HighContrastFilter"]], "make() (highcontrastfilter static method)": [[121, "skia.HighContrastFilter.Make"]], "__init__() (highcontrastfilter method)": [[121, "skia.HighContrastFilter.__init__"]], "ipoint (class in skia)": [[122, "skia.IPoint"]], "make() (ipoint static method)": [[122, "skia.IPoint.Make"]], "__init__() (ipoint method)": [[122, "skia.IPoint.__init__"]], "equals() (ipoint method)": [[122, "skia.IPoint.equals"]], "fx (ipoint attribute)": [[122, "skia.IPoint.fX"]], "fy (ipoint attribute)": [[122, "skia.IPoint.fY"]], "iszero() (ipoint method)": [[122, "skia.IPoint.isZero"]], "set() (ipoint method)": [[122, "skia.IPoint.set"]], "x() (ipoint method)": [[122, "skia.IPoint.x"]], "y() (ipoint method)": [[122, "skia.IPoint.y"]], "irect (class in skia)": [[123, "skia.IRect"]], "intersects() (irect static method)": [[123, "skia.IRect.Intersects"]], "makeempty() (irect static method)": [[123, "skia.IRect.MakeEmpty"]], "makeltrb() (irect static method)": [[123, "skia.IRect.MakeLTRB"]], "makesize() (irect static method)": [[123, "skia.IRect.MakeSize"]], "makewh() (irect static method)": [[123, "skia.IRect.MakeWH"]], "makexywh() (irect static method)": [[123, "skia.IRect.MakeXYWH"]], "__init__() (irect method)": [[123, "skia.IRect.__init__"]], "adjust() (irect method)": [[123, "skia.IRect.adjust"]], "bottom() (irect method)": [[123, "skia.IRect.bottom"]], "contains() (irect method)": [[123, "skia.IRect.contains"]], "containsnoemptycheck() (irect method)": [[123, "skia.IRect.containsNoEmptyCheck"]], "fbottom (irect attribute)": [[123, "skia.IRect.fBottom"]], "fleft (irect attribute)": [[123, "skia.IRect.fLeft"]], "fright (irect attribute)": [[123, "skia.IRect.fRight"]], "ftop (irect attribute)": [[123, "skia.IRect.fTop"]], "height() (irect method)": [[123, "skia.IRect.height"]], "height64() (irect method)": [[123, "skia.IRect.height64"]], "inset() (irect method)": [[123, "skia.IRect.inset"]], "intersect() (irect method)": [[123, "skia.IRect.intersect"]], "isempty() (irect method)": [[123, "skia.IRect.isEmpty"]], "isempty64() (irect method)": [[123, "skia.IRect.isEmpty64"]], "join() (irect method)": [[123, "skia.IRect.join"]], "left() (irect method)": [[123, "skia.IRect.left"]], "makeinset() (irect method)": [[123, "skia.IRect.makeInset"]], "makeoffset() (irect method)": [[123, "skia.IRect.makeOffset"]], "makeoutset() (irect method)": [[123, "skia.IRect.makeOutset"]], "makesorted() (irect method)": [[123, "skia.IRect.makeSorted"]], "offset() (irect method)": [[123, "skia.IRect.offset"]], "offsetto() (irect method)": [[123, "skia.IRect.offsetTo"]], "outset() (irect method)": [[123, "skia.IRect.outset"]], "right() (irect method)": [[123, "skia.IRect.right"]], "setempty() (irect method)": [[123, "skia.IRect.setEmpty"]], "setltrb() (irect method)": [[123, "skia.IRect.setLTRB"]], "setwh() (irect method)": [[123, "skia.IRect.setWH"]], "setxywh() (irect method)": [[123, "skia.IRect.setXYWH"]], "size() (irect method)": [[123, "skia.IRect.size"]], "sort() (irect method)": [[123, "skia.IRect.sort"]], "top() (irect method)": [[123, "skia.IRect.top"]], "topleft() (irect method)": [[123, "skia.IRect.topLeft"]], "width() (irect method)": [[123, "skia.IRect.width"]], "width64() (irect method)": [[123, "skia.IRect.width64"]], "x() (irect method)": [[123, "skia.IRect.x"]], "y() (irect method)": [[123, "skia.IRect.y"]], "isize (class in skia)": [[124, "skia.ISize"]], "make() (isize static method)": [[124, "skia.ISize.Make"]], "makeempty() (isize static method)": [[124, "skia.ISize.MakeEmpty"]], "__init__() (isize method)": [[124, "skia.ISize.__init__"]], "area() (isize method)": [[124, "skia.ISize.area"]], "equals() (isize method)": [[124, "skia.ISize.equals"]], "fheight (isize attribute)": [[124, "skia.ISize.fHeight"]], "fwidth (isize attribute)": [[124, "skia.ISize.fWidth"]], "height() (isize method)": [[124, "skia.ISize.height"]], "isempty() (isize method)": [[124, "skia.ISize.isEmpty"]], "iszero() (isize method)": [[124, "skia.ISize.isZero"]], "set() (isize method)": [[124, "skia.ISize.set"]], "setempty() (isize method)": [[124, "skia.ISize.setEmpty"]], "width() (isize method)": [[124, "skia.ISize.width"]], "image (class in skia)": [[125, "skia.Image"]], "makebackendtexturefromimage() (image static method)": [[125, "skia.Image.MakeBackendTextureFromImage"]], "makecrosscontextfrompixmap() (image static method)": [[125, "skia.Image.MakeCrossContextFromPixmap"]], "makefromadoptedtexture() (image static method)": [[125, "skia.Image.MakeFromAdoptedTexture"]], "makefrombitmap() (image static method)": [[125, "skia.Image.MakeFromBitmap"]], "makefromcompressedtexture() (image static method)": [[125, "skia.Image.MakeFromCompressedTexture"]], "makefromencoded() (image static method)": [[125, "skia.Image.MakeFromEncoded"]], "makefrompicture() (image static method)": [[125, "skia.Image.MakeFromPicture"]], "makefromraster() (image static method)": [[125, "skia.Image.MakeFromRaster"]], "makefromtexture() (image static method)": [[125, "skia.Image.MakeFromTexture"]], "makefromyuvapixmaps() (image static method)": [[125, "skia.Image.MakeFromYUVAPixmaps"]], "makerastercopy() (image static method)": [[125, "skia.Image.MakeRasterCopy"]], "makerasterdata() (image static method)": [[125, "skia.Image.MakeRasterData"]], "makerasterfromcompressed() (image static method)": [[125, "skia.Image.MakeRasterFromCompressed"]], "maketexturefromcompressed() (image static method)": [[125, "skia.Image.MakeTextureFromCompressed"]], "__init__() (image method)": [[125, "skia.Image.__init__"]], "alphatype() (image method)": [[125, "skia.Image.alphaType"]], "aslegacybitmap() (image method)": [[125, "skia.Image.asLegacyBitmap"]], "bitmap() (image method)": [[125, "skia.Image.bitmap"]], "bounds() (image method)": [[125, "skia.Image.bounds"]], "colorspace() (image method)": [[125, "skia.Image.colorSpace"]], "colortype() (image method)": [[125, "skia.Image.colorType"]], "convert() (image method)": [[125, "skia.Image.convert"]], "dimensions() (image method)": [[125, "skia.Image.dimensions"]], "encodetodata() (image method)": [[125, "skia.Image.encodeToData"]], "flush() (image method)": [[125, "skia.Image.flush"]], "flushandsubmit() (image method)": [[125, "skia.Image.flushAndSubmit"]], "fromarray() (image static method)": [[125, "skia.Image.fromarray"]], "frombytes() (image static method)": [[125, "skia.Image.frombytes"]], "getbackendtexture() (image method)": [[125, "skia.Image.getBackendTexture"]], "hasmipmaps() (image method)": [[125, "skia.Image.hasMipmaps"]], "height() (image method)": [[125, "skia.Image.height"]], "imageinfo() (image method)": [[125, "skia.Image.imageInfo"]], "isalphaonly() (image method)": [[125, "skia.Image.isAlphaOnly"]], "islazygenerated() (image method)": [[125, "skia.Image.isLazyGenerated"]], "isopaque() (image method)": [[125, "skia.Image.isOpaque"]], "istexturebacked() (image method)": [[125, "skia.Image.isTextureBacked"]], "isvalid() (image method)": [[125, "skia.Image.isValid"]], "kallow_cachinghint (image attribute)": [[125, "skia.Image.kAllow_CachingHint"]], "kbc1_rgb8_unorm (image attribute)": [[125, "skia.Image.kBC1_RGB8_UNORM"]], "kbc1_rgba8_unorm (image attribute)": [[125, "skia.Image.kBC1_RGBA8_UNORM"]], "kdisallow_cachinghint (image attribute)": [[125, "skia.Image.kDisallow_CachingHint"]], "ketc2_rgb8_unorm (image attribute)": [[125, "skia.Image.kETC2_RGB8_UNORM"]], "kf16 (image attribute)": [[125, "skia.Image.kF16"]], "klast (image attribute)": [[125, "skia.Image.kLast"]], "knone (image attribute)": [[125, "skia.Image.kNone"]], "kro_legacybitmapmode (image attribute)": [[125, "skia.Image.kRO_LegacyBitmapMode"]], "ku8 (image attribute)": [[125, "skia.Image.kU8"]], "makecolorspace() (image method)": [[125, "skia.Image.makeColorSpace"]], "makecolortypeandcolorspace() (image method)": [[125, "skia.Image.makeColorTypeAndColorSpace"]], "makenontextureimage() (image method)": [[125, "skia.Image.makeNonTextureImage"]], "makerasterimage() (image method)": [[125, "skia.Image.makeRasterImage"]], "makeshader() (image method)": [[125, "skia.Image.makeShader"]], "makesubset() (image method)": [[125, "skia.Image.makeSubset"]], "maketextureimage() (image method)": [[125, "skia.Image.makeTextureImage"]], "makewithfilter() (image method)": [[125, "skia.Image.makeWithFilter"]], "open() (image static method)": [[125, "skia.Image.open"]], "peekpixels() (image method)": [[125, "skia.Image.peekPixels"]], "readpixels() (image method)": [[125, "skia.Image.readPixels"]], "ref() (image method)": [[125, "skia.Image.ref"]], "refcolorspace() (image method)": [[125, "skia.Image.refColorSpace"]], "refencodeddata() (image method)": [[125, "skia.Image.refEncodedData"]], "reinterpretcolorspace() (image method)": [[125, "skia.Image.reinterpretColorSpace"]], "resize() (image method)": [[125, "skia.Image.resize"]], "save() (image method)": [[125, "skia.Image.save"]], "scalepixels() (image method)": [[125, "skia.Image.scalePixels"]], "toarray() (image method)": [[125, "skia.Image.toarray"]], "tobytes() (image method)": [[125, "skia.Image.tobytes"]], "unique() (image method)": [[125, "skia.Image.unique"]], "uniqueid() (image method)": [[125, "skia.Image.uniqueID"]], "unref() (image method)": [[125, "skia.Image.unref"]], "width() (image method)": [[125, "skia.Image.width"]], "withdefaultmipmaps() (image method)": [[125, "skia.Image.withDefaultMipmaps"]], "bitdepth (class in skia.image)": [[126, "skia.Image.BitDepth"]], "__init__() (bitdepth method)": [[126, "skia.Image.BitDepth.__init__"]], "kf16 (bitdepth attribute)": [[126, "skia.Image.BitDepth.kF16"]], "ku8 (bitdepth attribute)": [[126, "skia.Image.BitDepth.kU8"]], "name (bitdepth attribute)": [[126, "skia.Image.BitDepth.name"]], "value (bitdepth attribute)": [[126, "skia.Image.BitDepth.value"]], "cachinghint (class in skia.image)": [[127, "skia.Image.CachingHint"]], "__init__() (cachinghint method)": [[127, "skia.Image.CachingHint.__init__"]], "kallow_cachinghint (cachinghint attribute)": [[127, "skia.Image.CachingHint.kAllow_CachingHint"]], "kdisallow_cachinghint (cachinghint attribute)": [[127, "skia.Image.CachingHint.kDisallow_CachingHint"]], "name (cachinghint attribute)": [[127, "skia.Image.CachingHint.name"]], "value (cachinghint attribute)": [[127, "skia.Image.CachingHint.value"]], "compressiontype (class in skia.image)": [[128, "skia.Image.CompressionType"]], "__init__() (compressiontype method)": [[128, "skia.Image.CompressionType.__init__"]], "kbc1_rgb8_unorm (compressiontype attribute)": [[128, "skia.Image.CompressionType.kBC1_RGB8_UNORM"]], "kbc1_rgba8_unorm (compressiontype attribute)": [[128, "skia.Image.CompressionType.kBC1_RGBA8_UNORM"]], "ketc2_rgb8_unorm (compressiontype attribute)": [[128, "skia.Image.CompressionType.kETC2_RGB8_UNORM"]], "klast (compressiontype attribute)": [[128, "skia.Image.CompressionType.kLast"]], "knone (compressiontype attribute)": [[128, "skia.Image.CompressionType.kNone"]], "name (compressiontype attribute)": [[128, "skia.Image.CompressionType.name"]], "value (compressiontype attribute)": [[128, "skia.Image.CompressionType.value"]], "legacybitmapmode (class in skia.image)": [[129, "skia.Image.LegacyBitmapMode"]], "__init__() (legacybitmapmode method)": [[129, "skia.Image.LegacyBitmapMode.__init__"]], "kro_legacybitmapmode (legacybitmapmode attribute)": [[129, "skia.Image.LegacyBitmapMode.kRO_LegacyBitmapMode"]], "name (legacybitmapmode attribute)": [[129, "skia.Image.LegacyBitmapMode.name"]], "value (legacybitmapmode attribute)": [[129, "skia.Image.LegacyBitmapMode.value"]], "deserialize() (imagefilter static method)": [[130, "skia.ImageFilter.Deserialize"]], "imagefilter (class in skia)": [[130, "skia.ImageFilter"]], "__init__() (imagefilter method)": [[130, "skia.ImageFilter.__init__"]], "asacolorfilter() (imagefilter method)": [[130, "skia.ImageFilter.asAColorFilter"]], "ascolorfilter() (imagefilter method)": [[130, "skia.ImageFilter.asColorFilter"]], "cancomputefastbounds() (imagefilter method)": [[130, "skia.ImageFilter.canComputeFastBounds"]], "computefastbounds() (imagefilter method)": [[130, "skia.ImageFilter.computeFastBounds"]], "countinputs() (imagefilter method)": [[130, "skia.ImageFilter.countInputs"]], "filterbounds() (imagefilter method)": [[130, "skia.ImageFilter.filterBounds"]], "getflattenabletype() (imagefilter method)": [[130, "skia.ImageFilter.getFlattenableType"]], "getinput() (imagefilter method)": [[130, "skia.ImageFilter.getInput"]], "gettypename() (imagefilter method)": [[130, "skia.ImageFilter.getTypeName"]], "iscolorfilternode() (imagefilter method)": [[130, "skia.ImageFilter.isColorFilterNode"]], "kcolorfilter_type (imagefilter attribute)": [[130, "skia.ImageFilter.kColorFilter_Type"]], "kdrawlooper_type (imagefilter attribute)": [[130, "skia.ImageFilter.kDrawLooper_Type"]], "kdrawable_type (imagefilter attribute)": [[130, "skia.ImageFilter.kDrawable_Type"]], "kforward_mapdirection (imagefilter attribute)": [[130, "skia.ImageFilter.kForward_MapDirection"]], "kimagefilter_type (imagefilter attribute)": [[130, "skia.ImageFilter.kImageFilter_Type"]], "kmaskfilter_type (imagefilter attribute)": [[130, "skia.ImageFilter.kMaskFilter_Type"]], "kpatheffect_type (imagefilter attribute)": [[130, "skia.ImageFilter.kPathEffect_Type"]], "kreverse_mapdirection (imagefilter attribute)": [[130, "skia.ImageFilter.kReverse_MapDirection"]], "makewithlocalmatrix() (imagefilter method)": [[130, "skia.ImageFilter.makeWithLocalMatrix"]], "ref() (imagefilter method)": [[130, "skia.ImageFilter.ref"]], "serialize() (imagefilter method)": [[130, "skia.ImageFilter.serialize"]], "unique() (imagefilter method)": [[130, "skia.ImageFilter.unique"]], "unref() (imagefilter method)": [[130, "skia.ImageFilter.unref"]], "croprect (class in skia.imagefilter)": [[131, "skia.ImageFilter.CropRect"]], "__init__() (croprect method)": [[131, "skia.ImageFilter.CropRect.__init__"]], "mapdirection (class in skia.imagefilter)": [[132, "skia.ImageFilter.MapDirection"]], "__init__() (mapdirection method)": [[132, "skia.ImageFilter.MapDirection.__init__"]], "kforward_mapdirection (mapdirection attribute)": [[132, "skia.ImageFilter.MapDirection.kForward_MapDirection"]], "kreverse_mapdirection (mapdirection attribute)": [[132, "skia.ImageFilter.MapDirection.kReverse_MapDirection"]], "name (mapdirection attribute)": [[132, "skia.ImageFilter.MapDirection.name"]], "value (mapdirection attribute)": [[132, "skia.ImageFilter.MapDirection.value"]], "type (class in skia.imagefilter)": [[133, "skia.ImageFilter.Type"]], "arithmetic() (imagefilters static method)": [[134, "skia.ImageFilters.Arithmetic"]], "blur() (imagefilters static method)": [[134, "skia.ImageFilters.Blur"]], "colorfilter() (imagefilters static method)": [[134, "skia.ImageFilters.ColorFilter"]], "compose() (imagefilters static method)": [[134, "skia.ImageFilters.Compose"]], "dilate() (imagefilters static method)": [[134, "skia.ImageFilters.Dilate"]], "displacementmap() (imagefilters static method)": [[134, "skia.ImageFilters.DisplacementMap"]], "distantlitdiffuse() (imagefilters static method)": [[134, "skia.ImageFilters.DistantLitDiffuse"]], "distantlitspecular() (imagefilters static method)": [[134, "skia.ImageFilters.DistantLitSpecular"]], "dropshadow() (imagefilters static method)": [[134, "skia.ImageFilters.DropShadow"]], "dropshadowonly() (imagefilters static method)": [[134, "skia.ImageFilters.DropShadowOnly"]], "erode() (imagefilters static method)": [[134, "skia.ImageFilters.Erode"]], "image() (imagefilters static method)": [[134, "skia.ImageFilters.Image"]], "imagefilters (class in skia)": [[134, "skia.ImageFilters"]], "magnifier() (imagefilters static method)": [[134, "skia.ImageFilters.Magnifier"]], "matrixconvolution() (imagefilters static method)": [[134, "skia.ImageFilters.MatrixConvolution"]], "matrixtransform() (imagefilters static method)": [[134, "skia.ImageFilters.MatrixTransform"]], "merge() (imagefilters static method)": [[134, "skia.ImageFilters.Merge"]], "offset() (imagefilters static method)": [[134, "skia.ImageFilters.Offset"]], "picture() (imagefilters static method)": [[134, "skia.ImageFilters.Picture"]], "pointlitdiffuse() (imagefilters static method)": [[134, "skia.ImageFilters.PointLitDiffuse"]], "pointlitspecular() (imagefilters static method)": [[134, "skia.ImageFilters.PointLitSpecular"]], "spotlitdiffuse() (imagefilters static method)": [[134, "skia.ImageFilters.SpotLitDiffuse"]], "spotlitspecular() (imagefilters static method)": [[134, "skia.ImageFilters.SpotLitSpecular"]], "tile() (imagefilters static method)": [[134, "skia.ImageFilters.Tile"]], "xfermode() (imagefilters static method)": [[134, "skia.ImageFilters.Xfermode"]], "__init__() (imagefilters method)": [[134, "skia.ImageFilters.__init__"]], "bytesizeoverflowed() (imageinfo static method)": [[135, "skia.ImageInfo.ByteSizeOverflowed"]], "imageinfo (class in skia)": [[135, "skia.ImageInfo"]], "make() (imageinfo static method)": [[135, "skia.ImageInfo.Make"]], "makea8() (imageinfo static method)": [[135, "skia.ImageInfo.MakeA8"]], "maken32() (imageinfo static method)": [[135, "skia.ImageInfo.MakeN32"]], "maken32premul() (imageinfo static method)": [[135, "skia.ImageInfo.MakeN32Premul"]], "makes32() (imageinfo static method)": [[135, "skia.ImageInfo.MakeS32"]], "makeunknown() (imageinfo static method)": [[135, "skia.ImageInfo.MakeUnknown"]], "__init__() (imageinfo method)": [[135, "skia.ImageInfo.__init__"]], "alphatype() (imageinfo method)": [[135, "skia.ImageInfo.alphaType"]], "bounds() (imageinfo method)": [[135, "skia.ImageInfo.bounds"]], "bytesperpixel() (imageinfo method)": [[135, "skia.ImageInfo.bytesPerPixel"]], "colorinfo() (imageinfo method)": [[135, "skia.ImageInfo.colorInfo"]], "colorspace() (imageinfo method)": [[135, "skia.ImageInfo.colorSpace"]], "colortype() (imageinfo method)": [[135, "skia.ImageInfo.colorType"]], "computebytesize() (imageinfo method)": [[135, "skia.ImageInfo.computeByteSize"]], "computeminbytesize() (imageinfo method)": [[135, "skia.ImageInfo.computeMinByteSize"]], "computeoffset() (imageinfo method)": [[135, "skia.ImageInfo.computeOffset"]], "dimensions() (imageinfo method)": [[135, "skia.ImageInfo.dimensions"]], "gammaclosetosrgb() (imageinfo method)": [[135, "skia.ImageInfo.gammaCloseToSRGB"]], "height() (imageinfo method)": [[135, "skia.ImageInfo.height"]], "isempty() (imageinfo method)": [[135, "skia.ImageInfo.isEmpty"]], "isopaque() (imageinfo method)": [[135, "skia.ImageInfo.isOpaque"]], "makealphatype() (imageinfo method)": [[135, "skia.ImageInfo.makeAlphaType"]], "makecolorspace() (imageinfo method)": [[135, "skia.ImageInfo.makeColorSpace"]], "makecolortype() (imageinfo method)": [[135, "skia.ImageInfo.makeColorType"]], "makedimensions() (imageinfo method)": [[135, "skia.ImageInfo.makeDimensions"]], "makewh() (imageinfo method)": [[135, "skia.ImageInfo.makeWH"]], "minrowbytes() (imageinfo method)": [[135, "skia.ImageInfo.minRowBytes"]], "minrowbytes64() (imageinfo method)": [[135, "skia.ImageInfo.minRowBytes64"]], "refcolorspace() (imageinfo method)": [[135, "skia.ImageInfo.refColorSpace"]], "reset() (imageinfo method)": [[135, "skia.ImageInfo.reset"]], "shiftperpixel() (imageinfo method)": [[135, "skia.ImageInfo.shiftPerPixel"]], "validrowbytes() (imageinfo method)": [[135, "skia.ImageInfo.validRowBytes"]], "width() (imageinfo method)": [[135, "skia.ImageInfo.width"]], "line2dpatheffect (class in skia)": [[136, "skia.Line2DPathEffect"]], "make() (line2dpatheffect static method)": [[136, "skia.Line2DPathEffect.Make"]], "__init__() (line2dpatheffect method)": [[136, "skia.Line2DPathEffect.__init__"]], "lumacolorfilter (class in skia)": [[137, "skia.LumaColorFilter"]], "make() (lumacolorfilter static method)": [[137, "skia.LumaColorFilter.Make"]], "__init__() (lumacolorfilter method)": [[137, "skia.LumaColorFilter.__init__"]], "m44 (class in skia)": [[138, "skia.M44"]], "__init__() (m44 method)": [[138, "skia.M44.__init__"]], "deserialize() (maskfilter static method)": [[139, "skia.MaskFilter.Deserialize"]], "makeblur() (maskfilter static method)": [[139, "skia.MaskFilter.MakeBlur"]], "maskfilter (class in skia)": [[139, "skia.MaskFilter"]], "__init__() (maskfilter method)": [[139, "skia.MaskFilter.__init__"]], "getflattenabletype() (maskfilter method)": [[139, "skia.MaskFilter.getFlattenableType"]], "gettypename() (maskfilter method)": [[139, "skia.MaskFilter.getTypeName"]], "kcolorfilter_type (maskfilter attribute)": [[139, "skia.MaskFilter.kColorFilter_Type"]], "kdrawlooper_type (maskfilter attribute)": [[139, "skia.MaskFilter.kDrawLooper_Type"]], "kdrawable_type (maskfilter attribute)": [[139, "skia.MaskFilter.kDrawable_Type"]], "kimagefilter_type (maskfilter attribute)": [[139, "skia.MaskFilter.kImageFilter_Type"]], "kmaskfilter_type (maskfilter attribute)": [[139, "skia.MaskFilter.kMaskFilter_Type"]], "kpatheffect_type (maskfilter attribute)": [[139, "skia.MaskFilter.kPathEffect_Type"]], "ref() (maskfilter method)": [[139, "skia.MaskFilter.ref"]], "serialize() (maskfilter method)": [[139, "skia.MaskFilter.serialize"]], "unique() (maskfilter method)": [[139, "skia.MaskFilter.unique"]], "unref() (maskfilter method)": [[139, "skia.MaskFilter.unref"]], "type (class in skia.maskfilter)": [[140, "skia.MaskFilter.Type"]], "concat() (matrix static method)": [[141, "skia.Matrix.Concat"]], "i() (matrix static method)": [[141, "skia.Matrix.I"]], "invalidmatrix() (matrix static method)": [[141, "skia.Matrix.InvalidMatrix"]], "makeall() (matrix static method)": [[141, "skia.Matrix.MakeAll"]], "makerecttorect() (matrix static method)": [[141, "skia.Matrix.MakeRectToRect"]], "matrix (class in skia)": [[141, "skia.Matrix"]], "rotatedeg() (matrix static method)": [[141, "skia.Matrix.RotateDeg"]], "rotaterad() (matrix static method)": [[141, "skia.Matrix.RotateRad"]], "scale() (matrix static method)": [[141, "skia.Matrix.Scale"]], "setaffineidentity() (matrix static method)": [[141, "skia.Matrix.SetAffineIdentity"]], "translate() (matrix static method)": [[141, "skia.Matrix.Translate"]], "__init__() (matrix method)": [[141, "skia.Matrix.__init__"]], "asaffine() (matrix method)": [[141, "skia.Matrix.asAffine"]], "decomposescale() (matrix method)": [[141, "skia.Matrix.decomposeScale"]], "dirtymatrixtypecache() (matrix method)": [[141, "skia.Matrix.dirtyMatrixTypeCache"]], "dump() (matrix method)": [[141, "skia.Matrix.dump"]], "get() (matrix method)": [[141, "skia.Matrix.get"]], "get9() (matrix method)": [[141, "skia.Matrix.get9"]], "getmaxscale() (matrix method)": [[141, "skia.Matrix.getMaxScale"]], "getminmaxscales() (matrix method)": [[141, "skia.Matrix.getMinMaxScales"]], "getminscale() (matrix method)": [[141, "skia.Matrix.getMinScale"]], "getperspx() (matrix method)": [[141, "skia.Matrix.getPerspX"]], "getperspy() (matrix method)": [[141, "skia.Matrix.getPerspY"]], "getscalex() (matrix method)": [[141, "skia.Matrix.getScaleX"]], "getscaley() (matrix method)": [[141, "skia.Matrix.getScaleY"]], "getskewx() (matrix method)": [[141, "skia.Matrix.getSkewX"]], "getskewy() (matrix method)": [[141, "skia.Matrix.getSkewY"]], "gettranslatex() (matrix method)": [[141, "skia.Matrix.getTranslateX"]], "gettranslatey() (matrix method)": [[141, "skia.Matrix.getTranslateY"]], "gettype() (matrix method)": [[141, "skia.Matrix.getType"]], "hasperspective() (matrix method)": [[141, "skia.Matrix.hasPerspective"]], "invert() (matrix method)": [[141, "skia.Matrix.invert"]], "isfinite() (matrix method)": [[141, "skia.Matrix.isFinite"]], "isidentity() (matrix method)": [[141, "skia.Matrix.isIdentity"]], "isscaletranslate() (matrix method)": [[141, "skia.Matrix.isScaleTranslate"]], "issimilarity() (matrix method)": [[141, "skia.Matrix.isSimilarity"]], "istranslate() (matrix method)": [[141, "skia.Matrix.isTranslate"]], "kascalex (matrix attribute)": [[141, "skia.Matrix.kAScaleX"]], "kascaley (matrix attribute)": [[141, "skia.Matrix.kAScaleY"]], "kaskewx (matrix attribute)": [[141, "skia.Matrix.kASkewX"]], "kaskewy (matrix attribute)": [[141, "skia.Matrix.kASkewY"]], "katransx (matrix attribute)": [[141, "skia.Matrix.kATransX"]], "katransy (matrix attribute)": [[141, "skia.Matrix.kATransY"]], "kaffine_mask (matrix attribute)": [[141, "skia.Matrix.kAffine_Mask"]], "kcenter_scaletofit (matrix attribute)": [[141, "skia.Matrix.kCenter_ScaleToFit"]], "kend_scaletofit (matrix attribute)": [[141, "skia.Matrix.kEnd_ScaleToFit"]], "kfill_scaletofit (matrix attribute)": [[141, "skia.Matrix.kFill_ScaleToFit"]], "kidentity_mask (matrix attribute)": [[141, "skia.Matrix.kIdentity_Mask"]], "kmpersp0 (matrix attribute)": [[141, "skia.Matrix.kMPersp0"]], "kmpersp1 (matrix attribute)": [[141, "skia.Matrix.kMPersp1"]], "kmpersp2 (matrix attribute)": [[141, "skia.Matrix.kMPersp2"]], "kmscalex (matrix attribute)": [[141, "skia.Matrix.kMScaleX"]], "kmscaley (matrix attribute)": [[141, "skia.Matrix.kMScaleY"]], "kmskewx (matrix attribute)": [[141, "skia.Matrix.kMSkewX"]], "kmskewy (matrix attribute)": [[141, "skia.Matrix.kMSkewY"]], "kmtransx (matrix attribute)": [[141, "skia.Matrix.kMTransX"]], "kmtransy (matrix attribute)": [[141, "skia.Matrix.kMTransY"]], "kperspective_mask (matrix attribute)": [[141, "skia.Matrix.kPerspective_Mask"]], "kscale_mask (matrix attribute)": [[141, "skia.Matrix.kScale_Mask"]], "kstart_scaletofit (matrix attribute)": [[141, "skia.Matrix.kStart_ScaleToFit"]], "ktranslate_mask (matrix attribute)": [[141, "skia.Matrix.kTranslate_Mask"]], "maphomogeneouspoints() (matrix method)": [[141, "skia.Matrix.mapHomogeneousPoints"]], "mappoints() (matrix method)": [[141, "skia.Matrix.mapPoints"]], "mapradius() (matrix method)": [[141, "skia.Matrix.mapRadius"]], "maprect() (matrix method)": [[141, "skia.Matrix.mapRect"]], "maprectscaletranslate() (matrix method)": [[141, "skia.Matrix.mapRectScaleTranslate"]], "maprecttoquad() (matrix method)": [[141, "skia.Matrix.mapRectToQuad"]], "mapvector() (matrix method)": [[141, "skia.Matrix.mapVector"]], "mapvectors() (matrix method)": [[141, "skia.Matrix.mapVectors"]], "mapxy() (matrix method)": [[141, "skia.Matrix.mapXY"]], "normalizeperspective() (matrix method)": [[141, "skia.Matrix.normalizePerspective"]], "postconcat() (matrix method)": [[141, "skia.Matrix.postConcat"]], "postrotate() (matrix method)": [[141, "skia.Matrix.postRotate"]], "postscale() (matrix method)": [[141, "skia.Matrix.postScale"]], "postskew() (matrix method)": [[141, "skia.Matrix.postSkew"]], "posttranslate() (matrix method)": [[141, "skia.Matrix.postTranslate"]], "preconcat() (matrix method)": [[141, "skia.Matrix.preConcat"]], "prerotate() (matrix method)": [[141, "skia.Matrix.preRotate"]], "prescale() (matrix method)": [[141, "skia.Matrix.preScale"]], "preskew() (matrix method)": [[141, "skia.Matrix.preSkew"]], "pretranslate() (matrix method)": [[141, "skia.Matrix.preTranslate"]], "preservesaxisalignment() (matrix method)": [[141, "skia.Matrix.preservesAxisAlignment"]], "preservesrightangles() (matrix method)": [[141, "skia.Matrix.preservesRightAngles"]], "rc() (matrix method)": [[141, "skia.Matrix.rc"]], "rectstaysrect() (matrix method)": [[141, "skia.Matrix.rectStaysRect"]], "reset() (matrix method)": [[141, "skia.Matrix.reset"]], "set() (matrix method)": [[141, "skia.Matrix.set"]], "set9() (matrix method)": [[141, "skia.Matrix.set9"]], "setaffine() (matrix method)": [[141, "skia.Matrix.setAffine"]], "setall() (matrix method)": [[141, "skia.Matrix.setAll"]], "setconcat() (matrix method)": [[141, "skia.Matrix.setConcat"]], "setidentity() (matrix method)": [[141, "skia.Matrix.setIdentity"]], "setperspx() (matrix method)": [[141, "skia.Matrix.setPerspX"]], "setperspy() (matrix method)": [[141, "skia.Matrix.setPerspY"]], "setpolytopoly() (matrix method)": [[141, "skia.Matrix.setPolyToPoly"]], "setrsxform() (matrix method)": [[141, "skia.Matrix.setRSXform"]], "setrecttorect() (matrix method)": [[141, "skia.Matrix.setRectToRect"]], "setrotate() (matrix method)": [[141, "skia.Matrix.setRotate"]], "setscale() (matrix method)": [[141, "skia.Matrix.setScale"]], "setscaletranslate() (matrix method)": [[141, "skia.Matrix.setScaleTranslate"]], "setscalex() (matrix method)": [[141, "skia.Matrix.setScaleX"]], "setscaley() (matrix method)": [[141, "skia.Matrix.setScaleY"]], "setsincos() (matrix method)": [[141, "skia.Matrix.setSinCos"]], "setskew() (matrix method)": [[141, "skia.Matrix.setSkew"]], "setskewx() (matrix method)": [[141, "skia.Matrix.setSkewX"]], "setskewy() (matrix method)": [[141, "skia.Matrix.setSkewY"]], "settranslate() (matrix method)": [[141, "skia.Matrix.setTranslate"]], "settranslatex() (matrix method)": [[141, "skia.Matrix.setTranslateX"]], "settranslatey() (matrix method)": [[141, "skia.Matrix.setTranslateY"]], "scaletofit (class in skia.matrix)": [[142, "skia.Matrix.ScaleToFit"]], "__init__() (scaletofit method)": [[142, "skia.Matrix.ScaleToFit.__init__"]], "kcenter_scaletofit (scaletofit attribute)": [[142, "skia.Matrix.ScaleToFit.kCenter_ScaleToFit"]], "kend_scaletofit (scaletofit attribute)": [[142, "skia.Matrix.ScaleToFit.kEnd_ScaleToFit"]], "kfill_scaletofit (scaletofit attribute)": [[142, "skia.Matrix.ScaleToFit.kFill_ScaleToFit"]], "kstart_scaletofit (scaletofit attribute)": [[142, "skia.Matrix.ScaleToFit.kStart_ScaleToFit"]], "name (scaletofit attribute)": [[142, "skia.Matrix.ScaleToFit.name"]], "value (scaletofit attribute)": [[142, "skia.Matrix.ScaleToFit.value"]], "typemask (class in skia.matrix)": [[143, "skia.Matrix.TypeMask"]], "__init__() (typemask method)": [[143, "skia.Matrix.TypeMask.__init__"]], "kaffine_mask (typemask attribute)": [[143, "skia.Matrix.TypeMask.kAffine_Mask"]], "kidentity_mask (typemask attribute)": [[143, "skia.Matrix.TypeMask.kIdentity_Mask"]], "kperspective_mask (typemask attribute)": [[143, "skia.Matrix.TypeMask.kPerspective_Mask"]], "kscale_mask (typemask attribute)": [[143, "skia.Matrix.TypeMask.kScale_Mask"]], "ktranslate_mask (typemask attribute)": [[143, "skia.Matrix.TypeMask.kTranslate_Mask"]], "name (typemask attribute)": [[143, "skia.Matrix.TypeMask.name"]], "value (typemask attribute)": [[143, "skia.Matrix.TypeMask.value"]], "make() (memorystream static method)": [[144, "skia.MemoryStream.Make"]], "makecopy() (memorystream static method)": [[144, "skia.MemoryStream.MakeCopy"]], "makedirect() (memorystream static method)": [[144, "skia.MemoryStream.MakeDirect"]], "makefromfile() (memorystream static method)": [[144, "skia.MemoryStream.MakeFromFile"]], "memorystream (class in skia)": [[144, "skia.MemoryStream"]], "__init__() (memorystream method)": [[144, "skia.MemoryStream.__init__"]], "asdata() (memorystream method)": [[144, "skia.MemoryStream.asData"]], "duplicate() (memorystream method)": [[144, "skia.MemoryStream.duplicate"]], "fork() (memorystream method)": [[144, "skia.MemoryStream.fork"]], "getatpos() (memorystream method)": [[144, "skia.MemoryStream.getAtPos"]], "getlength() (memorystream method)": [[144, "skia.MemoryStream.getLength"]], "getmemorybase() (memorystream method)": [[144, "skia.MemoryStream.getMemoryBase"]], "getposition() (memorystream method)": [[144, "skia.MemoryStream.getPosition"]], "haslength() (memorystream method)": [[144, "skia.MemoryStream.hasLength"]], "hasposition() (memorystream method)": [[144, "skia.MemoryStream.hasPosition"]], "isatend() (memorystream method)": [[144, "skia.MemoryStream.isAtEnd"]], "move() (memorystream method)": [[144, "skia.MemoryStream.move"]], "peek() (memorystream method)": [[144, "skia.MemoryStream.peek"]], "read() (memorystream method)": [[144, "skia.MemoryStream.read"]], "readbool() (memorystream method)": [[144, "skia.MemoryStream.readBool"]], "readpackeduint() (memorystream method)": [[144, "skia.MemoryStream.readPackedUInt"]], "reads16() (memorystream method)": [[144, "skia.MemoryStream.readS16"]], "reads32() (memorystream method)": [[144, "skia.MemoryStream.readS32"]], "reads8() (memorystream method)": [[144, "skia.MemoryStream.readS8"]], "readscalar() (memorystream method)": [[144, "skia.MemoryStream.readScalar"]], "readu16() (memorystream method)": [[144, "skia.MemoryStream.readU16"]], "readu32() (memorystream method)": [[144, "skia.MemoryStream.readU32"]], "readu8() (memorystream method)": [[144, "skia.MemoryStream.readU8"]], "rewind() (memorystream method)": [[144, "skia.MemoryStream.rewind"]], "seek() (memorystream method)": [[144, "skia.MemoryStream.seek"]], "setdata() (memorystream method)": [[144, "skia.MemoryStream.setData"]], "setmemory() (memorystream method)": [[144, "skia.MemoryStream.setMemory"]], "skip() (memorystream method)": [[144, "skia.MemoryStream.skip"]], "skiptoalign4() (memorystream method)": [[144, "skia.MemoryStream.skipToAlign4"]], "mipmapbuilder (class in skia)": [[145, "skia.MipmapBuilder"]], "__init__() (mipmapbuilder method)": [[145, "skia.MipmapBuilder.__init__"]], "attachto() (mipmapbuilder method)": [[145, "skia.MipmapBuilder.attachTo"]], "countlevels() (mipmapbuilder method)": [[145, "skia.MipmapBuilder.countLevels"]], "level() (mipmapbuilder method)": [[145, "skia.MipmapBuilder.level"]], "nullwstream (class in skia)": [[146, "skia.NullWStream"]], "sizeofpackeduint() (nullwstream static method)": [[146, "skia.NullWStream.SizeOfPackedUInt"]], "__init__() (nullwstream method)": [[146, "skia.NullWStream.__init__"]], "byteswritten() (nullwstream method)": [[146, "skia.NullWStream.bytesWritten"]], "flush() (nullwstream method)": [[146, "skia.NullWStream.flush"]], "newline() (nullwstream method)": [[146, "skia.NullWStream.newline"]], "write() (nullwstream method)": [[146, "skia.NullWStream.write"]], "write16() (nullwstream method)": [[146, "skia.NullWStream.write16"]], "write32() (nullwstream method)": [[146, "skia.NullWStream.write32"]], "write8() (nullwstream method)": [[146, "skia.NullWStream.write8"]], "writebigdecastext() (nullwstream method)": [[146, "skia.NullWStream.writeBigDecAsText"]], "writebool() (nullwstream method)": [[146, "skia.NullWStream.writeBool"]], "writedecastext() (nullwstream method)": [[146, "skia.NullWStream.writeDecAsText"]], "writehexastext() (nullwstream method)": [[146, "skia.NullWStream.writeHexAsText"]], "writepackeduint() (nullwstream method)": [[146, "skia.NullWStream.writePackedUInt"]], "writescalar() (nullwstream method)": [[146, "skia.NullWStream.writeScalar"]], "writescalarastext() (nullwstream method)": [[146, "skia.NullWStream.writeScalarAsText"]], "writestream() (nullwstream method)": [[146, "skia.NullWStream.writeStream"]], "writetext() (nullwstream method)": [[146, "skia.NullWStream.writeText"]], "opbuilder (class in skia)": [[147, "skia.OpBuilder"]], "__init__() (opbuilder method)": [[147, "skia.OpBuilder.__init__"]], "add() (opbuilder method)": [[147, "skia.OpBuilder.add"]], "resolve() (opbuilder method)": [[147, "skia.OpBuilder.resolve"]], "makewithcolors() (overdrawcolorfilter static method)": [[148, "skia.OverdrawColorFilter.MakeWithColors"]], "overdrawcolorfilter (class in skia)": [[148, "skia.OverdrawColorFilter"]], "__init__() (overdrawcolorfilter method)": [[148, "skia.OverdrawColorFilter.__init__"]], "knumcolors (overdrawcolorfilter attribute)": [[148, "skia.OverdrawColorFilter.kNumColors"]], "makedocument() (pdf static method)": [[149, "skia.PDF.MakeDocument"]], "pdf (class in skia)": [[149, "skia.PDF"]], "setnodeid() (pdf static method)": [[149, "skia.PDF.SetNodeId"]], "__init__() (pdf method)": [[149, "skia.PDF.__init__"]], "attributelist (class in skia.pdf)": [[150, "skia.PDF.AttributeList"]], "__init__() (attributelist method)": [[150, "skia.PDF.AttributeList.__init__"]], "appendfloat() (attributelist method)": [[150, "skia.PDF.AttributeList.appendFloat"]], "appendfloatarray() (attributelist method)": [[150, "skia.PDF.AttributeList.appendFloatArray"]], "appendint() (attributelist method)": [[150, "skia.PDF.AttributeList.appendInt"]], "appendstring() (attributelist method)": [[150, "skia.PDF.AttributeList.appendString"]], "appendstringarray() (attributelist method)": [[150, "skia.PDF.AttributeList.appendStringArray"]], "metadata (class in skia.pdf)": [[151, "skia.PDF.Metadata"]], "fauthor (metadata attribute)": [[151, "skia.PDF.Metadata.fAuthor"]], "fcreator (metadata attribute)": [[151, "skia.PDF.Metadata.fCreator"]], "fencodingquality (metadata attribute)": [[151, "skia.PDF.Metadata.fEncodingQuality"]], "fkeywords (metadata attribute)": [[151, "skia.PDF.Metadata.fKeywords"]], "fpdfa (metadata attribute)": [[151, "skia.PDF.Metadata.fPDFA"]], "fproducer (metadata attribute)": [[151, "skia.PDF.Metadata.fProducer"]], "frasterdpi (metadata attribute)": [[151, "skia.PDF.Metadata.fRasterDPI"]], "fstructureelementtreeroot (metadata attribute)": [[151, "skia.PDF.Metadata.fStructureElementTreeRoot"]], "fsubject (metadata attribute)": [[151, "skia.PDF.Metadata.fSubject"]], "ftitle (metadata attribute)": [[151, "skia.PDF.Metadata.fTitle"]], "structureelementnode (class in skia.pdf)": [[152, "skia.PDF.StructureElementNode"]], "__init__() (structureelementnode method)": [[152, "skia.PDF.StructureElementNode.__init__"]], "fadditionalnodeids (structureelementnode attribute)": [[152, "skia.PDF.StructureElementNode.fAdditionalNodeIds"]], "falt (structureelementnode attribute)": [[152, "skia.PDF.StructureElementNode.fAlt"]], "fattributes (structureelementnode attribute)": [[152, "skia.PDF.StructureElementNode.fAttributes"]], "flang (structureelementnode attribute)": [[152, "skia.PDF.StructureElementNode.fLang"]], "fnodeid (structureelementnode attribute)": [[152, "skia.PDF.StructureElementNode.fNodeId"]], "ftypestring (structureelementnode attribute)": [[152, "skia.PDF.StructureElementNode.fTypeString"]], "paint (class in skia)": [[153, "skia.Paint"]], "__init__() (paint method)": [[153, "skia.Paint.__init__"]], "cancomputefastbounds() (paint method)": [[153, "skia.Paint.canComputeFastBounds"]], "computefastbounds() (paint method)": [[153, "skia.Paint.computeFastBounds"]], "computefaststrokebounds() (paint method)": [[153, "skia.Paint.computeFastStrokeBounds"]], "docomputefastbounds() (paint method)": [[153, "skia.Paint.doComputeFastBounds"]], "getalpha() (paint method)": [[153, "skia.Paint.getAlpha"]], "getalphaf() (paint method)": [[153, "skia.Paint.getAlphaf"]], "getcolor() (paint method)": [[153, "skia.Paint.getColor"]], "getcolor4f() (paint method)": [[153, "skia.Paint.getColor4f"]], "getcolorfilter() (paint method)": [[153, "skia.Paint.getColorFilter"]], "getfillpath() (paint method)": [[153, "skia.Paint.getFillPath"]], "getimagefilter() (paint method)": [[153, "skia.Paint.getImageFilter"]], "getmaskfilter() (paint method)": [[153, "skia.Paint.getMaskFilter"]], "getpatheffect() (paint method)": [[153, "skia.Paint.getPathEffect"]], "getshader() (paint method)": [[153, "skia.Paint.getShader"]], "getstrokecap() (paint method)": [[153, "skia.Paint.getStrokeCap"]], "getstrokejoin() (paint method)": [[153, "skia.Paint.getStrokeJoin"]], "getstrokemiter() (paint method)": [[153, "skia.Paint.getStrokeMiter"]], "getstrokewidth() (paint method)": [[153, "skia.Paint.getStrokeWidth"]], "getstyle() (paint method)": [[153, "skia.Paint.getStyle"]], "isantialias() (paint method)": [[153, "skia.Paint.isAntiAlias"]], "isdither() (paint method)": [[153, "skia.Paint.isDither"]], "issrcover() (paint method)": [[153, "skia.Paint.isSrcOver"]], "kbevel_join (paint attribute)": [[153, "skia.Paint.kBevel_Join"]], "kbutt_cap (paint attribute)": [[153, "skia.Paint.kButt_Cap"]], "kcapcount (paint attribute)": [[153, "skia.Paint.kCapCount"]], "kdefault_cap (paint attribute)": [[153, "skia.Paint.kDefault_Cap"]], "kdefault_join (paint attribute)": [[153, "skia.Paint.kDefault_Join"]], "kfill_style (paint attribute)": [[153, "skia.Paint.kFill_Style"]], "kjoincount (paint attribute)": [[153, "skia.Paint.kJoinCount"]], "klast_cap (paint attribute)": [[153, "skia.Paint.kLast_Cap"]], "klast_join (paint attribute)": [[153, "skia.Paint.kLast_Join"]], "kmiter_join (paint attribute)": [[153, "skia.Paint.kMiter_Join"]], "kround_cap (paint attribute)": [[153, "skia.Paint.kRound_Cap"]], "kround_join (paint attribute)": [[153, "skia.Paint.kRound_Join"]], "ksquare_cap (paint attribute)": [[153, "skia.Paint.kSquare_Cap"]], "kstrokeandfill_style (paint attribute)": [[153, "skia.Paint.kStrokeAndFill_Style"]], "kstroke_style (paint attribute)": [[153, "skia.Paint.kStroke_Style"]], "kstylecount (paint attribute)": [[153, "skia.Paint.kStyleCount"]], "nothingtodraw() (paint method)": [[153, "skia.Paint.nothingToDraw"]], "refcolorfilter() (paint method)": [[153, "skia.Paint.refColorFilter"]], "refimagefilter() (paint method)": [[153, "skia.Paint.refImageFilter"]], "refmaskfilter() (paint method)": [[153, "skia.Paint.refMaskFilter"]], "refpatheffect() (paint method)": [[153, "skia.Paint.refPathEffect"]], "refshader() (paint method)": [[153, "skia.Paint.refShader"]], "reset() (paint method)": [[153, "skia.Paint.reset"]], "setargb() (paint method)": [[153, "skia.Paint.setARGB"]], "setalpha() (paint method)": [[153, "skia.Paint.setAlpha"]], "setalphaf() (paint method)": [[153, "skia.Paint.setAlphaf"]], "setantialias() (paint method)": [[153, "skia.Paint.setAntiAlias"]], "setblendmode() (paint method)": [[153, "skia.Paint.setBlendMode"]], "setcolor() (paint method)": [[153, "skia.Paint.setColor"]], "setcolor4f() (paint method)": [[153, "skia.Paint.setColor4f"]], "setcolorfilter() (paint method)": [[153, "skia.Paint.setColorFilter"]], "setdither() (paint method)": [[153, "skia.Paint.setDither"]], "setimagefilter() (paint method)": [[153, "skia.Paint.setImageFilter"]], "setmaskfilter() (paint method)": [[153, "skia.Paint.setMaskFilter"]], "setpatheffect() (paint method)": [[153, "skia.Paint.setPathEffect"]], "setshader() (paint method)": [[153, "skia.Paint.setShader"]], "setstrokecap() (paint method)": [[153, "skia.Paint.setStrokeCap"]], "setstrokejoin() (paint method)": [[153, "skia.Paint.setStrokeJoin"]], "setstrokemiter() (paint method)": [[153, "skia.Paint.setStrokeMiter"]], "setstrokewidth() (paint method)": [[153, "skia.Paint.setStrokeWidth"]], "setstyle() (paint method)": [[153, "skia.Paint.setStyle"]], "cap (class in skia.paint)": [[154, "skia.Paint.Cap"]], "__init__() (cap method)": [[154, "skia.Paint.Cap.__init__"]], "kbutt_cap (cap attribute)": [[154, "skia.Paint.Cap.kButt_Cap"]], "kdefault_cap (cap attribute)": [[154, "skia.Paint.Cap.kDefault_Cap"]], "klast_cap (cap attribute)": [[154, "skia.Paint.Cap.kLast_Cap"]], "kround_cap (cap attribute)": [[154, "skia.Paint.Cap.kRound_Cap"]], "ksquare_cap (cap attribute)": [[154, "skia.Paint.Cap.kSquare_Cap"]], "name (cap attribute)": [[154, "skia.Paint.Cap.name"]], "value (cap attribute)": [[154, "skia.Paint.Cap.value"]], "join (class in skia.paint)": [[155, "skia.Paint.Join"]], "__init__() (join method)": [[155, "skia.Paint.Join.__init__"]], "kbevel_join (join attribute)": [[155, "skia.Paint.Join.kBevel_Join"]], "kdefault_join (join attribute)": [[155, "skia.Paint.Join.kDefault_Join"]], "klast_join (join attribute)": [[155, "skia.Paint.Join.kLast_Join"]], "kmiter_join (join attribute)": [[155, "skia.Paint.Join.kMiter_Join"]], "kround_join (join attribute)": [[155, "skia.Paint.Join.kRound_Join"]], "name (join attribute)": [[155, "skia.Paint.Join.name"]], "value (join attribute)": [[155, "skia.Paint.Join.value"]], "style (class in skia.paint)": [[156, "skia.Paint.Style"]], "__init__() (style method)": [[156, "skia.Paint.Style.__init__"], [165, "skia.Path1DPathEffect.Style.__init__"], [217, "skia.StrokeRec.Style.__init__"]], "kfill_style (style attribute)": [[156, "skia.Paint.Style.kFill_Style"], [217, "skia.StrokeRec.Style.kFill_Style"]], "kstrokeandfill_style (style attribute)": [[156, "skia.Paint.Style.kStrokeAndFill_Style"], [217, "skia.StrokeRec.Style.kStrokeAndFill_Style"]], "kstroke_style (style attribute)": [[156, "skia.Paint.Style.kStroke_Style"], [217, "skia.StrokeRec.Style.kStroke_Style"]], "name (style attribute)": [[156, "skia.Paint.Style.name"], [165, "skia.Path1DPathEffect.Style.name"], [217, "skia.StrokeRec.Style.name"]], "value (style attribute)": [[156, "skia.Paint.Style.value"], [165, "skia.Path1DPathEffect.Style.value"], [217, "skia.StrokeRec.Style.value"]], "circle() (path static method)": [[157, "skia.Path.Circle"]], "convertconictoquads() (path static method)": [[157, "skia.Path.ConvertConicToQuads"]], "iscubicdegenerate() (path static method)": [[157, "skia.Path.IsCubicDegenerate"]], "islinedegenerate() (path static method)": [[157, "skia.Path.IsLineDegenerate"]], "isquaddegenerate() (path static method)": [[157, "skia.Path.IsQuadDegenerate"]], "line() (path static method)": [[157, "skia.Path.Line"]], "make() (path static method)": [[157, "skia.Path.Make"]], "oval() (path static method)": [[157, "skia.Path.Oval"]], "path (class in skia)": [[157, "skia.Path"]], "polygon() (path static method)": [[157, "skia.Path.Polygon"]], "rrect() (path static method)": [[157, "skia.Path.RRect"]], "rect() (path static method)": [[157, "skia.Path.Rect"]], "__init__() (path method)": [[157, "skia.Path.__init__"]], "addarc() (path method)": [[157, "skia.Path.addArc"]], "addcircle() (path method)": [[157, "skia.Path.addCircle"]], "addoval() (path method)": [[157, "skia.Path.addOval"]], "addpath() (path method)": [[157, "skia.Path.addPath"]], "addpoly() (path method)": [[157, "skia.Path.addPoly"]], "addrrect() (path method)": [[157, "skia.Path.addRRect"]], "addrect() (path method)": [[157, "skia.Path.addRect"]], "addroundrect() (path method)": [[157, "skia.Path.addRoundRect"]], "approximatebytesused() (path method)": [[157, "skia.Path.approximateBytesUsed"]], "arcto() (path method)": [[157, "skia.Path.arcTo"]], "close() (path method)": [[157, "skia.Path.close"]], "computetightbounds() (path method)": [[157, "skia.Path.computeTightBounds"]], "conicto() (path method)": [[157, "skia.Path.conicTo"]], "conservativelycontainsrect() (path method)": [[157, "skia.Path.conservativelyContainsRect"]], "contains() (path method)": [[157, "skia.Path.contains"]], "countpoints() (path method)": [[157, "skia.Path.countPoints"]], "countverbs() (path method)": [[157, "skia.Path.countVerbs"]], "cubicto() (path method)": [[157, "skia.Path.cubicTo"]], "dump() (path method)": [[157, "skia.Path.dump"]], "dumphex() (path method)": [[157, "skia.Path.dumpHex"]], "getbounds() (path method)": [[157, "skia.Path.getBounds"]], "getfilltype() (path method)": [[157, "skia.Path.getFillType"]], "getgenerationid() (path method)": [[157, "skia.Path.getGenerationID"]], "getlastpt() (path method)": [[157, "skia.Path.getLastPt"]], "getpoint() (path method)": [[157, "skia.Path.getPoint"]], "getpoints() (path method)": [[157, "skia.Path.getPoints"]], "getsegmentmasks() (path method)": [[157, "skia.Path.getSegmentMasks"]], "getverbs() (path method)": [[157, "skia.Path.getVerbs"]], "increserve() (path method)": [[157, "skia.Path.incReserve"]], "interpolate() (path method)": [[157, "skia.Path.interpolate"]], "isconvex() (path method)": [[157, "skia.Path.isConvex"]], "isempty() (path method)": [[157, "skia.Path.isEmpty"]], "isfinite() (path method)": [[157, "skia.Path.isFinite"]], "isinterpolatable() (path method)": [[157, "skia.Path.isInterpolatable"]], "isinversefilltype() (path method)": [[157, "skia.Path.isInverseFillType"]], "islastcontourclosed() (path method)": [[157, "skia.Path.isLastContourClosed"]], "isline() (path method)": [[157, "skia.Path.isLine"]], "isoval() (path method)": [[157, "skia.Path.isOval"]], "isrrect() (path method)": [[157, "skia.Path.isRRect"]], "isrect() (path method)": [[157, "skia.Path.isRect"]], "isvalid() (path method)": [[157, "skia.Path.isValid"]], "isvolatile() (path method)": [[157, "skia.Path.isVolatile"]], "kappend_addpathmode (path attribute)": [[157, "skia.Path.kAppend_AddPathMode"]], "kclose_verb (path attribute)": [[157, "skia.Path.kClose_Verb"]], "kconic_segmentmask (path attribute)": [[157, "skia.Path.kConic_SegmentMask"]], "kconic_verb (path attribute)": [[157, "skia.Path.kConic_Verb"]], "kcubic_segmentmask (path attribute)": [[157, "skia.Path.kCubic_SegmentMask"]], "kcubic_verb (path attribute)": [[157, "skia.Path.kCubic_Verb"]], "kdone_verb (path attribute)": [[157, "skia.Path.kDone_Verb"]], "kextend_addpathmode (path attribute)": [[157, "skia.Path.kExtend_AddPathMode"]], "klarge_arcsize (path attribute)": [[157, "skia.Path.kLarge_ArcSize"]], "kline_segmentmask (path attribute)": [[157, "skia.Path.kLine_SegmentMask"]], "kline_verb (path attribute)": [[157, "skia.Path.kLine_Verb"]], "kmove_verb (path attribute)": [[157, "skia.Path.kMove_Verb"]], "kquad_segmentmask (path attribute)": [[157, "skia.Path.kQuad_SegmentMask"]], "kquad_verb (path attribute)": [[157, "skia.Path.kQuad_Verb"]], "ksmall_arcsize (path attribute)": [[157, "skia.Path.kSmall_ArcSize"]], "lineto() (path method)": [[157, "skia.Path.lineTo"]], "moveto() (path method)": [[157, "skia.Path.moveTo"]], "offset() (path method)": [[157, "skia.Path.offset"]], "quadto() (path method)": [[157, "skia.Path.quadTo"]], "rarcto() (path method)": [[157, "skia.Path.rArcTo"]], "rconicto() (path method)": [[157, "skia.Path.rConicTo"]], "rcubicto() (path method)": [[157, "skia.Path.rCubicTo"]], "rlineto() (path method)": [[157, "skia.Path.rLineTo"]], "rmoveto() (path method)": [[157, "skia.Path.rMoveTo"]], "rquadto() (path method)": [[157, "skia.Path.rQuadTo"]], "readfrommemory() (path method)": [[157, "skia.Path.readFromMemory"]], "reset() (path method)": [[157, "skia.Path.reset"]], "reverseaddpath() (path method)": [[157, "skia.Path.reverseAddPath"]], "rewind() (path method)": [[157, "skia.Path.rewind"]], "serialize() (path method)": [[157, "skia.Path.serialize"]], "setfilltype() (path method)": [[157, "skia.Path.setFillType"]], "setisvolatile() (path method)": [[157, "skia.Path.setIsVolatile"]], "setlastpt() (path method)": [[157, "skia.Path.setLastPt"]], "swap() (path method)": [[157, "skia.Path.swap"]], "toggleinversefilltype() (path method)": [[157, "skia.Path.toggleInverseFillType"]], "transform() (path method)": [[157, "skia.Path.transform"]], "updateboundscache() (path method)": [[157, "skia.Path.updateBoundsCache"]], "writetomemory() (path method)": [[157, "skia.Path.writeToMemory"]], "addpathmode (class in skia.path)": [[158, "skia.Path.AddPathMode"]], "__init__() (addpathmode method)": [[158, "skia.Path.AddPathMode.__init__"]], "kappend_addpathmode (addpathmode attribute)": [[158, "skia.Path.AddPathMode.kAppend_AddPathMode"]], "kextend_addpathmode (addpathmode attribute)": [[158, "skia.Path.AddPathMode.kExtend_AddPathMode"]], "name (addpathmode attribute)": [[158, "skia.Path.AddPathMode.name"]], "value (addpathmode attribute)": [[158, "skia.Path.AddPathMode.value"]], "arcsize (class in skia.path)": [[159, "skia.Path.ArcSize"]], "__init__() (arcsize method)": [[159, "skia.Path.ArcSize.__init__"], [168, "skia.PathBuilder.ArcSize.__init__"]], "klarge_arcsize (arcsize attribute)": [[159, "skia.Path.ArcSize.kLarge_ArcSize"], [168, "skia.PathBuilder.ArcSize.kLarge_ArcSize"]], "ksmall_arcsize (arcsize attribute)": [[159, "skia.Path.ArcSize.kSmall_ArcSize"], [168, "skia.PathBuilder.ArcSize.kSmall_ArcSize"]], "name (arcsize attribute)": [[159, "skia.Path.ArcSize.name"], [168, "skia.PathBuilder.ArcSize.name"]], "value (arcsize attribute)": [[159, "skia.Path.ArcSize.value"], [168, "skia.PathBuilder.ArcSize.value"]], "iter (class in skia.path)": [[160, "skia.Path.Iter"]], "__init__() (iter method)": [[160, "skia.Path.Iter.__init__"], [230, "skia.TextBlob.Iter.__init__"]], "conicweight() (iter method)": [[160, "skia.Path.Iter.conicWeight"]], "iscloseline() (iter method)": [[160, "skia.Path.Iter.isCloseLine"]], "isclosedcontour() (iter method)": [[160, "skia.Path.Iter.isClosedContour"]], "next() (iter method)": [[160, "skia.Path.Iter.next"], [230, "skia.TextBlob.Iter.next"]], "setpath() (iter method)": [[160, "skia.Path.Iter.setPath"]], "rawiter (class in skia.path)": [[161, "skia.Path.RawIter"]], "__init__() (rawiter method)": [[161, "skia.Path.RawIter.__init__"]], "conicweight() (rawiter method)": [[161, "skia.Path.RawIter.conicWeight"]], "next() (rawiter method)": [[161, "skia.Path.RawIter.next"]], "peek() (rawiter method)": [[161, "skia.Path.RawIter.peek"]], "setpath() (rawiter method)": [[161, "skia.Path.RawIter.setPath"]], "segmentmask (class in skia.path)": [[162, "skia.Path.SegmentMask"]], "__init__() (segmentmask method)": [[162, "skia.Path.SegmentMask.__init__"]], "kconic_segmentmask (segmentmask attribute)": [[162, "skia.Path.SegmentMask.kConic_SegmentMask"]], "kcubic_segmentmask (segmentmask attribute)": [[162, "skia.Path.SegmentMask.kCubic_SegmentMask"]], "kline_segmentmask (segmentmask attribute)": [[162, "skia.Path.SegmentMask.kLine_SegmentMask"]], "kquad_segmentmask (segmentmask attribute)": [[162, "skia.Path.SegmentMask.kQuad_SegmentMask"]], "name (segmentmask attribute)": [[162, "skia.Path.SegmentMask.name"]], "value (segmentmask attribute)": [[162, "skia.Path.SegmentMask.value"]], "verb (class in skia.path)": [[163, "skia.Path.Verb"]], "__init__() (verb method)": [[163, "skia.Path.Verb.__init__"]], "kclose_verb (verb attribute)": [[163, "skia.Path.Verb.kClose_Verb"]], "kconic_verb (verb attribute)": [[163, "skia.Path.Verb.kConic_Verb"]], "kcubic_verb (verb attribute)": [[163, "skia.Path.Verb.kCubic_Verb"]], "kdone_verb (verb attribute)": [[163, "skia.Path.Verb.kDone_Verb"]], "kline_verb (verb attribute)": [[163, "skia.Path.Verb.kLine_Verb"]], "kmove_verb (verb attribute)": [[163, "skia.Path.Verb.kMove_Verb"]], "kquad_verb (verb attribute)": [[163, "skia.Path.Verb.kQuad_Verb"]], "name (verb attribute)": [[163, "skia.Path.Verb.name"]], "value (verb attribute)": [[163, "skia.Path.Verb.value"]], "make() (path1dpatheffect static method)": [[164, "skia.Path1DPathEffect.Make"]], "path1dpatheffect (class in skia)": [[164, "skia.Path1DPathEffect"]], "__init__() (path1dpatheffect method)": [[164, "skia.Path1DPathEffect.__init__"]], "klastenum_style (path1dpatheffect attribute)": [[164, "skia.Path1DPathEffect.kLastEnum_Style"]], "kmorph_style (path1dpatheffect attribute)": [[164, "skia.Path1DPathEffect.kMorph_Style"]], "krotate_style (path1dpatheffect attribute)": [[164, "skia.Path1DPathEffect.kRotate_Style"]], "ktranslate_style (path1dpatheffect attribute)": [[164, "skia.Path1DPathEffect.kTranslate_Style"]], "style (class in skia.path1dpatheffect)": [[165, "skia.Path1DPathEffect.Style"]], "klastenum_style (style attribute)": [[165, "skia.Path1DPathEffect.Style.kLastEnum_Style"]], "kmorph_style (style attribute)": [[165, "skia.Path1DPathEffect.Style.kMorph_Style"]], "krotate_style (style attribute)": [[165, "skia.Path1DPathEffect.Style.kRotate_Style"]], "ktranslate_style (style attribute)": [[165, "skia.Path1DPathEffect.Style.kTranslate_Style"]], "make() (path2dpatheffect static method)": [[166, "skia.Path2DPathEffect.Make"]], "path2dpatheffect (class in skia)": [[166, "skia.Path2DPathEffect"]], "__init__() (path2dpatheffect method)": [[166, "skia.Path2DPathEffect.__init__"]], "pathbuilder (class in skia)": [[167, "skia.PathBuilder"]], "__init__() (pathbuilder method)": [[167, "skia.PathBuilder.__init__"]], "addarc() (pathbuilder method)": [[167, "skia.PathBuilder.addArc"]], "addcircle() (pathbuilder method)": [[167, "skia.PathBuilder.addCircle"]], "addoval() (pathbuilder method)": [[167, "skia.PathBuilder.addOval"]], "addpolygon() (pathbuilder method)": [[167, "skia.PathBuilder.addPolygon"]], "addrrect() (pathbuilder method)": [[167, "skia.PathBuilder.addRRect"]], "addrect() (pathbuilder method)": [[167, "skia.PathBuilder.addRect"]], "arcto() (pathbuilder method)": [[167, "skia.PathBuilder.arcTo"]], "close() (pathbuilder method)": [[167, "skia.PathBuilder.close"]], "computebounds() (pathbuilder method)": [[167, "skia.PathBuilder.computeBounds"]], "conicto() (pathbuilder method)": [[167, "skia.PathBuilder.conicTo"]], "cubicto() (pathbuilder method)": [[167, "skia.PathBuilder.cubicTo"]], "detach() (pathbuilder method)": [[167, "skia.PathBuilder.detach"]], "filltype() (pathbuilder method)": [[167, "skia.PathBuilder.fillType"]], "increserve() (pathbuilder method)": [[167, "skia.PathBuilder.incReserve"]], "klarge_arcsize (pathbuilder attribute)": [[167, "skia.PathBuilder.kLarge_ArcSize"]], "ksmall_arcsize (pathbuilder attribute)": [[167, "skia.PathBuilder.kSmall_ArcSize"]], "lineto() (pathbuilder method)": [[167, "skia.PathBuilder.lineTo"]], "moveto() (pathbuilder method)": [[167, "skia.PathBuilder.moveTo"]], "offset() (pathbuilder method)": [[167, "skia.PathBuilder.offset"]], "polylineto() (pathbuilder method)": [[167, "skia.PathBuilder.polylineTo"]], "quadto() (pathbuilder method)": [[167, "skia.PathBuilder.quadTo"]], "rconicto() (pathbuilder method)": [[167, "skia.PathBuilder.rConicTo"]], "rcubicto() (pathbuilder method)": [[167, "skia.PathBuilder.rCubicTo"]], "rlineto() (pathbuilder method)": [[167, "skia.PathBuilder.rLineTo"]], "rquadto() (pathbuilder method)": [[167, "skia.PathBuilder.rQuadTo"]], "reset() (pathbuilder method)": [[167, "skia.PathBuilder.reset"]], "setfilltype() (pathbuilder method)": [[167, "skia.PathBuilder.setFillType"]], "setisvolatile() (pathbuilder method)": [[167, "skia.PathBuilder.setIsVolatile"]], "snapshot() (pathbuilder method)": [[167, "skia.PathBuilder.snapshot"]], "toggleinversefilltype() (pathbuilder method)": [[167, "skia.PathBuilder.toggleInverseFillType"]], "arcsize (class in skia.pathbuilder)": [[168, "skia.PathBuilder.ArcSize"]], "pathdirection (class in skia)": [[169, "skia.PathDirection"]], "__init__() (pathdirection method)": [[169, "skia.PathDirection.__init__"]], "kccw (pathdirection attribute)": [[169, "skia.PathDirection.kCCW"]], "kcw (pathdirection attribute)": [[169, "skia.PathDirection.kCW"]], "name (pathdirection attribute)": [[169, "skia.PathDirection.name"]], "value (pathdirection attribute)": [[169, "skia.PathDirection.value"]], "deserialize() (patheffect static method)": [[170, "skia.PathEffect.Deserialize"]], "getflattenabletype() (patheffect static method)": [[170, "skia.PathEffect.GetFlattenableType"]], "makecompose() (patheffect static method)": [[170, "skia.PathEffect.MakeCompose"]], "makesum() (patheffect static method)": [[170, "skia.PathEffect.MakeSum"]], "patheffect (class in skia)": [[170, "skia.PathEffect"]], "__init__() (patheffect method)": [[170, "skia.PathEffect.__init__"]], "asadash() (patheffect method)": [[170, "skia.PathEffect.asADash"]], "filterpath() (patheffect method)": [[170, "skia.PathEffect.filterPath"]], "getflattenabletype() (patheffect method)": [[170, "skia.PathEffect.getFlattenableType"]], "gettypename() (patheffect method)": [[170, "skia.PathEffect.getTypeName"]], "kcolorfilter_type (patheffect attribute)": [[170, "skia.PathEffect.kColorFilter_Type"]], "kdash_dashtype (patheffect attribute)": [[170, "skia.PathEffect.kDash_DashType"]], "kdrawlooper_type (patheffect attribute)": [[170, "skia.PathEffect.kDrawLooper_Type"]], "kdrawable_type (patheffect attribute)": [[170, "skia.PathEffect.kDrawable_Type"]], "kimagefilter_type (patheffect attribute)": [[170, "skia.PathEffect.kImageFilter_Type"]], "kmaskfilter_type (patheffect attribute)": [[170, "skia.PathEffect.kMaskFilter_Type"]], "knone_dashtype (patheffect attribute)": [[170, "skia.PathEffect.kNone_DashType"]], "kpatheffect_type (patheffect attribute)": [[170, "skia.PathEffect.kPathEffect_Type"]], "ref() (patheffect method)": [[170, "skia.PathEffect.ref"]], "serialize() (patheffect method)": [[170, "skia.PathEffect.serialize"]], "unique() (patheffect method)": [[170, "skia.PathEffect.unique"]], "unref() (patheffect method)": [[170, "skia.PathEffect.unref"]], "dashinfo (class in skia.patheffect)": [[171, "skia.PathEffect.DashInfo"]], "__init__() (dashinfo method)": [[171, "skia.PathEffect.DashInfo.__init__"]], "fcount (dashinfo attribute)": [[171, "skia.PathEffect.DashInfo.fCount"]], "fintervals (dashinfo attribute)": [[171, "skia.PathEffect.DashInfo.fIntervals"]], "fphase (dashinfo attribute)": [[171, "skia.PathEffect.DashInfo.fPhase"]], "dashtype (class in skia.patheffect)": [[172, "skia.PathEffect.DashType"]], "__init__() (dashtype method)": [[172, "skia.PathEffect.DashType.__init__"]], "kdash_dashtype (dashtype attribute)": [[172, "skia.PathEffect.DashType.kDash_DashType"]], "knone_dashtype (dashtype attribute)": [[172, "skia.PathEffect.DashType.kNone_DashType"]], "name (dashtype attribute)": [[172, "skia.PathEffect.DashType.name"]], "value (dashtype attribute)": [[172, "skia.PathEffect.DashType.value"]], "type (class in skia.patheffect)": [[173, "skia.PathEffect.Type"]], "pathfilltype (class in skia)": [[174, "skia.PathFillType"]], "__init__() (pathfilltype method)": [[174, "skia.PathFillType.__init__"]], "kevenodd (pathfilltype attribute)": [[174, "skia.PathFillType.kEvenOdd"]], "kinverseevenodd (pathfilltype attribute)": [[174, "skia.PathFillType.kInverseEvenOdd"]], "kinversewinding (pathfilltype attribute)": [[174, "skia.PathFillType.kInverseWinding"]], "kwinding (pathfilltype attribute)": [[174, "skia.PathFillType.kWinding"]], "name (pathfilltype attribute)": [[174, "skia.PathFillType.name"]], "value (pathfilltype attribute)": [[174, "skia.PathFillType.value"]], "pathmeasure (class in skia)": [[175, "skia.PathMeasure"]], "__init__() (pathmeasure method)": [[175, "skia.PathMeasure.__init__"]], "getlength() (pathmeasure method)": [[175, "skia.PathMeasure.getLength"]], "getmatrix() (pathmeasure method)": [[175, "skia.PathMeasure.getMatrix"]], "getpostan() (pathmeasure method)": [[175, "skia.PathMeasure.getPosTan"]], "getsegment() (pathmeasure method)": [[175, "skia.PathMeasure.getSegment"]], "isclosed() (pathmeasure method)": [[175, "skia.PathMeasure.isClosed"]], "kgetposandtan_matrixflag (pathmeasure attribute)": [[175, "skia.PathMeasure.kGetPosAndTan_MatrixFlag"]], "kgetposition_matrixflag (pathmeasure attribute)": [[175, "skia.PathMeasure.kGetPosition_MatrixFlag"]], "kgettangent_matrixflag (pathmeasure attribute)": [[175, "skia.PathMeasure.kGetTangent_MatrixFlag"]], "nextcontour() (pathmeasure method)": [[175, "skia.PathMeasure.nextContour"]], "setpath() (pathmeasure method)": [[175, "skia.PathMeasure.setPath"]], "getposandtan (class in skia.pathmeasure)": [[176, "skia.PathMeasure.GetPosAndTan"]], "__init__() (getposandtan method)": [[176, "skia.PathMeasure.GetPosAndTan.__init__"]], "kgetposandtan_matrixflag (getposandtan attribute)": [[176, "skia.PathMeasure.GetPosAndTan.kGetPosAndTan_MatrixFlag"]], "kgetposition_matrixflag (getposandtan attribute)": [[176, "skia.PathMeasure.GetPosAndTan.kGetPosition_MatrixFlag"]], "kgettangent_matrixflag (getposandtan attribute)": [[176, "skia.PathMeasure.GetPosAndTan.kGetTangent_MatrixFlag"]], "name (getposandtan attribute)": [[176, "skia.PathMeasure.GetPosAndTan.name"]], "value (getposandtan attribute)": [[176, "skia.PathMeasure.GetPosAndTan.value"]], "pathop (class in skia)": [[177, "skia.PathOp"]], "__init__() (pathop method)": [[177, "skia.PathOp.__init__"]], "kdifference_pathop (pathop attribute)": [[177, "skia.PathOp.kDifference_PathOp"]], "kintersect_pathop (pathop attribute)": [[177, "skia.PathOp.kIntersect_PathOp"]], "kreversedifference_pathop (pathop attribute)": [[177, "skia.PathOp.kReverseDifference_PathOp"]], "kunion_pathop (pathop attribute)": [[177, "skia.PathOp.kUnion_PathOp"]], "kxor_pathop (pathop attribute)": [[177, "skia.PathOp.kXOR_PathOp"]], "name (pathop attribute)": [[177, "skia.PathOp.name"]], "value (pathop attribute)": [[177, "skia.PathOp.value"]], "pathsegmentmask (class in skia)": [[178, "skia.PathSegmentMask"]], "__init__() (pathsegmentmask method)": [[178, "skia.PathSegmentMask.__init__"]], "kconic_pathsegmentmask (pathsegmentmask attribute)": [[178, "skia.PathSegmentMask.kConic_PathSegmentMask"]], "kcubic_pathsegmentmask (pathsegmentmask attribute)": [[178, "skia.PathSegmentMask.kCubic_PathSegmentMask"]], "kline_pathsegmentmask (pathsegmentmask attribute)": [[178, "skia.PathSegmentMask.kLine_PathSegmentMask"]], "kquad_pathsegmentmask (pathsegmentmask attribute)": [[178, "skia.PathSegmentMask.kQuad_PathSegmentMask"]], "name (pathsegmentmask attribute)": [[178, "skia.PathSegmentMask.name"]], "value (pathsegmentmask attribute)": [[178, "skia.PathSegmentMask.value"]], "pathverb (class in skia)": [[179, "skia.PathVerb"]], "__init__() (pathverb method)": [[179, "skia.PathVerb.__init__"]], "kclose (pathverb attribute)": [[179, "skia.PathVerb.kClose"]], "kconic (pathverb attribute)": [[179, "skia.PathVerb.kConic"]], "kcubic (pathverb attribute)": [[179, "skia.PathVerb.kCubic"]], "kline (pathverb attribute)": [[179, "skia.PathVerb.kLine"]], "kmove (pathverb attribute)": [[179, "skia.PathVerb.kMove"]], "kquad (pathverb attribute)": [[179, "skia.PathVerb.kQuad"]], "name (pathverb attribute)": [[179, "skia.PathVerb.name"]], "value (pathverb attribute)": [[179, "skia.PathVerb.value"]], "makefractalnoise() (perlinnoiseshader static method)": [[180, "skia.PerlinNoiseShader.MakeFractalNoise"]], "maketurbulence() (perlinnoiseshader static method)": [[180, "skia.PerlinNoiseShader.MakeTurbulence"]], "perlinnoiseshader (class in skia)": [[180, "skia.PerlinNoiseShader"]], "__init__() (perlinnoiseshader method)": [[180, "skia.PerlinNoiseShader.__init__"]], "makefromdata() (picture static method)": [[181, "skia.Picture.MakeFromData"]], "makefromstream() (picture static method)": [[181, "skia.Picture.MakeFromStream"]], "makeplaceholder() (picture static method)": [[181, "skia.Picture.MakePlaceholder"]], "picture (class in skia)": [[181, "skia.Picture"]], "__init__() (picture method)": [[181, "skia.Picture.__init__"]], "approximatebytesused() (picture method)": [[181, "skia.Picture.approximateBytesUsed"]], "approximateopcount() (picture method)": [[181, "skia.Picture.approximateOpCount"]], "cullrect() (picture method)": [[181, "skia.Picture.cullRect"]], "makeshader() (picture method)": [[181, "skia.Picture.makeShader"]], "playback() (picture method)": [[181, "skia.Picture.playback"]], "ref() (picture method)": [[181, "skia.Picture.ref"]], "serialize() (picture method)": [[181, "skia.Picture.serialize"]], "unique() (picture method)": [[181, "skia.Picture.unique"]], "uniqueid() (picture method)": [[181, "skia.Picture.uniqueID"]], "unref() (picture method)": [[181, "skia.Picture.unref"]], "picturerecorder (class in skia)": [[182, "skia.PictureRecorder"]], "__init__() (picturerecorder method)": [[182, "skia.PictureRecorder.__init__"]], "beginrecording() (picturerecorder method)": [[182, "skia.PictureRecorder.beginRecording"]], "finishrecordingasdrawable() (picturerecorder method)": [[182, "skia.PictureRecorder.finishRecordingAsDrawable"]], "finishrecordingaspicture() (picturerecorder method)": [[182, "skia.PictureRecorder.finishRecordingAsPicture"]], "finishrecordingaspicturewithcull() (picturerecorder method)": [[182, "skia.PictureRecorder.finishRecordingAsPictureWithCull"]], "getrecordingcanvas() (picturerecorder method)": [[182, "skia.PictureRecorder.getRecordingCanvas"]], "pixelgeometry (class in skia)": [[183, "skia.PixelGeometry"]], "__init__() (pixelgeometry method)": [[183, "skia.PixelGeometry.__init__"]], "kbgr_h_pixelgeometry (pixelgeometry attribute)": [[183, "skia.PixelGeometry.kBGR_H_PixelGeometry"]], "kbgr_v_pixelgeometry (pixelgeometry attribute)": [[183, "skia.PixelGeometry.kBGR_V_PixelGeometry"]], "krgb_h_pixelgeometry (pixelgeometry attribute)": [[183, "skia.PixelGeometry.kRGB_H_PixelGeometry"]], "krgb_v_pixelgeometry (pixelgeometry attribute)": [[183, "skia.PixelGeometry.kRGB_V_PixelGeometry"]], "kunknown_pixelgeometry (pixelgeometry attribute)": [[183, "skia.PixelGeometry.kUnknown_PixelGeometry"]], "name (pixelgeometry attribute)": [[183, "skia.PixelGeometry.name"]], "value (pixelgeometry attribute)": [[183, "skia.PixelGeometry.value"]], "pixelref (class in skia)": [[184, "skia.PixelRef"]], "__init__() (pixelref method)": [[184, "skia.PixelRef.__init__"]], "pixmap (class in skia)": [[185, "skia.Pixmap"]], "__init__() (pixmap method)": [[185, "skia.Pixmap.__init__"]], "addr() (pixmap method)": [[185, "skia.Pixmap.addr"]], "addr16() (pixmap method)": [[185, "skia.Pixmap.addr16"]], "addr32() (pixmap method)": [[185, "skia.Pixmap.addr32"]], "addr64() (pixmap method)": [[185, "skia.Pixmap.addr64"]], "addr8() (pixmap method)": [[185, "skia.Pixmap.addr8"]], "alphatype() (pixmap method)": [[185, "skia.Pixmap.alphaType"]], "bounds() (pixmap method)": [[185, "skia.Pixmap.bounds"]], "colorspace() (pixmap method)": [[185, "skia.Pixmap.colorSpace"]], "colortype() (pixmap method)": [[185, "skia.Pixmap.colorType"]], "computebytesize() (pixmap method)": [[185, "skia.Pixmap.computeByteSize"]], "computeisopaque() (pixmap method)": [[185, "skia.Pixmap.computeIsOpaque"]], "dimensions() (pixmap method)": [[185, "skia.Pixmap.dimensions"]], "erase() (pixmap method)": [[185, "skia.Pixmap.erase"]], "extractsubset() (pixmap method)": [[185, "skia.Pixmap.extractSubset"]], "getalphaf() (pixmap method)": [[185, "skia.Pixmap.getAlphaf"]], "getcolor() (pixmap method)": [[185, "skia.Pixmap.getColor"]], "height() (pixmap method)": [[185, "skia.Pixmap.height"]], "info() (pixmap method)": [[185, "skia.Pixmap.info"]], "isopaque() (pixmap method)": [[185, "skia.Pixmap.isOpaque"]], "readpixels() (pixmap method)": [[185, "skia.Pixmap.readPixels"]], "refcolorspace() (pixmap method)": [[185, "skia.Pixmap.refColorSpace"]], "reset() (pixmap method)": [[185, "skia.Pixmap.reset"]], "rowbytes() (pixmap method)": [[185, "skia.Pixmap.rowBytes"]], "rowbytesaspixels() (pixmap method)": [[185, "skia.Pixmap.rowBytesAsPixels"]], "scalepixels() (pixmap method)": [[185, "skia.Pixmap.scalePixels"]], "setcolorspace() (pixmap method)": [[185, "skia.Pixmap.setColorSpace"]], "shiftperpixel() (pixmap method)": [[185, "skia.Pixmap.shiftPerPixel"]], "tobytes() (pixmap method)": [[185, "skia.Pixmap.tobytes"]], "width() (pixmap method)": [[185, "skia.Pixmap.width"]], "writable_addr() (pixmap method)": [[185, "skia.Pixmap.writable_addr"]], "crossproduct() (point static method)": [[186, "skia.Point.CrossProduct"]], "distance() (point static method)": [[186, "skia.Point.Distance"]], "dotproduct() (point static method)": [[186, "skia.Point.DotProduct"]], "length() (point static method)": [[186, "skia.Point.Length"]], "make() (point static method)": [[186, "skia.Point.Make"]], "normalize() (point static method)": [[186, "skia.Point.Normalize"]], "offset() (point static method)": [[186, "skia.Point.Offset"]], "point (class in skia)": [[186, "skia.Point"]], "__init__() (point method)": [[186, "skia.Point.__init__"]], "cross() (point method)": [[186, "skia.Point.cross"]], "distancetoorigin() (point method)": [[186, "skia.Point.distanceToOrigin"]], "dot() (point method)": [[186, "skia.Point.dot"]], "equals() (point method)": [[186, "skia.Point.equals"]], "fx (point attribute)": [[186, "skia.Point.fX"]], "fy (point attribute)": [[186, "skia.Point.fY"]], "isfinite() (point method)": [[186, "skia.Point.isFinite"]], "iszero() (point method)": [[186, "skia.Point.isZero"]], "iset() (point method)": [[186, "skia.Point.iset"]], "length() (point method)": [[186, "skia.Point.length"]], "negate() (point method)": [[186, "skia.Point.negate"]], "normalize() (point method)": [[186, "skia.Point.normalize"]], "offset() (point method)": [[186, "skia.Point.offset"]], "scale() (point method)": [[186, "skia.Point.scale"]], "set() (point method)": [[186, "skia.Point.set"]], "setabs() (point method)": [[186, "skia.Point.setAbs"]], "setlength() (point method)": [[186, "skia.Point.setLength"]], "setnormalize() (point method)": [[186, "skia.Point.setNormalize"]], "x() (point method)": [[186, "skia.Point.x"]], "y() (point method)": [[186, "skia.Point.y"]], "crossproduct() (point3 static method)": [[187, "skia.Point3.CrossProduct"]], "dotproduct() (point3 static method)": [[187, "skia.Point3.DotProduct"]], "length() (point3 static method)": [[187, "skia.Point3.Length"]], "make() (point3 static method)": [[187, "skia.Point3.Make"]], "point3 (class in skia)": [[187, "skia.Point3"]], "__init__() (point3 method)": [[187, "skia.Point3.__init__"]], "cross() (point3 method)": [[187, "skia.Point3.cross"]], "dot() (point3 method)": [[187, "skia.Point3.dot"]], "fx (point3 attribute)": [[187, "skia.Point3.fX"]], "fy (point3 attribute)": [[187, "skia.Point3.fY"]], "fz (point3 attribute)": [[187, "skia.Point3.fZ"]], "isfinite() (point3 method)": [[187, "skia.Point3.isFinite"]], "length() (point3 method)": [[187, "skia.Point3.length"]], "makescale() (point3 method)": [[187, "skia.Point3.makeScale"]], "normalize() (point3 method)": [[187, "skia.Point3.normalize"]], "scale() (point3 method)": [[187, "skia.Point3.scale"]], "set() (point3 method)": [[187, "skia.Point3.set"]], "x() (point3 method)": [[187, "skia.Point3.x"]], "y() (point3 method)": [[187, "skia.Point3.y"]], "z() (point3 method)": [[187, "skia.Point3.z"]], "makeempty() (rrect static method)": [[188, "skia.RRect.MakeEmpty"]], "makeoval() (rrect static method)": [[188, "skia.RRect.MakeOval"]], "makerect() (rrect static method)": [[188, "skia.RRect.MakeRect"]], "makerectxy() (rrect static method)": [[188, "skia.RRect.MakeRectXY"]], "rrect (class in skia)": [[188, "skia.RRect"]], "__init__() (rrect method)": [[188, "skia.RRect.__init__"]], "contains() (rrect method)": [[188, "skia.RRect.contains"]], "dump() (rrect method)": [[188, "skia.RRect.dump"]], "dumphex() (rrect method)": [[188, "skia.RRect.dumpHex"]], "dumptostring() (rrect method)": [[188, "skia.RRect.dumpToString"]], "getbounds() (rrect method)": [[188, "skia.RRect.getBounds"]], "getsimpleradii() (rrect method)": [[188, "skia.RRect.getSimpleRadii"]], "gettype() (rrect method)": [[188, "skia.RRect.getType"]], "height() (rrect method)": [[188, "skia.RRect.height"]], "inset() (rrect method)": [[188, "skia.RRect.inset"]], "iscomplex() (rrect method)": [[188, "skia.RRect.isComplex"]], "isempty() (rrect method)": [[188, "skia.RRect.isEmpty"]], "isninepatch() (rrect method)": [[188, "skia.RRect.isNinePatch"]], "isoval() (rrect method)": [[188, "skia.RRect.isOval"]], "isrect() (rrect method)": [[188, "skia.RRect.isRect"]], "issimple() (rrect method)": [[188, "skia.RRect.isSimple"]], "isvalid() (rrect method)": [[188, "skia.RRect.isValid"]], "kcomplex_type (rrect attribute)": [[188, "skia.RRect.kComplex_Type"]], "kempty_type (rrect attribute)": [[188, "skia.RRect.kEmpty_Type"]], "klasttype (rrect attribute)": [[188, "skia.RRect.kLastType"]], "klowerleft_corner (rrect attribute)": [[188, "skia.RRect.kLowerLeft_Corner"]], "klowerright_corner (rrect attribute)": [[188, "skia.RRect.kLowerRight_Corner"]], "kninepatch_type (rrect attribute)": [[188, "skia.RRect.kNinePatch_Type"]], "koval_type (rrect attribute)": [[188, "skia.RRect.kOval_Type"]], "krect_type (rrect attribute)": [[188, "skia.RRect.kRect_Type"]], "ksimple_type (rrect attribute)": [[188, "skia.RRect.kSimple_Type"]], "ksizeinmemory (rrect attribute)": [[188, "skia.RRect.kSizeInMemory"]], "kupperleft_corner (rrect attribute)": [[188, "skia.RRect.kUpperLeft_Corner"]], "kupperright_corner (rrect attribute)": [[188, "skia.RRect.kUpperRight_Corner"]], "makeoffset() (rrect method)": [[188, "skia.RRect.makeOffset"]], "offset() (rrect method)": [[188, "skia.RRect.offset"]], "outset() (rrect method)": [[188, "skia.RRect.outset"]], "radii() (rrect method)": [[188, "skia.RRect.radii"]], "readfrommemory() (rrect method)": [[188, "skia.RRect.readFromMemory"]], "rect() (rrect method)": [[188, "skia.RRect.rect"]], "setempty() (rrect method)": [[188, "skia.RRect.setEmpty"]], "setninepatch() (rrect method)": [[188, "skia.RRect.setNinePatch"]], "setoval() (rrect method)": [[188, "skia.RRect.setOval"]], "setrect() (rrect method)": [[188, "skia.RRect.setRect"]], "setrectradii() (rrect method)": [[188, "skia.RRect.setRectRadii"]], "setrectxy() (rrect method)": [[188, "skia.RRect.setRectXY"]], "transform() (rrect method)": [[188, "skia.RRect.transform"]], "type() (rrect method)": [[188, "skia.RRect.type"]], "width() (rrect method)": [[188, "skia.RRect.width"]], "writetomemory() (rrect method)": [[188, "skia.RRect.writeToMemory"]], "corner (class in skia.rrect)": [[189, "skia.RRect.Corner"]], "__init__() (corner method)": [[189, "skia.RRect.Corner.__init__"]], "klowerleft_corner (corner attribute)": [[189, "skia.RRect.Corner.kLowerLeft_Corner"]], "klowerright_corner (corner attribute)": [[189, "skia.RRect.Corner.kLowerRight_Corner"]], "kupperleft_corner (corner attribute)": [[189, "skia.RRect.Corner.kUpperLeft_Corner"]], "kupperright_corner (corner attribute)": [[189, "skia.RRect.Corner.kUpperRight_Corner"]], "name (corner attribute)": [[189, "skia.RRect.Corner.name"]], "value (corner attribute)": [[189, "skia.RRect.Corner.value"]], "type (class in skia.rrect)": [[190, "skia.RRect.Type"]], "kcomplex_type (type attribute)": [[190, "skia.RRect.Type.kComplex_Type"]], "kempty_type (type attribute)": [[190, "skia.RRect.Type.kEmpty_Type"]], "klasttype (type attribute)": [[190, "skia.RRect.Type.kLastType"]], "kninepatch_type (type attribute)": [[190, "skia.RRect.Type.kNinePatch_Type"]], "koval_type (type attribute)": [[190, "skia.RRect.Type.kOval_Type"]], "krect_type (type attribute)": [[190, "skia.RRect.Type.kRect_Type"]], "ksimple_type (type attribute)": [[190, "skia.RRect.Type.kSimple_Type"]], "make() (rsxform static method)": [[191, "skia.RSXform.Make"]], "makefromradians() (rsxform static method)": [[191, "skia.RSXform.MakeFromRadians"]], "rsxform (class in skia)": [[191, "skia.RSXform"]], "__init__() (rsxform method)": [[191, "skia.RSXform.__init__"]], "fscos (rsxform attribute)": [[191, "skia.RSXform.fSCos"]], "fssin (rsxform attribute)": [[191, "skia.RSXform.fSSin"]], "ftx (rsxform attribute)": [[191, "skia.RSXform.fTx"]], "fty (rsxform attribute)": [[191, "skia.RSXform.fTy"]], "rectstaysrect() (rsxform method)": [[191, "skia.RSXform.rectStaysRect"]], "set() (rsxform method)": [[191, "skia.RSXform.set"]], "setidentity() (rsxform method)": [[191, "skia.RSXform.setIdentity"]], "toquad() (rsxform method)": [[191, "skia.RSXform.toQuad"]], "totristrip() (rsxform method)": [[191, "skia.RSXform.toTriStrip"]], "rtreefactory (class in skia)": [[192, "skia.RTreeFactory"]], "__init__() (rtreefactory method)": [[192, "skia.RTreeFactory.__init__"]], "intersects() (rect static method)": [[193, "skia.Rect.Intersects"]], "make() (rect static method)": [[193, "skia.Rect.Make"]], "makeempty() (rect static method)": [[193, "skia.Rect.MakeEmpty"]], "makeiwh() (rect static method)": [[193, "skia.Rect.MakeIWH"]], "makeltrb() (rect static method)": [[193, "skia.Rect.MakeLTRB"]], "makesize() (rect static method)": [[193, "skia.Rect.MakeSize"]], "makewh() (rect static method)": [[193, "skia.Rect.MakeWH"]], "makexywh() (rect static method)": [[193, "skia.Rect.MakeXYWH"]], "rect (class in skia)": [[193, "skia.Rect"]], "__init__() (rect method)": [[193, "skia.Rect.__init__"]], "asscalars() (rect method)": [[193, "skia.Rect.asScalars"]], "bottom() (rect method)": [[193, "skia.Rect.bottom"]], "centerx() (rect method)": [[193, "skia.Rect.centerX"]], "centery() (rect method)": [[193, "skia.Rect.centerY"]], "contains() (rect method)": [[193, "skia.Rect.contains"]], "dump() (rect method)": [[193, "skia.Rect.dump"]], "dumphex() (rect method)": [[193, "skia.Rect.dumpHex"]], "fbottom (rect attribute)": [[193, "skia.Rect.fBottom"]], "fleft (rect attribute)": [[193, "skia.Rect.fLeft"]], "fright (rect attribute)": [[193, "skia.Rect.fRight"]], "ftop (rect attribute)": [[193, "skia.Rect.fTop"]], "height() (rect method)": [[193, "skia.Rect.height"]], "inset() (rect method)": [[193, "skia.Rect.inset"]], "intersect() (rect method)": [[193, "skia.Rect.intersect"]], "intersects() (rect method)": [[193, "skia.Rect.intersects"]], "isempty() (rect method)": [[193, "skia.Rect.isEmpty"]], "isfinite() (rect method)": [[193, "skia.Rect.isFinite"]], "issorted() (rect method)": [[193, "skia.Rect.isSorted"]], "join() (rect method)": [[193, "skia.Rect.join"]], "joinnonemptyarg() (rect method)": [[193, "skia.Rect.joinNonEmptyArg"]], "joinpossiblyemptyrect() (rect method)": [[193, "skia.Rect.joinPossiblyEmptyRect"]], "left() (rect method)": [[193, "skia.Rect.left"]], "makeinset() (rect method)": [[193, "skia.Rect.makeInset"]], "makeoffset() (rect method)": [[193, "skia.Rect.makeOffset"]], "makeoutset() (rect method)": [[193, "skia.Rect.makeOutset"]], "makesorted() (rect method)": [[193, "skia.Rect.makeSorted"]], "offset() (rect method)": [[193, "skia.Rect.offset"]], "offsetto() (rect method)": [[193, "skia.Rect.offsetTo"]], "outset() (rect method)": [[193, "skia.Rect.outset"]], "right() (rect method)": [[193, "skia.Rect.right"]], "round() (rect method)": [[193, "skia.Rect.round"]], "roundin() (rect method)": [[193, "skia.Rect.roundIn"]], "roundout() (rect method)": [[193, "skia.Rect.roundOut"]], "set() (rect method)": [[193, "skia.Rect.set"]], "setbounds() (rect method)": [[193, "skia.Rect.setBounds"]], "setboundscheck() (rect method)": [[193, "skia.Rect.setBoundsCheck"]], "setboundsnocheck() (rect method)": [[193, "skia.Rect.setBoundsNoCheck"]], "setempty() (rect method)": [[193, "skia.Rect.setEmpty"]], "setiwh() (rect method)": [[193, "skia.Rect.setIWH"]], "setltrb() (rect method)": [[193, "skia.Rect.setLTRB"]], "setwh() (rect method)": [[193, "skia.Rect.setWH"]], "setxywh() (rect method)": [[193, "skia.Rect.setXYWH"]], "sort() (rect method)": [[193, "skia.Rect.sort"]], "toquad() (rect method)": [[193, "skia.Rect.toQuad"]], "top() (rect method)": [[193, "skia.Rect.top"]], "width() (rect method)": [[193, "skia.Rect.width"]], "x() (rect method)": [[193, "skia.Rect.x"]], "y() (rect method)": [[193, "skia.Rect.y"]], "refcnt (class in skia)": [[194, "skia.RefCnt"]], "__init__() (refcnt method)": [[194, "skia.RefCnt.__init__"]], "ref() (refcnt method)": [[194, "skia.RefCnt.ref"]], "unique() (refcnt method)": [[194, "skia.RefCnt.unique"]], "unref() (refcnt method)": [[194, "skia.RefCnt.unref"]], "refcntbase (class in skia)": [[195, "skia.RefCntBase"]], "__init__() (refcntbase method)": [[195, "skia.RefCntBase.__init__"]], "ref() (refcntbase method)": [[195, "skia.RefCntBase.ref"]], "unique() (refcntbase method)": [[195, "skia.RefCntBase.unique"]], "unref() (refcntbase method)": [[195, "skia.RefCntBase.unref"]], "region (class in skia)": [[196, "skia.Region"]], "__init__() (region method)": [[196, "skia.Region.__init__"]], "cliperator() (region method)": [[196, "skia.Region.cliperator"]], "computeregioncomplexity() (region method)": [[196, "skia.Region.computeRegionComplexity"]], "contains() (region method)": [[196, "skia.Region.contains"]], "getboundarypath() (region method)": [[196, "skia.Region.getBoundaryPath"]], "getbounds() (region method)": [[196, "skia.Region.getBounds"]], "intersects() (region method)": [[196, "skia.Region.intersects"]], "iscomplex() (region method)": [[196, "skia.Region.isComplex"]], "isempty() (region method)": [[196, "skia.Region.isEmpty"]], "isrect() (region method)": [[196, "skia.Region.isRect"]], "iterator() (region method)": [[196, "skia.Region.iterator"]], "kdifference_op (region attribute)": [[196, "skia.Region.kDifference_Op"]], "kintersect_op (region attribute)": [[196, "skia.Region.kIntersect_Op"]], "klastop (region attribute)": [[196, "skia.Region.kLastOp"]], "kopcnt (region attribute)": [[196, "skia.Region.kOpCnt"]], "kreplace_op (region attribute)": [[196, "skia.Region.kReplace_Op"]], "kreversedifference_op (region attribute)": [[196, "skia.Region.kReverseDifference_Op"]], "kunion_op (region attribute)": [[196, "skia.Region.kUnion_Op"]], "kxor_op (region attribute)": [[196, "skia.Region.kXOR_Op"]], "op() (region method)": [[196, "skia.Region.op"]], "quickcontains() (region method)": [[196, "skia.Region.quickContains"]], "quickreject() (region method)": [[196, "skia.Region.quickReject"]], "readfrommemory() (region method)": [[196, "skia.Region.readFromMemory"]], "set() (region method)": [[196, "skia.Region.set"]], "setempty() (region method)": [[196, "skia.Region.setEmpty"]], "setpath() (region method)": [[196, "skia.Region.setPath"]], "setrect() (region method)": [[196, "skia.Region.setRect"]], "setrects() (region method)": [[196, "skia.Region.setRects"]], "setregion() (region method)": [[196, "skia.Region.setRegion"]], "spanerator() (region method)": [[196, "skia.Region.spanerator"]], "swap() (region method)": [[196, "skia.Region.swap"]], "translate() (region method)": [[196, "skia.Region.translate"]], "writetomemory() (region method)": [[196, "skia.Region.writeToMemory"]], "cliperator (class in skia.region)": [[197, "skia.Region.Cliperator"]], "__init__() (cliperator method)": [[197, "skia.Region.Cliperator.__init__"]], "done() (cliperator method)": [[197, "skia.Region.Cliperator.done"]], "next() (cliperator method)": [[197, "skia.Region.Cliperator.next"]], "rect() (cliperator method)": [[197, "skia.Region.Cliperator.rect"]], "iterator (class in skia.region)": [[198, "skia.Region.Iterator"]], "__init__() (iterator method)": [[198, "skia.Region.Iterator.__init__"]], "done() (iterator method)": [[198, "skia.Region.Iterator.done"]], "next() (iterator method)": [[198, "skia.Region.Iterator.next"]], "rect() (iterator method)": [[198, "skia.Region.Iterator.rect"]], "reset() (iterator method)": [[198, "skia.Region.Iterator.reset"]], "rewind() (iterator method)": [[198, "skia.Region.Iterator.rewind"]], "rgn() (iterator method)": [[198, "skia.Region.Iterator.rgn"]], "op (class in skia.region)": [[199, "skia.Region.Op"]], "__init__() (op method)": [[199, "skia.Region.Op.__init__"]], "kdifference_op (op attribute)": [[199, "skia.Region.Op.kDifference_Op"]], "kintersect_op (op attribute)": [[199, "skia.Region.Op.kIntersect_Op"]], "klastop (op attribute)": [[199, "skia.Region.Op.kLastOp"]], "kreplace_op (op attribute)": [[199, "skia.Region.Op.kReplace_Op"]], "kreversedifference_op (op attribute)": [[199, "skia.Region.Op.kReverseDifference_Op"]], "kunion_op (op attribute)": [[199, "skia.Region.Op.kUnion_Op"]], "kxor_op (op attribute)": [[199, "skia.Region.Op.kXOR_Op"]], "name (op attribute)": [[199, "skia.Region.Op.name"]], "value (op attribute)": [[199, "skia.Region.Op.value"]], "spanerator (class in skia.region)": [[200, "skia.Region.Spanerator"]], "__init__() (spanerator method)": [[200, "skia.Region.Spanerator.__init__"]], "next() (spanerator method)": [[200, "skia.Region.Spanerator.next"]], "make() (svgcanvas static method)": [[201, "skia.SVGCanvas.Make"]], "svgcanvas (class in skia)": [[201, "skia.SVGCanvas"]], "__init__() (svgcanvas method)": [[201, "skia.SVGCanvas.__init__"]], "kconverttexttopaths_flag (svgcanvas attribute)": [[201, "skia.SVGCanvas.kConvertTextToPaths_Flag"]], "knoprettyxml_flag (svgcanvas attribute)": [[201, "skia.SVGCanvas.kNoPrettyXML_Flag"]], "makefromstream() (svgdom static method)": [[202, "skia.SVGDOM.MakeFromStream"]], "svgdom (class in skia)": [[202, "skia.SVGDOM"]], "__init__() (svgdom method)": [[202, "skia.SVGDOM.__init__"]], "containersize() (svgdom method)": [[202, "skia.SVGDOM.containerSize"]], "ref() (svgdom method)": [[202, "skia.SVGDOM.ref"]], "render() (svgdom method)": [[202, "skia.SVGDOM.render"]], "rendernode() (svgdom method)": [[202, "skia.SVGDOM.renderNode"]], "setcontainersize() (svgdom method)": [[202, "skia.SVGDOM.setContainerSize"]], "unique() (svgdom method)": [[202, "skia.SVGDOM.unique"]], "unref() (svgdom method)": [[202, "skia.SVGDOM.unref"]], "samplingoptions (class in skia)": [[203, "skia.SamplingOptions"]], "__init__() (samplingoptions method)": [[203, "skia.SamplingOptions.__init__"]], "deserialize() (shader static method)": [[204, "skia.Shader.Deserialize"]], "shader (class in skia)": [[204, "skia.Shader"]], "__init__() (shader method)": [[204, "skia.Shader.__init__"]], "getflattenabletype() (shader method)": [[204, "skia.Shader.getFlattenableType"]], "gettypename() (shader method)": [[204, "skia.Shader.getTypeName"]], "isaimage() (shader method)": [[204, "skia.Shader.isAImage"]], "isopaque() (shader method)": [[204, "skia.Shader.isOpaque"]], "kcolorfilter_type (shader attribute)": [[204, "skia.Shader.kColorFilter_Type"]], "kdrawlooper_type (shader attribute)": [[204, "skia.Shader.kDrawLooper_Type"]], "kdrawable_type (shader attribute)": [[204, "skia.Shader.kDrawable_Type"]], "kimagefilter_type (shader attribute)": [[204, "skia.Shader.kImageFilter_Type"]], "kmaskfilter_type (shader attribute)": [[204, "skia.Shader.kMaskFilter_Type"]], "kpatheffect_type (shader attribute)": [[204, "skia.Shader.kPathEffect_Type"]], "makewithcolorfilter() (shader method)": [[204, "skia.Shader.makeWithColorFilter"]], "makewithlocalmatrix() (shader method)": [[204, "skia.Shader.makeWithLocalMatrix"]], "ref() (shader method)": [[204, "skia.Shader.ref"]], "serialize() (shader method)": [[204, "skia.Shader.serialize"]], "unique() (shader method)": [[204, "skia.Shader.unique"]], "unref() (shader method)": [[204, "skia.Shader.unref"]], "type (class in skia.shader)": [[205, "skia.Shader.Type"]], "make() (shadermaskfilter static method)": [[206, "skia.ShaderMaskFilter.Make"]], "shadermaskfilter (class in skia)": [[206, "skia.ShaderMaskFilter"]], "__init__() (shadermaskfilter method)": [[206, "skia.ShaderMaskFilter.__init__"]], "blend() (shaders static method)": [[207, "skia.Shaders.Blend"]], "color() (shaders static method)": [[207, "skia.Shaders.Color"]], "empty() (shaders static method)": [[207, "skia.Shaders.Empty"]], "lerp() (shaders static method)": [[207, "skia.Shaders.Lerp"]], "shaders (class in skia)": [[207, "skia.Shaders"]], "__init__() (shaders method)": [[207, "skia.Shaders.__init__"]], "make() (size static method)": [[208, "skia.Size.Make"]], "makeempty() (size static method)": [[208, "skia.Size.MakeEmpty"]], "size (class in skia)": [[208, "skia.Size"]], "__init__() (size method)": [[208, "skia.Size.__init__"]], "equals() (size method)": [[208, "skia.Size.equals"]], "fheight (size attribute)": [[208, "skia.Size.fHeight"]], "fwidth (size attribute)": [[208, "skia.Size.fWidth"]], "height() (size method)": [[208, "skia.Size.height"]], "isempty() (size method)": [[208, "skia.Size.isEmpty"]], "iszero() (size method)": [[208, "skia.Size.isZero"]], "set() (size method)": [[208, "skia.Size.set"]], "setempty() (size method)": [[208, "skia.Size.setEmpty"]], "toceil() (size method)": [[208, "skia.Size.toCeil"]], "tofloor() (size method)": [[208, "skia.Size.toFloor"]], "toround() (size method)": [[208, "skia.Size.toRound"]], "width() (size method)": [[208, "skia.Size.width"]], "makefromfile() (stream static method)": [[209, "skia.Stream.MakeFromFile"]], "stream (class in skia)": [[209, "skia.Stream"]], "__init__() (stream method)": [[209, "skia.Stream.__init__"]], "duplicate() (stream method)": [[209, "skia.Stream.duplicate"]], "fork() (stream method)": [[209, "skia.Stream.fork"]], "getlength() (stream method)": [[209, "skia.Stream.getLength"]], "getmemorybase() (stream method)": [[209, "skia.Stream.getMemoryBase"]], "getposition() (stream method)": [[209, "skia.Stream.getPosition"]], "haslength() (stream method)": [[209, "skia.Stream.hasLength"]], "hasposition() (stream method)": [[209, "skia.Stream.hasPosition"]], "isatend() (stream method)": [[209, "skia.Stream.isAtEnd"]], "move() (stream method)": [[209, "skia.Stream.move"]], "peek() (stream method)": [[209, "skia.Stream.peek"]], "read() (stream method)": [[209, "skia.Stream.read"]], "readbool() (stream method)": [[209, "skia.Stream.readBool"]], "readpackeduint() (stream method)": [[209, "skia.Stream.readPackedUInt"]], "reads16() (stream method)": [[209, "skia.Stream.readS16"]], "reads32() (stream method)": [[209, "skia.Stream.readS32"]], "reads8() (stream method)": [[209, "skia.Stream.readS8"]], "readscalar() (stream method)": [[209, "skia.Stream.readScalar"]], "readu16() (stream method)": [[209, "skia.Stream.readU16"]], "readu32() (stream method)": [[209, "skia.Stream.readU32"]], "readu8() (stream method)": [[209, "skia.Stream.readU8"]], "rewind() (stream method)": [[209, "skia.Stream.rewind"]], "seek() (stream method)": [[209, "skia.Stream.seek"]], "skip() (stream method)": [[209, "skia.Stream.skip"]], "makefromfile() (streamasset static method)": [[210, "skia.StreamAsset.MakeFromFile"]], "streamasset (class in skia)": [[210, "skia.StreamAsset"]], "__init__() (streamasset method)": [[210, "skia.StreamAsset.__init__"]], "duplicate() (streamasset method)": [[210, "skia.StreamAsset.duplicate"]], "fork() (streamasset method)": [[210, "skia.StreamAsset.fork"]], "getlength() (streamasset method)": [[210, "skia.StreamAsset.getLength"]], "getmemorybase() (streamasset method)": [[210, "skia.StreamAsset.getMemoryBase"]], "getposition() (streamasset method)": [[210, "skia.StreamAsset.getPosition"]], "haslength() (streamasset method)": [[210, "skia.StreamAsset.hasLength"]], "hasposition() (streamasset method)": [[210, "skia.StreamAsset.hasPosition"]], "isatend() (streamasset method)": [[210, "skia.StreamAsset.isAtEnd"]], "move() (streamasset method)": [[210, "skia.StreamAsset.move"]], "peek() (streamasset method)": [[210, "skia.StreamAsset.peek"]], "read() (streamasset method)": [[210, "skia.StreamAsset.read"]], "readbool() (streamasset method)": [[210, "skia.StreamAsset.readBool"]], "readpackeduint() (streamasset method)": [[210, "skia.StreamAsset.readPackedUInt"]], "reads16() (streamasset method)": [[210, "skia.StreamAsset.readS16"]], "reads32() (streamasset method)": [[210, "skia.StreamAsset.readS32"]], "reads8() (streamasset method)": [[210, "skia.StreamAsset.readS8"]], "readscalar() (streamasset method)": [[210, "skia.StreamAsset.readScalar"]], "readu16() (streamasset method)": [[210, "skia.StreamAsset.readU16"]], "readu32() (streamasset method)": [[210, "skia.StreamAsset.readU32"]], "readu8() (streamasset method)": [[210, "skia.StreamAsset.readU8"]], "rewind() (streamasset method)": [[210, "skia.StreamAsset.rewind"]], "seek() (streamasset method)": [[210, "skia.StreamAsset.seek"]], "skip() (streamasset method)": [[210, "skia.StreamAsset.skip"]], "makefromfile() (streammemory static method)": [[211, "skia.StreamMemory.MakeFromFile"]], "streammemory (class in skia)": [[211, "skia.StreamMemory"]], "__init__() (streammemory method)": [[211, "skia.StreamMemory.__init__"]], "duplicate() (streammemory method)": [[211, "skia.StreamMemory.duplicate"]], "fork() (streammemory method)": [[211, "skia.StreamMemory.fork"]], "getlength() (streammemory method)": [[211, "skia.StreamMemory.getLength"]], "getmemorybase() (streammemory method)": [[211, "skia.StreamMemory.getMemoryBase"]], "getposition() (streammemory method)": [[211, "skia.StreamMemory.getPosition"]], "haslength() (streammemory method)": [[211, "skia.StreamMemory.hasLength"]], "hasposition() (streammemory method)": [[211, "skia.StreamMemory.hasPosition"]], "isatend() (streammemory method)": [[211, "skia.StreamMemory.isAtEnd"]], "move() (streammemory method)": [[211, "skia.StreamMemory.move"]], "peek() (streammemory method)": [[211, "skia.StreamMemory.peek"]], "read() (streammemory method)": [[211, "skia.StreamMemory.read"]], "readbool() (streammemory method)": [[211, "skia.StreamMemory.readBool"]], "readpackeduint() (streammemory method)": [[211, "skia.StreamMemory.readPackedUInt"]], "reads16() (streammemory method)": [[211, "skia.StreamMemory.readS16"]], "reads32() (streammemory method)": [[211, "skia.StreamMemory.readS32"]], "reads8() (streammemory method)": [[211, "skia.StreamMemory.readS8"]], "readscalar() (streammemory method)": [[211, "skia.StreamMemory.readScalar"]], "readu16() (streammemory method)": [[211, "skia.StreamMemory.readU16"]], "readu32() (streammemory method)": [[211, "skia.StreamMemory.readU32"]], "readu8() (streammemory method)": [[211, "skia.StreamMemory.readU8"]], "rewind() (streammemory method)": [[211, "skia.StreamMemory.rewind"]], "seek() (streammemory method)": [[211, "skia.StreamMemory.seek"]], "skip() (streammemory method)": [[211, "skia.StreamMemory.skip"]], "makefromfile() (streamrewindable static method)": [[212, "skia.StreamRewindable.MakeFromFile"]], "streamrewindable (class in skia)": [[212, "skia.StreamRewindable"]], "__init__() (streamrewindable method)": [[212, "skia.StreamRewindable.__init__"]], "duplicate() (streamrewindable method)": [[212, "skia.StreamRewindable.duplicate"]], "fork() (streamrewindable method)": [[212, "skia.StreamRewindable.fork"]], "getlength() (streamrewindable method)": [[212, "skia.StreamRewindable.getLength"]], "getmemorybase() (streamrewindable method)": [[212, "skia.StreamRewindable.getMemoryBase"]], "getposition() (streamrewindable method)": [[212, "skia.StreamRewindable.getPosition"]], "haslength() (streamrewindable method)": [[212, "skia.StreamRewindable.hasLength"]], "hasposition() (streamrewindable method)": [[212, "skia.StreamRewindable.hasPosition"]], "isatend() (streamrewindable method)": [[212, "skia.StreamRewindable.isAtEnd"]], "move() (streamrewindable method)": [[212, "skia.StreamRewindable.move"]], "peek() (streamrewindable method)": [[212, "skia.StreamRewindable.peek"]], "read() (streamrewindable method)": [[212, "skia.StreamRewindable.read"]], "readbool() (streamrewindable method)": [[212, "skia.StreamRewindable.readBool"]], "readpackeduint() (streamrewindable method)": [[212, "skia.StreamRewindable.readPackedUInt"]], "reads16() (streamrewindable method)": [[212, "skia.StreamRewindable.readS16"]], "reads32() (streamrewindable method)": [[212, "skia.StreamRewindable.readS32"]], "reads8() (streamrewindable method)": [[212, "skia.StreamRewindable.readS8"]], "readscalar() (streamrewindable method)": [[212, "skia.StreamRewindable.readScalar"]], "readu16() (streamrewindable method)": [[212, "skia.StreamRewindable.readU16"]], "readu32() (streamrewindable method)": [[212, "skia.StreamRewindable.readU32"]], "readu8() (streamrewindable method)": [[212, "skia.StreamRewindable.readU8"]], "rewind() (streamrewindable method)": [[212, "skia.StreamRewindable.rewind"]], "seek() (streamrewindable method)": [[212, "skia.StreamRewindable.seek"]], "skip() (streamrewindable method)": [[212, "skia.StreamRewindable.skip"]], "makefromfile() (streamseekable static method)": [[213, "skia.StreamSeekable.MakeFromFile"]], "streamseekable (class in skia)": [[213, "skia.StreamSeekable"]], "__init__() (streamseekable method)": [[213, "skia.StreamSeekable.__init__"]], "duplicate() (streamseekable method)": [[213, "skia.StreamSeekable.duplicate"]], "fork() (streamseekable method)": [[213, "skia.StreamSeekable.fork"]], "getlength() (streamseekable method)": [[213, "skia.StreamSeekable.getLength"]], "getmemorybase() (streamseekable method)": [[213, "skia.StreamSeekable.getMemoryBase"]], "getposition() (streamseekable method)": [[213, "skia.StreamSeekable.getPosition"]], "haslength() (streamseekable method)": [[213, "skia.StreamSeekable.hasLength"]], "hasposition() (streamseekable method)": [[213, "skia.StreamSeekable.hasPosition"]], "isatend() (streamseekable method)": [[213, "skia.StreamSeekable.isAtEnd"]], "move() (streamseekable method)": [[213, "skia.StreamSeekable.move"]], "peek() (streamseekable method)": [[213, "skia.StreamSeekable.peek"]], "read() (streamseekable method)": [[213, "skia.StreamSeekable.read"]], "readbool() (streamseekable method)": [[213, "skia.StreamSeekable.readBool"]], "readpackeduint() (streamseekable method)": [[213, "skia.StreamSeekable.readPackedUInt"]], "reads16() (streamseekable method)": [[213, "skia.StreamSeekable.readS16"]], "reads32() (streamseekable method)": [[213, "skia.StreamSeekable.readS32"]], "reads8() (streamseekable method)": [[213, "skia.StreamSeekable.readS8"]], "readscalar() (streamseekable method)": [[213, "skia.StreamSeekable.readScalar"]], "readu16() (streamseekable method)": [[213, "skia.StreamSeekable.readU16"]], "readu32() (streamseekable method)": [[213, "skia.StreamSeekable.readU32"]], "readu8() (streamseekable method)": [[213, "skia.StreamSeekable.readU8"]], "rewind() (streamseekable method)": [[213, "skia.StreamSeekable.rewind"]], "seek() (streamseekable method)": [[213, "skia.StreamSeekable.seek"]], "skip() (streamseekable method)": [[213, "skia.StreamSeekable.skip"]], "string (class in skia)": [[214, "skia.String"]], "__init__() (string method)": [[214, "skia.String.__init__"]], "append() (string method)": [[214, "skia.String.append"]], "appendhex() (string method)": [[214, "skia.String.appendHex"]], "appends32() (string method)": [[214, "skia.String.appendS32"]], "appends64() (string method)": [[214, "skia.String.appendS64"]], "appendscalar() (string method)": [[214, "skia.String.appendScalar"]], "appendu32() (string method)": [[214, "skia.String.appendU32"]], "appendu64() (string method)": [[214, "skia.String.appendU64"]], "appendunichar() (string method)": [[214, "skia.String.appendUnichar"]], "c_str() (string method)": [[214, "skia.String.c_str"]], "contains() (string method)": [[214, "skia.String.contains"]], "endswith() (string method)": [[214, "skia.String.endsWith"]], "equals() (string method)": [[214, "skia.String.equals"]], "find() (string method)": [[214, "skia.String.find"]], "findlastof() (string method)": [[214, "skia.String.findLastOf"]], "insert() (string method)": [[214, "skia.String.insert"]], "inserthex() (string method)": [[214, "skia.String.insertHex"]], "inserts32() (string method)": [[214, "skia.String.insertS32"]], "inserts64() (string method)": [[214, "skia.String.insertS64"]], "insertscalar() (string method)": [[214, "skia.String.insertScalar"]], "insertu32() (string method)": [[214, "skia.String.insertU32"]], "insertu64() (string method)": [[214, "skia.String.insertU64"]], "insertunichar() (string method)": [[214, "skia.String.insertUnichar"]], "isempty() (string method)": [[214, "skia.String.isEmpty"]], "prepend() (string method)": [[214, "skia.String.prepend"]], "prependhex() (string method)": [[214, "skia.String.prependHex"]], "prepends32() (string method)": [[214, "skia.String.prependS32"]], "prepends64() (string method)": [[214, "skia.String.prependS64"]], "prependscalar() (string method)": [[214, "skia.String.prependScalar"]], "prependunichar() (string method)": [[214, "skia.String.prependUnichar"]], "remove() (string method)": [[214, "skia.String.remove"]], "reset() (string method)": [[214, "skia.String.reset"]], "resize() (string method)": [[214, "skia.String.resize"]], "set() (string method)": [[214, "skia.String.set"]], "size() (string method)": [[214, "skia.String.size"]], "startswith() (string method)": [[214, "skia.String.startsWith"]], "swap() (string method)": [[214, "skia.String.swap"]], "getinflationradius() (strokerec static method)": [[215, "skia.StrokeRec.GetInflationRadius"]], "strokerec (class in skia)": [[215, "skia.StrokeRec"]], "__init__() (strokerec method)": [[215, "skia.StrokeRec.__init__"]], "applytopaint() (strokerec method)": [[215, "skia.StrokeRec.applyToPaint"]], "applytopath() (strokerec method)": [[215, "skia.StrokeRec.applyToPath"]], "getcap() (strokerec method)": [[215, "skia.StrokeRec.getCap"]], "getinflationradius() (strokerec method)": [[215, "skia.StrokeRec.getInflationRadius"]], "getjoin() (strokerec method)": [[215, "skia.StrokeRec.getJoin"]], "getmiter() (strokerec method)": [[215, "skia.StrokeRec.getMiter"]], "getresscale() (strokerec method)": [[215, "skia.StrokeRec.getResScale"]], "getstyle() (strokerec method)": [[215, "skia.StrokeRec.getStyle"]], "getwidth() (strokerec method)": [[215, "skia.StrokeRec.getWidth"]], "hasequaleffect() (strokerec method)": [[215, "skia.StrokeRec.hasEqualEffect"]], "isfillstyle() (strokerec method)": [[215, "skia.StrokeRec.isFillStyle"]], "ishairlinestyle() (strokerec method)": [[215, "skia.StrokeRec.isHairlineStyle"]], "kfill_initstyle (strokerec attribute)": [[215, "skia.StrokeRec.kFill_InitStyle"]], "kfill_style (strokerec attribute)": [[215, "skia.StrokeRec.kFill_Style"]], "khairline_initstyle (strokerec attribute)": [[215, "skia.StrokeRec.kHairline_InitStyle"]], "khairline_style (strokerec attribute)": [[215, "skia.StrokeRec.kHairline_Style"]], "kstrokeandfill_style (strokerec attribute)": [[215, "skia.StrokeRec.kStrokeAndFill_Style"]], "kstroke_style (strokerec attribute)": [[215, "skia.StrokeRec.kStroke_Style"]], "kstylecount (strokerec attribute)": [[215, "skia.StrokeRec.kStyleCount"]], "needtoapply() (strokerec method)": [[215, "skia.StrokeRec.needToApply"]], "setfillstyle() (strokerec method)": [[215, "skia.StrokeRec.setFillStyle"]], "sethairlinestyle() (strokerec method)": [[215, "skia.StrokeRec.setHairlineStyle"]], "setresscale() (strokerec method)": [[215, "skia.StrokeRec.setResScale"]], "setstrokeparams() (strokerec method)": [[215, "skia.StrokeRec.setStrokeParams"]], "setstrokestyle() (strokerec method)": [[215, "skia.StrokeRec.setStrokeStyle"]], "initstyle (class in skia.strokerec)": [[216, "skia.StrokeRec.InitStyle"]], "__init__() (initstyle method)": [[216, "skia.StrokeRec.InitStyle.__init__"]], "kfill_initstyle (initstyle attribute)": [[216, "skia.StrokeRec.InitStyle.kFill_InitStyle"]], "khairline_initstyle (initstyle attribute)": [[216, "skia.StrokeRec.InitStyle.kHairline_InitStyle"]], "name (initstyle attribute)": [[216, "skia.StrokeRec.InitStyle.name"]], "value (initstyle attribute)": [[216, "skia.StrokeRec.InitStyle.value"]], "style (class in skia.strokerec)": [[217, "skia.StrokeRec.Style"]], "khairline_style (style attribute)": [[217, "skia.StrokeRec.Style.kHairline_Style"]], "makefrombackendrendertarget() (surface static method)": [[218, "skia.Surface.MakeFromBackendRenderTarget"]], "makefrombackendtexture() (surface static method)": [[218, "skia.Surface.MakeFromBackendTexture"]], "makenull() (surface static method)": [[218, "skia.Surface.MakeNull"]], "makeraster() (surface static method)": [[218, "skia.Surface.MakeRaster"]], "makerasterdirect() (surface static method)": [[218, "skia.Surface.MakeRasterDirect"]], "makerastern32premul() (surface static method)": [[218, "skia.Surface.MakeRasterN32Premul"]], "makerendertarget() (surface static method)": [[218, "skia.Surface.MakeRenderTarget"]], "surface (class in skia)": [[218, "skia.Surface"]], "__init__() (surface method)": [[218, "skia.Surface.__init__"]], "asyncrescaleandreadpixels() (surface method)": [[218, "skia.Surface.asyncRescaleAndReadPixels"]], "characterize() (surface method)": [[218, "skia.Surface.characterize"]], "draw() (surface method)": [[218, "skia.Surface.draw"]], "flush() (surface method)": [[218, "skia.Surface.flush"]], "flushandsubmit() (surface method)": [[218, "skia.Surface.flushAndSubmit"]], "generationid() (surface method)": [[218, "skia.Surface.generationID"]], "getbackendrendertarget() (surface method)": [[218, "skia.Surface.getBackendRenderTarget"]], "getbackendtexture() (surface method)": [[218, "skia.Surface.getBackendTexture"]], "getcanvas() (surface method)": [[218, "skia.Surface.getCanvas"]], "height() (surface method)": [[218, "skia.Surface.height"]], "imageinfo() (surface method)": [[218, "skia.Surface.imageInfo"]], "iscompatible() (surface method)": [[218, "skia.Surface.isCompatible"]], "kdiscardwrite_backendhandleaccess (surface attribute)": [[218, "skia.Surface.kDiscardWrite_BackendHandleAccess"]], "kdiscard_contentchangemode (surface attribute)": [[218, "skia.Surface.kDiscard_ContentChangeMode"]], "kflushread_backendhandleaccess (surface attribute)": [[218, "skia.Surface.kFlushRead_BackendHandleAccess"]], "kflushwrite_backendhandleaccess (surface attribute)": [[218, "skia.Surface.kFlushWrite_BackendHandleAccess"]], "klinear (surface attribute)": [[218, "skia.Surface.kLinear"]], "knoaccess (surface attribute)": [[218, "skia.Surface.kNoAccess"]], "kpresent (surface attribute)": [[218, "skia.Surface.kPresent"]], "kretain_contentchangemode (surface attribute)": [[218, "skia.Surface.kRetain_ContentChangeMode"]], "ksrc (surface attribute)": [[218, "skia.Surface.kSrc"]], "makeimagesnapshot() (surface method)": [[218, "skia.Surface.makeImageSnapshot"]], "makesurface() (surface method)": [[218, "skia.Surface.makeSurface"]], "notifycontentwillchange() (surface method)": [[218, "skia.Surface.notifyContentWillChange"]], "peekpixels() (surface method)": [[218, "skia.Surface.peekPixels"]], "props() (surface method)": [[218, "skia.Surface.props"]], "readpixels() (surface method)": [[218, "skia.Surface.readPixels"]], "recordingcontext() (surface method)": [[218, "skia.Surface.recordingContext"]], "ref() (surface method)": [[218, "skia.Surface.ref"]], "replacebackendtexture() (surface method)": [[218, "skia.Surface.replaceBackendTexture"]], "toarray() (surface method)": [[218, "skia.Surface.toarray"]], "unique() (surface method)": [[218, "skia.Surface.unique"]], "unref() (surface method)": [[218, "skia.Surface.unref"]], "width() (surface method)": [[218, "skia.Surface.width"]], "writepixels() (surface method)": [[218, "skia.Surface.writePixels"]], "asyncreadresult (class in skia.surface)": [[219, "skia.Surface.AsyncReadResult"]], "__init__() (asyncreadresult method)": [[219, "skia.Surface.AsyncReadResult.__init__"]], "count() (asyncreadresult method)": [[219, "skia.Surface.AsyncReadResult.count"]], "data() (asyncreadresult method)": [[219, "skia.Surface.AsyncReadResult.data"]], "rowbytes() (asyncreadresult method)": [[219, "skia.Surface.AsyncReadResult.rowBytes"]], "backendhandleaccess (class in skia.surface)": [[220, "skia.Surface.BackendHandleAccess"]], "__init__() (backendhandleaccess method)": [[220, "skia.Surface.BackendHandleAccess.__init__"]], "kdiscardwrite_backendhandleaccess (backendhandleaccess attribute)": [[220, "skia.Surface.BackendHandleAccess.kDiscardWrite_BackendHandleAccess"]], "kflushread_backendhandleaccess (backendhandleaccess attribute)": [[220, "skia.Surface.BackendHandleAccess.kFlushRead_BackendHandleAccess"]], "kflushwrite_backendhandleaccess (backendhandleaccess attribute)": [[220, "skia.Surface.BackendHandleAccess.kFlushWrite_BackendHandleAccess"]], "name (backendhandleaccess attribute)": [[220, "skia.Surface.BackendHandleAccess.name"]], "value (backendhandleaccess attribute)": [[220, "skia.Surface.BackendHandleAccess.value"]], "backendsurfaceaccess (class in skia.surface)": [[221, "skia.Surface.BackendSurfaceAccess"]], "__init__() (backendsurfaceaccess method)": [[221, "skia.Surface.BackendSurfaceAccess.__init__"]], "knoaccess (backendsurfaceaccess attribute)": [[221, "skia.Surface.BackendSurfaceAccess.kNoAccess"]], "kpresent (backendsurfaceaccess attribute)": [[221, "skia.Surface.BackendSurfaceAccess.kPresent"]], "name (backendsurfaceaccess attribute)": [[221, "skia.Surface.BackendSurfaceAccess.name"]], "value (backendsurfaceaccess attribute)": [[221, "skia.Surface.BackendSurfaceAccess.value"]], "contentchangemode (class in skia.surface)": [[222, "skia.Surface.ContentChangeMode"]], "__init__() (contentchangemode method)": [[222, "skia.Surface.ContentChangeMode.__init__"]], "kdiscard_contentchangemode (contentchangemode attribute)": [[222, "skia.Surface.ContentChangeMode.kDiscard_ContentChangeMode"]], "kretain_contentchangemode (contentchangemode attribute)": [[222, "skia.Surface.ContentChangeMode.kRetain_ContentChangeMode"]], "name (contentchangemode attribute)": [[222, "skia.Surface.ContentChangeMode.name"]], "value (contentchangemode attribute)": [[222, "skia.Surface.ContentChangeMode.value"]], "rescalegamma (class in skia.surface)": [[223, "skia.Surface.RescaleGamma"]], "__init__() (rescalegamma method)": [[223, "skia.Surface.RescaleGamma.__init__"]], "klinear (rescalegamma attribute)": [[223, "skia.Surface.RescaleGamma.kLinear"]], "ksrc (rescalegamma attribute)": [[223, "skia.Surface.RescaleGamma.kSrc"]], "name (rescalegamma attribute)": [[223, "skia.Surface.RescaleGamma.name"]], "value (rescalegamma attribute)": [[223, "skia.Surface.RescaleGamma.value"]], "surfacecharacterization (class in skia)": [[224, "skia.SurfaceCharacterization"]], "__init__() (surfacecharacterization method)": [[224, "skia.SurfaceCharacterization.__init__"]], "cachemaxresourcebytes() (surfacecharacterization method)": [[224, "skia.SurfaceCharacterization.cacheMaxResourceBytes"]], "colorspace() (surfacecharacterization method)": [[224, "skia.SurfaceCharacterization.colorSpace"]], "createbackendformat() (surfacecharacterization method)": [[224, "skia.SurfaceCharacterization.createBackendFormat"]], "createcolorspace() (surfacecharacterization method)": [[224, "skia.SurfaceCharacterization.createColorSpace"]], "createfbo0() (surfacecharacterization method)": [[224, "skia.SurfaceCharacterization.createFBO0"]], "createresized() (surfacecharacterization method)": [[224, "skia.SurfaceCharacterization.createResized"]], "height() (surfacecharacterization method)": [[224, "skia.SurfaceCharacterization.height"]], "ismipmapped() (surfacecharacterization method)": [[224, "skia.SurfaceCharacterization.isMipMapped"]], "istextureable() (surfacecharacterization method)": [[224, "skia.SurfaceCharacterization.isTextureable"]], "isvalid() (surfacecharacterization method)": [[224, "skia.SurfaceCharacterization.isValid"]], "refcolorspace() (surfacecharacterization method)": [[224, "skia.SurfaceCharacterization.refColorSpace"]], "surfaceprops() (surfacecharacterization method)": [[224, "skia.SurfaceCharacterization.surfaceProps"]], "usesglfbo0() (surfacecharacterization method)": [[224, "skia.SurfaceCharacterization.usesGLFBO0"]], "vulkansecondarycbcompatible() (surfacecharacterization method)": [[224, "skia.SurfaceCharacterization.vulkanSecondaryCBCompatible"]], "width() (surfacecharacterization method)": [[224, "skia.SurfaceCharacterization.width"]], "surfaceprops (class in skia)": [[225, "skia.SurfaceProps"]], "__init__() (surfaceprops method)": [[225, "skia.SurfaceProps.__init__"]], "flags() (surfaceprops method)": [[225, "skia.SurfaceProps.flags"]], "isusedeviceindependentfonts() (surfaceprops method)": [[225, "skia.SurfaceProps.isUseDeviceIndependentFonts"]], "kusedeviceindependentfonts_flag (surfaceprops attribute)": [[225, "skia.SurfaceProps.kUseDeviceIndependentFonts_Flag"]], "pixelgeometry() (surfaceprops method)": [[225, "skia.SurfaceProps.pixelGeometry"]], "flags (class in skia.surfaceprops)": [[226, "skia.SurfaceProps.Flags"]], "kusedeviceindependentfonts_flag (flags attribute)": [[226, "skia.SurfaceProps.Flags.kUseDeviceIndependentFonts_Flag"]], "make() (tablecolorfilter static method)": [[227, "skia.TableColorFilter.Make"]], "makeargb() (tablecolorfilter static method)": [[227, "skia.TableColorFilter.MakeARGB"]], "tablecolorfilter (class in skia)": [[227, "skia.TableColorFilter"]], "__init__() (tablecolorfilter method)": [[227, "skia.TableColorFilter.__init__"]], "create() (tablemaskfilter static method)": [[228, "skia.TableMaskFilter.Create"]], "createclip() (tablemaskfilter static method)": [[228, "skia.TableMaskFilter.CreateClip"]], "creategamma() (tablemaskfilter static method)": [[228, "skia.TableMaskFilter.CreateGamma"]], "makecliptable() (tablemaskfilter static method)": [[228, "skia.TableMaskFilter.MakeClipTable"]], "makegammatable() (tablemaskfilter static method)": [[228, "skia.TableMaskFilter.MakeGammaTable"]], "tablemaskfilter (class in skia)": [[228, "skia.TableMaskFilter"]], "__init__() (tablemaskfilter method)": [[228, "skia.TableMaskFilter.__init__"]], "deserialize() (textblob static method)": [[229, "skia.TextBlob.Deserialize"]], "makefrompostext() (textblob static method)": [[229, "skia.TextBlob.MakeFromPosText"]], "makefrompostexth() (textblob static method)": [[229, "skia.TextBlob.MakeFromPosTextH"]], "makefromrsxform() (textblob static method)": [[229, "skia.TextBlob.MakeFromRSXform"]], "makefromshapedtext() (textblob static method)": [[229, "skia.TextBlob.MakeFromShapedText"]], "makefromstring() (textblob static method)": [[229, "skia.TextBlob.MakeFromString"]], "makefromtext() (textblob static method)": [[229, "skia.TextBlob.MakeFromText"]], "textblob (class in skia)": [[229, "skia.TextBlob"]], "__init__() (textblob method)": [[229, "skia.TextBlob.__init__"]], "bounds() (textblob method)": [[229, "skia.TextBlob.bounds"]], "deref() (textblob method)": [[229, "skia.TextBlob.deref"]], "getintercepts() (textblob method)": [[229, "skia.TextBlob.getIntercepts"]], "ref() (textblob method)": [[229, "skia.TextBlob.ref"]], "refcntgreaterthan() (textblob method)": [[229, "skia.TextBlob.refCntGreaterThan"]], "serialize() (textblob method)": [[229, "skia.TextBlob.serialize"]], "unique() (textblob method)": [[229, "skia.TextBlob.unique"]], "uniqueid() (textblob method)": [[229, "skia.TextBlob.uniqueID"]], "unref() (textblob method)": [[229, "skia.TextBlob.unref"]], "iter (class in skia.textblob)": [[230, "skia.TextBlob.Iter"]], "run (class in skia.textblob.iter)": [[231, "skia.TextBlob.Iter.Run"]], "__init__() (run method)": [[231, "skia.TextBlob.Iter.Run.__init__"]], "fglyphcount (run attribute)": [[231, "skia.TextBlob.Iter.Run.fGlyphCount"]], "fglyphindices (run attribute)": [[231, "skia.TextBlob.Iter.Run.fGlyphIndices"]], "ftypeface (run attribute)": [[231, "skia.TextBlob.Iter.Run.fTypeface"]], "textblobbuilder (class in skia)": [[232, "skia.TextBlobBuilder"]], "__init__() (textblobbuilder method)": [[232, "skia.TextBlobBuilder.__init__"]], "allocrun() (textblobbuilder method)": [[232, "skia.TextBlobBuilder.allocRun"]], "allocrunpos() (textblobbuilder method)": [[232, "skia.TextBlobBuilder.allocRunPos"]], "allocrunposh() (textblobbuilder method)": [[232, "skia.TextBlobBuilder.allocRunPosH"]], "allocrunrsxform() (textblobbuilder method)": [[232, "skia.TextBlobBuilder.allocRunRSXform"]], "make() (textblobbuilder method)": [[232, "skia.TextBlobBuilder.make"]], "textencoding (class in skia)": [[233, "skia.TextEncoding"]], "__init__() (textencoding method)": [[233, "skia.TextEncoding.__init__"]], "kglyphid (textencoding attribute)": [[233, "skia.TextEncoding.kGlyphID"]], "kutf16 (textencoding attribute)": [[233, "skia.TextEncoding.kUTF16"]], "kutf32 (textencoding attribute)": [[233, "skia.TextEncoding.kUTF32"]], "kutf8 (textencoding attribute)": [[233, "skia.TextEncoding.kUTF8"]], "name (textencoding attribute)": [[233, "skia.TextEncoding.name"]], "value (textencoding attribute)": [[233, "skia.TextEncoding.value"]], "tilemode (class in skia)": [[234, "skia.TileMode"]], "__init__() (tilemode method)": [[234, "skia.TileMode.__init__"]], "kclamp (tilemode attribute)": [[234, "skia.TileMode.kClamp"]], "kdecal (tilemode attribute)": [[234, "skia.TileMode.kDecal"]], "klasttilemode (tilemode attribute)": [[234, "skia.TileMode.kLastTileMode"]], "kmirror (tilemode attribute)": [[234, "skia.TileMode.kMirror"]], "krepeat (tilemode attribute)": [[234, "skia.TileMode.kRepeat"]], "name (tilemode attribute)": [[234, "skia.TileMode.name"]], "value (tilemode attribute)": [[234, "skia.TileMode.value"]], "make() (trimpatheffect static method)": [[235, "skia.TrimPathEffect.Make"]], "trimpatheffect (class in skia)": [[235, "skia.TrimPathEffect"]], "__init__() (trimpatheffect method)": [[235, "skia.TrimPathEffect.__init__"]], "kinverted (trimpatheffect attribute)": [[235, "skia.TrimPathEffect.kInverted"]], "knormal (trimpatheffect attribute)": [[235, "skia.TrimPathEffect.kNormal"]], "mode (class in skia.trimpatheffect)": [[236, "skia.TrimPathEffect.Mode"]], "__init__() (mode method)": [[236, "skia.TrimPathEffect.Mode.__init__"]], "kinverted (mode attribute)": [[236, "skia.TrimPathEffect.Mode.kInverted"]], "knormal (mode attribute)": [[236, "skia.TrimPathEffect.Mode.kNormal"]], "name (mode attribute)": [[236, "skia.TrimPathEffect.Mode.name"]], "value (mode attribute)": [[236, "skia.TrimPathEffect.Mode.value"]], "equal() (typeface static method)": [[237, "skia.Typeface.Equal"]], "makedefault() (typeface static method)": [[237, "skia.Typeface.MakeDefault"]], "makedeserialize() (typeface static method)": [[237, "skia.Typeface.MakeDeserialize"]], "makeempty() (typeface static method)": [[237, "skia.Typeface.MakeEmpty"]], "makefromdata() (typeface static method)": [[237, "skia.Typeface.MakeFromData"]], "makefromfile() (typeface static method)": [[237, "skia.Typeface.MakeFromFile"]], "makefromname() (typeface static method)": [[237, "skia.Typeface.MakeFromName"]], "typeface (class in skia)": [[237, "skia.Typeface"]], "__init__() (typeface method)": [[237, "skia.Typeface.__init__"]], "copytabledata() (typeface method)": [[237, "skia.Typeface.copyTableData"]], "countglyphs() (typeface method)": [[237, "skia.Typeface.countGlyphs"]], "counttables() (typeface method)": [[237, "skia.Typeface.countTables"]], "fontstyle() (typeface method)": [[237, "skia.Typeface.fontStyle"]], "getbounds() (typeface method)": [[237, "skia.Typeface.getBounds"]], "getfamilyname() (typeface method)": [[237, "skia.Typeface.getFamilyName"]], "getfamilynames() (typeface method)": [[237, "skia.Typeface.getFamilyNames"]], "getkerningpairadjustments() (typeface method)": [[237, "skia.Typeface.getKerningPairAdjustments"]], "getpostscriptname() (typeface method)": [[237, "skia.Typeface.getPostScriptName"]], "gettabledata() (typeface method)": [[237, "skia.Typeface.getTableData"]], "gettablesize() (typeface method)": [[237, "skia.Typeface.getTableSize"]], "gettabletags() (typeface method)": [[237, "skia.Typeface.getTableTags"]], "getunitsperem() (typeface method)": [[237, "skia.Typeface.getUnitsPerEm"]], "getvariationdesignparameters() (typeface method)": [[237, "skia.Typeface.getVariationDesignParameters"]], "getvariationdesignposition() (typeface method)": [[237, "skia.Typeface.getVariationDesignPosition"]], "isbold() (typeface method)": [[237, "skia.Typeface.isBold"]], "isfixedpitch() (typeface method)": [[237, "skia.Typeface.isFixedPitch"]], "isitalic() (typeface method)": [[237, "skia.Typeface.isItalic"]], "kdoincludedata (typeface attribute)": [[237, "skia.Typeface.kDoIncludeData"]], "kdontincludedata (typeface attribute)": [[237, "skia.Typeface.kDontIncludeData"]], "kincludedataiflocal (typeface attribute)": [[237, "skia.Typeface.kIncludeDataIfLocal"]], "makeclone() (typeface method)": [[237, "skia.Typeface.makeClone"]], "ref() (typeface method)": [[237, "skia.Typeface.ref"]], "serialize() (typeface method)": [[237, "skia.Typeface.serialize"]], "unichartoglyph() (typeface method)": [[237, "skia.Typeface.unicharToGlyph"]], "unicharstoglyphs() (typeface method)": [[237, "skia.Typeface.unicharsToGlyphs"]], "unique() (typeface method)": [[237, "skia.Typeface.unique"]], "uniqueid() (typeface method)": [[237, "skia.Typeface.uniqueID"]], "unref() (typeface method)": [[237, "skia.Typeface.unref"]], "serializebehavior (class in skia.typeface)": [[238, "skia.Typeface.SerializeBehavior"]], "__init__() (serializebehavior method)": [[238, "skia.Typeface.SerializeBehavior.__init__"]], "kdoincludedata (serializebehavior attribute)": [[238, "skia.Typeface.SerializeBehavior.kDoIncludeData"]], "kdontincludedata (serializebehavior attribute)": [[238, "skia.Typeface.SerializeBehavior.kDontIncludeData"]], "kincludedataiflocal (serializebehavior attribute)": [[238, "skia.Typeface.SerializeBehavior.kIncludeDataIfLocal"]], "name (serializebehavior attribute)": [[238, "skia.Typeface.SerializeBehavior.name"]], "value (serializebehavior attribute)": [[238, "skia.Typeface.SerializeBehavior.value"]], "makecopy() (vertices static method)": [[239, "skia.Vertices.MakeCopy"]], "vertices (class in skia)": [[239, "skia.Vertices"]], "__init__() (vertices method)": [[239, "skia.Vertices.__init__"]], "approximatesize() (vertices method)": [[239, "skia.Vertices.approximateSize"]], "bounds() (vertices method)": [[239, "skia.Vertices.bounds"]], "deref() (vertices method)": [[239, "skia.Vertices.deref"]], "klast_vertexmode (vertices attribute)": [[239, "skia.Vertices.kLast_VertexMode"]], "ktrianglefan_vertexmode (vertices attribute)": [[239, "skia.Vertices.kTriangleFan_VertexMode"]], "ktrianglestrip_vertexmode (vertices attribute)": [[239, "skia.Vertices.kTriangleStrip_VertexMode"]], "ktriangles_vertexmode (vertices attribute)": [[239, "skia.Vertices.kTriangles_VertexMode"]], "ref() (vertices method)": [[239, "skia.Vertices.ref"]], "refcntgreaterthan() (vertices method)": [[239, "skia.Vertices.refCntGreaterThan"]], "unique() (vertices method)": [[239, "skia.Vertices.unique"]], "uniqueid() (vertices method)": [[239, "skia.Vertices.uniqueID"]], "unref() (vertices method)": [[239, "skia.Vertices.unref"]], "vertexmode (class in skia.vertices)": [[240, "skia.Vertices.VertexMode"]], "__init__() (vertexmode method)": [[240, "skia.Vertices.VertexMode.__init__"]], "klast_vertexmode (vertexmode attribute)": [[240, "skia.Vertices.VertexMode.kLast_VertexMode"]], "ktrianglefan_vertexmode (vertexmode attribute)": [[240, "skia.Vertices.VertexMode.kTriangleFan_VertexMode"]], "ktrianglestrip_vertexmode (vertexmode attribute)": [[240, "skia.Vertices.VertexMode.kTriangleStrip_VertexMode"]], "ktriangles_vertexmode (vertexmode attribute)": [[240, "skia.Vertices.VertexMode.kTriangles_VertexMode"]], "name (vertexmode attribute)": [[240, "skia.Vertices.VertexMode.name"]], "value (vertexmode attribute)": [[240, "skia.Vertices.VertexMode.value"]], "vkformat (class in skia)": [[241, "skia.VkFormat"]], "__init__() (vkformat method)": [[241, "skia.VkFormat.__init__"]], "name (vkformat attribute)": [[241, "skia.VkFormat.name"]], "value (vkformat attribute)": [[241, "skia.VkFormat.value"]], "vkimagelayout (class in skia)": [[242, "skia.VkImageLayout"]], "__init__() (vkimagelayout method)": [[242, "skia.VkImageLayout.__init__"]], "name (vkimagelayout attribute)": [[242, "skia.VkImageLayout.name"]], "value (vkimagelayout attribute)": [[242, "skia.VkImageLayout.value"]], "sizeofpackeduint() (wstream static method)": [[243, "skia.WStream.SizeOfPackedUInt"]], "wstream (class in skia)": [[243, "skia.WStream"]], "__init__() (wstream method)": [[243, "skia.WStream.__init__"]], "byteswritten() (wstream method)": [[243, "skia.WStream.bytesWritten"]], "flush() (wstream method)": [[243, "skia.WStream.flush"]], "newline() (wstream method)": [[243, "skia.WStream.newline"]], "write() (wstream method)": [[243, "skia.WStream.write"]], "write16() (wstream method)": [[243, "skia.WStream.write16"]], "write32() (wstream method)": [[243, "skia.WStream.write32"]], "write8() (wstream method)": [[243, "skia.WStream.write8"]], "writebigdecastext() (wstream method)": [[243, "skia.WStream.writeBigDecAsText"]], "writebool() (wstream method)": [[243, "skia.WStream.writeBool"]], "writedecastext() (wstream method)": [[243, "skia.WStream.writeDecAsText"]], "writehexastext() (wstream method)": [[243, "skia.WStream.writeHexAsText"]], "writepackeduint() (wstream method)": [[243, "skia.WStream.writePackedUInt"]], "writescalar() (wstream method)": [[243, "skia.WStream.writeScalar"]], "writescalarastext() (wstream method)": [[243, "skia.WStream.writeScalarAsText"]], "writestream() (wstream method)": [[243, "skia.WStream.writeStream"]], "writetext() (wstream method)": [[243, "skia.WStream.writeText"]], "hasalpha() (yuvainfo static method)": [[244, "skia.YUVAInfo.HasAlpha"]], "numchannelsinplane() (yuvainfo static method)": [[244, "skia.YUVAInfo.NumChannelsInPlane"]], "numplanes() (yuvainfo static method)": [[244, "skia.YUVAInfo.NumPlanes"]], "planedimensions() (yuvainfo static method)": [[244, "skia.YUVAInfo.PlaneDimensions"]], "yuvainfo (class in skia)": [[244, "skia.YUVAInfo"]], "__init__() (yuvainfo method)": [[244, "skia.YUVAInfo.__init__"]], "computetotalbytes() (yuvainfo method)": [[244, "skia.YUVAInfo.computeTotalBytes"]], "dimensions() (yuvainfo method)": [[244, "skia.YUVAInfo.dimensions"]], "hasalpha() (yuvainfo method)": [[244, "skia.YUVAInfo.hasAlpha"]], "height() (yuvainfo method)": [[244, "skia.YUVAInfo.height"]], "k410 (yuvainfo attribute)": [[244, "skia.YUVAInfo.k410"]], "k411 (yuvainfo attribute)": [[244, "skia.YUVAInfo.k411"]], "k420 (yuvainfo attribute)": [[244, "skia.YUVAInfo.k420"]], "k422 (yuvainfo attribute)": [[244, "skia.YUVAInfo.k422"]], "k440 (yuvainfo attribute)": [[244, "skia.YUVAInfo.k440"]], "k444 (yuvainfo attribute)": [[244, "skia.YUVAInfo.k444"]], "kcentered (yuvainfo attribute)": [[244, "skia.YUVAInfo.kCentered"]], "kmaxplanes (yuvainfo attribute)": [[244, "skia.YUVAInfo.kMaxPlanes"]], "kuyv (yuvainfo attribute)": [[244, "skia.YUVAInfo.kUYV"]], "kuyva (yuvainfo attribute)": [[244, "skia.YUVAInfo.kUYVA"]], "kunknown (yuvainfo attribute)": [[244, "skia.YUVAInfo.kUnknown"]], "kyuv (yuvainfo attribute)": [[244, "skia.YUVAInfo.kYUV"]], "kyuva (yuvainfo attribute)": [[244, "skia.YUVAInfo.kYUVA"]], "ky_uv (yuvainfo attribute)": [[244, "skia.YUVAInfo.kY_UV"]], "ky_uv_a (yuvainfo attribute)": [[244, "skia.YUVAInfo.kY_UV_A"]], "ky_u_v (yuvainfo attribute)": [[244, "skia.YUVAInfo.kY_U_V"]], "ky_u_v_a (yuvainfo attribute)": [[244, "skia.YUVAInfo.kY_U_V_A"]], "ky_vu (yuvainfo attribute)": [[244, "skia.YUVAInfo.kY_VU"]], "ky_vu_a (yuvainfo attribute)": [[244, "skia.YUVAInfo.kY_VU_A"]], "ky_v_u (yuvainfo attribute)": [[244, "skia.YUVAInfo.kY_V_U"]], "ky_v_u_a (yuvainfo attribute)": [[244, "skia.YUVAInfo.kY_V_U_A"]], "numchannelsinplane() (yuvainfo method)": [[244, "skia.YUVAInfo.numChannelsInPlane"]], "numplanes() (yuvainfo method)": [[244, "skia.YUVAInfo.numPlanes"]], "origin() (yuvainfo method)": [[244, "skia.YUVAInfo.origin"]], "planeconfig() (yuvainfo method)": [[244, "skia.YUVAInfo.planeConfig"]], "planedimensions() (yuvainfo method)": [[244, "skia.YUVAInfo.planeDimensions"]], "sitingx() (yuvainfo method)": [[244, "skia.YUVAInfo.sitingX"]], "sitingy() (yuvainfo method)": [[244, "skia.YUVAInfo.sitingY"]], "subsampling() (yuvainfo method)": [[244, "skia.YUVAInfo.subSampling"]], "width() (yuvainfo method)": [[244, "skia.YUVAInfo.width"]], "yuvcolorspace() (yuvainfo method)": [[244, "skia.YUVAInfo.yuvColorSpace"]], "planeconfig (class in skia.yuvainfo)": [[245, "skia.YUVAInfo.PlaneConfig"]], "__init__() (planeconfig method)": [[245, "skia.YUVAInfo.PlaneConfig.__init__"]], "kuyv (planeconfig attribute)": [[245, "skia.YUVAInfo.PlaneConfig.kUYV"]], "kuyva (planeconfig attribute)": [[245, "skia.YUVAInfo.PlaneConfig.kUYVA"]], "kunknown (planeconfig attribute)": [[245, "skia.YUVAInfo.PlaneConfig.kUnknown"]], "kyuv (planeconfig attribute)": [[245, "skia.YUVAInfo.PlaneConfig.kYUV"]], "kyuva (planeconfig attribute)": [[245, "skia.YUVAInfo.PlaneConfig.kYUVA"]], "ky_uv (planeconfig attribute)": [[245, "skia.YUVAInfo.PlaneConfig.kY_UV"]], "ky_uv_a (planeconfig attribute)": [[245, "skia.YUVAInfo.PlaneConfig.kY_UV_A"]], "ky_u_v (planeconfig attribute)": [[245, "skia.YUVAInfo.PlaneConfig.kY_U_V"]], "ky_u_v_a (planeconfig attribute)": [[245, "skia.YUVAInfo.PlaneConfig.kY_U_V_A"]], "ky_vu (planeconfig attribute)": [[245, "skia.YUVAInfo.PlaneConfig.kY_VU"]], "ky_vu_a (planeconfig attribute)": [[245, "skia.YUVAInfo.PlaneConfig.kY_VU_A"]], "ky_v_u (planeconfig attribute)": [[245, "skia.YUVAInfo.PlaneConfig.kY_V_U"]], "ky_v_u_a (planeconfig attribute)": [[245, "skia.YUVAInfo.PlaneConfig.kY_V_U_A"]], "name (planeconfig attribute)": [[245, "skia.YUVAInfo.PlaneConfig.name"]], "value (planeconfig attribute)": [[245, "skia.YUVAInfo.PlaneConfig.value"]], "siting (class in skia.yuvainfo)": [[246, "skia.YUVAInfo.Siting"]], "__init__() (siting method)": [[246, "skia.YUVAInfo.Siting.__init__"]], "kcentered (siting attribute)": [[246, "skia.YUVAInfo.Siting.kCentered"]], "name (siting attribute)": [[246, "skia.YUVAInfo.Siting.name"]], "value (siting attribute)": [[246, "skia.YUVAInfo.Siting.value"]], "subsampling (class in skia.yuvainfo)": [[247, "skia.YUVAInfo.Subsampling"]], "__init__() (subsampling method)": [[247, "skia.YUVAInfo.Subsampling.__init__"]], "k410 (subsampling attribute)": [[247, "skia.YUVAInfo.Subsampling.k410"]], "k411 (subsampling attribute)": [[247, "skia.YUVAInfo.Subsampling.k411"]], "k420 (subsampling attribute)": [[247, "skia.YUVAInfo.Subsampling.k420"]], "k422 (subsampling attribute)": [[247, "skia.YUVAInfo.Subsampling.k422"]], "k440 (subsampling attribute)": [[247, "skia.YUVAInfo.Subsampling.k440"]], "k444 (subsampling attribute)": [[247, "skia.YUVAInfo.Subsampling.k444"]], "kunknown (subsampling attribute)": [[247, "skia.YUVAInfo.Subsampling.kUnknown"]], "name (subsampling attribute)": [[247, "skia.YUVAInfo.Subsampling.name"]], "value (subsampling attribute)": [[247, "skia.YUVAInfo.Subsampling.value"]], "defaultcolortypefordatatype() (yuvapixmapinfo static method)": [[248, "skia.YUVAPixmapInfo.DefaultColorTypeForDataType"]], "numchannelsanddatatype() (yuvapixmapinfo static method)": [[248, "skia.YUVAPixmapInfo.NumChannelsAndDataType"]], "yuvapixmapinfo (class in skia)": [[248, "skia.YUVAPixmapInfo"]], "__init__() (yuvapixmapinfo method)": [[248, "skia.YUVAPixmapInfo.__init__"]], "computetotalbytes() (yuvapixmapinfo method)": [[248, "skia.YUVAPixmapInfo.computeTotalBytes"]], "datatype() (yuvapixmapinfo method)": [[248, "skia.YUVAPixmapInfo.dataType"]], "initpixmapsfromsingleallocation() (yuvapixmapinfo method)": [[248, "skia.YUVAPixmapInfo.initPixmapsFromSingleAllocation"]], "issupported() (yuvapixmapinfo method)": [[248, "skia.YUVAPixmapInfo.isSupported"]], "isvalid() (yuvapixmapinfo method)": [[248, "skia.YUVAPixmapInfo.isValid"]], "kfloat16 (yuvapixmapinfo attribute)": [[248, "skia.YUVAPixmapInfo.kFloat16"]], "klast (yuvapixmapinfo attribute)": [[248, "skia.YUVAPixmapInfo.kLast"]], "kmaxplanes (yuvapixmapinfo attribute)": [[248, "skia.YUVAPixmapInfo.kMaxPlanes"]], "kunorm10_unorm2 (yuvapixmapinfo attribute)": [[248, "skia.YUVAPixmapInfo.kUnorm10_Unorm2"]], "kunorm16 (yuvapixmapinfo attribute)": [[248, "skia.YUVAPixmapInfo.kUnorm16"]], "kunorm8 (yuvapixmapinfo attribute)": [[248, "skia.YUVAPixmapInfo.kUnorm8"]], "numplanes() (yuvapixmapinfo method)": [[248, "skia.YUVAPixmapInfo.numPlanes"]], "planeinfo() (yuvapixmapinfo method)": [[248, "skia.YUVAPixmapInfo.planeInfo"]], "rowbytes() (yuvapixmapinfo method)": [[248, "skia.YUVAPixmapInfo.rowBytes"]], "yuvcolorspace() (yuvapixmapinfo method)": [[248, "skia.YUVAPixmapInfo.yuvColorSpace"]], "yuvainfo() (yuvapixmapinfo method)": [[248, "skia.YUVAPixmapInfo.yuvaInfo"]], "datatype (class in skia.yuvapixmapinfo)": [[249, "skia.YUVAPixmapInfo.DataType"]], "__init__() (datatype method)": [[249, "skia.YUVAPixmapInfo.DataType.__init__"]], "kfloat16 (datatype attribute)": [[249, "skia.YUVAPixmapInfo.DataType.kFloat16"]], "klast (datatype attribute)": [[249, "skia.YUVAPixmapInfo.DataType.kLast"]], "kunorm10_unorm2 (datatype attribute)": [[249, "skia.YUVAPixmapInfo.DataType.kUnorm10_Unorm2"]], "kunorm16 (datatype attribute)": [[249, "skia.YUVAPixmapInfo.DataType.kUnorm16"]], "kunorm8 (datatype attribute)": [[249, "skia.YUVAPixmapInfo.DataType.kUnorm8"]], "name (datatype attribute)": [[249, "skia.YUVAPixmapInfo.DataType.name"]], "value (datatype attribute)": [[249, "skia.YUVAPixmapInfo.DataType.value"]], "all() (supporteddatatypes static method)": [[250, "skia.YUVAPixmapInfo.SupportedDataTypes.All"]], "supporteddatatypes (class in skia.yuvapixmapinfo)": [[250, "skia.YUVAPixmapInfo.SupportedDataTypes"]], "__init__() (supporteddatatypes method)": [[250, "skia.YUVAPixmapInfo.SupportedDataTypes.__init__"]], "enabledatatype() (supporteddatatypes method)": [[250, "skia.YUVAPixmapInfo.SupportedDataTypes.enableDataType"]], "supported() (supporteddatatypes method)": [[250, "skia.YUVAPixmapInfo.SupportedDataTypes.supported"]], "allocate() (yuvapixmaps static method)": [[251, "skia.YUVAPixmaps.Allocate"]], "fromdata() (yuvapixmaps static method)": [[251, "skia.YUVAPixmaps.FromData"]], "fromexternalmemory() (yuvapixmaps static method)": [[251, "skia.YUVAPixmaps.FromExternalMemory"]], "fromexternalpixmaps() (yuvapixmaps static method)": [[251, "skia.YUVAPixmaps.FromExternalPixmaps"]], "yuvapixmaps (class in skia)": [[251, "skia.YUVAPixmaps"]], "__init__() (yuvapixmaps method)": [[251, "skia.YUVAPixmaps.__init__"]], "isvalid() (yuvapixmaps method)": [[251, "skia.YUVAPixmaps.isValid"]], "numplanes() (yuvapixmaps method)": [[251, "skia.YUVAPixmaps.numPlanes"]], "plane() (yuvapixmaps method)": [[251, "skia.YUVAPixmaps.plane"]], "planes() (yuvapixmaps method)": [[251, "skia.YUVAPixmaps.planes"]], "yuvainfo() (yuvapixmaps method)": [[251, "skia.YUVAPixmaps.yuvaInfo"]], "yuvcolorspace (class in skia)": [[252, "skia.YUVColorSpace"]], "__init__() (yuvcolorspace method)": [[252, "skia.YUVColorSpace.__init__"]], "kbt2020_yuvcolorspace (yuvcolorspace attribute)": [[252, "skia.YUVColorSpace.kBT2020_YUVColorSpace"]], "kidentity_yuvcolorspace (yuvcolorspace attribute)": [[252, "skia.YUVColorSpace.kIdentity_YUVColorSpace"]], "kjpeg_yuvcolorspace (yuvcolorspace attribute)": [[252, "skia.YUVColorSpace.kJPEG_YUVColorSpace"]], "klastenum_yuvcolorspace (yuvcolorspace attribute)": [[252, "skia.YUVColorSpace.kLastEnum_YUVColorSpace"]], "krec601_yuvcolorspace (yuvcolorspace attribute)": [[252, "skia.YUVColorSpace.kRec601_YUVColorSpace"]], "krec709_yuvcolorspace (yuvcolorspace attribute)": [[252, "skia.YUVColorSpace.kRec709_YUVColorSpace"]], "name (yuvcolorspace attribute)": [[252, "skia.YUVColorSpace.name"]], "value (yuvcolorspace attribute)": [[252, "skia.YUVColorSpace.value"]], "__init__() (gpubackendapi method)": [[253, "skia.gpuBackendApi.__init__"]], "gpubackendapi (class in skia)": [[253, "skia.gpuBackendApi"]], "kdawn (gpubackendapi attribute)": [[253, "skia.gpuBackendApi.kDawn"]], "kmetal (gpubackendapi attribute)": [[253, "skia.gpuBackendApi.kMetal"]], "kmock (gpubackendapi attribute)": [[253, "skia.gpuBackendApi.kMock"]], "kvulkan (gpubackendapi attribute)": [[253, "skia.gpuBackendApi.kVulkan"]], "name (gpubackendapi attribute)": [[253, "skia.gpuBackendApi.name"]], "value (gpubackendapi attribute)": [[253, "skia.gpuBackendApi.value"]]}})