Search.setIndex({"docnames": ["development", "index", "install", "reference", "reference/skia", "reference/skia.AlphaThresholdFilter", "reference/skia.AlphaType", "reference/skia.ApplyPerspectiveClip", "reference/skia.ArithmeticImageFilter", "reference/skia.AutoCanvasRestore", "reference/skia.BBHFactory", "reference/skia.BBoxHierarchy", "reference/skia.BBoxHierarchy.Metadata", "reference/skia.BackingFit", "reference/skia.Bitmap", "reference/skia.Bitmap.AllocFlags", "reference/skia.BlendMode", "reference/skia.BlendModeCoeff", "reference/skia.BlurImageFilter", "reference/skia.BlurImageFilter.TileMode", "reference/skia.BlurMaskFilter", "reference/skia.BlurStyle", "reference/skia.Budgeted", "reference/skia.Canvas", "reference/skia.Canvas.Lattice", "reference/skia.Canvas.Lattice.RectType", "reference/skia.Canvas.PointMode", "reference/skia.Canvas.QuadAAFlags", "reference/skia.Canvas.SaveLayerFlags", "reference/skia.Canvas.SaveLayerRec", "reference/skia.Canvas.SrcRectConstraint", "reference/skia.ClipOp", "reference/skia.Codec", "reference/skia.Codec.DisposalMethod", "reference/skia.Codec.FrameInfo", "reference/skia.Codec.Options", "reference/skia.Codec.Result", "reference/skia.Codec.ScanlineOrder", "reference/skia.Codec.SelectionPolicy", "reference/skia.Codec.ZeroInitialized", "reference/skia.Color4f", "reference/skia.ColorChannel", "reference/skia.ColorChannelFlag", "reference/skia.ColorFilter", "reference/skia.ColorFilter.Flags", "reference/skia.ColorFilter.Type", "reference/skia.ColorFilterImageFilter", "reference/skia.ColorFilters", "reference/skia.ColorInfo", "reference/skia.ColorMatrix", "reference/skia.ColorMatrixFilter", "reference/skia.ColorMatrixFilter.Flags", "reference/skia.ColorMatrixFilter.Type", "reference/skia.ColorSpace", "reference/skia.ColorType", "reference/skia.ConvergeMode", "reference/skia.CornerPathEffect", "reference/skia.CornerPathEffect.DashInfo", "reference/skia.CornerPathEffect.DashType", "reference/skia.CornerPathEffect.PointData", "reference/skia.CornerPathEffect.PointData.PointFlags", "reference/skia.CornerPathEffect.Type", "reference/skia.DashPathEffect", "reference/skia.Data", "reference/skia.DilateImageFilter", "reference/skia.DiscretePathEffect", "reference/skia.DiscretePathEffect.DashInfo", "reference/skia.DiscretePathEffect.DashType", "reference/skia.DiscretePathEffect.PointData", "reference/skia.DiscretePathEffect.PointData.PointFlags", "reference/skia.DiscretePathEffect.Type", "reference/skia.DisplacementMapEffect", "reference/skia.DisplacementMapEffect.ChannelSelectorType", "reference/skia.Document", "reference/skia.Drawable", "reference/skia.Drawable.Type", "reference/skia.DropShadowImageFilter", "reference/skia.DropShadowImageFilter.ShadowMode", "reference/skia.DynamicMemoryWStream", "reference/skia.EncodedImageFormat", "reference/skia.EncodedOrigin", "reference/skia.ErodeImageFilter", "reference/skia.FILEStream", "reference/skia.FILEWStream", "reference/skia.FilterQuality", "reference/skia.Flattanable", "reference/skia.Flattanable.Type", "reference/skia.Font", "reference/skia.Font.Edging", "reference/skia.FontArguments", "reference/skia.FontArguments.VariationPosition", "reference/skia.FontArguments.VariationPosition.Coordinate", "reference/skia.FontArguments.VariationPosition.Coordinates", "reference/skia.FontHinting", "reference/skia.FontMetrics", "reference/skia.FontMetrics.FontMetricsFlags", "reference/skia.FontMgr", "reference/skia.FontParameters", "reference/skia.FontParameters.Variation", "reference/skia.FontParameters.Variation.Axis", "reference/skia.FontStyle", "reference/skia.FontStyle.Slant", "reference/skia.FontStyle.Weight", "reference/skia.FontStyle.Width", "reference/skia.FontStyleSet", "reference/skia.GrBackendApi", "reference/skia.GrBackendFormat", "reference/skia.GrBackendRenderTarget", "reference/skia.GrBackendSemaphore", "reference/skia.GrBackendSurfaceMutableState", "reference/skia.GrBackendTexture", "reference/skia.GrColorType", "reference/skia.GrContext", "reference/skia.GrContextOptions", "reference/skia.GrContext_Base", "reference/skia.GrDirectContext", "reference/skia.GrFlushInfo", "reference/skia.GrGLBackendState", "reference/skia.GrGLFormat", "reference/skia.GrGLFramebufferInfo", "reference/skia.GrGLInterface", "reference/skia.GrGLTextureInfo", "reference/skia.GrImageContext", "reference/skia.GrMipmapped", "reference/skia.GrMockOptions", "reference/skia.GrMockRenderTargetInfo", "reference/skia.GrMockTextureInfo", "reference/skia.GrProtected", "reference/skia.GrRecordingContext", "reference/skia.GrRenderable", "reference/skia.GrSemaphoresSubmitted", "reference/skia.GrSurfaceOrigin", "reference/skia.GrTextureType", "reference/skia.GrVkAlloc", "reference/skia.GrVkBackendContext", "reference/skia.GrVkDrawableInfo", "reference/skia.GrVkExtensionFlags", "reference/skia.GrVkFeatureFlags", "reference/skia.GrVkImageInfo", "reference/skia.GrVkYcbcrConversionInfo", "reference/skia.GradientShader", "reference/skia.GradientShader.Flags", "reference/skia.HighContrastConfig", "reference/skia.HighContrastConfig.InvertStyle", "reference/skia.HighContrastFilter", "reference/skia.IPoint", "reference/skia.IRect", "reference/skia.ISize", "reference/skia.Image", "reference/skia.Image.BitDepth", "reference/skia.Image.CachingHint", "reference/skia.Image.CompressionType", "reference/skia.Image.LegacyBitmapMode", "reference/skia.ImageFilter", "reference/skia.ImageFilter.CropRect", "reference/skia.ImageFilter.CropRect.CropEdge", "reference/skia.ImageFilter.MapDirection", "reference/skia.ImageFilter.Type", "reference/skia.ImageFilters", "reference/skia.ImageInfo", "reference/skia.LightingImageFilter", "reference/skia.Line2DPathEffect", "reference/skia.Line2DPathEffect.DashInfo", "reference/skia.Line2DPathEffect.DashType", "reference/skia.Line2DPathEffect.PointData", "reference/skia.Line2DPathEffect.PointData.PointFlags", "reference/skia.Line2DPathEffect.Type", "reference/skia.LumaColorFilter", "reference/skia.M44", "reference/skia.MagnifierImageFilter", "reference/skia.MaskFilter", "reference/skia.MaskFilter.Type", "reference/skia.Matrix", "reference/skia.Matrix.ScaleToFit", "reference/skia.Matrix.TypeMask", "reference/skia.MatrixPathEffect", "reference/skia.MemoryStream", "reference/skia.MergePathEffect", "reference/skia.MipmapBuilder", "reference/skia.NullWStream", "reference/skia.OffsetImageFilter", "reference/skia.OpBuilder", "reference/skia.OverdrawColorFilter", "reference/skia.PDF", "reference/skia.PDF.AttributeList", "reference/skia.PDF.DocumentStructureType", "reference/skia.PDF.Metadata", "reference/skia.PDF.StructureElementNode", "reference/skia.Paint", "reference/skia.Paint.Cap", "reference/skia.Paint.Join", "reference/skia.Paint.Style", "reference/skia.PaintImageFilter", "reference/skia.Path", "reference/skia.Path.AddPathMode", "reference/skia.Path.ArcSize", "reference/skia.Path.Iter", "reference/skia.Path.RawIter", "reference/skia.Path.SegmentMask", "reference/skia.Path.Verb", "reference/skia.Path1DPathEffect", "reference/skia.Path1DPathEffect.DashInfo", "reference/skia.Path1DPathEffect.DashType", "reference/skia.Path1DPathEffect.PointData", "reference/skia.Path1DPathEffect.PointData.PointFlags", "reference/skia.Path1DPathEffect.Style", "reference/skia.Path1DPathEffect.Type", "reference/skia.Path2DPathEffect", "reference/skia.Path2DPathEffect.DashInfo", "reference/skia.Path2DPathEffect.DashType", "reference/skia.Path2DPathEffect.PointData", "reference/skia.Path2DPathEffect.PointData.PointFlags", "reference/skia.Path2DPathEffect.Type", "reference/skia.PathBuilder", "reference/skia.PathBuilder.ArcSize", "reference/skia.PathDirection", "reference/skia.PathEffect", "reference/skia.PathEffect.DashInfo", "reference/skia.PathEffect.DashType", "reference/skia.PathEffect.PointData", "reference/skia.PathEffect.PointData.PointFlags", "reference/skia.PathEffect.Type", "reference/skia.PathFillType", "reference/skia.PathMeasure", "reference/skia.PathMeasure.GetPosAndTan", "reference/skia.PathOp", "reference/skia.PathSegmentMask", "reference/skia.PathVerb", "reference/skia.PerlinNoiseShader", "reference/skia.Picture", "reference/skia.PictureRecorder", "reference/skia.PictureRecorder.FinishFlags", "reference/skia.PixelGeometry", "reference/skia.PixelRef", "reference/skia.Pixmap", "reference/skia.Point", "reference/skia.Point3", "reference/skia.RRect", "reference/skia.RRect.Corner", "reference/skia.RRect.Type", "reference/skia.RSXform", "reference/skia.Rect", "reference/skia.RefCnt", "reference/skia.RefCntBase", "reference/skia.Region", "reference/skia.Region.Cliperator", "reference/skia.Region.Iterator", "reference/skia.Region.Op", "reference/skia.Region.Spanerator", "reference/skia.SVGCanvas", "reference/skia.SVGDOM", "reference/skia.Shader", "reference/skia.Shader.GradientInfo", "reference/skia.Shader.GradientType", "reference/skia.Shader.Type", "reference/skia.ShaderMaskFilter", "reference/skia.Shaders", "reference/skia.Size", "reference/skia.Stream", "reference/skia.StreamAsset", "reference/skia.StreamMemory", "reference/skia.StreamRewindable", "reference/skia.StreamSeekable", "reference/skia.String", "reference/skia.StrokePathEffect", "reference/skia.StrokeRec", "reference/skia.StrokeRec.InitStyle", "reference/skia.StrokeRec.Style", "reference/skia.Surface", "reference/skia.Surface.AsyncReadResult", "reference/skia.Surface.BackendHandleAccess", "reference/skia.Surface.BackendSurfaceAccess", "reference/skia.Surface.ContentChangeMode", "reference/skia.Surface.RescaleGamma", "reference/skia.SurfaceCharacterization", "reference/skia.SurfaceProps", "reference/skia.SurfaceProps.Flags", "reference/skia.SurfaceProps.InitType", "reference/skia.TableColorFilter", "reference/skia.TableMaskFilter", "reference/skia.TextBlob", "reference/skia.TextBlob.Iter", "reference/skia.TextBlob.Iter.Run", "reference/skia.TextBlobBuilder", "reference/skia.TextEncoding", "reference/skia.TileImageFilter", "reference/skia.TileMode", "reference/skia.TrimPathEffect", "reference/skia.TrimPathEffect.Mode", "reference/skia.Typeface", "reference/skia.Typeface.SerializeBehavior", "reference/skia.Vertices", "reference/skia.Vertices.VertexMode", "reference/skia.VkFormat", "reference/skia.VkImageLayout", "reference/skia.WStream", "reference/skia.XfermodeImageFilter", "reference/skia.YUVAIndex", "reference/skia.YUVAIndex.Index", "reference/skia.YUVAInfo", "reference/skia.YUVAInfo.PlanarConfig", "reference/skia.YUVAInfo.Siting", "reference/skia.YUVAPixmapInfo", "reference/skia.YUVAPixmapInfo.DataType", "reference/skia.YUVAPixmapInfo.SupportedDataTypes", "reference/skia.YUVAPixmaps", "reference/skia.YUVASizeInfo", "reference/skia.YUVColorSpace", "tutorial/canvas", "tutorial/index", "tutorial/overview", "tutorial/paint", "tutorial/path"], "filenames": ["development.rst", "index.rst", "install.rst", "reference.rst", "reference/skia.rst", "reference/skia.AlphaThresholdFilter.rst", "reference/skia.AlphaType.rst", "reference/skia.ApplyPerspectiveClip.rst", "reference/skia.ArithmeticImageFilter.rst", "reference/skia.AutoCanvasRestore.rst", "reference/skia.BBHFactory.rst", "reference/skia.BBoxHierarchy.rst", "reference/skia.BBoxHierarchy.Metadata.rst", "reference/skia.BackingFit.rst", "reference/skia.Bitmap.rst", "reference/skia.Bitmap.AllocFlags.rst", "reference/skia.BlendMode.rst", "reference/skia.BlendModeCoeff.rst", "reference/skia.BlurImageFilter.rst", "reference/skia.BlurImageFilter.TileMode.rst", "reference/skia.BlurMaskFilter.rst", "reference/skia.BlurStyle.rst", "reference/skia.Budgeted.rst", "reference/skia.Canvas.rst", "reference/skia.Canvas.Lattice.rst", "reference/skia.Canvas.Lattice.RectType.rst", "reference/skia.Canvas.PointMode.rst", "reference/skia.Canvas.QuadAAFlags.rst", "reference/skia.Canvas.SaveLayerFlags.rst", "reference/skia.Canvas.SaveLayerRec.rst", "reference/skia.Canvas.SrcRectConstraint.rst", "reference/skia.ClipOp.rst", "reference/skia.Codec.rst", "reference/skia.Codec.DisposalMethod.rst", "reference/skia.Codec.FrameInfo.rst", "reference/skia.Codec.Options.rst", "reference/skia.Codec.Result.rst", "reference/skia.Codec.ScanlineOrder.rst", "reference/skia.Codec.SelectionPolicy.rst", "reference/skia.Codec.ZeroInitialized.rst", "reference/skia.Color4f.rst", "reference/skia.ColorChannel.rst", "reference/skia.ColorChannelFlag.rst", "reference/skia.ColorFilter.rst", "reference/skia.ColorFilter.Flags.rst", "reference/skia.ColorFilter.Type.rst", "reference/skia.ColorFilterImageFilter.rst", "reference/skia.ColorFilters.rst", "reference/skia.ColorInfo.rst", "reference/skia.ColorMatrix.rst", "reference/skia.ColorMatrixFilter.rst", "reference/skia.ColorMatrixFilter.Flags.rst", "reference/skia.ColorMatrixFilter.Type.rst", "reference/skia.ColorSpace.rst", "reference/skia.ColorType.rst", "reference/skia.ConvergeMode.rst", "reference/skia.CornerPathEffect.rst", "reference/skia.CornerPathEffect.DashInfo.rst", "reference/skia.CornerPathEffect.DashType.rst", "reference/skia.CornerPathEffect.PointData.rst", "reference/skia.CornerPathEffect.PointData.PointFlags.rst", "reference/skia.CornerPathEffect.Type.rst", "reference/skia.DashPathEffect.rst", "reference/skia.Data.rst", "reference/skia.DilateImageFilter.rst", "reference/skia.DiscretePathEffect.rst", "reference/skia.DiscretePathEffect.DashInfo.rst", "reference/skia.DiscretePathEffect.DashType.rst", "reference/skia.DiscretePathEffect.PointData.rst", "reference/skia.DiscretePathEffect.PointData.PointFlags.rst", "reference/skia.DiscretePathEffect.Type.rst", "reference/skia.DisplacementMapEffect.rst", "reference/skia.DisplacementMapEffect.ChannelSelectorType.rst", "reference/skia.Document.rst", "reference/skia.Drawable.rst", "reference/skia.Drawable.Type.rst", "reference/skia.DropShadowImageFilter.rst", "reference/skia.DropShadowImageFilter.ShadowMode.rst", "reference/skia.DynamicMemoryWStream.rst", "reference/skia.EncodedImageFormat.rst", "reference/skia.EncodedOrigin.rst", "reference/skia.ErodeImageFilter.rst", "reference/skia.FILEStream.rst", "reference/skia.FILEWStream.rst", "reference/skia.FilterQuality.rst", "reference/skia.Flattanable.rst", "reference/skia.Flattanable.Type.rst", "reference/skia.Font.rst", "reference/skia.Font.Edging.rst", "reference/skia.FontArguments.rst", "reference/skia.FontArguments.VariationPosition.rst", "reference/skia.FontArguments.VariationPosition.Coordinate.rst", "reference/skia.FontArguments.VariationPosition.Coordinates.rst", "reference/skia.FontHinting.rst", "reference/skia.FontMetrics.rst", "reference/skia.FontMetrics.FontMetricsFlags.rst", "reference/skia.FontMgr.rst", "reference/skia.FontParameters.rst", "reference/skia.FontParameters.Variation.rst", "reference/skia.FontParameters.Variation.Axis.rst", "reference/skia.FontStyle.rst", "reference/skia.FontStyle.Slant.rst", "reference/skia.FontStyle.Weight.rst", "reference/skia.FontStyle.Width.rst", "reference/skia.FontStyleSet.rst", "reference/skia.GrBackendApi.rst", "reference/skia.GrBackendFormat.rst", "reference/skia.GrBackendRenderTarget.rst", "reference/skia.GrBackendSemaphore.rst", "reference/skia.GrBackendSurfaceMutableState.rst", "reference/skia.GrBackendTexture.rst", "reference/skia.GrColorType.rst", "reference/skia.GrContext.rst", "reference/skia.GrContextOptions.rst", "reference/skia.GrContext_Base.rst", "reference/skia.GrDirectContext.rst", "reference/skia.GrFlushInfo.rst", "reference/skia.GrGLBackendState.rst", "reference/skia.GrGLFormat.rst", "reference/skia.GrGLFramebufferInfo.rst", "reference/skia.GrGLInterface.rst", "reference/skia.GrGLTextureInfo.rst", "reference/skia.GrImageContext.rst", "reference/skia.GrMipmapped.rst", "reference/skia.GrMockOptions.rst", "reference/skia.GrMockRenderTargetInfo.rst", "reference/skia.GrMockTextureInfo.rst", "reference/skia.GrProtected.rst", "reference/skia.GrRecordingContext.rst", "reference/skia.GrRenderable.rst", "reference/skia.GrSemaphoresSubmitted.rst", "reference/skia.GrSurfaceOrigin.rst", "reference/skia.GrTextureType.rst", "reference/skia.GrVkAlloc.rst", "reference/skia.GrVkBackendContext.rst", "reference/skia.GrVkDrawableInfo.rst", "reference/skia.GrVkExtensionFlags.rst", "reference/skia.GrVkFeatureFlags.rst", "reference/skia.GrVkImageInfo.rst", "reference/skia.GrVkYcbcrConversionInfo.rst", "reference/skia.GradientShader.rst", "reference/skia.GradientShader.Flags.rst", "reference/skia.HighContrastConfig.rst", "reference/skia.HighContrastConfig.InvertStyle.rst", "reference/skia.HighContrastFilter.rst", "reference/skia.IPoint.rst", "reference/skia.IRect.rst", "reference/skia.ISize.rst", "reference/skia.Image.rst", "reference/skia.Image.BitDepth.rst", "reference/skia.Image.CachingHint.rst", "reference/skia.Image.CompressionType.rst", "reference/skia.Image.LegacyBitmapMode.rst", "reference/skia.ImageFilter.rst", "reference/skia.ImageFilter.CropRect.rst", "reference/skia.ImageFilter.CropRect.CropEdge.rst", "reference/skia.ImageFilter.MapDirection.rst", "reference/skia.ImageFilter.Type.rst", "reference/skia.ImageFilters.rst", "reference/skia.ImageInfo.rst", "reference/skia.LightingImageFilter.rst", "reference/skia.Line2DPathEffect.rst", "reference/skia.Line2DPathEffect.DashInfo.rst", "reference/skia.Line2DPathEffect.DashType.rst", "reference/skia.Line2DPathEffect.PointData.rst", "reference/skia.Line2DPathEffect.PointData.PointFlags.rst", "reference/skia.Line2DPathEffect.Type.rst", "reference/skia.LumaColorFilter.rst", "reference/skia.M44.rst", "reference/skia.MagnifierImageFilter.rst", "reference/skia.MaskFilter.rst", "reference/skia.MaskFilter.Type.rst", "reference/skia.Matrix.rst", "reference/skia.Matrix.ScaleToFit.rst", "reference/skia.Matrix.TypeMask.rst", "reference/skia.MatrixPathEffect.rst", "reference/skia.MemoryStream.rst", "reference/skia.MergePathEffect.rst", "reference/skia.MipmapBuilder.rst", "reference/skia.NullWStream.rst", "reference/skia.OffsetImageFilter.rst", "reference/skia.OpBuilder.rst", "reference/skia.OverdrawColorFilter.rst", "reference/skia.PDF.rst", "reference/skia.PDF.AttributeList.rst", "reference/skia.PDF.DocumentStructureType.rst", "reference/skia.PDF.Metadata.rst", "reference/skia.PDF.StructureElementNode.rst", "reference/skia.Paint.rst", "reference/skia.Paint.Cap.rst", "reference/skia.Paint.Join.rst", "reference/skia.Paint.Style.rst", "reference/skia.PaintImageFilter.rst", "reference/skia.Path.rst", "reference/skia.Path.AddPathMode.rst", "reference/skia.Path.ArcSize.rst", "reference/skia.Path.Iter.rst", "reference/skia.Path.RawIter.rst", "reference/skia.Path.SegmentMask.rst", "reference/skia.Path.Verb.rst", "reference/skia.Path1DPathEffect.rst", "reference/skia.Path1DPathEffect.DashInfo.rst", "reference/skia.Path1DPathEffect.DashType.rst", "reference/skia.Path1DPathEffect.PointData.rst", "reference/skia.Path1DPathEffect.PointData.PointFlags.rst", "reference/skia.Path1DPathEffect.Style.rst", "reference/skia.Path1DPathEffect.Type.rst", "reference/skia.Path2DPathEffect.rst", "reference/skia.Path2DPathEffect.DashInfo.rst", "reference/skia.Path2DPathEffect.DashType.rst", "reference/skia.Path2DPathEffect.PointData.rst", "reference/skia.Path2DPathEffect.PointData.PointFlags.rst", "reference/skia.Path2DPathEffect.Type.rst", "reference/skia.PathBuilder.rst", "reference/skia.PathBuilder.ArcSize.rst", "reference/skia.PathDirection.rst", "reference/skia.PathEffect.rst", "reference/skia.PathEffect.DashInfo.rst", "reference/skia.PathEffect.DashType.rst", "reference/skia.PathEffect.PointData.rst", "reference/skia.PathEffect.PointData.PointFlags.rst", "reference/skia.PathEffect.Type.rst", "reference/skia.PathFillType.rst", "reference/skia.PathMeasure.rst", "reference/skia.PathMeasure.GetPosAndTan.rst", "reference/skia.PathOp.rst", "reference/skia.PathSegmentMask.rst", "reference/skia.PathVerb.rst", "reference/skia.PerlinNoiseShader.rst", "reference/skia.Picture.rst", "reference/skia.PictureRecorder.rst", "reference/skia.PictureRecorder.FinishFlags.rst", "reference/skia.PixelGeometry.rst", "reference/skia.PixelRef.rst", "reference/skia.Pixmap.rst", "reference/skia.Point.rst", "reference/skia.Point3.rst", "reference/skia.RRect.rst", "reference/skia.RRect.Corner.rst", "reference/skia.RRect.Type.rst", "reference/skia.RSXform.rst", "reference/skia.Rect.rst", "reference/skia.RefCnt.rst", "reference/skia.RefCntBase.rst", "reference/skia.Region.rst", "reference/skia.Region.Cliperator.rst", "reference/skia.Region.Iterator.rst", "reference/skia.Region.Op.rst", "reference/skia.Region.Spanerator.rst", "reference/skia.SVGCanvas.rst", "reference/skia.SVGDOM.rst", "reference/skia.Shader.rst", "reference/skia.Shader.GradientInfo.rst", "reference/skia.Shader.GradientType.rst", "reference/skia.Shader.Type.rst", "reference/skia.ShaderMaskFilter.rst", "reference/skia.Shaders.rst", "reference/skia.Size.rst", "reference/skia.Stream.rst", "reference/skia.StreamAsset.rst", "reference/skia.StreamMemory.rst", "reference/skia.StreamRewindable.rst", "reference/skia.StreamSeekable.rst", "reference/skia.String.rst", "reference/skia.StrokePathEffect.rst", "reference/skia.StrokeRec.rst", "reference/skia.StrokeRec.InitStyle.rst", "reference/skia.StrokeRec.Style.rst", "reference/skia.Surface.rst", "reference/skia.Surface.AsyncReadResult.rst", "reference/skia.Surface.BackendHandleAccess.rst", "reference/skia.Surface.BackendSurfaceAccess.rst", "reference/skia.Surface.ContentChangeMode.rst", "reference/skia.Surface.RescaleGamma.rst", "reference/skia.SurfaceCharacterization.rst", "reference/skia.SurfaceProps.rst", "reference/skia.SurfaceProps.Flags.rst", "reference/skia.SurfaceProps.InitType.rst", "reference/skia.TableColorFilter.rst", "reference/skia.TableMaskFilter.rst", "reference/skia.TextBlob.rst", "reference/skia.TextBlob.Iter.rst", "reference/skia.TextBlob.Iter.Run.rst", "reference/skia.TextBlobBuilder.rst", "reference/skia.TextEncoding.rst", "reference/skia.TileImageFilter.rst", "reference/skia.TileMode.rst", "reference/skia.TrimPathEffect.rst", "reference/skia.TrimPathEffect.Mode.rst", "reference/skia.Typeface.rst", "reference/skia.Typeface.SerializeBehavior.rst", "reference/skia.Vertices.rst", "reference/skia.Vertices.VertexMode.rst", "reference/skia.VkFormat.rst", "reference/skia.VkImageLayout.rst", "reference/skia.WStream.rst", "reference/skia.XfermodeImageFilter.rst", "reference/skia.YUVAIndex.rst", "reference/skia.YUVAIndex.Index.rst", "reference/skia.YUVAInfo.rst", "reference/skia.YUVAInfo.PlanarConfig.rst", "reference/skia.YUVAInfo.Siting.rst", "reference/skia.YUVAPixmapInfo.rst", "reference/skia.YUVAPixmapInfo.DataType.rst", "reference/skia.YUVAPixmapInfo.SupportedDataTypes.rst", "reference/skia.YUVAPixmaps.rst", "reference/skia.YUVASizeInfo.rst", "reference/skia.YUVColorSpace.rst", "tutorial/canvas.rst", "tutorial/index.rst", "tutorial/overview.rst", "tutorial/paint.rst", "tutorial/path.rst"], "titles": ["Development", "skia-python", "Install", "Reference", "skia", "AlphaThresholdFilter", "AlphaType", "ApplyPerspectiveClip", "ArithmeticImageFilter", "AutoCanvasRestore", "BBHFactory", "BBoxHierarchy", "BBoxHierarchy.Metadata", "BackingFit", "Bitmap", "Bitmap.AllocFlags", "BlendMode", "BlendModeCoeff", "BlurImageFilter", "BlurImageFilter.TileMode", "BlurMaskFilter", "BlurStyle", "Budgeted", "Canvas", "Canvas.Lattice", "Canvas.Lattice.RectType", "Canvas.PointMode", "Canvas.QuadAAFlags", "Canvas.SaveLayerFlags", "Canvas.SaveLayerRec", "Canvas.SrcRectConstraint", "ClipOp", "Codec", "Codec.DisposalMethod", "Codec.FrameInfo", "Codec.Options", "Codec.Result", "Codec.ScanlineOrder", "Codec.SelectionPolicy", "Codec.ZeroInitialized", "Color4f", "ColorChannel", "ColorChannelFlag", "ColorFilter", "ColorFilter.Flags", "ColorFilter.Type", "ColorFilterImageFilter", "ColorFilters", "ColorInfo", "ColorMatrix", "ColorMatrixFilter", "ColorMatrixFilter.Flags", "ColorMatrixFilter.Type", "ColorSpace", "ColorType", "ConvergeMode", "CornerPathEffect", "CornerPathEffect.DashInfo", "CornerPathEffect.DashType", "CornerPathEffect.PointData", "CornerPathEffect.PointData.PointFlags", "CornerPathEffect.Type", "DashPathEffect", "Data", "DilateImageFilter", "DiscretePathEffect", "DiscretePathEffect.DashInfo", "DiscretePathEffect.DashType", "DiscretePathEffect.PointData", "DiscretePathEffect.PointData.PointFlags", "DiscretePathEffect.Type", "DisplacementMapEffect", "DisplacementMapEffect.ChannelSelectorType", "Document", "Drawable", "Drawable.Type", "DropShadowImageFilter", "DropShadowImageFilter.ShadowMode", "DynamicMemoryWStream", "EncodedImageFormat", "EncodedOrigin", "ErodeImageFilter", "FILEStream", "FILEWStream", "FilterQuality", "Flattanable", "Flattanable.Type", "Font", "Font.Edging", "FontArguments", "FontArguments.VariationPosition", "FontArguments.VariationPosition.Coordinate", "FontArguments.VariationPosition.Coordinates", "FontHinting", "FontMetrics", "FontMetrics.FontMetricsFlags", "FontMgr", "FontParameters", "FontParameters.Variation", "FontParameters.Variation.Axis", "FontStyle", "FontStyle.Slant", "FontStyle.Weight", "FontStyle.Width", "FontStyleSet", "GrBackendApi", "GrBackendFormat", "GrBackendRenderTarget", "GrBackendSemaphore", "GrBackendSurfaceMutableState", "GrBackendTexture", "GrColorType", "GrContext", "GrContextOptions", "GrContext_Base", "GrDirectContext", "GrFlushInfo", "GrGLBackendState", "GrGLFormat", "GrGLFramebufferInfo", "GrGLInterface", "GrGLTextureInfo", "GrImageContext", "GrMipmapped", "GrMockOptions", "GrMockRenderTargetInfo", "GrMockTextureInfo", "GrProtected", "GrRecordingContext", "GrRenderable", "GrSemaphoresSubmitted", "GrSurfaceOrigin", "GrTextureType", "GrVkAlloc", "GrVkBackendContext", "GrVkDrawableInfo", "GrVkExtensionFlags", "GrVkFeatureFlags", "GrVkImageInfo", "GrVkYcbcrConversionInfo", "GradientShader", "GradientShader.Flags", "HighContrastConfig", "HighContrastConfig.InvertStyle", "HighContrastFilter", "IPoint", "IRect", "ISize", "Image", "Image.BitDepth", "Image.CachingHint", "Image.CompressionType", "Image.LegacyBitmapMode", "ImageFilter", "ImageFilter.CropRect", "ImageFilter.CropRect.CropEdge", "ImageFilter.MapDirection", "ImageFilter.Type", "ImageFilters", "ImageInfo", "LightingImageFilter", "Line2DPathEffect", "Line2DPathEffect.DashInfo", "Line2DPathEffect.DashType", "Line2DPathEffect.PointData", "Line2DPathEffect.PointData.PointFlags", "Line2DPathEffect.Type", "LumaColorFilter", "M44", "MagnifierImageFilter", "MaskFilter", "MaskFilter.Type", "Matrix", "Matrix.ScaleToFit", "Matrix.TypeMask", "MatrixPathEffect", "MemoryStream", "MergePathEffect", "MipmapBuilder", "NullWStream", "OffsetImageFilter", "OpBuilder", "OverdrawColorFilter", "PDF", "PDF.AttributeList", "PDF.DocumentStructureType", "PDF.Metadata", "PDF.StructureElementNode", "Paint", "Paint.Cap", "Paint.Join", "Paint.Style", "PaintImageFilter", "Path", "Path.AddPathMode", "Path.ArcSize", "Path.Iter", "Path.RawIter", "Path.SegmentMask", "Path.Verb", "Path1DPathEffect", "Path1DPathEffect.DashInfo", "Path1DPathEffect.DashType", "Path1DPathEffect.PointData", "Path1DPathEffect.PointData.PointFlags", "Path1DPathEffect.Style", "Path1DPathEffect.Type", "Path2DPathEffect", "Path2DPathEffect.DashInfo", "Path2DPathEffect.DashType", "Path2DPathEffect.PointData", "Path2DPathEffect.PointData.PointFlags", "Path2DPathEffect.Type", "PathBuilder", "PathBuilder.ArcSize", "PathDirection", "PathEffect", "PathEffect.DashInfo", "PathEffect.DashType", "PathEffect.PointData", "PathEffect.PointData.PointFlags", "PathEffect.Type", "PathFillType", "PathMeasure", "PathMeasure.GetPosAndTan", "PathOp", "PathSegmentMask", "PathVerb", "PerlinNoiseShader", "Picture", "PictureRecorder", "PictureRecorder.FinishFlags", "PixelGeometry", "PixelRef", "Pixmap", "Point", "Point3", "RRect", "RRect.Corner", "RRect.Type", "RSXform", "Rect", "RefCnt", "RefCntBase", "Region", "Region.Cliperator", "Region.Iterator", "Region.Op", "Region.Spanerator", "SVGCanvas", "SVGDOM", "Shader", "Shader.GradientInfo", "Shader.GradientType", "Shader.Type", "ShaderMaskFilter", "Shaders", "Size", "Stream", "StreamAsset", "StreamMemory", "StreamRewindable", "StreamSeekable", "String", "StrokePathEffect", "StrokeRec", "StrokeRec.InitStyle", "StrokeRec.Style", "Surface", "Surface.AsyncReadResult", "Surface.BackendHandleAccess", "Surface.BackendSurfaceAccess", "Surface.ContentChangeMode", "Surface.RescaleGamma", "SurfaceCharacterization", "SurfaceProps", "SurfaceProps.Flags", "SurfaceProps.InitType", "TableColorFilter", "TableMaskFilter", "TextBlob", "TextBlob.Iter", "TextBlob.Iter.Run", "TextBlobBuilder", "TextEncoding", "TileImageFilter", "TileMode", "TrimPathEffect", "TrimPathEffect.Mode", "Typeface", "Typeface.SerializeBehavior", "Vertices", "Vertices.VertexMode", "VkFormat", "VkImageLayout", "WStream", "XfermodeImageFilter", "YUVAIndex", "YUVAIndex.Index", "YUVAInfo", "YUVAInfo.PlanarConfig", "YUVAInfo.Siting", "YUVAPixmapInfo", "YUVAPixmapInfo.DataType", "YUVAPixmapInfo.SupportedDataTypes", "YUVAPixmaps", "YUVASizeInfo", "YUVColorSpace", "Canvas Creation", "Tutorial", "Overview", "Paint Overview", "Path Overview"], "terms": {"skia": [0, 2, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312], "i": [0, 1, 2, 4, 5, 6, 9, 11, 13, 14, 15, 17, 23, 24, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 47, 48, 50, 53, 56, 58, 62, 63, 65, 67, 73, 74, 78, 82, 85, 87, 92, 94, 95, 96, 99, 104, 105, 107, 109, 112, 114, 115, 116, 120, 122, 128, 134, 138, 140, 144, 145, 146, 148, 152, 153, 154, 158, 159, 161, 163, 167, 170, 172, 176, 181, 183, 186, 187, 188, 193, 194, 196, 197, 200, 202, 207, 209, 213, 216, 218, 222, 223, 228, 229, 230, 232, 233, 234, 235, 236, 237, 241, 242, 243, 244, 245, 246, 249, 250, 251, 253, 258, 259, 260, 261, 262, 263, 265, 268, 269, 270, 278, 280, 283, 287, 289, 296, 297, 299, 300, 301, 302, 304, 305, 306, 308, 309, 310, 311, 312], "built": [0, 2, 14, 23, 148, 234, 280, 283], "upon": [0, 74, 268], "pybind11": [0, 2], "ar": [0, 2, 4, 6, 11, 14, 17, 23, 24, 32, 33, 36, 37, 40, 43, 48, 50, 53, 56, 65, 73, 74, 82, 85, 87, 94, 95, 96, 104, 109, 112, 114, 115, 116, 117, 120, 122, 128, 134, 140, 145, 146, 147, 148, 153, 158, 159, 161, 170, 172, 176, 178, 183, 186, 188, 193, 196, 197, 200, 207, 213, 216, 223, 229, 230, 232, 234, 235, 236, 237, 241, 242, 243, 244, 250, 251, 253, 257, 258, 259, 260, 261, 262, 268, 278, 280, 283, 285, 287, 289, 299, 300, 301, 302, 303, 304, 305, 306, 308, 310, 311, 312], "mostli": 0, "plain": 0, "convers": [0, 14, 144, 148, 234, 235, 268, 305], "from": [0, 4, 14, 16, 23, 24, 32, 34, 36, 37, 40, 48, 53, 56, 65, 80, 87, 94, 96, 112, 115, 116, 145, 146, 148, 154, 158, 159, 161, 168, 172, 186, 188, 193, 196, 197, 200, 207, 213, 216, 225, 228, 229, 230, 234, 235, 236, 237, 241, 244, 249, 268, 269, 280, 283, 285, 289, 297, 302, 306, 308, 310, 311, 312], "c": [0, 2, 4, 14, 47, 48, 54, 148, 159, 172, 193, 237, 241, 256, 274, 311], "api": [0, 1, 23, 37, 40, 73, 105, 107, 109, 112, 114, 115, 116, 122, 128, 148, 258, 268, 309], "function": [0, 11, 14, 17, 23, 29, 32, 40, 47, 48, 53, 71, 74, 78, 83, 87, 92, 100, 106, 107, 110, 112, 115, 116, 119, 121, 125, 126, 142, 145, 146, 147, 148, 154, 158, 159, 172, 176, 179, 183, 186, 188, 193, 196, 197, 213, 223, 228, 229, 230, 234, 235, 236, 237, 240, 241, 244, 246, 251, 256, 257, 263, 265, 268, 275, 280, 289, 295, 299, 302, 304], "name": [0, 4, 6, 7, 13, 15, 16, 17, 19, 21, 22, 25, 26, 27, 28, 30, 31, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 50, 51, 52, 54, 55, 56, 58, 60, 61, 65, 67, 69, 70, 72, 74, 75, 77, 79, 80, 84, 85, 86, 88, 93, 95, 96, 101, 102, 103, 105, 111, 117, 118, 123, 127, 129, 130, 131, 132, 136, 137, 141, 143, 149, 150, 151, 152, 153, 155, 156, 157, 161, 163, 165, 166, 167, 170, 171, 173, 174, 184, 185, 186, 189, 190, 191, 193, 194, 195, 198, 199, 200, 202, 204, 205, 206, 207, 209, 211, 212, 214, 215, 216, 218, 220, 221, 222, 224, 225, 226, 227, 231, 232, 238, 239, 247, 251, 253, 254, 266, 267, 270, 271, 272, 273, 276, 277, 284, 286, 288, 289, 290, 292, 293, 294, 298, 300, 301, 303, 307], "remain": [0, 14, 23, 24, 32, 89, 99, 112, 115, 148, 172, 237, 249, 279, 302, 305, 312], "same": [0, 4, 14, 23, 29, 32, 37, 43, 48, 53, 58, 62, 63, 65, 67, 74, 82, 87, 112, 115, 116, 148, 153, 158, 159, 163, 172, 176, 183, 188, 193, 202, 209, 218, 222, 230, 236, 237, 244, 251, 258, 259, 260, 261, 262, 265, 268, 289, 302, 308], "A": [0, 23, 32, 36, 40, 47, 62, 112, 115, 117, 158, 172, 183, 186, 187, 188, 193, 240, 268, 278, 290, 297, 299, 300, 302, 303, 306, 311, 312], "few": [0, 2, 148, 244], "differ": [0, 4, 14, 23, 32, 41, 55, 65, 74, 148, 172, 188, 193, 237, 244, 258, 268, 278, 311], "all": [0, 4, 11, 14, 23, 24, 32, 37, 39, 40, 43, 50, 56, 58, 59, 62, 65, 67, 68, 73, 74, 82, 85, 87, 92, 96, 104, 109, 112, 114, 115, 116, 120, 122, 128, 134, 146, 148, 153, 154, 158, 159, 161, 163, 164, 170, 172, 174, 176, 181, 188, 193, 200, 202, 203, 207, 209, 210, 216, 218, 219, 229, 234, 237, 241, 242, 243, 244, 250, 251, 253, 258, 259, 260, 261, 262, 268, 278, 280, 287, 289, 299, 302, 304, 308, 310, 311], "resid": [0, 148, 268], "modul": [0, 3, 4, 251], "remov": [0, 23, 92, 188, 193, 263], "class": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310], "prefix": 0, "sk": [0, 172], "e": [0, 17, 32, 33, 34, 36, 40, 47, 56, 74, 84, 112, 115, 134, 144, 148, 153, 158, 172, 186, 188, 232, 236, 251, 265, 268, 275, 279, 287, 300, 310, 311], "g": [0, 4, 14, 32, 34, 36, 40, 56, 74, 84, 112, 115, 134, 144, 148, 158, 167, 172, 186, 188, 232, 251, 268, 275, 278, 279, 287, 300, 307, 310, 311], "skcanva": [0, 9, 23, 73, 74, 158, 183, 229, 230], "canva": [0, 1, 4, 9, 14, 73, 74, 148, 153, 158, 168, 183, 187, 188, 193, 213, 216, 229, 230, 234, 244, 249, 250, 268, 291, 309, 311, 312], "some": [0, 14, 23, 32, 53, 74, 87, 112, 115, 148, 153, 193, 229, 234, 249, 251, 268, 279, 289, 310, 311], "method": [0, 310], "signatur": [0, 188, 289], "adapt": 0, "style": [0, 23, 87, 96, 170, 188, 200, 265, 289, 310, 311, 312], "surfac": [0, 14, 23, 48, 112, 115, 128, 131, 148, 158, 159, 193, 234, 275, 283, 308, 310], "__init__": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "accept": [0, 148, 153, 158], "addit": [0, 14, 35, 56, 65, 87, 148, 161, 188, 193, 200, 207, 216, 234, 268, 301], "arg": [0, 2, 5, 8, 10, 11, 12, 14, 18, 20, 23, 24, 29, 32, 40, 43, 46, 47, 48, 50, 53, 56, 62, 64, 65, 71, 73, 74, 76, 78, 81, 83, 85, 87, 92, 97, 98, 100, 104, 106, 107, 110, 112, 114, 115, 119, 121, 122, 125, 126, 128, 135, 140, 142, 144, 145, 146, 147, 148, 153, 154, 158, 159, 160, 161, 167, 169, 170, 172, 175, 176, 177, 179, 180, 182, 183, 186, 188, 192, 193, 196, 197, 200, 207, 213, 216, 223, 228, 230, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 246, 249, 251, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 275, 278, 279, 285, 287, 289, 295, 296, 299, 302, 304], "paint": [0, 1, 9, 14, 23, 29, 43, 87, 148, 153, 158, 192, 193, 216, 229, 251, 264, 265, 268, 280, 289, 308, 309, 310, 312], "implicitli": [0, 14, 159, 188], "convert": [0, 4, 14, 23, 36, 40, 43, 48, 50, 53, 63, 87, 145, 146, 148, 159, 186, 188, 234, 235, 236, 241, 268, 310], "dict": [0, 186, 188], "take": [0, 14, 37, 39, 87, 112, 115, 158, 172, 188, 193, 265, 268, 287, 289, 296, 302], "void": 0, "ptr": [0, 63, 251], "us": [0, 2, 9, 14, 17, 23, 28, 29, 32, 34, 35, 37, 39, 40, 42, 53, 54, 55, 63, 65, 73, 78, 87, 89, 96, 105, 109, 112, 114, 115, 116, 122, 123, 128, 144, 148, 153, 154, 158, 159, 167, 168, 170, 172, 182, 183, 186, 188, 193, 207, 213, 228, 229, 230, 232, 233, 234, 235, 241, 244, 246, 251, 253, 268, 271, 280, 283, 289, 291, 296, 300, 302, 305, 306, 308, 310, 311, 312], "buffer": [0, 14, 23, 32, 34, 43, 50, 56, 63, 65, 74, 78, 82, 83, 85, 112, 115, 148, 153, 159, 161, 170, 172, 176, 179, 193, 200, 207, 216, 234, 237, 244, 249, 251, 258, 259, 260, 261, 262, 268, 280, 295, 302, 305], "protocol": [0, 14, 63, 234], "return": [0, 4, 9, 11, 14, 23, 32, 34, 35, 36, 37, 40, 43, 48, 50, 53, 56, 58, 59, 63, 65, 67, 68, 73, 74, 78, 82, 83, 85, 87, 92, 94, 96, 99, 104, 107, 112, 114, 115, 116, 120, 122, 128, 140, 144, 145, 146, 147, 148, 152, 153, 158, 159, 161, 163, 164, 170, 172, 176, 178, 179, 181, 183, 188, 193, 196, 197, 200, 202, 203, 207, 209, 210, 213, 216, 218, 219, 223, 227, 229, 230, 234, 235, 236, 237, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 253, 257, 258, 259, 260, 261, 262, 265, 268, 279, 280, 283, 286, 287, 289, 295, 299, 302, 305, 311], "raw": [0, 148, 188, 306], "memori": [0, 11, 14, 15, 23, 32, 39, 53, 78, 112, 115, 148, 159, 186, 193, 233, 234, 237, 244, 258, 268, 280, 289, 299, 302, 305, 306, 308, 312], "address": [0, 14, 23, 78, 82, 83, 148, 159, 176, 179, 234, 258, 259, 260, 261, 262, 268, 295, 310], "wrap": [0, 14, 19, 23, 109, 112, 115, 134, 138, 148, 159, 193, 234, 268, 305], "memoryview": [0, 14, 23, 40, 63, 148, 193, 234, 241, 268, 280], "numpi": [0, 2, 23, 148, 172, 234, 268, 308, 310], "export": [0, 2, 23, 148, 268, 310], "ad": [0, 105, 146, 148, 158, 181, 193, 213, 215, 230, 235, 237, 241, 283, 300, 312], "imag": [0, 5, 14, 16, 19, 23, 24, 32, 34, 35, 36, 37, 38, 80, 84, 109, 112, 115, 128, 131, 153, 158, 159, 178, 186, 188, 228, 234, 251, 268, 285, 286, 297, 299, 302, 308, 309, 310, 311], "support": [0, 2, 14, 23, 32, 35, 36, 48, 63, 73, 82, 87, 99, 105, 112, 115, 128, 134, 148, 158, 159, 176, 186, 193, 234, 244, 258, 259, 260, 261, 262, 268, 289, 300, 301, 302, 304, 306, 310, 311], "bitmap": [0, 4, 23, 24, 25, 87, 95, 148, 152, 153, 158, 159, 233, 234, 251, 268, 296, 310], "pixmap": [0, 14, 23, 32, 112, 115, 148, 159, 268, 299, 300, 302, 304, 305, 310], "happen": [0, 1, 112, 115, 153, 158, 268, 289], "github": [0, 1, 2], "feel": 0, "free": [0, 14, 112, 115, 223, 229, 305], "post": [0, 153], "issu": [0, 116, 268], "make": [0, 4, 5, 8, 18, 23, 25, 32, 35, 46, 53, 56, 62, 64, 65, 71, 76, 81, 82, 112, 115, 144, 145, 146, 147, 148, 159, 161, 167, 169, 172, 175, 176, 177, 180, 186, 188, 192, 193, 200, 207, 235, 236, 240, 241, 244, 245, 246, 249, 251, 255, 257, 264, 268, 278, 283, 285, 287, 296, 308, 311, 312], "pr": 0, "bind": [1, 2, 4, 112, 115], "graphic": [1, 23, 134, 138], "librari": [1, 2, 308], "an": [1, 4, 5, 13, 14, 17, 22, 23, 32, 34, 36, 37, 40, 48, 53, 56, 58, 59, 62, 63, 67, 68, 82, 87, 92, 94, 96, 107, 112, 115, 116, 117, 146, 148, 153, 158, 159, 163, 164, 167, 170, 172, 176, 183, 186, 188, 193, 196, 197, 202, 203, 209, 210, 213, 218, 219, 222, 223, 228, 229, 230, 234, 235, 237, 241, 243, 244, 246, 249, 251, 253, 258, 259, 260, 261, 262, 265, 268, 275, 280, 283, 289, 291, 302, 305, 308, 310, 311, 312], "open": [1, 23, 26, 63, 82, 148, 176, 193, 196, 258, 259, 260, 261, 262, 310, 312], "sourc": [1, 4, 5, 14, 16, 23, 24, 32, 43, 48, 50, 53, 148, 153, 158, 159, 172, 188, 234, 251, 258, 268, 297, 311], "2d": [1, 140, 172], "which": [1, 4, 14, 23, 32, 35, 36, 37, 43, 47, 48, 65, 74, 94, 112, 115, 134, 148, 153, 158, 159, 172, 186, 188, 193, 223, 228, 229, 230, 234, 258, 268, 285, 289, 290, 297, 308, 311, 312], "provid": [1, 14, 23, 32, 48, 63, 112, 115, 116, 142, 144, 148, 158, 172, 186, 196, 228, 234, 235, 237, 244, 248, 249, 268, 280], "common": [1, 23, 37, 146, 193, 213, 241, 244, 279, 312], "work": [1, 23, 65, 112, 115, 116, 148, 193, 268], "across": [1, 23, 74, 148, 234, 268, 287], "varieti": 1, "hardwar": [1, 148], "softwar": 1, "platform": [1, 2, 14, 23, 87, 148, 188, 268, 289], "develop": 1, "instal": [1, 153, 308], "pypi": 1, "distribut": [1, 140, 188], "build": [1, 14, 73, 148, 159, 188, 229, 237, 283], "instruct": [1, 38, 87], "test": [1, 53, 65, 105, 146, 148, 188, 193, 237, 241, 244, 300], "tutori": 1, "overview": [1, 309], "creation": [1, 134, 268, 309], "path": [1, 2, 4, 23, 56, 62, 63, 65, 82, 83, 87, 96, 148, 161, 176, 181, 188, 200, 207, 213, 216, 222, 223, 225, 244, 258, 259, 260, 261, 262, 265, 287, 289, 309, 310], "notebook": [1, 310], "exampl": [1, 4, 9, 32, 37, 40, 56, 62, 65, 96, 145, 146, 159, 161, 170, 172, 188, 193, 196, 200, 207, 216, 229, 235, 236, 241, 244, 268, 280, 281, 289, 308, 310, 311, 312], "design": [1, 89, 146, 241, 289], "contribut": [1, 172, 193], "refer": [1, 11, 14, 23, 43, 50, 56, 63, 65, 73, 74, 85, 96, 104, 112, 114, 115, 120, 122, 128, 148, 153, 159, 161, 170, 172, 188, 193, 200, 207, 213, 216, 229, 230, 234, 237, 242, 243, 250, 251, 268, 289, 311], "index": [1, 14, 32, 34, 35, 87, 89, 92, 96, 104, 138, 148, 153, 159, 172, 193, 234, 238, 289, 297], "search": [1, 11], "page": [1, 2, 73, 183, 308], "binari": [2, 148, 193, 237, 241, 244], "packag": [2, 308], "avail": [2, 4, 14, 23, 42, 148, 153, 268, 289, 311], "pip": [2, 308], "python": [2, 4, 63, 73, 148, 188, 309], "x86_64": 2, "aarch64": 2, "arm64": 2, "For": [2, 4, 17, 23, 32, 37, 38, 53, 56, 62, 65, 73, 87, 112, 115, 148, 153, 159, 161, 172, 188, 193, 200, 207, 216, 234, 268, 287, 310, 311], "must": [2, 11, 14, 23, 32, 35, 39, 43, 50, 56, 63, 65, 73, 74, 82, 85, 89, 96, 104, 107, 112, 114, 115, 120, 122, 128, 134, 140, 148, 153, 158, 159, 161, 170, 172, 176, 193, 200, 207, 216, 228, 229, 230, 234, 242, 243, 249, 250, 251, 258, 259, 260, 261, 262, 268, 270, 280, 287, 289, 302, 305, 306, 308], "opengl": [2, 23, 112, 115, 172, 309], "fontconfig": 2, "apt": 2, "get": [2, 23, 32, 35, 37, 58, 65, 67, 107, 112, 115, 116, 128, 163, 172, 193, 202, 209, 218, 224, 258, 289, 302, 305], "libfontconfig1": 2, "libgl1": 2, "mesa": 2, "glx": 2, "dri": 2, "Or": [2, 14, 234], "yum": 2, "libgl": 2, "driver": [2, 112, 115, 116, 268], "unsupport": 2, "check": [2, 4, 14, 23, 53, 87, 112, 114, 115, 122, 128, 146, 159, 188, 193, 234, 237, 241, 268, 304, 310], "first": [2, 4, 23, 32, 35, 43, 50, 56, 65, 82, 87, 112, 115, 158, 161, 172, 176, 181, 193, 200, 207, 213, 216, 225, 241, 258, 259, 260, 261, 262, 302, 311, 312], "clone": [2, 289], "repo": 2, "git": 2, "recurs": [2, 153], "http": [2, 140, 228], "com": 2, "kyamagu": 2, "cd": 2, "The": [2, 4, 5, 14, 23, 24, 32, 33, 34, 35, 36, 37, 39, 50, 56, 63, 65, 73, 74, 78, 82, 83, 87, 89, 94, 99, 109, 112, 114, 115, 116, 122, 128, 134, 140, 146, 148, 153, 158, 159, 161, 170, 172, 176, 179, 181, 183, 186, 188, 193, 200, 207, 213, 216, 223, 225, 228, 229, 230, 234, 235, 237, 241, 244, 249, 251, 252, 253, 258, 259, 260, 261, 262, 268, 269, 275, 280, 287, 289, 295, 297, 299, 302, 305, 308, 310, 311], "repositori": 2, "bundl": 2, "its": [2, 4, 14, 23, 34, 56, 65, 74, 87, 96, 112, 115, 146, 148, 153, 158, 161, 167, 172, 181, 183, 193, 200, 207, 216, 229, 234, 237, 241, 243, 249, 251, 258, 268, 275, 278, 283, 286, 289, 305, 312], "tool": 2, "depot_tool": 2, "submodul": 2, "actual": [2, 14, 37, 63, 82, 89, 112, 115, 116, 148, 153, 167, 176, 258, 259, 260, 261, 262, 268, 290, 299, 302, 308, 310], "ci": 2, "procedur": 2, "implement": [2, 14, 23, 32, 36, 43, 50, 56, 65, 74, 78, 82, 83, 85, 112, 115, 148, 153, 158, 159, 161, 170, 176, 179, 188, 193, 200, 207, 213, 216, 234, 237, 251, 258, 259, 260, 261, 262, 295, 306, 311], "script": 2, "build_": 2, "o": [2, 148, 172, 251, 309, 310], "sh": 2, "compil": [2, 14, 193, 234, 235, 237, 241], "time": [2, 14, 23, 32, 37, 65, 74, 78, 87, 112, 115, 159, 172, 193, 196, 197, 229, 234, 235, 246, 268], "requir": [2, 4, 14, 23, 32, 35, 36, 43, 48, 53, 87, 112, 115, 116, 148, 153, 159, 172, 188, 234, 235, 268, 280, 306, 312], "run": [2, 244, 253, 280, 281, 283, 289, 310], "type": [2, 4, 14, 23, 24, 32, 37, 42, 43, 50, 53, 56, 63, 65, 74, 85, 87, 112, 115, 128, 148, 153, 159, 161, 170, 172, 193, 196, 197, 200, 207, 216, 228, 234, 237, 251, 252, 253, 268, 279, 289, 302, 303, 304, 311], "inform": [2, 23, 34, 59, 68, 109, 112, 115, 164, 186, 193, 203, 210, 219, 306], "rtti": 2, "enabl": [2, 112, 115], "frtti": 2, "flag": [2, 14, 43, 50, 87, 112, 115, 140, 148, 154, 193, 213, 223, 228, 249, 252, 268, 275], "clang": 2, "gcc": 2, "gr": 2, "cl": [2, 172], "ex": 2, "visual": [2, 172], "md": 2, "set": [2, 4, 14, 23, 29, 32, 35, 48, 53, 56, 62, 65, 74, 82, 87, 89, 94, 95, 96, 99, 107, 112, 115, 117, 134, 145, 146, 147, 148, 154, 158, 159, 161, 167, 172, 176, 182, 186, 188, 191, 193, 196, 197, 200, 207, 216, 228, 234, 235, 236, 237, 240, 241, 244, 245, 246, 248, 257, 258, 259, 260, 261, 262, 263, 268, 279, 283, 289, 291, 299, 302, 311], "gn": 2, "should": [2, 14, 22, 23, 32, 33, 34, 37, 38, 56, 57, 63, 66, 73, 74, 87, 112, 114, 115, 116, 122, 128, 138, 148, 153, 154, 158, 162, 186, 187, 193, 201, 208, 217, 228, 234, 251, 258, 265, 268, 299, 302, 308, 310], "includ": [2, 4, 14, 23, 32, 146, 148, 158, 159, 172, 186, 188, 193, 229, 234, 241, 268, 287, 290, 306, 308], "skia_enable_tool": 2, "true": [2, 4, 9, 11, 14, 23, 32, 40, 43, 50, 53, 56, 63, 65, 73, 74, 78, 82, 83, 85, 87, 94, 96, 104, 107, 112, 114, 115, 120, 122, 128, 145, 146, 147, 148, 153, 154, 158, 159, 161, 170, 172, 176, 179, 181, 186, 188, 193, 196, 200, 207, 213, 216, 223, 228, 229, 234, 235, 236, 237, 241, 242, 243, 244, 245, 246, 248, 250, 251, 257, 258, 259, 260, 261, 262, 265, 268, 289, 295, 299, 302, 310, 311, 312], "h": [2, 4, 146, 172, 241], "header": 2, "detail": [2, 112, 115, 148, 268, 309], "offici": 2, "prerequisit": 2, "2": [2, 4, 6, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 32, 33, 36, 41, 42, 43, 45, 48, 50, 52, 53, 54, 55, 56, 59, 60, 61, 62, 65, 68, 69, 70, 71, 72, 74, 75, 76, 79, 80, 84, 85, 86, 87, 88, 93, 94, 95, 100, 101, 103, 105, 111, 117, 118, 132, 136, 137, 142, 143, 148, 151, 153, 154, 155, 157, 159, 161, 164, 165, 166, 170, 171, 172, 173, 174, 183, 185, 188, 189, 190, 191, 193, 198, 199, 200, 203, 204, 205, 206, 207, 210, 211, 212, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 234, 235, 237, 238, 239, 244, 247, 249, 251, 253, 254, 265, 267, 268, 270, 284, 286, 287, 289, 290, 291, 292, 297, 298, 299, 300, 302, 303, 311], "7": [2, 16, 17, 32, 36, 42, 43, 45, 50, 52, 53, 54, 56, 61, 65, 70, 74, 75, 79, 80, 85, 86, 100, 103, 111, 118, 153, 157, 161, 166, 170, 171, 172, 183, 185, 200, 206, 207, 212, 216, 221, 251, 254, 299, 300, 311], "onli": [2, 4, 11, 14, 23, 30, 32, 35, 43, 50, 55, 56, 62, 63, 65, 73, 74, 85, 87, 96, 104, 112, 114, 115, 120, 122, 128, 148, 152, 153, 154, 158, 161, 170, 172, 188, 193, 200, 207, 216, 228, 229, 234, 237, 242, 243, 250, 251, 268, 280, 286, 289, 297, 300, 301, 308, 311], "glibc": 2, "17": [2, 16, 54, 111, 118, 183, 185], "10": [2, 9, 16, 17, 43, 45, 50, 52, 54, 56, 61, 62, 65, 70, 74, 75, 79, 85, 86, 118, 153, 157, 161, 166, 170, 171, 183, 185, 193, 200, 206, 207, 212, 216, 221, 228, 251, 254, 299, 300, 303, 307, 310, 311], "93": 2, "depend": [2, 14, 16, 23, 112, 115, 148, 193, 196, 197, 213, 253, 268, 280, 299], "y": [2, 14, 23, 24, 32, 37, 74, 87, 94, 145, 146, 148, 158, 159, 168, 172, 173, 193, 213, 228, 229, 234, 235, 236, 237, 241, 244, 245, 246, 248, 268, 280, 283, 299, 300, 303, 306, 307, 311], "dev": [2, 65, 140], "devel": 2, "up": [2, 5, 14, 32, 62, 116, 134, 148, 193, 213, 234, 237, 241, 245, 246, 268, 311], "At": 2, "thi": [2, 4, 9, 11, 14, 15, 19, 23, 29, 32, 33, 34, 35, 36, 37, 38, 39, 43, 50, 53, 56, 62, 63, 65, 73, 74, 78, 82, 85, 87, 96, 99, 104, 107, 109, 112, 114, 115, 116, 120, 122, 128, 134, 140, 144, 146, 148, 153, 154, 158, 159, 161, 167, 170, 172, 176, 178, 183, 186, 188, 193, 200, 207, 213, 216, 223, 228, 229, 230, 232, 233, 234, 235, 237, 241, 242, 243, 244, 250, 251, 258, 259, 260, 261, 262, 263, 265, 268, 280, 283, 287, 289, 290, 296, 299, 300, 302, 305, 306, 308, 310, 311], "point": [2, 4, 5, 14, 23, 26, 40, 53, 56, 59, 62, 65, 68, 82, 87, 112, 115, 140, 145, 158, 161, 164, 172, 176, 183, 188, 193, 196, 197, 200, 203, 207, 210, 213, 216, 219, 223, 227, 234, 236, 237, 240, 241, 244, 245, 246, 253, 258, 259, 260, 261, 262, 280, 283, 289, 291, 302, 303, 310, 312], "execut": [2, 14, 23, 112, 115, 308], "note": [2, 11, 32, 34, 43, 50, 56, 62, 65, 73, 74, 85, 87, 96, 104, 112, 114, 115, 116, 120, 122, 128, 148, 153, 154, 158, 161, 167, 170, 172, 200, 207, 216, 229, 235, 242, 243, 250, 251, 258, 265, 268, 287, 289, 306, 310], "rel": [2, 82, 87, 140, 172, 176, 193, 244, 258, 259, 260, 261, 262, 268, 283, 289, 301, 310, 311], "new": [2, 11, 23, 29, 40, 43, 48, 50, 53, 56, 63, 65, 73, 74, 85, 96, 104, 112, 114, 115, 116, 117, 120, 122, 128, 148, 153, 159, 161, 170, 178, 188, 193, 200, 207, 213, 216, 229, 230, 235, 236, 242, 243, 246, 249, 250, 251, 265, 268, 280, 283, 289, 306, 312], "pwd": 2, "python2": 2, "sync": [2, 112, 115, 268], "dep": 2, "bin": 2, "gen": 2, "out": [2, 4, 9, 14, 23, 32, 40, 73, 112, 115, 172, 188, 193, 234, 243, 249, 252, 311], "releas": [2, 14, 134, 148, 159, 193, 234, 243, 268], "is_official_build": 2, "skia_use_system_libjpeg_turbo": 2, "fals": [2, 4, 14, 23, 32, 53, 56, 63, 65, 82, 87, 94, 107, 112, 115, 146, 148, 154, 158, 161, 172, 176, 188, 193, 200, 207, 213, 216, 223, 229, 234, 235, 236, 237, 241, 244, 246, 258, 259, 260, 261, 262, 265, 268, 289, 297, 299, 302, 308], "skia_use_system_libwebp": 2, "skia_use_system_libpng": 2, "skia_use_system_icu": 2, "skia_use_system_harfbuzz": 2, "extra_cflags_cc": 2, "extra_ldflag": 2, "lrt": 2, "ninja": 2, "Then": 2, "desir": [2, 32, 89, 112, 115, 146, 234, 268], "version": [2, 23, 32, 47, 78, 148, 188, 268], "skia_path": 2, "skia_out_path": 2, "m": [2, 158, 172], "wheel": 2, "setup": 2, "py": [2, 14, 23, 172, 193, 196, 234], "bdist_wheel": 2, "xcode": 2, "command": [2, 23, 112, 115, 116, 148, 183, 229, 230, 249, 268, 308, 310], "line": [2, 4, 23, 26, 32, 57, 66, 87, 94, 162, 172, 193, 194, 201, 208, 213, 217, 235, 244, 248, 280, 310, 312], "14": [2, 16, 54, 111, 118, 183, 185, 299, 300], "can": [2, 4, 13, 14, 23, 32, 34, 35, 37, 41, 43, 48, 50, 53, 55, 56, 58, 63, 65, 67, 73, 74, 82, 96, 99, 109, 112, 115, 116, 117, 128, 131, 138, 144, 148, 153, 154, 158, 159, 161, 163, 172, 176, 183, 186, 188, 200, 202, 207, 209, 216, 218, 225, 228, 229, 233, 234, 235, 237, 253, 258, 259, 260, 261, 262, 268, 275, 289, 290, 291, 302, 305, 308, 310, 311, 312], "gener": [2, 14, 23, 32, 36, 58, 67, 74, 109, 116, 140, 148, 163, 172, 188, 193, 196, 202, 209, 218, 229, 230, 234, 237, 241, 249, 311], "step": [2, 14], "abov": [2, 23, 94, 252, 279, 302, 310], "env": 2, "skia_use_system_expat": 2, "skia_use_system_zlib": 2, "ehsc": 2, "target_cpu": 2, "pytest": 2, "glfw": [2, 308], "altern": [2, 117, 286, 308, 310], "tox": 2, "under": [2, 112, 115, 158], "variou": [2, 36, 56, 58, 67, 163, 188, 202, 209, 218, 310, 311], "onc": [2, 14, 23, 37, 58, 67, 112, 115, 163, 188, 202, 209, 218, 251, 289, 312], "sphinx": 2, "rtd": 2, "theme": 2, "build_sphinx": 2, "alphatypeisopaqu": 4, "alphatyp": [4, 14, 23, 48, 112, 115, 148, 159, 234, 268, 310], "bool": [4, 8, 9, 11, 14, 23, 32, 40, 43, 48, 50, 53, 56, 63, 65, 73, 74, 78, 82, 83, 85, 87, 94, 96, 99, 104, 106, 107, 108, 109, 110, 112, 114, 115, 116, 120, 122, 128, 142, 145, 146, 147, 148, 153, 154, 158, 159, 161, 170, 172, 176, 179, 188, 193, 196, 200, 207, 213, 216, 223, 229, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 257, 258, 259, 260, 261, 262, 263, 265, 268, 274, 275, 280, 281, 289, 291, 295, 297, 299, 302, 304, 305], "equal": [4, 14, 23, 32, 35, 53, 58, 63, 67, 87, 99, 145, 146, 147, 148, 159, 163, 172, 188, 193, 202, 209, 213, 218, 229, 234, 235, 237, 239, 241, 244, 257, 263, 265, 289], "kopaque_alphatyp": [4, 6, 14, 148, 159, 234], "hint": [4, 14, 23, 29, 87, 148, 159, 213, 229, 268, 289], "colortyp": [4, 14, 23, 48, 106, 112, 114, 115, 122, 125, 126, 128, 148, 159, 234, 268, 274, 302], "opaqu": [4, 6, 14, 23, 34, 40, 87, 88, 148, 158, 159, 186, 188, 234, 251], "alpha": [4, 5, 6, 14, 17, 23, 32, 34, 40, 48, 50, 54, 55, 148, 158, 159, 167, 182, 188, 234, 251, 268, 279, 299, 300, 303, 311], "valu": [4, 5, 6, 7, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 48, 51, 52, 54, 55, 58, 60, 61, 65, 67, 69, 70, 72, 74, 75, 77, 78, 79, 80, 83, 84, 86, 87, 88, 89, 91, 93, 94, 95, 99, 101, 102, 103, 105, 111, 112, 115, 117, 118, 123, 127, 129, 130, 131, 132, 136, 137, 140, 141, 143, 145, 146, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 163, 165, 166, 171, 172, 173, 174, 179, 182, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 198, 199, 202, 204, 205, 206, 209, 211, 212, 213, 214, 215, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 241, 244, 247, 251, 253, 254, 263, 265, 266, 267, 268, 270, 271, 272, 273, 276, 277, 279, 280, 283, 284, 286, 287, 288, 289, 290, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 307, 311, 312], "1": [4, 6, 7, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 84, 85, 86, 87, 88, 93, 94, 95, 96, 100, 101, 103, 104, 105, 111, 112, 114, 115, 117, 118, 120, 122, 123, 127, 128, 129, 130, 131, 132, 136, 137, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 170, 171, 172, 173, 174, 182, 183, 185, 188, 189, 190, 191, 193, 194, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 234, 235, 237, 238, 239, 240, 242, 243, 244, 247, 249, 250, 251, 253, 254, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 284, 286, 287, 288, 289, 290, 291, 292, 297, 298, 299, 300, 302, 303, 307, 311], "0": [4, 5, 6, 7, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 45, 48, 50, 52, 53, 54, 55, 56, 58, 61, 63, 65, 67, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 93, 96, 100, 101, 102, 105, 111, 112, 115, 118, 119, 121, 123, 127, 128, 129, 130, 131, 132, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 159, 161, 163, 166, 167, 170, 171, 172, 173, 174, 176, 179, 182, 183, 185, 188, 189, 190, 191, 193, 194, 195, 199, 200, 202, 205, 206, 207, 209, 212, 213, 214, 215, 216, 218, 221, 222, 223, 225, 227, 228, 229, 232, 234, 235, 236, 237, 238, 239, 240, 241, 244, 247, 249, 251, 253, 254, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 275, 277, 279, 280, 283, 284, 286, 287, 288, 289, 290, 291, 292, 295, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 310, 311, 312], "equival": [4, 14, 23, 78, 112, 115, 145, 172, 188, 189, 190, 193, 228, 234, 235, 265, 268, 280], "If": [4, 5, 11, 14, 23, 24, 29, 32, 35, 36, 37, 38, 43, 48, 50, 53, 56, 58, 63, 65, 67, 73, 74, 82, 85, 87, 94, 96, 104, 107, 112, 114, 115, 116, 120, 122, 128, 138, 140, 146, 148, 153, 154, 158, 159, 161, 163, 170, 172, 176, 178, 186, 188, 193, 196, 197, 200, 202, 207, 209, 213, 216, 218, 223, 228, 229, 230, 232, 234, 235, 236, 237, 241, 242, 243, 244, 250, 251, 253, 258, 259, 260, 261, 262, 265, 268, 278, 280, 283, 287, 289, 296, 299, 302, 310, 312], "result": [4, 11, 14, 16, 23, 32, 43, 50, 56, 62, 65, 74, 87, 96, 112, 115, 144, 146, 148, 153, 158, 159, 161, 172, 181, 183, 188, 193, 196, 197, 200, 207, 216, 223, 228, 229, 230, 234, 237, 241, 243, 244, 245, 246, 265, 268, 269, 278, 280, 289, 310], "draw": [4, 14, 23, 24, 25, 26, 33, 43, 48, 56, 59, 65, 68, 73, 74, 87, 88, 105, 112, 115, 148, 153, 158, 159, 161, 164, 170, 183, 186, 187, 188, 193, 200, 203, 207, 210, 213, 216, 219, 222, 229, 230, 234, 244, 249, 268, 275, 280, 283, 286, 308, 309, 311, 312], "ani": [4, 14, 23, 24, 32, 34, 35, 53, 56, 65, 82, 89, 94, 96, 109, 112, 115, 134, 148, 158, 159, 161, 172, 176, 183, 193, 200, 207, 216, 229, 230, 234, 241, 251, 258, 259, 260, 261, 262, 265, 268, 289, 306, 310, 311], "pixel": [4, 6, 14, 15, 16, 19, 23, 32, 36, 48, 54, 62, 87, 88, 131, 148, 153, 158, 159, 182, 186, 188, 232, 233, 234, 244, 268, 285, 302, 305, 310], "less": [4, 14, 23, 32, 87, 146, 148, 159, 172, 188, 193, 213, 229, 234, 237, 241, 244], "than": [4, 13, 14, 23, 29, 32, 87, 146, 148, 153, 159, 172, 188, 193, 213, 222, 228, 229, 234, 235, 237, 241, 244, 251, 258, 268, 280, 289], "undefin": [4, 14, 23, 32, 146, 148, 172, 196, 197, 230, 234], "aswind": 4, "fill": [4, 14, 19, 23, 24, 32, 56, 58, 65, 67, 112, 115, 148, 153, 158, 161, 163, 172, 173, 188, 191, 193, 200, 202, 207, 209, 216, 218, 228, 239, 265, 302, 310, 311, 312], "wind": [4, 193, 222], "area": [4, 14, 23, 33, 146, 147, 148, 159, 193, 228, 234, 235, 237, 241, 244, 312], "success": [4, 14, 32, 36, 78, 82, 83, 112, 115, 116, 172, 176, 179, 229, 234, 258, 259, 260, 261, 262, 268, 280, 295], "doe": [4, 14, 23, 32, 34, 35, 53, 56, 65, 82, 87, 105, 112, 115, 146, 148, 158, 159, 161, 167, 172, 176, 188, 193, 197, 200, 207, 213, 216, 229, 230, 234, 237, 241, 244, 245, 246, 258, 259, 260, 261, 262, 265, 268, 280, 283, 289, 299, 302, 305, 308, 310, 312], "detect": [4, 158, 193], "contain": [4, 14, 23, 29, 32, 34, 35, 36, 38, 48, 62, 87, 90, 134, 146, 148, 158, 159, 172, 188, 193, 213, 223, 228, 229, 230, 233, 235, 237, 241, 244, 245, 263, 268, 280, 287, 300, 312], "contour": [4, 23, 87, 193, 194, 196, 213, 215, 223, 227, 287, 312], "self": [4, 6, 7, 9, 11, 13, 14, 15, 16, 17, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 176, 178, 179, 181, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "cross": [4, 222, 235, 236], "other": [4, 14, 16, 23, 32, 53, 63, 112, 115, 116, 146, 148, 154, 168, 172, 193, 228, 229, 230, 234, 235, 241, 244, 263, 265, 268, 280, 289, 308, 310], "case": [4, 11, 32, 35, 43, 48, 50, 53, 56, 63, 65, 73, 74, 85, 94, 96, 104, 112, 114, 115, 116, 120, 122, 128, 148, 153, 159, 161, 170, 172, 193, 200, 207, 216, 223, 229, 241, 242, 243, 250, 251, 258, 268, 289, 306, 310, 311], "mai": [4, 11, 14, 23, 29, 32, 39, 43, 48, 50, 56, 65, 73, 74, 78, 82, 85, 87, 89, 95, 96, 104, 105, 112, 114, 115, 120, 122, 128, 131, 140, 146, 148, 153, 154, 159, 161, 170, 172, 176, 183, 186, 188, 193, 196, 200, 207, 213, 216, 229, 230, 234, 235, 237, 241, 242, 243, 244, 248, 249, 250, 251, 258, 259, 260, 261, 262, 265, 268, 280, 283, 289, 291, 310, 311, 312], "even": [4, 14, 23, 24, 35, 36, 48, 57, 62, 66, 112, 115, 116, 148, 158, 159, 162, 201, 208, 217, 237, 244, 268, 287, 289, 308, 312], "though": [4, 14, 23, 158, 159, 172, 244, 289, 308, 310], "oper": [4, 16, 23, 47, 55, 148, 172, 181, 188, 225, 229, 230, 235, 244, 268, 278, 306], "wa": [4, 14, 23, 36, 74, 112, 115, 148, 172, 186, 193, 196, 223, 229, 244, 246, 248, 265, 268, 280, 289, 310], "abl": [4, 23, 32, 87, 116, 268], "produc": [4, 53, 73, 153, 158, 172, 228, 241, 251, 265], "otherwis": [4, 14, 23, 32, 53, 58, 67, 82, 87, 107, 112, 115, 146, 148, 153, 154, 163, 172, 176, 183, 188, 193, 202, 209, 213, 218, 223, 229, 234, 235, 236, 237, 241, 244, 246, 258, 259, 260, 261, 262, 265, 268, 280], "throw": [4, 263], "runtim": 4, "error": [4, 34, 36, 53, 112, 115, 116, 148, 183, 188, 235, 243, 258, 289], "input": [4, 5, 14, 18, 32, 36, 46, 47, 56, 64, 65, 76, 78, 81, 83, 140, 146, 153, 158, 160, 161, 167, 169, 172, 179, 180, 188, 200, 207, 216, 234, 235, 237, 241, 253, 268, 285, 295, 296, 299, 310], "paramet": [4, 9, 14, 23, 32, 36, 40, 48, 53, 58, 62, 63, 65, 67, 78, 82, 83, 87, 89, 94, 96, 98, 112, 115, 140, 145, 146, 148, 158, 159, 163, 170, 172, 176, 179, 181, 183, 188, 193, 196, 197, 200, 202, 209, 213, 218, 228, 229, 230, 234, 235, 237, 241, 244, 245, 246, 248, 249, 252, 253, 258, 259, 260, 261, 262, 265, 268, 280, 283, 285, 289, 291, 295, 302, 310], "typic": [4, 74, 84, 94, 112, 115, 148, 153, 234, 268], "odd": [4, 23, 62, 222], "blendmode_ascoeff": 4, "mode": [4, 16, 17, 23, 32, 43, 47, 50, 55, 140, 148, 153, 158, 188, 193, 229, 256, 268, 287, 291, 296, 308, 311], "blendmod": [4, 23, 43, 47, 50, 55, 158, 188, 256, 268, 296, 310, 311], "src": [4, 14, 17, 23, 43, 47, 50, 56, 63, 65, 112, 115, 153, 158, 161, 172, 178, 182, 188, 193, 200, 207, 216, 241, 244, 256, 263, 265, 268, 285, 296, 311], "blendmodecoeff": 4, "dst": [4, 14, 17, 23, 32, 35, 43, 47, 50, 53, 56, 65, 78, 148, 158, 161, 172, 182, 188, 193, 200, 207, 216, 223, 234, 235, 237, 256, 265, 268, 285, 311], "coeffici": [4, 17, 53, 158], "base": [4, 14, 17, 23, 32, 33, 34, 73, 74, 85, 112, 114, 115, 122, 128, 134, 148, 153, 158, 159, 170, 178, 193, 200, 216, 228, 234, 243, 268, 280, 289, 304], "blend": [4, 16, 17, 23, 34, 35, 47, 158, 256, 310, 311], "klastcoeffmod": [4, 16, 17], "": [4, 11, 19, 32, 33, 35, 37, 40, 43, 50, 56, 65, 73, 74, 82, 85, 87, 96, 104, 112, 114, 115, 116, 117, 120, 122, 128, 148, 153, 154, 158, 161, 170, 172, 176, 178, 183, 186, 200, 207, 213, 216, 223, 227, 229, 236, 242, 243, 250, 251, 258, 259, 260, 261, 262, 268, 286, 289, 302, 308, 311], "blendmode_nam": [4, 311], "str": [4, 23, 32, 43, 50, 56, 63, 65, 74, 78, 82, 83, 85, 87, 96, 153, 161, 170, 176, 179, 184, 200, 207, 216, 237, 251, 258, 259, 260, 261, 262, 263, 280, 283, 289, 295], "null": [4, 29, 32, 35, 36, 53, 58, 63, 67, 82, 96, 112, 115, 140, 153, 158, 163, 176, 183, 202, 209, 218, 228, 229, 230, 253, 258, 259, 260, 261, 262, 268, 278, 287, 289, 296], "termin": [4, 308], "string": [4, 23, 184, 186, 280], "color": [4, 14, 16, 17, 23, 24, 32, 33, 34, 40, 41, 42, 43, 48, 50, 53, 71, 76, 84, 112, 115, 128, 140, 144, 148, 158, 159, 167, 182, 188, 234, 251, 252, 253, 256, 268, 278, 286, 291, 302, 304, 305, 308, 310, 312], "r": [4, 14, 40, 146, 158, 167, 172, 188, 193, 213, 237, 241, 244, 265, 278, 300, 307, 311], "int": [4, 6, 7, 11, 13, 14, 15, 16, 17, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 58, 60, 61, 63, 65, 67, 69, 70, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 115, 117, 118, 119, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 171, 172, 173, 174, 176, 178, 179, 182, 183, 184, 185, 188, 189, 190, 191, 193, 194, 195, 198, 199, 202, 204, 205, 206, 209, 211, 212, 213, 214, 215, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 237, 238, 239, 241, 244, 247, 248, 249, 253, 254, 256, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "b": [4, 14, 40, 74, 85, 146, 158, 167, 172, 188, 193, 235, 236, 241, 278, 300, 307], "255": [4, 14, 23, 50, 188, 228, 234, 279, 310, 311], "8": [4, 14, 16, 17, 23, 27, 28, 32, 36, 42, 43, 45, 50, 52, 54, 56, 61, 65, 70, 74, 75, 79, 80, 85, 86, 87, 94, 95, 100, 103, 111, 117, 118, 136, 148, 153, 154, 155, 157, 161, 166, 170, 171, 172, 174, 183, 185, 188, 193, 198, 200, 206, 207, 212, 216, 221, 226, 234, 251, 254, 280, 299, 300, 303, 306, 308, 311, 312], "bit": [4, 14, 23, 48, 53, 54, 112, 115, 145, 146, 148, 159, 172, 174, 188, 193, 234, 235, 236, 237, 241, 289, 303], "compon": [4, 6, 14, 16, 23, 40, 48, 50, 148, 158, 159, 172, 188, 234, 235, 278, 310, 312], "In": [4, 23, 32, 33, 35, 109, 112, 115, 116, 148, 153, 172, 193, 228, 229, 244, 252, 268, 308, 311], "repres": [4, 23, 32, 35, 42, 43, 50, 53, 58, 67, 87, 89, 148, 153, 159, 163, 172, 188, 193, 202, 209, 218, 229, 235, 237, 241, 253, 289, 302, 304, 311], "32": [4, 23, 54, 117, 136, 145, 146, 159, 183, 185, 188, 193, 234, 235, 236, 237, 241, 310, 311], "argb": [4, 23, 40, 188], "word": [4, 54, 234], "where": [4, 17, 23, 32, 112, 115, 148, 158, 172, 188, 193, 213, 253, 285, 297, 304, 310, 311], "each": [4, 14, 16, 23, 26, 32, 50, 54, 56, 65, 73, 87, 140, 144, 148, 158, 159, 161, 172, 187, 193, 196, 200, 207, 216, 228, 229, 232, 234, 235, 237, 268, 278, 279, 280, 283, 289, 297, 299, 300, 302, 304, 306, 308, 310, 311, 312], "ha": [4, 14, 23, 32, 34, 39, 58, 63, 67, 73, 74, 87, 94, 112, 115, 116, 123, 128, 146, 148, 159, 163, 172, 188, 193, 196, 197, 202, 209, 218, 229, 234, 236, 237, 241, 244, 251, 253, 268, 289, 300, 302, 308, 310], "specifi": [4, 14, 17, 23, 32, 33, 35, 56, 62, 63, 65, 73, 74, 82, 87, 89, 94, 96, 112, 115, 140, 148, 159, 161, 172, 176, 193, 200, 207, 216, 222, 223, 229, 234, 237, 245, 251, 252, 253, 258, 259, 260, 261, 262, 265, 268, 280, 283, 289, 291, 299, 300, 302, 308, 310, 311], "liter": 4, "construct": [4, 14, 23, 43, 50, 53, 87, 145, 146, 172, 188, 193, 228, 229, 235, 237, 241, 244, 280, 283], "float": [4, 5, 8, 14, 18, 23, 32, 40, 43, 47, 50, 53, 54, 56, 62, 64, 65, 71, 73, 74, 76, 78, 81, 82, 83, 87, 91, 94, 140, 142, 148, 158, 160, 161, 169, 170, 172, 175, 176, 179, 180, 184, 188, 193, 196, 197, 200, 213, 223, 228, 230, 234, 235, 236, 237, 240, 241, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 279, 280, 283, 287, 295, 303, 310], "represent": [4, 32, 172, 186, 187, 193, 237, 241], "via": [4, 11, 32, 43, 50, 56, 65, 73, 74, 85, 96, 104, 112, 114, 115, 116, 120, 122, 128, 148, 153, 161, 170, 200, 207, 216, 229, 242, 243, 250, 251, 268, 289, 308, 310], "color4f": [4, 23, 43, 50, 112, 115, 188, 234, 256], "0xffff0000": 4, "rgb": [4, 14, 23, 50, 53, 144, 148, 158, 188, 268, 300], "rgba": [4, 40, 47, 148, 158, 188, 300, 310], "colorsetrgb": 4, "colorsetargb": [4, 311], "assert": [4, 14, 40, 63, 96, 146, 159, 172, 188, 234, 237, 241, 308, 311], "sk_debug": [4, 14, 40, 146, 172, 234, 241], "defin": [4, 14, 23, 40, 146, 148, 158, 172, 193, 207, 234, 237, 241, 249, 268, 280, 283, 285, 297, 311], "exce": [4, 14, 23, 112, 115, 148, 159, 234, 237, 268], "sinc": [4, 14, 23, 32, 35, 37, 109, 146, 148, 172, 241, 308, 312], "unpremultipli": [4, 14, 23, 40, 188, 234, 278], "smaller": [4, 23, 146, 153, 159, 193, 195, 213, 214, 241, 280], "largest": [4, 189, 190, 239], "amount": [4, 14, 23, 188, 193], "red": [4, 14, 40, 48, 54, 159, 167, 188], "full": [4, 14, 23, 32, 35, 37, 148, 158, 188, 268, 299, 300, 307], "green": [4, 14, 40, 48, 54, 159, 167, 188], "blue": [4, 14, 40, 48, 54, 159, 167, 188], "fulli": [4, 14, 16, 23, 148, 188, 193, 302], "transpar": [4, 14, 16, 19, 23, 25, 29, 33, 48, 87, 88, 148, 154, 158, 159, 188, 234, 251, 268, 286], "colorgeta": [4, 188], "byte": [4, 14, 23, 32, 48, 54, 55, 63, 78, 82, 83, 112, 115, 148, 159, 176, 179, 193, 229, 234, 237, 244, 258, 259, 260, 261, 262, 268, 280, 289, 295, 299, 302], "colorgetb": [4, 188], "zero": [4, 14, 15, 16, 23, 32, 35, 39, 48, 87, 94, 95, 145, 146, 148, 159, 167, 172, 183, 188, 193, 196, 197, 213, 222, 223, 229, 234, 235, 237, 239, 241, 243, 244, 268, 280, 289, 302, 308, 310, 312], "colorgetg": [4, 188], "colorgetr": [4, 188], "colorseta": 4, "ignor": [4, 14, 23, 35, 36, 48, 50, 56, 58, 63, 65, 67, 73, 87, 89, 94, 112, 115, 148, 154, 159, 161, 163, 193, 196, 200, 202, 207, 209, 216, 218, 234, 253, 268, 280, 297, 302], "replac": [4, 14, 16, 23, 153, 188, 193, 244, 268], "pack": [4, 148, 188, 303], "eight": [4, 237], "per": [4, 14, 23, 32, 48, 148, 158, 159, 186, 193, 234, 268, 289, 299, 302], "colortohsv": 4, "list": [4, 23, 32, 43, 47, 50, 62, 87, 92, 96, 112, 115, 140, 158, 172, 182, 184, 193, 196, 197, 213, 237, 241, 244, 251, 268, 278, 279, 280, 283, 289, 291, 297, 299, 302, 305, 308, 311, 312], "hsv": 4, "hue": [4, 16], "assign": [4, 56, 65, 161, 200, 207, 216, 235, 244, 311], "360": [4, 23, 140, 183, 193, 213], "satur": [4, 16], "one": [4, 14, 23, 25, 33, 34, 35, 37, 38, 41, 48, 50, 53, 74, 87, 112, 114, 115, 122, 128, 134, 148, 153, 158, 159, 172, 177, 181, 188, 193, 213, 223, 229, 230, 234, 235, 237, 244, 268, 280, 287, 289, 308, 310, 312], "three": [4, 193, 235, 236, 237, 268, 300, 311, 312], "element": [4, 23, 40, 158, 172, 183, 188, 193, 196, 197, 244, 245, 246, 249], "arrai": [4, 14, 23, 24, 26, 40, 62, 63, 87, 116, 140, 148, 158, 159, 172, 193, 196, 197, 234, 235, 237, 241, 244, 245, 246, 268, 280, 283, 289, 291, 302, 305, 308, 310], "hold": [4, 14, 23, 24, 32, 40, 63, 73, 145, 146, 148, 159, 172, 234, 235, 236, 241, 310, 311], "colortypebytesperpixel": 4, "ct": [4, 48, 159, 311], "number": [4, 14, 23, 24, 32, 33, 34, 48, 57, 62, 63, 66, 78, 82, 83, 87, 112, 115, 148, 153, 159, 162, 176, 179, 193, 201, 208, 217, 222, 228, 229, 234, 237, 241, 244, 258, 259, 260, 261, 262, 268, 280, 289, 295, 297, 299, 300, 302, 305, 310, 311], "store": [4, 13, 14, 23, 32, 63, 73, 116, 131, 146, 148, 172, 193, 196, 197, 234, 237, 241, 244, 253, 265, 268, 299, 302, 305, 310], "unus": [4, 14, 193, 234], "pad": [4, 159, 306], "kunknown_colortyp": [4, 14, 23, 48, 54, 148, 159, 234, 268], "invalid": [4, 14, 23, 36, 74, 87, 107, 112, 115, 117, 140, 146, 148, 172, 230, 237, 241, 268, 299, 302, 305], "colortypeisalwaysopaqu": 4, "alwai": [4, 23, 24, 32, 40, 63, 74, 87, 112, 115, 148, 153, 188, 193, 213, 234, 244, 258, 268, 286, 289, 297, 300, 312], "decod": [4, 32, 34, 35, 36, 37, 38, 148, 280], "reserv": [4, 14, 94, 213], "encod": [4, 23, 32, 48, 79, 80, 87, 112, 115, 148, 158, 159, 167, 186, 188, 234, 244, 268, 280, 283, 289, 310], "colortypevalidatealphatyp": 4, "canon": 4, "none": [4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 256, 257, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311], "valid": [4, 6, 14, 16, 23, 32, 36, 48, 74, 87, 89, 94, 95, 107, 112, 114, 115, 122, 128, 144, 146, 148, 159, 188, 193, 229, 234, 237, 241, 249, 268, 280, 289, 302, 305, 307], "more": [4, 14, 23, 32, 36, 78, 82, 112, 115, 148, 153, 158, 172, 176, 181, 186, 193, 213, 229, 234, 237, 244, 258, 259, 260, 261, 262, 268, 300, 309, 311, 312], "nullptr": [4, 14, 23, 29, 48, 53, 82, 87, 96, 144, 148, 159, 172, 176, 178, 188, 193, 229, 234, 246, 248, 251, 258, 259, 260, 261, 262, 268, 280, 283, 289, 302], "kunknown_alphatyp": [4, 6, 14, 48, 148, 159, 234], "output": [4, 14, 32, 37, 38, 43, 50, 56, 65, 73, 87, 148, 154, 158, 161, 172, 186, 193, 200, 207, 216, 237, 241, 249, 253, 268, 308, 310], "storag": [4, 14, 23, 87, 94, 148, 159, 172, 193, 196, 197, 213, 229, 234, 268, 280, 305], "associ": [4, 14, 23, 87, 112, 115, 128, 148, 159, 183, 186, 187, 193, 196, 197, 223, 234, 251, 280, 289], "computeisopaqu": [4, 234], "bm": [4, 172], "determin": [4, 14, 23, 32, 37, 148, 153, 158, 172, 193, 234, 268, 280, 283, 299, 302, 312], "how": [4, 23, 32, 33, 34, 38, 48, 82, 84, 87, 116, 148, 158, 159, 167, 172, 176, 188, 200, 232, 234, 253, 258, 259, 260, 261, 262, 289, 290, 299, 300, 301, 303, 306, 308, 310, 311], "whether": [4, 13, 22, 23, 32, 34, 39, 63, 87, 88, 99, 112, 115, 123, 128, 148, 172, 188, 193, 234, 268, 304, 312], "describ": [4, 14, 17, 23, 32, 41, 48, 53, 55, 79, 87, 146, 148, 159, 172, 188, 193, 196, 197, 213, 228, 229, 234, 237, 241, 244, 268, 275, 280, 297, 301, 305, 307, 310, 312], "without": [4, 14, 23, 32, 63, 148, 172, 186, 188, 223, 228, 234, 268, 302, 312], "have": [4, 9, 11, 14, 19, 23, 32, 43, 50, 53, 56, 63, 65, 73, 74, 82, 85, 95, 96, 104, 109, 112, 114, 115, 116, 120, 122, 128, 146, 148, 153, 158, 161, 170, 172, 176, 188, 193, 196, 200, 207, 216, 228, 229, 230, 234, 237, 241, 242, 243, 244, 250, 251, 258, 259, 260, 261, 262, 265, 268, 289, 297, 299, 302, 305, 308, 310, 311], "greater": [4, 14, 23, 58, 67, 87, 146, 148, 159, 163, 172, 188, 193, 202, 209, 213, 218, 229, 234, 237, 241, 244, 268], "krgb_565_colortyp": [4, 14, 54, 234], "kgray_8_colortyp": [4, 14, 54, 148, 234], "kalpha_8_colortyp": [4, 14, 23, 54, 148, 159, 234], "kbgra_8888_colortyp": [4, 14, 54, 159, 234], "krgba_8888_colortyp": [4, 14, 23, 54, 148, 159, 234, 268, 308, 310], "kargb_4444_colortyp": [4, 14, 54, 234], "15": [4, 16, 23, 27, 42, 54, 111, 118, 154, 155, 183, 185, 234, 299, 300], "krgba_f16_colortyp": [4, 14, 54, 234], "encodedorigintomatrix": 4, "origin": [4, 14, 23, 24, 32, 35, 56, 65, 87, 94, 146, 148, 153, 158, 159, 161, 172, 186, 188, 193, 200, 207, 216, 234, 235, 237, 241, 251, 268, 286, 287, 299, 312], "encodedorigin": [4, 32, 299], "w": [4, 146, 172, 193, 213, 241, 251], "matrix": [4, 7, 9, 14, 23, 43, 47, 50, 53, 56, 65, 74, 87, 140, 148, 153, 154, 158, 161, 168, 175, 188, 193, 200, 207, 216, 223, 229, 237, 240, 251, 268, 310], "given": [4, 14, 23, 32, 37, 40, 53, 56, 65, 92, 96, 112, 114, 115, 122, 128, 134, 140, 148, 153, 154, 158, 159, 161, 172, 188, 193, 200, 207, 216, 223, 228, 253, 258, 268, 275, 278, 289, 299, 300], "width": [4, 14, 23, 35, 56, 65, 73, 87, 94, 99, 100, 107, 110, 112, 115, 146, 147, 148, 159, 161, 188, 193, 200, 207, 216, 230, 234, 237, 239, 240, 241, 244, 257, 264, 265, 268, 274, 299, 302, 306, 308], "height": [4, 14, 23, 35, 73, 87, 94, 107, 110, 112, 115, 146, 147, 148, 158, 159, 193, 230, 234, 237, 239, 240, 241, 244, 257, 268, 274, 299, 308], "data": [4, 14, 23, 32, 36, 43, 50, 53, 56, 65, 74, 78, 79, 80, 82, 85, 96, 112, 115, 148, 153, 161, 170, 176, 193, 196, 197, 200, 207, 216, 229, 234, 237, 244, 245, 246, 251, 258, 259, 260, 261, 262, 268, 269, 280, 289, 290, 291, 299, 302, 303, 304, 305, 306, 308, 311], "transform": [4, 23, 32, 53, 84, 87, 142, 144, 148, 153, 158, 170, 172, 188, 193, 200, 216, 232, 237, 268, 299, 310], "rectangl": [4, 14, 23, 25, 33, 146, 148, 154, 158, 159, 172, 188, 193, 229, 230, 234, 237, 241, 244, 245, 246, 268, 289, 310], "upper": [4, 5, 94, 146, 193, 241, 280], "left": [4, 5, 14, 23, 32, 35, 48, 94, 131, 146, 148, 159, 172, 173, 183, 193, 234, 235, 237, 238, 241, 244, 248, 268, 278], "corner": [4, 5, 23, 56, 172, 188, 193, 237, 241, 268], "correctli": [4, 112, 115, 268], "orient": [4, 23, 32, 80, 268, 299, 306], "destin": [4, 14, 16, 23, 24, 32, 53, 82, 148, 153, 159, 172, 173, 176, 188, 194, 234, 258, 259, 260, 261, 262, 268, 310, 311], "hsvtocolor": 4, "pass": [4, 14, 23, 32, 35, 39, 43, 58, 65, 67, 87, 96, 107, 112, 115, 116, 134, 138, 148, 154, 158, 163, 172, 186, 187, 188, 202, 209, 218, 229, 230, 241, 244, 245, 252, 268, 280, 302, 305], "through": [4, 32, 87, 153, 193, 196, 197, 213, 244], "unchang": [4, 14, 23, 82, 146, 148, 159, 172, 176, 188, 193, 213, 223, 234, 237, 241, 258, 259, 260, 261, 262, 265, 268, 278], "angl": [4, 23, 158, 172, 193, 213, 235], "vari": [4, 148, 172], "rang": [4, 14, 23, 40, 48, 63, 144, 148, 159, 172, 188, 193, 228, 234, 253, 268, 307, 311], "pin": [4, 50, 223, 237, 268, 287], "makenullcanva": 4, "op": [4, 23, 32, 55, 112, 115, 148, 177, 181, 225, 244], "two": [4, 14, 23, 55, 63, 74, 140, 145, 148, 153, 158, 172, 177, 188, 193, 225, 228, 235, 244, 265, 280, 283, 289, 310, 312], "pathop": [4, 181], "appli": [4, 7, 23, 29, 43, 50, 53, 55, 56, 65, 87, 144, 148, 153, 154, 158, 161, 170, 172, 181, 188, 193, 200, 207, 216, 235, 251, 265, 268, 278, 279, 287, 311], "operand": [4, 181, 244], "non": [4, 23, 32, 34, 35, 53, 58, 67, 112, 115, 128, 148, 163, 172, 186, 193, 202, 209, 218, 222, 228, 229, 234, 239, 253, 268, 280, 302, 307], "overlap": [4, 23, 193, 237, 312], "curv": [4, 193, 213, 237, 310, 312], "order": [4, 23, 32, 37, 40, 109, 112, 115, 144, 153, 158, 172, 183, 193, 228, 241, 268, 287, 289, 300], "reduc": [4, 112, 115, 148, 154, 188, 193, 234, 237, 244, 312], "possibl": [4, 14, 32, 37, 74, 96, 105, 112, 115, 148, 172, 188, 193, 213, 234, 235, 258, 268, 289, 308], "so": [4, 14, 19, 23, 32, 34, 39, 56, 62, 65, 87, 96, 112, 115, 116, 128, 146, 148, 153, 154, 159, 161, 167, 172, 181, 188, 193, 200, 207, 213, 216, 223, 228, 230, 234, 235, 237, 241, 244, 249, 268, 280, 286, 287, 289, 305, 311, 312], "cubic": [4, 23, 193], "turn": [4, 56, 153, 311], "quadrat": [4, 193], "mayb": [4, 14], "minuend": 4, "second": [4, 50, 56, 65, 112, 115, 158, 161, 181, 193, 200, 207, 213, 216, 311, 312], "subtrahend": 4, "product": [4, 16, 167, 181, 186, 235, 236], "pathfilltype_converttononinvers": 4, "ft": [4, 193], "pathfilltyp": [4, 193, 213], "pathfilltype_isevenodd": 4, "pathfilltype_isinvers": 4, "premultiplyargb": 4, "skpmcolor": 4, "premultipli": [4, 6, 16, 23, 278], "premultiplycolor": 4, "pmcolor": [4, 14, 268], "closest": [4, 32, 40, 82, 96, 176, 258, 259, 260, 261, 262, 289], "multipli": [4, 16, 50, 167, 172, 235], "arrang": [4, 14, 232, 268], "match": [4, 13, 14, 23, 32, 36, 74, 80, 96, 112, 115, 134, 148, 153, 193, 234, 237, 244, 253, 268, 289, 308], "format": [4, 14, 23, 32, 37, 38, 40, 42, 79, 87, 89, 106, 107, 112, 114, 115, 119, 121, 122, 128, 148, 186, 193, 268, 300, 304, 306, 308], "kn32_colortyp": [4, 23, 54, 159], "rgbtohsv": 4, "simplifi": 4, "tightbound": 4, "rect": [4, 11, 14, 23, 29, 56, 65, 73, 74, 87, 146, 148, 153, 154, 158, 161, 169, 172, 188, 193, 200, 207, 213, 216, 229, 230, 234, 237, 244, 245, 246, 249, 268, 280, 283, 285, 289, 291, 310, 311, 312], "tight": [4, 193], "bound": [4, 11, 14, 23, 24, 29, 30, 32, 35, 56, 65, 74, 87, 94, 112, 115, 146, 148, 153, 154, 158, 159, 161, 172, 188, 193, 200, 207, 213, 216, 229, 230, 234, 237, 241, 244, 245, 248, 249, 265, 268, 280, 283, 286, 289, 291, 311], "measur": [4, 87, 105, 193, 213, 223, 235, 236, 289, 311], "static": [5, 8, 18, 23, 32, 40, 43, 46, 47, 50, 53, 56, 62, 63, 64, 65, 71, 74, 76, 78, 81, 82, 83, 85, 96, 100, 104, 106, 112, 115, 140, 144, 145, 146, 147, 148, 153, 158, 159, 160, 161, 167, 169, 170, 172, 175, 176, 177, 179, 180, 182, 183, 192, 193, 200, 207, 216, 228, 229, 235, 236, 237, 240, 241, 249, 250, 251, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 268, 278, 279, 280, 285, 287, 289, 291, 295, 296, 297, 299, 302, 304, 305], "region": [5, 23, 55, 158, 310], "innermin": [5, 158], "outermax": [5, 158], "imagefilt": [5, 8, 18, 23, 29, 43, 46, 64, 71, 76, 81, 148, 160, 169, 180, 188, 192, 268, 285, 296, 309], "croprect": [5, 8, 18, 46, 64, 71, 76, 81, 158, 160, 169, 180, 192, 296], "creat": [5, 14, 23, 29, 32, 48, 50, 53, 63, 73, 87, 96, 112, 115, 116, 128, 134, 146, 148, 153, 158, 159, 170, 172, 183, 186, 188, 193, 228, 229, 234, 241, 244, 251, 268, 278, 279, 280, 285, 289, 291, 308, 310, 311, 312], "filter": [5, 19, 23, 29, 43, 50, 65, 84, 144, 148, 153, 154, 158, 167, 188, 228, 234, 278, 285, 296], "sampl": [5, 19, 23, 30, 37, 112, 115, 128, 148, 158, 188, 229, 268], "insid": [5, 14, 16, 21, 23, 30, 33, 146, 158, 193, 222, 234, 237, 241, 244, 245, 312], "boost": 5, "threshold": [5, 158], "outsid": [5, 14, 16, 19, 21, 23, 30, 82, 112, 115, 144, 146, 148, 158, 159, 176, 188, 190, 193, 222, 229, 230, 241, 258, 259, 260, 261, 262, 268, 286, 287, 312], "decreas": [5, 14, 87, 188], "correspond": [5, 14, 32, 33, 87, 112, 115, 131, 140, 154, 158, 172, 186, 193, 223, 234, 268, 289, 301], "kwarg": [5, 8, 10, 11, 12, 14, 18, 20, 23, 24, 29, 32, 40, 43, 46, 47, 48, 50, 53, 56, 62, 64, 65, 71, 73, 74, 76, 78, 81, 83, 85, 87, 92, 97, 98, 100, 104, 106, 107, 110, 112, 114, 115, 119, 121, 122, 125, 126, 128, 135, 140, 142, 144, 145, 146, 147, 148, 153, 154, 158, 159, 160, 161, 167, 169, 170, 172, 175, 176, 177, 179, 180, 182, 183, 186, 188, 192, 193, 196, 197, 200, 207, 213, 216, 223, 228, 230, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 246, 249, 251, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 275, 278, 279, 285, 287, 289, 295, 296, 299, 302, 304], "member": [6, 7, 13, 14, 15, 16, 17, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 33, 36, 37, 38, 39, 41, 42, 44, 45, 51, 52, 54, 55, 58, 60, 61, 67, 69, 70, 72, 75, 77, 79, 80, 84, 86, 88, 93, 95, 101, 102, 103, 105, 111, 117, 118, 123, 127, 129, 130, 131, 132, 134, 136, 137, 141, 143, 146, 149, 150, 151, 152, 155, 156, 157, 163, 165, 166, 171, 172, 173, 174, 185, 189, 190, 191, 194, 195, 198, 199, 202, 204, 205, 206, 209, 211, 212, 214, 215, 218, 220, 221, 222, 224, 225, 226, 227, 231, 232, 235, 238, 239, 241, 247, 253, 254, 266, 267, 270, 271, 272, 273, 276, 277, 284, 286, 288, 290, 292, 293, 294, 298, 300, 301, 303, 307], "uniniti": [6, 34, 54, 63, 112, 115], "kpremul_alphatyp": [6, 14, 23, 148, 159], "kunpremul_alphatyp": [6, 14, 23, 148, 234, 268, 310], "independ": [6, 23, 34, 37, 188, 268, 303, 312], "klastenum_alphatyp": 6, "last": [6, 14, 16, 23, 92, 193, 196, 213, 234, 306, 307, 312], "3": [6, 14, 16, 17, 21, 23, 32, 33, 36, 41, 42, 43, 45, 48, 50, 52, 54, 55, 56, 61, 65, 70, 71, 72, 74, 75, 79, 80, 84, 85, 86, 93, 100, 103, 105, 111, 118, 132, 148, 151, 153, 157, 158, 159, 161, 166, 170, 171, 172, 173, 183, 185, 188, 193, 199, 200, 206, 207, 212, 216, 221, 222, 223, 224, 225, 227, 232, 234, 237, 238, 239, 244, 247, 251, 253, 254, 265, 267, 268, 284, 286, 297, 298, 299, 300, 302, 303, 307, 311, 312], "kno": [7, 22, 112, 115, 123, 127, 128, 129, 130, 148, 268, 308], "don": [7, 96, 116, 268], "t": [7, 40, 47, 96, 112, 115, 116, 145, 146, 147, 148, 172, 228, 235, 236, 241, 256, 257, 268, 287, 297, 302, 305], "pre": 7, "clip": [7, 9, 23, 29, 74, 153, 172, 188, 193, 229, 244, 245, 268, 279, 310, 311], "geometri": [7, 23, 153, 188, 191, 193, 216, 265, 275, 311], "befor": [7, 11, 23, 32, 33, 34, 43, 50, 56, 63, 65, 73, 74, 85, 87, 96, 104, 112, 114, 115, 120, 122, 128, 134, 148, 153, 158, 161, 170, 172, 181, 193, 196, 200, 207, 213, 216, 229, 232, 235, 242, 243, 249, 250, 251, 268, 289, 299, 311], "perspect": [7, 172, 174, 186, 193, 310], "kye": [7, 22, 112, 115, 123, 127, 129, 130, 148, 172, 193, 268], "do": [7, 14, 23, 28, 32, 53, 116, 146, 148, 167, 188, 193, 241, 244, 268, 308, 310, 311], "k1": [8, 158], "k2": [8, 158], "k3": [8, 158], "k4": [8, 158], "enforcepmcolor": [8, 158], "background": [8, 33, 112, 115, 158, 296, 311], "foreground": [8, 158, 296], "stack": [9, 11, 23, 43, 50, 56, 65, 73, 74, 85, 96, 104, 112, 114, 115, 120, 122, 128, 148, 153, 161, 170, 200, 207, 216, 229, 242, 243, 250, 251, 268, 289, 310, 311], "helper": [9, 63, 188, 279, 283, 305], "call": [9, 11, 14, 23, 32, 35, 43, 50, 56, 58, 59, 63, 65, 67, 68, 73, 74, 78, 82, 83, 85, 96, 104, 107, 109, 112, 114, 115, 116, 120, 122, 128, 144, 146, 148, 153, 161, 163, 164, 170, 172, 176, 179, 183, 188, 193, 196, 197, 200, 202, 203, 207, 209, 210, 213, 216, 218, 219, 223, 229, 230, 241, 242, 243, 244, 246, 249, 250, 251, 258, 259, 260, 261, 262, 268, 280, 289, 295, 308, 310, 311], "restoretocount": [9, 23], "when": [9, 14, 23, 29, 32, 43, 53, 55, 63, 73, 74, 78, 82, 84, 87, 95, 112, 115, 116, 128, 138, 146, 148, 158, 159, 172, 176, 187, 188, 193, 196, 197, 225, 229, 230, 234, 237, 241, 243, 244, 258, 259, 260, 261, 262, 268, 280, 283, 289, 308, 311], "goe": [9, 158, 168, 234, 243, 249], "scope": [9, 23, 73, 234, 243, 249], "guarante": [9, 34, 63, 74, 82, 112, 114, 115, 122, 128, 176, 188, 193, 249, 251, 258, 259, 260, 261, 262, 263, 268], "restor": [9, 23, 310, 311], "known": [9, 40, 82, 148, 176, 193, 258, 259, 260, 261, 262, 289], "state": [9, 14, 23, 29, 74, 82, 107, 109, 110, 112, 115, 117, 128, 148, 172, 176, 181, 188, 193, 230, 258, 259, 260, 261, 262, 268, 283, 310, 311], "drawcircl": [9, 23, 308, 310, 311], "50": [9, 193, 310, 312], "dosav": 9, "preserv": [9, 14, 16, 29, 146, 172, 193, 234, 235, 237, 241, 268, 272], "save": [9, 23, 78, 148, 229, 308, 310, 311], "count": [9, 11, 14, 22, 23, 32, 43, 50, 53, 56, 62, 63, 65, 73, 74, 85, 96, 104, 112, 114, 115, 120, 122, 128, 148, 153, 158, 159, 161, 170, 172, 193, 200, 207, 216, 229, 234, 235, 241, 242, 243, 244, 250, 251, 268, 269, 280, 289, 291, 311], "option": [9, 14, 23, 29, 32, 39, 43, 48, 56, 65, 87, 112, 115, 116, 148, 158, 159, 161, 172, 186, 188, 193, 196, 200, 207, 216, 229, 244, 265, 268, 280, 283, 289, 291, 297, 299, 300, 302, 310, 312], "guard": 9, "util": [9, 23, 234, 279], "destructor": [9, 112, 115, 243], "immedi": [9, 23, 73, 112, 115, 116, 268], "subsequ": [9, 14, 23, 112, 115, 148, 172, 183, 188, 193, 196, 213, 230, 268], "effect": [9, 14, 15, 19, 23, 43, 50, 56, 58, 63, 65, 67, 87, 146, 148, 153, 158, 161, 163, 172, 188, 193, 200, 202, 207, 209, 216, 218, 241, 244, 258, 265, 268, 310, 312], "bytesus": 11, "approxim": [11, 32, 53, 87, 158, 159, 193, 229], "size": [11, 14, 23, 24, 29, 32, 36, 53, 63, 78, 82, 83, 87, 112, 115, 128, 146, 148, 154, 158, 159, 172, 176, 179, 183, 186, 188, 193, 213, 228, 229, 234, 240, 241, 244, 250, 252, 258, 259, 260, 261, 262, 263, 268, 280, 289, 295, 299, 302, 310], "insert": [11, 92, 112, 115, 229, 263], "overload": [11, 14, 23, 29, 32, 40, 47, 48, 53, 71, 74, 78, 83, 87, 92, 100, 106, 107, 110, 112, 115, 119, 121, 125, 126, 142, 145, 146, 147, 148, 154, 158, 159, 172, 176, 179, 183, 186, 188, 193, 196, 197, 213, 223, 230, 234, 235, 236, 237, 240, 241, 244, 246, 251, 256, 257, 263, 265, 268, 275, 289, 295, 299, 302, 304], "n": [11, 158, 172, 258, 311], "box": [11, 87, 94, 229, 230, 237, 280, 283], "hierarchi": [11, 230], "metadata": [11, 183], "ref": [11, 43, 50, 53, 56, 63, 65, 73, 74, 85, 96, 104, 112, 114, 115, 120, 122, 128, 134, 148, 153, 161, 170, 200, 207, 216, 229, 242, 243, 250, 251, 268, 280, 289, 291], "refcntbas": [11, 43, 50, 56, 65, 73, 74, 85, 96, 104, 112, 114, 115, 120, 122, 128, 148, 153, 161, 170, 200, 207, 216, 229, 242, 250, 251, 268, 289], "increment": [11, 32, 35, 36, 43, 50, 56, 65, 73, 74, 85, 87, 96, 104, 112, 114, 115, 120, 122, 128, 148, 153, 161, 170, 188, 200, 207, 216, 229, 234, 242, 243, 250, 251, 268, 289], "balanc": [11, 23, 43, 50, 56, 65, 73, 74, 85, 96, 104, 112, 114, 115, 120, 122, 128, 148, 153, 161, 170, 200, 207, 216, 229, 242, 243, 250, 251, 268, 289], "unref": [11, 43, 50, 53, 56, 63, 65, 73, 74, 85, 96, 104, 112, 114, 115, 120, 122, 128, 148, 153, 161, 170, 200, 207, 216, 229, 230, 242, 243, 250, 251, 268, 280, 289, 291], "queri": [11, 148], "std": [11, 148, 235], "vector": [11, 32, 146, 148, 158, 172, 193, 213, 223, 235, 236], "alloc": [11, 14, 22, 23, 43, 50, 56, 58, 65, 67, 73, 74, 85, 96, 104, 112, 114, 115, 120, 122, 123, 128, 148, 153, 161, 163, 170, 193, 200, 202, 207, 209, 216, 218, 229, 234, 235, 242, 243, 244, 250, 251, 268, 289, 299, 302, 305, 306, 310], "popul": [11, 253], "indic": [11, 13, 22, 32, 35, 37, 62, 87, 94, 95, 112, 115, 148, 153, 183, 244, 253, 268, 291, 299, 304], "intersect": [11, 14, 23, 146, 225, 234, 241, 244, 245, 248, 268, 280, 283], "uniqu": [11, 14, 43, 50, 53, 56, 63, 65, 73, 74, 85, 96, 104, 112, 114, 115, 120, 122, 128, 148, 153, 161, 170, 187, 193, 200, 207, 216, 229, 242, 243, 250, 251, 268, 280, 289, 291, 308], "caller": [11, 14, 23, 32, 43, 50, 56, 63, 65, 73, 74, 85, 96, 104, 112, 114, 115, 120, 122, 128, 148, 153, 161, 170, 172, 186, 193, 200, 207, 216, 229, 230, 234, 242, 243, 250, 251, 258, 268, 289, 305, 311], "owner": [11, 14, 43, 50, 56, 65, 73, 74, 85, 96, 104, 112, 114, 115, 120, 122, 128, 148, 153, 159, 161, 170, 184, 200, 207, 216, 229, 234, 242, 243, 250, 251, 268, 289], "ensur": [11, 14, 43, 50, 56, 65, 73, 74, 85, 96, 104, 112, 114, 115, 120, 122, 128, 148, 153, 161, 170, 200, 207, 216, 229, 234, 242, 243, 250, 251, 268, 289, 305], "previou": [11, 28, 33, 43, 50, 56, 65, 73, 74, 85, 87, 96, 104, 112, 114, 115, 116, 120, 122, 128, 148, 153, 161, 167, 170, 188, 193, 200, 207, 216, 229, 242, 243, 250, 251, 268, 289, 308], "action": [11, 43, 50, 56, 65, 73, 74, 85, 96, 104, 112, 114, 115, 120, 122, 128, 148, 153, 161, 170, 200, 207, 216, 229, 242, 243, 250, 251, 268, 289], "complet": [11, 32, 34, 43, 50, 56, 65, 73, 74, 85, 96, 104, 112, 114, 115, 120, 122, 128, 146, 148, 153, 159, 161, 170, 172, 200, 207, 216, 229, 241, 242, 243, 244, 245, 246, 249, 250, 251, 268, 289, 308], "decrement": [11, 43, 50, 56, 65, 73, 74, 85, 96, 104, 112, 114, 115, 120, 122, 128, 148, 153, 161, 170, 200, 207, 216, 229, 242, 243, 250, 251, 268, 289], "delet": [11, 23, 43, 50, 56, 65, 73, 74, 85, 96, 104, 112, 114, 115, 116, 120, 122, 128, 134, 148, 153, 161, 170, 183, 200, 207, 216, 223, 229, 242, 243, 249, 250, 251, 268, 289], "object": [11, 14, 23, 32, 43, 50, 56, 63, 65, 73, 74, 85, 87, 96, 104, 112, 114, 115, 116, 120, 122, 128, 134, 140, 148, 153, 159, 161, 170, 172, 183, 188, 200, 207, 216, 223, 229, 230, 234, 242, 243, 250, 251, 268, 270, 271, 278, 279, 280, 289, 291, 297, 299, 302, 308, 310, 311], "need": [11, 13, 23, 32, 34, 35, 43, 50, 56, 59, 65, 68, 73, 74, 85, 96, 104, 109, 112, 114, 115, 120, 122, 128, 134, 146, 148, 153, 161, 164, 170, 193, 200, 203, 207, 210, 213, 216, 219, 223, 229, 241, 242, 243, 250, 251, 268, 289, 306], "been": [11, 14, 32, 39, 43, 50, 56, 65, 73, 74, 82, 85, 96, 104, 112, 114, 115, 116, 120, 122, 128, 148, 153, 161, 170, 176, 196, 197, 200, 207, 216, 229, 230, 234, 242, 243, 250, 251, 258, 259, 260, 261, 262, 268, 289, 299, 302, 308], "isdraw": 12, "back": [13, 23, 112, 114, 115, 122, 128, 148, 183, 193, 234, 251, 258, 268, 270, 271, 305], "exact": [13, 32, 35, 153, 193, 237, 241, 312], "larger": [13, 14, 23, 37, 146, 148, 159, 182, 186, 193, 195, 213, 214, 234, 241, 268, 280], "strictli": [13, 23, 140], "necessari": [13, 23, 35, 148, 186, 193], "kapprox": 13, "kexact": 13, "dimension": [14, 148, 235, 310], "raster": [14, 23, 148, 186, 193, 234, 268, 309, 310], "imageinfo": [14, 23, 32, 48, 148, 178, 234, 268, 302, 308, 310], "integ": [14, 23, 145, 146, 148, 159, 193, 213, 234, 235, 241, 244, 289, 310], "colorspac": [14, 23, 32, 43, 48, 50, 112, 115, 148, 159, 188, 234, 256, 268, 274, 308], "pixelref": [14, 32, 148, 234], "physic": [14, 158], "locat": [14, 23, 32, 87, 148, 158, 160], "anywher": 14, "drawn": [14, 23, 24, 29, 33, 34, 73, 87, 148, 153, 158, 159, 188, 193, 216, 230, 244, 251, 268, 280, 285, 289, 308, 310, 311, 312], "flexibl": [14, 158], "limit": [14, 23, 29, 112, 115, 146, 158, 172, 188, 190, 193, 228, 229, 241], "optim": [14, 23, 159, 181, 229, 251, 275], "target": [14, 23, 106, 107, 112, 115, 121, 128, 148, 158, 160, 268], "primarili": 14, "read": [14, 23, 32, 63, 78, 82, 148, 152, 172, 176, 188, 193, 234, 237, 244, 258, 259, 260, 261, 262, 268, 297], "better": [14, 84, 172, 186, 188], "perform": [14, 23, 32, 112, 115, 170, 172, 181, 193, 213, 225, 234, 268, 275, 280, 312], "written": [14, 23, 78, 83, 172, 179, 183, 193, 237, 241, 244, 289, 295], "declar": 14, "const": [14, 63, 96, 172], "prevent": [14, 112, 115, 188], "alter": [14, 188, 193, 196, 230, 253, 283], "cannot": [14, 32, 36, 56, 63, 65, 82, 148, 161, 167, 172, 176, 188, 200, 207, 216, 229, 241, 253, 258, 259, 260, 261, 262], "chang": [14, 23, 32, 56, 65, 74, 87, 107, 109, 112, 115, 148, 161, 172, 193, 200, 207, 216, 228, 229, 234, 235, 241, 244, 251, 265, 268, 272, 289], "It": [14, 23, 32, 37, 39, 48, 56, 96, 105, 112, 114, 115, 116, 122, 128, 134, 148, 154, 159, 188, 228, 229, 234, 235, 243, 268, 280, 289, 308, 310], "affect": [14, 23, 62, 87, 148, 153, 154, 193, 213, 216, 229, 280], "write": [14, 32, 39, 63, 78, 83, 148, 172, 179, 183, 193, 234, 237, 241, 244, 268, 295, 308, 310], "configur": [14, 32, 142, 144, 268, 299, 302], "content": [14, 23, 28, 29, 63, 73, 74, 78, 92, 96, 112, 115, 131, 148, 158, 183, 186, 187, 188, 230, 244, 263, 268, 278, 283, 289, 310, 312], "thread": [14, 43, 63, 148, 172, 193, 233, 234, 268, 289, 308], "safe": [14, 37, 43, 112, 114, 115, 122, 128, 172, 193, 234, 235, 268], "own": [14, 23, 73, 112, 115, 116, 268], "copi": [14, 23, 29, 58, 63, 67, 82, 89, 92, 107, 148, 158, 163, 176, 188, 193, 202, 209, 218, 223, 234, 237, 244, 258, 259, 260, 261, 262, 268, 278, 283, 289, 291, 312], "field": [14, 87, 172, 183], "although": [14, 32, 193, 213, 312], "share": [14, 23, 43, 63, 148, 159, 188, 193, 233, 234, 243, 244, 268, 280, 283, 289, 308, 312], "underli": [14, 112, 115, 116, 128, 134, 148, 193, 244, 268, 289], "mount": [14, 234], "np": [14, 63, 234, 308, 310], "100": [14, 100, 102, 148, 186, 229, 234, 244, 308, 312], "4": [14, 16, 17, 23, 27, 28, 32, 33, 36, 42, 43, 45, 48, 50, 52, 54, 55, 56, 59, 60, 61, 65, 68, 69, 70, 71, 72, 74, 75, 79, 80, 85, 86, 94, 95, 100, 103, 105, 111, 117, 118, 136, 137, 148, 153, 154, 155, 157, 158, 161, 164, 165, 166, 170, 171, 172, 174, 183, 185, 193, 198, 199, 200, 203, 204, 206, 207, 210, 211, 212, 216, 219, 220, 221, 225, 226, 227, 228, 232, 234, 237, 239, 244, 247, 251, 253, 254, 264, 265, 268, 278, 297, 299, 300, 302, 305, 308, 310, 311], "uint8": [14, 234, 308, 310], "setinfo": 14, "maken32premul": [14, 159, 234, 308], "setpixel": 14, "both": [14, 23, 38, 53, 109, 145, 148, 172, 193, 213, 228, 235, 237, 253, 268], "empti": [14, 23, 32, 63, 87, 96, 140, 146, 148, 159, 172, 181, 183, 188, 193, 196, 197, 213, 228, 234, 237, 241, 244, 245, 246, 256, 280, 283, 302], "volatil": [14, 193], "after": [14, 23, 32, 63, 73, 82, 112, 115, 116, 146, 148, 153, 158, 172, 176, 188, 193, 196, 213, 223, 234, 253, 258, 259, 260, 261, 262, 268, 299, 312], "param": [14, 23, 87, 148, 159, 172, 213, 234, 235, 241, 268, 289], "allocn32pixel": 14, "isopaqu": [14, 40, 48, 148, 159, 234, 251], "nativ": [14, 23, 32, 186, 268, 289], "abort": [14, 73], "29": [14, 148, 183, 185], "neg": [14, 23, 32, 94, 146, 148, 193, 228, 234, 237, 241, 268], "fail": [14, 53, 112, 115, 116, 148, 229, 234, 263, 268, 280, 302, 308], "user": [14, 99, 142, 144, 280], "sk_abort": 14, "devic": [14, 23, 112, 115, 128, 134, 153, 154, 268, 308], "skip": [14, 23, 25, 32, 35, 37, 39, 82, 87, 176, 258, 259, 260, 261, 262, 268], "column": [14, 23, 24, 148, 159, 172, 234, 268], "row": [14, 23, 24, 32, 35, 37, 48, 53, 112, 115, 148, 158, 159, 172, 234, 268, 299, 302, 306], "allocpixel": 14, "info": [14, 23, 32, 36, 56, 58, 65, 67, 107, 110, 112, 115, 148, 161, 163, 200, 202, 207, 209, 216, 218, 234, 251, 253, 268, 297, 302, 308, 310], "skimageinfo": [14, 32, 234], "rowbyt": [14, 23, 32, 36, 148, 159, 234, 268, 269, 299, 302, 306], "follow": [14, 78, 112, 115, 128, 140, 144, 148, 172, 193, 196, 197, 268, 308, 310, 311, 312], "rule": [14, 148, 193], "meth": [14, 234], "bytesperpixel": [14, 32, 48, 159, 234], "comput": [14, 23, 56, 63, 65, 74, 153, 159, 161, 167, 172, 181, 188, 193, 200, 207, 216, 222, 223, 235, 268, 280, 283], "minimum": [14, 99, 158, 159, 172, 193, 234, 244], "could": [14, 23, 32, 34, 82, 148, 172, 176, 258, 259, 260, 261, 262, 268, 308], "On": [14, 172, 253], "most": [14, 37, 96, 172, 193, 213, 280, 289], "succe": [14, 115, 148], "suffici": [14, 23, 193, 289, 305], "place": [14, 23, 235, 244], "until": [14, 23, 112, 115, 148, 183, 193, 244, 249, 268, 312], "behavior": [14, 23, 29, 53, 146, 230, 289], "malloc": 14, "allocpixelsflag": 14, "calloc": 14, "kzeropixels_allocflag": [14, 15], "skalphatyp": 14, "irect": [14, 23, 32, 148, 153, 154, 158, 159, 234, 241, 244, 245, 246, 268, 310], "integr": [14, 23, 148, 159, 234], "immut": [14, 32, 63, 148, 152, 159, 229, 230, 234, 280, 283, 289, 291], "skcolortyp": [14, 112, 114, 115, 122, 128, 302], "computebytes": [14, 159, 234], "rowbytesaspixel": [14, 234], "size_max": [14, 159, 234, 299, 302], "fit": [14, 23, 24, 146, 148, 159, 193, 213, 234, 237, 241], "size_t": [14, 159, 234], "dimens": [14, 23, 29, 32, 36, 48, 87, 107, 110, 148, 158, 159, 193, 229, 234, 241, 244, 268, 299, 302, 305, 310], "isiz": [14, 23, 32, 107, 110, 146, 148, 158, 159, 228, 234, 241, 257, 268, 299], "drawsnoth": 14, "either": [14, 43, 85, 112, 115, 116, 131, 134, 138, 144, 146, 147, 148, 158, 159, 172, 183, 193, 213, 237, 241, 244, 257, 268, 287, 289, 311], "enclos": [14, 146, 241], "eras": [14, 234, 310], "interpret": [14, 140, 158, 188], "being": [14, 188, 251, 268, 289, 310], "srgb": [14, 32, 48, 53, 148, 159, 186, 188, 234, 268], "treat": [14, 23, 33, 56, 65, 116, 148, 158, 161, 172, 193, 196, 200, 207, 213, 216, 236, 241, 268, 278, 289], "eraseargb": 14, "erasecolor": 14, "extractalpha": 14, "skpaint": [14, 87, 148, 188], "offset": [14, 23, 57, 62, 63, 66, 78, 82, 87, 145, 146, 148, 158, 159, 162, 176, 193, 201, 208, 213, 217, 234, 235, 237, 241, 244, 252, 253, 258, 259, 260, 261, 262, 263, 268, 283, 310], "ipoint": [14, 23, 146, 148, 158, 172, 235, 244, 310], "maskfilt": [14, 23, 55, 87, 188, 255, 279, 309], "mask": [14, 23, 42, 55, 148, 170, 188, 193, 279, 310], "heapalloc": 14, "top": [14, 23, 32, 33, 35, 94, 131, 146, 148, 173, 193, 234, 237, 238, 241, 268], "posit": [14, 23, 82, 87, 89, 92, 94, 140, 146, 148, 172, 176, 193, 200, 213, 223, 224, 237, 241, 244, 258, 259, 260, 261, 262, 268, 280, 283, 289, 291], "align": [14, 23, 87, 148, 159, 172, 173, 193, 213, 237, 239], "unless": [14, 34, 148, 172], "layer": [14, 23, 29, 32, 311], "extractsubset": [14, 234], "subset": [14, 32, 35, 37, 63, 112, 115, 148, 158, 229, 234, 268, 287], "discard": [14, 23, 32, 148, 193, 229, 241, 268, 272], "isvolatil": [14, 193, 213], "getalphaf": [14, 188, 234], "x": [14, 23, 24, 74, 87, 92, 94, 145, 146, 148, 158, 159, 168, 172, 173, 193, 213, 228, 229, 234, 235, 236, 237, 241, 244, 245, 246, 268, 280, 283, 311], "look": [14, 188, 234], "normal": [14, 87, 96, 100, 112, 115, 158, 193, 234, 235, 236, 289, 303], "roughli": [14, 228, 234], "getcolora": [14, 234], "getcolor": [14, 188, 234], "effic": [14, 234], "precis": [14, 172, 188, 193, 223, 234, 241], "getbound": [14, 74, 87, 193, 237, 244, 289], "black": [14, 19, 23, 29, 154, 234, 286], "trigger": [14, 23, 29, 188, 234, 235], "crash": [14, 112, 115, 234], "sk_releas": [14, 234], "lost": [14, 112, 115, 234], "getgenerationid": [14, 74, 193], "notifypixelschang": 14, "examin": 14, "getpixel": [14, 32, 35, 39], "getsubset": 14, "within": [14, 23, 35, 82, 112, 115, 158, 159, 172, 176, 186, 187, 237, 244, 245, 248, 258, 259, 260, 261, 262, 268, 280, 283, 286, 300], "Will": [14, 96, 234, 289, 305], "pixelreforigin": 14, "fy": [14, 145, 146, 172, 193, 213, 235, 236, 241], "installpixel": 14, "minrowbyt": [14, 148, 159, 234, 268], "reset": [14, 78, 112, 115, 148, 159, 172, 181, 188, 193, 213, 223, 234, 246, 263, 283, 312], "lifetim": [14, 63, 148, 183, 234, 249, 251, 268], "skpixmap": [14, 32, 112, 115, 148, 178], "addr": [14, 148, 234], "isimmut": 14, "debug": [14, 87, 159, 188, 237], "isnul": 14, "explicitli": [14, 159, 172, 243, 308, 310], "incorrectli": [14, 159], "allow": [14, 23, 32, 53, 74, 148, 154, 158, 159, 172, 188, 193, 229, 234, 237, 251, 283, 289, 302, 306, 311], "makeshad": [14, 23, 148, 229, 311], "tmx": [14, 148, 229], "tilemod": [14, 18, 23, 140, 148, 158, 229, 251, 311], "kclamp": [14, 23, 140, 148, 286], "tmy": [14, 148, 229], "localmatrix": [14, 140, 148, 153, 229, 251], "skshader": [14, 148, 188], "mark": [14, 112, 115, 148, 193], "peekpixel": [14, 23, 148, 268], "leav": [14, 23, 82, 146, 148, 176, 188, 193, 223, 234, 241, 244, 258, 259, 260, 261, 262, 268], "becom": [14, 112, 115, 148, 237, 268], "futur": [14, 23, 32, 112, 115, 172, 268], "readabl": [14, 23, 148, 234, 268, 270], "direct": [14, 23, 148, 153, 158, 160, 193, 215, 229, 234, 235, 236, 268, 310], "access": [14, 23, 40, 63, 96, 148, 158, 193, 233, 234, 268, 305], "constant": [14, 17, 78, 193, 307], "readpixel": [14, 23, 148, 234, 268], "dstinfo": [14, 23, 32, 148, 234, 268], "dstpixel": [14, 23, 148, 234, 268], "dstrowbyt": [14, 23, 148, 234, 268], "srcx": [14, 23, 148, 234, 268], "srcy": [14, 23, 148, 234, 268], "start": [14, 23, 32, 37, 82, 140, 148, 172, 176, 193, 196, 213, 223, 234, 246, 248, 258, 259, 260, 261, 262, 287, 305, 311, 312], "specif": [14, 23, 87, 109, 112, 115, 117, 148, 153, 158, 188, 252, 265, 268, 289, 311], "gap": [14, 148, 234], "next": [14, 23, 32, 33, 34, 37, 43, 74, 112, 115, 116, 148, 172, 193, 196, 197, 223, 227, 234, 245, 246, 248, 268, 281], "ab": [14, 148, 234], "length": [14, 23, 53, 57, 62, 63, 65, 66, 78, 82, 83, 148, 162, 172, 176, 179, 186, 193, 201, 208, 213, 217, 223, 234, 235, 236, 237, 244, 258, 259, 260, 261, 262, 280, 289, 295, 312], "whose": [14, 43, 50, 53, 148, 234, 236, 289, 311], "absolut": [14, 82, 148, 176, 234, 235, 258, 259, 260, 261, 262], "readytodraw": 14, "refcolorspac": [14, 48, 148, 159, 234, 274], "smart": [14, 148, 159, 233, 234], "pointer": [14, 23, 87, 107, 148, 158, 159, 188, 193, 234, 241, 244, 248, 268, 280], "track": [14, 37, 148, 159, 234, 268], "destruct": [14, 148, 159, 234], "initi": [14, 23, 28, 29, 32, 39, 40, 56, 65, 112, 115, 116, 158, 161, 172, 181, 188, 193, 196, 197, 200, 207, 213, 216, 223, 230, 237, 246, 249, 268, 283, 299, 302, 305], "had": [14, 36], "sole": [14, 148], "interv": [14, 23, 57, 58, 62, 66, 67, 162, 163, 201, 202, 208, 209, 217, 218, 234, 248, 268, 280, 287], "least": [14, 32, 78, 82, 83, 96, 134, 148, 159, 167, 176, 179, 234, 237, 258, 259, 260, 261, 262, 295, 302, 305, 306], "larg": [14, 23, 24, 32, 53, 148, 159, 193, 228, 229, 234, 235, 241, 268, 289, 290], "suppli": [14, 23, 65, 116, 148, 181, 280, 289], "enough": [14, 23, 24, 32, 53, 148, 159, 268, 311], "maximum": [14, 23, 65, 94, 99, 112, 115, 128, 148, 158, 159, 172, 193, 234, 244, 268, 289], "setalphatyp": 14, "compat": [14, 112, 115, 148, 178, 193, 268, 302, 305], "current": [14, 23, 29, 32, 35, 73, 74, 78, 82, 87, 107, 112, 115, 148, 176, 193, 200, 223, 230, 244, 258, 259, 260, 261, 262, 268, 297, 300, 301, 308, 310], "setimmut": 14, "intern": [14, 36, 74, 112, 115, 148, 172, 193, 244, 268, 311, 312], "also": [14, 32, 33, 78, 112, 115, 138, 148, 172, 188, 193, 196, 235, 253, 268, 290, 300, 308, 311, 312], "clear": [14, 23, 29, 33, 87, 92, 172, 174, 188, 229, 311], "permit": [14, 148, 229, 280], "31": [14, 159, 183, 185], "successfulli": [14, 32, 172], "respons": [14, 74, 112, 115, 116, 148, 268, 305], "handl": [14, 37, 148, 289], "ownership": [14, 112, 115, 186, 230, 249, 305], "union": [14, 23, 63, 146, 148, 153, 181, 193, 225, 234, 241, 244, 268, 280, 289], "bytearrai": [14, 23, 63, 148, 193, 234, 268, 280, 311], "manag": [14, 87, 96, 148, 234, 268, 308, 310], "shiftperpixel": [14, 48, 159, 234], "shift": [14, 48, 158, 159, 234], "swap": [14, 146, 193, 241, 244, 263], "exchang": [14, 148, 193, 244], "tobyt": [14, 148, 234, 310], "tryallocn32pixel": 14, "tryallocpixel": 14, "tryallocpixelsflag": 14, "fx": [14, 145, 146, 172, 193, 213, 235, 236, 241], "writepixel": [14, 23, 268], "dstx": [14, 268], "dsty": [14, 268], "allocflag": 14, "No": [15, 234], "default": [15, 23, 32, 38, 39, 48, 58, 63, 65, 67, 87, 89, 96, 99, 112, 114, 115, 122, 128, 148, 153, 159, 163, 186, 188, 193, 202, 209, 218, 268, 280, 289, 302, 304, 305], "kclear": [16, 311], "ksrc": [16, 23, 268, 273, 311], "kdst": [16, 311], "ksrcover": [16, 23, 188, 311], "over": [16, 34, 87, 158, 296], "kdstover": [16, 311], "ksrcin": [16, 311], "trim": [16, 268, 287], "kdstin": [16, 311], "ksrcout": [16, 311], "kdstout": [16, 311], "ksrcatop": [16, 311], "kdstatop": [16, 311], "kxor": [16, 55, 311], "kplu": [16, 311], "sum": [16, 56, 62, 65, 87, 158, 161, 181, 200, 207, 216, 222], "kmodul": [16, 23, 311], "darken": 16, "kscreen": [16, 310, 311], "invers": [16, 17, 23, 144, 172, 193], "invert": [16, 37, 172], "brighten": 16, "porter": [16, 17, 55, 311], "duff": [16, 17, 55, 311], "koverlai": [16, 311], "screen": [16, 168, 271, 308, 310], "kdarken": [16, 311], "darker": 16, "klighten": [16, 311], "lighter": 16, "kcolordodg": [16, 311], "reflect": [16, 23, 158, 172, 186, 230], "kcolorburn": [16, 311], "khardlight": [16, 311], "ksoftlight": [16, 311], "lighten": 16, "kdiffer": [16, 31, 55, 311], "subtract": [16, 145, 146, 225, 235, 237, 241], "higher": [16, 188], "contrast": [16, 142, 144], "kexclus": [16, 311], "lower": [16, 94, 146, 188, 193, 241, 280], "kmultipli": [16, 311], "klastseparablemod": 16, "separ": [16, 26, 112, 115, 158, 193, 229, 268, 300], "khue": [16, 311], "luminos": 16, "ksatur": [16, 311], "kcolor": [16, 311], "kluminos": [16, 311], "klastmod": 16, "27": [16, 111, 183, 185], "19": [16, 54, 111, 118, 183, 185], "18": [16, 54, 111, 118, 183, 185, 310], "16": [16, 23, 28, 42, 54, 111, 117, 118, 136, 148, 183, 185, 234, 299, 300, 303, 311], "22": [16, 111, 118, 183, 185], "6": [16, 17, 32, 36, 43, 45, 50, 52, 54, 56, 61, 65, 70, 74, 75, 79, 80, 85, 86, 100, 103, 111, 118, 153, 157, 161, 166, 170, 171, 172, 182, 183, 185, 193, 199, 200, 206, 207, 212, 216, 221, 244, 251, 254, 299, 300, 311, 312], "23": [16, 111, 183, 185], "20": [16, 54, 62, 111, 118, 183, 185, 311, 312], "25": [16, 40, 62, 111, 183, 185, 193, 310, 311], "28": [16, 183, 185], "24": [16, 111, 183, 185, 311, 312], "13": [16, 23, 54, 111, 118, 183, 185, 299, 300], "12": [16, 23, 54, 111, 118, 183, 185, 299, 300], "26": [16, 111, 183, 185], "21": [16, 111, 118, 183, 185, 311], "9": [16, 17, 32, 36, 43, 45, 50, 52, 54, 56, 61, 65, 70, 74, 75, 79, 85, 86, 100, 103, 111, 118, 153, 157, 161, 166, 170, 171, 183, 185, 200, 206, 207, 212, 216, 221, 251, 254, 299, 300], "5": [16, 17, 32, 36, 40, 43, 45, 50, 52, 54, 56, 61, 62, 65, 70, 74, 75, 79, 80, 85, 86, 100, 103, 105, 111, 118, 153, 157, 161, 166, 170, 171, 172, 182, 183, 185, 193, 199, 200, 206, 207, 212, 216, 221, 227, 237, 239, 241, 244, 247, 251, 253, 254, 287, 299, 300, 307, 310, 311], "11": [16, 43, 45, 50, 52, 54, 56, 61, 65, 70, 74, 75, 79, 85, 86, 111, 118, 153, 157, 161, 166, 170, 171, 183, 185, 200, 206, 207, 212, 216, 221, 251, 254, 299, 300], "skblendmod": 17, "those": [17, 32, 112, 115, 148, 153, 154, 230, 302, 311], "equat": [17, 53], "dstcoeff": 17, "srccoeff": 17, "kzero": 17, "kone": 17, "ksc": 17, "kisc": 17, "sc": 17, "kdc": 17, "kidc": 17, "dc": [17, 172], "ksa": 17, "kisa": 17, "sa": 17, "kda": 17, "kida": 17, "da": 17, "kcoeffcount": 17, "sigmax": [18, 76, 158], "sigmai": [18, 76, 158], "kclamptoblack_tilemod": [18, 19], "kclamp_tilemod": [18, 19], "klast_tilemod": [18, 19], "kmax_tilemod": [18, 19], "krepeat_tilemod": [18, 19], "clamp": [19, 63, 158, 279, 311], "edg": [19, 23, 87, 140, 146, 154, 158, 188, 190, 193, 222, 237, 241, 286], "re": [19, 148, 223], "weight": [19, 99, 100, 193, 196, 197, 213, 311], "around": [19, 109, 310], "opposit": [19, 193, 213], "knormal_blurstyl": [21, 188, 311], "fuzzi": 21, "ksolid_blurstyl": 21, "solid": [21, 188, 311], "kouter_blurstyl": 21, "noth": [21, 23, 116, 304, 308], "kinner_blurstyl": 21, "klastenum_blurstyl": 21, "against": [22, 63, 148], "cach": [22, 23, 74, 85, 112, 115, 117, 148, 172, 193, 308], "interfac": [23, 99, 115, 193, 244], "togeth": [23, 53, 158, 181], "basedevic": [23, 188, 193, 268], "concaten": 23, "typefac": [23, 87, 96, 104, 280, 310, 311], "text": [23, 29, 78, 83, 87, 172, 179, 186, 193, 237, 241, 263, 280, 283, 289, 295, 309, 310, 311], "stroke": [23, 56, 62, 65, 87, 94, 161, 188, 189, 191, 193, 200, 207, 216, 265, 280, 310, 311, 312], "shader": [23, 140, 148, 188, 228, 229, 255, 286, 309, 310], "To": [23, 32, 73, 74, 112, 115, 128, 229, 268, 308, 310], "gpu": [23, 109, 112, 115, 116, 131, 148, 193, 268, 309], "request": [23, 32, 36, 37, 56, 65, 87, 96, 109, 148, 161, 188, 200, 207, 216, 258, 265, 268, 289], "obtain": 23, "visibl": [23, 82, 176, 228, 258, 259, 260, 261, 262, 308, 312], "cpu": [23, 105, 148, 268, 308], "vulkan": [23, 107, 109, 112, 115, 134, 148, 268, 308], "document": [23, 172, 183, 186, 268, 308], "svg": [23, 193, 213, 228, 249, 309], "pdf": [23, 73, 80, 309], "picturerecord": [23, 229, 308], "subclass": [23, 43, 50, 56, 74, 153, 170, 216, 251, 253, 258, 295, 311], "approach": [23, 58, 67, 148, 163, 202, 209, 218], "deprec": [23, 94, 148, 153, 172, 296], "makerasterdirect": [23, 268], "surfaceprop": [23, 268, 274], "sksurfaceprop": 23, "directli": [23, 32, 148, 188, 193, 235, 237, 241, 268, 308, 310], "flush": [23, 78, 83, 112, 115, 116, 148, 179, 249, 268, 295, 308], "prop": [23, 268, 275], "lcd": [23, 29, 232, 268], "stripe": [23, 268], "font": [23, 85, 89, 94, 95, 96, 98, 99, 268, 280, 283, 289, 290, 308, 310, 311, 312], "makerasterdirectn32": 23, "inlin": [23, 172], "ndarrai": [23, 148, 172, 234, 268], "shape": [23, 148, 188, 207, 234, 268, 280, 310, 311], "channel": [23, 40, 41, 42, 50, 55, 148, 158, 167, 182, 234, 268, 297, 299, 300, 302, 303, 304, 305], "appropri": [23, 32, 43, 50, 148, 268], "dtype": [23, 148, 268, 308], "custom": [23, 43, 50, 158, 280, 311], "inittyp": [23, 275], "choos": [23, 32, 38, 56, 65, 161, 193, 200, 207, 213, 216, 289], "dynam": 23, "rotat": [23, 53, 148, 153, 172, 174, 193, 213, 232, 240, 310], "multipl": [23, 65, 172, 188, 193, 233, 243, 244, 268, 280, 287, 306, 308, 311], "monitor": 23, "characterist": [23, 310], "best": [23, 148], "reli": [23, 87], "legaci": [23, 105, 148, 305], "klegacyfonthost": 23, "edit": [23, 312], "like": [23, 36, 62, 63, 89, 148, 172, 193, 268, 289, 302, 306, 310, 311], "accesstoplayerpixel": 23, "while": [23, 53, 154, 186, 193, 196, 213, 235, 268, 281, 305, 306, 308], "inaccess": 23, "androidframework_setdevicecliprestrict": 23, "cliprect": [23, 311], "cliprrect": 23, "clippath": 23, "retroact": 23, "restrict": [23, 158, 306, 310], "record": [23, 112, 115, 193, 229, 230, 268, 308], "pictur": [23, 74, 148, 158, 230, 309, 310], "disabl": [23, 244, 268, 275], "privat": [23, 188], "android": [23, 193], "framework": [23, 193], "coordin": [23, 24, 32, 37, 90, 94, 145, 146, 153, 158, 168, 172, 193, 229, 235, 236, 241, 244, 289, 310], "clipop": 23, "doantialia": 23, "alias": [23, 244, 268], "anti": [23, 244, 268], "filltyp": [23, 193, 213], "itself": [23, 74, 146, 158, 241], "anoth": [23, 32, 63, 112, 115, 148, 153, 172, 186, 237, 308], "form": [23, 172, 193, 235, 240, 312], "part": [23, 48, 85, 159, 168, 193, 213, 223, 229, 237, 245, 246, 280, 299, 311], "combin": [23, 32, 48, 55, 96, 112, 115, 158, 159, 172, 178, 188, 225, 244, 280, 302, 304], "rrect": [23, 193, 213, 310], "clipregion": 23, "devicergn": 23, "kintersect": [23, 31, 55], "unaffect": [23, 234], "concat": [23, 172], "exist": [23, 148, 181, 193, 223, 243, 244, 268, 289, 297, 305], "m44": 23, "done": [23, 32, 63, 82, 84, 109, 116, 176, 223, 230, 245, 246, 258, 259, 260, 261, 262, 268], "drawannot": 23, "kei": [23, 85, 112, 115, 310], "annot": [23, 305], "pair": [23, 26, 193, 195, 213, 214, 234, 237, 253, 280, 289, 312], "utf": [23, 87, 280], "extent": [23, 94, 193], "lookup": [23, 279], "drawarc": 23, "oval": [23, 193, 213, 237, 310, 312], "startangl": [23, 140, 193, 213], "sweepangl": [23, 193, 213], "usecent": 23, "arc": [23, 193, 195, 213, 214, 312], "sweep": [23, 193, 213, 253], "plu": [23, 43, 50, 193, 312], "degre": [23, 172, 193, 213, 310], "right": [23, 94, 146, 168, 172, 173, 193, 235, 237, 238, 241, 244, 248], "middl": [23, 287, 312], "end": [23, 32, 34, 82, 92, 112, 115, 116, 140, 148, 176, 188, 193, 196, 213, 235, 248, 253, 258, 259, 260, 261, 262, 268, 270, 271, 310, 311, 312], "clockwis": [23, 172, 193, 213, 215], "counterclockwis": [23, 193, 213], "circl": [23, 140, 172, 189, 190, 193, 213, 237, 253, 312], "wedg": 23, "center": [23, 140, 158, 173, 193, 213, 237, 253, 301, 311], "between": [23, 43, 87, 94, 140, 148, 158, 186, 188, 193, 200, 228, 233, 235, 263, 287, 289, 297], "begin": [23, 73, 82, 87, 140, 153, 176, 188, 193, 213, 223, 258, 259, 260, 261, 262, 268, 310], "drawatla": 23, "atla": 23, "xform": [23, 280, 283], "rsxform": [23, 172, 280, 283], "tex": [23, 291], "cullrect": [23, 188, 229, 230], "sprite": 23, "alia": 23, "colorfilt": [23, 46, 50, 51, 144, 153, 158, 167, 182, 188, 251, 268, 278, 309], "present": [23, 32, 43, 89, 148, 230, 268, 271, 289, 300, 303], "entri": [23, 24, 62, 112, 115, 193, 235, 241, 253, 289, 302, 312], "space": [23, 24, 32, 47, 53, 58, 67, 87, 89, 131, 144, 148, 153, 154, 158, 159, 163, 172, 188, 200, 202, 209, 218, 253, 268, 278, 299, 305], "conserv": [23, 34, 56, 65, 74, 161, 172, 200, 207, 216, 265, 280, 289], "map": [23, 32, 48, 53, 87, 112, 115, 148, 153, 158, 159, 172, 234, 268, 280, 300, 307, 310], "effici": [23, 32, 78, 193, 244, 311], "drawbitmap": 23, "drawloop": [23, 268], "extend": [23, 92, 188, 190, 193, 213, 268, 289], "beyond": [23, 268, 302, 311], "replic": [23, 200, 286, 311], "just": [23, 32, 56, 65, 96, 161, 200, 207, 216, 268, 290, 310], "made": [23, 32, 63, 82, 112, 115, 158, 176, 188, 229, 258, 259, 260, 261, 262, 268, 308], "makebitmapshad": 23, "side": [23, 24, 146, 158, 172, 235, 241], "drawbitmaprect": 23, "constraint": [23, 275], "srcrectconstraint": 23, "kstrict_srcrectconstraint": [23, 30], "scale": [23, 24, 32, 36, 71, 84, 87, 148, 158, 172, 173, 174, 188, 193, 213, 229, 232, 234, 235, 236, 240, 268, 280, 289, 311], "translat": [23, 146, 148, 172, 174, 193, 229, 237, 244, 310, 311, 312], "addition": [23, 112, 115, 148, 193, 268], "filterqu": [23, 148, 153, 158, 188, 234, 268], "kfast_srcrectconstraint": [23, 30], "improv": [23, 142, 144, 172, 193, 228, 312], "faster": [23, 30, 188, 235, 244, 289], "isrc": 23, "boundari": [23, 148], "fraction": [23, 241], "cx": [23, 140, 311], "cy": [23, 140, 311], "radiu": [23, 56, 140, 158, 172, 193, 213, 237, 253, 311], "thick": [23, 94, 188, 265], "axi": [23, 24, 87, 89, 91, 98, 145, 146, 148, 158, 172, 193, 213, 235, 236, 237, 239, 241, 244, 245, 246, 268, 283, 289], "half": [23, 54, 193, 237, 268, 287, 303], "diamet": 23, "drawcolor": [23, 310, 311], "drawdrrect": 23, "outer": [23, 47, 56, 65, 146, 158, 161, 200, 207, 216, 241, 311], "inner": [23, 43, 47, 50, 56, 65, 158, 161, 200, 207, 216, 311], "join": [23, 56, 65, 146, 161, 188, 193, 200, 207, 216, 241, 264, 265], "round": [23, 53, 56, 87, 193, 213, 237, 241, 268, 310, 311], "squar": [23, 172, 189, 237], "concav": [23, 193], "These": [23, 55, 80, 117, 268, 311], "ident": [23, 32, 148, 172, 174, 188, 193, 237, 244, 278, 312], "fast": [23, 53, 188, 193], "drawirect": 23, "drawimag": [23, 310, 311], "drawimagerect": [23, 158, 310], "uncompress": 23, "rectangular": [23, 24, 35, 244], "drawimagenin": 23, "stretch": 23, "proportion": [23, 24, 237], "divid": [23, 24, 268, 300], "nine": [23, 172, 237], "section": [23, 193], "four": [23, 40, 99, 146, 148, 172, 188, 193, 196, 197, 213, 237, 241, 244, 268], "unmodifi": [23, 112, 115, 148, 193, 244], "down": [23, 24, 37, 84, 94, 168, 223, 268], "knone": [23, 93, 132, 148, 151], "klow": 23, "system": [23, 94, 96, 148, 153, 168, 268], "ctm": [23, 153, 170], "drawrect": [23, 310, 311], "drawlin": [23, 188, 229], "x0": 23, "y0": 23, "x1": [23, 193, 213], "y1": [23, 193, 213], "segment": [23, 26, 65, 193, 223, 244, 248, 287, 311], "cap": [23, 188, 193, 264, 265], "were": [23, 32, 82, 112, 115, 116, 153, 176, 230, 258, 259, 260, 261, 262, 268, 283], "kstroke": 23, "p0": [23, 193, 241], "p1": [23, 193, 213, 241], "drawov": [23, 311], "drawpaint": [23, 188, 310, 311], "patheffect": [23, 56, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 87, 161, 162, 163, 164, 165, 175, 177, 188, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 264, 280, 287, 309], "drawpatch": 23, "texcoord": 23, "coon": 23, "patch": [23, 237], "interpol": [23, 193], "textur": [23, 42, 109, 110, 112, 115, 123, 128, 131, 134, 148, 268, 299, 300, 304, 308], "everi": [23, 109, 193, 306], "fourth": [23, 158, 300], "bottom": [23, 32, 37, 94, 131, 146, 172, 173, 193, 237, 238, 241, 268], "deriv": 23, "drawpath": [23, 310, 311, 312], "close": [23, 73, 82, 183, 193, 194, 196, 213, 215, 223, 289, 311, 312], "drawpictur": [23, 229], "seri": [23, 181, 213, 312], "later": [23, 32, 196, 197, 229, 234, 246, 308], "playback": [23, 229, 308], "savelay": [23, 311], "plai": [23, 32, 148, 229], "drawpoint": 23, "kround": 23, "ksquar": 23, "butt": 23, "p": [23, 172, 193, 235], "pointmod": 23, "pt": [23, 172, 183, 193, 196, 197, 213, 227, 235, 241, 289, 311], "kpoint": 23, "kline": [23, 227, 312], "kpolygon": 23, "kbutt": 23, "One": [23, 234], "final": [23, 116, 148, 153, 193, 245, 246, 312], "adjac": [23, 286], "minu": [23, 146, 193, 237, 241], "respect": [23, 29, 87, 112, 115, 148, 310], "unlik": [23, 32, 193, 230, 310, 311], "iter": [23, 92, 193, 197, 227, 244, 245, 248, 280, 283], "drawrrect": [23, 310], "uniformli": [23, 172, 193], "radii": [23, 158, 193, 213, 237, 238, 239], "drawregion": 23, "drawroundrect": [23, 310], "rx": [23, 193], "ry": [23, 193], "thei": [23, 32, 37, 43, 65, 107, 109, 112, 115, 116, 188, 230, 244, 251, 253, 258, 268, 278, 287, 289, 305, 311], "skrect": [23, 146, 172, 173, 241], "skrrect": [23, 237], "drawsimpletext": 23, "charact": [23, 87, 94, 96, 99, 280, 289], "glyph": [23, 87, 94, 280, 283, 289, 310], "fallback": [23, 53, 96, 280], "found": [23, 87, 96, 172, 193, 248, 280, 289], "kern": [23, 280, 289], "complex": [23, 84, 244, 280], "advanc": [23, 87, 196, 197, 200, 245, 246, 248, 280], "By": [23, 37, 172, 186, 188, 193], "code": [23, 36, 87, 96, 193, 237, 241, 268, 280, 289, 306, 310], "drawstr": [23, 312], "char": [23, 96, 289], "drawtextblob": [23, 310, 311], "blob": [23, 280, 283, 311], "textblob": [23, 283, 310, 311], "skew": [23, 87, 172, 174, 310], "fake": [23, 87], "bold": [23, 87, 100, 289], "embed": [23, 95], "linear": [23, 48, 53, 140, 148, 159, 167, 253, 268, 311], "subpixel": [23, 87], "textencod": [23, 87, 280, 283], "kglyphid": [23, 284], "dither": [23, 188], "horizont": [23, 87, 172, 244, 248, 268, 283, 286, 289, 300, 311], "vertic": [23, 172, 268, 283, 286, 300, 311], "drawvertic": [23, 291], "triangl": 23, "mesh": 23, "vvertic": 23, "pend": [23, 148, 268], "resolv": [23, 181, 268, 289], "never": [23, 96, 112, 115, 153, 193, 229, 244, 263, 268, 289, 312], "defer": [23, 148, 159, 268], "getbaselayers": 23, "root": [23, 249], "global": [23, 63, 112, 115, 193], "due": [23, 96, 116, 265], "getdeviceclipbound": 23, "makeempti": [23, 63, 146, 147, 237, 241, 257], "getlocalclipbound": 23, "outset": [23, 146, 237, 241, 265, 311], "account": [23, 87, 188, 193, 265, 268, 289], "partial": [23, 35, 36, 87, 88, 117, 148, 188], "coverag": [23, 55], "local": [23, 140, 148, 153, 158], "getlocaltodevic": 23, "getprop": 23, "writabl": [23, 148, 172, 193, 234, 270], "getsavecount": 23, "depth": [23, 159], "getsurfac": 23, "sksurfac": [23, 112, 115], "sometim": [23, 53, 275, 289], "bare": 23, "els": [23, 148, 153, 172, 188, 223, 258, 286], "gettotalmatrix": 23, "strip": [23, 232, 240], "awai": [23, 65, 168, 229], "z": [23, 168, 172, 228, 235, 236], "3x3": [23, 53, 158, 172, 310], "isclipempti": 23, "often": [23, 96, 268, 306], "howev": [23, 35, 112, 115, 172, 268, 310, 311], "iscliprect": 23, "makesurfac": [23, 268], "beginpag": [23, 73], "beginrecord": [23, 229, 230, 308], "debugcanva": 23, "quickreject": [23, 188, 244], "quickli": [23, 228, 244], "compar": [23, 53, 145, 193, 235, 244, 265], "instanc": [23, 40, 43, 63, 74, 112, 115, 134, 148, 153, 188, 200, 249, 268, 289, 312], "too": [23, 24, 36, 37, 53, 186, 193, 213, 234, 244, 268], "small": [23, 24, 36, 53, 193, 213, 228, 234, 244, 268], "resetmatrix": 23, "skmatrix": [23, 172, 174, 237], "prior": [23, 29, 35, 112, 115, 158, 193, 194, 234, 235], "overwritten": [23, 193, 270], "savecount": 23, "savelayerpreservelcdtextrequest": 23, "savelayeralpha": 23, "mathemat": [23, 172], "px": [23, 172], "about": [23, 32, 34, 116, 172], "setmatrix": 23, "put": 23, "suggest": [23, 32], "layerrec": 23, "savelayerrec": 23, "opac": 23, "onto": [23, 43, 308, 310], "sx": [23, 172], "sy": [23, 172], "increas": [23, 87, 140, 144, 188, 193, 223, 244], "toarrai": [23, 148, 268, 310], "dx": [23, 76, 146, 158, 172, 175, 180, 193, 213, 235, 237, 241, 244], "dy": [23, 76, 146, 158, 172, 175, 180, 193, 213, 235, 237, 241, 244], "along": [23, 153, 158, 172, 200, 245, 246, 283, 289, 311], "move": [23, 32, 65, 82, 87, 146, 148, 158, 172, 176, 193, 223, 234, 241, 258, 259, 260, 261, 262], "distanc": [23, 56, 87, 94, 158, 193, 200, 213, 223, 235, 236, 312], "kall_quadaaflag": [23, 27], "quadaaflag": 23, "kbottom_quadaaflag": [23, 27], "kf16colortyp": [23, 28], "savelayerflag": [23, 29], "kinitwithprevious_savelayerflag": [23, 28], "kleft_quadaaflag": [23, 27], "klines_pointmod": [23, 26], "kmaskagainstcoverage_experimental_dont_use_savelayerflag": [23, 28], "knone_quadaaflag": [23, 27], "kpoints_pointmod": [23, 26], "kpolygon_pointmod": [23, 26], "kpreservelcdtext_savelayerflag": [23, 28], "kright_quadaaflag": [23, 27], "ktop_quadaaflag": [23, 27], "grid": 24, "fix": [24, 53, 289], "fbound": [24, 29], "fcolor": [24, 25, 252, 253], "frecttyp": 24, "fxcount": 24, "fxdiv": 24, "fycount": 24, "fydiv": 24, "kdefault": [24, 25], "recttyp": 24, "kfixedcolor": [24, 25], "ktranspar": [24, 25, 40], "polygon": [26, 193], "experiment": [28, 148, 308], "fpaint": 29, "fbackdrop": 29, "fsavelayerflag": 29, "overlai": 29, "modifi": [29, 32, 34, 63, 65, 87, 109, 112, 115, 148, 170, 188, 193, 223, 228, 234, 235, 237, 244, 251, 311], "backdrop": 29, "caus": [29, 74, 148, 172, 235, 237, 268], "kinitwithprevi": 29, "rather": [29, 222, 228, 310], "slower": [30, 186, 193], "abstract": [32, 229, 258], "makefromdata": [32, 96, 229, 289], "we": [32, 35, 53, 109, 112, 115, 116, 117, 223, 268, 297, 306, 308, 310], "know": [32, 96, 116, 306, 310], "minbufferedbytesneed": 32, "resulttostr": 32, "textual": 32, "stream": [32, 34, 73, 78, 82, 83, 85, 148, 176, 179, 183, 193, 229, 249, 250, 259, 260, 261, 262, 289, 295, 308], "getencodedformat": 32, "skencodedimageformat": 32, "getframecount": 32, "frame": [32, 33, 34, 35, 65, 148], "getframeinfo": [32, 35], "frameinfo": 32, "singl": [32, 87, 109, 148, 181, 188, 228, 229, 244, 251, 268, 280, 306, 308, 311, 312], "multi": [32, 34, 35, 268], "pars": [32, 53, 148, 245, 246, 275], "alreadi": [32, 35, 63, 148, 158, 236, 311], "As": [32, 37, 172], "rewind": [32, 36, 82, 176, 193, 246, 258, 259, 260, 261, 262], "still": [32, 34, 37, 38, 112, 115, 268, 308], "anim": [32, 38, 74, 148, 193], "getinfo": [32, 35], "reason": 32, "icc": [32, 53], "profil": [32, 53, 158], "getorigin": 32, "exif": [32, 80, 306], "ktopleft": [32, 268], "block": [32, 301, 308], "fheight": [32, 147, 257], "fwidth": [32, 147, 257], "repeat": [32, 172, 193, 228, 244, 286, 311], "give": [32, 187, 265, 308], "scanlin": [32, 35, 37], "progress": 32, "client": [32, 35, 37, 63, 74, 87, 105, 107, 109, 112, 115, 116, 134, 223, 268, 271, 306, 308, 311], "startscanlinedecod": 32, "descript": [32, 148, 232, 268, 312], "config": [32, 144, 299], "expect": [32, 148, 299], "simpli": [32, 112, 115, 268], "contract": 32, "decid": [32, 56, 65, 161, 200, 207, 216, 290], "impli": [32, 172, 229], "kinvalidscal": [32, 36], "skcolorspac": 32, "report": [32, 35, 82, 112, 115, 128, 148, 176, 258, 259, 260, 261, 262, 302], "geticcprofil": 32, "ksuccess": [32, 36], "explain": [32, 37], "failur": [32, 53, 82, 112, 115, 148, 176, 193, 258, 259, 260, 261, 262, 268, 289], "getrepetitioncount": 32, "repetit": 32, "mean": [32, 63, 87, 112, 115, 158, 172, 253, 258, 265, 268, 280, 297], "stop": [32, 73, 223, 287], "krepetitioncountinfinit": 32, "loop": [32, 193, 312], "forev": 32, "find": [32, 96, 263, 289], "getscaleddimens": 32, "desiredscal": 32, "factor": [32, 158, 172, 235, 311], "getscanlineord": 32, "scanlineord": 32, "enum": [32, 79, 105, 117, 253, 290, 300], "getscanlin": [32, 35], "countlin": 32, "Not": [32, 63, 311], "getvalidsubset": 32, "desiredsubset": 32, "anyth": [32, 87, 105, 311], "similar": [32, 33, 53, 112, 115, 158, 167, 172, 268, 308, 310], "particular": [32, 112, 115, 172, 311], "someth": [32, 167, 258, 311], "potenti": [32, 148], "getyuvaplan": 32, "yuvapixmap": [32, 148], "skyuvapixmap": [32, 148], "attempt": [32, 34, 35, 82, 148, 176, 258, 259, 260, 261, 262], "planar": [32, 148, 268, 299], "queryyuvainfo": 32, "prealloc": 32, "accord": [32, 140], "incrementaldecod": 32, "rowsdecod": 32, "continu": [32, 36, 193], "startincrementaldecod": 32, "kincompleteinput": [32, 36], "again": [32, 58, 67, 112, 115, 163, 202, 209, 218, 258, 268, 289], "skstream": 32, "latter": 32, "variabl": [32, 94, 172], "total": [32, 82, 112, 115, 153, 176, 223, 258, 259, 260, 261, 262, 299, 302], "meaning": [32, 35, 87, 172], "mani": [32, 82, 146, 158, 176, 181, 241, 253, 258, 259, 260, 261, 262, 306, 312], "necessarili": [32, 146, 241], "finish": [32, 112, 115, 116, 148], "interlac": 32, "png": [32, 148, 308, 310, 311], "what": [32, 74, 112, 115, 153, 251, 268, 290, 302, 310, 311], "nextscanlin": [32, 37], "fcurrscanlin": 32, "except": [32, 33, 36, 158, 230, 268], "strang": 32, "bmp": [32, 37, 148], "outputscanlin": 32, "inputscanlin": 32, "gif": [32, 33, 148], "supporteddatatyp": [32, 302], "skyuvapixmapinfo": [32, 302], "yuv": [32, 148, 268, 297, 299, 300, 302, 306], "subsampl": [32, 300, 301], "chroma": [32, 301], "site": [32, 299], "plane": [32, 148, 268, 297, 299, 300, 302, 303, 304, 305, 306], "skipscanlin": 32, "ongetscanlin": 32, "reallyhasalpha": 32, "incomplet": [32, 36], "past": [32, 82, 112, 115, 176, 258, 259, 260, 261, 262], "prepar": [32, 193], "readi": [32, 268], "kcouldnotrewind": [32, 36], "kerrorininput": [32, 36], "kinternalerror": [32, 36], "kinvalidconvers": [32, 36], "kinvalidinput": [32, 36], "kinvalidparamet": [32, 36], "kkeep": [32, 33, 37], "disposalmethod": 32, "knofram": [32, 34, 35], "kno_zeroiniti": [32, 39], "zeroiniti": 32, "kpreferanim": [32, 38], "selectionpolici": 32, "kpreferstillimag": [32, 38], "krestorebgcolor": [32, 33, 37], "krestoreprevi": [32, 33, 34, 35], "kunimpl": [32, 36], "kyes_zeroiniti": [32, 39], "89a": 33, "spec": [33, 140], "keep": [33, 37, 112, 115, 148, 172, 251, 268], "disregard": 33, "restoreprevi": 33, "individu": [34, 237], "falphatyp": 34, "fdisposalmethod": 34, "fdurat": 34, "millisecond": [34, 112, 115], "show": [34, 232, 308, 311], "ffullyreceiv": 34, "marker": 34, "There": [34, 305, 311], "frequiredfram": [34, 35], "earliest": 34, "fframeindex": 35, "fpriorfram": 35, "fzeroiniti": 35, "fsubset": 35, "encodedformat": 35, "encodedimageformat": [35, 148], "kwebp": [35, 79, 148], "sens": 35, "control": [35, 84, 87, 158, 186, 188, 193, 223, 237, 268, 273, 290, 310], "dure": [35, 112, 115, 116, 183, 229, 230, 268, 275], "besid": [36, 311], "etc": [36, 62, 112, 115, 158, 213, 290, 310], "did": [36, 112, 115, 148, 196, 197, 268], "fulfil": [36, 258], "oom": [36, 112, 115], "variat": [37, 89, 228, 289], "far": [37, 241], "reliabl": 37, "logic": [37, 53, 225, 287], "revers": [37, 146, 193, 241], "kbottomup": 37, "forc": [37, 172, 196], "advantag": [37, 39], "tough": 37, "simplest": 37, "ask": [37, 228, 308], "chunk": 37, "caution": [37, 63], "deliv": 37, "upsid": 37, "sequenc": [38, 74, 87, 193, 245, 246, 310, 311, 312], "select": [38, 172, 268], "struct": [39, 53, 107, 116, 134, 142, 306], "public": 40, "0xffffffff": [40, 188, 229], "tupl": [40, 43, 50, 87, 104, 145, 146, 147, 148, 172, 196, 197, 223, 235, 236, 241, 257, 302, 305], "tocolor": 40, "frombytes_rgba": 40, "fromcolor": [40, 188], "see": [40, 48, 53, 55, 63, 112, 115, 146, 153, 159, 188, 193, 241, 252, 253, 268, 289, 310, 311], "fitsinbyt": 40, "fa": 40, "makeopaqu": 40, "tobytes_rgba": 40, "vec": [40, 172, 235, 236], "fb": 40, "fg": 40, "fr": [40, 172], "kblack": 40, "kblue": 40, "kcyan": 40, "kdkgrai": 40, "kgrai": 40, "kgreen": 40, "kltgrai": 40, "75": [40, 311], "kmagenta": 40, "kred": 40, "kwhite": 40, "kyellow": 40, "manipul": 41, "kr": 41, "kg": 41, "kb": 41, "ka": 41, "klastenum": 41, "kred_colorchannelflag": 42, "kgreen_colorchannelflag": 42, "kblue_colorchannelflag": 42, "kalpha_colorchannelflag": 42, "kgray_colorchannelflag": 42, "krg_colorchannelflag": 42, "krgb_colorchannelflag": 42, "krgba_colorchannelflag": 42, "pipelin": [43, 311], "stage": 43, "xfermod": [43, 153, 158, 296, 309, 310], "reentrant": 43, "legal": [43, 48, 159, 188, 193, 223, 287, 304], "sever": [43, 53, 287, 310, 311], "deseri": [43, 50, 53, 56, 65, 74, 85, 153, 161, 170, 200, 207, 216, 251, 280, 289], "asacolormatrix": [43, 50], "5x4": [43, 50], "asacolormod": [43, 50], "ascolormod": [43, 50], "filtercolor": [43, 50], "filtercolor4f": [43, 50], "srccolor": [43, 50], "srcc": [43, 50], "dstc": [43, 50], "getflag": [43, 50], "overrid": [43, 50, 188, 251, 311], "getflattenabletyp": [43, 50, 56, 65, 74, 85, 153, 161, 170, 200, 207, 216, 251], "flattan": [43, 45, 50, 52, 56, 61, 65, 70, 74, 75, 153, 157, 161, 166, 170, 171, 200, 206, 207, 212, 216, 221, 251, 254], "gettypenam": [43, 50, 56, 65, 74, 85, 153, 161, 170, 200, 207, 216, 251], "drawabl": [43, 50, 56, 65, 85, 153, 161, 170, 200, 207, 216, 229, 230, 251], "makecompos": [43, 50, 56, 65, 161, 200, 207, 216, 311], "serial": [43, 50, 53, 56, 65, 74, 85, 153, 161, 170, 193, 200, 207, 216, 229, 251, 280, 289, 290, 308], "kalphaunchanged_flag": [43, 44, 50, 51], "kcolorfilter_typ": [43, 45, 50, 52, 56, 61, 65, 70, 74, 75, 85, 86, 153, 157, 161, 166, 170, 171, 200, 206, 207, 212, 216, 221, 251, 254], "kdrawlooper_typ": [43, 45, 50, 52, 56, 61, 65, 70, 74, 75, 85, 86, 153, 157, 161, 166, 170, 171, 200, 206, 207, 212, 216, 221, 251, 254], "kdrawable_typ": [43, 45, 50, 52, 56, 61, 65, 70, 74, 75, 85, 86, 153, 157, 161, 166, 170, 171, 200, 206, 207, 212, 216, 221, 251, 254], "kimagefilter_typ": [43, 45, 50, 52, 56, 61, 65, 70, 74, 75, 85, 86, 153, 157, 161, 166, 170, 171, 200, 206, 207, 212, 216, 221, 251, 254], "kmaskfilter_typ": [43, 45, 50, 52, 56, 61, 65, 70, 74, 75, 85, 86, 153, 157, 161, 166, 170, 171, 200, 206, 207, 212, 216, 221, 251, 254], "kpatheffect_typ": [43, 45, 50, 52, 56, 61, 65, 70, 74, 75, 85, 86, 153, 157, 161, 166, 170, 171, 200, 206, 207, 212, 216, 221, 251, 254], "kpixelref_typ": [43, 45, 50, 52, 56, 61, 65, 70, 74, 75, 85, 86, 153, 157, 161, 166, 170, 171, 200, 206, 207, 212, 216, 221, 251, 254], "kshaderbase_typ": [43, 45, 50, 52, 56, 61, 65, 70, 74, 75, 85, 86, 153, 157, 161, 166, 170, 171, 200, 206, 207, 212, 216, 221, 251, 254], "kunused_typ": [43, 45, 50, 52, 56, 61, 65, 70, 74, 75, 85, 86, 153, 157, 161, 166, 170, 171, 200, 206, 207, 212, 216, 221, 251, 254], "kunused_type2": [43, 45, 50, 52, 56, 61, 65, 70, 74, 75, 85, 86, 153, 157, 161, 166, 170, 171, 200, 206, 207, 212, 216, 221, 251, 254], "kunused_type3": [43, 45, 50, 52, 56, 61, 65, 70, 74, 75, 85, 86, 153, 157, 161, 166, 170, 171, 200, 206, 207, 212, 216, 221, 251, 254], "kunused_type4": [43, 45, 50, 52, 56, 61, 65, 70, 74, 75, 85, 86, 153, 157, 161, 166, 170, 171, 200, 206, 207, 212, 216, 221, 251, 254], "cf": [46, 158], "compos": [47, 158, 312], "hslamatrix": 47, "rowmajor": 47, "colormatrix": [47, 311], "hsla": 47, "instead": [47, 87, 148, 158, 188, 193, 213, 229, 241, 251, 296, 308, 311], "lerp": [47, 256], "lineartosrgbgamma": 47, "srgbtolineargamma": 47, "arg0": [48, 92, 106, 114, 122, 128, 148, 178, 186, 223, 250, 281], "gammaclosetosrgb": [48, 53, 159], "makealphatyp": [48, 159], "newalphatyp": [48, 159], "incompat": [48, 159, 268], "makecolorspac": [48, 148, 159], "makecolortyp": [48, 159], "newcolortyp": [48, 159], "makelightingfilt": 50, "mul": 50, "add": [50, 73, 92, 94, 117, 145, 181, 186, 189, 190, 193, 194, 196, 213, 229, 235, 304], "argument": [50, 89, 188, 268, 289], "capsul": [53, 82, 108, 176, 258, 259, 260, 261, 262, 269], "deeper": 53, "cm": [53, 172], "iccprofil": 53, "skcm": 53, "makergb": 53, "transferfn": 53, "transferfunct": 53, "toxyz": 53, "matrix3x3": 53, "transfer": [53, 148, 188, 249, 268, 311], "major": [53, 172], "xyz": 53, "makesrgb": [53, 148, 308], "makesrgblinear": [53, 148], "primari": 53, "gamma": [53, 159, 167, 268, 273, 279], "deref": [53, 63, 280, 291], "gammaislinear": 53, "gamuttransformto": 53, "src_to_dst": 53, "hash": [53, 188], "invtransferfn": 53, "fn": 53, "isnumericaltransferfn": 53, "standard": [53, 170, 172, 193, 237, 241, 311], "eg": 53, "pq": 53, "hlg": 53, "issrgb": 53, "littl": [53, 54, 310], "toler": 53, "might": [53, 146, 172, 310], "numer": [53, 193, 213], "white": 53, "d50": 53, "decis": 53, "consid": [53, 112, 115, 146, 229, 241], "2f": 53, "exponenti": [53, 158], "them": [53, 112, 115, 116, 134, 148, 188, 235, 236, 249, 268, 287, 311, 312], "makecolorspin": 53, "gbr": 53, "brg": 53, "testabl": 53, "makelineargamma": 53, "gamut": [53, 188], "term": [53, 116], "makesrgbgamma": 53, "refcntgreaterthan": [53, 63, 280, 291], "skdata": [53, 244], "toprofil": 53, "toxyzd50": 53, "toxyzd50hash": 53, "veri": [53, 193, 241, 244], "risk": 53, "collis": 53, "gabcdef": 53, "transferfnhash": 53, "writetomemori": [53, 193, 237, 244], "krgb_888x_colortyp": 54, "krgba_1010102_colortyp": 54, "kbgra_1010102_colortyp": 54, "krgb_101010x_colortyp": 54, "kbgr_101010x_colortyp": 54, "grayscal": [54, 142, 144, 311], "level": [54, 73, 87, 112, 115, 123, 148, 178, 188, 234, 310], "krgba_f16norm_colortyp": 54, "64": [54, 117, 136, 159, 234, 311], "krgba_f32_colortyp": 54, "128": [54, 117, 310, 311], "kr8g8_unorm_colortyp": 54, "ka16_float_colortyp": 54, "kr16g16_float_colortyp": 54, "ka16_unorm_colortyp": 54, "kr16g16_unorm_colortyp": 54, "endian": [54, 289], "uint16_t": 54, "kr16g16b16a16_unorm_colortyp": 54, "geometr": [55, 158, 172], "ala": 55, "thought": [55, 172], "variant": [55, 148, 268], "wai": [55, 109, 153, 308, 310], "kunion": 55, "kreversediffer": 55, "klast": [55, 111, 118, 142, 143, 148, 151, 302, 303], "sharp": [56, 188, 237, 311], "treatment": [56, 311], "makesum": [56, 65, 161, 200, 207, 216, 311], "appl": [56, 65, 161, 200, 207, 216], "registerflatten": [56, 65, 161, 200, 207, 216], "asadash": [56, 58, 65, 67, 161, 163, 200, 202, 207, 209, 216, 218], "dashinfo": [56, 58, 65, 67, 161, 163, 200, 202, 207, 209, 216, 218], "dashtyp": [56, 65, 161, 200, 207, 216], "aspoint": [56, 59, 65, 68, 161, 164, 200, 203, 207, 210, 216, 219], "pointdata": [56, 65, 161, 200, 207, 216], "skpath": [56, 65, 161, 188, 193, 196, 200, 207, 216, 244, 265], "stroke_rec": [56, 65, 161, 200, 207, 216], "strokerec": [56, 65, 161, 200, 207, 216], "cullr": [56, 65, 161, 200, 207, 216], "yield": [56, 65, 161, 200, 207, 216, 228, 308], "computefastbound": [56, 65, 153, 161, 188, 200, 207, 216], "baselin": [56, 65, 87, 94, 161, 200, 207, 216, 283], "filterpath": [56, 65, 161, 200, 207, 216], "rec": [56, 65, 161, 200, 207, 216, 265], "well": [56, 65, 74, 109, 134, 148, 161, 200, 207, 216, 229, 310], "kdash_dashtyp": [56, 58, 65, 67, 161, 163, 200, 202, 207, 209, 216, 218], "knone_dashtyp": [56, 58, 65, 67, 161, 163, 200, 202, 207, 209, 216, 218], "fcount": [57, 58, 66, 67, 162, 163, 201, 202, 208, 209, 217, 218], "dash": [57, 58, 62, 66, 67, 162, 163, 188, 200, 201, 202, 208, 209, 216, 217, 218], "finterv": [57, 66, 162, 201, 208, 217], "off": [57, 62, 66, 148, 162, 186, 201, 208, 217], "fphase": [57, 66, 162, 201, 208, 217], "pattern": [57, 58, 66, 67, 104, 162, 163, 193, 201, 202, 208, 209, 217, 218, 237, 241, 311], "memcpi": [58, 67, 163, 202, 209, 218], "thu": [58, 67, 112, 115, 146, 163, 202, 209, 218, 268, 310], "aggreg": [59, 68, 164, 203, 210, 219], "primit": [59, 68, 164, 203, 210, 216, 219, 268, 310], "fcliprect": [59, 68, 164, 203, 210, 219], "ffirst": [59, 68, 164, 203, 210, 219], "fflag": [59, 68, 94, 164, 203, 210, 219], "flast": [59, 68, 164, 203, 210, 219], "fnumpoint": [59, 68, 164, 203, 210, 219], "fpath": [59, 68, 164, 203, 210, 219], "fpoint": [59, 68, 164, 203, 210, 219, 252, 253], "fsize": [59, 68, 164, 203, 210, 219, 306], "kcircles_pointflag": [59, 60, 68, 69, 164, 165, 203, 204, 210, 211, 219, 220], "pointflag": [59, 68, 164, 203, 210, 219], "kuseclip_pointflag": [59, 60, 68, 69, 164, 165, 203, 204, 210, 211, 219, 220], "kusepath_pointflag": [59, 60, 68, 69, 164, 165, 203, 204, 210, 211, 219, 220], "phase": [62, 200], "55": 62, "85": 62, "would": [62, 153, 186, 228, 289], "becaus": [62, 112, 115, 306], "30": [62, 183, 185, 311, 312], "mod": [62, 200], "life": [63, 89], "dataref": 63, "eventu": [63, 258], "makefromfilenam": [63, 148, 311], "file": [63, 73, 82, 96, 148, 176, 186, 258, 259, 260, 261, 262, 289, 308, 310], "makesubset": [63, 148], "makeuniniti": 63, "writable_data": 63, "makewithcopi": [63, 148], "makewithoutcopi": 63, "outliv": 63, "suitabl": [63, 268], "buf": 63, "cast": [63, 146, 193, 213, 235], "copyrang": 63, "memcmp": 63, "isempti": [63, 146, 147, 159, 193, 237, 241, 244, 257, 263], "WITH": 63, "refcnt": [63, 87, 188, 230], "precaut": 63, "radiusx": [64, 81, 158], "radiusi": [64, 81, 158], "seglength": 65, "seedassist": 65, "break": 65, "randomli": [65, 311], "endpoint": 65, "deviat": [65, 170], "seed": [65, 228], "random": 65, "want": [65, 74, 243, 251, 265, 268, 310, 311], "behaviour": 65, "xchannelselector": [71, 158], "channelselectortyp": 71, "ychannelselector": [71, 158], "displac": [71, 158, 311], "colorchannel": [71, 158], "ka_channelselectortyp": [71, 72], "kb_channelselectortyp": [71, 72], "kg_channelselectortyp": [71, 72], "klast_channelselectortyp": [71, 72], "kr_channelselectortyp": [71, 72], "kunknown_channelselectortyp": [71, 72], "high": [73, 148, 310], "doc": 73, "draw_my_cont": 73, "endpag": 73, "syntax": 73, "filewstream": [73, 78, 179, 249, 295, 308], "makedocu": [73, 183, 308], "480": [73, 249, 268, 308], "640": [73, 249, 268, 308, 311], "trust": 73, "go": [73, 112, 115, 243], "longer": [73, 112, 115, 148, 251, 268], "automat": [73, 148], "anonym": 73, "namespac": 73, "pyautodocumentpag": 73, "id": [74, 112, 115, 121, 125, 126, 148, 183, 187, 283, 289], "whenev": 74, "savelevel": 74, "extern": [74, 268, 299, 305, 310], "presum": 74, "render": [74, 107, 112, 114, 115, 122, 128, 148, 158, 172, 186, 193, 228, 250, 268, 275, 280, 308], "thing": 74, "notifydrawingchang": 74, "newpicturesnapshot": [74, 230], "shadowmod": 76, "kdrawshadowandforeground_shadowmod": [76, 77], "kdrawshadowonly_shadowmod": [76, 77], "klast_shadowmod": [76, 77], "kshadowmodecount": 76, "sizeofpackeduint": [78, 83, 179, 295], "byteswritten": [78, 83, 179, 295], "wstream": [78, 83, 179, 183, 193, 249], "copyto": 78, "copytoandreset": 78, "detachasdata": 78, "detachasstream": 78, "streamasset": [78, 82, 176, 258, 260, 261, 262], "reader": 78, "reimplement": [78, 82, 83, 176, 179, 258, 259, 260, 261, 262, 295], "nullwstream": [78, 83, 295], "newlin": [78, 83, 179, 295], "padtoalign4": 78, "prependtoandreset": 78, "prepend": [78, 263], "write16": [78, 83, 179, 295], "write32": [78, 83, 179, 295], "write8": [78, 83, 179, 295], "writebigdecastext": [78, 83, 179, 295], "mindigit": [78, 83, 179, 263, 295], "writebool": [78, 83, 179, 295], "writedecastext": [78, 83, 179, 295], "writehexastext": [78, 83, 179, 295], "writepackeduint": [78, 83, 179, 295], "writescalar": [78, 83, 179, 295], "writescalarastext": [78, 83, 179, 295], "writestream": [78, 83, 179, 295], "writetext": [78, 83, 179, 295], "writetoandreset": 78, "writetostream": 78, "kbmp": [79, 148], "kgif": [79, 148], "kico": [79, 148], "kjpeg": [79, 148], "kpng": [79, 148, 308, 310], "kwbmp": 79, "kpkm": 79, "kktx": 79, "kastc": 79, "kdng": 79, "kheif": 79, "www": [80, 228], "org": [80, 140, 228], "exif2": 80, "ktopleft_encodedorigin": [80, 299], "ktopright_encodedorigin": 80, "kbottomright_encodedorigin": 80, "kbottomleft_encodedorigin": 80, "klefttop_encodedorigin": 80, "krighttop_encodedorigin": 80, "krightbottom_encodedorigin": 80, "kleftbottom_encodedorigin": 80, "kdefault_encodedorigin": 80, "klast_encodedorigin": 80, "makefromfil": [82, 96, 176, 258, 259, 260, 261, 262, 289], "skstreamasset": [82, 176, 258, 259, 260, 261, 262], "duplic": [82, 176, 258, 259, 260, 261, 262, 312], "streamseek": [82, 176, 258, 259, 260, 261], "fork": [82, 176, 258, 259, 260, 261, 262], "getlength": [82, 176, 223, 258, 259, 260, 261, 262], "memorystream": [82, 258, 259, 260, 261, 262], "getmemorybas": [82, 176, 258, 259, 260, 261, 262], "streammemori": [82, 176, 258, 259, 261, 262], "getposit": [82, 176, 258, 259, 260, 261, 262], "haslength": [82, 176, 258, 259, 260, 261, 262], "hasposit": [82, 176, 258, 259, 260, 261, 262], "isatend": [82, 176, 258, 259, 260, 261, 262], "earli": [82, 176, 258, 259, 260, 261, 262], "late": [82, 176, 258, 259, 260, 261, 262], "unsuccess": [82, 176, 258, 259, 260, 261, 262], "isvalid": [82, 83, 106, 107, 109, 110, 142, 148, 193, 237, 268, 274, 302, 305], "seek": [82, 148, 176, 258, 259, 260, 261, 262], "peek": [82, 176, 197, 258, 259, 260, 261, 262], "min": [82, 99, 158, 172, 176, 258, 259, 260, 261, 262, 279, 311], "peekabl": [82, 176, 258, 259, 260, 261, 262], "regardless": [82, 112, 115, 176, 258, 259, 260, 261, 262, 268], "readbool": [82, 176, 258, 259, 260, 261, 262], "readpackeduint": [82, 176, 258, 259, 260, 261, 262], "reads16": [82, 176, 258, 259, 260, 261, 262], "reads32": [82, 176, 258, 259, 260, 261, 262], "reads8": [82, 176, 258, 259, 260, 261, 262], "readscalar": [82, 176, 258, 259, 260, 261, 262], "readu16": [82, 176, 258, 259, 260, 261, 262], "readu32": [82, 176, 258, 259, 260, 261, 262], "readu8": [82, 176, 258, 259, 260, 261, 262], "streamrewind": [82, 176, 258, 259, 260, 262], "fsync": 83, "dynamicmemorywstream": [83, 179, 295], "much": [84, 310, 311], "knone_filterqu": 84, "fastest": [84, 148, 234], "lowest": 84, "qualiti": [84, 148, 153, 158, 186, 188, 234, 268], "nearest": [84, 148, 234, 287], "neighbor": [84, 148, 234], "klow_filterqu": [84, 148, 234], "bilerp": [84, 148, 234], "kmedium_filterqu": [84, 148, 188, 234], "mipmap": [84, 110, 112, 115, 148], "khigh_filterqu": [84, 148, 158, 234], "slowest": [84, 148, 234], "highest": 84, "bicub": [84, 148, 234], "klast_filterqu": 84, "flatten": [85, 148], "transport": 85, "typograph": 87, "scalex": [87, 172], "skewx": [87, 172], "emul": 87, "condens": 87, "expand": [87, 300, 301], "obliqu": 87, "shear": 87, "counttext": 87, "kutf8": [87, 280, 283, 284], "kutf16": [87, 280, 284], "kutf32": [87, 280, 284], "unicod": [87, 289], "codepoint": 87, "dump": [87, 172, 193, 237, 241], "skdebugf": 87, "aid": 87, "retriev": [87, 112, 114, 115, 122, 128, 148, 159, 188, 268, 299], "getedg": 87, "gethint": 87, "fonthint": 87, "outlin": [87, 188, 193, 244], "adjust": [87, 146, 188, 237, 289], "getmetr": 87, "skfontmetr": 87, "fontmetr": 87, "getpath": 87, "glyphid": [87, 289], "degener": [87, 172, 193, 196, 236], "getpo": 87, "getscalex": [87, 172], "getsiz": 87, "getskewx": [87, 172], "getspac": 87, "recommend": [87, 99, 308], "metric": [87, 94, 95, 148, 193, 283], "descent": 87, "ascent": 87, "lead": 87, "gettypefac": 87, "previous": [87, 112, 115, 188, 229, 289, 310], "gettypefaceordefault": 87, "getwidth": [87, 265], "getwidthsbound": 87, "getxpo": 87, "isbaselinesnap": 87, "snap": [87, 230], "isembeddedbitmap": 87, "engin": [87, 275], "isembolden": 87, "isforceautohint": 87, "freetyp": 87, "islinearmetr": 87, "linearli": [87, 112, 115], "scalabl": 87, "issubpixel": 87, "sub": [87, 268], "makewiths": 87, "infinit": [87, 237, 241], "nan": [87, 172, 235, 241, 287], "measuretext": [87, 311], "reftypefac": 87, "reftypefaceordefault": 87, "setbaselinesnap": 87, "baselinesnap": 87, "setedg": 87, "setembeddedbitmap": 87, "embeddedbitmap": 87, "setembolden": 87, "embolden": 87, "setforceautohint": 87, "forceautohint": 87, "sethint": 87, "hintinglevel": 87, "setlinearmetr": 87, "linearmetr": 87, "setscalex": [87, 172], "setsiz": 87, "textsiz": [87, 289], "setskewx": [87, 172], "setsubpixel": 87, "settypefac": 87, "tf": 87, "texttoglyph": [87, 311], "unichartoglyph": [87, 289], "uni": 87, "unicharstoglyph": [87, 289], "kalia": [87, 88], "kantialia": [87, 88], "ksubpixelantialia": [87, 88], "getcollectionindex": 89, "getvariationdesignposit": [89, 289], "variationposit": [89, 289], "setcollectionindex": 89, "collectionindex": 89, "ttc": [89, 96], "dfont": 89, "cff": 89, "cid": 89, "pfr": 89, "t42": 89, "t1": 89, "fon": 89, "collect": [89, 188], "setvariationdesignposit": 89, "coordinatecount": [90, 289], "constructor": [92, 134, 148, 172, 193, 244, 245, 248, 310], "append": [92, 193, 194, 213, 244, 263], "item": 92, "l": [92, 146, 172, 241], "pop": 92, "kslight": 93, "knormal": [93, 287, 288], "kfull": 93, "consist": [94, 159, 193, 280], "hasstrikeoutposit": 94, "strikeout": [94, 95], "underlin": [94, 95], "hasstrikeoutthick": 94, "hasunderlineposit": 94, "hasunderlinethick": 94, "fascent": 94, "favgcharwidth": 94, "averag": [94, 172, 193, 241], "unknown": [94, 172, 232], "fbottom": [94, 146, 172, 237, 241], "greatest": 94, "below": [94, 253, 279], "fcapheight": 94, "letter": 94, "fdescent": 94, "fontmetricsflag": 94, "flead": 94, "fmaxcharwidth": 94, "fstrikeoutposit": [94, 95], "fstrikeoutthick": [94, 95], "ftop": [94, 146, 172, 237, 241], "funderlineposit": [94, 95], "funderlinethick": [94, 95], "fxheight": 94, "fxmax": 94, "fxmin": 94, "kstrikeoutpositionisvalid_flag": [94, 95], "kstrikeoutthicknessisvalid_flag": [94, 95], "kunderlinepositionisvalid_flag": [94, 95], "kunderlinethicknessisvalid_flag": [94, 95], "certain": 95, "print": [96, 145, 146, 193, 196, 235, 236, 241, 280, 281], "familynam": [96, 289], "matchfamilystyl": 96, "fontstyl": [96, 104, 289], "refdefault": 96, "countfamili": 96, "createstyleset": 96, "fontstyleset": 96, "getfamilynam": [96, 289], "legacymaketypefac": 96, "ttcindex": 96, "recogn": [96, 148, 193], "filenam": 96, "matchfamili": 96, "famili": [96, 134, 289], "hidden": [96, 99, 172], "auto": 96, "activ": [96, 128, 188, 230], "good": [96, 112, 115], "matchfamilystylecharact": 96, "bcp47": 96, "iso": 96, "639": 96, "15924": 96, "3166": 96, "fine": 96, "here": [96, 105, 228, 268, 308], "signific": 96, "bcp47count": 96, "ishidden": 99, "sethidden": 99, "def": [99, 308, 311], "max": [99, 158, 172, 193, 279, 311], "tag": [99, 148, 186, 289], "identifi": [99, 148, 193, 229, 268, 280], "slant": [99, 100], "ital": [99, 100], "boldital": 100, "kblack_weight": [100, 102], "900": [100, 102], "kbold_weight": [100, 102], "700": [100, 102], "kcondensed_width": [100, 103], "kexpanded_width": [100, 103], "kextrablack_weight": [100, 102], "1000": [100, 102], "kextrabold_weight": [100, 102], "800": [100, 102], "kextracondensed_width": [100, 103], "kextraexpanded_width": [100, 103], "kextralight_weight": [100, 102], "200": [100, 102, 308], "kinvisible_weight": [100, 102], "kitalic_sl": [100, 101], "klight_weight": [100, 102], "300": [100, 102], "kmedium_weight": [100, 102], "500": [100, 102], "knormal_weight": [100, 102], "400": [100, 102], "knormal_width": [100, 103], "koblique_sl": [100, 101], "ksemibold_weight": [100, 102], "600": [100, 102], "ksemicondensed_width": [100, 103], "ksemiexpanded_width": [100, 103], "kthin_weight": [100, 102], "kultracondensed_width": [100, 103], "kultraexpanded_width": [100, 103], "kupright_sl": [100, 101], "createempti": 104, "createtypefac": 104, "getstyl": [104, 188, 265], "matchstyl": 104, "3d": [105, 112, 114, 115, 122, 128, 236, 268], "ganesh": [105, 308], "kopengl": [105, 112, 115], "kvulkan": 105, "kmetal": 105, "kdirect3d": 105, "kdawn": 105, "kmock": 105, "mock": [105, 107], "backend": [105, 106, 107, 109, 110, 112, 114, 115, 116, 117, 122, 128, 148, 268, 308], "unit": [105, 112, 115, 183, 235, 236, 252, 289], "overhead": [105, 193], "kopengl_grbackend": 105, "grbackend": 105, "who": [105, 153, 186, 230], "referenc": [105, 148, 188, 229, 234, 289, 311], "makegl": [106, 115, 308], "makemock": [106, 115], "grcolortyp": [106, 125, 126], "compress": [106, 112, 115, 148, 172, 240, 310], "skimag": [106, 112, 114, 115, 122, 126, 128, 148, 178], "compressiontyp": [106, 112, 114, 115, 122, 126, 128, 148], "makevk": 106, "vkformat": 106, "ycbcrinfo": 106, "grvkycbcrconversioninfo": 106, "asglformat": 106, "grglformat": 106, "asmockcolortyp": 106, "asmockcompressiontyp": 106, "asvkformat": 106, "grbackendapi": [106, 107, 109, 110, 112, 114, 115, 122, 128], "channelmask": 106, "getvkycbcrconversioninfo": 106, "maketexture2d": 106, "texturetyp": 106, "grtexturetyp": 106, "samplecnt": [107, 268, 308], "stencilbit": [107, 308], "glinfo": [107, 110], "grglframebufferinfo": [107, 308], "mockinfo": [107, 110], "grmockrendertargetinfo": 107, "getbackendformat": [107, 110, 125, 126], "grbackendformat": [107, 110, 112, 114, 115, 122, 125, 126, 128, 268, 274], "getglframebufferinfo": 107, "gl": [107, 112, 115, 116, 117, 172, 268, 308], "snapshot": [107, 213], "getmockrendertargetinfo": 107, "grmocktextureinfo": [107, 110], "getvkimageinfo": [107, 110], "grvkimageinfo": [107, 110, 268], "fimagelayout": 107, "layout": [107, 110, 112, 115, 268], "isframebufferonli": 107, "isprotect": [107, 110, 112, 115, 148], "setvkimagelayout": [107, 110], "vkimagelayout": [107, 109, 110, 112, 115], "anytim": [107, 183, 230, 311], "vkimag": [107, 112, 115, 268], "captur": [107, 268], "notifi": [107, 112, 115, 116, 268], "glsync": 108, "initgl": 108, "initvulkan": 108, "semaphor": [108, 112, 115, 116, 148, 268], "isiniti": 108, "vksemaphor": 108, "connect": [109, 153, 190, 193, 213, 310, 312], "u": [109, 134, 148, 268, 299, 300, 303, 306, 307], "modifiend": 109, "setter": 109, "wrapper": 109, "mutabl": 109, "queuefamilyindex": [109, 112, 115, 134], "grmipmap": [110, 112, 115, 148], "grgltextureinfo": 110, "getgltextureinfo": 110, "getmocktextureinfo": 110, "gltextureparametersmodifi": 110, "hasmipmap": [110, 148], "issametextur": 110, "setmutablest": 110, "grbackendsurfacemutablest": [110, 112, 115, 268], "kunknown": [111, 118, 232], "kalpha_8": 111, "kbgr_565": 111, "kabgr_4444": 111, "krgba_8888": 111, "krgba_8888_srgb": 111, "krgb_888x": 111, "krg_88": 111, "kbgra_8888": 111, "krgba_1010102": 111, "kgray_8": 111, "kalpha_f16": 111, "krgba_f16": 111, "krgba_f16_clamp": 111, "krgba_f32": 111, "kalpha_16": 111, "krg_1616": 111, "krg_f16": 111, "krgba_16161616": 111, "kalpha_8xxx": 111, "kalpha_f32xxx": 111, "kgray_8xxx": 111, "krgb_888": 111, "kr_8": 111, "kr_16": 111, "kr_f16": 111, "kgray_f16": 111, "computeimages": [112, 115], "usenextpow2": [112, 115], "abandoncontext": [112, 115, 308], "abandon": [112, 115, 128, 268], "resourc": [112, 115, 148, 310, 311], "assum": [112, 115, 148, 159, 168, 188, 302, 308], "context": [112, 114, 115, 117, 122, 128, 140, 148, 268, 280, 304, 308, 310], "usabl": [112, 115], "you": [112, 115, 144, 265, 308, 310, 311], "now": [112, 115, 193, 311], "further": [112, 115, 268], "vkqueue": [112, 115], "vkdevic": [112, 115, 134], "vkinstanc": [112, 115], "aliv": [112, 115, 268], "gotten": [112, 115], "unrecoverarbl": [112, 115], "ve": [112, 115], "vk_error_device_lost": [112, 115], "asdirectcontext": [112, 114, 115, 122, 128], "grcontext_bas": [112, 115, 122, 128], "grdirectcontext": [112, 114, 122, 128, 148, 308], "downcast": [112, 114, 115, 122, 128], "checkasyncworkcomplet": [112, 115], "asynchron": [112, 115, 148, 268], "relat": [112, 115, 280, 308], "callback": [112, 115, 229, 268], "colortypesupportedasimag": [112, 115, 128], "colortypesupportedassurfac": [112, 115, 128], "msaa": [112, 115, 128, 268], "maxsurfacesamplecountforcolortyp": [112, 115, 128], "compressedbackendformat": [112, 114, 115, 122, 128, 148], "createcompressedsbackendtextur": [112, 115], "createbackendtextur": [112, 114, 115, 122, 128], "backendformat": [112, 115, 274], "grrender": [112, 114, 115, 122, 128], "grprotect": [112, 115, 148], "grbackendtextur": [112, 115, 138, 148, 268], "vk_image_layout_undefin": [112, 115], "finishedproc": [112, 115, 116, 268], "upload": [112, 115, 148], "submit": [112, 115, 116, 148, 193, 241, 268], "send": [112, 115, 116, 249], "vk_image_layout_shader_read_only_optim": [112, 115], "srcdata": [112, 115], "defaultbackendformat": [112, 114, 115, 122, 128], "numlevel": [112, 115], "miplevel": [112, 115], "pleas": [112, 115, 268], "skmipmap": [112, 115], "computelevels": [112, 115], "computelevelcount": [112, 115], "createcompressedbackendtextur": [112, 115], "surfacecharacter": [112, 114, 115, 122, 128, 268], "deletebackendtextur": [112, 115], "grflushinfo": [112, 115, 148, 268], "grsemaphoressubmit": [112, 115, 148, 268], "sent": [112, 115, 116, 186, 229, 268], "glflush": [112, 115, 268], "submiss": [112, 115, 116, 268], "occur": [112, 115, 153, 268, 273, 289], "metal": [112, 115, 268], "d3d": [112, 115, 268], "dawn": [112, 115, 268], "grbackendsemaphor": [112, 115, 116, 268], "wait": [112, 115, 116, 268], "signal": [112, 115, 116, 230, 268], "regardleess": [112, 115, 268], "emphas": [112, 115, 268], "flushandsubmit": [112, 115, 148, 268, 308], "freegpuresourc": [112, 115], "pressur": [112, 115], "getresourcecachelimit": [112, 115], "getresourcecachepurgeablebyt": [112, 115], "consum": [112, 115], "purgeabl": [112, 115], "unlock": [112, 115], "getresourcecacheusag": [112, 115], "resourcecount": [112, 115], "maxresourcebyt": [112, 115], "usag": [112, 115, 148, 299, 300], "held": [112, 115, 134], "video": [112, 115], "maxrendertargets": [112, 115, 128], "maxtextures": [112, 115, 128], "glgeterror": [112, 115], "swallow": [112, 115], "gl_out_of_memori": [112, 115], "therefor": [112, 115, 116, 230], "hide": [112, 115], "advis": [112, 115], "grcontextopt": [112, 115], "fskipglerrorcheck": [112, 115], "That": [112, 115, 308], "ever": [112, 115], "vk_error_out_of_host_memori": [112, 115], "vk_error_out_of_device_memori": [112, 115], "performdeferredcleanup": [112, 115], "msnotus": [112, 115], "datetim": [112, 115], "timedelta": [112, 115], "purg": [112, 115, 148], "haven": [112, 115], "budget": [112, 115, 148, 268, 308], "precompileshad": [112, 115], "purgeresourcesnotusedinm": [112, 115], "purgeunlockedresourc": [112, 115], "maxbytestopurg": [112, 115], "preferscratchresourc": [112, 115], "reach": [112, 115], "polici": [112, 115], "lru": [112, 115], "overridden": [112, 115], "prefer": [112, 115], "scratch": [112, 115], "scratchresourcesonli": [112, 115], "intend": [112, 115, 299], "app": [112, 115], "suspend": [112, 115], "persist": [112, 115], "enforc": [112, 115, 228], "releaseresourcesandabandoncontext": [112, 115], "yet": [112, 115, 158], "cleanup": [112, 115], "destroi": [112, 115, 134, 268], "perhap": [112, 115], "ed": [112, 115, 289], "elsewher": [112, 115, 306], "resetcontext": [112, 115], "4294967295": [112, 115], "whatev": [112, 115, 172, 289, 310], "resend": [112, 115], "shouldn": [112, 115], "frequent": [112, 115], "resetgltexturebind": [112, 115], "twice": [112, 115, 193, 280, 289], "interven": [112, 115, 223], "setbackendrendertargetst": [112, 115], "grbackendrendertarget": [112, 115, 268, 308], "mutablest": [112, 115], "previousst": [112, 115], "setbackendtexturest": [112, 115], "updat": [112, 115, 158, 172, 193, 230, 304], "rendertarget": [112, 115], "awar": [112, 115], "updatebackendtextur": [112, 115], "vk_queue_family_ignor": [112, 115, 138], "tell": [112, 115], "setresourcecachelimit": [112, 115], "storevkpipelinecachedata": [112, 115], "synccpu": [112, 115], "outstand": [112, 115, 148], "un": [112, 115], "synchron": [112, 115, 258, 268], "try": [112, 115, 144, 234, 258, 308], "supportsdistancefieldtext": [112, 115], "threadsafeproxi": [112, 114, 115, 122, 128], "grcontextthreadsafeproxi": [112, 114, 115, 122, 128], "backendtextur": [112, 115, 148, 268], "mip": [112, 115, 123, 148, 178, 234, 268], "deletesemaphoresafterwait": [112, 115], "arg1": [114, 122, 148, 223], "grcontext": [114, 115, 116, 117, 122, 148, 268], "grglinterfac": 115, "grglmakenativeinterfac": 115, "mockopt": 115, "grmockopt": 115, "fnumsemaphor": 116, "themselv": [116, 230], "soon": 116, "proc": [116, 148, 280], "submittedproc": 116, "possibli": [116, 148, 172, 223, 268, 303], "reattempt": 116, "realli": 116, "main": 116, "d": [117, 172, 188], "krendertarget_grglbackendst": 117, "ktexturebinding_grglbackendst": 117, "kview_grglbackendst": 117, "kblend_grglbackendst": 117, "kmsaaenable_grglbackendst": 117, "kvertex_grglbackendst": 117, "kstencil_grglbackendst": 117, "kpixelstore_grglbackendst": 117, "kprogram_grglbackendst": 117, "kfixedfunction_grglbackendst": 117, "kmisc_grglbackendst": 117, "kpathrendering_grglbackendst": 117, "kall_grglbackendst": 117, "65535": 117, "512": [117, 228, 310, 311], "1024": 117, "2048": 117, "256": [117, 310, 311], "krgba8": 118, "kr8": 118, "kalpha8": 118, "kluminance8": 118, "kbgra8": 118, "krgb565": 118, "krgba16f": 118, "kr16f": 118, "krgb8": 118, "krg8": 118, "krgb10_a2": 118, "krgba4": 118, "ksrgb8_alpha8": 118, "kcompressed_etc1_rgb8": 118, "kcompressed_rgb8_etc2": 118, "kcompressed_rgb8_bc1": 118, "kcompressed_rgba8_bc1": 118, "kr16": 118, "krg16": 118, "krgba16": 118, "krg16f": 118, "kluminance16f": 118, "fboid": 119, "ffboid": 119, "fformat": [119, 121], "fid": 121, "ftarget": 121, "sai": 123, "disconnect": 128, "statu": 128, "transit": [128, 134, 188, 252, 253, 268], "ktopleft_grsurfaceorigin": 131, "kbottomleft_grsurfaceorigin": [131, 268, 308], "k2d": 132, "krectangl": 132, "kextern": 132, "backendcontext": 134, "grvkgpu": 134, "assumpt": [134, 297], "queue": [134, 138, 148, 268], "commandpool": 134, "grbackendobject": 134, "hand": [134, 153, 168], "manual": 134, "kext_debug_report_grvkextensionflag": 136, "knv_glsl_shader_grvkextensionflag": 136, "kkhr_surface_grvkextensionflag": 136, "kkhr_swapchain_grvkextensionflag": 136, "kkhr_win32_surface_grvkextensionflag": 136, "kkhr_android_surface_grvkextensionflag": 136, "kkhr_xcb_surface_grvkextensionflag": 136, "kgeometryshader_grvkfeatureflag": 137, "kdualsrcblend_grvkfeatureflag": 137, "ksamplerateshading_grvkfeatureflag": 137, "grbackendrendendertarget": 138, "fcurrentqueuefamili": 138, "vk_queue_family_extern": 138, "vk_queue_family_foreign_ext": 138, "fsharingmod": 138, "vk_sharing_mode_exclus": 138, "falloc": 138, "flevelcount": 138, "fprotect": 138, "fycbcrconversioninfo": 138, "makelinear": [140, 311], "gradient": [140, 188, 251, 252, 253], "scalar": [140, 172, 193, 235, 237, 241, 280, 283], "evenli": 140, "intermedi": [140, 268], "tile": [140, 148, 158, 228, 229, 251, 268, 285], "makeradi": [140, 311], "radial": [140, 253], "makesweep": [140, 311], "endangl": 140, "conic": [140, 193, 196, 197, 213, 253], "html": [140, 193, 213, 228], "w3": [140, 228], "html5": 140, "2dcontext": 140, "dom": 140, "createradialgradi": 140, "maketwopointcon": [140, 311], "startradiu": [140, 311], "endradiu": [140, 311], "kinterpolatecolorsinpremul_flag": [140, 141], "highcontrastfilt": 142, "low": [142, 144, 148, 234, 310], "vision": [142, 144], "invertstyl": 142, "fcontrast": 142, "fgrayscal": 142, "finvertstyl": 142, "kinvertbright": [142, 143], "kinvertlight": [142, 143], "knoinvert": [142, 143], "highcontrastconfig": 144, "hsl": 144, "iszero": [145, 147, 235, 257], "180": [146, 193, 213, 241, 310, 311], "120": [146, 148, 241, 311, 312], "conveni": [146, 234, 241], "special": [146, 241, 311], "makeltrb": [146, 241], "sort": [146, 237, 241, 245, 246, 258], "fleft": [146, 172, 237, 241], "fright": [146, 172, 193, 237, 241], "makes": [146, 241], "makewh": [146, 159, 241], "makexywh": [146, 241, 311], "dl": [146, 172], "dt": 146, "dr": 146, "db": 146, "narrow": [146, 235, 241], "widen": 146, "shrink": [146, 193], "lengthen": 146, "containsnoemptycheck": 146, "span": [146, 235, 237, 241, 248], "sign": [146, 159, 222, 235], "height64": 146, "safer": 146, "overflow": [146, 172, 241, 299, 302], "calcul": [146, 158, 287], "int64_t": 146, "inset": [146, 158, 169, 237, 241], "wider": [146, 241], "shorter": [146, 241], "taller": [146, 241], "isempty64": 146, "width64": 146, "expans": [146, 241], "makeinset": [146, 241], "symmetr": [146, 241], "makeoffset": [146, 237, 241], "upward": [146, 241], "downward": [146, 241], "makeoutset": [146, 241], "makesort": [146, 241], "delta": [146, 241], "offsetto": [146, 241], "newx": [146, 241], "newi": [146, 241], "setempti": [146, 147, 237, 241, 244, 257], "setltrb": [146, 241], "setwh": [146, 241], "setxywh": [146, 241], "topleft": 146, "iff": [147, 251, 257], "yuv_colorspac": 148, "heif": 148, "ico": 148, "jpeg": [148, 186, 306], "wbmp": 148, "webp": 148, "resiz": [148, 263, 268], "jpg": [148, 311], "import": [148, 308, 310, 311], "fromarrai": [148, 310], "frombyt": [148, 310], "makebackendtexturefromimag": 148, "singli": 148, "makecrosscontextfrompixmap": 148, "buildmip": 148, "limittomaxtextures": 148, "group": 148, "dstcolorspac": [148, 268], "downscal": 148, "makefromadoptedtextur": 148, "grrecordingcontext": [148, 268], "grsurfaceorigin": [148, 268], "makefrombitmap": 148, "shareabl": 148, "makefromcompressedtextur": 148, "character": [148, 268], "natur": 148, "etc1": 148, "usual": [148, 153, 228], "seen": 148, "makefromencod": [148, 311], "deferr": 148, "makefromnv12texturescopi": 148, "yuvcolorspac": [148, 268, 299, 302], "nv12textur": 148, "imageorigin": 148, "imagecolorspac": 148, "v": [148, 172, 241, 268, 299, 300, 303, 306, 307], "makefromnv12texturescopywithexternalbackend": 148, "makefrompictur": 148, "skpictur": [148, 158], "bitdepth": 148, "ku8": [148, 149], "makefromrast": 148, "makefromtextur": 148, "makefromyuvapixmap": 148, "yuvatextur": 148, "yuvaindic": [148, 297], "skyuvaindex": 148, "images": 148, "yuva": [148, 300, 302, 306], "interleav": 148, "yuvainfo": [148, 302, 304, 305], "silent": 148, "makefromyuvatextur": 148, "multitextur": 148, "texturereleaseproc": [148, 268], "releasecontext": [148, 268], "makefromyuvatexturescopi": 148, "makefromyuvatexturescopywithexternalbackend": 148, "makerastercopi": 148, "makerasterdata": 148, "makerasterfromcompress": 148, "decompress": 148, "maketexturefromcompress": 148, "doesn": [148, 297], "drm": 148, "protect": 148, "aslegacybitmap": 148, "legacybitmapmod": 148, "kro_legacybitmapmod": [148, 152], "capabl": [148, 268], "receiv": [148, 158, 193, 229, 258, 308], "alphattyp": 148, "rais": [148, 229, 308], "encodetodata": 148, "sk_encode_jpeg": 148, "sk_encode_png": 148, "sk_encode_webp": 148, "sk_build_for_mac": 148, "sk_build_for_io": 148, "trade": [148, 186], "miss": [148, 193], "promis": 148, "cull": [148, 229, 230], "getbackendtextur": [148, 268], "flushpendinggrcontextio": 148, "isalphaonli": 148, "islazygener": 148, "servic": 148, "demand": 148, "istextureback": 148, "lazi": 148, "makecolortypeandcolorspac": 148, "targetcolortyp": 148, "targetcolorspac": 148, "makenontextureimag": 148, "makerasterimag": 148, "cachinghint": 148, "kallow_cachinghint": [148, 150], "retain": [148, 172, 186, 193, 268, 305], "kdisallow_cachinghint": [148, 150], "taken": [148, 265], "maketextureimag": 148, "newli": [148, 183], "makewithfilt": 148, "skimagefilt": [148, 188], "clipbound": 148, "outsubset": 148, "process": [148, 158, 172, 186, 196, 229, 268], "reus": [148, 193, 283], "fp": [148, 172], "shortcut": 148, "hasattr": 148, "refencodeddata": 148, "reinterpretcolorspac": 148, "newcolorspac": 148, "none_filterqu": [148, 234], "wb": 148, "f": [148, 172, 311], "scalepixel": [148, 234], "uniqueid": [148, 229, 280, 289, 291], "withdefaultmipmap": 148, "attach": [148, 193, 308], "kbc1_rgb8_unorm": [148, 151], "kbc1_rgba8_unorm": [148, 151], "ketc2_rgb8_unorm": [148, 151], "kf16": [148, 149], "offscreen": [153, 310], "blur": [153, 158, 170, 188], "ax": [153, 158, 172, 193, 213, 240, 241, 244, 289], "achiev": 153, "unrot": 153, "easili": 153, "makematrixfilt": 153, "matrixtransform": [153, 158], "asacolorfilt": 153, "ascolorfilt": 153, "cancomputefastbound": [153, 188], "countinput": 153, "filterbound": 153, "mapdirect": 153, "inputrect": 153, "forward": 153, "backward": 153, "dag": [153, 158], "kforward_mapdirect": [153, 156], "touch": [153, 193, 213], "kreverse_mapdirect": [153, 156], "temp": 153, "real": 153, "answer": [153, 159], "krevers": 153, "kforward": 153, "incorrect": [153, 159, 241], "getinput": 153, "iscolorfilternod": 153, "makewithlocalmatrix": [153, 251], "cropedg": 154, "khasall_cropedg": [154, 155], "applyto": 154, "imagebound": 154, "embiggen": 154, "crop": [154, 158, 229], "enlarg": 154, "khasheight_cropedg": [154, 155], "khasleft_cropedg": [154, 155], "khastop_cropedg": [154, 155], "khaswidth_cropedg": [154, 155], "alphathreshold": 158, "arithmet": [158, 310], "third": [158, 193, 287, 312], "kdecal": [158, 286], "sigma": [158, 170], "kernel": 158, "gaussian": [158, 170], "todo": 158, "michaelludwig": 158, "kmirror": [158, 286], "evalu": 158, "dilat": 158, "displacementmap": 158, "xchannel": 158, "ychannel": 158, "selector": [158, 193], "extract": [158, 188], "distantlitdiffus": 158, "point3": [158, 160, 172], "lightcolor": [158, 160], "surfacescal": [158, 160], "kd": [158, 160], "diffus": 158, "illumin": 158, "distant": 158, "light": [158, 311], "distantlitspecular": 158, "k": [158, 160, 172, 193, 311], "shini": [158, 160], "specular": 158, "expon": 158, "dropshadow": [158, 311], "drop": 158, "shadow": [158, 193], "dropshadowonli": 158, "exactli": [158, 193, 228, 241, 310], "manner": 158, "erod": 158, "srcrect": [158, 169, 268, 285], "dstrect": 158, "portion": [158, 172, 241, 268], "magnifi": 158, "mimic": 158, "zoom": 158, "len": [158, 311], "matrixconvolut": 158, "kernels": 158, "gain": 158, "bia": 158, "kerneloffset": 158, "convolvealpha": 158, "nxm": 158, "sharpen": 158, "convolut": 158, "convolv": 158, "come": [158, 306], "merg": 158, "pic": 158, "targetrect": 158, "skirect": 158, "pointlitdiffus": 158, "pointlitspecular": 158, "spotlitdiffus": 158, "falloffexpon": [158, 160], "cutoffangl": [158, 160], "spot": 158, "toward": [158, 193], "falloff": 158, "spotlitspecular": 158, "composit": [158, 296], "bytesizeoverflow": 159, "bytes": 159, "computeminbytes": 159, "colorinfo": 159, "makea8": 159, "maken32": 159, "whichev": 159, "makes32": 159, "makeunknown": 159, "dimensionless": [159, 244], "computeoffset": 159, "makedimens": 159, "newsiz": 159, "newdimens": 159, "newwidth": 159, "newheight": 159, "minrowbytes64": 159, "unsign": [159, 234, 303], "validrowbyt": 159, "properli": 159, "makedistantlitdiffus": 160, "makedistantlitspecular": 160, "makepointlitdiffus": 160, "makepointlitspecular": 160, "makespotlitdiffus": 160, "makespotlitspecular": 160, "luma": [167, 301], "luminancetoalpha": 167, "fecolormatrix": 167, "fold": 167, "despit": 167, "dot": [167, 235, 236], "lumin": [167, 300, 307], "agre": [167, 234, 268], "4x4": 168, "viewer": 168, "makeblur": [170, 188, 311], "blurstyl": 170, "respectctm": 170, "setident": [172, 240], "settransl": 172, "setscal": [172, 311], "setskew": 172, "setrot": 172, "set9": 172, "setal": 172, "classifi": 172, "gettyp": [172, 237], "j": [172, 300], "q": 172, "aj": 172, "cp": 172, "ak": 172, "bn": 172, "cq": 172, "al": 172, "bo": 172, "cr": 172, "dj": 172, "em": [172, 289], "dk": 172, "en": 172, "fq": 172, "eo": 172, "gj": 172, "hm": 172, "ip": 172, "gk": 172, "hn": 172, "iq": 172, "ho": 172, "ir": 172, "express": 172, "invalidmatrix": 172, "sk_scalarmax": [172, 193, 241], "makeal": 172, "transx": 172, "skewi": 172, "scalei": 172, "transi": 172, "pers0": 172, "pers1": 172, "pers2": 172, "makerecttorect": 172, "stf": 172, "scaletofit": 172, "aspect": [172, 311], "ratio": [172, 235], "rotatedeg": 172, "deg": 172, "pivot": 172, "rotaterad": 172, "rad": 172, "setaffineident": 172, "affin": 172, "matric": [172, 310], "xp": 172, "float32": 172, "asaffin": 172, "decomposescal": 172, "decompos": 172, "remaind": 172, "finit": [172, 193, 237, 241, 268], "nearli": [172, 193, 213, 235, 236], "dirtymatrixtypecach": 172, "modif": [172, 188, 228, 311], "reconstruct": [172, 193, 237, 241, 289], "kmscalex": 172, "kmskewx": 172, "kmtransx": 172, "kmskewi": 172, "kmscalei": 172, "kmtransi": 172, "kmpersp0": 172, "kmpersp1": 172, "kmpersp2": 172, "get9": 172, "ascend": 172, "getmaxscal": 172, "getminmaxscal": 172, "getminscal": 172, "getperspx": 172, "getperspi": 172, "With": [172, 193], "mappoint": 172, "getscalei": 172, "getskewi": 172, "gettranslatex": 172, "gettranslatei": 172, "typemask": 172, "kperspective_mask": [172, 174], "kidentity_mask": [172, 174], "ktranslate_mask": [172, 174], "kscale_mask": [172, 174], "kaffine_mask": [172, 174], "hasperspect": 172, "reciproc": 172, "isfinit": [172, 193, 235, 236, 241], "infin": [172, 235, 237, 241], "isident": 172, "isscaletransl": 172, "issimilar": 172, "tol": 172, "000244140625": 172, "uniform": 172, "collaps": 172, "alik": 172, "euclidean": [172, 235], "arm": 172, "istransl": 172, "maphomogeneouspoint": 172, "cz": 172, "ei": 172, "fz": [172, 236], "gx": 172, "hy": 172, "iz": 172, "homogen": 172, "mapradiu": 172, "ellips": [172, 193, 213], "minor": [172, 228], "maprect": 172, "pc": [172, 193], "applyperspectiveclip": [172, 193], "maprectscaletransl": 172, "maprecttoquad": 172, "suspect": 172, "mapvector": 172, "dhy": 172, "mapxi": 172, "normalizeperspect": 172, "categor": 172, "behav": [172, 193, 258], "rest": 172, "postconcat": 172, "postrot": 172, "co": [172, 311], "sin": [172, 311], "cj": 172, "sm": 172, "ck": 172, "sn": 172, "sj": 172, "cn": 172, "sl": 172, "upright": [172, 193], "postscal": 172, "postskew": 172, "kx": 172, "ky": 172, "posttransl": 172, "preconcat": 172, "prerot": [172, 311], "ac": 172, "bc": 172, "ec": 172, "gc": 172, "hc": 172, "prescal": 172, "preskew": 172, "pretransl": 172, "preservesaxisalign": 172, "90": [172, 193, 213, 310], "mirror": [172, 286, 311], "rectstaysrect": [172, 240], "preservesrightangl": 172, "rc": 172, "fetch": 172, "anticip": 172, "recomput": 172, "setaffin": 172, "persp0": 172, "persp1": 172, "persp2": 172, "setconcat": 172, "setperspx": 172, "proport": [172, 235], "setperspi": 172, "setpolytopoli": 172, "setrsxform": 172, "skrsxform": 172, "fssin": [172, 240], "fsco": [172, 240], "ftx": [172, 240], "fty": [172, 240], "setrecttorect": 172, "setscaletransl": 172, "tx": [172, 240], "ty": [172, 240], "setscalei": 172, "setsinco": 172, "sinvalu": 172, "cosvalu": 172, "setskewi": 172, "settranslatex": 172, "settranslatei": 172, "kascalex": 172, "kascalei": 172, "kaskewx": 172, "kaskewi": 172, "katransx": 172, "katransi": 172, "kcenter_scaletofit": [172, 173], "kend_scaletofit": [172, 173], "kfill_scaletofit": [172, 173], "kstart_scaletofit": [172, 173], "maketransl": 175, "makecopi": [176, 291], "makedirect": 176, "copydata": 176, "asdata": 176, "getatpo": 176, "filestream": [176, 258, 259, 260, 261, 262], "setdata": 176, "setmemori": 176, "skiptoalign4": 176, "skpathop": 177, "attachto": 178, "countlevel": 178, "builder": [181, 213, 283], "emptypath": 181, "succeed": [181, 237], "makewithcolor": 182, "knumcolor": 182, "72": [183, 311], "inch": [183, 186], "127": 183, "mm": 183, "pdfmetadata": 183, "setnodeid": [183, 187], "nodeid": [183, 187], "node": [183, 187], "appear": [183, 289], "structureelementnod": 183, "structur": [183, 186, 187, 299, 304, 305], "tree": [183, 186, 187], "kannot": [183, 185], "documentstructuretyp": 183, "38": [183, 185], "kart": [183, 185], "kbibentri": [183, 185], "35": [183, 185], "kblockquot": [183, 185], "kcaption": [183, 185], "kcode": [183, 185], "36": [183, 185, 312], "kdiv": [183, 185], "kdocument": [183, 185], "kfigur": [183, 185], "46": [183, 185], "kform": [183, 185], "48": [183, 185, 237, 312], "kformula": [183, 185], "47": [183, 185], "kh": [183, 185], "kh1": [183, 185], "kh2": [183, 185], "kh3": [183, 185], "kh4": [183, 185], "kh5": [183, 185], "kh6": [183, 185], "kindex": [183, 185], "kl": [183, 185], "klbodi": [183, 185], "kli": [183, 185], "klbl": [183, 185], "klink": [183, 185], "37": [183, 185], "knonstruct": [183, 185], "knote": [183, 185], "33": [183, 185], "kp": [183, 185], "kpart": [183, 185], "kprivat": [183, 185], "kquot": [183, 185], "krb": [183, 185], "40": [183, 185, 308, 310, 312], "krp": [183, 185], "42": [183, 185], "krt": [183, 185], "41": [183, 185], "krefer": [183, 185], "34": [183, 185], "krubi": [183, 185], "39": [183, 185], "ksect": [183, 185], "kspan": [183, 185], "ktbodi": [183, 185], "ktd": [183, 185], "ktfoot": [183, 185], "kth": [183, 185], "kthead": [183, 185], "ktoc": [183, 185], "ktoci": [183, 185], "ktr": [183, 185], "ktabl": [183, 185], "kwp": [183, 185], "45": [183, 185, 310], "kwt": [183, 185], "44": [183, 185], "kwarichu": [183, 185], "43": [183, 185], "appendfloat": 184, "appendfloatarrai": 184, "appendint": 184, "appendstr": 184, "appendstringarrai": 184, "factori": 186, "fauthor": 186, "person": 186, "fcreator": 186, "conform": 186, "fencodingqu": 186, "101": 186, "percent": 186, "lossless": 186, "fkeyword": 186, "keyword": [186, 188], "comma": 186, "delin": 186, "fpdfa": 186, "xmp": 186, "uuid": 186, "intent": 186, "reproduc": 186, "featur": [186, 275], "2b": 186, "fproduc": 186, "frasterdpi": 186, "dpi": 186, "fidel": 186, "onlin": 186, "printer": 186, "fstructureelementtreeroot": 186, "semant": [186, 187], "fsubject": 186, "subject": [186, 251], "ftitl": 186, "titl": 186, "fadditionalnodeid": 187, "falt": 187, "fattribut": 187, "flang": 187, "fnodeid": 187, "ftypestr": 187, "algorithm": [188, 228, 289], "alphaf": 188, "antialia": [188, 310, 311, 312], "colorblu": [188, 310, 311, 312], "strokewidth": [188, 265, 310, 311, 312], "kstroke_styl": [188, 191, 193, 265, 267, 310, 311, 312], "0xff0000ff": [188, 311], "shallow": 188, "setxxx": 188, "0xff00ff00": 188, "lumacolorfilt": 188, "dashpatheffect": [188, 311], "strokecap": [188, 312], "kbutt_cap": [188, 189], "strokejoin": 188, "kmiter_join": [188, 190], "strokemit": 188, "extens": [188, 189], "orig": 188, "stylist": [188, 310, 311], "computefaststrokebound": 188, "docomputefastbound": 188, "getalpha": 188, "getblendmod": 188, "getcolor4f": 188, "getcolorfilt": 188, "skcolorfilt": 188, "getfillpath": 188, "resscal": [188, 223, 265], "favor": 188, "speed": [188, 193], "hairlin": [188, 265], "getfilterqu": 188, "gethash": 188, "__eq__": 188, "getimagefilt": 188, "getmaskfilt": 188, "skmaskfilt": 188, "getpatheffect": 188, "skpatheffect": 188, "getshad": 188, "getstrokecap": 188, "getstrokejoin": 188, "getstrokemit": 188, "bevel": 188, "miter": [188, 190, 264], "getstrokewidth": 188, "pen": [188, 310], "isantialia": 188, "antialias": 188, "isdith": 188, "smooth": 188, "issrcov": 188, "nothingtodraw": 188, "refcolorfilt": 188, "refimagefilt": 188, "refmaskfilt": 188, "refpatheffect": 188, "refshad": 188, "setargb": 188, "setalpha": 188, "setalphaf": 188, "setantialia": 188, "aa": 188, "setblendmod": [188, 310, 311], "setcolor": [188, 310, 311, 312], "setcolor4f": 188, "setcolorfilt": 188, "setdith": 188, "diter": 188, "setfilterqu": 188, "setimagefilt": 188, "setmaskfilt": 188, "unalt": [188, 193, 194, 197], "setpatheffect": 188, "setshad": 188, "setstrokecap": [188, 312], "setstrokejoin": 188, "setstrokemit": 188, "setstrokewidth": [188, 311, 312], "setstyl": [188, 312], "kbevel_join": [188, 190], "kcapcount": 188, "kdefault_cap": [188, 189], "kdefault_join": [188, 190], "kfill_styl": [188, 191, 193, 265, 267, 310, 311], "kjoincount": 188, "klast_cap": [188, 189], "ksquare_cap": [188, 189, 312], "klast_join": [188, 190], "kround_cap": [188, 189, 312], "kround_join": [188, 190], "kstrokeandfill_styl": [188, 191, 265, 267, 312], "kstylecount": [188, 265], "verb": [193, 196, 197, 312], "figur": 193, "cartesian": 193, "bezier": 193, "lazili": 193, "convex": 193, "updateboundscach": 193, "addcircl": [193, 213, 312], "addrect": [193, 213], "60": [193, 310, 311], "70": [193, 312], "center_x": [193, 213], "center_i": [193, 213], "pathdirect": [193, 213], "kcw": [193, 213, 215], "convertconictoquad": 193, "p2": [193, 213], "pow2": 193, "quad": [193, 241, 312], "influenc": 193, "ellipt": 193, "hyperbol": 193, "parabol": 193, "power": 193, "iscubicdegener": 193, "p3": 193, "p4": 193, "short": [193, 289], "islinedegener": 193, "isquaddegener": 193, "conicweight": [193, 196, 197, 227], "illeg": 193, "encount": 193, "startindex": [193, 213], "isclos": [193, 213, 223], "kwind": [193, 222], "expos": [193, 244], "addarc": [193, 213], "modulo": [193, 213, 258], "dir": 193, "pathverb": [193, 312], "kmove": [193, 227, 312], "kconic": [193, 227], "kclose": [193, 227, 312], "kccw": [193, 215], "addov": [193, 213, 311], "kmove_verb": [193, 196, 199], "kconic_verb": [193, 196, 197, 199], "kclose_verb": [193, 196, 199], "centeri": [193, 241], "kcw_direct": [193, 213], "addpath": 193, "addpathmod": 193, "kappend_addpathmod": [193, 194], "kextend_addpathmod": [193, 194], "refe": 193, "renc": 193, "addpoli": 193, "addrrect": [193, 213], "attr": [193, 196], "kline_verb": [193, 196, 199], "addroundrect": 193, "approximatebytesus": [193, 229], "arcto": [193, 213], "forcemoveto": [193, 213], "x2": [193, 213], "y2": [193, 213], "tangent": [193, 200, 213, 223, 224], "parallel": [193, 213, 268, 280], "postscript": [193, 213, 289, 310], "arct": [193, 213], "xaxisrot": [193, 213], "largearc": [193, 213], "arcsiz": [193, 213], "rout": [193, 213], "xy": [193, 213, 251], "computetightbound": 193, "conicto": [193, 213, 312], "kquad_verb": [193, 199], "conservativelycontainsrect": 193, "countpoint": 193, "countverb": 193, "kcubic_verb": [193, 199], "cubicto": [193, 213, 310], "x3": [193, 213], "y3": [193, 213], "forceclos": [193, 196, 223], "dumpashex": 193, "hexadecim": [193, 237, 241], "dumphex": [193, 237, 241], "getfilltyp": 193, "bug": 193, "1762": 193, "getlastpt": 193, "lastpt": 193, "getpoint": 193, "excess": 193, "getsegmentmask": 193, "segmentmask": 193, "getverb": 193, "increserv": [193, 213], "extraptcount": [193, 213], "grow": 193, "formula": 193, "point_arrai": 193, "isinterpolat": 193, "isconvex": 193, "sk_scalarinfin": [193, 235], "sk_scalarnegativeinfin": 193, "sk_scalarnan": 193, "trivial": 193, "isinversefilltyp": 193, "indefinit": 193, "kinversewind": [193, 222], "kinverseevenodd": [193, 222], "islastcontourclos": 193, "islin": 193, "isov": [193, 237], "isrrect": 193, "isrect": [193, 237, 244], "corrupt": [193, 237], "lineto": [193, 213, 311, 312], "moveto": [193, 213, 223, 227, 311, 312], "quadto": [193, 213, 312], "rarcto": 193, "rconicto": [193, 213], "dx1": 193, "dy1": 193, "dx2": 193, "dy2": 193, "stand": 193, "rcubicto": [193, 213], "dx3": 193, "dy3": 193, "rlineto": [193, 213], "rmoveto": 193, "rquadto": [193, 213], "readfrommemori": [193, 237, 244], "inconsist": 193, "concert": 193, "reverseaddpath": 193, "front": 193, "critic": 193, "setfilltyp": [193, 213], "setisvolatil": [193, 213], "temporari": 193, "setlastpt": 193, "shrinktofit": 193, "capac": 193, "heap": 193, "lightweight": [193, 244], "toggleinversefilltyp": [193, 213], "instantan": 193, "avoid": [193, 235, 241], "race": 193, "condit": 193, "kconic_segmentmask": [193, 198], "kcubic_segmentmask": [193, 198], "kdone_verb": [193, 196, 197, 199], "klarge_arcs": [193, 195, 213, 214], "kline_segmentmask": [193, 198], "kquad_segmentmask": [193, 198], "ksmall_arcs": [193, 195, 213, 214], "setpath": [196, 197, 223, 244], "iscloselin": 196, "isclosedcontour": 196, "exhaust": [196, 197], "klastenum_styl": [200, 205], "kmorph_styl": [200, 205], "krotate_styl": [200, 205, 311], "ktranslate_styl": [200, 205], "stamp": [207, 311], "latic": [207, 311], "startangledeg": 213, "sweepangledeg": 213, "addpolygon": 213, "skpoint": [213, 235], "computebound": 213, "pt1": 213, "pt2": 213, "pt3": 213, "detach": 213, "extraverbcount": 213, "extra": [213, 306], "polylineto": 213, "counter": 215, "kevenodd": 222, "evenodd": 222, "slow": 223, "getmatrix": 223, "getposandtan": 223, "kgetposandtan_matrixflag": [223, 224], "getpostan": 223, "getseg": 223, "startd": 223, "stopd": 223, "startwithmoveto": 223, "untouch": 223, "nextcontour": 223, "kgetposition_matrixflag": [223, 224], "kgettangent_matrixflag": [223, 224], "kdifference_pathop": 225, "kintersect_pathop": 225, "kunion_pathop": 225, "inclus": [225, 287], "kxor_pathop": 225, "exclus": 225, "kreversedifference_pathop": 225, "kline_pathsegmentmask": 226, "kquad_pathsegmentmask": 226, "kconic_pathsegmentmask": 226, "kcubic_pathsegmentmask": 226, "kquad": 227, "kcubic": 227, "perlin": 228, "turbul": 228, "tileabl": 228, "nois": 228, "stitch": 228, "stitchtil": 228, "seam": [228, 286], "tr": 228, "feturbulenceel": 228, "makefractalnois": [228, 311], "basefrequencyx": 228, "basefrequencyi": 228, "numoctav": 228, "tiles": 228, "fractal": 228, "frequenc": 228, "octav": 228, "fairli": 228, "doubl": 228, "basefrequ": 228, "insignificantli": 228, "period": 228, "resembl": 228, "regular": 228, "unstructur": 228, "isn": [228, 305], "makeimprovednois": 228, "slightli": 228, "maketurbul": [228, 311], "whole": 229, "finishrecordingaspictur": [229, 230, 308], "recreat": [229, 280], "valueerror": 229, "makefromstream": [229, 250], "makeplacehold": 229, "placehold": 229, "intercept": [229, 280], "approximateopcount": 229, "nest": [229, 230], "fall": [229, 230], "superset": 229, "replai": 229, "interrupt": 229, "among": [229, 280, 300], "finishrecordingasdraw": 230, "getrecordingcanva": 230, "live": 230, "finishrecordingaspicturewithcul": 230, "bbh": 230, "overal": 230, "meant": 232, "portabl": 232, "kunknown_pixelgeometri": 232, "krgb_h_pixelgeometri": 232, "kbgr_h_pixelgeometri": 232, "krgb_v_pixelgeometri": 232, "kbgr_v_pixelgeometri": 232, "nor": 234, "creator": 234, "addr16": 234, "addr32": 234, "addr64": 234, "addr8": 234, "warn": [234, 241], "setcolorspac": 234, "writable_addr": 234, "crossproduct": [235, 236], "straight": [235, 311], "dotproduct": [235, 236], "magnitud": 235, "cosin": 235, "sqrt": 235, "skscalar": 235, "distancetoorigin": 235, "iset": 235, "promot": [235, 241], "negat": 235, "former": 235, "setab": 235, "setlength": 235, "setnorm": 235, "euclidian": 236, "makescal": [236, 311], "css": 237, "properti": [237, 268, 275], "kempty_typ": [237, 239], "makeov": [237, 310], "koval_typ": [237, 239], "makerect": 237, "makerectxi": 237, "xrad": 237, "yrad": 237, "krect_typ": [237, 239], "ksimple_typ": [237, 239], "ashex": [237, 241], "dumptostr": 237, "skstring": 237, "getsimpleradii": 237, "kninepatch_typ": [237, 239], "kcomplex_typ": [237, 239], "simpl": [237, 311], "curvatur": 237, "iscomplex": [237, 244], "isninepatch": 237, "issimpl": 237, "parma": 237, "ksizeinmemori": 237, "setninepatch": 237, "leftrad": 237, "toprad": 237, "rightrad": 237, "bottomrad": 237, "setov": 237, "setrect": [237, 244], "setrectradii": 237, "setrectxi": 237, "klasttyp": [237, 239], "klowerleft_corn": [237, 238], "klowerright_corn": [237, 238], "kupperleft_corn": [237, 238], "kupperright_corn": [237, 238], "arbitrari": 239, "sco": 240, "ssin": 240, "makefromradian": 240, "radian": 240, "ai": 240, "toquad": [240, 241], "quqd": 240, "totristrip": 240, "unsort": 241, "makeiwh": 241, "lose": [241, 312], "asscalar": 241, "centerx": 241, "midpoint": 241, "sk_scalarmin": 241, "issort": 241, "joinnonemptyarg": 241, "joinpossiblyemptyrect": 241, "skscalarroundtoint": 241, "roundin": 241, "skscalarceiltoint": 241, "skscalarfloortoint": 241, "roundout": 241, "smallest": 241, "setbound": 241, "setboundscheck": 241, "setboundsnocheck": 241, "setiwh": 241, "virtual": 243, "getrefcnt": 243, "compact": 244, "scan": [244, 248], "regiona": 244, "regionb": 244, "inequ": 244, "xor": 244, "cliper": 244, "computeregioncomplex": 244, "getboundarypath": 244, "quickcontain": 244, "rgn": [244, 246], "setregion": 244, "spaner": 244, "ivector": 244, "kdifference_op": [244, 247], "kintersect_op": [244, 247], "klastop": [244, 247], "kreplace_op": [244, 247], "kopcnt": 244, "kreversedifference_op": [244, 247], "kunion_op": [244, 247], "kxor_op": [244, 247], "predict": [245, 246], "sure": 249, "del": [249, 308], "viewport": 249, "viewbox": 249, "kconverttexttopaths_flag": 249, "knoprettyxml_flag": 249, "containers": 250, "setcontainers": 250, "easi": 251, "asagradi": [251, 253], "gradientinfo": 251, "gradienttyp": 251, "isaimag": 251, "makewithcolorfilt": 251, "invok": 251, "kcolor_gradienttyp": [251, 253], "kconical_gradienttyp": [251, 253], "klast_gradienttyp": [251, 253], "klinear_gradienttyp": [251, 253], "knone_gradienttyp": [251, 253], "kradial_gradienttyp": [251, 253], "ksweep_gradienttyp": [251, 253], "fcolorcount": [252, 253], "fcoloroffset": [252, 253], "fgradientflag": 252, "gradientshad": [252, 311], "fradiu": [252, 253], "ftilemod": 252, "relev": 253, "insuffici": 253, "meaningless": 253, "1st": [253, 312], "2nd": [253, 287, 312], "toceil": 257, "tofloor": 257, "toround": 257, "classic": 258, "async": 258, "fewer": 258, "eof": 258, "hit": 258, "hope": 258, "appendhex": 263, "appends32": 263, "appends64": 263, "appendscalar": 263, "appendu32": 263, "appendu64": 263, "appendunichar": 263, "c_str": 263, "substr": 263, "subchar": 263, "endswith": 263, "suffixstr": 263, "suffixchar": 263, "findlastof": 263, "inserthex": 263, "inserts32": 263, "inserts64": 263, "insertscalar": 263, "insertu32": 263, "insertu64": 263, "insertunichar": 263, "prependhex": 263, "prepends32": 263, "prepends64": 263, "prependscalar": 263, "prependunichar": 263, "startswith": 263, "prefixstr": 263, "prefixchar": 263, "getinflationradiu": 265, "miterlimit": 265, "initstyl": 265, "applytopaint": 265, "applytopath": 265, "getcap": 265, "inflat": 265, "getjoin": 265, "getmit": 265, "getresscal": 265, "hasequaleffect": 265, "skstrokerec": 265, "isfillstyl": 265, "ishairlinestyl": 265, "needtoappli": 265, "setfillstyl": 265, "sethairlinestyl": 265, "setresscal": 265, "setstrokeparam": 265, "setstrokestyl": 265, "strokeandfil": 265, "kfill_initstyl": [265, 266], "khairline_initstyl": [265, 266], "khairline_styl": [265, 267], "grrendertarget": 268, "care": 268, "getcanva": 268, "makeimagesnapshot": [268, 308, 310], "makefrombackendrendertarget": [268, 308], "backendrendertarget": 268, "releaseproc": 268, "sk_support_gpu": 268, "makefrombackendtextur": 268, "scene": 268, "makenul": 268, "makerast": 268, "chosen": 268, "makerastern32premul": 268, "kpremul": 268, "makerendertarget": [268, 308], "samplecount": 268, "surfaceorigin": 268, "shouldcreatewithmip": 268, "kbottomleft": 268, "host": [268, 289, 310], "asyncrescaleandreadpixel": [268, 269, 273], "rescalegamma": 268, "rescalequ": 268, "callabl": 268, "rescal": [268, 273, 279], "asyncreadresult": 268, "subrectangl": 268, "cost": 268, "asyncrescaleandreadpixelsyuv420": [268, 269, 273], "dstsize": 268, "deferreddisplaylistrecord": 268, "deferreddisplaylist": 268, "skdeferreddisplaylist": 268, "displai": [268, 299, 308], "backendsurfaceaccess": 268, "knoaccess": [268, 271], "kpresent": [268, 271], "foreign": 268, "vk_image_layout_present_src_khr": 268, "newstat": 268, "ctualli": 268, "grbackendsurfac": 268, "prep": 268, "correct": [268, 308], "window": [268, 309], "generationid": 268, "notifycontentwillchang": 268, "getbackendrendertarget": 268, "backendhandleaccess": 268, "iscompat": 268, "viabl": 268, "interest": 268, "sanit": 268, "contentchangemod": 268, "kn32": 268, "recordingcontext": 268, "replacebackendtextur": 268, "kretain_contentchangemod": [268, 272], "substitut": 268, "kdiscardwrite_backendhandleaccess": [268, 270], "kdiscard_contentchangemod": [268, 272], "kflushread_backendhandleaccess": [268, 270], "kflushwrite_backendhandleaccess": [268, 270], "klinear": [268, 273], "cachemaxresourcebyt": 274, "createbackendformat": 274, "createcolorspac": 274, "createfbo0": 274, "usesglfbo0": 274, "createres": 274, "ismipmap": 274, "istextur": 274, "vulkansecondarycbcompat": 274, "expens": 275, "pixelgeometri": 275, "isusedeviceindependentfont": 275, "klegacyfonthost_inittyp": [275, 277], "kusedeviceindependentfonts_flag": [275, 276], "kusedistancefieldfonts_flag": 275, "tabl": [278, 279, 289], "compoent": 278, "incom": 278, "temporarili": 278, "remultipli": 278, "makeargb": [278, 311], "tablea": 278, "tabler": 278, "tableg": 278, "tableb": 278, "createclip": 279, "creategamma": 279, "makeclipt": 279, "makegammat": 279, "fglyphindic": [280, 282], "ftypefaceproc": 280, "ftypefacectx": 280, "makefrompostext": 280, "po": [280, 283], "textblobbuild": [280, 310], "allocrunposh": [280, 283], "makefrompostexth": 280, "xpo": [280, 283], "consti": 280, "makefromrsxform": 280, "makefromstr": 280, "attribut": [280, 310, 311], "makefromtext": 280, "getintercept": 280, "fglyphcount": 282, "ftypefac": 282, "allocrun": 283, "placement": 283, "suppress": 283, "runbuff": 283, "allocrunpo": 283, "allocrunrsxform": 283, "subregion": 285, "krepeat": [286, 311], "domain": 286, "everywher": 286, "klasttilemod": 286, "startt": 287, "stopt": 287, "33333": 287, "66667": 287, "entir": [287, 310], "spread": 287, "kinvert": [287, 288], "intrins": 289, "textskewx": 289, "textscalex": 289, "kfakeboldtext_mask": 289, "arial": 289, "makedefault": 289, "makedeseri": 289, "dat": 289, "makefromnam": 289, "face": 289, "copytabledata": 289, "gettabledata": 289, "countglyph": 289, "counttabl": 289, "utf8": 289, "languag": 289, "getkerningpairadjust": 289, "getunitsperem": 289, "getpostscriptnam": 289, "truetyp": 289, "big": 289, "gettables": 289, "gettabletag": 289, "getvariationdesignparamet": 289, "fontparamet": 289, "fontargu": 289, "isbold": 289, "kbold": 289, "isfixedpitch": 289, "claim": 289, "pitch": 289, "isital": 289, "kital": 289, "makeclon": 289, "parameter": 289, "exaclti": 289, "serializebehavior": 289, "kincludedataifloc": [289, 290], "unichar": 289, "utf32": 289, "cut": 289, "32bit": 289, "kdoincludedata": [289, 290], "kdontincludedata": [289, 290], "descriptor": 290, "vertex": 291, "vertexmod": 291, "approximates": 291, "klast_vertexmod": [291, 292], "ktrianglefan_vertexmod": [291, 292], "ktrianglestrip_vertexmod": [291, 292], "ktriangles_vertexmod": [291, 292], "arevalidindic": 297, "returnnumplan": 297, "fchannel": 297, "deal": 297, "nv12": 297, "findex": 297, "ka_index": [297, 298], "kindexcount": 297, "klast_index": [297, 298], "ku_index": [297, 298], "kv_index": [297, 298], "ky_index": [297, 298], "hasalpha": 299, "planarconfig": [299, 304], "numchannelsinplan": 299, "ith": [299, 302, 305], "numplan": [299, 302, 305], "planedimens": 299, "imagedimens": 299, "sittingx": 299, "kcenter": [299, 301], "sittingi": 299, "resolut": [299, 300], "computetotalbyt": [299, 302, 305, 306], "returnplanes": [299, 302], "planes": [299, 302], "forigin": [299, 306], "ret": 299, "sitingx": 299, "sitingi": 299, "kmaxplan": [299, 302], "kuyva_4444": [299, 300], "kuyv_444": [299, 300], "kyuva_4444": [299, 300], "kyuv_444": [299, 300], "ky_uv_420": [299, 300], "ky_uv_a_4204": [299, 300], "ky_u_v_410": [299, 300], "ky_u_v_411": [299, 300], "ky_u_v_420": [299, 300], "ky_u_v_422": [299, 300], "ky_u_v_440": [299, 300], "ky_u_v_444": [299, 300], "ky_u_v_a_4204": [299, 300], "ky_vu_420": [299, 300], "ky_vu_a_4204": [299, 300], "ky_v_u_420": [299, 300], "ky_v_u_a_4204": [299, 300], "underscor": 300, "ky_uv": 300, "grai": 300, "rg": 300, "uv": 300, "notat": 300, "vu": 300, "uyv": 300, "uyva": 300, "defaultcolortypefordatatyp": 302, "datatyp": [302, 304], "numchannel": [302, 304], "kunknown_skcolortyp": 302, "numchannelsanddatatyp": 302, "aren": 302, "bpp": 302, "planess": 302, "initpixmapsfromsinglealloc": 302, "issupport": 302, "planeinfo": 302, "kfloat16": [302, 303], "kunorm10_unorm2": [302, 303], "kunorm16": [302, 303], "kunorm8": [302, 303], "unorm": 303, "grimagecontext": 304, "init": [304, 308], "enabledatatyp": 304, "yuvapixmapinfo": 305, "fromdata": 305, "fromexternalmemori": 305, "fromexternalpixmap": 305, "fixeds": 305, "tolegaci": 305, "skyuva": 305, "fwidthbyt": 306, "widthbyt": 306, "idea": 306, "distinct": 306, "kjpeg_yuvcolorspac": 307, "krec601_yuvcolorspac": 307, "sdtv": 307, "krec709_yuvcolorspac": 307, "hdtv": 307, "kbt2020_yuvcolorspac": 307, "uhdtv": 307, "kidentity_yuvcolorspac": 307, "klastenum_yuvcolorspac": 307, "acceler": 308, "colorgreen": [308, 310], "matplotlib": 308, "pyplot": 308, "plt": 308, "imshow": 308, "contextlib": 308, "contextmanag": 308, "glfw_context": 308, "runtimeerror": 308, "window_hint": 308, "stencil_bit": 308, "create_window": 308, "make_context_curr": 308, "shown": 308, "glfw_window": 308, "skia_surfac": 308, "fb_width": 308, "fb_height": 308, "get_framebuffer_s": 308, "backend_render_target": 308, "gl_rgba8": 308, "glclear": 308, "gl_color_buffer_bit": 308, "swap_buff": 308, "get_kei": 308, "key_escap": 308, "press": 308, "window_should_clos": 308, "wait_ev": 308, "demonstr": [308, 310, 311], "svgcanva": 308, "interoper": 309, "glanc": 309, "showcas": 309, "organ": 310, "96": [310, 311], "maintain": [310, 311], "cairo": 310, "awt": 310, "enorm": 310, "easier": 310, "colorwhit": [310, 311], "cours": 310, "yourself": 310, "110": [310, 312], "colorcyan": [310, 311], "80": [310, 311], "coloryellow": [310, 311], "768": 310, "color_wheel": [310, 311], "rect2": 310, "paint2": [310, 311], "hello": 310, "320": 310, "240": 310, "pil": 310, "skia_imag": 310, "pil_imag": 310, "autocanvasrestor": [310, 311], "paint1": 311, "136": [311, 312], "paint3": 311, "blob1": 311, "blob2": 311, "144": 311, "224": 311, "intermix": 311, "freeli": 311, "proce": 311, "fillpaint": 311, "strokepaint": 311, "150": [311, 312], "0xff": 311, "0x00": 311, "220": 311, "0xffffff00": 311, "transfermod": 311, "speak": 311, "gettextbound": 311, "getfontmetr": 311, "magenta": 311, "cyan": 311, "draw_utf8_str": 311, "colormagenta": 311, "0x00ffffff": 311, "tall": 311, "192": 311, "desc": 311, "68": 311, "colorltgrai": 311, "colortranspar": 311, "mention": 311, "perlinnoiseshad": 311, "05": 311, "025": 311, "colorblack": 311, "160": [311, 312], "mandrill_512_q075": 311, "07": 311, "tablecolorfilt": 311, "path2dpatheffect": 311, "lattic": 311, "line2dpatheffect": 311, "path1dpatheffect": 311, "122": 311, "star": 311, "math": 311, "115": 311, "6927937": 311, "cornerpatheffect": 311, "chop": 311, "discretepatheffect": 311, "path_effect": 311, "1245": 311, "path_conic_weight": 312, "path_verb": 312, "round_rect": 312, "inspect": 312, "124": 312, "108": 312, "172": 312, "148": 312, "66": 312, "188": 312, "path_fill_typ": 312, "hole": 312, "88": 312, "satisfi": 312, "path_verb_arrai": 312, "130": 312, "3rd": 312, "preced": 312, "path_last_point": 312, "paint_stroke_join": 312, "paint_stroke_cap": 312, "travel": 312, "56": 312}, "objects": {"": [[4, 0, 0, "-", "skia"]], "skia": [[5, 1, 1, "", "AlphaThresholdFilter"], [6, 1, 1, "", "AlphaType"], [4, 4, 1, "", "AlphaTypeIsOpaque"], [7, 1, 1, "", "ApplyPerspectiveClip"], [8, 1, 1, "", "ArithmeticImageFilter"], [4, 4, 1, "", "AsWinding"], [9, 1, 1, "", "AutoCanvasRestore"], [10, 1, 1, "", "BBHFactory"], [11, 1, 1, "", "BBoxHierarchy"], [13, 1, 1, "", "BackingFit"], [14, 1, 1, "", "Bitmap"], [16, 1, 1, "", "BlendMode"], [17, 1, 1, "", "BlendModeCoeff"], [4, 4, 1, "", "BlendMode_AsCoeff"], [4, 4, 1, "", "BlendMode_Name"], [18, 1, 1, "", "BlurImageFilter"], [20, 1, 1, "", "BlurMaskFilter"], [21, 1, 1, "", "BlurStyle"], [22, 1, 1, "", "Budgeted"], [23, 1, 1, "", "Canvas"], [31, 1, 1, "", "ClipOp"], [32, 1, 1, "", "Codec"], [4, 4, 1, "", "Color"], [40, 1, 1, "", "Color4f"], [41, 1, 1, "", "ColorChannel"], [42, 1, 1, "", "ColorChannelFlag"], [43, 1, 1, "", "ColorFilter"], [46, 1, 1, "", "ColorFilterImageFilter"], [47, 1, 1, "", "ColorFilters"], [4, 4, 1, "", "ColorGetA"], [4, 4, 1, "", "ColorGetB"], [4, 4, 1, "", "ColorGetG"], [4, 4, 1, "", "ColorGetR"], [48, 1, 1, "", "ColorInfo"], [49, 1, 1, "", "ColorMatrix"], [50, 1, 1, "", "ColorMatrixFilter"], [4, 4, 1, "", "ColorSetA"], [4, 4, 1, "", "ColorSetARGB"], [4, 4, 1, "", "ColorSetRGB"], [53, 1, 1, "", "ColorSpace"], [4, 4, 1, "", "ColorToHSV"], [54, 1, 1, "", "ColorType"], [4, 4, 1, "", "ColorTypeBytesPerPixel"], [4, 4, 1, "", "ColorTypeIsAlwaysOpaque"], [4, 4, 1, "", "ColorTypeValidateAlphaType"], [4, 4, 1, "", "ComputeIsOpaque"], [55, 1, 1, "", "ConvergeMode"], [56, 1, 1, "", "CornerPathEffect"], [62, 1, 1, "", "DashPathEffect"], [63, 1, 1, "", "Data"], [64, 1, 1, "", "DilateImageFilter"], [65, 1, 1, "", "DiscretePathEffect"], [71, 1, 1, "", "DisplacementMapEffect"], [73, 1, 1, "", "Document"], [74, 1, 1, "", "Drawable"], [76, 1, 1, "", "DropShadowImageFilter"], [78, 1, 1, "", "DynamicMemoryWStream"], [79, 1, 1, "", "EncodedImageFormat"], [80, 1, 1, "", "EncodedOrigin"], [4, 4, 1, "", "EncodedOriginToMatrix"], [81, 1, 1, "", "ErodeImageFilter"], [82, 1, 1, "", "FILEStream"], [83, 1, 1, "", "FILEWStream"], [84, 1, 1, "", "FilterQuality"], [85, 1, 1, "", "Flattanable"], [87, 1, 1, "", "Font"], [89, 1, 1, "", "FontArguments"], [93, 1, 1, "", "FontHinting"], [94, 1, 1, "", "FontMetrics"], [96, 1, 1, "", "FontMgr"], [97, 1, 1, "", "FontParameters"], [100, 1, 1, "", "FontStyle"], [104, 1, 1, "", "FontStyleSet"], [105, 1, 1, "", "GrBackendApi"], [106, 1, 1, "", "GrBackendFormat"], [107, 1, 1, "", "GrBackendRenderTarget"], [108, 1, 1, "", "GrBackendSemaphore"], [109, 1, 1, "", "GrBackendSurfaceMutableState"], [110, 1, 1, "", "GrBackendTexture"], [111, 1, 1, "", "GrColorType"], [112, 1, 1, "", "GrContext"], [113, 1, 1, "", "GrContextOptions"], [114, 1, 1, "", "GrContext_Base"], [115, 1, 1, "", "GrDirectContext"], [116, 1, 1, "", "GrFlushInfo"], [117, 1, 1, "", "GrGLBackendState"], [118, 1, 1, "", "GrGLFormat"], [119, 1, 1, "", "GrGLFramebufferInfo"], [120, 1, 1, "", "GrGLInterface"], [121, 1, 1, "", "GrGLTextureInfo"], [122, 1, 1, "", "GrImageContext"], [123, 1, 1, "", "GrMipmapped"], [124, 1, 1, "", "GrMockOptions"], [125, 1, 1, "", "GrMockRenderTargetInfo"], [126, 1, 1, "", "GrMockTextureInfo"], [127, 1, 1, "", "GrProtected"], [128, 1, 1, "", "GrRecordingContext"], [129, 1, 1, "", "GrRenderable"], [130, 1, 1, "", "GrSemaphoresSubmitted"], [131, 1, 1, "", "GrSurfaceOrigin"], [132, 1, 1, "", "GrTextureType"], [133, 1, 1, "", "GrVkAlloc"], [134, 1, 1, "", "GrVkBackendContext"], [135, 1, 1, "", "GrVkDrawableInfo"], [136, 1, 1, "", "GrVkExtensionFlags"], [137, 1, 1, "", "GrVkFeatureFlags"], [138, 1, 1, "", "GrVkImageInfo"], [139, 1, 1, "", "GrVkYcbcrConversionInfo"], [140, 1, 1, "", "GradientShader"], [4, 4, 1, "", "HSVToColor"], [142, 1, 1, "", "HighContrastConfig"], [144, 1, 1, "", "HighContrastFilter"], [145, 1, 1, "", "IPoint"], [146, 1, 1, "", "IRect"], [147, 1, 1, "", "ISize"], [148, 1, 1, "", "Image"], [153, 1, 1, "", "ImageFilter"], [158, 1, 1, "", "ImageFilters"], [159, 1, 1, "", "ImageInfo"], [160, 1, 1, "", "LightingImageFilter"], [161, 1, 1, "", "Line2DPathEffect"], [167, 1, 1, "", "LumaColorFilter"], [168, 1, 1, "", "M44"], [169, 1, 1, "", "MagnifierImageFilter"], [4, 4, 1, "", "MakeNullCanvas"], [170, 1, 1, "", "MaskFilter"], [172, 1, 1, "", "Matrix"], [175, 1, 1, "", "MatrixPathEffect"], [176, 1, 1, "", "MemoryStream"], [177, 1, 1, "", "MergePathEffect"], [178, 1, 1, "", "MipmapBuilder"], [179, 1, 1, "", "NullWStream"], [180, 1, 1, "", "OffsetImageFilter"], [4, 4, 1, "", "Op"], [181, 1, 1, "", "OpBuilder"], [182, 1, 1, "", "OverdrawColorFilter"], [183, 1, 1, "", "PDF"], [188, 1, 1, "", "Paint"], [192, 1, 1, "", "PaintImageFilter"], [193, 1, 1, "", "Path"], [200, 1, 1, "", "Path1DPathEffect"], [207, 1, 1, "", "Path2DPathEffect"], [213, 1, 1, "", "PathBuilder"], [215, 1, 1, "", "PathDirection"], [216, 1, 1, "", "PathEffect"], [222, 1, 1, "", "PathFillType"], [4, 4, 1, "", "PathFillType_ConvertToNonInverse"], [4, 4, 1, "", "PathFillType_IsEvenOdd"], [4, 4, 1, "", "PathFillType_IsInverse"], [223, 1, 1, "", "PathMeasure"], [225, 1, 1, "", "PathOp"], [226, 1, 1, "", "PathSegmentMask"], [227, 1, 1, "", "PathVerb"], [228, 1, 1, "", "PerlinNoiseShader"], [229, 1, 1, "", "Picture"], [230, 1, 1, "", "PictureRecorder"], [232, 1, 1, "", "PixelGeometry"], [233, 1, 1, "", "PixelRef"], [234, 1, 1, "", "Pixmap"], [235, 1, 1, "", "Point"], [236, 1, 1, "", "Point3"], [4, 4, 1, "", "PreMultiplyARGB"], [4, 4, 1, "", "PreMultiplyColor"], [4, 4, 1, "", "RGBToHSV"], [237, 1, 1, "", "RRect"], [240, 1, 1, "", "RSXform"], [241, 1, 1, "", "Rect"], [242, 1, 1, "", "RefCnt"], [243, 1, 1, "", "RefCntBase"], [244, 1, 1, "", "Region"], [249, 1, 1, "", "SVGCanvas"], [250, 1, 1, "", "SVGDOM"], [251, 1, 1, "", "Shader"], [255, 1, 1, "", "ShaderMaskFilter"], [256, 1, 1, "", "Shaders"], [4, 4, 1, "", "Simplify"], [257, 1, 1, "", "Size"], [258, 1, 1, "", "Stream"], [259, 1, 1, "", "StreamAsset"], [260, 1, 1, "", "StreamMemory"], [261, 1, 1, "", "StreamRewindable"], [262, 1, 1, "", "StreamSeekable"], [263, 1, 1, "", "String"], [264, 1, 1, "", "StrokePathEffect"], [265, 1, 1, "", "StrokeRec"], [268, 1, 1, "", "Surface"], [274, 1, 1, "", "SurfaceCharacterization"], [275, 1, 1, "", "SurfaceProps"], [278, 1, 1, "", "TableColorFilter"], [279, 1, 1, "", "TableMaskFilter"], [280, 1, 1, "", "TextBlob"], [283, 1, 1, "", "TextBlobBuilder"], [284, 1, 1, "", "TextEncoding"], [4, 4, 1, "", "TightBounds"], [285, 1, 1, "", "TileImageFilter"], [286, 1, 1, "", "TileMode"], [287, 1, 1, "", "TrimPathEffect"], [289, 1, 1, "", "Typeface"], [291, 1, 1, "", "Vertices"], [293, 1, 1, "", "VkFormat"], [294, 1, 1, "", "VkImageLayout"], [295, 1, 1, "", "WStream"], [296, 1, 1, "", "XfermodeImageFilter"], [297, 1, 1, "", "YUVAIndex"], [299, 1, 1, "", "YUVAInfo"], [302, 1, 1, "", "YUVAPixmapInfo"], [305, 1, 1, "", "YUVAPixmaps"], [306, 1, 1, "", "YUVASizeInfo"], [307, 1, 1, "", "YUVColorSpace"]], "skia.AlphaThresholdFilter": [[5, 2, 1, "", "Make"], [5, 2, 1, "", "__init__"]], "skia.AlphaType": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "kLastEnum_AlphaType"], [6, 3, 1, "", "kOpaque_AlphaType"], [6, 3, 1, "", "kPremul_AlphaType"], [6, 3, 1, "", "kUnknown_AlphaType"], [6, 3, 1, "", "kUnpremul_AlphaType"], [6, 3, 1, "", "name"], [6, 3, 1, "", "value"]], "skia.ApplyPerspectiveClip": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "kNo"], [7, 3, 1, "", "kYes"], [7, 3, 1, "", "name"], [7, 3, 1, "", "value"]], "skia.ArithmeticImageFilter": [[8, 2, 1, "", "Make"], [8, 2, 1, "", "__init__"]], "skia.AutoCanvasRestore": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "restore"]], "skia.BBHFactory": [[10, 2, 1, "", "__init__"]], "skia.BBoxHierarchy": [[12, 1, 1, "", "Metadata"], [11, 2, 1, "", "__init__"], [11, 2, 1, "", "bytesUsed"], [11, 2, 1, "", "insert"], [11, 2, 1, "", "ref"], [11, 2, 1, "", "search"], [11, 2, 1, "", "unique"], [11, 2, 1, "", "unref"]], "skia.BBoxHierarchy.Metadata": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "isDraw"]], "skia.BackingFit": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "kApprox"], [13, 3, 1, "", "kExact"], [13, 3, 1, "", "name"], [13, 3, 1, "", "value"]], "skia.Bitmap": [[15, 1, 1, "", "AllocFlags"], [14, 2, 1, "", "__init__"], [14, 2, 1, "", "allocN32Pixels"], [14, 2, 1, "", "allocPixels"], [14, 2, 1, "", "allocPixelsFlags"], [14, 2, 1, "", "alphaType"], [14, 2, 1, "", "bounds"], [14, 2, 1, "", "bytesPerPixel"], [14, 2, 1, "", "colorSpace"], [14, 2, 1, "", "colorType"], [14, 2, 1, "", "computeByteSize"], [14, 2, 1, "", "dimensions"], [14, 2, 1, "", "drawsNothing"], [14, 2, 1, "", "empty"], [14, 2, 1, "", "erase"], [14, 2, 1, "", "eraseARGB"], [14, 2, 1, "", "eraseColor"], [14, 2, 1, "", "extractAlpha"], [14, 2, 1, "", "extractSubset"], [14, 2, 1, "", "getAlphaf"], [14, 2, 1, "", "getBounds"], [14, 2, 1, "", "getColor"], [14, 2, 1, "", "getGenerationID"], [14, 2, 1, "", "getPixels"], [14, 2, 1, "", "getSubset"], [14, 2, 1, "", "height"], [14, 2, 1, "", "info"], [14, 2, 1, "", "installPixels"], [14, 2, 1, "", "isImmutable"], [14, 2, 1, "", "isNull"], [14, 2, 1, "", "isOpaque"], [14, 3, 1, "", "kZeroPixels_AllocFlag"], [14, 2, 1, "", "makeShader"], [14, 2, 1, "", "notifyPixelsChanged"], [14, 2, 1, "", "peekPixels"], [14, 2, 1, "", "pixmap"], [14, 2, 1, "", "readPixels"], [14, 2, 1, "", "readyToDraw"], [14, 2, 1, "", "refColorSpace"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "rowBytes"], [14, 2, 1, "", "rowBytesAsPixels"], [14, 2, 1, "", "setAlphaType"], [14, 2, 1, "", "setImmutable"], [14, 2, 1, "", "setInfo"], [14, 2, 1, "", "setPixels"], [14, 2, 1, "", "shiftPerPixel"], [14, 2, 1, "", "swap"], [14, 2, 1, "", "tobytes"], [14, 2, 1, "", "tryAllocN32Pixels"], [14, 2, 1, "", "tryAllocPixels"], [14, 2, 1, "", "tryAllocPixelsFlags"], [14, 2, 1, "", "width"], [14, 2, 1, "", "writePixels"]], "skia.Bitmap.AllocFlags": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "kZeroPixels_AllocFlag"], [15, 3, 1, "", "name"], [15, 3, 1, "", "value"]], "skia.BlendMode": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "kClear"], [16, 3, 1, "", "kColor"], [16, 3, 1, "", "kColorBurn"], [16, 3, 1, "", "kColorDodge"], [16, 3, 1, "", "kDarken"], [16, 3, 1, "", "kDifference"], [16, 3, 1, "", "kDst"], [16, 3, 1, "", "kDstATop"], [16, 3, 1, "", "kDstIn"], [16, 3, 1, "", "kDstOut"], [16, 3, 1, "", "kDstOver"], [16, 3, 1, "", "kExclusion"], [16, 3, 1, "", "kHardLight"], [16, 3, 1, "", "kHue"], [16, 3, 1, "", "kLastCoeffMode"], [16, 3, 1, "", "kLastMode"], [16, 3, 1, "", "kLastSeparableMode"], [16, 3, 1, "", "kLighten"], [16, 3, 1, "", "kLuminosity"], [16, 3, 1, "", "kModulate"], [16, 3, 1, "", "kMultiply"], [16, 3, 1, "", "kOverlay"], [16, 3, 1, "", "kPlus"], [16, 3, 1, "", "kSaturation"], [16, 3, 1, "", "kScreen"], [16, 3, 1, "", "kSoftLight"], [16, 3, 1, "", "kSrc"], [16, 3, 1, "", "kSrcATop"], [16, 3, 1, "", "kSrcIn"], [16, 3, 1, "", "kSrcOut"], [16, 3, 1, "", "kSrcOver"], [16, 3, 1, "", "kXor"], [16, 3, 1, "", "name"], [16, 3, 1, "", "value"]], "skia.BlendModeCoeff": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "kCoeffCount"], [17, 3, 1, "", "kDA"], [17, 3, 1, "", "kDC"], [17, 3, 1, "", "kIDA"], [17, 3, 1, "", "kIDC"], [17, 3, 1, "", "kISA"], [17, 3, 1, "", "kISC"], [17, 3, 1, "", "kOne"], [17, 3, 1, "", "kSA"], [17, 3, 1, "", "kSC"], [17, 3, 1, "", "kZero"], [17, 3, 1, "", "name"], [17, 3, 1, "", "value"]], "skia.BlurImageFilter": [[18, 2, 1, "", "Make"], [19, 1, 1, "", "TileMode"], [18, 2, 1, "", "__init__"], [18, 3, 1, "", "kClampToBlack_TileMode"], [18, 3, 1, "", "kClamp_TileMode"], [18, 3, 1, "", "kLast_TileMode"], [18, 3, 1, "", "kMax_TileMode"], [18, 3, 1, "", "kRepeat_TileMode"]], "skia.BlurImageFilter.TileMode": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "kClampToBlack_TileMode"], [19, 3, 1, "", "kClamp_TileMode"], [19, 3, 1, "", "kLast_TileMode"], [19, 3, 1, "", "kMax_TileMode"], [19, 3, 1, "", "kRepeat_TileMode"], [19, 3, 1, "", "name"], [19, 3, 1, "", "value"]], "skia.BlurMaskFilter": [[20, 2, 1, "", "__init__"]], "skia.BlurStyle": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "kInner_BlurStyle"], [21, 3, 1, "", "kLastEnum_BlurStyle"], [21, 3, 1, "", "kNormal_BlurStyle"], [21, 3, 1, "", "kOuter_BlurStyle"], [21, 3, 1, "", "kSolid_BlurStyle"], [21, 3, 1, "", "name"], [21, 3, 1, "", "value"]], "skia.Budgeted": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "kNo"], [22, 3, 1, "", "kYes"], [22, 3, 1, "", "name"], [22, 3, 1, "", "value"]], "skia.Canvas": [[24, 1, 1, "", "Lattice"], [23, 2, 1, "", "MakeRasterDirect"], [23, 2, 1, "", "MakeRasterDirectN32"], [26, 1, 1, "", "PointMode"], [27, 1, 1, "", "QuadAAFlags"], [28, 1, 1, "", "SaveLayerFlags"], [29, 1, 1, "", "SaveLayerRec"], [30, 1, 1, "", "SrcRectConstraint"], [23, 2, 1, "", "__init__"], [23, 2, 1, "", "accessTopLayerPixels"], [23, 2, 1, "", "androidFramework_setDeviceClipRestriction"], [23, 2, 1, "", "clear"], [23, 2, 1, "", "clipPath"], [23, 2, 1, "", "clipRRect"], [23, 2, 1, "", "clipRect"], [23, 2, 1, "", "clipRegion"], [23, 2, 1, "", "concat"], [23, 2, 1, "", "discard"], [23, 2, 1, "", "drawAnnotation"], [23, 2, 1, "", "drawArc"], [23, 2, 1, "", "drawAtlas"], [23, 2, 1, "", "drawBitmap"], [23, 2, 1, "", "drawBitmapRect"], [23, 2, 1, "", "drawCircle"], [23, 2, 1, "", "drawColor"], [23, 2, 1, "", "drawDRRect"], [23, 2, 1, "", "drawIRect"], [23, 2, 1, "", "drawImage"], [23, 2, 1, "", "drawImageNine"], [23, 2, 1, "", "drawImageRect"], [23, 2, 1, "", "drawLine"], [23, 2, 1, "", "drawOval"], [23, 2, 1, "", "drawPaint"], [23, 2, 1, "", "drawPatch"], [23, 2, 1, "", "drawPath"], [23, 2, 1, "", "drawPicture"], [23, 2, 1, "", "drawPoint"], [23, 2, 1, "", "drawPoints"], [23, 2, 1, "", "drawRRect"], [23, 2, 1, "", "drawRect"], [23, 2, 1, "", "drawRegion"], [23, 2, 1, "", "drawRoundRect"], [23, 2, 1, "", "drawSimpleText"], [23, 2, 1, "", "drawString"], [23, 2, 1, "", "drawTextBlob"], [23, 2, 1, "", "drawVertices"], [23, 2, 1, "", "flush"], [23, 2, 1, "", "getBaseLayerSize"], [23, 2, 1, "", "getDeviceClipBounds"], [23, 2, 1, "", "getLocalClipBounds"], [23, 2, 1, "", "getLocalToDevice"], [23, 2, 1, "", "getProps"], [23, 2, 1, "", "getSaveCount"], [23, 2, 1, "", "getSurface"], [23, 2, 1, "", "getTotalMatrix"], [23, 2, 1, "", "imageInfo"], [23, 2, 1, "", "isClipEmpty"], [23, 2, 1, "", "isClipRect"], [23, 3, 1, "", "kAll_QuadAAFlags"], [23, 3, 1, "", "kBottom_QuadAAFlag"], [23, 3, 1, "", "kF16ColorType"], [23, 3, 1, "", "kFast_SrcRectConstraint"], [23, 3, 1, "", "kInitWithPrevious_SaveLayerFlag"], [23, 3, 1, "", "kLeft_QuadAAFlag"], [23, 3, 1, "", "kLines_PointMode"], [23, 3, 1, "", "kMaskAgainstCoverage_EXPERIMENTAL_DONT_USE_SaveLayerFlag"], [23, 3, 1, "", "kNone_QuadAAFlags"], [23, 3, 1, "", "kPoints_PointMode"], [23, 3, 1, "", "kPolygon_PointMode"], [23, 3, 1, "", "kPreserveLCDText_SaveLayerFlag"], [23, 3, 1, "", "kRight_QuadAAFlag"], [23, 3, 1, "", "kStrict_SrcRectConstraint"], [23, 3, 1, "", "kTop_QuadAAFlag"], [23, 2, 1, "", "makeSurface"], [23, 2, 1, "", "peekPixels"], [23, 2, 1, "", "quickReject"], [23, 2, 1, "", "readPixels"], [23, 2, 1, "", "resetMatrix"], [23, 2, 1, "", "restore"], [23, 2, 1, "", "restoreToCount"], [23, 2, 1, "", "rotate"], [23, 2, 1, "", "save"], [23, 2, 1, "", "saveLayer"], [23, 2, 1, "", "saveLayerAlpha"], [23, 2, 1, "", "scale"], [23, 2, 1, "", "setMatrix"], [23, 2, 1, "", "skew"], [23, 2, 1, "", "toarray"], [23, 2, 1, "", "translate"], [23, 2, 1, "", "writePixels"]], "skia.Canvas.Lattice": [[25, 1, 1, "", "RectType"], [24, 2, 1, "", "__init__"], [24, 3, 1, "", "fBounds"], [24, 3, 1, "", "fColors"], [24, 3, 1, "", "fRectTypes"], [24, 3, 1, "", "fXCount"], [24, 3, 1, "", "fXDivs"], [24, 3, 1, "", "fYCount"], [24, 3, 1, "", "fYDivs"], [24, 3, 1, "", "kDefault"], [24, 3, 1, "", "kFixedColor"], [24, 3, 1, "", "kTransparent"]], "skia.Canvas.Lattice.RectType": [[25, 2, 1, "", "__init__"], [25, 3, 1, "", "kDefault"], [25, 3, 1, "", "kFixedColor"], [25, 3, 1, "", "kTransparent"], [25, 3, 1, "", "name"], [25, 3, 1, "", "value"]], "skia.Canvas.PointMode": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "kLines_PointMode"], [26, 3, 1, "", "kPoints_PointMode"], [26, 3, 1, "", "kPolygon_PointMode"], [26, 3, 1, "", "name"], [26, 3, 1, "", "value"]], "skia.Canvas.QuadAAFlags": [[27, 2, 1, "", "__init__"], [27, 3, 1, "", "kAll_QuadAAFlags"], [27, 3, 1, "", "kBottom_QuadAAFlag"], [27, 3, 1, "", "kLeft_QuadAAFlag"], [27, 3, 1, "", "kNone_QuadAAFlags"], [27, 3, 1, "", "kRight_QuadAAFlag"], [27, 3, 1, "", "kTop_QuadAAFlag"], [27, 3, 1, "", "name"], [27, 3, 1, "", "value"]], "skia.Canvas.SaveLayerFlags": [[28, 2, 1, "", "__init__"], [28, 3, 1, "", "kF16ColorType"], [28, 3, 1, "", "kInitWithPrevious_SaveLayerFlag"], [28, 3, 1, "", "kMaskAgainstCoverage_EXPERIMENTAL_DONT_USE_SaveLayerFlag"], [28, 3, 1, "", "kPreserveLCDText_SaveLayerFlag"], [28, 3, 1, "", "name"], [28, 3, 1, "", "value"]], "skia.Canvas.SaveLayerRec": [[29, 2, 1, "", "__init__"], [29, 3, 1, "", "fBackdrop"], [29, 3, 1, "", "fBounds"], [29, 3, 1, "", "fPaint"], [29, 3, 1, "", "fSaveLayerFlags"]], "skia.Canvas.SrcRectConstraint": [[30, 2, 1, "", "__init__"], [30, 3, 1, "", "kFast_SrcRectConstraint"], [30, 3, 1, "", "kStrict_SrcRectConstraint"], [30, 3, 1, "", "name"], [30, 3, 1, "", "value"]], "skia.ClipOp": [[31, 2, 1, "", "__init__"], [31, 3, 1, "", "kDifference"], [31, 3, 1, "", "kIntersect"], [31, 3, 1, "", "name"], [31, 3, 1, "", "value"]], "skia.Codec": [[33, 1, 1, "", "DisposalMethod"], [34, 1, 1, "", "FrameInfo"], [32, 2, 1, "", "MakeFromData"], [32, 2, 1, "", "MinBufferedBytesNeeded"], [35, 1, 1, "", "Options"], [36, 1, 1, "", "Result"], [32, 2, 1, "", "ResultToString"], [37, 1, 1, "", "ScanlineOrder"], [38, 1, 1, "", "SelectionPolicy"], [39, 1, 1, "", "ZeroInitialized"], [32, 2, 1, "", "__init__"], [32, 2, 1, "", "bounds"], [32, 2, 1, "", "dimensions"], [32, 2, 1, "", "getEncodedFormat"], [32, 2, 1, "", "getFrameCount"], [32, 2, 1, "", "getFrameInfo"], [32, 2, 1, "", "getInfo"], [32, 2, 1, "", "getOrigin"], [32, 2, 1, "", "getPixels"], [32, 2, 1, "", "getRepetitionCount"], [32, 2, 1, "", "getScaledDimensions"], [32, 2, 1, "", "getScanlineOrder"], [32, 2, 1, "", "getScanlines"], [32, 2, 1, "", "getValidSubset"], [32, 2, 1, "", "getYUVAPlanes"], [32, 2, 1, "", "incrementalDecode"], [32, 3, 1, "", "kCouldNotRewind"], [32, 3, 1, "", "kErrorInInput"], [32, 3, 1, "", "kIncompleteInput"], [32, 3, 1, "", "kInternalError"], [32, 3, 1, "", "kInvalidConversion"], [32, 3, 1, "", "kInvalidInput"], [32, 3, 1, "", "kInvalidParameters"], [32, 3, 1, "", "kInvalidScale"], [32, 3, 1, "", "kKeep"], [32, 3, 1, "", "kNoFrame"], [32, 3, 1, "", "kNo_ZeroInitialized"], [32, 3, 1, "", "kPreferAnimation"], [32, 3, 1, "", "kPreferStillImage"], [32, 3, 1, "", "kRepetitionCountInfinite"], [32, 3, 1, "", "kRestoreBGColor"], [32, 3, 1, "", "kRestorePrevious"], [32, 3, 1, "", "kSuccess"], [32, 3, 1, "", "kUnimplemented"], [32, 3, 1, "", "kYes_ZeroInitialized"], [32, 2, 1, "", "nextScanline"], [32, 2, 1, "", "outputScanline"], [32, 2, 1, "", "queryYUVAInfo"], [32, 2, 1, "", "skipScanlines"], [32, 2, 1, "", "startIncrementalDecode"], [32, 2, 1, "", "startScanlineDecode"]], "skia.Codec.DisposalMethod": [[33, 2, 1, "", "__init__"], [33, 3, 1, "", "kKeep"], [33, 3, 1, "", "kRestoreBGColor"], [33, 3, 1, "", "kRestorePrevious"], [33, 3, 1, "", "name"], [33, 3, 1, "", "value"]], "skia.Codec.FrameInfo": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "fAlphaType"], [34, 3, 1, "", "fDisposalMethod"], [34, 3, 1, "", "fDuration"], [34, 3, 1, "", "fFullyReceived"], [34, 3, 1, "", "fRequiredFrame"]], "skia.Codec.Options": [[35, 2, 1, "", "__init__"], [35, 3, 1, "", "fFrameIndex"], [35, 3, 1, "", "fPriorFrame"], [35, 3, 1, "", "fSubset"], [35, 3, 1, "", "fZeroInitialized"]], "skia.Codec.Result": [[36, 2, 1, "", "__init__"], [36, 3, 1, "", "kCouldNotRewind"], [36, 3, 1, "", "kErrorInInput"], [36, 3, 1, "", "kIncompleteInput"], [36, 3, 1, "", "kInternalError"], [36, 3, 1, "", "kInvalidConversion"], [36, 3, 1, "", "kInvalidInput"], [36, 3, 1, "", "kInvalidParameters"], [36, 3, 1, "", "kInvalidScale"], [36, 3, 1, "", "kSuccess"], [36, 3, 1, "", "kUnimplemented"], [36, 3, 1, "", "name"], [36, 3, 1, "", "value"]], "skia.Codec.ScanlineOrder": [[37, 2, 1, "", "__init__"], [37, 3, 1, "", "kKeep"], [37, 3, 1, "", "kRestoreBGColor"], [37, 3, 1, "", "name"], [37, 3, 1, "", "value"]], "skia.Codec.SelectionPolicy": [[38, 2, 1, "", "__init__"], [38, 3, 1, "", "kPreferAnimation"], [38, 3, 1, "", "kPreferStillImage"], [38, 3, 1, "", "name"], [38, 3, 1, "", "value"]], "skia.Codec.ZeroInitialized": [[39, 2, 1, "", "__init__"], [39, 3, 1, "", "kNo_ZeroInitialized"], [39, 3, 1, "", "kYes_ZeroInitialized"], [39, 3, 1, "", "name"], [39, 3, 1, "", "value"]], "skia.Color4f": [[40, 2, 1, "", "FromBytes_RGBA"], [40, 2, 1, "", "FromColor"], [40, 2, 1, "", "__init__"], [40, 3, 1, "", "fA"], [40, 3, 1, "", "fB"], [40, 3, 1, "", "fG"], [40, 3, 1, "", "fR"], [40, 2, 1, "", "fitsInBytes"], [40, 2, 1, "", "isOpaque"], [40, 3, 1, "", "kBlack"], [40, 3, 1, "", "kBlue"], [40, 3, 1, "", "kCyan"], [40, 3, 1, "", "kDkGray"], [40, 3, 1, "", "kGray"], [40, 3, 1, "", "kGreen"], [40, 3, 1, "", "kLtGray"], [40, 3, 1, "", "kMagenta"], [40, 3, 1, "", "kRed"], [40, 3, 1, "", "kTransparent"], [40, 3, 1, "", "kWhite"], [40, 3, 1, "", "kYellow"], [40, 2, 1, "", "makeOpaque"], [40, 2, 1, "", "toBytes_RGBA"], [40, 2, 1, "", "toColor"], [40, 2, 1, "", "vec"]], "skia.ColorChannel": [[41, 2, 1, "", "__init__"], [41, 3, 1, "", "kA"], [41, 3, 1, "", "kB"], [41, 3, 1, "", "kG"], [41, 3, 1, "", "kLastEnum"], [41, 3, 1, "", "kR"], [41, 3, 1, "", "name"], [41, 3, 1, "", "value"]], "skia.ColorChannelFlag": [[42, 2, 1, "", "__init__"], [42, 3, 1, "", "kAlpha_ColorChannelFlag"], [42, 3, 1, "", "kBlue_ColorChannelFlag"], [42, 3, 1, "", "kGray_ColorChannelFlag"], [42, 3, 1, "", "kGreen_ColorChannelFlag"], [42, 3, 1, "", "kRGBA_ColorChannelFlags"], [42, 3, 1, "", "kRGB_ColorChannelFlags"], [42, 3, 1, "", "kRG_ColorChannelFlags"], [42, 3, 1, "", "kRed_ColorChannelFlag"], [42, 3, 1, "", "name"], [42, 3, 1, "", "value"]], "skia.ColorFilter": [[43, 2, 1, "", "Deserialize"], [44, 1, 1, "", "Flags"], [45, 1, 1, "", "Type"], [43, 2, 1, "", "__init__"], [43, 2, 1, "", "asAColorMatrix"], [43, 2, 1, "", "asAColorMode"], [43, 2, 1, "", "asColorMode"], [43, 2, 1, "", "filterColor"], [43, 2, 1, "", "filterColor4f"], [43, 2, 1, "", "getFlags"], [43, 2, 1, "", "getFlattenableType"], [43, 2, 1, "", "getTypeName"], [43, 3, 1, "", "kAlphaUnchanged_Flag"], [43, 3, 1, "", "kColorFilter_Type"], [43, 3, 1, "", "kDrawLooper_Type"], [43, 3, 1, "", "kDrawable_Type"], [43, 3, 1, "", "kImageFilter_Type"], [43, 3, 1, "", "kMaskFilter_Type"], [43, 3, 1, "", "kPathEffect_Type"], [43, 3, 1, "", "kPixelRef_Type"], [43, 3, 1, "", "kShaderBase_Type"], [43, 3, 1, "", "kUnused_Type"], [43, 3, 1, "", "kUnused_Type2"], [43, 3, 1, "", "kUnused_Type3"], [43, 3, 1, "", "kUnused_Type4"], [43, 2, 1, "", "makeComposed"], [43, 2, 1, "", "ref"], [43, 2, 1, "", "serialize"], [43, 2, 1, "", "unique"], [43, 2, 1, "", "unref"]], "skia.ColorFilter.Flags": [[44, 2, 1, "", "__init__"], [44, 3, 1, "", "kAlphaUnchanged_Flag"], [44, 3, 1, "", "name"], [44, 3, 1, "", "value"]], "skia.ColorFilter.Type": [[45, 2, 1, "", "__init__"], [45, 3, 1, "", "kColorFilter_Type"], [45, 3, 1, "", "kDrawLooper_Type"], [45, 3, 1, "", "kDrawable_Type"], [45, 3, 1, "", "kImageFilter_Type"], [45, 3, 1, "", "kMaskFilter_Type"], [45, 3, 1, "", "kPathEffect_Type"], [45, 3, 1, "", "kPixelRef_Type"], [45, 3, 1, "", "kShaderBase_Type"], [45, 3, 1, "", "kUnused_Type"], [45, 3, 1, "", "kUnused_Type2"], [45, 3, 1, "", "kUnused_Type3"], [45, 3, 1, "", "kUnused_Type4"], [45, 3, 1, "", "name"], [45, 3, 1, "", "value"]], "skia.ColorFilterImageFilter": [[46, 2, 1, "", "Make"], [46, 2, 1, "", "__init__"]], "skia.ColorFilters": [[47, 2, 1, "", "Blend"], [47, 2, 1, "", "Compose"], [47, 2, 1, "", "HSLAMatrix"], [47, 2, 1, "", "Lerp"], [47, 2, 1, "", "LinearToSRGBGamma"], [47, 2, 1, "", "Matrix"], [47, 2, 1, "", "SRGBToLinearGamma"], [47, 2, 1, "", "__init__"]], "skia.ColorInfo": [[48, 2, 1, "", "__init__"], [48, 2, 1, "", "alphaType"], [48, 2, 1, "", "bytesPerPixel"], [48, 2, 1, "", "colorSpace"], [48, 2, 1, "", "colorType"], [48, 2, 1, "", "gammaCloseToSRGB"], [48, 2, 1, "", "isOpaque"], [48, 2, 1, "", "makeAlphaType"], [48, 2, 1, "", "makeColorSpace"], [48, 2, 1, "", "makeColorType"], [48, 2, 1, "", "refColorSpace"], [48, 2, 1, "", "shiftPerPixel"]], "skia.ColorMatrix": [[49, 2, 1, "", "__init__"]], "skia.ColorMatrixFilter": [[50, 2, 1, "", "Deserialize"], [51, 1, 1, "", "Flags"], [50, 2, 1, "", "MakeLightingFilter"], [52, 1, 1, "", "Type"], [50, 2, 1, "", "__init__"], [50, 2, 1, "", "asAColorMatrix"], [50, 2, 1, "", "asAColorMode"], [50, 2, 1, "", "asColorMode"], [50, 2, 1, "", "filterColor"], [50, 2, 1, "", "filterColor4f"], [50, 2, 1, "", "getFlags"], [50, 2, 1, "", "getFlattenableType"], [50, 2, 1, "", "getTypeName"], [50, 3, 1, "", "kAlphaUnchanged_Flag"], [50, 3, 1, "", "kColorFilter_Type"], [50, 3, 1, "", "kDrawLooper_Type"], [50, 3, 1, "", "kDrawable_Type"], [50, 3, 1, "", "kImageFilter_Type"], [50, 3, 1, "", "kMaskFilter_Type"], [50, 3, 1, "", "kPathEffect_Type"], [50, 3, 1, "", "kPixelRef_Type"], [50, 3, 1, "", "kShaderBase_Type"], [50, 3, 1, "", "kUnused_Type"], [50, 3, 1, "", "kUnused_Type2"], [50, 3, 1, "", "kUnused_Type3"], [50, 3, 1, "", "kUnused_Type4"], [50, 2, 1, "", "makeComposed"], [50, 2, 1, "", "ref"], [50, 2, 1, "", "serialize"], [50, 2, 1, "", "unique"], [50, 2, 1, "", "unref"]], "skia.ColorMatrixFilter.Flags": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "kAlphaUnchanged_Flag"], [51, 3, 1, "", "name"], [51, 3, 1, "", "value"]], "skia.ColorMatrixFilter.Type": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "kColorFilter_Type"], [52, 3, 1, "", "kDrawLooper_Type"], [52, 3, 1, "", "kDrawable_Type"], [52, 3, 1, "", "kImageFilter_Type"], [52, 3, 1, "", "kMaskFilter_Type"], [52, 3, 1, "", "kPathEffect_Type"], [52, 3, 1, "", "kPixelRef_Type"], [52, 3, 1, "", "kShaderBase_Type"], [52, 3, 1, "", "kUnused_Type"], [52, 3, 1, "", "kUnused_Type2"], [52, 3, 1, "", "kUnused_Type3"], [52, 3, 1, "", "kUnused_Type4"], [52, 3, 1, "", "name"], [52, 3, 1, "", "value"]], "skia.ColorSpace": [[53, 2, 1, "", "Deserialize"], [53, 2, 1, "", "Equals"], [53, 2, 1, "", "Make"], [53, 2, 1, "", "MakeRGB"], [53, 2, 1, "", "MakeSRGB"], [53, 2, 1, "", "MakeSRGBLinear"], [53, 2, 1, "", "__init__"], [53, 2, 1, "", "deref"], [53, 2, 1, "", "gammaCloseToSRGB"], [53, 2, 1, "", "gammaIsLinear"], [53, 2, 1, "", "gamutTransformTo"], [53, 2, 1, "", "hash"], [53, 2, 1, "", "invTransferFn"], [53, 2, 1, "", "isNumericalTransferFn"], [53, 2, 1, "", "isSRGB"], [53, 2, 1, "", "makeColorSpin"], [53, 2, 1, "", "makeLinearGamma"], [53, 2, 1, "", "makeSRGBGamma"], [53, 2, 1, "", "ref"], [53, 2, 1, "", "refCntGreaterThan"], [53, 2, 1, "", "serialize"], [53, 2, 1, "", "toProfile"], [53, 2, 1, "", "toXYZD50"], [53, 2, 1, "", "toXYZD50Hash"], [53, 2, 1, "", "transferFn"], [53, 2, 1, "", "transferFnHash"], [53, 2, 1, "", "unique"], [53, 2, 1, "", "unref"], [53, 2, 1, "", "writeToMemory"]], "skia.ColorType": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "kA16_float_ColorType"], [54, 3, 1, "", "kA16_unorm_ColorType"], [54, 3, 1, "", "kARGB_4444_ColorType"], [54, 3, 1, "", "kAlpha_8_ColorType"], [54, 3, 1, "", "kBGRA_1010102_ColorType"], [54, 3, 1, "", "kBGRA_8888_ColorType"], [54, 3, 1, "", "kBGR_101010x_ColorType"], [54, 3, 1, "", "kGray_8_ColorType"], [54, 3, 1, "", "kN32_ColorType"], [54, 3, 1, "", "kR16G16B16A16_unorm_ColorType"], [54, 3, 1, "", "kR16G16_float_ColorType"], [54, 3, 1, "", "kR16G16_unorm_ColorType"], [54, 3, 1, "", "kR8G8_unorm_ColorType"], [54, 3, 1, "", "kRGBA_1010102_ColorType"], [54, 3, 1, "", "kRGBA_8888_ColorType"], [54, 3, 1, "", "kRGBA_F16Norm_ColorType"], [54, 3, 1, "", "kRGBA_F16_ColorType"], [54, 3, 1, "", "kRGBA_F32_ColorType"], [54, 3, 1, "", "kRGB_101010x_ColorType"], [54, 3, 1, "", "kRGB_565_ColorType"], [54, 3, 1, "", "kRGB_888x_ColorType"], [54, 3, 1, "", "kUnknown_ColorType"], [54, 3, 1, "", "name"], [54, 3, 1, "", "value"]], "skia.ConvergeMode": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "kDifference"], [55, 3, 1, "", "kIntersect"], [55, 3, 1, "", "kLast"], [55, 3, 1, "", "kReverseDifference"], [55, 3, 1, "", "kUnion"], [55, 3, 1, "", "kXor"], [55, 3, 1, "", "name"], [55, 3, 1, "", "value"]], "skia.CornerPathEffect": [[57, 1, 1, "", "DashInfo"], [58, 1, 1, "", "DashType"], [56, 2, 1, "", "Deserialize"], [56, 2, 1, "", "GetFlattenableType"], [56, 2, 1, "", "Make"], [56, 2, 1, "", "MakeCompose"], [56, 2, 1, "", "MakeSum"], [59, 1, 1, "", "PointData"], [56, 2, 1, "", "RegisterFlattenables"], [61, 1, 1, "", "Type"], [56, 2, 1, "", "__init__"], [56, 2, 1, "", "asADash"], [56, 2, 1, "", "asPoints"], [56, 2, 1, "", "computeFastBounds"], [56, 2, 1, "", "filterPath"], [56, 2, 1, "", "getFlattenableType"], [56, 2, 1, "", "getTypeName"], [56, 3, 1, "", "kColorFilter_Type"], [56, 3, 1, "", "kDash_DashType"], [56, 3, 1, "", "kDrawLooper_Type"], [56, 3, 1, "", "kDrawable_Type"], [56, 3, 1, "", "kImageFilter_Type"], [56, 3, 1, "", "kMaskFilter_Type"], [56, 3, 1, "", "kNone_DashType"], [56, 3, 1, "", "kPathEffect_Type"], [56, 3, 1, "", "kPixelRef_Type"], [56, 3, 1, "", "kShaderBase_Type"], [56, 3, 1, "", "kUnused_Type"], [56, 3, 1, "", "kUnused_Type2"], [56, 3, 1, "", "kUnused_Type3"], [56, 3, 1, "", "kUnused_Type4"], [56, 2, 1, "", "ref"], [56, 2, 1, "", "serialize"], [56, 2, 1, "", "unique"], [56, 2, 1, "", "unref"]], "skia.CornerPathEffect.DashInfo": [[57, 2, 1, "", "__init__"], [57, 3, 1, "", "fCount"], [57, 3, 1, "", "fIntervals"], [57, 3, 1, "", "fPhase"]], "skia.CornerPathEffect.DashType": [[58, 2, 1, "", "__init__"], [58, 3, 1, "", "kDash_DashType"], [58, 3, 1, "", "kNone_DashType"], [58, 3, 1, "", "name"], [58, 3, 1, "", "value"]], "skia.CornerPathEffect.PointData": [[60, 1, 1, "", "PointFlags"], [59, 2, 1, "", "__init__"], [59, 3, 1, "", "fClipRect"], [59, 3, 1, "", "fFirst"], [59, 3, 1, "", "fFlags"], [59, 3, 1, "", "fLast"], [59, 3, 1, "", "fNumPoints"], [59, 3, 1, "", "fPath"], [59, 3, 1, "", "fPoints"], [59, 3, 1, "", "fSize"], [59, 3, 1, "", "kCircles_PointFlag"], [59, 3, 1, "", "kUseClip_PointFlag"], [59, 3, 1, "", "kUsePath_PointFlag"]], "skia.CornerPathEffect.PointData.PointFlags": [[60, 2, 1, "", "__init__"], [60, 3, 1, "", "kCircles_PointFlag"], [60, 3, 1, "", "kUseClip_PointFlag"], [60, 3, 1, "", "kUsePath_PointFlag"], [60, 3, 1, "", "name"], [60, 3, 1, "", "value"]], "skia.CornerPathEffect.Type": [[61, 2, 1, "", "__init__"], [61, 3, 1, "", "kColorFilter_Type"], [61, 3, 1, "", "kDrawLooper_Type"], [61, 3, 1, "", "kDrawable_Type"], [61, 3, 1, "", "kImageFilter_Type"], [61, 3, 1, "", "kMaskFilter_Type"], [61, 3, 1, "", "kPathEffect_Type"], [61, 3, 1, "", "kPixelRef_Type"], [61, 3, 1, "", "kShaderBase_Type"], [61, 3, 1, "", "kUnused_Type"], [61, 3, 1, "", "kUnused_Type2"], [61, 3, 1, "", "kUnused_Type3"], [61, 3, 1, "", "kUnused_Type4"], [61, 3, 1, "", "name"], [61, 3, 1, "", "value"]], "skia.DashPathEffect": [[62, 2, 1, "", "Make"], [62, 2, 1, "", "__init__"]], "skia.Data": [[63, 2, 1, "", "MakeEmpty"], [63, 2, 1, "", "MakeFromFileName"], [63, 2, 1, "", "MakeSubset"], [63, 2, 1, "", "MakeUninitialized"], [63, 2, 1, "", "MakeWithCopy"], [63, 2, 1, "", "MakeWithoutCopy"], [63, 2, 1, "", "__init__"], [63, 2, 1, "", "bytes"], [63, 2, 1, "", "copyRange"], [63, 2, 1, "", "data"], [63, 2, 1, "", "deref"], [63, 2, 1, "", "equals"], [63, 2, 1, "", "isEmpty"], [63, 2, 1, "", "ref"], [63, 2, 1, "", "refCntGreaterThan"], [63, 2, 1, "", "size"], [63, 2, 1, "", "unique"], [63, 2, 1, "", "unref"], [63, 2, 1, "", "writable_data"]], "skia.DilateImageFilter": [[64, 2, 1, "", "Make"], [64, 2, 1, "", "__init__"]], "skia.DiscretePathEffect": [[66, 1, 1, "", "DashInfo"], [67, 1, 1, "", "DashType"], [65, 2, 1, "", "Deserialize"], [65, 2, 1, "", "GetFlattenableType"], [65, 2, 1, "", "Make"], [65, 2, 1, "", "MakeCompose"], [65, 2, 1, "", "MakeSum"], [68, 1, 1, "", "PointData"], [65, 2, 1, "", "RegisterFlattenables"], [70, 1, 1, "", "Type"], [65, 2, 1, "", "__init__"], [65, 2, 1, "", "asADash"], [65, 2, 1, "", "asPoints"], [65, 2, 1, "", "computeFastBounds"], [65, 2, 1, "", "filterPath"], [65, 2, 1, "", "getFlattenableType"], [65, 2, 1, "", "getTypeName"], [65, 3, 1, "", "kColorFilter_Type"], [65, 3, 1, "", "kDash_DashType"], [65, 3, 1, "", "kDrawLooper_Type"], [65, 3, 1, "", "kDrawable_Type"], [65, 3, 1, "", "kImageFilter_Type"], [65, 3, 1, "", "kMaskFilter_Type"], [65, 3, 1, "", "kNone_DashType"], [65, 3, 1, "", "kPathEffect_Type"], [65, 3, 1, "", "kPixelRef_Type"], [65, 3, 1, "", "kShaderBase_Type"], [65, 3, 1, "", "kUnused_Type"], [65, 3, 1, "", "kUnused_Type2"], [65, 3, 1, "", "kUnused_Type3"], [65, 3, 1, "", "kUnused_Type4"], [65, 2, 1, "", "ref"], [65, 2, 1, "", "serialize"], [65, 2, 1, "", "unique"], [65, 2, 1, "", "unref"]], "skia.DiscretePathEffect.DashInfo": [[66, 2, 1, "", "__init__"], [66, 3, 1, "", "fCount"], [66, 3, 1, "", "fIntervals"], [66, 3, 1, "", "fPhase"]], "skia.DiscretePathEffect.DashType": [[67, 2, 1, "", "__init__"], [67, 3, 1, "", "kDash_DashType"], [67, 3, 1, "", "kNone_DashType"], [67, 3, 1, "", "name"], [67, 3, 1, "", "value"]], "skia.DiscretePathEffect.PointData": [[69, 1, 1, "", "PointFlags"], [68, 2, 1, "", "__init__"], [68, 3, 1, "", "fClipRect"], [68, 3, 1, "", "fFirst"], [68, 3, 1, "", "fFlags"], [68, 3, 1, "", "fLast"], [68, 3, 1, "", "fNumPoints"], [68, 3, 1, "", "fPath"], [68, 3, 1, "", "fPoints"], [68, 3, 1, "", "fSize"], [68, 3, 1, "", "kCircles_PointFlag"], [68, 3, 1, "", "kUseClip_PointFlag"], [68, 3, 1, "", "kUsePath_PointFlag"]], "skia.DiscretePathEffect.PointData.PointFlags": [[69, 2, 1, "", "__init__"], [69, 3, 1, "", "kCircles_PointFlag"], [69, 3, 1, "", "kUseClip_PointFlag"], [69, 3, 1, "", "kUsePath_PointFlag"], [69, 3, 1, "", "name"], [69, 3, 1, "", "value"]], "skia.DiscretePathEffect.Type": [[70, 2, 1, "", "__init__"], [70, 3, 1, "", "kColorFilter_Type"], [70, 3, 1, "", "kDrawLooper_Type"], [70, 3, 1, "", "kDrawable_Type"], [70, 3, 1, "", "kImageFilter_Type"], [70, 3, 1, "", "kMaskFilter_Type"], [70, 3, 1, "", "kPathEffect_Type"], [70, 3, 1, "", "kPixelRef_Type"], [70, 3, 1, "", "kShaderBase_Type"], [70, 3, 1, "", "kUnused_Type"], [70, 3, 1, "", "kUnused_Type2"], [70, 3, 1, "", "kUnused_Type3"], [70, 3, 1, "", "kUnused_Type4"], [70, 3, 1, "", "name"], [70, 3, 1, "", "value"]], "skia.DisplacementMapEffect": [[72, 1, 1, "", "ChannelSelectorType"], [71, 2, 1, "", "Make"], [71, 2, 1, "", "__init__"], [71, 3, 1, "", "kA_ChannelSelectorType"], [71, 3, 1, "", "kB_ChannelSelectorType"], [71, 3, 1, "", "kG_ChannelSelectorType"], [71, 3, 1, "", "kLast_ChannelSelectorType"], [71, 3, 1, "", "kR_ChannelSelectorType"], [71, 3, 1, "", "kUnknown_ChannelSelectorType"]], "skia.DisplacementMapEffect.ChannelSelectorType": [[72, 2, 1, "", "__init__"], [72, 3, 1, "", "kA_ChannelSelectorType"], [72, 3, 1, "", "kB_ChannelSelectorType"], [72, 3, 1, "", "kG_ChannelSelectorType"], [72, 3, 1, "", "kLast_ChannelSelectorType"], [72, 3, 1, "", "kR_ChannelSelectorType"], [72, 3, 1, "", "kUnknown_ChannelSelectorType"], [72, 3, 1, "", "name"], [72, 3, 1, "", "value"]], "skia.Document": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "abort"], [73, 2, 1, "", "beginPage"], [73, 2, 1, "", "close"], [73, 2, 1, "", "endPage"], [73, 2, 1, "", "page"], [73, 2, 1, "", "ref"], [73, 2, 1, "", "unique"], [73, 2, 1, "", "unref"]], "skia.Drawable": [[74, 2, 1, "", "Deserialize"], [75, 1, 1, "", "Type"], [74, 2, 1, "", "__init__"], [74, 2, 1, "", "draw"], [74, 2, 1, "", "getBounds"], [74, 2, 1, "", "getFlattenableType"], [74, 2, 1, "", "getGenerationID"], [74, 2, 1, "", "getTypeName"], [74, 3, 1, "", "kColorFilter_Type"], [74, 3, 1, "", "kDrawLooper_Type"], [74, 3, 1, "", "kDrawable_Type"], [74, 3, 1, "", "kImageFilter_Type"], [74, 3, 1, "", "kMaskFilter_Type"], [74, 3, 1, "", "kPathEffect_Type"], [74, 3, 1, "", "kPixelRef_Type"], [74, 3, 1, "", "kShaderBase_Type"], [74, 3, 1, "", "kUnused_Type"], [74, 3, 1, "", "kUnused_Type2"], [74, 3, 1, "", "kUnused_Type3"], [74, 3, 1, "", "kUnused_Type4"], [74, 2, 1, "", "newPictureSnapshot"], [74, 2, 1, "", "notifyDrawingChanged"], [74, 2, 1, "", "ref"], [74, 2, 1, "", "serialize"], [74, 2, 1, "", "unique"], [74, 2, 1, "", "unref"]], "skia.Drawable.Type": [[75, 2, 1, "", "__init__"], [75, 3, 1, "", "kColorFilter_Type"], [75, 3, 1, "", "kDrawLooper_Type"], [75, 3, 1, "", "kDrawable_Type"], [75, 3, 1, "", "kImageFilter_Type"], [75, 3, 1, "", "kMaskFilter_Type"], [75, 3, 1, "", "kPathEffect_Type"], [75, 3, 1, "", "kPixelRef_Type"], [75, 3, 1, "", "kShaderBase_Type"], [75, 3, 1, "", "kUnused_Type"], [75, 3, 1, "", "kUnused_Type2"], [75, 3, 1, "", "kUnused_Type3"], [75, 3, 1, "", "kUnused_Type4"], [75, 3, 1, "", "name"], [75, 3, 1, "", "value"]], "skia.DropShadowImageFilter": [[76, 2, 1, "", "Make"], [77, 1, 1, "", "ShadowMode"], [76, 2, 1, "", "__init__"], [76, 3, 1, "", "kDrawShadowAndForeground_ShadowMode"], [76, 3, 1, "", "kDrawShadowOnly_ShadowMode"], [76, 3, 1, "", "kLast_ShadowMode"], [76, 3, 1, "", "kShadowModeCount"]], "skia.DropShadowImageFilter.ShadowMode": [[77, 2, 1, "", "__init__"], [77, 3, 1, "", "kDrawShadowAndForeground_ShadowMode"], [77, 3, 1, "", "kDrawShadowOnly_ShadowMode"], [77, 3, 1, "", "kLast_ShadowMode"], [77, 3, 1, "", "name"], [77, 3, 1, "", "value"]], "skia.DynamicMemoryWStream": [[78, 2, 1, "", "SizeOfPackedUInt"], [78, 2, 1, "", "__init__"], [78, 2, 1, "", "bytesWritten"], [78, 2, 1, "", "copyTo"], [78, 2, 1, "", "copyToAndReset"], [78, 2, 1, "", "detachAsData"], [78, 2, 1, "", "detachAsStream"], [78, 2, 1, "", "flush"], [78, 2, 1, "", "newline"], [78, 2, 1, "", "padToAlign4"], [78, 2, 1, "", "prependToAndReset"], [78, 2, 1, "", "read"], [78, 2, 1, "", "reset"], [78, 2, 1, "", "write"], [78, 2, 1, "", "write16"], [78, 2, 1, "", "write32"], [78, 2, 1, "", "write8"], [78, 2, 1, "", "writeBigDecAsText"], [78, 2, 1, "", "writeBool"], [78, 2, 1, "", "writeDecAsText"], [78, 2, 1, "", "writeHexAsText"], [78, 2, 1, "", "writePackedUInt"], [78, 2, 1, "", "writeScalar"], [78, 2, 1, "", "writeScalarAsText"], [78, 2, 1, "", "writeStream"], [78, 2, 1, "", "writeText"], [78, 2, 1, "", "writeToAndReset"], [78, 2, 1, "", "writeToStream"]], "skia.EncodedImageFormat": [[79, 2, 1, "", "__init__"], [79, 3, 1, "", "kASTC"], [79, 3, 1, "", "kBMP"], [79, 3, 1, "", "kDNG"], [79, 3, 1, "", "kGIF"], [79, 3, 1, "", "kHEIF"], [79, 3, 1, "", "kICO"], [79, 3, 1, "", "kJPEG"], [79, 3, 1, "", "kKTX"], [79, 3, 1, "", "kPKM"], [79, 3, 1, "", "kPNG"], [79, 3, 1, "", "kWBMP"], [79, 3, 1, "", "kWEBP"], [79, 3, 1, "", "name"], [79, 3, 1, "", "value"]], "skia.EncodedOrigin": [[80, 2, 1, "", "__init__"], [80, 3, 1, "", "kBottomLeft_EncodedOrigin"], [80, 3, 1, "", "kBottomRight_EncodedOrigin"], [80, 3, 1, "", "kDefault_EncodedOrigin"], [80, 3, 1, "", "kLast_EncodedOrigin"], [80, 3, 1, "", "kLeftBottom_EncodedOrigin"], [80, 3, 1, "", "kLeftTop_EncodedOrigin"], [80, 3, 1, "", "kRightBottom_EncodedOrigin"], [80, 3, 1, "", "kRightTop_EncodedOrigin"], [80, 3, 1, "", "kTopLeft_EncodedOrigin"], [80, 3, 1, "", "kTopRight_EncodedOrigin"], [80, 3, 1, "", "name"], [80, 3, 1, "", "value"]], "skia.ErodeImageFilter": [[81, 2, 1, "", "Make"], [81, 2, 1, "", "__init__"]], "skia.FILEStream": [[82, 2, 1, "", "Make"], [82, 2, 1, "", "MakeFromFile"], [82, 2, 1, "", "__init__"], [82, 2, 1, "", "close"], [82, 2, 1, "", "duplicate"], [82, 2, 1, "", "fork"], [82, 2, 1, "", "getLength"], [82, 2, 1, "", "getMemoryBase"], [82, 2, 1, "", "getPosition"], [82, 2, 1, "", "hasLength"], [82, 2, 1, "", "hasPosition"], [82, 2, 1, "", "isAtEnd"], [82, 2, 1, "", "isValid"], [82, 2, 1, "", "move"], [82, 2, 1, "", "peek"], [82, 2, 1, "", "read"], [82, 2, 1, "", "readBool"], [82, 2, 1, "", "readPackedUInt"], [82, 2, 1, "", "readS16"], [82, 2, 1, "", "readS32"], [82, 2, 1, "", "readS8"], [82, 2, 1, "", "readScalar"], [82, 2, 1, "", "readU16"], [82, 2, 1, "", "readU32"], [82, 2, 1, "", "readU8"], [82, 2, 1, "", "rewind"], [82, 2, 1, "", "seek"], [82, 2, 1, "", "skip"]], "skia.FILEWStream": [[83, 2, 1, "", "SizeOfPackedUInt"], [83, 2, 1, "", "__init__"], [83, 2, 1, "", "bytesWritten"], [83, 2, 1, "", "flush"], [83, 2, 1, "", "fsync"], [83, 2, 1, "", "isValid"], [83, 2, 1, "", "newline"], [83, 2, 1, "", "write"], [83, 2, 1, "", "write16"], [83, 2, 1, "", "write32"], [83, 2, 1, "", "write8"], [83, 2, 1, "", "writeBigDecAsText"], [83, 2, 1, "", "writeBool"], [83, 2, 1, "", "writeDecAsText"], [83, 2, 1, "", "writeHexAsText"], [83, 2, 1, "", "writePackedUInt"], [83, 2, 1, "", "writeScalar"], [83, 2, 1, "", "writeScalarAsText"], [83, 2, 1, "", "writeStream"], [83, 2, 1, "", "writeText"]], "skia.FilterQuality": [[84, 2, 1, "", "__init__"], [84, 3, 1, "", "kHigh_FilterQuality"], [84, 3, 1, "", "kLast_FilterQuality"], [84, 3, 1, "", "kLow_FilterQuality"], [84, 3, 1, "", "kMedium_FilterQuality"], [84, 3, 1, "", "kNone_FilterQuality"], [84, 3, 1, "", "name"], [84, 3, 1, "", "value"]], "skia.Flattanable": [[85, 2, 1, "", "Deserialize"], [86, 1, 1, "", "Type"], [85, 2, 1, "", "__init__"], [85, 2, 1, "", "getFlattenableType"], [85, 2, 1, "", "getTypeName"], [85, 3, 1, "", "kColorFilter_Type"], [85, 3, 1, "", "kDrawLooper_Type"], [85, 3, 1, "", "kDrawable_Type"], [85, 3, 1, "", "kImageFilter_Type"], [85, 3, 1, "", "kMaskFilter_Type"], [85, 3, 1, "", "kPathEffect_Type"], [85, 3, 1, "", "kPixelRef_Type"], [85, 3, 1, "", "kShaderBase_Type"], [85, 3, 1, "", "kUnused_Type"], [85, 3, 1, "", "kUnused_Type2"], [85, 3, 1, "", "kUnused_Type3"], [85, 3, 1, "", "kUnused_Type4"], [85, 2, 1, "", "ref"], [85, 2, 1, "", "serialize"], [85, 2, 1, "", "unique"], [85, 2, 1, "", "unref"]], "skia.Flattanable.Type": [[86, 2, 1, "", "__init__"], [86, 3, 1, "", "kColorFilter_Type"], [86, 3, 1, "", "kDrawLooper_Type"], [86, 3, 1, "", "kDrawable_Type"], [86, 3, 1, "", "kImageFilter_Type"], [86, 3, 1, "", "kMaskFilter_Type"], [86, 3, 1, "", "kPathEffect_Type"], [86, 3, 1, "", "kPixelRef_Type"], [86, 3, 1, "", "kShaderBase_Type"], [86, 3, 1, "", "kUnused_Type"], [86, 3, 1, "", "kUnused_Type2"], [86, 3, 1, "", "kUnused_Type3"], [86, 3, 1, "", "kUnused_Type4"], [86, 3, 1, "", "name"], [86, 3, 1, "", "value"]], "skia.Font": [[88, 1, 1, "", "Edging"], [87, 2, 1, "", "__init__"], [87, 2, 1, "", "countText"], [87, 2, 1, "", "dump"], [87, 2, 1, "", "getBounds"], [87, 2, 1, "", "getEdging"], [87, 2, 1, "", "getHinting"], [87, 2, 1, "", "getMetrics"], [87, 2, 1, "", "getPath"], [87, 2, 1, "", "getPaths"], [87, 2, 1, "", "getPos"], [87, 2, 1, "", "getScaleX"], [87, 2, 1, "", "getSize"], [87, 2, 1, "", "getSkewX"], [87, 2, 1, "", "getSpacing"], [87, 2, 1, "", "getTypeface"], [87, 2, 1, "", "getTypefaceOrDefault"], [87, 2, 1, "", "getWidths"], [87, 2, 1, "", "getWidthsBounds"], [87, 2, 1, "", "getXPos"], [87, 2, 1, "", "isBaselineSnap"], [87, 2, 1, "", "isEmbeddedBitmaps"], [87, 2, 1, "", "isEmbolden"], [87, 2, 1, "", "isForceAutoHinting"], [87, 2, 1, "", "isLinearMetrics"], [87, 2, 1, "", "isSubpixel"], [87, 3, 1, "", "kAlias"], [87, 3, 1, "", "kAntiAlias"], [87, 3, 1, "", "kSubpixelAntiAlias"], [87, 2, 1, "", "makeWithSize"], [87, 2, 1, "", "measureText"], [87, 2, 1, "", "refTypeface"], [87, 2, 1, "", "refTypefaceOrDefault"], [87, 2, 1, "", "setBaselineSnap"], [87, 2, 1, "", "setEdging"], [87, 2, 1, "", "setEmbeddedBitmaps"], [87, 2, 1, "", "setEmbolden"], [87, 2, 1, "", "setForceAutoHinting"], [87, 2, 1, "", "setHinting"], [87, 2, 1, "", "setLinearMetrics"], [87, 2, 1, "", "setScaleX"], [87, 2, 1, "", "setSize"], [87, 2, 1, "", "setSkewX"], [87, 2, 1, "", "setSubpixel"], [87, 2, 1, "", "setTypeface"], [87, 2, 1, "", "textToGlyphs"], [87, 2, 1, "", "unicharToGlyph"], [87, 2, 1, "", "unicharsToGlyphs"]], "skia.Font.Edging": [[88, 2, 1, "", "__init__"], [88, 3, 1, "", "kAlias"], [88, 3, 1, "", "kAntiAlias"], [88, 3, 1, "", "kSubpixelAntiAlias"], [88, 3, 1, "", "name"], [88, 3, 1, "", "value"]], "skia.FontArguments": [[90, 1, 1, "", "VariationPosition"], [89, 2, 1, "", "__init__"], [89, 2, 1, "", "getCollectionIndex"], [89, 2, 1, "", "getVariationDesignPosition"], [89, 2, 1, "", "setCollectionIndex"], [89, 2, 1, "", "setVariationDesignPosition"]], "skia.FontArguments.VariationPosition": [[91, 1, 1, "", "Coordinate"], [92, 1, 1, "", "Coordinates"], [90, 2, 1, "", "__init__"], [90, 3, 1, "", "coordinateCount"], [90, 3, 1, "", "coordinates"]], "skia.FontArguments.VariationPosition.Coordinate": [[91, 2, 1, "", "__init__"], [91, 3, 1, "", "axis"], [91, 3, 1, "", "value"]], "skia.FontArguments.VariationPosition.Coordinates": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "append"], [92, 2, 1, "", "clear"], [92, 2, 1, "", "extend"], [92, 2, 1, "", "insert"], [92, 2, 1, "", "pop"]], "skia.FontHinting": [[93, 2, 1, "", "__init__"], [93, 3, 1, "", "kFull"], [93, 3, 1, "", "kNone"], [93, 3, 1, "", "kNormal"], [93, 3, 1, "", "kSlight"], [93, 3, 1, "", "name"], [93, 3, 1, "", "value"]], "skia.FontMetrics": [[95, 1, 1, "", "FontMetricsFlags"], [94, 2, 1, "", "__init__"], [94, 3, 1, "", "fAscent"], [94, 3, 1, "", "fAvgCharWidth"], [94, 3, 1, "", "fBottom"], [94, 3, 1, "", "fCapHeight"], [94, 3, 1, "", "fDescent"], [94, 3, 1, "", "fFlags"], [94, 3, 1, "", "fLeading"], [94, 3, 1, "", "fMaxCharWidth"], [94, 3, 1, "", "fStrikeoutPosition"], [94, 3, 1, "", "fStrikeoutThickness"], [94, 3, 1, "", "fTop"], [94, 3, 1, "", "fUnderlinePosition"], [94, 3, 1, "", "fUnderlineThickness"], [94, 3, 1, "", "fXHeight"], [94, 3, 1, "", "fXMax"], [94, 3, 1, "", "fXMin"], [94, 2, 1, "", "hasStrikeoutPosition"], [94, 2, 1, "", "hasStrikeoutThickness"], [94, 2, 1, "", "hasUnderlinePosition"], [94, 2, 1, "", "hasUnderlineThickness"], [94, 3, 1, "", "kStrikeoutPositionIsValid_Flag"], [94, 3, 1, "", "kStrikeoutThicknessIsValid_Flag"], [94, 3, 1, "", "kUnderlinePositionIsValid_Flag"], [94, 3, 1, "", "kUnderlineThicknessIsValid_Flag"]], "skia.FontMetrics.FontMetricsFlags": [[95, 2, 1, "", "__init__"], [95, 3, 1, "", "kStrikeoutPositionIsValid_Flag"], [95, 3, 1, "", "kStrikeoutThicknessIsValid_Flag"], [95, 3, 1, "", "kUnderlinePositionIsValid_Flag"], [95, 3, 1, "", "kUnderlineThicknessIsValid_Flag"], [95, 3, 1, "", "name"], [95, 3, 1, "", "value"]], "skia.FontMgr": [[96, 2, 1, "", "RefDefault"], [96, 2, 1, "", "__init__"], [96, 2, 1, "", "countFamilies"], [96, 2, 1, "", "createStyleSet"], [96, 2, 1, "", "getFamilyName"], [96, 2, 1, "", "legacyMakeTypeface"], [96, 2, 1, "", "makeFromData"], [96, 2, 1, "", "makeFromFile"], [96, 2, 1, "", "matchFamily"], [96, 2, 1, "", "matchFamilyStyle"], [96, 2, 1, "", "matchFamilyStyleCharacter"], [96, 2, 1, "", "ref"], [96, 2, 1, "", "unique"], [96, 2, 1, "", "unref"]], "skia.FontParameters": [[98, 1, 1, "", "Variation"], [97, 2, 1, "", "__init__"]], "skia.FontParameters.Variation": [[99, 1, 1, "", "Axis"], [98, 2, 1, "", "__init__"]], "skia.FontParameters.Variation.Axis": [[99, 2, 1, "", "__init__"], [99, 3, 1, "", "def"], [99, 2, 1, "", "isHidden"], [99, 3, 1, "", "max"], [99, 3, 1, "", "min"], [99, 2, 1, "", "setHidden"], [99, 3, 1, "", "tag"]], "skia.FontStyle": [[100, 2, 1, "", "Bold"], [100, 2, 1, "", "BoldItalic"], [100, 2, 1, "", "Italic"], [100, 2, 1, "", "Normal"], [101, 1, 1, "", "Slant"], [102, 1, 1, "", "Weight"], [103, 1, 1, "", "Width"], [100, 2, 1, "", "__init__"], [100, 3, 1, "", "kBlack_Weight"], [100, 3, 1, "", "kBold_Weight"], [100, 3, 1, "", "kCondensed_Width"], [100, 3, 1, "", "kExpanded_Width"], [100, 3, 1, "", "kExtraBlack_Weight"], [100, 3, 1, "", "kExtraBold_Weight"], [100, 3, 1, "", "kExtraCondensed_Width"], [100, 3, 1, "", "kExtraExpanded_Width"], [100, 3, 1, "", "kExtraLight_Weight"], [100, 3, 1, "", "kInvisible_Weight"], [100, 3, 1, "", "kItalic_Slant"], [100, 3, 1, "", "kLight_Weight"], [100, 3, 1, "", "kMedium_Weight"], [100, 3, 1, "", "kNormal_Weight"], [100, 3, 1, "", "kNormal_Width"], [100, 3, 1, "", "kOblique_Slant"], [100, 3, 1, "", "kSemiBold_Weight"], [100, 3, 1, "", "kSemiCondensed_Width"], [100, 3, 1, "", "kSemiExpanded_Width"], [100, 3, 1, "", "kThin_Weight"], [100, 3, 1, "", "kUltraCondensed_Width"], [100, 3, 1, "", "kUltraExpanded_Width"], [100, 3, 1, "", "kUpright_Slant"], [100, 2, 1, "", "slant"], [100, 2, 1, "", "weight"], [100, 2, 1, "", "width"]], "skia.FontStyle.Slant": [[101, 2, 1, "", "__init__"], [101, 3, 1, "", "kItalic_Slant"], [101, 3, 1, "", "kOblique_Slant"], [101, 3, 1, "", "kUpright_Slant"], [101, 3, 1, "", "name"], [101, 3, 1, "", "value"]], "skia.FontStyle.Weight": [[102, 2, 1, "", "__init__"], [102, 3, 1, "", "kBlack_Weight"], [102, 3, 1, "", "kBold_Weight"], [102, 3, 1, "", "kExtraBlack_Weight"], [102, 3, 1, "", "kExtraBold_Weight"], [102, 3, 1, "", "kExtraLight_Weight"], [102, 3, 1, "", "kInvisible_Weight"], [102, 3, 1, "", "kLight_Weight"], [102, 3, 1, "", "kMedium_Weight"], [102, 3, 1, "", "kNormal_Weight"], [102, 3, 1, "", "kSemiBold_Weight"], [102, 3, 1, "", "kThin_Weight"], [102, 3, 1, "", "name"], [102, 3, 1, "", "value"]], "skia.FontStyle.Width": [[103, 2, 1, "", "__init__"], [103, 3, 1, "", "kCondensed_Width"], [103, 3, 1, "", "kExpanded_Width"], [103, 3, 1, "", "kExtraCondensed_Width"], [103, 3, 1, "", "kExtraExpanded_Width"], [103, 3, 1, "", "kNormal_Width"], [103, 3, 1, "", "kSemiCondensed_Width"], [103, 3, 1, "", "kSemiExpanded_Width"], [103, 3, 1, "", "kUltraCondensed_Width"], [103, 3, 1, "", "kUltraExpanded_Width"], [103, 3, 1, "", "name"], [103, 3, 1, "", "value"]], "skia.FontStyleSet": [[104, 2, 1, "", "CreateEmpty"], [104, 2, 1, "", "__init__"], [104, 2, 1, "", "count"], [104, 2, 1, "", "createTypeface"], [104, 2, 1, "", "getStyle"], [104, 2, 1, "", "matchStyle"], [104, 2, 1, "", "ref"], [104, 2, 1, "", "unique"], [104, 2, 1, "", "unref"]], "skia.GrBackendApi": [[105, 2, 1, "", "__init__"], [105, 3, 1, "", "kDawn"], [105, 3, 1, "", "kDirect3D"], [105, 3, 1, "", "kMetal"], [105, 3, 1, "", "kMock"], [105, 3, 1, "", "kOpenGL"], [105, 3, 1, "", "kOpenGL_GrBackend"], [105, 3, 1, "", "kVulkan"], [105, 3, 1, "", "name"], [105, 3, 1, "", "value"]], "skia.GrBackendFormat": [[106, 2, 1, "", "MakeGL"], [106, 2, 1, "", "MakeMock"], [106, 2, 1, "", "MakeVk"], [106, 2, 1, "", "__init__"], [106, 2, 1, "", "asGLFormat"], [106, 2, 1, "", "asMockColorType"], [106, 2, 1, "", "asMockCompressionType"], [106, 2, 1, "", "asVkFormat"], [106, 2, 1, "", "backend"], [106, 2, 1, "", "channelMask"], [106, 2, 1, "", "getVkYcbcrConversionInfo"], [106, 2, 1, "", "isValid"], [106, 2, 1, "", "makeTexture2D"], [106, 2, 1, "", "textureType"]], "skia.GrBackendRenderTarget": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "backend"], [107, 2, 1, "", "dimensions"], [107, 2, 1, "", "getBackendFormat"], [107, 2, 1, "", "getGLFramebufferInfo"], [107, 2, 1, "", "getMockRenderTargetInfo"], [107, 2, 1, "", "getVkImageInfo"], [107, 2, 1, "", "height"], [107, 2, 1, "", "isFramebufferOnly"], [107, 2, 1, "", "isProtected"], [107, 2, 1, "", "isValid"], [107, 2, 1, "", "sampleCnt"], [107, 2, 1, "", "setVkImageLayout"], [107, 2, 1, "", "stencilBits"], [107, 2, 1, "", "width"]], "skia.GrBackendSemaphore": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "glSync"], [108, 2, 1, "", "initGL"], [108, 2, 1, "", "initVulkan"], [108, 2, 1, "", "isInitialized"], [108, 2, 1, "", "vkSemaphore"]], "skia.GrBackendSurfaceMutableState": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "backend"], [109, 2, 1, "", "isValid"]], "skia.GrBackendTexture": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "backend"], [110, 2, 1, "", "dimensions"], [110, 2, 1, "", "getBackendFormat"], [110, 2, 1, "", "getGLTextureInfo"], [110, 2, 1, "", "getMockTextureInfo"], [110, 2, 1, "", "getVkImageInfo"], [110, 2, 1, "", "glTextureParametersModified"], [110, 2, 1, "", "hasMipmaps"], [110, 2, 1, "", "height"], [110, 2, 1, "", "isProtected"], [110, 2, 1, "", "isSameTexture"], [110, 2, 1, "", "isValid"], [110, 2, 1, "", "setMutableState"], [110, 2, 1, "", "setVkImageLayout"], [110, 2, 1, "", "width"]], "skia.GrColorType": [[111, 2, 1, "", "__init__"], [111, 3, 1, "", "kABGR_4444"], [111, 3, 1, "", "kAlpha_16"], [111, 3, 1, "", "kAlpha_8"], [111, 3, 1, "", "kAlpha_8xxx"], [111, 3, 1, "", "kAlpha_F16"], [111, 3, 1, "", "kAlpha_F32xxx"], [111, 3, 1, "", "kBGRA_8888"], [111, 3, 1, "", "kBGR_565"], [111, 3, 1, "", "kGray_8"], [111, 3, 1, "", "kGray_8xxx"], [111, 3, 1, "", "kGray_F16"], [111, 3, 1, "", "kLast"], [111, 3, 1, "", "kRGBA_1010102"], [111, 3, 1, "", "kRGBA_16161616"], [111, 3, 1, "", "kRGBA_8888"], [111, 3, 1, "", "kRGBA_8888_SRGB"], [111, 3, 1, "", "kRGBA_F16"], [111, 3, 1, "", "kRGBA_F16_Clamped"], [111, 3, 1, "", "kRGBA_F32"], [111, 3, 1, "", "kRGB_888"], [111, 3, 1, "", "kRGB_888x"], [111, 3, 1, "", "kRG_1616"], [111, 3, 1, "", "kRG_88"], [111, 3, 1, "", "kRG_F16"], [111, 3, 1, "", "kR_16"], [111, 3, 1, "", "kR_8"], [111, 3, 1, "", "kR_F16"], [111, 3, 1, "", "kUnknown"], [111, 3, 1, "", "name"], [111, 3, 1, "", "value"]], "skia.GrContext": [[112, 2, 1, "", "ComputeImageSize"], [112, 2, 1, "", "__init__"], [112, 2, 1, "", "abandonContext"], [112, 2, 1, "", "abandoned"], [112, 2, 1, "", "asDirectContext"], [112, 2, 1, "", "backend"], [112, 2, 1, "", "checkAsyncWorkCompletion"], [112, 2, 1, "", "colorTypeSupportedAsImage"], [112, 2, 1, "", "colorTypeSupportedAsSurface"], [112, 2, 1, "", "compressedBackendFormat"], [112, 2, 1, "", "createBackendTexture"], [112, 2, 1, "", "createCompressedBackendTexture"], [112, 2, 1, "", "defaultBackendFormat"], [112, 2, 1, "", "deleteBackendTexture"], [112, 2, 1, "", "flush"], [112, 2, 1, "", "flushAndSubmit"], [112, 2, 1, "", "freeGpuResources"], [112, 2, 1, "", "getResourceCacheLimit"], [112, 2, 1, "", "getResourceCachePurgeableBytes"], [112, 2, 1, "", "getResourceCacheUsage"], [112, 2, 1, "", "maxRenderTargetSize"], [112, 2, 1, "", "maxSurfaceSampleCountForColorType"], [112, 2, 1, "", "maxTextureSize"], [112, 2, 1, "", "oomed"], [112, 2, 1, "", "performDeferredCleanup"], [112, 2, 1, "", "precompileShader"], [112, 2, 1, "", "purgeResourcesNotUsedInMs"], [112, 2, 1, "", "purgeUnlockedResources"], [112, 2, 1, "", "ref"], [112, 2, 1, "", "releaseResourcesAndAbandonContext"], [112, 2, 1, "", "resetContext"], [112, 2, 1, "", "resetGLTextureBindings"], [112, 2, 1, "", "setBackendRenderTargetState"], [112, 2, 1, "", "setBackendTextureState"], [112, 2, 1, "", "setResourceCacheLimit"], [112, 2, 1, "", "storeVkPipelineCacheData"], [112, 2, 1, "", "submit"], [112, 2, 1, "", "supportsDistanceFieldText"], [112, 2, 1, "", "threadSafeProxy"], [112, 2, 1, "", "unique"], [112, 2, 1, "", "unref"], [112, 2, 1, "", "updateBackendTexture"], [112, 2, 1, "", "wait"]], "skia.GrContextOptions": [[113, 2, 1, "", "__init__"]], "skia.GrContext_Base": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "asDirectContext"], [114, 2, 1, "", "backend"], [114, 2, 1, "", "compressedBackendFormat"], [114, 2, 1, "", "defaultBackendFormat"], [114, 2, 1, "", "ref"], [114, 2, 1, "", "threadSafeProxy"], [114, 2, 1, "", "unique"], [114, 2, 1, "", "unref"]], "skia.GrDirectContext": [[115, 2, 1, "", "ComputeImageSize"], [115, 2, 1, "", "MakeGL"], [115, 2, 1, "", "MakeMock"], [115, 2, 1, "", "__init__"], [115, 2, 1, "", "abandonContext"], [115, 2, 1, "", "abandoned"], [115, 2, 1, "", "asDirectContext"], [115, 2, 1, "", "backend"], [115, 2, 1, "", "checkAsyncWorkCompletion"], [115, 2, 1, "", "colorTypeSupportedAsImage"], [115, 2, 1, "", "colorTypeSupportedAsSurface"], [115, 2, 1, "", "compressedBackendFormat"], [115, 2, 1, "", "createBackendTexture"], [115, 2, 1, "", "createCompressedBackendTexture"], [115, 2, 1, "", "defaultBackendFormat"], [115, 2, 1, "", "deleteBackendTexture"], [115, 2, 1, "", "flush"], [115, 2, 1, "", "flushAndSubmit"], [115, 2, 1, "", "freeGpuResources"], [115, 2, 1, "", "getResourceCacheLimit"], [115, 2, 1, "", "getResourceCachePurgeableBytes"], [115, 2, 1, "", "getResourceCacheUsage"], [115, 2, 1, "", "maxRenderTargetSize"], [115, 2, 1, "", "maxSurfaceSampleCountForColorType"], [115, 2, 1, "", "maxTextureSize"], [115, 2, 1, "", "oomed"], [115, 2, 1, "", "performDeferredCleanup"], [115, 2, 1, "", "precompileShader"], [115, 2, 1, "", "purgeResourcesNotUsedInMs"], [115, 2, 1, "", "purgeUnlockedResources"], [115, 2, 1, "", "ref"], [115, 2, 1, "", "releaseResourcesAndAbandonContext"], [115, 2, 1, "", "resetContext"], [115, 2, 1, "", "resetGLTextureBindings"], [115, 2, 1, "", "setBackendRenderTargetState"], [115, 2, 1, "", "setBackendTextureState"], [115, 2, 1, "", "setResourceCacheLimit"], [115, 2, 1, "", "storeVkPipelineCacheData"], [115, 2, 1, "", "submit"], [115, 2, 1, "", "supportsDistanceFieldText"], [115, 2, 1, "", "threadSafeProxy"], [115, 2, 1, "", "unique"], [115, 2, 1, "", "unref"], [115, 2, 1, "", "updateBackendTexture"], [115, 2, 1, "", "wait"]], "skia.GrFlushInfo": [[116, 2, 1, "", "__init__"], [116, 3, 1, "", "fNumSemaphores"], [116, 3, 1, "", "semaphores"]], "skia.GrGLBackendState": [[117, 2, 1, "", "__init__"], [117, 3, 1, "", "kALL_GrGLBackendState"], [117, 3, 1, "", "kBlend_GrGLBackendState"], [117, 3, 1, "", "kFixedFunction_GrGLBackendState"], [117, 3, 1, "", "kMSAAEnable_GrGLBackendState"], [117, 3, 1, "", "kMisc_GrGLBackendState"], [117, 3, 1, "", "kPathRendering_GrGLBackendState"], [117, 3, 1, "", "kPixelStore_GrGLBackendState"], [117, 3, 1, "", "kProgram_GrGLBackendState"], [117, 3, 1, "", "kRenderTarget_GrGLBackendState"], [117, 3, 1, "", "kStencil_GrGLBackendState"], [117, 3, 1, "", "kTextureBinding_GrGLBackendState"], [117, 3, 1, "", "kVertex_GrGLBackendState"], [117, 3, 1, "", "kView_GrGLBackendState"], [117, 3, 1, "", "name"], [117, 3, 1, "", "value"]], "skia.GrGLFormat": [[118, 2, 1, "", "__init__"], [118, 3, 1, "", "kALPHA8"], [118, 3, 1, "", "kBGRA8"], [118, 3, 1, "", "kCOMPRESSED_ETC1_RGB8"], [118, 3, 1, "", "kCOMPRESSED_RGB8_BC1"], [118, 3, 1, "", "kCOMPRESSED_RGB8_ETC2"], [118, 3, 1, "", "kCOMPRESSED_RGBA8_BC1"], [118, 3, 1, "", "kLUMINANCE16F"], [118, 3, 1, "", "kLUMINANCE8"], [118, 3, 1, "", "kLast"], [118, 3, 1, "", "kR16"], [118, 3, 1, "", "kR16F"], [118, 3, 1, "", "kR8"], [118, 3, 1, "", "kRG16"], [118, 3, 1, "", "kRG16F"], [118, 3, 1, "", "kRG8"], [118, 3, 1, "", "kRGB10_A2"], [118, 3, 1, "", "kRGB565"], [118, 3, 1, "", "kRGB8"], [118, 3, 1, "", "kRGBA16"], [118, 3, 1, "", "kRGBA16F"], [118, 3, 1, "", "kRGBA4"], [118, 3, 1, "", "kRGBA8"], [118, 3, 1, "", "kSRGB8_ALPHA8"], [118, 3, 1, "", "kUnknown"], [118, 3, 1, "", "name"], [118, 3, 1, "", "value"]], "skia.GrGLFramebufferInfo": [[119, 2, 1, "", "__init__"], [119, 3, 1, "", "fFBOID"], [119, 3, 1, "", "fFormat"]], "skia.GrGLInterface": [[120, 2, 1, "", "__init__"], [120, 2, 1, "", "ref"], [120, 2, 1, "", "unique"], [120, 2, 1, "", "unref"]], "skia.GrGLTextureInfo": [[121, 2, 1, "", "__init__"], [121, 3, 1, "", "fFormat"], [121, 3, 1, "", "fID"], [121, 3, 1, "", "fTarget"]], "skia.GrImageContext": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "asDirectContext"], [122, 2, 1, "", "backend"], [122, 2, 1, "", "compressedBackendFormat"], [122, 2, 1, "", "defaultBackendFormat"], [122, 2, 1, "", "ref"], [122, 2, 1, "", "threadSafeProxy"], [122, 2, 1, "", "unique"], [122, 2, 1, "", "unref"]], "skia.GrMipmapped": [[123, 2, 1, "", "__init__"], [123, 3, 1, "", "kNo"], [123, 3, 1, "", "kYes"], [123, 3, 1, "", "name"], [123, 3, 1, "", "value"]], "skia.GrMockOptions": [[124, 2, 1, "", "__init__"]], "skia.GrMockRenderTargetInfo": [[125, 2, 1, "", "__init__"], [125, 2, 1, "", "colorType"], [125, 2, 1, "", "getBackendFormat"]], "skia.GrMockTextureInfo": [[126, 2, 1, "", "__init__"], [126, 2, 1, "", "colorType"], [126, 2, 1, "", "compressionType"], [126, 2, 1, "", "getBackendFormat"], [126, 2, 1, "", "id"]], "skia.GrProtected": [[127, 2, 1, "", "__init__"], [127, 3, 1, "", "kNo"], [127, 3, 1, "", "kYes"], [127, 3, 1, "", "name"], [127, 3, 1, "", "value"]], "skia.GrRecordingContext": [[128, 2, 1, "", "__init__"], [128, 2, 1, "", "abandoned"], [128, 2, 1, "", "asDirectContext"], [128, 2, 1, "", "backend"], [128, 2, 1, "", "colorTypeSupportedAsImage"], [128, 2, 1, "", "colorTypeSupportedAsSurface"], [128, 2, 1, "", "compressedBackendFormat"], [128, 2, 1, "", "defaultBackendFormat"], [128, 2, 1, "", "maxRenderTargetSize"], [128, 2, 1, "", "maxSurfaceSampleCountForColorType"], [128, 2, 1, "", "maxTextureSize"], [128, 2, 1, "", "ref"], [128, 2, 1, "", "threadSafeProxy"], [128, 2, 1, "", "unique"], [128, 2, 1, "", "unref"]], "skia.GrRenderable": [[129, 2, 1, "", "__init__"], [129, 3, 1, "", "kNo"], [129, 3, 1, "", "kYes"], [129, 3, 1, "", "name"], [129, 3, 1, "", "value"]], "skia.GrSemaphoresSubmitted": [[130, 2, 1, "", "__init__"], [130, 3, 1, "", "kNo"], [130, 3, 1, "", "kYes"], [130, 3, 1, "", "name"], [130, 3, 1, "", "value"]], "skia.GrSurfaceOrigin": [[131, 2, 1, "", "__init__"], [131, 3, 1, "", "kBottomLeft_GrSurfaceOrigin"], [131, 3, 1, "", "kTopLeft_GrSurfaceOrigin"], [131, 3, 1, "", "name"], [131, 3, 1, "", "value"]], "skia.GrTextureType": [[132, 2, 1, "", "__init__"], [132, 3, 1, "", "k2D"], [132, 3, 1, "", "kExternal"], [132, 3, 1, "", "kNone"], [132, 3, 1, "", "kRectangle"], [132, 3, 1, "", "name"], [132, 3, 1, "", "value"]], "skia.GrVkAlloc": [[133, 2, 1, "", "__init__"]], "skia.GrVkBackendContext": [[134, 2, 1, "", "__init__"]], "skia.GrVkDrawableInfo": [[135, 2, 1, "", "__init__"]], "skia.GrVkExtensionFlags": [[136, 2, 1, "", "__init__"], [136, 3, 1, "", "kEXT_debug_report_GrVkExtensionFlag"], [136, 3, 1, "", "kKHR_android_surface_GrVkExtensionFlag"], [136, 3, 1, "", "kKHR_surface_GrVkExtensionFlag"], [136, 3, 1, "", "kKHR_swapchain_GrVkExtensionFlag"], [136, 3, 1, "", "kKHR_win32_surface_GrVkExtensionFlag"], [136, 3, 1, "", "kKHR_xcb_surface_GrVkExtensionFlag"], [136, 3, 1, "", "kNV_glsl_shader_GrVkExtensionFlag"], [136, 3, 1, "", "name"], [136, 3, 1, "", "value"]], "skia.GrVkFeatureFlags": [[137, 2, 1, "", "__init__"], [137, 3, 1, "", "kDualSrcBlend_GrVkFeatureFlag"], [137, 3, 1, "", "kGeometryShader_GrVkFeatureFlag"], [137, 3, 1, "", "kSampleRateShading_GrVkFeatureFlag"], [137, 3, 1, "", "name"], [137, 3, 1, "", "value"]], "skia.GrVkImageInfo": [[138, 2, 1, "", "__init__"], [138, 3, 1, "", "fAlloc"], [138, 3, 1, "", "fCurrentQueueFamily"], [138, 3, 1, "", "fLevelCount"], [138, 3, 1, "", "fProtected"], [138, 3, 1, "", "fSharingMode"], [138, 3, 1, "", "fYcbcrConversionInfo"]], "skia.GrVkYcbcrConversionInfo": [[139, 2, 1, "", "__init__"]], "skia.GradientShader": [[141, 1, 1, "", "Flags"], [140, 2, 1, "", "MakeLinear"], [140, 2, 1, "", "MakeRadial"], [140, 2, 1, "", "MakeSweep"], [140, 2, 1, "", "MakeTwoPointConical"], [140, 2, 1, "", "__init__"], [140, 3, 1, "", "kInterpolateColorsInPremul_Flag"]], "skia.GradientShader.Flags": [[141, 2, 1, "", "__init__"], [141, 3, 1, "", "kInterpolateColorsInPremul_Flag"], [141, 3, 1, "", "name"], [141, 3, 1, "", "value"]], "skia.HighContrastConfig": [[143, 1, 1, "", "InvertStyle"], [142, 2, 1, "", "__init__"], [142, 3, 1, "", "fContrast"], [142, 3, 1, "", "fGrayscale"], [142, 3, 1, "", "fInvertStyle"], [142, 2, 1, "", "isValid"], [142, 3, 1, "", "kInvertBrightness"], [142, 3, 1, "", "kInvertLightness"], [142, 3, 1, "", "kLast"], [142, 3, 1, "", "kNoInvert"]], "skia.HighContrastConfig.InvertStyle": [[143, 2, 1, "", "__init__"], [143, 3, 1, "", "kInvertBrightness"], [143, 3, 1, "", "kInvertLightness"], [143, 3, 1, "", "kLast"], [143, 3, 1, "", "kNoInvert"], [143, 3, 1, "", "name"], [143, 3, 1, "", "value"]], "skia.HighContrastFilter": [[144, 2, 1, "", "Make"], [144, 2, 1, "", "__init__"]], "skia.IPoint": [[145, 2, 1, "", "Make"], [145, 2, 1, "", "__init__"], [145, 2, 1, "", "equals"], [145, 3, 1, "", "fX"], [145, 3, 1, "", "fY"], [145, 2, 1, "", "isZero"], [145, 2, 1, "", "set"], [145, 2, 1, "", "x"], [145, 2, 1, "", "y"]], "skia.IRect": [[146, 2, 1, "", "Intersects"], [146, 2, 1, "", "MakeEmpty"], [146, 2, 1, "", "MakeLTRB"], [146, 2, 1, "", "MakeSize"], [146, 2, 1, "", "MakeWH"], [146, 2, 1, "", "MakeXYWH"], [146, 2, 1, "", "__init__"], [146, 2, 1, "", "adjust"], [146, 2, 1, "", "bottom"], [146, 2, 1, "", "contains"], [146, 2, 1, "", "containsNoEmptyCheck"], [146, 3, 1, "", "fBottom"], [146, 3, 1, "", "fLeft"], [146, 3, 1, "", "fRight"], [146, 3, 1, "", "fTop"], [146, 2, 1, "", "height"], [146, 2, 1, "", "height64"], [146, 2, 1, "", "inset"], [146, 2, 1, "", "intersect"], [146, 2, 1, "", "isEmpty"], [146, 2, 1, "", "isEmpty64"], [146, 2, 1, "", "join"], [146, 2, 1, "", "left"], [146, 2, 1, "", "makeInset"], [146, 2, 1, "", "makeOffset"], [146, 2, 1, "", "makeOutset"], [146, 2, 1, "", "makeSorted"], [146, 2, 1, "", "offset"], [146, 2, 1, "", "offsetTo"], [146, 2, 1, "", "outset"], [146, 2, 1, "", "right"], [146, 2, 1, "", "setEmpty"], [146, 2, 1, "", "setLTRB"], [146, 2, 1, "", "setWH"], [146, 2, 1, "", "setXYWH"], [146, 2, 1, "", "size"], [146, 2, 1, "", "sort"], [146, 2, 1, "", "top"], [146, 2, 1, "", "topLeft"], [146, 2, 1, "", "width"], [146, 2, 1, "", "width64"], [146, 2, 1, "", "x"], [146, 2, 1, "", "y"]], "skia.ISize": [[147, 2, 1, "", "Make"], [147, 2, 1, "", "MakeEmpty"], [147, 2, 1, "", "__init__"], [147, 2, 1, "", "area"], [147, 2, 1, "", "equals"], [147, 3, 1, "", "fHeight"], [147, 3, 1, "", "fWidth"], [147, 2, 1, "", "height"], [147, 2, 1, "", "isEmpty"], [147, 2, 1, "", "isZero"], [147, 2, 1, "", "set"], [147, 2, 1, "", "setEmpty"], [147, 2, 1, "", "width"]], "skia.Image": [[149, 1, 1, "", "BitDepth"], [150, 1, 1, "", "CachingHint"], [151, 1, 1, "", "CompressionType"], [152, 1, 1, "", "LegacyBitmapMode"], [148, 2, 1, "", "MakeBackendTextureFromImage"], [148, 2, 1, "", "MakeCrossContextFromPixmap"], [148, 2, 1, "", "MakeFromAdoptedTexture"], [148, 2, 1, "", "MakeFromBitmap"], [148, 2, 1, "", "MakeFromCompressedTexture"], [148, 2, 1, "", "MakeFromEncoded"], [148, 2, 1, "", "MakeFromNV12TexturesCopy"], [148, 2, 1, "", "MakeFromNV12TexturesCopyWithExternalBackend"], [148, 2, 1, "", "MakeFromPicture"], [148, 2, 1, "", "MakeFromRaster"], [148, 2, 1, "", "MakeFromTexture"], [148, 2, 1, "", "MakeFromYUVAPixmaps"], [148, 2, 1, "", "MakeFromYUVATextures"], [148, 2, 1, "", "MakeFromYUVATexturesCopy"], [148, 2, 1, "", "MakeFromYUVATexturesCopyWithExternalBackend"], [148, 2, 1, "", "MakeRasterCopy"], [148, 2, 1, "", "MakeRasterData"], [148, 2, 1, "", "MakeRasterFromCompressed"], [148, 2, 1, "", "MakeTextureFromCompressed"], [148, 2, 1, "", "__init__"], [148, 2, 1, "", "alphaType"], [148, 2, 1, "", "asLegacyBitmap"], [148, 2, 1, "", "bitmap"], [148, 2, 1, "", "bounds"], [148, 2, 1, "", "colorSpace"], [148, 2, 1, "", "colorType"], [148, 2, 1, "", "convert"], [148, 2, 1, "", "dimensions"], [148, 2, 1, "", "encodeToData"], [148, 2, 1, "", "flush"], [148, 2, 1, "", "flushAndSubmit"], [148, 2, 1, "", "fromarray"], [148, 2, 1, "", "frombytes"], [148, 2, 1, "", "getBackendTexture"], [148, 2, 1, "", "hasMipmaps"], [148, 2, 1, "", "height"], [148, 2, 1, "", "imageInfo"], [148, 2, 1, "", "isAlphaOnly"], [148, 2, 1, "", "isLazyGenerated"], [148, 2, 1, "", "isOpaque"], [148, 2, 1, "", "isTextureBacked"], [148, 2, 1, "", "isValid"], [148, 3, 1, "", "kAllow_CachingHint"], [148, 3, 1, "", "kBC1_RGB8_UNORM"], [148, 3, 1, "", "kBC1_RGBA8_UNORM"], [148, 3, 1, "", "kDisallow_CachingHint"], [148, 3, 1, "", "kETC2_RGB8_UNORM"], [148, 3, 1, "", "kF16"], [148, 3, 1, "", "kLast"], [148, 3, 1, "", "kNone"], [148, 3, 1, "", "kRO_LegacyBitmapMode"], [148, 3, 1, "", "kU8"], [148, 2, 1, "", "makeColorSpace"], [148, 2, 1, "", "makeColorTypeAndColorSpace"], [148, 2, 1, "", "makeNonTextureImage"], [148, 2, 1, "", "makeRasterImage"], [148, 2, 1, "", "makeShader"], [148, 2, 1, "", "makeSubset"], [148, 2, 1, "", "makeTextureImage"], [148, 2, 1, "", "makeWithFilter"], [148, 2, 1, "", "open"], [148, 2, 1, "", "peekPixels"], [148, 2, 1, "", "readPixels"], [148, 2, 1, "", "ref"], [148, 2, 1, "", "refColorSpace"], [148, 2, 1, "", "refEncodedData"], [148, 2, 1, "", "reinterpretColorSpace"], [148, 2, 1, "", "resize"], [148, 2, 1, "", "save"], [148, 2, 1, "", "scalePixels"], [148, 2, 1, "", "toarray"], [148, 2, 1, "", "tobytes"], [148, 2, 1, "", "unique"], [148, 2, 1, "", "uniqueID"], [148, 2, 1, "", "unref"], [148, 2, 1, "", "width"], [148, 2, 1, "", "withDefaultMipmaps"]], "skia.Image.BitDepth": [[149, 2, 1, "", "__init__"], [149, 3, 1, "", "kF16"], [149, 3, 1, "", "kU8"], [149, 3, 1, "", "name"], [149, 3, 1, "", "value"]], "skia.Image.CachingHint": [[150, 2, 1, "", "__init__"], [150, 3, 1, "", "kAllow_CachingHint"], [150, 3, 1, "", "kDisallow_CachingHint"], [150, 3, 1, "", "name"], [150, 3, 1, "", "value"]], "skia.Image.CompressionType": [[151, 2, 1, "", "__init__"], [151, 3, 1, "", "kBC1_RGB8_UNORM"], [151, 3, 1, "", "kBC1_RGBA8_UNORM"], [151, 3, 1, "", "kETC2_RGB8_UNORM"], [151, 3, 1, "", "kLast"], [151, 3, 1, "", "kNone"], [151, 3, 1, "", "name"], [151, 3, 1, "", "value"]], "skia.Image.LegacyBitmapMode": [[152, 2, 1, "", "__init__"], [152, 3, 1, "", "kRO_LegacyBitmapMode"], [152, 3, 1, "", "name"], [152, 3, 1, "", "value"]], "skia.ImageFilter": [[154, 1, 1, "", "CropRect"], [153, 2, 1, "", "Deserialize"], [153, 2, 1, "", "MakeMatrixFilter"], [156, 1, 1, "", "MapDirection"], [157, 1, 1, "", "Type"], [153, 2, 1, "", "__init__"], [153, 2, 1, "", "asAColorFilter"], [153, 2, 1, "", "asColorFilter"], [153, 2, 1, "", "canComputeFastBounds"], [153, 2, 1, "", "computeFastBounds"], [153, 2, 1, "", "countInputs"], [153, 2, 1, "", "filterBounds"], [153, 2, 1, "", "getFlattenableType"], [153, 2, 1, "", "getInput"], [153, 2, 1, "", "getTypeName"], [153, 2, 1, "", "isColorFilterNode"], [153, 3, 1, "", "kColorFilter_Type"], [153, 3, 1, "", "kDrawLooper_Type"], [153, 3, 1, "", "kDrawable_Type"], [153, 3, 1, "", "kForward_MapDirection"], [153, 3, 1, "", "kImageFilter_Type"], [153, 3, 1, "", "kMaskFilter_Type"], [153, 3, 1, "", "kPathEffect_Type"], [153, 3, 1, "", "kPixelRef_Type"], [153, 3, 1, "", "kReverse_MapDirection"], [153, 3, 1, "", "kShaderBase_Type"], [153, 3, 1, "", "kUnused_Type"], [153, 3, 1, "", "kUnused_Type2"], [153, 3, 1, "", "kUnused_Type3"], [153, 3, 1, "", "kUnused_Type4"], [153, 2, 1, "", "makeWithLocalMatrix"], [153, 2, 1, "", "ref"], [153, 2, 1, "", "serialize"], [153, 2, 1, "", "unique"], [153, 2, 1, "", "unref"]], "skia.ImageFilter.CropRect": [[155, 1, 1, "", "CropEdge"], [154, 2, 1, "", "__init__"], [154, 2, 1, "", "applyTo"], [154, 2, 1, "", "flags"], [154, 3, 1, "", "kHasAll_CropEdge"], [154, 3, 1, "", "kHasHeight_CropEdge"], [154, 3, 1, "", "kHasLeft_CropEdge"], [154, 3, 1, "", "kHasTop_CropEdge"], [154, 3, 1, "", "kHasWidth_CropEdge"], [154, 2, 1, "", "rect"]], "skia.ImageFilter.CropRect.CropEdge": [[155, 2, 1, "", "__init__"], [155, 3, 1, "", "kHasAll_CropEdge"], [155, 3, 1, "", "kHasHeight_CropEdge"], [155, 3, 1, "", "kHasLeft_CropEdge"], [155, 3, 1, "", "kHasTop_CropEdge"], [155, 3, 1, "", "kHasWidth_CropEdge"], [155, 3, 1, "", "name"], [155, 3, 1, "", "value"]], "skia.ImageFilter.MapDirection": [[156, 2, 1, "", "__init__"], [156, 3, 1, "", "kForward_MapDirection"], [156, 3, 1, "", "kReverse_MapDirection"], [156, 3, 1, "", "name"], [156, 3, 1, "", "value"]], "skia.ImageFilter.Type": [[157, 2, 1, "", "__init__"], [157, 3, 1, "", "kColorFilter_Type"], [157, 3, 1, "", "kDrawLooper_Type"], [157, 3, 1, "", "kDrawable_Type"], [157, 3, 1, "", "kImageFilter_Type"], [157, 3, 1, "", "kMaskFilter_Type"], [157, 3, 1, "", "kPathEffect_Type"], [157, 3, 1, "", "kPixelRef_Type"], [157, 3, 1, "", "kShaderBase_Type"], [157, 3, 1, "", "kUnused_Type"], [157, 3, 1, "", "kUnused_Type2"], [157, 3, 1, "", "kUnused_Type3"], [157, 3, 1, "", "kUnused_Type4"], [157, 3, 1, "", "name"], [157, 3, 1, "", "value"]], "skia.ImageFilters": [[158, 2, 1, "", "AlphaThreshold"], [158, 2, 1, "", "Arithmetic"], [158, 2, 1, "", "Blur"], [158, 2, 1, "", "ColorFilter"], [158, 2, 1, "", "Compose"], [158, 2, 1, "", "Dilate"], [158, 2, 1, "", "DisplacementMap"], [158, 2, 1, "", "DistantLitDiffuse"], [158, 2, 1, "", "DistantLitSpecular"], [158, 2, 1, "", "DropShadow"], [158, 2, 1, "", "DropShadowOnly"], [158, 2, 1, "", "Erode"], [158, 2, 1, "", "Image"], [158, 2, 1, "", "Magnifier"], [158, 2, 1, "", "MatrixConvolution"], [158, 2, 1, "", "MatrixTransform"], [158, 2, 1, "", "Merge"], [158, 2, 1, "", "Offset"], [158, 2, 1, "", "Paint"], [158, 2, 1, "", "Picture"], [158, 2, 1, "", "PointLitDiffuse"], [158, 2, 1, "", "PointLitSpecular"], [158, 2, 1, "", "SpotLitDiffuse"], [158, 2, 1, "", "SpotLitSpecular"], [158, 2, 1, "", "Tile"], [158, 2, 1, "", "Xfermode"], [158, 2, 1, "", "__init__"]], "skia.ImageInfo": [[159, 2, 1, "", "ByteSizeOverflowed"], [159, 2, 1, "", "Make"], [159, 2, 1, "", "MakeA8"], [159, 2, 1, "", "MakeN32"], [159, 2, 1, "", "MakeN32Premul"], [159, 2, 1, "", "MakeS32"], [159, 2, 1, "", "MakeUnknown"], [159, 2, 1, "", "__init__"], [159, 2, 1, "", "alphaType"], [159, 2, 1, "", "bounds"], [159, 2, 1, "", "bytesPerPixel"], [159, 2, 1, "", "colorInfo"], [159, 2, 1, "", "colorSpace"], [159, 2, 1, "", "colorType"], [159, 2, 1, "", "computeByteSize"], [159, 2, 1, "", "computeMinByteSize"], [159, 2, 1, "", "computeOffset"], [159, 2, 1, "", "dimensions"], [159, 2, 1, "", "gammaCloseToSRGB"], [159, 2, 1, "", "height"], [159, 2, 1, "", "isEmpty"], [159, 2, 1, "", "isOpaque"], [159, 2, 1, "", "makeAlphaType"], [159, 2, 1, "", "makeColorSpace"], [159, 2, 1, "", "makeColorType"], [159, 2, 1, "", "makeDimensions"], [159, 2, 1, "", "makeWH"], [159, 2, 1, "", "minRowBytes"], [159, 2, 1, "", "minRowBytes64"], [159, 2, 1, "", "refColorSpace"], [159, 2, 1, "", "reset"], [159, 2, 1, "", "shiftPerPixel"], [159, 2, 1, "", "validRowBytes"], [159, 2, 1, "", "width"]], "skia.LightingImageFilter": [[160, 2, 1, "", "MakeDistantLitDiffuse"], [160, 2, 1, "", "MakeDistantLitSpecular"], [160, 2, 1, "", "MakePointLitDiffuse"], [160, 2, 1, "", "MakePointLitSpecular"], [160, 2, 1, "", "MakeSpotLitDiffuse"], [160, 2, 1, "", "MakeSpotLitSpecular"], [160, 2, 1, "", "__init__"]], "skia.Line2DPathEffect": [[162, 1, 1, "", "DashInfo"], [163, 1, 1, "", "DashType"], [161, 2, 1, "", "Deserialize"], [161, 2, 1, "", "GetFlattenableType"], [161, 2, 1, "", "Make"], [161, 2, 1, "", "MakeCompose"], [161, 2, 1, "", "MakeSum"], [164, 1, 1, "", "PointData"], [161, 2, 1, "", "RegisterFlattenables"], [166, 1, 1, "", "Type"], [161, 2, 1, "", "__init__"], [161, 2, 1, "", "asADash"], [161, 2, 1, "", "asPoints"], [161, 2, 1, "", "computeFastBounds"], [161, 2, 1, "", "filterPath"], [161, 2, 1, "", "getFlattenableType"], [161, 2, 1, "", "getTypeName"], [161, 3, 1, "", "kColorFilter_Type"], [161, 3, 1, "", "kDash_DashType"], [161, 3, 1, "", "kDrawLooper_Type"], [161, 3, 1, "", "kDrawable_Type"], [161, 3, 1, "", "kImageFilter_Type"], [161, 3, 1, "", "kMaskFilter_Type"], [161, 3, 1, "", "kNone_DashType"], [161, 3, 1, "", "kPathEffect_Type"], [161, 3, 1, "", "kPixelRef_Type"], [161, 3, 1, "", "kShaderBase_Type"], [161, 3, 1, "", "kUnused_Type"], [161, 3, 1, "", "kUnused_Type2"], [161, 3, 1, "", "kUnused_Type3"], [161, 3, 1, "", "kUnused_Type4"], [161, 2, 1, "", "ref"], [161, 2, 1, "", "serialize"], [161, 2, 1, "", "unique"], [161, 2, 1, "", "unref"]], "skia.Line2DPathEffect.DashInfo": [[162, 2, 1, "", "__init__"], [162, 3, 1, "", "fCount"], [162, 3, 1, "", "fIntervals"], [162, 3, 1, "", "fPhase"]], "skia.Line2DPathEffect.DashType": [[163, 2, 1, "", "__init__"], [163, 3, 1, "", "kDash_DashType"], [163, 3, 1, "", "kNone_DashType"], [163, 3, 1, "", "name"], [163, 3, 1, "", "value"]], "skia.Line2DPathEffect.PointData": [[165, 1, 1, "", "PointFlags"], [164, 2, 1, "", "__init__"], [164, 3, 1, "", "fClipRect"], [164, 3, 1, "", "fFirst"], [164, 3, 1, "", "fFlags"], [164, 3, 1, "", "fLast"], [164, 3, 1, "", "fNumPoints"], [164, 3, 1, "", "fPath"], [164, 3, 1, "", "fPoints"], [164, 3, 1, "", "fSize"], [164, 3, 1, "", "kCircles_PointFlag"], [164, 3, 1, "", "kUseClip_PointFlag"], [164, 3, 1, "", "kUsePath_PointFlag"]], "skia.Line2DPathEffect.PointData.PointFlags": [[165, 2, 1, "", "__init__"], [165, 3, 1, "", "kCircles_PointFlag"], [165, 3, 1, "", "kUseClip_PointFlag"], [165, 3, 1, "", "kUsePath_PointFlag"], [165, 3, 1, "", "name"], [165, 3, 1, "", "value"]], "skia.Line2DPathEffect.Type": [[166, 2, 1, "", "__init__"], [166, 3, 1, "", "kColorFilter_Type"], [166, 3, 1, "", "kDrawLooper_Type"], [166, 3, 1, "", "kDrawable_Type"], [166, 3, 1, "", "kImageFilter_Type"], [166, 3, 1, "", "kMaskFilter_Type"], [166, 3, 1, "", "kPathEffect_Type"], [166, 3, 1, "", "kPixelRef_Type"], [166, 3, 1, "", "kShaderBase_Type"], [166, 3, 1, "", "kUnused_Type"], [166, 3, 1, "", "kUnused_Type2"], [166, 3, 1, "", "kUnused_Type3"], [166, 3, 1, "", "kUnused_Type4"], [166, 3, 1, "", "name"], [166, 3, 1, "", "value"]], "skia.LumaColorFilter": [[167, 2, 1, "", "Make"], [167, 2, 1, "", "__init__"]], "skia.M44": [[168, 2, 1, "", "__init__"]], "skia.MagnifierImageFilter": [[169, 2, 1, "", "Make"], [169, 2, 1, "", "__init__"]], "skia.MaskFilter": [[170, 2, 1, "", "Deserialize"], [170, 2, 1, "", "MakeBlur"], [171, 1, 1, "", "Type"], [170, 2, 1, "", "__init__"], [170, 2, 1, "", "getFlattenableType"], [170, 2, 1, "", "getTypeName"], [170, 3, 1, "", "kColorFilter_Type"], [170, 3, 1, "", "kDrawLooper_Type"], [170, 3, 1, "", "kDrawable_Type"], [170, 3, 1, "", "kImageFilter_Type"], [170, 3, 1, "", "kMaskFilter_Type"], [170, 3, 1, "", "kPathEffect_Type"], [170, 3, 1, "", "kPixelRef_Type"], [170, 3, 1, "", "kShaderBase_Type"], [170, 3, 1, "", "kUnused_Type"], [170, 3, 1, "", "kUnused_Type2"], [170, 3, 1, "", "kUnused_Type3"], [170, 3, 1, "", "kUnused_Type4"], [170, 2, 1, "", "ref"], [170, 2, 1, "", "serialize"], [170, 2, 1, "", "unique"], [170, 2, 1, "", "unref"]], "skia.MaskFilter.Type": [[171, 2, 1, "", "__init__"], [171, 3, 1, "", "kColorFilter_Type"], [171, 3, 1, "", "kDrawLooper_Type"], [171, 3, 1, "", "kDrawable_Type"], [171, 3, 1, "", "kImageFilter_Type"], [171, 3, 1, "", "kMaskFilter_Type"], [171, 3, 1, "", "kPathEffect_Type"], [171, 3, 1, "", "kPixelRef_Type"], [171, 3, 1, "", "kShaderBase_Type"], [171, 3, 1, "", "kUnused_Type"], [171, 3, 1, "", "kUnused_Type2"], [171, 3, 1, "", "kUnused_Type3"], [171, 3, 1, "", "kUnused_Type4"], [171, 3, 1, "", "name"], [171, 3, 1, "", "value"]], "skia.Matrix": [[172, 2, 1, "", "Concat"], [172, 2, 1, "", "I"], [172, 2, 1, "", "InvalidMatrix"], [172, 2, 1, "", "MakeAll"], [172, 2, 1, "", "MakeRectToRect"], [172, 2, 1, "", "RotateDeg"], [172, 2, 1, "", "RotateRad"], [172, 2, 1, "", "Scale"], [173, 1, 1, "", "ScaleToFit"], [172, 2, 1, "", "SetAffineIdentity"], [172, 2, 1, "", "Translate"], [174, 1, 1, "", "TypeMask"], [172, 2, 1, "", "__init__"], [172, 2, 1, "", "asAffine"], [172, 2, 1, "", "decomposeScale"], [172, 2, 1, "", "dirtyMatrixTypeCache"], [172, 2, 1, "", "dump"], [172, 2, 1, "", "get"], [172, 2, 1, "", "get9"], [172, 2, 1, "", "getMaxScale"], [172, 2, 1, "", "getMinMaxScales"], [172, 2, 1, "", "getMinScale"], [172, 2, 1, "", "getPerspX"], [172, 2, 1, "", "getPerspY"], [172, 2, 1, "", "getScaleX"], [172, 2, 1, "", "getScaleY"], [172, 2, 1, "", "getSkewX"], [172, 2, 1, "", "getSkewY"], [172, 2, 1, "", "getTranslateX"], [172, 2, 1, "", "getTranslateY"], [172, 2, 1, "", "getType"], [172, 2, 1, "", "hasPerspective"], [172, 2, 1, "", "invert"], [172, 2, 1, "", "isFinite"], [172, 2, 1, "", "isIdentity"], [172, 2, 1, "", "isScaleTranslate"], [172, 2, 1, "", "isSimilarity"], [172, 2, 1, "", "isTranslate"], [172, 3, 1, "", "kAScaleX"], [172, 3, 1, "", "kAScaleY"], [172, 3, 1, "", "kASkewX"], [172, 3, 1, "", "kASkewY"], [172, 3, 1, "", "kATransX"], [172, 3, 1, "", "kATransY"], [172, 3, 1, "", "kAffine_Mask"], [172, 3, 1, "", "kCenter_ScaleToFit"], [172, 3, 1, "", "kEnd_ScaleToFit"], [172, 3, 1, "", "kFill_ScaleToFit"], [172, 3, 1, "", "kIdentity_Mask"], [172, 3, 1, "", "kMPersp0"], [172, 3, 1, "", "kMPersp1"], [172, 3, 1, "", "kMPersp2"], [172, 3, 1, "", "kMScaleX"], [172, 3, 1, "", "kMScaleY"], [172, 3, 1, "", "kMSkewX"], [172, 3, 1, "", "kMSkewY"], [172, 3, 1, "", "kMTransX"], [172, 3, 1, "", "kMTransY"], [172, 3, 1, "", "kPerspective_Mask"], [172, 3, 1, "", "kScale_Mask"], [172, 3, 1, "", "kStart_ScaleToFit"], [172, 3, 1, "", "kTranslate_Mask"], [172, 2, 1, "", "mapHomogeneousPoints"], [172, 2, 1, "", "mapPoints"], [172, 2, 1, "", "mapRadius"], [172, 2, 1, "", "mapRect"], [172, 2, 1, "", "mapRectScaleTranslate"], [172, 2, 1, "", "mapRectToQuad"], [172, 2, 1, "", "mapVector"], [172, 2, 1, "", "mapVectors"], [172, 2, 1, "", "mapXY"], [172, 2, 1, "", "normalizePerspective"], [172, 2, 1, "", "postConcat"], [172, 2, 1, "", "postRotate"], [172, 2, 1, "", "postScale"], [172, 2, 1, "", "postSkew"], [172, 2, 1, "", "postTranslate"], [172, 2, 1, "", "preConcat"], [172, 2, 1, "", "preRotate"], [172, 2, 1, "", "preScale"], [172, 2, 1, "", "preSkew"], [172, 2, 1, "", "preTranslate"], [172, 2, 1, "", "preservesAxisAlignment"], [172, 2, 1, "", "preservesRightAngles"], [172, 2, 1, "", "rc"], [172, 2, 1, "", "rectStaysRect"], [172, 2, 1, "", "reset"], [172, 2, 1, "", "set"], [172, 2, 1, "", "set9"], [172, 2, 1, "", "setAffine"], [172, 2, 1, "", "setAll"], [172, 2, 1, "", "setConcat"], [172, 2, 1, "", "setIdentity"], [172, 2, 1, "", "setPerspX"], [172, 2, 1, "", "setPerspY"], [172, 2, 1, "", "setPolyToPoly"], [172, 2, 1, "", "setRSXform"], [172, 2, 1, "", "setRectToRect"], [172, 2, 1, "", "setRotate"], [172, 2, 1, "", "setScale"], [172, 2, 1, "", "setScaleTranslate"], [172, 2, 1, "", "setScaleX"], [172, 2, 1, "", "setScaleY"], [172, 2, 1, "", "setSinCos"], [172, 2, 1, "", "setSkew"], [172, 2, 1, "", "setSkewX"], [172, 2, 1, "", "setSkewY"], [172, 2, 1, "", "setTranslate"], [172, 2, 1, "", "setTranslateX"], [172, 2, 1, "", "setTranslateY"]], "skia.Matrix.ScaleToFit": [[173, 2, 1, "", "__init__"], [173, 3, 1, "", "kCenter_ScaleToFit"], [173, 3, 1, "", "kEnd_ScaleToFit"], [173, 3, 1, "", "kFill_ScaleToFit"], [173, 3, 1, "", "kStart_ScaleToFit"], [173, 3, 1, "", "name"], [173, 3, 1, "", "value"]], "skia.Matrix.TypeMask": [[174, 2, 1, "", "__init__"], [174, 3, 1, "", "kAffine_Mask"], [174, 3, 1, "", "kIdentity_Mask"], [174, 3, 1, "", "kPerspective_Mask"], [174, 3, 1, "", "kScale_Mask"], [174, 3, 1, "", "kTranslate_Mask"], [174, 3, 1, "", "name"], [174, 3, 1, "", "value"]], "skia.MatrixPathEffect": [[175, 2, 1, "", "Make"], [175, 2, 1, "", "MakeTranslate"], [175, 2, 1, "", "__init__"]], "skia.MemoryStream": [[176, 2, 1, "", "Make"], [176, 2, 1, "", "MakeCopy"], [176, 2, 1, "", "MakeDirect"], [176, 2, 1, "", "MakeFromFile"], [176, 2, 1, "", "__init__"], [176, 2, 1, "", "asData"], [176, 2, 1, "", "duplicate"], [176, 2, 1, "", "fork"], [176, 2, 1, "", "getAtPos"], [176, 2, 1, "", "getLength"], [176, 2, 1, "", "getMemoryBase"], [176, 2, 1, "", "getPosition"], [176, 2, 1, "", "hasLength"], [176, 2, 1, "", "hasPosition"], [176, 2, 1, "", "isAtEnd"], [176, 2, 1, "", "move"], [176, 2, 1, "", "peek"], [176, 2, 1, "", "read"], [176, 2, 1, "", "readBool"], [176, 2, 1, "", "readPackedUInt"], [176, 2, 1, "", "readS16"], [176, 2, 1, "", "readS32"], [176, 2, 1, "", "readS8"], [176, 2, 1, "", "readScalar"], [176, 2, 1, "", "readU16"], [176, 2, 1, "", "readU32"], [176, 2, 1, "", "readU8"], [176, 2, 1, "", "rewind"], [176, 2, 1, "", "seek"], [176, 2, 1, "", "setData"], [176, 2, 1, "", "setMemory"], [176, 2, 1, "", "skip"], [176, 2, 1, "", "skipToAlign4"]], "skia.MergePathEffect": [[177, 2, 1, "", "Make"], [177, 2, 1, "", "__init__"]], "skia.MipmapBuilder": [[178, 2, 1, "", "__init__"], [178, 2, 1, "", "attachTo"], [178, 2, 1, "", "countLevels"], [178, 2, 1, "", "level"]], "skia.NullWStream": [[179, 2, 1, "", "SizeOfPackedUInt"], [179, 2, 1, "", "__init__"], [179, 2, 1, "", "bytesWritten"], [179, 2, 1, "", "flush"], [179, 2, 1, "", "newline"], [179, 2, 1, "", "write"], [179, 2, 1, "", "write16"], [179, 2, 1, "", "write32"], [179, 2, 1, "", "write8"], [179, 2, 1, "", "writeBigDecAsText"], [179, 2, 1, "", "writeBool"], [179, 2, 1, "", "writeDecAsText"], [179, 2, 1, "", "writeHexAsText"], [179, 2, 1, "", "writePackedUInt"], [179, 2, 1, "", "writeScalar"], [179, 2, 1, "", "writeScalarAsText"], [179, 2, 1, "", "writeStream"], [179, 2, 1, "", "writeText"]], "skia.OffsetImageFilter": [[180, 2, 1, "", "Make"], [180, 2, 1, "", "__init__"]], "skia.OpBuilder": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "add"], [181, 2, 1, "", "resolve"]], "skia.OverdrawColorFilter": [[182, 2, 1, "", "MakeWithColors"], [182, 2, 1, "", "__init__"], [182, 3, 1, "", "kNumColors"]], "skia.PDF": [[184, 1, 1, "", "AttributeList"], [185, 1, 1, "", "DocumentStructureType"], [183, 2, 1, "", "MakeDocument"], [186, 1, 1, "", "Metadata"], [183, 2, 1, "", "SetNodeId"], [187, 1, 1, "", "StructureElementNode"], [183, 2, 1, "", "__init__"], [183, 3, 1, "", "kAnnot"], [183, 3, 1, "", "kArt"], [183, 3, 1, "", "kBibEntry"], [183, 3, 1, "", "kBlockQuote"], [183, 3, 1, "", "kCaption"], [183, 3, 1, "", "kCode"], [183, 3, 1, "", "kDiv"], [183, 3, 1, "", "kDocument"], [183, 3, 1, "", "kFigure"], [183, 3, 1, "", "kForm"], [183, 3, 1, "", "kFormula"], [183, 3, 1, "", "kH"], [183, 3, 1, "", "kH1"], [183, 3, 1, "", "kH2"], [183, 3, 1, "", "kH3"], [183, 3, 1, "", "kH4"], [183, 3, 1, "", "kH5"], [183, 3, 1, "", "kH6"], [183, 3, 1, "", "kIndex"], [183, 3, 1, "", "kL"], [183, 3, 1, "", "kLBody"], [183, 3, 1, "", "kLI"], [183, 3, 1, "", "kLbl"], [183, 3, 1, "", "kLink"], [183, 3, 1, "", "kNonStruct"], [183, 3, 1, "", "kNote"], [183, 3, 1, "", "kP"], [183, 3, 1, "", "kPart"], [183, 3, 1, "", "kPrivate"], [183, 3, 1, "", "kQuote"], [183, 3, 1, "", "kRB"], [183, 3, 1, "", "kRP"], [183, 3, 1, "", "kRT"], [183, 3, 1, "", "kReference"], [183, 3, 1, "", "kRuby"], [183, 3, 1, "", "kSect"], [183, 3, 1, "", "kSpan"], [183, 3, 1, "", "kTBody"], [183, 3, 1, "", "kTD"], [183, 3, 1, "", "kTFoot"], [183, 3, 1, "", "kTH"], [183, 3, 1, "", "kTHead"], [183, 3, 1, "", "kTOC"], [183, 3, 1, "", "kTOCI"], [183, 3, 1, "", "kTR"], [183, 3, 1, "", "kTable"], [183, 3, 1, "", "kWP"], [183, 3, 1, "", "kWT"], [183, 3, 1, "", "kWarichu"]], "skia.PDF.AttributeList": [[184, 2, 1, "", "__init__"], [184, 2, 1, "", "appendFloat"], [184, 2, 1, "", "appendFloatArray"], [184, 2, 1, "", "appendInt"], [184, 2, 1, "", "appendString"], [184, 2, 1, "", "appendStringArray"]], "skia.PDF.DocumentStructureType": [[185, 2, 1, "", "__init__"], [185, 3, 1, "", "kAnnot"], [185, 3, 1, "", "kArt"], [185, 3, 1, "", "kBibEntry"], [185, 3, 1, "", "kBlockQuote"], [185, 3, 1, "", "kCaption"], [185, 3, 1, "", "kCode"], [185, 3, 1, "", "kDiv"], [185, 3, 1, "", "kDocument"], [185, 3, 1, "", "kFigure"], [185, 3, 1, "", "kForm"], [185, 3, 1, "", "kFormula"], [185, 3, 1, "", "kH"], [185, 3, 1, "", "kH1"], [185, 3, 1, "", "kH2"], [185, 3, 1, "", "kH3"], [185, 3, 1, "", "kH4"], [185, 3, 1, "", "kH5"], [185, 3, 1, "", "kH6"], [185, 3, 1, "", "kIndex"], [185, 3, 1, "", "kL"], [185, 3, 1, "", "kLBody"], [185, 3, 1, "", "kLI"], [185, 3, 1, "", "kLbl"], [185, 3, 1, "", "kLink"], [185, 3, 1, "", "kNonStruct"], [185, 3, 1, "", "kNote"], [185, 3, 1, "", "kP"], [185, 3, 1, "", "kPart"], [185, 3, 1, "", "kPrivate"], [185, 3, 1, "", "kQuote"], [185, 3, 1, "", "kRB"], [185, 3, 1, "", "kRP"], [185, 3, 1, "", "kRT"], [185, 3, 1, "", "kReference"], [185, 3, 1, "", "kRuby"], [185, 3, 1, "", "kSect"], [185, 3, 1, "", "kSpan"], [185, 3, 1, "", "kTBody"], [185, 3, 1, "", "kTD"], [185, 3, 1, "", "kTFoot"], [185, 3, 1, "", "kTH"], [185, 3, 1, "", "kTHead"], [185, 3, 1, "", "kTOC"], [185, 3, 1, "", "kTOCI"], [185, 3, 1, "", "kTR"], [185, 3, 1, "", "kTable"], [185, 3, 1, "", "kWP"], [185, 3, 1, "", "kWT"], [185, 3, 1, "", "kWarichu"], [185, 3, 1, "", "name"], [185, 3, 1, "", "value"]], "skia.PDF.Metadata": [[186, 2, 1, "", "__init__"], [186, 3, 1, "", "fAuthor"], [186, 3, 1, "", "fCreator"], [186, 3, 1, "", "fEncodingQuality"], [186, 3, 1, "", "fKeywords"], [186, 3, 1, "", "fPDFA"], [186, 3, 1, "", "fProducer"], [186, 3, 1, "", "fRasterDPI"], [186, 3, 1, "", "fStructureElementTreeRoot"], [186, 3, 1, "", "fSubject"], [186, 3, 1, "", "fTitle"]], "skia.PDF.StructureElementNode": [[187, 2, 1, "", "__init__"], [187, 3, 1, "", "fAdditionalNodeIds"], [187, 3, 1, "", "fAlt"], [187, 3, 1, "", "fAttributes"], [187, 3, 1, "", "fLang"], [187, 3, 1, "", "fNodeId"], [187, 3, 1, "", "fTypeString"]], "skia.Paint": [[189, 1, 1, "", "Cap"], [190, 1, 1, "", "Join"], [191, 1, 1, "", "Style"], [188, 2, 1, "", "__init__"], [188, 2, 1, "", "canComputeFastBounds"], [188, 2, 1, "", "computeFastBounds"], [188, 2, 1, "", "computeFastStrokeBounds"], [188, 2, 1, "", "doComputeFastBounds"], [188, 2, 1, "", "getAlpha"], [188, 2, 1, "", "getAlphaf"], [188, 2, 1, "", "getBlendMode"], [188, 2, 1, "", "getColor"], [188, 2, 1, "", "getColor4f"], [188, 2, 1, "", "getColorFilter"], [188, 2, 1, "", "getFillPath"], [188, 2, 1, "", "getFilterQuality"], [188, 2, 1, "", "getHash"], [188, 2, 1, "", "getImageFilter"], [188, 2, 1, "", "getMaskFilter"], [188, 2, 1, "", "getPathEffect"], [188, 2, 1, "", "getShader"], [188, 2, 1, "", "getStrokeCap"], [188, 2, 1, "", "getStrokeJoin"], [188, 2, 1, "", "getStrokeMiter"], [188, 2, 1, "", "getStrokeWidth"], [188, 2, 1, "", "getStyle"], [188, 2, 1, "", "isAntiAlias"], [188, 2, 1, "", "isDither"], [188, 2, 1, "", "isSrcOver"], [188, 3, 1, "", "kBevel_Join"], [188, 3, 1, "", "kButt_Cap"], [188, 3, 1, "", "kCapCount"], [188, 3, 1, "", "kDefault_Cap"], [188, 3, 1, "", "kDefault_Join"], [188, 3, 1, "", "kFill_Style"], [188, 3, 1, "", "kJoinCount"], [188, 3, 1, "", "kLast_Cap"], [188, 3, 1, "", "kLast_Join"], [188, 3, 1, "", "kMiter_Join"], [188, 3, 1, "", "kRound_Cap"], [188, 3, 1, "", "kRound_Join"], [188, 3, 1, "", "kSquare_Cap"], [188, 3, 1, "", "kStrokeAndFill_Style"], [188, 3, 1, "", "kStroke_Style"], [188, 3, 1, "", "kStyleCount"], [188, 2, 1, "", "nothingToDraw"], [188, 2, 1, "", "refColorFilter"], [188, 2, 1, "", "refImageFilter"], [188, 2, 1, "", "refMaskFilter"], [188, 2, 1, "", "refPathEffect"], [188, 2, 1, "", "refShader"], [188, 2, 1, "", "reset"], [188, 2, 1, "", "setARGB"], [188, 2, 1, "", "setAlpha"], [188, 2, 1, "", "setAlphaf"], [188, 2, 1, "", "setAntiAlias"], [188, 2, 1, "", "setBlendMode"], [188, 2, 1, "", "setColor"], [188, 2, 1, "", "setColor4f"], [188, 2, 1, "", "setColorFilter"], [188, 2, 1, "", "setDither"], [188, 2, 1, "", "setFilterQuality"], [188, 2, 1, "", "setImageFilter"], [188, 2, 1, "", "setMaskFilter"], [188, 2, 1, "", "setPathEffect"], [188, 2, 1, "", "setShader"], [188, 2, 1, "", "setStrokeCap"], [188, 2, 1, "", "setStrokeJoin"], [188, 2, 1, "", "setStrokeMiter"], [188, 2, 1, "", "setStrokeWidth"], [188, 2, 1, "", "setStyle"]], "skia.Paint.Cap": [[189, 2, 1, "", "__init__"], [189, 3, 1, "", "kButt_Cap"], [189, 3, 1, "", "kDefault_Cap"], [189, 3, 1, "", "kLast_Cap"], [189, 3, 1, "", "kRound_Cap"], [189, 3, 1, "", "kSquare_Cap"], [189, 3, 1, "", "name"], [189, 3, 1, "", "value"]], "skia.Paint.Join": [[190, 2, 1, "", "__init__"], [190, 3, 1, "", "kBevel_Join"], [190, 3, 1, "", "kDefault_Join"], [190, 3, 1, "", "kLast_Join"], [190, 3, 1, "", "kMiter_Join"], [190, 3, 1, "", "kRound_Join"], [190, 3, 1, "", "name"], [190, 3, 1, "", "value"]], "skia.Paint.Style": [[191, 2, 1, "", "__init__"], [191, 3, 1, "", "kFill_Style"], [191, 3, 1, "", "kStrokeAndFill_Style"], [191, 3, 1, "", "kStroke_Style"], [191, 3, 1, "", "name"], [191, 3, 1, "", "value"]], "skia.PaintImageFilter": [[192, 2, 1, "", "Make"], [192, 2, 1, "", "__init__"]], "skia.Path": [[194, 1, 1, "", "AddPathMode"], [195, 1, 1, "", "ArcSize"], [193, 2, 1, "", "Circle"], [193, 2, 1, "", "ConvertConicToQuads"], [193, 2, 1, "", "IsCubicDegenerate"], [193, 2, 1, "", "IsLineDegenerate"], [193, 2, 1, "", "IsQuadDegenerate"], [196, 1, 1, "", "Iter"], [193, 2, 1, "", "Line"], [193, 2, 1, "", "Make"], [193, 2, 1, "", "Oval"], [193, 2, 1, "", "Polygon"], [193, 2, 1, "", "RRect"], [197, 1, 1, "", "RawIter"], [193, 2, 1, "", "Rect"], [198, 1, 1, "", "SegmentMask"], [199, 1, 1, "", "Verb"], [193, 2, 1, "", "__init__"], [193, 2, 1, "", "addArc"], [193, 2, 1, "", "addCircle"], [193, 2, 1, "", "addOval"], [193, 2, 1, "", "addPath"], [193, 2, 1, "", "addPoly"], [193, 2, 1, "", "addRRect"], [193, 2, 1, "", "addRect"], [193, 2, 1, "", "addRoundRect"], [193, 2, 1, "", "approximateBytesUsed"], [193, 2, 1, "", "arcTo"], [193, 2, 1, "", "close"], [193, 2, 1, "", "computeTightBounds"], [193, 2, 1, "", "conicTo"], [193, 2, 1, "", "conservativelyContainsRect"], [193, 2, 1, "", "contains"], [193, 2, 1, "", "countPoints"], [193, 2, 1, "", "countVerbs"], [193, 2, 1, "", "cubicTo"], [193, 2, 1, "", "dump"], [193, 2, 1, "", "dumpHex"], [193, 2, 1, "", "getBounds"], [193, 2, 1, "", "getFillType"], [193, 2, 1, "", "getGenerationID"], [193, 2, 1, "", "getLastPt"], [193, 2, 1, "", "getPoint"], [193, 2, 1, "", "getPoints"], [193, 2, 1, "", "getSegmentMasks"], [193, 2, 1, "", "getVerbs"], [193, 2, 1, "", "incReserve"], [193, 2, 1, "", "interpolate"], [193, 2, 1, "", "isConvex"], [193, 2, 1, "", "isEmpty"], [193, 2, 1, "", "isFinite"], [193, 2, 1, "", "isInterpolatable"], [193, 2, 1, "", "isInverseFillType"], [193, 2, 1, "", "isLastContourClosed"], [193, 2, 1, "", "isLine"], [193, 2, 1, "", "isOval"], [193, 2, 1, "", "isRRect"], [193, 2, 1, "", "isRect"], [193, 2, 1, "", "isValid"], [193, 2, 1, "", "isVolatile"], [193, 3, 1, "", "kAppend_AddPathMode"], [193, 3, 1, "", "kClose_Verb"], [193, 3, 1, "", "kConic_SegmentMask"], [193, 3, 1, "", "kConic_Verb"], [193, 3, 1, "", "kCubic_SegmentMask"], [193, 3, 1, "", "kCubic_Verb"], [193, 3, 1, "", "kDone_Verb"], [193, 3, 1, "", "kExtend_AddPathMode"], [193, 3, 1, "", "kLarge_ArcSize"], [193, 3, 1, "", "kLine_SegmentMask"], [193, 3, 1, "", "kLine_Verb"], [193, 3, 1, "", "kMove_Verb"], [193, 3, 1, "", "kQuad_SegmentMask"], [193, 3, 1, "", "kQuad_Verb"], [193, 3, 1, "", "kSmall_ArcSize"], [193, 2, 1, "", "lineTo"], [193, 2, 1, "", "moveTo"], [193, 2, 1, "", "offset"], [193, 2, 1, "", "quadTo"], [193, 2, 1, "", "rArcTo"], [193, 2, 1, "", "rConicTo"], [193, 2, 1, "", "rCubicTo"], [193, 2, 1, "", "rLineTo"], [193, 2, 1, "", "rMoveTo"], [193, 2, 1, "", "rQuadTo"], [193, 2, 1, "", "readFromMemory"], [193, 2, 1, "", "reset"], [193, 2, 1, "", "reverseAddPath"], [193, 2, 1, "", "rewind"], [193, 2, 1, "", "serialize"], [193, 2, 1, "", "setFillType"], [193, 2, 1, "", "setIsVolatile"], [193, 2, 1, "", "setLastPt"], [193, 2, 1, "", "shrinkToFit"], [193, 2, 1, "", "swap"], [193, 2, 1, "", "toggleInverseFillType"], [193, 2, 1, "", "transform"], [193, 2, 1, "", "updateBoundsCache"], [193, 2, 1, "", "writeToMemory"]], "skia.Path.AddPathMode": [[194, 2, 1, "", "__init__"], [194, 3, 1, "", "kAppend_AddPathMode"], [194, 3, 1, "", "kExtend_AddPathMode"], [194, 3, 1, "", "name"], [194, 3, 1, "", "value"]], "skia.Path.ArcSize": [[195, 2, 1, "", "__init__"], [195, 3, 1, "", "kLarge_ArcSize"], [195, 3, 1, "", "kSmall_ArcSize"], [195, 3, 1, "", "name"], [195, 3, 1, "", "value"]], "skia.Path.Iter": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "conicWeight"], [196, 2, 1, "", "isCloseLine"], [196, 2, 1, "", "isClosedContour"], [196, 2, 1, "", "next"], [196, 2, 1, "", "setPath"]], "skia.Path.RawIter": [[197, 2, 1, "", "__init__"], [197, 2, 1, "", "conicWeight"], [197, 2, 1, "", "next"], [197, 2, 1, "", "peek"], [197, 2, 1, "", "setPath"]], "skia.Path.SegmentMask": [[198, 2, 1, "", "__init__"], [198, 3, 1, "", "kConic_SegmentMask"], [198, 3, 1, "", "kCubic_SegmentMask"], [198, 3, 1, "", "kLine_SegmentMask"], [198, 3, 1, "", "kQuad_SegmentMask"], [198, 3, 1, "", "name"], [198, 3, 1, "", "value"]], "skia.Path.Verb": [[199, 2, 1, "", "__init__"], [199, 3, 1, "", "kClose_Verb"], [199, 3, 1, "", "kConic_Verb"], [199, 3, 1, "", "kCubic_Verb"], [199, 3, 1, "", "kDone_Verb"], [199, 3, 1, "", "kLine_Verb"], [199, 3, 1, "", "kMove_Verb"], [199, 3, 1, "", "kQuad_Verb"], [199, 3, 1, "", "name"], [199, 3, 1, "", "value"]], "skia.Path1DPathEffect": [[201, 1, 1, "", "DashInfo"], [202, 1, 1, "", "DashType"], [200, 2, 1, "", "Deserialize"], [200, 2, 1, "", "GetFlattenableType"], [200, 2, 1, "", "Make"], [200, 2, 1, "", "MakeCompose"], [200, 2, 1, "", "MakeSum"], [203, 1, 1, "", "PointData"], [200, 2, 1, "", "RegisterFlattenables"], [205, 1, 1, "", "Style"], [206, 1, 1, "", "Type"], [200, 2, 1, "", "__init__"], [200, 2, 1, "", "asADash"], [200, 2, 1, "", "asPoints"], [200, 2, 1, "", "computeFastBounds"], [200, 2, 1, "", "filterPath"], [200, 2, 1, "", "getFlattenableType"], [200, 2, 1, "", "getTypeName"], [200, 3, 1, "", "kColorFilter_Type"], [200, 3, 1, "", "kDash_DashType"], [200, 3, 1, "", "kDrawLooper_Type"], [200, 3, 1, "", "kDrawable_Type"], [200, 3, 1, "", "kImageFilter_Type"], [200, 3, 1, "", "kLastEnum_Style"], [200, 3, 1, "", "kMaskFilter_Type"], [200, 3, 1, "", "kMorph_Style"], [200, 3, 1, "", "kNone_DashType"], [200, 3, 1, "", "kPathEffect_Type"], [200, 3, 1, "", "kPixelRef_Type"], [200, 3, 1, "", "kRotate_Style"], [200, 3, 1, "", "kShaderBase_Type"], [200, 3, 1, "", "kTranslate_Style"], [200, 3, 1, "", "kUnused_Type"], [200, 3, 1, "", "kUnused_Type2"], [200, 3, 1, "", "kUnused_Type3"], [200, 3, 1, "", "kUnused_Type4"], [200, 2, 1, "", "ref"], [200, 2, 1, "", "serialize"], [200, 2, 1, "", "unique"], [200, 2, 1, "", "unref"]], "skia.Path1DPathEffect.DashInfo": [[201, 2, 1, "", "__init__"], [201, 3, 1, "", "fCount"], [201, 3, 1, "", "fIntervals"], [201, 3, 1, "", "fPhase"]], "skia.Path1DPathEffect.DashType": [[202, 2, 1, "", "__init__"], [202, 3, 1, "", "kDash_DashType"], [202, 3, 1, "", "kNone_DashType"], [202, 3, 1, "", "name"], [202, 3, 1, "", "value"]], "skia.Path1DPathEffect.PointData": [[204, 1, 1, "", "PointFlags"], [203, 2, 1, "", "__init__"], [203, 3, 1, "", "fClipRect"], [203, 3, 1, "", "fFirst"], [203, 3, 1, "", "fFlags"], [203, 3, 1, "", "fLast"], [203, 3, 1, "", "fNumPoints"], [203, 3, 1, "", "fPath"], [203, 3, 1, "", "fPoints"], [203, 3, 1, "", "fSize"], [203, 3, 1, "", "kCircles_PointFlag"], [203, 3, 1, "", "kUseClip_PointFlag"], [203, 3, 1, "", "kUsePath_PointFlag"]], "skia.Path1DPathEffect.PointData.PointFlags": [[204, 2, 1, "", "__init__"], [204, 3, 1, "", "kCircles_PointFlag"], [204, 3, 1, "", "kUseClip_PointFlag"], [204, 3, 1, "", "kUsePath_PointFlag"], [204, 3, 1, "", "name"], [204, 3, 1, "", "value"]], "skia.Path1DPathEffect.Style": [[205, 2, 1, "", "__init__"], [205, 3, 1, "", "kLastEnum_Style"], [205, 3, 1, "", "kMorph_Style"], [205, 3, 1, "", "kRotate_Style"], [205, 3, 1, "", "kTranslate_Style"], [205, 3, 1, "", "name"], [205, 3, 1, "", "value"]], "skia.Path1DPathEffect.Type": [[206, 2, 1, "", "__init__"], [206, 3, 1, "", "kColorFilter_Type"], [206, 3, 1, "", "kDrawLooper_Type"], [206, 3, 1, "", "kDrawable_Type"], [206, 3, 1, "", "kImageFilter_Type"], [206, 3, 1, "", "kMaskFilter_Type"], [206, 3, 1, "", "kPathEffect_Type"], [206, 3, 1, "", "kPixelRef_Type"], [206, 3, 1, "", "kShaderBase_Type"], [206, 3, 1, "", "kUnused_Type"], [206, 3, 1, "", "kUnused_Type2"], [206, 3, 1, "", "kUnused_Type3"], [206, 3, 1, "", "kUnused_Type4"], [206, 3, 1, "", "name"], [206, 3, 1, "", "value"]], "skia.Path2DPathEffect": [[208, 1, 1, "", "DashInfo"], [209, 1, 1, "", "DashType"], [207, 2, 1, "", "Deserialize"], [207, 2, 1, "", "GetFlattenableType"], [207, 2, 1, "", "Make"], [207, 2, 1, "", "MakeCompose"], [207, 2, 1, "", "MakeSum"], [210, 1, 1, "", "PointData"], [207, 2, 1, "", "RegisterFlattenables"], [212, 1, 1, "", "Type"], [207, 2, 1, "", "__init__"], [207, 2, 1, "", "asADash"], [207, 2, 1, "", "asPoints"], [207, 2, 1, "", "computeFastBounds"], [207, 2, 1, "", "filterPath"], [207, 2, 1, "", "getFlattenableType"], [207, 2, 1, "", "getTypeName"], [207, 3, 1, "", "kColorFilter_Type"], [207, 3, 1, "", "kDash_DashType"], [207, 3, 1, "", "kDrawLooper_Type"], [207, 3, 1, "", "kDrawable_Type"], [207, 3, 1, "", "kImageFilter_Type"], [207, 3, 1, "", "kMaskFilter_Type"], [207, 3, 1, "", "kNone_DashType"], [207, 3, 1, "", "kPathEffect_Type"], [207, 3, 1, "", "kPixelRef_Type"], [207, 3, 1, "", "kShaderBase_Type"], [207, 3, 1, "", "kUnused_Type"], [207, 3, 1, "", "kUnused_Type2"], [207, 3, 1, "", "kUnused_Type3"], [207, 3, 1, "", "kUnused_Type4"], [207, 2, 1, "", "ref"], [207, 2, 1, "", "serialize"], [207, 2, 1, "", "unique"], [207, 2, 1, "", "unref"]], "skia.Path2DPathEffect.DashInfo": [[208, 2, 1, "", "__init__"], [208, 3, 1, "", "fCount"], [208, 3, 1, "", "fIntervals"], [208, 3, 1, "", "fPhase"]], "skia.Path2DPathEffect.DashType": [[209, 2, 1, "", "__init__"], [209, 3, 1, "", "kDash_DashType"], [209, 3, 1, "", "kNone_DashType"], [209, 3, 1, "", "name"], [209, 3, 1, "", "value"]], "skia.Path2DPathEffect.PointData": [[211, 1, 1, "", "PointFlags"], [210, 2, 1, "", "__init__"], [210, 3, 1, "", "fClipRect"], [210, 3, 1, "", "fFirst"], [210, 3, 1, "", "fFlags"], [210, 3, 1, "", "fLast"], [210, 3, 1, "", "fNumPoints"], [210, 3, 1, "", "fPath"], [210, 3, 1, "", "fPoints"], [210, 3, 1, "", "fSize"], [210, 3, 1, "", "kCircles_PointFlag"], [210, 3, 1, "", "kUseClip_PointFlag"], [210, 3, 1, "", "kUsePath_PointFlag"]], "skia.Path2DPathEffect.PointData.PointFlags": [[211, 2, 1, "", "__init__"], [211, 3, 1, "", "kCircles_PointFlag"], [211, 3, 1, "", "kUseClip_PointFlag"], [211, 3, 1, "", "kUsePath_PointFlag"], [211, 3, 1, "", "name"], [211, 3, 1, "", "value"]], "skia.Path2DPathEffect.Type": [[212, 2, 1, "", "__init__"], [212, 3, 1, "", "kColorFilter_Type"], [212, 3, 1, "", "kDrawLooper_Type"], [212, 3, 1, "", "kDrawable_Type"], [212, 3, 1, "", "kImageFilter_Type"], [212, 3, 1, "", "kMaskFilter_Type"], [212, 3, 1, "", "kPathEffect_Type"], [212, 3, 1, "", "kPixelRef_Type"], [212, 3, 1, "", "kShaderBase_Type"], [212, 3, 1, "", "kUnused_Type"], [212, 3, 1, "", "kUnused_Type2"], [212, 3, 1, "", "kUnused_Type3"], [212, 3, 1, "", "kUnused_Type4"], [212, 3, 1, "", "name"], [212, 3, 1, "", "value"]], "skia.PathBuilder": [[214, 1, 1, "", "ArcSize"], [213, 2, 1, "", "__init__"], [213, 2, 1, "", "addArc"], [213, 2, 1, "", "addCircle"], [213, 2, 1, "", "addOval"], [213, 2, 1, "", "addPolygon"], [213, 2, 1, "", "addRRect"], [213, 2, 1, "", "addRect"], [213, 2, 1, "", "arcTo"], [213, 2, 1, "", "close"], [213, 2, 1, "", "computeBounds"], [213, 2, 1, "", "conicTo"], [213, 2, 1, "", "cubicTo"], [213, 2, 1, "", "detach"], [213, 2, 1, "", "fillType"], [213, 2, 1, "", "incReserve"], [213, 3, 1, "", "kLarge_ArcSize"], [213, 3, 1, "", "kSmall_ArcSize"], [213, 2, 1, "", "lineTo"], [213, 2, 1, "", "moveTo"], [213, 2, 1, "", "offset"], [213, 2, 1, "", "polylineTo"], [213, 2, 1, "", "quadTo"], [213, 2, 1, "", "rConicTo"], [213, 2, 1, "", "rCubicTo"], [213, 2, 1, "", "rLineTo"], [213, 2, 1, "", "rQuadTo"], [213, 2, 1, "", "reset"], [213, 2, 1, "", "setFillType"], [213, 2, 1, "", "setIsVolatile"], [213, 2, 1, "", "snapshot"], [213, 2, 1, "", "toggleInverseFillType"]], "skia.PathBuilder.ArcSize": [[214, 2, 1, "", "__init__"], [214, 3, 1, "", "kLarge_ArcSize"], [214, 3, 1, "", "kSmall_ArcSize"], [214, 3, 1, "", "name"], [214, 3, 1, "", "value"]], "skia.PathDirection": [[215, 2, 1, "", "__init__"], [215, 3, 1, "", "kCCW"], [215, 3, 1, "", "kCW"], [215, 3, 1, "", "name"], [215, 3, 1, "", "value"]], "skia.PathEffect": [[217, 1, 1, "", "DashInfo"], [218, 1, 1, "", "DashType"], [216, 2, 1, "", "Deserialize"], [216, 2, 1, "", "GetFlattenableType"], [216, 2, 1, "", "MakeCompose"], [216, 2, 1, "", "MakeSum"], [219, 1, 1, "", "PointData"], [216, 2, 1, "", "RegisterFlattenables"], [221, 1, 1, "", "Type"], [216, 2, 1, "", "__init__"], [216, 2, 1, "", "asADash"], [216, 2, 1, "", "asPoints"], [216, 2, 1, "", "computeFastBounds"], [216, 2, 1, "", "filterPath"], [216, 2, 1, "", "getFlattenableType"], [216, 2, 1, "", "getTypeName"], [216, 3, 1, "", "kColorFilter_Type"], [216, 3, 1, "", "kDash_DashType"], [216, 3, 1, "", "kDrawLooper_Type"], [216, 3, 1, "", "kDrawable_Type"], [216, 3, 1, "", "kImageFilter_Type"], [216, 3, 1, "", "kMaskFilter_Type"], [216, 3, 1, "", "kNone_DashType"], [216, 3, 1, "", "kPathEffect_Type"], [216, 3, 1, "", "kPixelRef_Type"], [216, 3, 1, "", "kShaderBase_Type"], [216, 3, 1, "", "kUnused_Type"], [216, 3, 1, "", "kUnused_Type2"], [216, 3, 1, "", "kUnused_Type3"], [216, 3, 1, "", "kUnused_Type4"], [216, 2, 1, "", "ref"], [216, 2, 1, "", "serialize"], [216, 2, 1, "", "unique"], [216, 2, 1, "", "unref"]], "skia.PathEffect.DashInfo": [[217, 2, 1, "", "__init__"], [217, 3, 1, "", "fCount"], [217, 3, 1, "", "fIntervals"], [217, 3, 1, "", "fPhase"]], "skia.PathEffect.DashType": [[218, 2, 1, "", "__init__"], [218, 3, 1, "", "kDash_DashType"], [218, 3, 1, "", "kNone_DashType"], [218, 3, 1, "", "name"], [218, 3, 1, "", "value"]], "skia.PathEffect.PointData": [[220, 1, 1, "", "PointFlags"], [219, 2, 1, "", "__init__"], [219, 3, 1, "", "fClipRect"], [219, 3, 1, "", "fFirst"], [219, 3, 1, "", "fFlags"], [219, 3, 1, "", "fLast"], [219, 3, 1, "", "fNumPoints"], [219, 3, 1, "", "fPath"], [219, 3, 1, "", "fPoints"], [219, 3, 1, "", "fSize"], [219, 3, 1, "", "kCircles_PointFlag"], [219, 3, 1, "", "kUseClip_PointFlag"], [219, 3, 1, "", "kUsePath_PointFlag"]], "skia.PathEffect.PointData.PointFlags": [[220, 2, 1, "", "__init__"], [220, 3, 1, "", "kCircles_PointFlag"], [220, 3, 1, "", "kUseClip_PointFlag"], [220, 3, 1, "", "kUsePath_PointFlag"], [220, 3, 1, "", "name"], [220, 3, 1, "", "value"]], "skia.PathEffect.Type": [[221, 2, 1, "", "__init__"], [221, 3, 1, "", "kColorFilter_Type"], [221, 3, 1, "", "kDrawLooper_Type"], [221, 3, 1, "", "kDrawable_Type"], [221, 3, 1, "", "kImageFilter_Type"], [221, 3, 1, "", "kMaskFilter_Type"], [221, 3, 1, "", "kPathEffect_Type"], [221, 3, 1, "", "kPixelRef_Type"], [221, 3, 1, "", "kShaderBase_Type"], [221, 3, 1, "", "kUnused_Type"], [221, 3, 1, "", "kUnused_Type2"], [221, 3, 1, "", "kUnused_Type3"], [221, 3, 1, "", "kUnused_Type4"], [221, 3, 1, "", "name"], [221, 3, 1, "", "value"]], "skia.PathFillType": [[222, 2, 1, "", "__init__"], [222, 3, 1, "", "kEvenOdd"], [222, 3, 1, "", "kInverseEvenOdd"], [222, 3, 1, "", "kInverseWinding"], [222, 3, 1, "", "kWinding"], [222, 3, 1, "", "name"], [222, 3, 1, "", "value"]], "skia.PathMeasure": [[224, 1, 1, "", "GetPosAndTan"], [223, 2, 1, "", "__init__"], [223, 2, 1, "", "getLength"], [223, 2, 1, "", "getMatrix"], [223, 2, 1, "", "getPosTan"], [223, 2, 1, "", "getSegment"], [223, 2, 1, "", "isClosed"], [223, 3, 1, "", "kGetPosAndTan_MatrixFlag"], [223, 3, 1, "", "kGetPosition_MatrixFlag"], [223, 3, 1, "", "kGetTangent_MatrixFlag"], [223, 2, 1, "", "nextContour"], [223, 2, 1, "", "setPath"]], "skia.PathMeasure.GetPosAndTan": [[224, 2, 1, "", "__init__"], [224, 3, 1, "", "kGetPosAndTan_MatrixFlag"], [224, 3, 1, "", "kGetPosition_MatrixFlag"], [224, 3, 1, "", "kGetTangent_MatrixFlag"], [224, 3, 1, "", "name"], [224, 3, 1, "", "value"]], "skia.PathOp": [[225, 2, 1, "", "__init__"], [225, 3, 1, "", "kDifference_PathOp"], [225, 3, 1, "", "kIntersect_PathOp"], [225, 3, 1, "", "kReverseDifference_PathOp"], [225, 3, 1, "", "kUnion_PathOp"], [225, 3, 1, "", "kXOR_PathOp"], [225, 3, 1, "", "name"], [225, 3, 1, "", "value"]], "skia.PathSegmentMask": [[226, 2, 1, "", "__init__"], [226, 3, 1, "", "kConic_PathSegmentMask"], [226, 3, 1, "", "kCubic_PathSegmentMask"], [226, 3, 1, "", "kLine_PathSegmentMask"], [226, 3, 1, "", "kQuad_PathSegmentMask"], [226, 3, 1, "", "name"], [226, 3, 1, "", "value"]], "skia.PathVerb": [[227, 2, 1, "", "__init__"], [227, 3, 1, "", "kClose"], [227, 3, 1, "", "kConic"], [227, 3, 1, "", "kCubic"], [227, 3, 1, "", "kLine"], [227, 3, 1, "", "kMove"], [227, 3, 1, "", "kQuad"], [227, 3, 1, "", "name"], [227, 3, 1, "", "value"]], "skia.PerlinNoiseShader": [[228, 2, 1, "", "MakeFractalNoise"], [228, 2, 1, "", "MakeImprovedNoise"], [228, 2, 1, "", "MakeTurbulence"], [228, 2, 1, "", "__init__"]], "skia.Picture": [[229, 2, 1, "", "MakeFromData"], [229, 2, 1, "", "MakeFromStream"], [229, 2, 1, "", "MakePlaceholder"], [229, 2, 1, "", "__init__"], [229, 2, 1, "", "approximateBytesUsed"], [229, 2, 1, "", "approximateOpCount"], [229, 2, 1, "", "cullRect"], [229, 2, 1, "", "makeShader"], [229, 2, 1, "", "playback"], [229, 2, 1, "", "ref"], [229, 2, 1, "", "serialize"], [229, 2, 1, "", "unique"], [229, 2, 1, "", "uniqueID"], [229, 2, 1, "", "unref"]], "skia.PictureRecorder": [[231, 1, 1, "", "FinishFlags"], [230, 2, 1, "", "__init__"], [230, 2, 1, "", "beginRecording"], [230, 2, 1, "", "finishRecordingAsDrawable"], [230, 2, 1, "", "finishRecordingAsPicture"], [230, 2, 1, "", "finishRecordingAsPictureWithCull"], [230, 2, 1, "", "getRecordingCanvas"]], "skia.PictureRecorder.FinishFlags": [[231, 2, 1, "", "__init__"], [231, 3, 1, "", "name"], [231, 3, 1, "", "value"]], "skia.PixelGeometry": [[232, 2, 1, "", "__init__"], [232, 3, 1, "", "kBGR_H_PixelGeometry"], [232, 3, 1, "", "kBGR_V_PixelGeometry"], [232, 3, 1, "", "kRGB_H_PixelGeometry"], [232, 3, 1, "", "kRGB_V_PixelGeometry"], [232, 3, 1, "", "kUnknown_PixelGeometry"], [232, 3, 1, "", "name"], [232, 3, 1, "", "value"]], "skia.PixelRef": [[233, 2, 1, "", "__init__"]], "skia.Pixmap": [[234, 2, 1, "", "__init__"], [234, 2, 1, "", "addr"], [234, 2, 1, "", "addr16"], [234, 2, 1, "", "addr32"], [234, 2, 1, "", "addr64"], [234, 2, 1, "", "addr8"], [234, 2, 1, "", "alphaType"], [234, 2, 1, "", "bounds"], [234, 2, 1, "", "colorSpace"], [234, 2, 1, "", "colorType"], [234, 2, 1, "", "computeByteSize"], [234, 2, 1, "", "computeIsOpaque"], [234, 2, 1, "", "dimensions"], [234, 2, 1, "", "erase"], [234, 2, 1, "", "extractSubset"], [234, 2, 1, "", "getAlphaf"], [234, 2, 1, "", "getColor"], [234, 2, 1, "", "height"], [234, 2, 1, "", "info"], [234, 2, 1, "", "isOpaque"], [234, 2, 1, "", "readPixels"], [234, 2, 1, "", "refColorSpace"], [234, 2, 1, "", "reset"], [234, 2, 1, "", "rowBytes"], [234, 2, 1, "", "rowBytesAsPixels"], [234, 2, 1, "", "scalePixels"], [234, 2, 1, "", "setColorSpace"], [234, 2, 1, "", "shiftPerPixel"], [234, 2, 1, "", "tobytes"], [234, 2, 1, "", "width"], [234, 2, 1, "", "writable_addr"]], "skia.Point": [[235, 2, 1, "", "CrossProduct"], [235, 2, 1, "", "Distance"], [235, 2, 1, "", "DotProduct"], [235, 2, 1, "", "Length"], [235, 2, 1, "", "Make"], [235, 2, 1, "", "Normalize"], [235, 2, 1, "", "Offset"], [235, 2, 1, "", "__init__"], [235, 2, 1, "", "cross"], [235, 2, 1, "", "distanceToOrigin"], [235, 2, 1, "", "dot"], [235, 2, 1, "", "equals"], [235, 3, 1, "", "fX"], [235, 3, 1, "", "fY"], [235, 2, 1, "", "isFinite"], [235, 2, 1, "", "isZero"], [235, 2, 1, "", "iset"], [235, 2, 1, "", "length"], [235, 2, 1, "", "negate"], [235, 2, 1, "", "normalize"], [235, 2, 1, "", "offset"], [235, 2, 1, "", "scale"], [235, 2, 1, "", "set"], [235, 2, 1, "", "setAbs"], [235, 2, 1, "", "setLength"], [235, 2, 1, "", "setNormalize"], [235, 2, 1, "", "x"], [235, 2, 1, "", "y"]], "skia.Point3": [[236, 2, 1, "", "CrossProduct"], [236, 2, 1, "", "DotProduct"], [236, 2, 1, "", "Length"], [236, 2, 1, "", "Make"], [236, 2, 1, "", "__init__"], [236, 2, 1, "", "cross"], [236, 2, 1, "", "dot"], [236, 3, 1, "", "fX"], [236, 3, 1, "", "fY"], [236, 3, 1, "", "fZ"], [236, 2, 1, "", "isFinite"], [236, 2, 1, "", "length"], [236, 2, 1, "", "makeScale"], [236, 2, 1, "", "normalize"], [236, 2, 1, "", "scale"], [236, 2, 1, "", "set"], [236, 2, 1, "", "x"], [236, 2, 1, "", "y"], [236, 2, 1, "", "z"]], "skia.RRect": [[238, 1, 1, "", "Corner"], [237, 2, 1, "", "MakeEmpty"], [237, 2, 1, "", "MakeOval"], [237, 2, 1, "", "MakeRect"], [237, 2, 1, "", "MakeRectXY"], [239, 1, 1, "", "Type"], [237, 2, 1, "", "__init__"], [237, 2, 1, "", "contains"], [237, 2, 1, "", "dump"], [237, 2, 1, "", "dumpHex"], [237, 2, 1, "", "dumpToString"], [237, 2, 1, "", "getBounds"], [237, 2, 1, "", "getSimpleRadii"], [237, 2, 1, "", "getType"], [237, 2, 1, "", "height"], [237, 2, 1, "", "inset"], [237, 2, 1, "", "isComplex"], [237, 2, 1, "", "isEmpty"], [237, 2, 1, "", "isNinePatch"], [237, 2, 1, "", "isOval"], [237, 2, 1, "", "isRect"], [237, 2, 1, "", "isSimple"], [237, 2, 1, "", "isValid"], [237, 3, 1, "", "kComplex_Type"], [237, 3, 1, "", "kEmpty_Type"], [237, 3, 1, "", "kLastType"], [237, 3, 1, "", "kLowerLeft_Corner"], [237, 3, 1, "", "kLowerRight_Corner"], [237, 3, 1, "", "kNinePatch_Type"], [237, 3, 1, "", "kOval_Type"], [237, 3, 1, "", "kRect_Type"], [237, 3, 1, "", "kSimple_Type"], [237, 3, 1, "", "kSizeInMemory"], [237, 3, 1, "", "kUpperLeft_Corner"], [237, 3, 1, "", "kUpperRight_Corner"], [237, 2, 1, "", "makeOffset"], [237, 2, 1, "", "offset"], [237, 2, 1, "", "outset"], [237, 2, 1, "", "radii"], [237, 2, 1, "", "readFromMemory"], [237, 2, 1, "", "rect"], [237, 2, 1, "", "setEmpty"], [237, 2, 1, "", "setNinePatch"], [237, 2, 1, "", "setOval"], [237, 2, 1, "", "setRect"], [237, 2, 1, "", "setRectRadii"], [237, 2, 1, "", "setRectXY"], [237, 2, 1, "", "transform"], [237, 2, 1, "", "type"], [237, 2, 1, "", "width"], [237, 2, 1, "", "writeToMemory"]], "skia.RRect.Corner": [[238, 2, 1, "", "__init__"], [238, 3, 1, "", "kLowerLeft_Corner"], [238, 3, 1, "", "kLowerRight_Corner"], [238, 3, 1, "", "kUpperLeft_Corner"], [238, 3, 1, "", "kUpperRight_Corner"], [238, 3, 1, "", "name"], [238, 3, 1, "", "value"]], "skia.RRect.Type": [[239, 2, 1, "", "__init__"], [239, 3, 1, "", "kComplex_Type"], [239, 3, 1, "", "kEmpty_Type"], [239, 3, 1, "", "kLastType"], [239, 3, 1, "", "kNinePatch_Type"], [239, 3, 1, "", "kOval_Type"], [239, 3, 1, "", "kRect_Type"], [239, 3, 1, "", "kSimple_Type"], [239, 3, 1, "", "name"], [239, 3, 1, "", "value"]], "skia.RSXform": [[240, 2, 1, "", "Make"], [240, 2, 1, "", "MakeFromRadians"], [240, 2, 1, "", "__init__"], [240, 3, 1, "", "fSCos"], [240, 3, 1, "", "fSSin"], [240, 3, 1, "", "fTx"], [240, 3, 1, "", "fTy"], [240, 2, 1, "", "rectStaysRect"], [240, 2, 1, "", "set"], [240, 2, 1, "", "setIdentity"], [240, 2, 1, "", "toQuad"], [240, 2, 1, "", "toTriStrip"]], "skia.Rect": [[241, 2, 1, "", "Intersects"], [241, 2, 1, "", "Make"], [241, 2, 1, "", "MakeEmpty"], [241, 2, 1, "", "MakeIWH"], [241, 2, 1, "", "MakeLTRB"], [241, 2, 1, "", "MakeSize"], [241, 2, 1, "", "MakeWH"], [241, 2, 1, "", "MakeXYWH"], [241, 2, 1, "", "__init__"], [241, 2, 1, "", "asScalars"], [241, 2, 1, "", "bottom"], [241, 2, 1, "", "centerX"], [241, 2, 1, "", "centerY"], [241, 2, 1, "", "contains"], [241, 2, 1, "", "dump"], [241, 2, 1, "", "dumpHex"], [241, 3, 1, "", "fBottom"], [241, 3, 1, "", "fLeft"], [241, 3, 1, "", "fRight"], [241, 3, 1, "", "fTop"], [241, 2, 1, "", "height"], [241, 2, 1, "", "inset"], [241, 2, 1, "", "intersect"], [241, 2, 1, "", "intersects"], [241, 2, 1, "", "isEmpty"], [241, 2, 1, "", "isFinite"], [241, 2, 1, "", "isSorted"], [241, 2, 1, "", "join"], [241, 2, 1, "", "joinNonEmptyArg"], [241, 2, 1, "", "joinPossiblyEmptyRect"], [241, 2, 1, "", "left"], [241, 2, 1, "", "makeInset"], [241, 2, 1, "", "makeOffset"], [241, 2, 1, "", "makeOutset"], [241, 2, 1, "", "makeSorted"], [241, 2, 1, "", "offset"], [241, 2, 1, "", "offsetTo"], [241, 2, 1, "", "outset"], [241, 2, 1, "", "right"], [241, 2, 1, "", "round"], [241, 2, 1, "", "roundIn"], [241, 2, 1, "", "roundOut"], [241, 2, 1, "", "set"], [241, 2, 1, "", "setBounds"], [241, 2, 1, "", "setBoundsCheck"], [241, 2, 1, "", "setBoundsNoCheck"], [241, 2, 1, "", "setEmpty"], [241, 2, 1, "", "setIWH"], [241, 2, 1, "", "setLTRB"], [241, 2, 1, "", "setWH"], [241, 2, 1, "", "setXYWH"], [241, 2, 1, "", "sort"], [241, 2, 1, "", "toQuad"], [241, 2, 1, "", "top"], [241, 2, 1, "", "width"], [241, 2, 1, "", "x"], [241, 2, 1, "", "y"]], "skia.RefCnt": [[242, 2, 1, "", "__init__"], [242, 2, 1, "", "ref"], [242, 2, 1, "", "unique"], [242, 2, 1, "", "unref"]], "skia.RefCntBase": [[243, 2, 1, "", "__init__"], [243, 2, 1, "", "ref"], [243, 2, 1, "", "unique"], [243, 2, 1, "", "unref"]], "skia.Region": [[245, 1, 1, "", "Cliperator"], [246, 1, 1, "", "Iterator"], [247, 1, 1, "", "Op"], [248, 1, 1, "", "Spanerator"], [244, 2, 1, "", "__init__"], [244, 2, 1, "", "cliperator"], [244, 2, 1, "", "computeRegionComplexity"], [244, 2, 1, "", "contains"], [244, 2, 1, "", "getBoundaryPath"], [244, 2, 1, "", "getBounds"], [244, 2, 1, "", "intersects"], [244, 2, 1, "", "isComplex"], [244, 2, 1, "", "isEmpty"], [244, 2, 1, "", "isRect"], [244, 2, 1, "", "iterator"], [244, 3, 1, "", "kDifference_Op"], [244, 3, 1, "", "kIntersect_Op"], [244, 3, 1, "", "kLastOp"], [244, 3, 1, "", "kOpCnt"], [244, 3, 1, "", "kReplace_Op"], [244, 3, 1, "", "kReverseDifference_Op"], [244, 3, 1, "", "kUnion_Op"], [244, 3, 1, "", "kXOR_Op"], [244, 2, 1, "", "op"], [244, 2, 1, "", "quickContains"], [244, 2, 1, "", "quickReject"], [244, 2, 1, "", "readFromMemory"], [244, 2, 1, "", "set"], [244, 2, 1, "", "setEmpty"], [244, 2, 1, "", "setPath"], [244, 2, 1, "", "setRect"], [244, 2, 1, "", "setRects"], [244, 2, 1, "", "setRegion"], [244, 2, 1, "", "spanerator"], [244, 2, 1, "", "swap"], [244, 2, 1, "", "translate"], [244, 2, 1, "", "writeToMemory"]], "skia.Region.Cliperator": [[245, 2, 1, "", "__init__"], [245, 2, 1, "", "done"], [245, 2, 1, "", "next"], [245, 2, 1, "", "rect"]], "skia.Region.Iterator": [[246, 2, 1, "", "__init__"], [246, 2, 1, "", "done"], [246, 2, 1, "", "next"], [246, 2, 1, "", "rect"], [246, 2, 1, "", "reset"], [246, 2, 1, "", "rewind"], [246, 2, 1, "", "rgn"]], "skia.Region.Op": [[247, 2, 1, "", "__init__"], [247, 3, 1, "", "kDifference_Op"], [247, 3, 1, "", "kIntersect_Op"], [247, 3, 1, "", "kLastOp"], [247, 3, 1, "", "kReplace_Op"], [247, 3, 1, "", "kReverseDifference_Op"], [247, 3, 1, "", "kUnion_Op"], [247, 3, 1, "", "kXOR_Op"], [247, 3, 1, "", "name"], [247, 3, 1, "", "value"]], "skia.Region.Spanerator": [[248, 2, 1, "", "__init__"], [248, 2, 1, "", "next"]], "skia.SVGCanvas": [[249, 2, 1, "", "Make"], [249, 2, 1, "", "__init__"], [249, 3, 1, "", "kConvertTextToPaths_Flag"], [249, 3, 1, "", "kNoPrettyXML_Flag"]], "skia.SVGDOM": [[250, 2, 1, "", "MakeFromStream"], [250, 2, 1, "", "__init__"], [250, 2, 1, "", "containerSize"], [250, 2, 1, "", "ref"], [250, 2, 1, "", "render"], [250, 2, 1, "", "setContainerSize"], [250, 2, 1, "", "unique"], [250, 2, 1, "", "unref"]], "skia.Shader": [[251, 2, 1, "", "Deserialize"], [252, 1, 1, "", "GradientInfo"], [253, 1, 1, "", "GradientType"], [254, 1, 1, "", "Type"], [251, 2, 1, "", "__init__"], [251, 2, 1, "", "asAGradient"], [251, 2, 1, "", "getFlattenableType"], [251, 2, 1, "", "getTypeName"], [251, 2, 1, "", "isAImage"], [251, 2, 1, "", "isOpaque"], [251, 3, 1, "", "kColorFilter_Type"], [251, 3, 1, "", "kColor_GradientType"], [251, 3, 1, "", "kConical_GradientType"], [251, 3, 1, "", "kDrawLooper_Type"], [251, 3, 1, "", "kDrawable_Type"], [251, 3, 1, "", "kImageFilter_Type"], [251, 3, 1, "", "kLast_GradientType"], [251, 3, 1, "", "kLinear_GradientType"], [251, 3, 1, "", "kMaskFilter_Type"], [251, 3, 1, "", "kNone_GradientType"], [251, 3, 1, "", "kPathEffect_Type"], [251, 3, 1, "", "kPixelRef_Type"], [251, 3, 1, "", "kRadial_GradientType"], [251, 3, 1, "", "kShaderBase_Type"], [251, 3, 1, "", "kSweep_GradientType"], [251, 3, 1, "", "kUnused_Type"], [251, 3, 1, "", "kUnused_Type2"], [251, 3, 1, "", "kUnused_Type3"], [251, 3, 1, "", "kUnused_Type4"], [251, 2, 1, "", "makeWithColorFilter"], [251, 2, 1, "", "makeWithLocalMatrix"], [251, 2, 1, "", "ref"], [251, 2, 1, "", "serialize"], [251, 2, 1, "", "unique"], [251, 2, 1, "", "unref"]], "skia.Shader.GradientInfo": [[252, 2, 1, "", "__init__"], [252, 3, 1, "", "fColorCount"], [252, 3, 1, "", "fColorOffsets"], [252, 3, 1, "", "fColors"], [252, 3, 1, "", "fGradientFlags"], [252, 3, 1, "", "fPoint"], [252, 3, 1, "", "fRadius"], [252, 3, 1, "", "fTileMode"]], "skia.Shader.GradientType": [[253, 2, 1, "", "__init__"], [253, 3, 1, "", "kColor_GradientType"], [253, 3, 1, "", "kConical_GradientType"], [253, 3, 1, "", "kLast_GradientType"], [253, 3, 1, "", "kLinear_GradientType"], [253, 3, 1, "", "kNone_GradientType"], [253, 3, 1, "", "kRadial_GradientType"], [253, 3, 1, "", "kSweep_GradientType"], [253, 3, 1, "", "name"], [253, 3, 1, "", "value"]], "skia.Shader.Type": [[254, 2, 1, "", "__init__"], [254, 3, 1, "", "kColorFilter_Type"], [254, 3, 1, "", "kDrawLooper_Type"], [254, 3, 1, "", "kDrawable_Type"], [254, 3, 1, "", "kImageFilter_Type"], [254, 3, 1, "", "kMaskFilter_Type"], [254, 3, 1, "", "kPathEffect_Type"], [254, 3, 1, "", "kPixelRef_Type"], [254, 3, 1, "", "kShaderBase_Type"], [254, 3, 1, "", "kUnused_Type"], [254, 3, 1, "", "kUnused_Type2"], [254, 3, 1, "", "kUnused_Type3"], [254, 3, 1, "", "kUnused_Type4"], [254, 3, 1, "", "name"], [254, 3, 1, "", "value"]], "skia.ShaderMaskFilter": [[255, 2, 1, "", "Make"], [255, 2, 1, "", "__init__"]], "skia.Shaders": [[256, 2, 1, "", "Blend"], [256, 2, 1, "", "Color"], [256, 2, 1, "", "Empty"], [256, 2, 1, "", "Lerp"], [256, 2, 1, "", "__init__"]], "skia.Size": [[257, 2, 1, "", "Make"], [257, 2, 1, "", "MakeEmpty"], [257, 2, 1, "", "__init__"], [257, 2, 1, "", "equals"], [257, 3, 1, "", "fHeight"], [257, 3, 1, "", "fWidth"], [257, 2, 1, "", "height"], [257, 2, 1, "", "isEmpty"], [257, 2, 1, "", "isZero"], [257, 2, 1, "", "set"], [257, 2, 1, "", "setEmpty"], [257, 2, 1, "", "toCeil"], [257, 2, 1, "", "toFloor"], [257, 2, 1, "", "toRound"], [257, 2, 1, "", "width"]], "skia.Stream": [[258, 2, 1, "", "MakeFromFile"], [258, 2, 1, "", "__init__"], [258, 2, 1, "", "duplicate"], [258, 2, 1, "", "fork"], [258, 2, 1, "", "getLength"], [258, 2, 1, "", "getMemoryBase"], [258, 2, 1, "", "getPosition"], [258, 2, 1, "", "hasLength"], [258, 2, 1, "", "hasPosition"], [258, 2, 1, "", "isAtEnd"], [258, 2, 1, "", "move"], [258, 2, 1, "", "peek"], [258, 2, 1, "", "read"], [258, 2, 1, "", "readBool"], [258, 2, 1, "", "readPackedUInt"], [258, 2, 1, "", "readS16"], [258, 2, 1, "", "readS32"], [258, 2, 1, "", "readS8"], [258, 2, 1, "", "readScalar"], [258, 2, 1, "", "readU16"], [258, 2, 1, "", "readU32"], [258, 2, 1, "", "readU8"], [258, 2, 1, "", "rewind"], [258, 2, 1, "", "seek"], [258, 2, 1, "", "skip"]], "skia.StreamAsset": [[259, 2, 1, "", "MakeFromFile"], [259, 2, 1, "", "__init__"], [259, 2, 1, "", "duplicate"], [259, 2, 1, "", "fork"], [259, 2, 1, "", "getLength"], [259, 2, 1, "", "getMemoryBase"], [259, 2, 1, "", "getPosition"], [259, 2, 1, "", "hasLength"], [259, 2, 1, "", "hasPosition"], [259, 2, 1, "", "isAtEnd"], [259, 2, 1, "", "move"], [259, 2, 1, "", "peek"], [259, 2, 1, "", "read"], [259, 2, 1, "", "readBool"], [259, 2, 1, "", "readPackedUInt"], [259, 2, 1, "", "readS16"], [259, 2, 1, "", "readS32"], [259, 2, 1, "", "readS8"], [259, 2, 1, "", "readScalar"], [259, 2, 1, "", "readU16"], [259, 2, 1, "", "readU32"], [259, 2, 1, "", "readU8"], [259, 2, 1, "", "rewind"], [259, 2, 1, "", "seek"], [259, 2, 1, "", "skip"]], "skia.StreamMemory": [[260, 2, 1, "", "MakeFromFile"], [260, 2, 1, "", "__init__"], [260, 2, 1, "", "duplicate"], [260, 2, 1, "", "fork"], [260, 2, 1, "", "getLength"], [260, 2, 1, "", "getMemoryBase"], [260, 2, 1, "", "getPosition"], [260, 2, 1, "", "hasLength"], [260, 2, 1, "", "hasPosition"], [260, 2, 1, "", "isAtEnd"], [260, 2, 1, "", "move"], [260, 2, 1, "", "peek"], [260, 2, 1, "", "read"], [260, 2, 1, "", "readBool"], [260, 2, 1, "", "readPackedUInt"], [260, 2, 1, "", "readS16"], [260, 2, 1, "", "readS32"], [260, 2, 1, "", "readS8"], [260, 2, 1, "", "readScalar"], [260, 2, 1, "", "readU16"], [260, 2, 1, "", "readU32"], [260, 2, 1, "", "readU8"], [260, 2, 1, "", "rewind"], [260, 2, 1, "", "seek"], [260, 2, 1, "", "skip"]], "skia.StreamRewindable": [[261, 2, 1, "", "MakeFromFile"], [261, 2, 1, "", "__init__"], [261, 2, 1, "", "duplicate"], [261, 2, 1, "", "fork"], [261, 2, 1, "", "getLength"], [261, 2, 1, "", "getMemoryBase"], [261, 2, 1, "", "getPosition"], [261, 2, 1, "", "hasLength"], [261, 2, 1, "", "hasPosition"], [261, 2, 1, "", "isAtEnd"], [261, 2, 1, "", "move"], [261, 2, 1, "", "peek"], [261, 2, 1, "", "read"], [261, 2, 1, "", "readBool"], [261, 2, 1, "", "readPackedUInt"], [261, 2, 1, "", "readS16"], [261, 2, 1, "", "readS32"], [261, 2, 1, "", "readS8"], [261, 2, 1, "", "readScalar"], [261, 2, 1, "", "readU16"], [261, 2, 1, "", "readU32"], [261, 2, 1, "", "readU8"], [261, 2, 1, "", "rewind"], [261, 2, 1, "", "seek"], [261, 2, 1, "", "skip"]], "skia.StreamSeekable": [[262, 2, 1, "", "MakeFromFile"], [262, 2, 1, "", "__init__"], [262, 2, 1, "", "duplicate"], [262, 2, 1, "", "fork"], [262, 2, 1, "", "getLength"], [262, 2, 1, "", "getMemoryBase"], [262, 2, 1, "", "getPosition"], [262, 2, 1, "", "hasLength"], [262, 2, 1, "", "hasPosition"], [262, 2, 1, "", "isAtEnd"], [262, 2, 1, "", "move"], [262, 2, 1, "", "peek"], [262, 2, 1, "", "read"], [262, 2, 1, "", "readBool"], [262, 2, 1, "", "readPackedUInt"], [262, 2, 1, "", "readS16"], [262, 2, 1, "", "readS32"], [262, 2, 1, "", "readS8"], [262, 2, 1, "", "readScalar"], [262, 2, 1, "", "readU16"], [262, 2, 1, "", "readU32"], [262, 2, 1, "", "readU8"], [262, 2, 1, "", "rewind"], [262, 2, 1, "", "seek"], [262, 2, 1, "", "skip"]], "skia.String": [[263, 2, 1, "", "__init__"], [263, 2, 1, "", "append"], [263, 2, 1, "", "appendHex"], [263, 2, 1, "", "appendS32"], [263, 2, 1, "", "appendS64"], [263, 2, 1, "", "appendScalar"], [263, 2, 1, "", "appendU32"], [263, 2, 1, "", "appendU64"], [263, 2, 1, "", "appendUnichar"], [263, 2, 1, "", "c_str"], [263, 2, 1, "", "contains"], [263, 2, 1, "", "endsWith"], [263, 2, 1, "", "equals"], [263, 2, 1, "", "find"], [263, 2, 1, "", "findLastOf"], [263, 2, 1, "", "insert"], [263, 2, 1, "", "insertHex"], [263, 2, 1, "", "insertS32"], [263, 2, 1, "", "insertS64"], [263, 2, 1, "", "insertScalar"], [263, 2, 1, "", "insertU32"], [263, 2, 1, "", "insertU64"], [263, 2, 1, "", "insertUnichar"], [263, 2, 1, "", "isEmpty"], [263, 2, 1, "", "prepend"], [263, 2, 1, "", "prependHex"], [263, 2, 1, "", "prependS32"], [263, 2, 1, "", "prependS64"], [263, 2, 1, "", "prependScalar"], [263, 2, 1, "", "prependUnichar"], [263, 2, 1, "", "remove"], [263, 2, 1, "", "reset"], [263, 2, 1, "", "resize"], [263, 2, 1, "", "set"], [263, 2, 1, "", "size"], [263, 2, 1, "", "startsWith"], [263, 2, 1, "", "swap"]], "skia.StrokePathEffect": [[264, 2, 1, "", "Make"], [264, 2, 1, "", "__init__"]], "skia.StrokeRec": [[265, 2, 1, "", "GetInflationRadius"], [266, 1, 1, "", "InitStyle"], [267, 1, 1, "", "Style"], [265, 2, 1, "", "__init__"], [265, 2, 1, "", "applyToPaint"], [265, 2, 1, "", "applyToPath"], [265, 2, 1, "", "getCap"], [265, 2, 1, "", "getInflationRadius"], [265, 2, 1, "", "getJoin"], [265, 2, 1, "", "getMiter"], [265, 2, 1, "", "getResScale"], [265, 2, 1, "", "getStyle"], [265, 2, 1, "", "getWidth"], [265, 2, 1, "", "hasEqualEffect"], [265, 2, 1, "", "isFillStyle"], [265, 2, 1, "", "isHairlineStyle"], [265, 3, 1, "", "kFill_InitStyle"], [265, 3, 1, "", "kFill_Style"], [265, 3, 1, "", "kHairline_InitStyle"], [265, 3, 1, "", "kHairline_Style"], [265, 3, 1, "", "kStrokeAndFill_Style"], [265, 3, 1, "", "kStroke_Style"], [265, 3, 1, "", "kStyleCount"], [265, 2, 1, "", "needToApply"], [265, 2, 1, "", "setFillStyle"], [265, 2, 1, "", "setHairlineStyle"], [265, 2, 1, "", "setResScale"], [265, 2, 1, "", "setStrokeParams"], [265, 2, 1, "", "setStrokeStyle"]], "skia.StrokeRec.InitStyle": [[266, 2, 1, "", "__init__"], [266, 3, 1, "", "kFill_InitStyle"], [266, 3, 1, "", "kHairline_InitStyle"], [266, 3, 1, "", "name"], [266, 3, 1, "", "value"]], "skia.StrokeRec.Style": [[267, 2, 1, "", "__init__"], [267, 3, 1, "", "kFill_Style"], [267, 3, 1, "", "kHairline_Style"], [267, 3, 1, "", "kStrokeAndFill_Style"], [267, 3, 1, "", "kStroke_Style"], [267, 3, 1, "", "name"], [267, 3, 1, "", "value"]], "skia.Surface": [[269, 1, 1, "", "AsyncReadResult"], [270, 1, 1, "", "BackendHandleAccess"], [271, 1, 1, "", "BackendSurfaceAccess"], [272, 1, 1, "", "ContentChangeMode"], [268, 2, 1, "", "MakeFromBackendRenderTarget"], [268, 2, 1, "", "MakeFromBackendTexture"], [268, 2, 1, "", "MakeNull"], [268, 2, 1, "", "MakeRaster"], [268, 2, 1, "", "MakeRasterDirect"], [268, 2, 1, "", "MakeRasterN32Premul"], [268, 2, 1, "", "MakeRenderTarget"], [273, 1, 1, "", "RescaleGamma"], [268, 2, 1, "", "__init__"], [268, 2, 1, "", "asyncRescaleAndReadPixels"], [268, 2, 1, "", "asyncRescaleAndReadPixelsYUV420"], [268, 2, 1, "", "characterize"], [268, 2, 1, "", "draw"], [268, 2, 1, "", "flush"], [268, 2, 1, "", "flushAndSubmit"], [268, 2, 1, "", "generationID"], [268, 2, 1, "", "getBackendRenderTarget"], [268, 2, 1, "", "getBackendTexture"], [268, 2, 1, "", "getCanvas"], [268, 2, 1, "", "height"], [268, 2, 1, "", "imageInfo"], [268, 2, 1, "", "isCompatible"], [268, 3, 1, "", "kDiscardWrite_BackendHandleAccess"], [268, 3, 1, "", "kDiscard_ContentChangeMode"], [268, 3, 1, "", "kFlushRead_BackendHandleAccess"], [268, 3, 1, "", "kFlushWrite_BackendHandleAccess"], [268, 3, 1, "", "kLinear"], [268, 3, 1, "", "kNoAccess"], [268, 3, 1, "", "kPresent"], [268, 3, 1, "", "kRetain_ContentChangeMode"], [268, 3, 1, "", "kSrc"], [268, 2, 1, "", "makeImageSnapshot"], [268, 2, 1, "", "makeSurface"], [268, 2, 1, "", "notifyContentWillChange"], [268, 2, 1, "", "peekPixels"], [268, 2, 1, "", "props"], [268, 2, 1, "", "readPixels"], [268, 2, 1, "", "recordingContext"], [268, 2, 1, "", "ref"], [268, 2, 1, "", "replaceBackendTexture"], [268, 2, 1, "", "toarray"], [268, 2, 1, "", "unique"], [268, 2, 1, "", "unref"], [268, 2, 1, "", "width"], [268, 2, 1, "", "writePixels"]], "skia.Surface.AsyncReadResult": [[269, 2, 1, "", "__init__"], [269, 2, 1, "", "count"], [269, 2, 1, "", "data"], [269, 2, 1, "", "rowBytes"]], "skia.Surface.BackendHandleAccess": [[270, 2, 1, "", "__init__"], [270, 3, 1, "", "kDiscardWrite_BackendHandleAccess"], [270, 3, 1, "", "kFlushRead_BackendHandleAccess"], [270, 3, 1, "", "kFlushWrite_BackendHandleAccess"], [270, 3, 1, "", "name"], [270, 3, 1, "", "value"]], "skia.Surface.BackendSurfaceAccess": [[271, 2, 1, "", "__init__"], [271, 3, 1, "", "kNoAccess"], [271, 3, 1, "", "kPresent"], [271, 3, 1, "", "name"], [271, 3, 1, "", "value"]], "skia.Surface.ContentChangeMode": [[272, 2, 1, "", "__init__"], [272, 3, 1, "", "kDiscard_ContentChangeMode"], [272, 3, 1, "", "kRetain_ContentChangeMode"], [272, 3, 1, "", "name"], [272, 3, 1, "", "value"]], "skia.Surface.RescaleGamma": [[273, 2, 1, "", "__init__"], [273, 3, 1, "", "kLinear"], [273, 3, 1, "", "kSrc"], [273, 3, 1, "", "name"], [273, 3, 1, "", "value"]], "skia.SurfaceCharacterization": [[274, 2, 1, "", "__init__"], [274, 2, 1, "", "cacheMaxResourceBytes"], [274, 2, 1, "", "colorSpace"], [274, 2, 1, "", "createBackendFormat"], [274, 2, 1, "", "createColorSpace"], [274, 2, 1, "", "createFBO0"], [274, 2, 1, "", "createResized"], [274, 2, 1, "", "height"], [274, 2, 1, "", "isMipMapped"], [274, 2, 1, "", "isTextureable"], [274, 2, 1, "", "isValid"], [274, 2, 1, "", "refColorSpace"], [274, 2, 1, "", "surfaceProps"], [274, 2, 1, "", "usesGLFBO0"], [274, 2, 1, "", "vulkanSecondaryCBCompatible"], [274, 2, 1, "", "width"]], "skia.SurfaceProps": [[276, 1, 1, "", "Flags"], [277, 1, 1, "", "InitType"], [275, 2, 1, "", "__init__"], [275, 2, 1, "", "flags"], [275, 2, 1, "", "isUseDeviceIndependentFonts"], [275, 3, 1, "", "kLegacyFontHost_InitType"], [275, 3, 1, "", "kUseDeviceIndependentFonts_Flag"], [275, 3, 1, "", "kUseDistanceFieldFonts_Flag"], [275, 2, 1, "", "pixelGeometry"]], "skia.SurfaceProps.Flags": [[276, 2, 1, "", "__init__"], [276, 3, 1, "", "kUseDeviceIndependentFonts_Flag"], [276, 3, 1, "", "name"], [276, 3, 1, "", "value"]], "skia.SurfaceProps.InitType": [[277, 2, 1, "", "__init__"], [277, 3, 1, "", "kLegacyFontHost_InitType"], [277, 3, 1, "", "name"], [277, 3, 1, "", "value"]], "skia.TableColorFilter": [[278, 2, 1, "", "Make"], [278, 2, 1, "", "MakeARGB"], [278, 2, 1, "", "__init__"]], "skia.TableMaskFilter": [[279, 2, 1, "", "Create"], [279, 2, 1, "", "CreateClip"], [279, 2, 1, "", "CreateGamma"], [279, 2, 1, "", "MakeClipTable"], [279, 2, 1, "", "MakeGammaTable"], [279, 2, 1, "", "__init__"]], "skia.TextBlob": [[280, 2, 1, "", "Deserialize"], [281, 1, 1, "", "Iter"], [280, 2, 1, "", "MakeFromPosText"], [280, 2, 1, "", "MakeFromPosTextH"], [280, 2, 1, "", "MakeFromRSXform"], [280, 2, 1, "", "MakeFromString"], [280, 2, 1, "", "MakeFromText"], [280, 2, 1, "", "__init__"], [280, 2, 1, "", "bounds"], [280, 2, 1, "", "deref"], [280, 2, 1, "", "getIntercepts"], [280, 2, 1, "", "ref"], [280, 2, 1, "", "refCntGreaterThan"], [280, 2, 1, "", "serialize"], [280, 2, 1, "", "unique"], [280, 2, 1, "", "uniqueID"], [280, 2, 1, "", "unref"]], "skia.TextBlob.Iter": [[282, 1, 1, "", "Run"], [281, 2, 1, "", "__init__"], [281, 2, 1, "", "next"]], "skia.TextBlob.Iter.Run": [[282, 2, 1, "", "__init__"], [282, 3, 1, "", "fGlyphCount"], [282, 3, 1, "", "fGlyphIndices"], [282, 3, 1, "", "fTypeface"]], "skia.TextBlobBuilder": [[283, 2, 1, "", "__init__"], [283, 2, 1, "", "allocRun"], [283, 2, 1, "", "allocRunPos"], [283, 2, 1, "", "allocRunPosH"], [283, 2, 1, "", "allocRunRSXform"], [283, 2, 1, "", "make"]], "skia.TextEncoding": [[284, 2, 1, "", "__init__"], [284, 3, 1, "", "kGlyphID"], [284, 3, 1, "", "kUTF16"], [284, 3, 1, "", "kUTF32"], [284, 3, 1, "", "kUTF8"], [284, 3, 1, "", "name"], [284, 3, 1, "", "value"]], "skia.TileImageFilter": [[285, 2, 1, "", "Make"], [285, 2, 1, "", "__init__"]], "skia.TileMode": [[286, 2, 1, "", "__init__"], [286, 3, 1, "", "kClamp"], [286, 3, 1, "", "kDecal"], [286, 3, 1, "", "kLastTileMode"], [286, 3, 1, "", "kMirror"], [286, 3, 1, "", "kRepeat"], [286, 3, 1, "", "name"], [286, 3, 1, "", "value"]], "skia.TrimPathEffect": [[287, 2, 1, "", "Make"], [288, 1, 1, "", "Mode"], [287, 2, 1, "", "__init__"], [287, 3, 1, "", "kInverted"], [287, 3, 1, "", "kNormal"]], "skia.TrimPathEffect.Mode": [[288, 2, 1, "", "__init__"], [288, 3, 1, "", "kInverted"], [288, 3, 1, "", "kNormal"], [288, 3, 1, "", "name"], [288, 3, 1, "", "value"]], "skia.Typeface": [[289, 2, 1, "", "Equal"], [289, 2, 1, "", "MakeDefault"], [289, 2, 1, "", "MakeDeserialize"], [289, 2, 1, "", "MakeFromData"], [289, 2, 1, "", "MakeFromFile"], [289, 2, 1, "", "MakeFromName"], [290, 1, 1, "", "SerializeBehavior"], [289, 2, 1, "", "UniqueID"], [289, 2, 1, "", "__init__"], [289, 2, 1, "", "copyTableData"], [289, 2, 1, "", "countGlyphs"], [289, 2, 1, "", "countTables"], [289, 2, 1, "", "fontStyle"], [289, 2, 1, "", "getBounds"], [289, 2, 1, "", "getFamilyName"], [289, 2, 1, "", "getFamilyNames"], [289, 2, 1, "", "getKerningPairAdjustments"], [289, 2, 1, "", "getPostScriptName"], [289, 2, 1, "", "getTableData"], [289, 2, 1, "", "getTableSize"], [289, 2, 1, "", "getTableTags"], [289, 2, 1, "", "getUnitsPerEm"], [289, 2, 1, "", "getVariationDesignParameters"], [289, 2, 1, "", "getVariationDesignPosition"], [289, 2, 1, "", "isBold"], [289, 2, 1, "", "isFixedPitch"], [289, 2, 1, "", "isItalic"], [289, 3, 1, "", "kDoIncludeData"], [289, 3, 1, "", "kDontIncludeData"], [289, 3, 1, "", "kIncludeDataIfLocal"], [289, 2, 1, "", "makeClone"], [289, 2, 1, "", "ref"], [289, 2, 1, "", "serialize"], [289, 2, 1, "", "unicharToGlyph"], [289, 2, 1, "", "unicharsToGlyphs"], [289, 2, 1, "", "unique"], [289, 2, 1, "", "uniqueID"], [289, 2, 1, "", "unref"]], "skia.Typeface.SerializeBehavior": [[290, 2, 1, "", "__init__"], [290, 3, 1, "", "kDoIncludeData"], [290, 3, 1, "", "kDontIncludeData"], [290, 3, 1, "", "kIncludeDataIfLocal"], [290, 3, 1, "", "name"], [290, 3, 1, "", "value"]], "skia.Vertices": [[291, 2, 1, "", "MakeCopy"], [292, 1, 1, "", "VertexMode"], [291, 2, 1, "", "__init__"], [291, 2, 1, "", "approximateSize"], [291, 2, 1, "", "bounds"], [291, 2, 1, "", "deref"], [291, 3, 1, "", "kLast_VertexMode"], [291, 3, 1, "", "kTriangleFan_VertexMode"], [291, 3, 1, "", "kTriangleStrip_VertexMode"], [291, 3, 1, "", "kTriangles_VertexMode"], [291, 2, 1, "", "ref"], [291, 2, 1, "", "refCntGreaterThan"], [291, 2, 1, "", "unique"], [291, 2, 1, "", "uniqueID"], [291, 2, 1, "", "unref"]], "skia.Vertices.VertexMode": [[292, 2, 1, "", "__init__"], [292, 3, 1, "", "kLast_VertexMode"], [292, 3, 1, "", "kTriangleFan_VertexMode"], [292, 3, 1, "", "kTriangleStrip_VertexMode"], [292, 3, 1, "", "kTriangles_VertexMode"], [292, 3, 1, "", "name"], [292, 3, 1, "", "value"]], "skia.VkFormat": [[293, 2, 1, "", "__init__"], [293, 3, 1, "", "name"], [293, 3, 1, "", "value"]], "skia.VkImageLayout": [[294, 2, 1, "", "__init__"], [294, 3, 1, "", "name"], [294, 3, 1, "", "value"]], "skia.WStream": [[295, 2, 1, "", "SizeOfPackedUInt"], [295, 2, 1, "", "__init__"], [295, 2, 1, "", "bytesWritten"], [295, 2, 1, "", "flush"], [295, 2, 1, "", "newline"], [295, 2, 1, "", "write"], [295, 2, 1, "", "write16"], [295, 2, 1, "", "write32"], [295, 2, 1, "", "write8"], [295, 2, 1, "", "writeBigDecAsText"], [295, 2, 1, "", "writeBool"], [295, 2, 1, "", "writeDecAsText"], [295, 2, 1, "", "writeHexAsText"], [295, 2, 1, "", "writePackedUInt"], [295, 2, 1, "", "writeScalar"], [295, 2, 1, "", "writeScalarAsText"], [295, 2, 1, "", "writeStream"], [295, 2, 1, "", "writeText"]], "skia.XfermodeImageFilter": [[296, 2, 1, "", "Make"], [296, 2, 1, "", "__init__"]], "skia.YUVAIndex": [[297, 2, 1, "", "AreValidIndices"], [298, 1, 1, "", "Index"], [297, 2, 1, "", "__init__"], [297, 3, 1, "", "fChannel"], [297, 3, 1, "", "fIndex"], [297, 3, 1, "", "kA_Index"], [297, 3, 1, "", "kIndexCount"], [297, 3, 1, "", "kLast_Index"], [297, 3, 1, "", "kU_Index"], [297, 3, 1, "", "kV_Index"], [297, 3, 1, "", "kY_Index"]], "skia.YUVAIndex.Index": [[298, 2, 1, "", "__init__"], [298, 3, 1, "", "kA_Index"], [298, 3, 1, "", "kLast_Index"], [298, 3, 1, "", "kU_Index"], [298, 3, 1, "", "kV_Index"], [298, 3, 1, "", "kY_Index"], [298, 3, 1, "", "name"], [298, 3, 1, "", "value"]], "skia.YUVAInfo": [[299, 2, 1, "", "HasAlpha"], [299, 2, 1, "", "NumChannelsInPlane"], [299, 2, 1, "", "NumPlanes"], [300, 1, 1, "", "PlanarConfig"], [299, 2, 1, "", "PlaneDimensions"], [301, 1, 1, "", "Siting"], [299, 2, 1, "", "__init__"], [299, 2, 1, "", "computeTotalBytes"], [299, 2, 1, "", "dimensions"], [299, 2, 1, "", "hasAlpha"], [299, 2, 1, "", "height"], [299, 3, 1, "", "kCentered"], [299, 3, 1, "", "kMaxPlanes"], [299, 3, 1, "", "kUYVA_4444"], [299, 3, 1, "", "kUYV_444"], [299, 3, 1, "", "kYUVA_4444"], [299, 3, 1, "", "kYUV_444"], [299, 3, 1, "", "kY_UV_420"], [299, 3, 1, "", "kY_UV_A_4204"], [299, 3, 1, "", "kY_U_V_410"], [299, 3, 1, "", "kY_U_V_411"], [299, 3, 1, "", "kY_U_V_420"], [299, 3, 1, "", "kY_U_V_422"], [299, 3, 1, "", "kY_U_V_440"], [299, 3, 1, "", "kY_U_V_444"], [299, 3, 1, "", "kY_U_V_A_4204"], [299, 3, 1, "", "kY_VU_420"], [299, 3, 1, "", "kY_VU_A_4204"], [299, 3, 1, "", "kY_V_U_420"], [299, 3, 1, "", "kY_V_U_A_4204"], [299, 2, 1, "", "numChannelsInPlane"], [299, 2, 1, "", "numPlanes"], [299, 2, 1, "", "origin"], [299, 2, 1, "", "planarConfig"], [299, 2, 1, "", "planeDimensions"], [299, 2, 1, "", "sitingX"], [299, 2, 1, "", "sitingY"], [299, 2, 1, "", "width"], [299, 2, 1, "", "yuvColorSpace"]], "skia.YUVAInfo.PlanarConfig": [[300, 2, 1, "", "__init__"], [300, 3, 1, "", "kUYVA_4444"], [300, 3, 1, "", "kUYV_444"], [300, 3, 1, "", "kYUVA_4444"], [300, 3, 1, "", "kYUV_444"], [300, 3, 1, "", "kY_UV_420"], [300, 3, 1, "", "kY_UV_A_4204"], [300, 3, 1, "", "kY_U_V_410"], [300, 3, 1, "", "kY_U_V_411"], [300, 3, 1, "", "kY_U_V_420"], [300, 3, 1, "", "kY_U_V_422"], [300, 3, 1, "", "kY_U_V_440"], [300, 3, 1, "", "kY_U_V_444"], [300, 3, 1, "", "kY_U_V_A_4204"], [300, 3, 1, "", "kY_VU_420"], [300, 3, 1, "", "kY_VU_A_4204"], [300, 3, 1, "", "kY_V_U_420"], [300, 3, 1, "", "kY_V_U_A_4204"], [300, 3, 1, "", "name"], [300, 3, 1, "", "value"]], "skia.YUVAInfo.Siting": [[301, 2, 1, "", "__init__"], [301, 3, 1, "", "kCentered"], [301, 3, 1, "", "name"], [301, 3, 1, "", "value"]], "skia.YUVAPixmapInfo": [[303, 1, 1, "", "DataType"], [302, 2, 1, "", "DefaultColorTypeForDataType"], [302, 2, 1, "", "NumChannelsAndDataType"], [304, 1, 1, "", "SupportedDataTypes"], [302, 2, 1, "", "__init__"], [302, 2, 1, "", "computeTotalBytes"], [302, 2, 1, "", "dataType"], [302, 2, 1, "", "initPixmapsFromSingleAllocation"], [302, 2, 1, "", "isSupported"], [302, 2, 1, "", "isValid"], [302, 3, 1, "", "kFloat16"], [302, 3, 1, "", "kLast"], [302, 3, 1, "", "kMaxPlanes"], [302, 3, 1, "", "kUnorm10_Unorm2"], [302, 3, 1, "", "kUnorm16"], [302, 3, 1, "", "kUnorm8"], [302, 2, 1, "", "numPlanes"], [302, 2, 1, "", "planeInfo"], [302, 2, 1, "", "rowBytes"], [302, 2, 1, "", "yuvColorSpace"], [302, 2, 1, "", "yuvaInfo"]], "skia.YUVAPixmapInfo.DataType": [[303, 2, 1, "", "__init__"], [303, 3, 1, "", "kFloat16"], [303, 3, 1, "", "kLast"], [303, 3, 1, "", "kUnorm10_Unorm2"], [303, 3, 1, "", "kUnorm16"], [303, 3, 1, "", "kUnorm8"], [303, 3, 1, "", "name"], [303, 3, 1, "", "value"]], "skia.YUVAPixmapInfo.SupportedDataTypes": [[304, 2, 1, "", "All"], [304, 2, 1, "", "__init__"], [304, 2, 1, "", "enableDataType"], [304, 2, 1, "", "supported"]], "skia.YUVAPixmaps": [[305, 2, 1, "", "Allocate"], [305, 2, 1, "", "FromData"], [305, 2, 1, "", "FromExternalMemory"], [305, 2, 1, "", "FromExternalPixmaps"], [305, 2, 1, "", "__init__"], [305, 2, 1, "", "isValid"], [305, 2, 1, "", "numPlanes"], [305, 2, 1, "", "plane"], [305, 2, 1, "", "planes"], [305, 2, 1, "", "toLegacy"], [305, 2, 1, "", "yuvaInfo"]], "skia.YUVASizeInfo": [[306, 2, 1, "", "__init__"], [306, 2, 1, "", "computeTotalBytes"], [306, 3, 1, "", "fOrigin"], [306, 3, 1, "", "fSizes"], [306, 3, 1, "", "fWidthBytes"]], "skia.YUVColorSpace": [[307, 2, 1, "", "__init__"], [307, 3, 1, "", "kBT2020_YUVColorSpace"], [307, 3, 1, "", "kIdentity_YUVColorSpace"], [307, 3, 1, "", "kJPEG_YUVColorSpace"], [307, 3, 1, "", "kLastEnum_YUVColorSpace"], [307, 3, 1, "", "kRec601_YUVColorSpace"], [307, 3, 1, "", "kRec709_YUVColorSpace"], [307, 3, 1, "", "name"], [307, 3, 1, "", "value"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"develop": 0, "python": [0, 1, 310], "bind": 0, "design": 0, "contribut": 0, "skia": [1, 4], "document": [1, 2, 73], "indic": 1, "tabl": [1, 311], "instal": 2, "pypi": 2, "distribut": 2, "build": 2, "instruct": 2, "linux": 2, "maco": 2, "window": [2, 308], "test": 2, "refer": 3, "function": 4, "alphathresholdfilt": 5, "method": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "alphatyp": 6, "attribut": [6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 99, 100, 101, 102, 103, 105, 111, 116, 117, 118, 119, 121, 123, 127, 129, 130, 131, 132, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 235, 236, 237, 238, 239, 240, 241, 244, 247, 249, 251, 252, 253, 254, 257, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 306, 307], "applyperspectiveclip": 7, "arithmeticimagefilt": 8, "autocanvasrestor": 9, "bbhfactori": 10, "bboxhierarchi": [11, 12], "metadata": [12, 186], "backingfit": 13, "bitmap": [14, 15, 311], "allocflag": 15, "blendmod": 16, "blendmodecoeff": 17, "blurimagefilt": [18, 19], "tilemod": [19, 286], "blurmaskfilt": 20, "blurstyl": 21, "budget": 22, "canva": [23, 24, 25, 26, 27, 28, 29, 30, 308, 310], "lattic": [24, 25], "recttyp": 25, "pointmod": 26, "quadaaflag": 27, "savelayerflag": 28, "savelayerrec": 29, "srcrectconstraint": 30, "clipop": 31, "codec": [32, 33, 34, 35, 36, 37, 38, 39], "disposalmethod": 33, "frameinfo": 34, "option": 35, "result": 36, "scanlineord": 37, "selectionpolici": 38, "zeroiniti": 39, "color4f": 40, "colorchannel": 41, "colorchannelflag": 42, "colorfilt": [43, 44, 45, 47, 311], "flag": [44, 51, 141, 276], "type": [45, 52, 61, 70, 75, 86, 157, 166, 171, 206, 212, 221, 239, 254], "colorfilterimagefilt": 46, "colorinfo": 48, "colormatrix": 49, "colormatrixfilt": [50, 51, 52], "colorspac": 53, "colortyp": 54, "convergemod": 55, "cornerpatheffect": [56, 57, 58, 59, 60, 61], "dashinfo": [57, 66, 162, 201, 208, 217], "dashtyp": [58, 67, 163, 202, 209, 218], "pointdata": [59, 60, 68, 69, 164, 165, 203, 204, 210, 211, 219, 220], "pointflag": [60, 69, 165, 204, 211, 220], "dashpatheffect": 62, "data": 63, "dilateimagefilt": 64, "discretepatheffect": [65, 66, 67, 68, 69, 70], "displacementmapeffect": [71, 72], "channelselectortyp": 72, "drawabl": [74, 75], "dropshadowimagefilt": [76, 77], "shadowmod": 77, "dynamicmemorywstream": 78, "encodedimageformat": 79, "encodedorigin": 80, "erodeimagefilt": 81, "filestream": 82, "filewstream": 83, "filterqu": 84, "flattan": [85, 86], "font": [87, 88], "edg": 88, "fontargu": [89, 90, 91, 92], "variationposit": [90, 91, 92], "coordin": [91, 92], "fonthint": 93, "fontmetr": [94, 95], "fontmetricsflag": 95, "fontmgr": 96, "fontparamet": [97, 98, 99], "variat": [98, 99], "axi": 99, "fontstyl": [100, 101, 102, 103], "slant": 101, "weight": 102, "width": 103, "fontstyleset": 104, "grbackendapi": 105, "grbackendformat": 106, "grbackendrendertarget": 107, "grbackendsemaphor": 108, "grbackendsurfacemutablest": 109, "grbackendtextur": 110, "grcolortyp": 111, "grcontext": 112, "grcontextopt": 113, "grcontext_bas": 114, "grdirectcontext": 115, "grflushinfo": 116, "grglbackendst": 117, "grglformat": 118, "grglframebufferinfo": 119, "grglinterfac": 120, "grgltextureinfo": 121, "grimagecontext": 122, "grmipmap": 123, "grmockopt": 124, "grmockrendertargetinfo": 125, "grmocktextureinfo": 126, "grprotect": 127, "grrecordingcontext": 128, "grrender": 129, "grsemaphoressubmit": 130, "grsurfaceorigin": 131, "grtexturetyp": 132, "grvkalloc": 133, "grvkbackendcontext": 134, "grvkdrawableinfo": 135, "grvkextensionflag": 136, "grvkfeatureflag": 137, "grvkimageinfo": 138, "grvkycbcrconversioninfo": 139, "gradientshad": [140, 141], "highcontrastconfig": [142, 143], "invertstyl": 143, "highcontrastfilt": 144, "ipoint": 145, "irect": 146, "isiz": 147, "imag": [148, 149, 150, 151, 152], "bitdepth": 149, "cachinghint": 150, "compressiontyp": 151, "legacybitmapmod": 152, "imagefilt": [153, 154, 155, 156, 157, 158, 311], "croprect": [154, 155], "cropedg": 155, "mapdirect": 156, "imageinfo": 159, "lightingimagefilt": 160, "line2dpatheffect": [161, 162, 163, 164, 165, 166], "lumacolorfilt": 167, "m44": 168, "magnifierimagefilt": 169, "maskfilt": [170, 171, 311], "matrix": [172, 173, 174, 311], "scaletofit": 173, "typemask": 174, "matrixpatheffect": 175, "memorystream": 176, "mergepatheffect": 177, "mipmapbuild": 178, "nullwstream": 179, "offsetimagefilt": 180, "opbuild": 181, "overdrawcolorfilt": 182, "pdf": [183, 184, 185, 186, 187, 308], "attributelist": 184, "documentstructuretyp": 185, "structureelementnod": 187, "paint": [188, 189, 190, 191, 311], "cap": 189, "join": 190, "style": [191, 205, 267], "paintimagefilt": 192, "path": [193, 194, 195, 196, 197, 198, 199, 311, 312], "addpathmod": 194, "arcsiz": [195, 214], "iter": [196, 246, 281, 282], "rawit": 197, "segmentmask": 198, "verb": 199, "path1dpatheffect": [200, 201, 202, 203, 204, 205, 206], "path2dpatheffect": [207, 208, 209, 210, 211, 212], "pathbuild": [213, 214], "pathdirect": 215, "patheffect": [216, 217, 218, 219, 220, 221, 311], "pathfilltyp": 222, "pathmeasur": [223, 224], "getposandtan": 224, "pathop": 225, "pathsegmentmask": 226, "pathverb": 227, "perlinnoiseshad": 228, "pictur": [229, 308], "picturerecord": [230, 231], "finishflag": 231, "pixelgeometri": 232, "pixelref": 233, "pixmap": 234, "point": [235, 311], "point3": 236, "rrect": [237, 238, 239], "corner": [238, 311], "rsxform": 240, "rect": 241, "refcnt": 242, "refcntbas": 243, "region": [244, 245, 246, 247, 248], "cliper": 245, "op": 247, "spaner": 248, "svgcanva": 249, "svgdom": 250, "shader": [251, 252, 253, 254, 256, 311], "gradientinfo": 252, "gradienttyp": 253, "shadermaskfilt": 255, "size": 257, "stream": 258, "streamasset": 259, "streammemori": 260, "streamrewind": 261, "streamseek": 262, "string": 263, "strokepatheffect": 264, "strokerec": [265, 266, 267], "initstyl": 266, "surfac": [268, 269, 270, 271, 272, 273], "asyncreadresult": 269, "backendhandleaccess": 270, "backendsurfaceaccess": 271, "contentchangemod": 272, "rescalegamma": 273, "surfacecharacter": 274, "surfaceprop": [275, 276, 277], "inittyp": 277, "tablecolorfilt": 278, "tablemaskfilt": 279, "textblob": [280, 281, 282], "run": 282, "textblobbuild": 283, "textencod": 284, "tileimagefilt": 285, "trimpatheffect": [287, 288], "mode": 288, "typefac": [289, 290], "serializebehavior": 290, "vertic": [291, 292], "vertexmod": 292, "vkformat": 293, "vkimagelayout": 294, "wstream": 295, "xfermodeimagefilt": 296, "yuvaindex": [297, 298], "index": 298, "yuvainfo": [299, 300, 301], "planarconfig": 300, "site": 301, "yuvapixmapinfo": [302, 303, 304], "datatyp": 303, "supporteddatatyp": 304, "yuvapixmap": 305, "yuvasizeinfo": 306, "yuvcolorspac": 307, "creation": 308, "raster": 308, "gpu": 308, "opengl": 308, "svg": 308, "tutori": 309, "notebook": 309, "exampl": 309, "overview": [310, 311, 312], "detail": 310, "more": 310, "draw": 310, "interoper": 310, "api": 310, "glanc": 310, "xfermod": 311, "radial": 311, "gradient": 311, "two": 311, "conic": 311, "sweep": 311, "fractal": 311, "perlin": 311, "nois": 311, "turbul": 311, "compos": 311, "drop": 311, "shadow": 311, "dilat": 311, "erod": 311, "blur": 311, "mask": 311, "filter": 311, "color": 311, "2d": 311, "effect": 311, "line": 311, "1d": 311, "dash": 311, "discret": 311, "sum": 311}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Development": [[0, "development"]], "Python binding design": [[0, "python-binding-design"]], "Contributing": [[0, "contributing"]], "skia-python": [[1, "skia-python"]], "Documentation": [[1, "documentation"], [2, "documentation"]], "Indices and tables": [[1, "indices-and-tables"]], "Install": [[2, "install"]], "PyPI distribution": [[2, "pypi-distribution"]], "Build instruction": [[2, "build-instruction"]], "Linux": [[2, "linux"]], "macOS": [[2, "macos"]], "Windows": [[2, "windows"]], "Testing": [[2, "testing"]], "Reference": [[3, "reference"]], "skia": [[4, "module-skia"]], "Functions": [[4, "functions"]], "AlphaThresholdFilter": [[5, "alphathresholdfilter"]], "Methods": [[5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [9, "methods"], [10, "methods"], [11, "methods"], [12, "methods"], [13, "methods"], [14, "methods"], [15, "methods"], [16, "methods"], [17, "methods"], [18, "methods"], [19, "methods"], [20, "methods"], [21, "methods"], [22, "methods"], [23, "methods"], [24, "methods"], [25, "methods"], [26, "methods"], [27, "methods"], [28, "methods"], [29, "methods"], [30, "methods"], [31, "methods"], [32, "methods"], [33, "methods"], [34, "methods"], [35, "methods"], [36, "methods"], [37, "methods"], [38, "methods"], [39, "methods"], [40, "methods"], [41, "methods"], [42, "methods"], [43, "methods"], [44, "methods"], [45, "methods"], [46, "methods"], [47, "methods"], [48, "methods"], [49, "methods"], [50, "methods"], [51, "methods"], [52, "methods"], [53, "methods"], [54, "methods"], [55, "methods"], [56, "methods"], [57, "methods"], [58, "methods"], [59, "methods"], [60, "methods"], [61, "methods"], [62, "methods"], [63, "methods"], [64, "methods"], [65, "methods"], [66, "methods"], [67, "methods"], [68, "methods"], [69, "methods"], [70, "methods"], [71, "methods"], [72, "methods"], [73, "methods"], [74, "methods"], [75, "methods"], [76, "methods"], [77, "methods"], [78, "methods"], [79, "methods"], [80, "methods"], [81, "methods"], [82, "methods"], [83, "methods"], [84, "methods"], [85, "methods"], [86, "methods"], [87, "methods"], [88, "methods"], [89, "methods"], [90, "methods"], [91, "methods"], [92, "methods"], [93, "methods"], [94, "methods"], [95, "methods"], [96, "methods"], [97, "methods"], [98, "methods"], [99, "methods"], [100, "methods"], [101, "methods"], [102, "methods"], [103, "methods"], [104, "methods"], [105, "methods"], [106, "methods"], [107, "methods"], [108, "methods"], [109, "methods"], [110, "methods"], [111, "methods"], [112, "methods"], [113, "methods"], [114, "methods"], [115, "methods"], [116, "methods"], [117, "methods"], [118, "methods"], [119, "methods"], [120, "methods"], [121, "methods"], [122, "methods"], [123, "methods"], [124, "methods"], [125, "methods"], [126, "methods"], [127, "methods"], [128, "methods"], [129, "methods"], [130, "methods"], [131, "methods"], [132, "methods"], [133, "methods"], [134, "methods"], [135, "methods"], [136, "methods"], [137, "methods"], [138, "methods"], [139, "methods"], [140, "methods"], [141, "methods"], [142, "methods"], [143, "methods"], [144, "methods"], [145, "methods"], [146, "methods"], [147, "methods"], [148, "methods"], [149, "methods"], [150, "methods"], [151, "methods"], [152, "methods"], [153, "methods"], [154, "methods"], [155, "methods"], [156, "methods"], [157, "methods"], [158, "methods"], [159, "methods"], [160, "methods"], [161, "methods"], [162, "methods"], [163, "methods"], [164, "methods"], [165, "methods"], [166, "methods"], [167, "methods"], [168, "methods"], [169, "methods"], [170, "methods"], [171, "methods"], [172, "methods"], [173, "methods"], [174, "methods"], [175, "methods"], [176, "methods"], [177, "methods"], [178, "methods"], [179, "methods"], [180, "methods"], [181, "methods"], [182, "methods"], [183, "methods"], [184, "methods"], [185, "methods"], [186, "methods"], [187, "methods"], [188, "methods"], [189, "methods"], [190, "methods"], [191, "methods"], [192, "methods"], [193, "methods"], [194, "methods"], [195, "methods"], [196, "methods"], [197, "methods"], [198, "methods"], [199, "methods"], [200, "methods"], [201, "methods"], [202, "methods"], [203, "methods"], [204, "methods"], [205, "methods"], [206, "methods"], [207, "methods"], [208, "methods"], [209, "methods"], [210, "methods"], [211, "methods"], [212, "methods"], [213, "methods"], [214, "methods"], [215, "methods"], [216, "methods"], [217, "methods"], [218, "methods"], [219, "methods"], [220, "methods"], [221, "methods"], [222, "methods"], [223, "methods"], [224, "methods"], [225, "methods"], [226, "methods"], [227, "methods"], [228, "methods"], [229, "methods"], [230, "methods"], [231, "methods"], [232, "methods"], [233, "methods"], [234, "methods"], [235, "methods"], [236, "methods"], [237, "methods"], [238, "methods"], [239, "methods"], [240, "methods"], [241, "methods"], [242, "methods"], [243, "methods"], [244, "methods"], [245, "methods"], [246, "methods"], [247, "methods"], [248, "methods"], [249, "methods"], [250, "methods"], [251, "methods"], [252, "methods"], [253, "methods"], [254, "methods"], [255, "methods"], [256, "methods"], [257, "methods"], [258, "methods"], [259, "methods"], [260, "methods"], [261, "methods"], [262, "methods"], [263, "methods"], [264, "methods"], [265, "methods"], [266, "methods"], [267, "methods"], [268, "methods"], [269, "methods"], [270, "methods"], [271, "methods"], [272, "methods"], [273, "methods"], [274, "methods"], [275, "methods"], [276, "methods"], [277, "methods"], [278, "methods"], [279, "methods"], [280, "methods"], [281, "methods"], [282, "methods"], [283, "methods"], [284, "methods"], [285, "methods"], [286, "methods"], [287, "methods"], [288, "methods"], [289, "methods"], [290, "methods"], [291, "methods"], [292, "methods"], [293, "methods"], [294, "methods"], [295, "methods"], [296, "methods"], [297, "methods"], [298, "methods"], [299, "methods"], [300, "methods"], [301, "methods"], [302, "methods"], [303, "methods"], [304, "methods"], [305, "methods"], [306, "methods"], [307, "methods"]], "AlphaType": [[6, "alphatype"]], "Attributes": [[6, "attributes"], [7, "attributes"], [12, "attributes"], [13, "attributes"], [14, "attributes"], [15, "attributes"], [16, "attributes"], [17, "attributes"], [18, "attributes"], [19, "attributes"], [21, "attributes"], [22, "attributes"], [23, "attributes"], [24, "attributes"], [25, "attributes"], [26, "attributes"], [27, "attributes"], [28, "attributes"], [29, "attributes"], [30, "attributes"], [31, "attributes"], [32, "attributes"], [33, "attributes"], [34, "attributes"], [35, "attributes"], [36, "attributes"], [37, "attributes"], [38, "attributes"], [39, "attributes"], [40, "attributes"], [41, "attributes"], [42, "attributes"], [43, "attributes"], [44, "attributes"], [45, "attributes"], [50, "attributes"], [51, "attributes"], [52, "attributes"], [54, "attributes"], [55, "attributes"], [56, "attributes"], [57, "attributes"], [58, "attributes"], [59, "attributes"], [60, "attributes"], [61, "attributes"], [65, "attributes"], [66, "attributes"], [67, "attributes"], [68, "attributes"], [69, "attributes"], [70, "attributes"], [71, "attributes"], [72, "attributes"], [74, "attributes"], [75, "attributes"], [76, "attributes"], [77, "attributes"], [79, "attributes"], [80, "attributes"], [84, "attributes"], [85, "attributes"], [86, "attributes"], [87, "attributes"], [88, "attributes"], [90, "attributes"], [91, "attributes"], [93, "attributes"], [94, "attributes"], [95, "attributes"], [99, "attributes"], [100, "attributes"], [101, "attributes"], [102, "attributes"], [103, "attributes"], [105, "attributes"], [111, "attributes"], [116, "attributes"], [117, "attributes"], [118, "attributes"], [119, "attributes"], [121, "attributes"], [123, "attributes"], [127, "attributes"], [129, "attributes"], [130, "attributes"], [131, "attributes"], [132, "attributes"], [136, "attributes"], [137, "attributes"], [138, "attributes"], [140, "attributes"], [141, "attributes"], [142, "attributes"], [143, "attributes"], [145, "attributes"], [146, "attributes"], [147, "attributes"], [148, "attributes"], [149, "attributes"], [150, "attributes"], [151, "attributes"], [152, "attributes"], [153, "attributes"], [154, "attributes"], [155, "attributes"], [156, "attributes"], [157, "attributes"], [161, "attributes"], [162, "attributes"], [163, "attributes"], [164, "attributes"], [165, "attributes"], [166, "attributes"], [170, "attributes"], [171, "attributes"], [172, "attributes"], [173, "attributes"], [174, "attributes"], [182, "attributes"], [183, "attributes"], [185, "attributes"], [186, "attributes"], [187, "attributes"], [188, "attributes"], [189, "attributes"], [190, "attributes"], [191, "attributes"], [193, "attributes"], [194, "attributes"], [195, "attributes"], [198, "attributes"], [199, "attributes"], [200, "attributes"], [201, "attributes"], [202, "attributes"], [203, "attributes"], [204, "attributes"], [205, "attributes"], [206, "attributes"], [207, "attributes"], [208, "attributes"], [209, "attributes"], [210, "attributes"], [211, "attributes"], [212, "attributes"], [213, "attributes"], [214, "attributes"], [215, "attributes"], [216, "attributes"], [217, "attributes"], [218, "attributes"], [219, "attributes"], [220, "attributes"], [221, "attributes"], [222, "attributes"], [223, "attributes"], [224, "attributes"], [225, "attributes"], [226, "attributes"], [227, "attributes"], [231, "attributes"], [232, "attributes"], [235, "attributes"], [236, "attributes"], [237, "attributes"], [238, "attributes"], [239, "attributes"], [240, "attributes"], [241, "attributes"], [244, "attributes"], [247, "attributes"], [249, "attributes"], [251, "attributes"], [252, "attributes"], [253, "attributes"], [254, "attributes"], [257, "attributes"], [265, "attributes"], [266, "attributes"], [267, "attributes"], [268, "attributes"], [270, "attributes"], [271, "attributes"], [272, "attributes"], [273, "attributes"], [275, "attributes"], [276, "attributes"], [277, "attributes"], [282, "attributes"], [284, "attributes"], [286, "attributes"], [287, "attributes"], [288, "attributes"], [289, "attributes"], [290, "attributes"], [291, "attributes"], [292, "attributes"], [293, "attributes"], [294, "attributes"], [297, "attributes"], [298, "attributes"], [299, "attributes"], [300, "attributes"], [301, "attributes"], [302, "attributes"], [303, "attributes"], [306, "attributes"], [307, "attributes"]], "ApplyPerspectiveClip": [[7, "applyperspectiveclip"]], "ArithmeticImageFilter": [[8, "arithmeticimagefilter"]], "AutoCanvasRestore": [[9, "autocanvasrestore"]], "BBHFactory": [[10, "bbhfactory"]], "BBoxHierarchy": [[11, "bboxhierarchy"]], "BBoxHierarchy.Metadata": [[12, "bboxhierarchy-metadata"]], "BackingFit": [[13, "backingfit"]], "Bitmap": [[14, "bitmap"]], "Bitmap.AllocFlags": [[15, "bitmap-allocflags"]], "BlendMode": [[16, "blendmode"]], "BlendModeCoeff": [[17, "blendmodecoeff"]], "BlurImageFilter": [[18, "blurimagefilter"]], "BlurImageFilter.TileMode": [[19, "blurimagefilter-tilemode"]], "BlurMaskFilter": [[20, "blurmaskfilter"]], "BlurStyle": [[21, "blurstyle"]], "Budgeted": [[22, "budgeted"]], "Canvas": [[23, "canvas"]], "Canvas.Lattice": [[24, "canvas-lattice"]], "Canvas.Lattice.RectType": [[25, "canvas-lattice-recttype"]], "Canvas.PointMode": [[26, "canvas-pointmode"]], "Canvas.QuadAAFlags": [[27, "canvas-quadaaflags"]], "Canvas.SaveLayerFlags": [[28, "canvas-savelayerflags"]], "Canvas.SaveLayerRec": [[29, "canvas-savelayerrec"]], "Canvas.SrcRectConstraint": [[30, "canvas-srcrectconstraint"]], "ClipOp": [[31, "clipop"]], "Codec": [[32, "codec"]], "Codec.DisposalMethod": [[33, "codec-disposalmethod"]], "Codec.FrameInfo": [[34, "codec-frameinfo"]], "Codec.Options": [[35, "codec-options"]], "Codec.Result": [[36, "codec-result"]], "Codec.ScanlineOrder": [[37, "codec-scanlineorder"]], "Codec.SelectionPolicy": [[38, "codec-selectionpolicy"]], "Codec.ZeroInitialized": [[39, "codec-zeroinitialized"]], "Color4f": [[40, "color4f"]], "ColorChannel": [[41, "colorchannel"]], "ColorChannelFlag": [[42, "colorchannelflag"]], "ColorFilter": [[43, "colorfilter"], [311, "colorfilter"]], "ColorFilter.Flags": [[44, "colorfilter-flags"]], "ColorFilter.Type": [[45, "colorfilter-type"]], "ColorFilterImageFilter": [[46, "colorfilterimagefilter"]], "ColorFilters": [[47, "colorfilters"]], "ColorInfo": [[48, "colorinfo"]], "ColorMatrix": [[49, "colormatrix"]], "ColorMatrixFilter": [[50, "colormatrixfilter"]], "ColorMatrixFilter.Flags": [[51, "colormatrixfilter-flags"]], "ColorMatrixFilter.Type": [[52, "colormatrixfilter-type"]], "ColorSpace": [[53, "colorspace"]], "ColorType": [[54, "colortype"]], "ConvergeMode": [[55, "convergemode"]], "CornerPathEffect": [[56, "cornerpatheffect"]], "CornerPathEffect.DashInfo": [[57, "cornerpatheffect-dashinfo"]], "CornerPathEffect.DashType": [[58, "cornerpatheffect-dashtype"]], "CornerPathEffect.PointData": [[59, "cornerpatheffect-pointdata"]], "CornerPathEffect.PointData.PointFlags": [[60, "cornerpatheffect-pointdata-pointflags"]], "CornerPathEffect.Type": [[61, "cornerpatheffect-type"]], "DashPathEffect": [[62, "dashpatheffect"]], "Data": [[63, "data"]], "DilateImageFilter": [[64, "dilateimagefilter"]], "DiscretePathEffect": [[65, "discretepatheffect"]], "DiscretePathEffect.DashInfo": [[66, "discretepatheffect-dashinfo"]], "DiscretePathEffect.DashType": [[67, "discretepatheffect-dashtype"]], "DiscretePathEffect.PointData": [[68, "discretepatheffect-pointdata"]], "DiscretePathEffect.PointData.PointFlags": [[69, "discretepatheffect-pointdata-pointflags"]], "DiscretePathEffect.Type": [[70, "discretepatheffect-type"]], "DisplacementMapEffect": [[71, "displacementmapeffect"]], "DisplacementMapEffect.ChannelSelectorType": [[72, "displacementmapeffect-channelselectortype"]], "Document": [[73, "document"]], "Drawable": [[74, "drawable"]], "Drawable.Type": [[75, "drawable-type"]], "DropShadowImageFilter": [[76, "dropshadowimagefilter"]], "DropShadowImageFilter.ShadowMode": [[77, "dropshadowimagefilter-shadowmode"]], "DynamicMemoryWStream": [[78, "dynamicmemorywstream"]], "EncodedImageFormat": [[79, "encodedimageformat"]], "EncodedOrigin": [[80, "encodedorigin"]], "ErodeImageFilter": [[81, "erodeimagefilter"]], "FILEStream": [[82, "filestream"]], "FILEWStream": [[83, "filewstream"]], "FilterQuality": [[84, "filterquality"]], "Flattanable": [[85, "flattanable"]], "Flattanable.Type": [[86, "flattanable-type"]], "Font": [[87, "font"]], "Font.Edging": [[88, "font-edging"]], "FontArguments": [[89, "fontarguments"]], "FontArguments.VariationPosition": [[90, "fontarguments-variationposition"]], "FontArguments.VariationPosition.Coordinate": [[91, "fontarguments-variationposition-coordinate"]], "FontArguments.VariationPosition.Coordinates": [[92, "fontarguments-variationposition-coordinates"]], "FontHinting": [[93, "fonthinting"]], "FontMetrics": [[94, "fontmetrics"]], "FontMetrics.FontMetricsFlags": [[95, "fontmetrics-fontmetricsflags"]], "FontMgr": [[96, "fontmgr"]], "FontParameters": [[97, "fontparameters"]], "FontParameters.Variation": [[98, "fontparameters-variation"]], "FontParameters.Variation.Axis": [[99, "fontparameters-variation-axis"]], "FontStyle": [[100, "fontstyle"]], "FontStyle.Slant": [[101, "fontstyle-slant"]], "FontStyle.Weight": [[102, "fontstyle-weight"]], "FontStyle.Width": [[103, "fontstyle-width"]], "FontStyleSet": [[104, "fontstyleset"]], "GrBackendApi": [[105, "grbackendapi"]], "GrBackendFormat": [[106, "grbackendformat"]], "GrBackendRenderTarget": [[107, "grbackendrendertarget"]], "GrBackendSemaphore": [[108, "grbackendsemaphore"]], "GrBackendSurfaceMutableState": [[109, "grbackendsurfacemutablestate"]], "GrBackendTexture": [[110, "grbackendtexture"]], "GrColorType": [[111, "grcolortype"]], "GrContext": [[112, "grcontext"]], "GrContextOptions": [[113, "grcontextoptions"]], "GrContext_Base": [[114, "grcontext-base"]], "GrDirectContext": [[115, "grdirectcontext"]], "GrFlushInfo": [[116, "grflushinfo"]], "GrGLBackendState": [[117, "grglbackendstate"]], "GrGLFormat": [[118, "grglformat"]], "GrGLFramebufferInfo": [[119, "grglframebufferinfo"]], "GrGLInterface": [[120, "grglinterface"]], "GrGLTextureInfo": [[121, "grgltextureinfo"]], "GrImageContext": [[122, "grimagecontext"]], "GrMipmapped": [[123, "grmipmapped"]], "GrMockOptions": [[124, "grmockoptions"]], "GrMockRenderTargetInfo": [[125, "grmockrendertargetinfo"]], "GrMockTextureInfo": [[126, "grmocktextureinfo"]], "GrProtected": [[127, "grprotected"]], "GrRecordingContext": [[128, "grrecordingcontext"]], "GrRenderable": [[129, "grrenderable"]], "GrSemaphoresSubmitted": [[130, "grsemaphoressubmitted"]], "GrSurfaceOrigin": [[131, "grsurfaceorigin"]], "GrTextureType": [[132, "grtexturetype"]], "GrVkAlloc": [[133, "grvkalloc"]], "GrVkBackendContext": [[134, "grvkbackendcontext"]], "GrVkDrawableInfo": [[135, "grvkdrawableinfo"]], "GrVkExtensionFlags": [[136, "grvkextensionflags"]], "GrVkFeatureFlags": [[137, "grvkfeatureflags"]], "GrVkImageInfo": [[138, "grvkimageinfo"]], "GrVkYcbcrConversionInfo": [[139, "grvkycbcrconversioninfo"]], "GradientShader": [[140, "gradientshader"]], "GradientShader.Flags": [[141, "gradientshader-flags"]], "HighContrastConfig": [[142, "highcontrastconfig"]], "HighContrastConfig.InvertStyle": [[143, "highcontrastconfig-invertstyle"]], "HighContrastFilter": [[144, "highcontrastfilter"]], "IPoint": [[145, "ipoint"]], "IRect": [[146, "irect"]], "ISize": [[147, "isize"]], "Image": [[148, "image"]], "Image.BitDepth": [[149, "image-bitdepth"]], "Image.CachingHint": [[150, "image-cachinghint"]], "Image.CompressionType": [[151, "image-compressiontype"]], "Image.LegacyBitmapMode": [[152, "image-legacybitmapmode"]], "ImageFilter": [[153, "imagefilter"], [311, "imagefilter"]], "ImageFilter.CropRect": [[154, "imagefilter-croprect"]], "ImageFilter.CropRect.CropEdge": [[155, "imagefilter-croprect-cropedge"]], "ImageFilter.MapDirection": [[156, "imagefilter-mapdirection"]], "ImageFilter.Type": [[157, "imagefilter-type"]], "ImageFilters": [[158, "imagefilters"]], "ImageInfo": [[159, "imageinfo"]], "LightingImageFilter": [[160, "lightingimagefilter"]], "Line2DPathEffect": [[161, "line2dpatheffect"]], "Line2DPathEffect.DashInfo": [[162, "line2dpatheffect-dashinfo"]], "Line2DPathEffect.DashType": [[163, "line2dpatheffect-dashtype"]], "Line2DPathEffect.PointData": [[164, "line2dpatheffect-pointdata"]], "Line2DPathEffect.PointData.PointFlags": [[165, "line2dpatheffect-pointdata-pointflags"]], "Line2DPathEffect.Type": [[166, "line2dpatheffect-type"]], "LumaColorFilter": [[167, "lumacolorfilter"]], "M44": [[168, "m44"]], "MagnifierImageFilter": [[169, "magnifierimagefilter"]], "MaskFilter": [[170, "maskfilter"], [311, "maskfilter"]], "MaskFilter.Type": [[171, "maskfilter-type"]], "Matrix": [[172, "matrix"]], "Matrix.ScaleToFit": [[173, "matrix-scaletofit"]], "Matrix.TypeMask": [[174, "matrix-typemask"]], "MatrixPathEffect": [[175, "matrixpatheffect"]], "MemoryStream": [[176, "memorystream"]], "MergePathEffect": [[177, "mergepatheffect"]], "MipmapBuilder": [[178, "mipmapbuilder"]], "NullWStream": [[179, "nullwstream"]], "OffsetImageFilter": [[180, "offsetimagefilter"]], "OpBuilder": [[181, "opbuilder"]], "OverdrawColorFilter": [[182, "overdrawcolorfilter"]], "PDF": [[183, "pdf"], [308, "pdf"]], "PDF.AttributeList": [[184, "pdf-attributelist"]], "PDF.DocumentStructureType": [[185, "pdf-documentstructuretype"]], "PDF.Metadata": [[186, "pdf-metadata"]], "PDF.StructureElementNode": [[187, "pdf-structureelementnode"]], "Paint": [[188, "paint"]], "Paint.Cap": [[189, "paint-cap"]], "Paint.Join": [[190, "paint-join"]], "Paint.Style": [[191, "paint-style"]], "PaintImageFilter": [[192, "paintimagefilter"]], "Path": [[193, "path"]], "Path.AddPathMode": [[194, "path-addpathmode"]], "Path.ArcSize": [[195, "path-arcsize"]], "Path.Iter": [[196, "path-iter"]], "Path.RawIter": [[197, "path-rawiter"]], "Path.SegmentMask": [[198, "path-segmentmask"]], "Path.Verb": [[199, "path-verb"]], "Path1DPathEffect": [[200, "path1dpatheffect"]], "Path1DPathEffect.DashInfo": [[201, "path1dpatheffect-dashinfo"]], "Path1DPathEffect.DashType": [[202, "path1dpatheffect-dashtype"]], "Path1DPathEffect.PointData": [[203, "path1dpatheffect-pointdata"]], "Path1DPathEffect.PointData.PointFlags": [[204, "path1dpatheffect-pointdata-pointflags"]], "Path1DPathEffect.Style": [[205, "path1dpatheffect-style"]], "Path1DPathEffect.Type": [[206, "path1dpatheffect-type"]], "Path2DPathEffect": [[207, "path2dpatheffect"]], "Path2DPathEffect.DashInfo": [[208, "path2dpatheffect-dashinfo"]], "Path2DPathEffect.DashType": [[209, "path2dpatheffect-dashtype"]], "Path2DPathEffect.PointData": [[210, "path2dpatheffect-pointdata"]], "Path2DPathEffect.PointData.PointFlags": [[211, "path2dpatheffect-pointdata-pointflags"]], "Path2DPathEffect.Type": [[212, "path2dpatheffect-type"]], "PathBuilder": [[213, "pathbuilder"]], "PathBuilder.ArcSize": [[214, "pathbuilder-arcsize"]], "PathDirection": [[215, "pathdirection"]], "PathEffect": [[216, "patheffect"], [311, "patheffect"]], "PathEffect.DashInfo": [[217, "patheffect-dashinfo"]], "PathEffect.DashType": [[218, "patheffect-dashtype"]], "PathEffect.PointData": [[219, "patheffect-pointdata"]], "PathEffect.PointData.PointFlags": [[220, "patheffect-pointdata-pointflags"]], "PathEffect.Type": [[221, "patheffect-type"]], "PathFillType": [[222, "pathfilltype"]], "PathMeasure": [[223, "pathmeasure"]], "PathMeasure.GetPosAndTan": [[224, "pathmeasure-getposandtan"]], "PathOp": [[225, "pathop"]], "PathSegmentMask": [[226, "pathsegmentmask"]], "PathVerb": [[227, "pathverb"]], "PerlinNoiseShader": [[228, "perlinnoiseshader"]], "Picture": [[229, "picture"], [308, "picture"]], "PictureRecorder": [[230, "picturerecorder"]], "PictureRecorder.FinishFlags": [[231, "picturerecorder-finishflags"]], "PixelGeometry": [[232, "pixelgeometry"]], "PixelRef": [[233, "pixelref"]], "Pixmap": [[234, "pixmap"]], "Point": [[235, "point"]], "Point3": [[236, "point3"]], "RRect": [[237, "rrect"]], "RRect.Corner": [[238, "rrect-corner"]], "RRect.Type": [[239, "rrect-type"]], "RSXform": [[240, "rsxform"]], "Rect": [[241, "rect"]], "RefCnt": [[242, "refcnt"]], "RefCntBase": [[243, "refcntbase"]], "Region": [[244, "region"]], "Region.Cliperator": [[245, "region-cliperator"]], "Region.Iterator": [[246, "region-iterator"]], "Region.Op": [[247, "region-op"]], "Region.Spanerator": [[248, "region-spanerator"]], "SVGCanvas": [[249, "svgcanvas"]], "SVGDOM": [[250, "svgdom"]], "Shader": [[251, "shader"], [311, "shader"]], "Shader.GradientInfo": [[252, "shader-gradientinfo"]], "Shader.GradientType": [[253, "shader-gradienttype"]], "Shader.Type": [[254, "shader-type"]], "ShaderMaskFilter": [[255, "shadermaskfilter"]], "Shaders": [[256, "shaders"]], "Size": [[257, "size"]], "Stream": [[258, "stream"]], "StreamAsset": [[259, "streamasset"]], "StreamMemory": [[260, "streammemory"]], "StreamRewindable": [[261, "streamrewindable"]], "StreamSeekable": [[262, "streamseekable"]], "String": [[263, "string"]], "StrokePathEffect": [[264, "strokepatheffect"]], "StrokeRec": [[265, "strokerec"]], "StrokeRec.InitStyle": [[266, "strokerec-initstyle"]], "StrokeRec.Style": [[267, "strokerec-style"]], "Surface": [[268, "surface"]], "Surface.AsyncReadResult": [[269, "surface-asyncreadresult"]], "Surface.BackendHandleAccess": [[270, "surface-backendhandleaccess"]], "Surface.BackendSurfaceAccess": [[271, "surface-backendsurfaceaccess"]], "Surface.ContentChangeMode": [[272, "surface-contentchangemode"]], "Surface.RescaleGamma": [[273, "surface-rescalegamma"]], "SurfaceCharacterization": [[274, "surfacecharacterization"]], "SurfaceProps": [[275, "surfaceprops"]], "SurfaceProps.Flags": [[276, "surfaceprops-flags"]], "SurfaceProps.InitType": [[277, "surfaceprops-inittype"]], "TableColorFilter": [[278, "tablecolorfilter"]], "TableMaskFilter": [[279, "tablemaskfilter"]], "TextBlob": [[280, "textblob"]], "TextBlob.Iter": [[281, "textblob-iter"]], "TextBlob.Iter.Run": [[282, "textblob-iter-run"]], "TextBlobBuilder": [[283, "textblobbuilder"]], "TextEncoding": [[284, "textencoding"]], "TileImageFilter": [[285, "tileimagefilter"]], "TileMode": [[286, "tilemode"]], "TrimPathEffect": [[287, "trimpatheffect"]], "TrimPathEffect.Mode": [[288, "trimpatheffect-mode"]], "Typeface": [[289, "typeface"]], "Typeface.SerializeBehavior": [[290, "typeface-serializebehavior"]], "Vertices": [[291, "vertices"]], "Vertices.VertexMode": [[292, "vertices-vertexmode"]], "VkFormat": [[293, "vkformat"]], "VkImageLayout": [[294, "vkimagelayout"]], "WStream": [[295, "wstream"]], "XfermodeImageFilter": [[296, "xfermodeimagefilter"]], "YUVAIndex": [[297, "yuvaindex"]], "YUVAIndex.Index": [[298, "yuvaindex-index"]], "YUVAInfo": [[299, "yuvainfo"]], "YUVAInfo.PlanarConfig": [[300, "yuvainfo-planarconfig"]], "YUVAInfo.Siting": [[301, "yuvainfo-siting"]], "YUVAPixmapInfo": [[302, "yuvapixmapinfo"]], "YUVAPixmapInfo.DataType": [[303, "yuvapixmapinfo-datatype"]], "YUVAPixmapInfo.SupportedDataTypes": [[304, "yuvapixmapinfo-supporteddatatypes"]], "YUVAPixmaps": [[305, "yuvapixmaps"]], "YUVASizeInfo": [[306, "yuvasizeinfo"]], "YUVColorSpace": [[307, "yuvcolorspace"]], "Canvas Creation": [[308, "canvas-creation"]], "Raster": [[308, "raster"]], "GPU": [[308, "gpu"]], "OpenGL window": [[308, "opengl-window"]], "SVG": [[308, "svg"]], "Tutorial": [[309, "tutorial"]], "Notebook examples": [[309, "notebook-examples"]], "Overview": [[310, "overview"]], "Canvas details": [[310, "canvas-details"]], "More drawings": [[310, "more-drawings"]], "Python interoperability": [[310, "python-interoperability"]], "APIs at a glance": [[310, "apis-at-a-glance"]], "Paint Overview": [[311, "paint-overview"]], "Xfermode": [[311, "xfermode"]], "Bitmap Shader": [[311, "bitmap-shader"]], "Radial Gradient Shader": [[311, "radial-gradient-shader"]], "Two-Point Conical Gradient Shader": [[311, "two-point-conical-gradient-shader"]], "Sweep Gradient Shader": [[311, "sweep-gradient-shader"]], "Fractal Perlin Noise Shader": [[311, "fractal-perlin-noise-shader"]], "Turbulence Perlin Noise Shader": [[311, "turbulence-perlin-noise-shader"]], "Compose Shader": [[311, "compose-shader"]], "Drop Shadow": [[311, "drop-shadow"]], "Dilate": [[311, "dilate"]], "Erode": [[311, "erode"]], "Blur Mask Filter": [[311, "blur-mask-filter"]], "Color Matrix Color Filter": [[311, "color-matrix-color-filter"]], "Color Table Color Filter": [[311, "color-table-color-filter"]], "Path 2D Path Effect": [[311, "path-2d-path-effect"]], "Line 2D Path Effect": [[311, "line-2d-path-effect"]], "Path 1D Path Effect": [[311, "path-1d-path-effect"]], "Corner Path Effect": [[311, "corner-path-effect"]], "Dash Path Effect": [[311, "dash-path-effect"]], "Discrete Path Effect": [[311, "discrete-path-effect"]], "Compose Path Effect": [[311, "compose-path-effect"]], "Sum Path Effect": [[311, "sum-path-effect"]], "Path Overview": [[312, "path-overview"]]}, "indexentries": {"alphatypeisopaque() (in module skia)": [[4, "skia.AlphaTypeIsOpaque"]], "aswinding() (in module skia)": [[4, "skia.AsWinding"]], "blendmode_ascoeff() (in module skia)": [[4, "skia.BlendMode_AsCoeff"]], "blendmode_name() (in module skia)": [[4, "skia.BlendMode_Name"]], "color() (in module skia)": [[4, "skia.Color"]], "colorgeta() (in module skia)": [[4, "skia.ColorGetA"]], "colorgetb() (in module skia)": [[4, "skia.ColorGetB"]], "colorgetg() (in module skia)": [[4, "skia.ColorGetG"]], "colorgetr() (in module skia)": [[4, "skia.ColorGetR"]], "colorseta() (in module skia)": [[4, "skia.ColorSetA"]], "colorsetargb() (in module skia)": [[4, "skia.ColorSetARGB"]], "colorsetrgb() (in module skia)": [[4, "skia.ColorSetRGB"]], "colortohsv() (in module skia)": [[4, "skia.ColorToHSV"]], "colortypebytesperpixel() (in module skia)": [[4, "skia.ColorTypeBytesPerPixel"]], "colortypeisalwaysopaque() (in module skia)": [[4, "skia.ColorTypeIsAlwaysOpaque"]], "colortypevalidatealphatype() (in module skia)": [[4, "skia.ColorTypeValidateAlphaType"]], "computeisopaque() (in module skia)": [[4, "skia.ComputeIsOpaque"]], "encodedorigintomatrix() (in module skia)": [[4, "skia.EncodedOriginToMatrix"]], "hsvtocolor() (in module skia)": [[4, "skia.HSVToColor"]], "makenullcanvas() (in module skia)": [[4, "skia.MakeNullCanvas"]], "op() (in module skia)": [[4, "skia.Op"]], "pathfilltype_converttononinverse() (in module skia)": [[4, "skia.PathFillType_ConvertToNonInverse"]], "pathfilltype_isevenodd() (in module skia)": [[4, "skia.PathFillType_IsEvenOdd"]], "pathfilltype_isinverse() (in module skia)": [[4, "skia.PathFillType_IsInverse"]], "premultiplyargb() (in module skia)": [[4, "skia.PreMultiplyARGB"]], "premultiplycolor() (in module skia)": [[4, "skia.PreMultiplyColor"]], "rgbtohsv() (in module skia)": [[4, "skia.RGBToHSV"]], "simplify() (in module skia)": [[4, "skia.Simplify"]], "tightbounds() (in module skia)": [[4, "skia.TightBounds"]], "module": [[4, "module-skia"]], "skia": [[4, "module-skia"]], "alphathresholdfilter (class in skia)": [[5, "skia.AlphaThresholdFilter"]], "make() (alphathresholdfilter static method)": [[5, "skia.AlphaThresholdFilter.Make"]], "__init__() (alphathresholdfilter method)": [[5, "skia.AlphaThresholdFilter.__init__"]], "alphatype (class in skia)": [[6, "skia.AlphaType"]], "__init__() (alphatype method)": [[6, "skia.AlphaType.__init__"]], "klastenum_alphatype (alphatype attribute)": [[6, "skia.AlphaType.kLastEnum_AlphaType"]], "kopaque_alphatype (alphatype attribute)": [[6, "skia.AlphaType.kOpaque_AlphaType"]], "kpremul_alphatype (alphatype attribute)": [[6, "skia.AlphaType.kPremul_AlphaType"]], "kunknown_alphatype (alphatype attribute)": [[6, "skia.AlphaType.kUnknown_AlphaType"]], "kunpremul_alphatype (alphatype attribute)": [[6, "skia.AlphaType.kUnpremul_AlphaType"]], "name (alphatype attribute)": [[6, "skia.AlphaType.name"]], "value (alphatype attribute)": [[6, "skia.AlphaType.value"]], "applyperspectiveclip (class in skia)": [[7, "skia.ApplyPerspectiveClip"]], "__init__() (applyperspectiveclip method)": [[7, "skia.ApplyPerspectiveClip.__init__"]], "kno (applyperspectiveclip attribute)": [[7, "skia.ApplyPerspectiveClip.kNo"]], "kyes (applyperspectiveclip attribute)": [[7, "skia.ApplyPerspectiveClip.kYes"]], "name (applyperspectiveclip attribute)": [[7, "skia.ApplyPerspectiveClip.name"]], "value (applyperspectiveclip attribute)": [[7, "skia.ApplyPerspectiveClip.value"]], "arithmeticimagefilter (class in skia)": [[8, "skia.ArithmeticImageFilter"]], "make() (arithmeticimagefilter static method)": [[8, "skia.ArithmeticImageFilter.Make"]], "__init__() (arithmeticimagefilter method)": [[8, "skia.ArithmeticImageFilter.__init__"]], "autocanvasrestore (class in skia)": [[9, "skia.AutoCanvasRestore"]], "__init__() (autocanvasrestore method)": [[9, "skia.AutoCanvasRestore.__init__"]], "restore() (autocanvasrestore method)": [[9, "skia.AutoCanvasRestore.restore"]], "bbhfactory (class in skia)": [[10, "skia.BBHFactory"]], "__init__() (bbhfactory method)": [[10, "skia.BBHFactory.__init__"]], "bboxhierarchy (class in skia)": [[11, "skia.BBoxHierarchy"]], "__init__() (bboxhierarchy method)": [[11, "skia.BBoxHierarchy.__init__"]], "bytesused() (bboxhierarchy method)": [[11, "skia.BBoxHierarchy.bytesUsed"]], "insert() (bboxhierarchy method)": [[11, "skia.BBoxHierarchy.insert"]], "ref() (bboxhierarchy method)": [[11, "skia.BBoxHierarchy.ref"]], "search() (bboxhierarchy method)": [[11, "skia.BBoxHierarchy.search"]], "unique() (bboxhierarchy method)": [[11, "skia.BBoxHierarchy.unique"]], "unref() (bboxhierarchy method)": [[11, "skia.BBoxHierarchy.unref"]], "metadata (class in skia.bboxhierarchy)": [[12, "skia.BBoxHierarchy.Metadata"]], "__init__() (metadata method)": [[12, "skia.BBoxHierarchy.Metadata.__init__"], [186, "skia.PDF.Metadata.__init__"]], "isdraw (metadata attribute)": [[12, "skia.BBoxHierarchy.Metadata.isDraw"]], "backingfit (class in skia)": [[13, "skia.BackingFit"]], "__init__() (backingfit method)": [[13, "skia.BackingFit.__init__"]], "kapprox (backingfit attribute)": [[13, "skia.BackingFit.kApprox"]], "kexact (backingfit attribute)": [[13, "skia.BackingFit.kExact"]], "name (backingfit attribute)": [[13, "skia.BackingFit.name"]], "value (backingfit attribute)": [[13, "skia.BackingFit.value"]], "bitmap (class in skia)": [[14, "skia.Bitmap"]], "__init__() (bitmap method)": [[14, "skia.Bitmap.__init__"]], "allocn32pixels() (bitmap method)": [[14, "skia.Bitmap.allocN32Pixels"]], "allocpixels() (bitmap method)": [[14, "skia.Bitmap.allocPixels"]], "allocpixelsflags() (bitmap method)": [[14, "skia.Bitmap.allocPixelsFlags"]], "alphatype() (bitmap method)": [[14, "skia.Bitmap.alphaType"]], "bounds() (bitmap method)": [[14, "skia.Bitmap.bounds"]], "bytesperpixel() (bitmap method)": [[14, "skia.Bitmap.bytesPerPixel"]], "colorspace() (bitmap method)": [[14, "skia.Bitmap.colorSpace"]], "colortype() (bitmap method)": [[14, "skia.Bitmap.colorType"]], "computebytesize() (bitmap method)": [[14, "skia.Bitmap.computeByteSize"]], "dimensions() (bitmap method)": [[14, "skia.Bitmap.dimensions"]], "drawsnothing() (bitmap method)": [[14, "skia.Bitmap.drawsNothing"]], "empty() (bitmap method)": [[14, "skia.Bitmap.empty"]], "erase() (bitmap method)": [[14, "skia.Bitmap.erase"]], "eraseargb() (bitmap method)": [[14, "skia.Bitmap.eraseARGB"]], "erasecolor() (bitmap method)": [[14, "skia.Bitmap.eraseColor"]], "extractalpha() (bitmap method)": [[14, "skia.Bitmap.extractAlpha"]], "extractsubset() (bitmap method)": [[14, "skia.Bitmap.extractSubset"]], "getalphaf() (bitmap method)": [[14, "skia.Bitmap.getAlphaf"]], "getbounds() (bitmap method)": [[14, "skia.Bitmap.getBounds"]], "getcolor() (bitmap method)": [[14, "skia.Bitmap.getColor"]], "getgenerationid() (bitmap method)": [[14, "skia.Bitmap.getGenerationID"]], "getpixels() (bitmap method)": [[14, "skia.Bitmap.getPixels"]], "getsubset() (bitmap method)": [[14, "skia.Bitmap.getSubset"]], "height() (bitmap method)": [[14, "skia.Bitmap.height"]], "info() (bitmap method)": [[14, "skia.Bitmap.info"]], "installpixels() (bitmap method)": [[14, "skia.Bitmap.installPixels"]], "isimmutable() (bitmap method)": [[14, "skia.Bitmap.isImmutable"]], "isnull() (bitmap method)": [[14, "skia.Bitmap.isNull"]], "isopaque() (bitmap method)": [[14, "skia.Bitmap.isOpaque"]], "kzeropixels_allocflag (bitmap attribute)": [[14, "skia.Bitmap.kZeroPixels_AllocFlag"]], "makeshader() (bitmap method)": [[14, "skia.Bitmap.makeShader"]], "notifypixelschanged() (bitmap method)": [[14, "skia.Bitmap.notifyPixelsChanged"]], "peekpixels() (bitmap method)": [[14, "skia.Bitmap.peekPixels"]], "pixmap() (bitmap method)": [[14, "skia.Bitmap.pixmap"]], "readpixels() (bitmap method)": [[14, "skia.Bitmap.readPixels"]], "readytodraw() (bitmap method)": [[14, "skia.Bitmap.readyToDraw"]], "refcolorspace() (bitmap method)": [[14, "skia.Bitmap.refColorSpace"]], "reset() (bitmap method)": [[14, "skia.Bitmap.reset"]], "rowbytes() (bitmap method)": [[14, "skia.Bitmap.rowBytes"]], "rowbytesaspixels() (bitmap method)": [[14, "skia.Bitmap.rowBytesAsPixels"]], "setalphatype() (bitmap method)": [[14, "skia.Bitmap.setAlphaType"]], "setimmutable() (bitmap method)": [[14, "skia.Bitmap.setImmutable"]], "setinfo() (bitmap method)": [[14, "skia.Bitmap.setInfo"]], "setpixels() (bitmap method)": [[14, "skia.Bitmap.setPixels"]], "shiftperpixel() (bitmap method)": [[14, "skia.Bitmap.shiftPerPixel"]], "swap() (bitmap method)": [[14, "skia.Bitmap.swap"]], "tobytes() (bitmap method)": [[14, "skia.Bitmap.tobytes"]], "tryallocn32pixels() (bitmap method)": [[14, "skia.Bitmap.tryAllocN32Pixels"]], "tryallocpixels() (bitmap method)": [[14, "skia.Bitmap.tryAllocPixels"]], "tryallocpixelsflags() (bitmap method)": [[14, "skia.Bitmap.tryAllocPixelsFlags"]], "width() (bitmap method)": [[14, "skia.Bitmap.width"]], "writepixels() (bitmap method)": [[14, "skia.Bitmap.writePixels"]], "allocflags (class in skia.bitmap)": [[15, "skia.Bitmap.AllocFlags"]], "__init__() (allocflags method)": [[15, "skia.Bitmap.AllocFlags.__init__"]], "kzeropixels_allocflag (allocflags attribute)": [[15, "skia.Bitmap.AllocFlags.kZeroPixels_AllocFlag"]], "name (allocflags attribute)": [[15, "skia.Bitmap.AllocFlags.name"]], "value (allocflags attribute)": [[15, "skia.Bitmap.AllocFlags.value"]], "blendmode (class in skia)": [[16, "skia.BlendMode"]], "__init__() (blendmode method)": [[16, "skia.BlendMode.__init__"]], "kclear (blendmode attribute)": [[16, "skia.BlendMode.kClear"]], "kcolor (blendmode attribute)": [[16, "skia.BlendMode.kColor"]], "kcolorburn (blendmode attribute)": [[16, "skia.BlendMode.kColorBurn"]], "kcolordodge (blendmode attribute)": [[16, "skia.BlendMode.kColorDodge"]], "kdarken (blendmode attribute)": [[16, "skia.BlendMode.kDarken"]], "kdifference (blendmode attribute)": [[16, "skia.BlendMode.kDifference"]], "kdst (blendmode attribute)": [[16, "skia.BlendMode.kDst"]], "kdstatop (blendmode attribute)": [[16, "skia.BlendMode.kDstATop"]], "kdstin (blendmode attribute)": [[16, "skia.BlendMode.kDstIn"]], "kdstout (blendmode attribute)": [[16, "skia.BlendMode.kDstOut"]], "kdstover (blendmode attribute)": [[16, "skia.BlendMode.kDstOver"]], "kexclusion (blendmode attribute)": [[16, "skia.BlendMode.kExclusion"]], "khardlight (blendmode attribute)": [[16, "skia.BlendMode.kHardLight"]], "khue (blendmode attribute)": [[16, "skia.BlendMode.kHue"]], "klastcoeffmode (blendmode attribute)": [[16, "skia.BlendMode.kLastCoeffMode"]], "klastmode (blendmode attribute)": [[16, "skia.BlendMode.kLastMode"]], "klastseparablemode (blendmode attribute)": [[16, "skia.BlendMode.kLastSeparableMode"]], "klighten (blendmode attribute)": [[16, "skia.BlendMode.kLighten"]], "kluminosity (blendmode attribute)": [[16, "skia.BlendMode.kLuminosity"]], "kmodulate (blendmode attribute)": [[16, "skia.BlendMode.kModulate"]], "kmultiply (blendmode attribute)": [[16, "skia.BlendMode.kMultiply"]], "koverlay (blendmode attribute)": [[16, "skia.BlendMode.kOverlay"]], "kplus (blendmode attribute)": [[16, "skia.BlendMode.kPlus"]], "ksaturation (blendmode attribute)": [[16, "skia.BlendMode.kSaturation"]], "kscreen (blendmode attribute)": [[16, "skia.BlendMode.kScreen"]], "ksoftlight (blendmode attribute)": [[16, "skia.BlendMode.kSoftLight"]], "ksrc (blendmode attribute)": [[16, "skia.BlendMode.kSrc"]], "ksrcatop (blendmode attribute)": [[16, "skia.BlendMode.kSrcATop"]], "ksrcin (blendmode attribute)": [[16, "skia.BlendMode.kSrcIn"]], "ksrcout (blendmode attribute)": [[16, "skia.BlendMode.kSrcOut"]], "ksrcover (blendmode attribute)": [[16, "skia.BlendMode.kSrcOver"]], "kxor (blendmode attribute)": [[16, "skia.BlendMode.kXor"]], "name (blendmode attribute)": [[16, "skia.BlendMode.name"]], "value (blendmode attribute)": [[16, "skia.BlendMode.value"]], "blendmodecoeff (class in skia)": [[17, "skia.BlendModeCoeff"]], "__init__() (blendmodecoeff method)": [[17, "skia.BlendModeCoeff.__init__"]], "kcoeffcount (blendmodecoeff attribute)": [[17, "skia.BlendModeCoeff.kCoeffCount"]], "kda (blendmodecoeff attribute)": [[17, "skia.BlendModeCoeff.kDA"]], "kdc (blendmodecoeff attribute)": [[17, "skia.BlendModeCoeff.kDC"]], "kida (blendmodecoeff attribute)": [[17, "skia.BlendModeCoeff.kIDA"]], "kidc (blendmodecoeff attribute)": [[17, "skia.BlendModeCoeff.kIDC"]], "kisa (blendmodecoeff attribute)": [[17, "skia.BlendModeCoeff.kISA"]], "kisc (blendmodecoeff attribute)": [[17, "skia.BlendModeCoeff.kISC"]], "kone (blendmodecoeff attribute)": [[17, "skia.BlendModeCoeff.kOne"]], "ksa (blendmodecoeff attribute)": [[17, "skia.BlendModeCoeff.kSA"]], "ksc (blendmodecoeff attribute)": [[17, "skia.BlendModeCoeff.kSC"]], "kzero (blendmodecoeff attribute)": [[17, "skia.BlendModeCoeff.kZero"]], "name (blendmodecoeff attribute)": [[17, "skia.BlendModeCoeff.name"]], "value (blendmodecoeff attribute)": [[17, "skia.BlendModeCoeff.value"]], "blurimagefilter (class in skia)": [[18, "skia.BlurImageFilter"]], "make() (blurimagefilter static method)": [[18, "skia.BlurImageFilter.Make"]], "__init__() (blurimagefilter method)": [[18, "skia.BlurImageFilter.__init__"]], "kclamptoblack_tilemode (blurimagefilter attribute)": [[18, "skia.BlurImageFilter.kClampToBlack_TileMode"]], "kclamp_tilemode (blurimagefilter attribute)": [[18, "skia.BlurImageFilter.kClamp_TileMode"]], "klast_tilemode (blurimagefilter attribute)": [[18, "skia.BlurImageFilter.kLast_TileMode"]], "kmax_tilemode (blurimagefilter attribute)": [[18, "skia.BlurImageFilter.kMax_TileMode"]], "krepeat_tilemode (blurimagefilter attribute)": [[18, "skia.BlurImageFilter.kRepeat_TileMode"]], "tilemode (class in skia.blurimagefilter)": [[19, "skia.BlurImageFilter.TileMode"]], "__init__() (tilemode method)": [[19, "skia.BlurImageFilter.TileMode.__init__"], [286, "skia.TileMode.__init__"]], "kclamptoblack_tilemode (tilemode attribute)": [[19, "skia.BlurImageFilter.TileMode.kClampToBlack_TileMode"]], "kclamp_tilemode (tilemode attribute)": [[19, "skia.BlurImageFilter.TileMode.kClamp_TileMode"]], "klast_tilemode (tilemode attribute)": [[19, "skia.BlurImageFilter.TileMode.kLast_TileMode"]], "kmax_tilemode (tilemode attribute)": [[19, "skia.BlurImageFilter.TileMode.kMax_TileMode"]], "krepeat_tilemode (tilemode attribute)": [[19, "skia.BlurImageFilter.TileMode.kRepeat_TileMode"]], "name (tilemode attribute)": [[19, "skia.BlurImageFilter.TileMode.name"], [286, "skia.TileMode.name"]], "value (tilemode attribute)": [[19, "skia.BlurImageFilter.TileMode.value"], [286, "skia.TileMode.value"]], "blurmaskfilter (class in skia)": [[20, "skia.BlurMaskFilter"]], "__init__() (blurmaskfilter method)": [[20, "skia.BlurMaskFilter.__init__"]], "blurstyle (class in skia)": [[21, "skia.BlurStyle"]], "__init__() (blurstyle method)": [[21, "skia.BlurStyle.__init__"]], "kinner_blurstyle (blurstyle attribute)": [[21, "skia.BlurStyle.kInner_BlurStyle"]], "klastenum_blurstyle (blurstyle attribute)": [[21, "skia.BlurStyle.kLastEnum_BlurStyle"]], "knormal_blurstyle (blurstyle attribute)": [[21, "skia.BlurStyle.kNormal_BlurStyle"]], "kouter_blurstyle (blurstyle attribute)": [[21, "skia.BlurStyle.kOuter_BlurStyle"]], "ksolid_blurstyle (blurstyle attribute)": [[21, "skia.BlurStyle.kSolid_BlurStyle"]], "name (blurstyle attribute)": [[21, "skia.BlurStyle.name"]], "value (blurstyle attribute)": [[21, "skia.BlurStyle.value"]], "budgeted (class in skia)": [[22, "skia.Budgeted"]], "__init__() (budgeted method)": [[22, "skia.Budgeted.__init__"]], "kno (budgeted attribute)": [[22, "skia.Budgeted.kNo"]], "kyes (budgeted attribute)": [[22, "skia.Budgeted.kYes"]], "name (budgeted attribute)": [[22, "skia.Budgeted.name"]], "value (budgeted attribute)": [[22, "skia.Budgeted.value"]], "canvas (class in skia)": [[23, "skia.Canvas"]], "makerasterdirect() (canvas static method)": [[23, "skia.Canvas.MakeRasterDirect"]], "makerasterdirectn32() (canvas static method)": [[23, "skia.Canvas.MakeRasterDirectN32"]], "__init__() (canvas method)": [[23, "skia.Canvas.__init__"]], "accesstoplayerpixels() (canvas method)": [[23, "skia.Canvas.accessTopLayerPixels"]], "androidframework_setdevicecliprestriction() (canvas method)": [[23, "skia.Canvas.androidFramework_setDeviceClipRestriction"]], "clear() (canvas method)": [[23, "skia.Canvas.clear"]], "clippath() (canvas method)": [[23, "skia.Canvas.clipPath"]], "cliprrect() (canvas method)": [[23, "skia.Canvas.clipRRect"]], "cliprect() (canvas method)": [[23, "skia.Canvas.clipRect"]], "clipregion() (canvas method)": [[23, "skia.Canvas.clipRegion"]], "concat() (canvas method)": [[23, "skia.Canvas.concat"]], "discard() (canvas method)": [[23, "skia.Canvas.discard"]], "drawannotation() (canvas method)": [[23, "skia.Canvas.drawAnnotation"]], "drawarc() (canvas method)": [[23, "skia.Canvas.drawArc"]], "drawatlas() (canvas method)": [[23, "skia.Canvas.drawAtlas"]], "drawbitmap() (canvas method)": [[23, "skia.Canvas.drawBitmap"]], "drawbitmaprect() (canvas method)": [[23, "skia.Canvas.drawBitmapRect"]], "drawcircle() (canvas method)": [[23, "skia.Canvas.drawCircle"]], "drawcolor() (canvas method)": [[23, "skia.Canvas.drawColor"]], "drawdrrect() (canvas method)": [[23, "skia.Canvas.drawDRRect"]], "drawirect() (canvas method)": [[23, "skia.Canvas.drawIRect"]], "drawimage() (canvas method)": [[23, "skia.Canvas.drawImage"]], "drawimagenine() (canvas method)": [[23, "skia.Canvas.drawImageNine"]], "drawimagerect() (canvas method)": [[23, "skia.Canvas.drawImageRect"]], "drawline() (canvas method)": [[23, "skia.Canvas.drawLine"]], "drawoval() (canvas method)": [[23, "skia.Canvas.drawOval"]], "drawpaint() (canvas method)": [[23, "skia.Canvas.drawPaint"]], "drawpatch() (canvas method)": [[23, "skia.Canvas.drawPatch"]], "drawpath() (canvas method)": [[23, "skia.Canvas.drawPath"]], "drawpicture() (canvas method)": [[23, "skia.Canvas.drawPicture"]], "drawpoint() (canvas method)": [[23, "skia.Canvas.drawPoint"]], "drawpoints() (canvas method)": [[23, "skia.Canvas.drawPoints"]], "drawrrect() (canvas method)": [[23, "skia.Canvas.drawRRect"]], "drawrect() (canvas method)": [[23, "skia.Canvas.drawRect"]], "drawregion() (canvas method)": [[23, "skia.Canvas.drawRegion"]], "drawroundrect() (canvas method)": [[23, "skia.Canvas.drawRoundRect"]], "drawsimpletext() (canvas method)": [[23, "skia.Canvas.drawSimpleText"]], "drawstring() (canvas method)": [[23, "skia.Canvas.drawString"]], "drawtextblob() (canvas method)": [[23, "skia.Canvas.drawTextBlob"]], "drawvertices() (canvas method)": [[23, "skia.Canvas.drawVertices"]], "flush() (canvas method)": [[23, "skia.Canvas.flush"]], "getbaselayersize() (canvas method)": [[23, "skia.Canvas.getBaseLayerSize"]], "getdeviceclipbounds() (canvas method)": [[23, "skia.Canvas.getDeviceClipBounds"]], "getlocalclipbounds() (canvas method)": [[23, "skia.Canvas.getLocalClipBounds"]], "getlocaltodevice() (canvas method)": [[23, "skia.Canvas.getLocalToDevice"]], "getprops() (canvas method)": [[23, "skia.Canvas.getProps"]], "getsavecount() (canvas method)": [[23, "skia.Canvas.getSaveCount"]], "getsurface() (canvas method)": [[23, "skia.Canvas.getSurface"]], "gettotalmatrix() (canvas method)": [[23, "skia.Canvas.getTotalMatrix"]], "imageinfo() (canvas method)": [[23, "skia.Canvas.imageInfo"]], "isclipempty() (canvas method)": [[23, "skia.Canvas.isClipEmpty"]], "iscliprect() (canvas method)": [[23, "skia.Canvas.isClipRect"]], "kall_quadaaflags (canvas attribute)": [[23, "skia.Canvas.kAll_QuadAAFlags"]], "kbottom_quadaaflag (canvas attribute)": [[23, "skia.Canvas.kBottom_QuadAAFlag"]], "kf16colortype (canvas attribute)": [[23, "skia.Canvas.kF16ColorType"]], "kfast_srcrectconstraint (canvas attribute)": [[23, "skia.Canvas.kFast_SrcRectConstraint"]], "kinitwithprevious_savelayerflag (canvas attribute)": [[23, "skia.Canvas.kInitWithPrevious_SaveLayerFlag"]], "kleft_quadaaflag (canvas attribute)": [[23, "skia.Canvas.kLeft_QuadAAFlag"]], "klines_pointmode (canvas attribute)": [[23, "skia.Canvas.kLines_PointMode"]], "kmaskagainstcoverage_experimental_dont_use_savelayerflag (canvas attribute)": [[23, "skia.Canvas.kMaskAgainstCoverage_EXPERIMENTAL_DONT_USE_SaveLayerFlag"]], "knone_quadaaflags (canvas attribute)": [[23, "skia.Canvas.kNone_QuadAAFlags"]], "kpoints_pointmode (canvas attribute)": [[23, "skia.Canvas.kPoints_PointMode"]], "kpolygon_pointmode (canvas attribute)": [[23, "skia.Canvas.kPolygon_PointMode"]], "kpreservelcdtext_savelayerflag (canvas attribute)": [[23, "skia.Canvas.kPreserveLCDText_SaveLayerFlag"]], "kright_quadaaflag (canvas attribute)": [[23, "skia.Canvas.kRight_QuadAAFlag"]], "kstrict_srcrectconstraint (canvas attribute)": [[23, "skia.Canvas.kStrict_SrcRectConstraint"]], "ktop_quadaaflag (canvas attribute)": [[23, "skia.Canvas.kTop_QuadAAFlag"]], "makesurface() (canvas method)": [[23, "skia.Canvas.makeSurface"]], "peekpixels() (canvas method)": [[23, "skia.Canvas.peekPixels"]], "quickreject() (canvas method)": [[23, "skia.Canvas.quickReject"]], "readpixels() (canvas method)": [[23, "skia.Canvas.readPixels"]], "resetmatrix() (canvas method)": [[23, "skia.Canvas.resetMatrix"]], "restore() (canvas method)": [[23, "skia.Canvas.restore"]], "restoretocount() (canvas method)": [[23, "skia.Canvas.restoreToCount"]], "rotate() (canvas method)": [[23, "skia.Canvas.rotate"]], "save() (canvas method)": [[23, "skia.Canvas.save"]], "savelayer() (canvas method)": [[23, "skia.Canvas.saveLayer"]], "savelayeralpha() (canvas method)": [[23, "skia.Canvas.saveLayerAlpha"]], "scale() (canvas method)": [[23, "skia.Canvas.scale"]], "setmatrix() (canvas method)": [[23, "skia.Canvas.setMatrix"]], "skew() (canvas method)": [[23, "skia.Canvas.skew"]], "toarray() (canvas method)": [[23, "skia.Canvas.toarray"]], "translate() (canvas method)": [[23, "skia.Canvas.translate"]], "writepixels() (canvas method)": [[23, "skia.Canvas.writePixels"]], "lattice (class in skia.canvas)": [[24, "skia.Canvas.Lattice"]], "__init__() (lattice method)": [[24, "skia.Canvas.Lattice.__init__"]], "fbounds (lattice attribute)": [[24, "skia.Canvas.Lattice.fBounds"]], "fcolors (lattice attribute)": [[24, "skia.Canvas.Lattice.fColors"]], "frecttypes (lattice attribute)": [[24, "skia.Canvas.Lattice.fRectTypes"]], "fxcount (lattice attribute)": [[24, "skia.Canvas.Lattice.fXCount"]], "fxdivs (lattice attribute)": [[24, "skia.Canvas.Lattice.fXDivs"]], "fycount (lattice attribute)": [[24, "skia.Canvas.Lattice.fYCount"]], "fydivs (lattice attribute)": [[24, "skia.Canvas.Lattice.fYDivs"]], "kdefault (lattice attribute)": [[24, "skia.Canvas.Lattice.kDefault"]], "kfixedcolor (lattice attribute)": [[24, "skia.Canvas.Lattice.kFixedColor"]], "ktransparent (lattice attribute)": [[24, "skia.Canvas.Lattice.kTransparent"]], "recttype (class in skia.canvas.lattice)": [[25, "skia.Canvas.Lattice.RectType"]], "__init__() (recttype method)": [[25, "skia.Canvas.Lattice.RectType.__init__"]], "kdefault (recttype attribute)": [[25, "skia.Canvas.Lattice.RectType.kDefault"]], "kfixedcolor (recttype attribute)": [[25, "skia.Canvas.Lattice.RectType.kFixedColor"]], "ktransparent (recttype attribute)": [[25, "skia.Canvas.Lattice.RectType.kTransparent"]], "name (recttype attribute)": [[25, "skia.Canvas.Lattice.RectType.name"]], "value (recttype attribute)": [[25, "skia.Canvas.Lattice.RectType.value"]], "pointmode (class in skia.canvas)": [[26, "skia.Canvas.PointMode"]], "__init__() (pointmode method)": [[26, "skia.Canvas.PointMode.__init__"]], "klines_pointmode (pointmode attribute)": [[26, "skia.Canvas.PointMode.kLines_PointMode"]], "kpoints_pointmode (pointmode attribute)": [[26, "skia.Canvas.PointMode.kPoints_PointMode"]], "kpolygon_pointmode (pointmode attribute)": [[26, "skia.Canvas.PointMode.kPolygon_PointMode"]], "name (pointmode attribute)": [[26, "skia.Canvas.PointMode.name"]], "value (pointmode attribute)": [[26, "skia.Canvas.PointMode.value"]], "quadaaflags (class in skia.canvas)": [[27, "skia.Canvas.QuadAAFlags"]], "__init__() (quadaaflags method)": [[27, "skia.Canvas.QuadAAFlags.__init__"]], "kall_quadaaflags (quadaaflags attribute)": [[27, "skia.Canvas.QuadAAFlags.kAll_QuadAAFlags"]], "kbottom_quadaaflag (quadaaflags attribute)": [[27, "skia.Canvas.QuadAAFlags.kBottom_QuadAAFlag"]], "kleft_quadaaflag (quadaaflags attribute)": [[27, "skia.Canvas.QuadAAFlags.kLeft_QuadAAFlag"]], "knone_quadaaflags (quadaaflags attribute)": [[27, "skia.Canvas.QuadAAFlags.kNone_QuadAAFlags"]], "kright_quadaaflag (quadaaflags attribute)": [[27, "skia.Canvas.QuadAAFlags.kRight_QuadAAFlag"]], "ktop_quadaaflag (quadaaflags attribute)": [[27, "skia.Canvas.QuadAAFlags.kTop_QuadAAFlag"]], "name (quadaaflags attribute)": [[27, "skia.Canvas.QuadAAFlags.name"]], "value (quadaaflags attribute)": [[27, "skia.Canvas.QuadAAFlags.value"]], "savelayerflags (class in skia.canvas)": [[28, "skia.Canvas.SaveLayerFlags"]], "__init__() (savelayerflags method)": [[28, "skia.Canvas.SaveLayerFlags.__init__"]], "kf16colortype (savelayerflags attribute)": [[28, "skia.Canvas.SaveLayerFlags.kF16ColorType"]], "kinitwithprevious_savelayerflag (savelayerflags attribute)": [[28, "skia.Canvas.SaveLayerFlags.kInitWithPrevious_SaveLayerFlag"]], "kmaskagainstcoverage_experimental_dont_use_savelayerflag (savelayerflags attribute)": [[28, "skia.Canvas.SaveLayerFlags.kMaskAgainstCoverage_EXPERIMENTAL_DONT_USE_SaveLayerFlag"]], "kpreservelcdtext_savelayerflag (savelayerflags attribute)": [[28, "skia.Canvas.SaveLayerFlags.kPreserveLCDText_SaveLayerFlag"]], "name (savelayerflags attribute)": [[28, "skia.Canvas.SaveLayerFlags.name"]], "value (savelayerflags attribute)": [[28, "skia.Canvas.SaveLayerFlags.value"]], "savelayerrec (class in skia.canvas)": [[29, "skia.Canvas.SaveLayerRec"]], "__init__() (savelayerrec method)": [[29, "skia.Canvas.SaveLayerRec.__init__"]], "fbackdrop (savelayerrec attribute)": [[29, "skia.Canvas.SaveLayerRec.fBackdrop"]], "fbounds (savelayerrec attribute)": [[29, "skia.Canvas.SaveLayerRec.fBounds"]], "fpaint (savelayerrec attribute)": [[29, "skia.Canvas.SaveLayerRec.fPaint"]], "fsavelayerflags (savelayerrec attribute)": [[29, "skia.Canvas.SaveLayerRec.fSaveLayerFlags"]], "srcrectconstraint (class in skia.canvas)": [[30, "skia.Canvas.SrcRectConstraint"]], "__init__() (srcrectconstraint method)": [[30, "skia.Canvas.SrcRectConstraint.__init__"]], "kfast_srcrectconstraint (srcrectconstraint attribute)": [[30, "skia.Canvas.SrcRectConstraint.kFast_SrcRectConstraint"]], "kstrict_srcrectconstraint (srcrectconstraint attribute)": [[30, "skia.Canvas.SrcRectConstraint.kStrict_SrcRectConstraint"]], "name (srcrectconstraint attribute)": [[30, "skia.Canvas.SrcRectConstraint.name"]], "value (srcrectconstraint attribute)": [[30, "skia.Canvas.SrcRectConstraint.value"]], "clipop (class in skia)": [[31, "skia.ClipOp"]], "__init__() (clipop method)": [[31, "skia.ClipOp.__init__"]], "kdifference (clipop attribute)": [[31, "skia.ClipOp.kDifference"]], "kintersect (clipop attribute)": [[31, "skia.ClipOp.kIntersect"]], "name (clipop attribute)": [[31, "skia.ClipOp.name"]], "value (clipop attribute)": [[31, "skia.ClipOp.value"]], "codec (class in skia)": [[32, "skia.Codec"]], "makefromdata() (codec static method)": [[32, "skia.Codec.MakeFromData"]], "minbufferedbytesneeded() (codec static method)": [[32, "skia.Codec.MinBufferedBytesNeeded"]], "resulttostring() (codec static method)": [[32, "skia.Codec.ResultToString"]], "__init__() (codec method)": [[32, "skia.Codec.__init__"]], "bounds() (codec method)": [[32, "skia.Codec.bounds"]], "dimensions() (codec method)": [[32, "skia.Codec.dimensions"]], "getencodedformat() (codec method)": [[32, "skia.Codec.getEncodedFormat"]], "getframecount() (codec method)": [[32, "skia.Codec.getFrameCount"]], "getframeinfo() (codec method)": [[32, "skia.Codec.getFrameInfo"]], "getinfo() (codec method)": [[32, "skia.Codec.getInfo"]], "getorigin() (codec method)": [[32, "skia.Codec.getOrigin"]], "getpixels() (codec method)": [[32, "skia.Codec.getPixels"]], "getrepetitioncount() (codec method)": [[32, "skia.Codec.getRepetitionCount"]], "getscaleddimensions() (codec method)": [[32, "skia.Codec.getScaledDimensions"]], "getscanlineorder() (codec method)": [[32, "skia.Codec.getScanlineOrder"]], "getscanlines() (codec method)": [[32, "skia.Codec.getScanlines"]], "getvalidsubset() (codec method)": [[32, "skia.Codec.getValidSubset"]], "getyuvaplanes() (codec method)": [[32, "skia.Codec.getYUVAPlanes"]], "incrementaldecode() (codec method)": [[32, "skia.Codec.incrementalDecode"]], "kcouldnotrewind (codec attribute)": [[32, "skia.Codec.kCouldNotRewind"]], "kerrorininput (codec attribute)": [[32, "skia.Codec.kErrorInInput"]], "kincompleteinput (codec attribute)": [[32, "skia.Codec.kIncompleteInput"]], "kinternalerror (codec attribute)": [[32, "skia.Codec.kInternalError"]], "kinvalidconversion (codec attribute)": [[32, "skia.Codec.kInvalidConversion"]], "kinvalidinput (codec attribute)": [[32, "skia.Codec.kInvalidInput"]], "kinvalidparameters (codec attribute)": [[32, "skia.Codec.kInvalidParameters"]], "kinvalidscale (codec attribute)": [[32, "skia.Codec.kInvalidScale"]], "kkeep (codec attribute)": [[32, "skia.Codec.kKeep"]], "knoframe (codec attribute)": [[32, "skia.Codec.kNoFrame"]], "kno_zeroinitialized (codec attribute)": [[32, "skia.Codec.kNo_ZeroInitialized"]], "kpreferanimation (codec attribute)": [[32, "skia.Codec.kPreferAnimation"]], "kpreferstillimage (codec attribute)": [[32, "skia.Codec.kPreferStillImage"]], "krepetitioncountinfinite (codec attribute)": [[32, "skia.Codec.kRepetitionCountInfinite"]], "krestorebgcolor (codec attribute)": [[32, "skia.Codec.kRestoreBGColor"]], "krestoreprevious (codec attribute)": [[32, "skia.Codec.kRestorePrevious"]], "ksuccess (codec attribute)": [[32, "skia.Codec.kSuccess"]], "kunimplemented (codec attribute)": [[32, "skia.Codec.kUnimplemented"]], "kyes_zeroinitialized (codec attribute)": [[32, "skia.Codec.kYes_ZeroInitialized"]], "nextscanline() (codec method)": [[32, "skia.Codec.nextScanline"]], "outputscanline() (codec method)": [[32, "skia.Codec.outputScanline"]], "queryyuvainfo() (codec method)": [[32, "skia.Codec.queryYUVAInfo"]], "skipscanlines() (codec method)": [[32, "skia.Codec.skipScanlines"]], "startincrementaldecode() (codec method)": [[32, "skia.Codec.startIncrementalDecode"]], "startscanlinedecode() (codec method)": [[32, "skia.Codec.startScanlineDecode"]], "disposalmethod (class in skia.codec)": [[33, "skia.Codec.DisposalMethod"]], "__init__() (disposalmethod method)": [[33, "skia.Codec.DisposalMethod.__init__"]], "kkeep (disposalmethod attribute)": [[33, "skia.Codec.DisposalMethod.kKeep"]], "krestorebgcolor (disposalmethod attribute)": [[33, "skia.Codec.DisposalMethod.kRestoreBGColor"]], "krestoreprevious (disposalmethod attribute)": [[33, "skia.Codec.DisposalMethod.kRestorePrevious"]], "name (disposalmethod attribute)": [[33, "skia.Codec.DisposalMethod.name"]], "value (disposalmethod attribute)": [[33, "skia.Codec.DisposalMethod.value"]], "frameinfo (class in skia.codec)": [[34, "skia.Codec.FrameInfo"]], "__init__() (frameinfo method)": [[34, "skia.Codec.FrameInfo.__init__"]], "falphatype (frameinfo attribute)": [[34, "skia.Codec.FrameInfo.fAlphaType"]], "fdisposalmethod (frameinfo attribute)": [[34, "skia.Codec.FrameInfo.fDisposalMethod"]], "fduration (frameinfo attribute)": [[34, "skia.Codec.FrameInfo.fDuration"]], "ffullyreceived (frameinfo attribute)": [[34, "skia.Codec.FrameInfo.fFullyReceived"]], "frequiredframe (frameinfo attribute)": [[34, "skia.Codec.FrameInfo.fRequiredFrame"]], "options (class in skia.codec)": [[35, "skia.Codec.Options"]], "__init__() (options method)": [[35, "skia.Codec.Options.__init__"]], "fframeindex (options attribute)": [[35, "skia.Codec.Options.fFrameIndex"]], "fpriorframe (options attribute)": [[35, "skia.Codec.Options.fPriorFrame"]], "fsubset (options attribute)": [[35, "skia.Codec.Options.fSubset"]], "fzeroinitialized (options attribute)": [[35, "skia.Codec.Options.fZeroInitialized"]], "result (class in skia.codec)": [[36, "skia.Codec.Result"]], "__init__() (result method)": [[36, "skia.Codec.Result.__init__"]], "kcouldnotrewind (result attribute)": [[36, "skia.Codec.Result.kCouldNotRewind"]], "kerrorininput (result attribute)": [[36, "skia.Codec.Result.kErrorInInput"]], "kincompleteinput (result attribute)": [[36, "skia.Codec.Result.kIncompleteInput"]], "kinternalerror (result attribute)": [[36, "skia.Codec.Result.kInternalError"]], "kinvalidconversion (result attribute)": [[36, "skia.Codec.Result.kInvalidConversion"]], "kinvalidinput (result attribute)": [[36, "skia.Codec.Result.kInvalidInput"]], "kinvalidparameters (result attribute)": [[36, "skia.Codec.Result.kInvalidParameters"]], "kinvalidscale (result attribute)": [[36, "skia.Codec.Result.kInvalidScale"]], "ksuccess (result attribute)": [[36, "skia.Codec.Result.kSuccess"]], "kunimplemented (result attribute)": [[36, "skia.Codec.Result.kUnimplemented"]], "name (result attribute)": [[36, "skia.Codec.Result.name"]], "value (result attribute)": [[36, "skia.Codec.Result.value"]], "scanlineorder (class in skia.codec)": [[37, "skia.Codec.ScanlineOrder"]], "__init__() (scanlineorder method)": [[37, "skia.Codec.ScanlineOrder.__init__"]], "kkeep (scanlineorder attribute)": [[37, "skia.Codec.ScanlineOrder.kKeep"]], "krestorebgcolor (scanlineorder attribute)": [[37, "skia.Codec.ScanlineOrder.kRestoreBGColor"]], "name (scanlineorder attribute)": [[37, "skia.Codec.ScanlineOrder.name"]], "value (scanlineorder attribute)": [[37, "skia.Codec.ScanlineOrder.value"]], "selectionpolicy (class in skia.codec)": [[38, "skia.Codec.SelectionPolicy"]], "__init__() (selectionpolicy method)": [[38, "skia.Codec.SelectionPolicy.__init__"]], "kpreferanimation (selectionpolicy attribute)": [[38, "skia.Codec.SelectionPolicy.kPreferAnimation"]], "kpreferstillimage (selectionpolicy attribute)": [[38, "skia.Codec.SelectionPolicy.kPreferStillImage"]], "name (selectionpolicy attribute)": [[38, "skia.Codec.SelectionPolicy.name"]], "value (selectionpolicy attribute)": [[38, "skia.Codec.SelectionPolicy.value"]], "zeroinitialized (class in skia.codec)": [[39, "skia.Codec.ZeroInitialized"]], "__init__() (zeroinitialized method)": [[39, "skia.Codec.ZeroInitialized.__init__"]], "kno_zeroinitialized (zeroinitialized attribute)": [[39, "skia.Codec.ZeroInitialized.kNo_ZeroInitialized"]], "kyes_zeroinitialized (zeroinitialized attribute)": [[39, "skia.Codec.ZeroInitialized.kYes_ZeroInitialized"]], "name (zeroinitialized attribute)": [[39, "skia.Codec.ZeroInitialized.name"]], "value (zeroinitialized attribute)": [[39, "skia.Codec.ZeroInitialized.value"]], "color4f (class in skia)": [[40, "skia.Color4f"]], "frombytes_rgba() (color4f static method)": [[40, "skia.Color4f.FromBytes_RGBA"]], "fromcolor() (color4f static method)": [[40, "skia.Color4f.FromColor"]], "__init__() (color4f method)": [[40, "skia.Color4f.__init__"]], "fa (color4f attribute)": [[40, "skia.Color4f.fA"]], "fb (color4f attribute)": [[40, "skia.Color4f.fB"]], "fg (color4f attribute)": [[40, "skia.Color4f.fG"]], "fr (color4f attribute)": [[40, "skia.Color4f.fR"]], "fitsinbytes() (color4f method)": [[40, "skia.Color4f.fitsInBytes"]], "isopaque() (color4f method)": [[40, "skia.Color4f.isOpaque"]], "kblack (color4f attribute)": [[40, "skia.Color4f.kBlack"]], "kblue (color4f attribute)": [[40, "skia.Color4f.kBlue"]], "kcyan (color4f attribute)": [[40, "skia.Color4f.kCyan"]], "kdkgray (color4f attribute)": [[40, "skia.Color4f.kDkGray"]], "kgray (color4f attribute)": [[40, "skia.Color4f.kGray"]], "kgreen (color4f attribute)": [[40, "skia.Color4f.kGreen"]], "kltgray (color4f attribute)": [[40, "skia.Color4f.kLtGray"]], "kmagenta (color4f attribute)": [[40, "skia.Color4f.kMagenta"]], "kred (color4f attribute)": [[40, "skia.Color4f.kRed"]], "ktransparent (color4f attribute)": [[40, "skia.Color4f.kTransparent"]], "kwhite (color4f attribute)": [[40, "skia.Color4f.kWhite"]], "kyellow (color4f attribute)": [[40, "skia.Color4f.kYellow"]], "makeopaque() (color4f method)": [[40, "skia.Color4f.makeOpaque"]], "tobytes_rgba() (color4f method)": [[40, "skia.Color4f.toBytes_RGBA"]], "tocolor() (color4f method)": [[40, "skia.Color4f.toColor"]], "vec() (color4f method)": [[40, "skia.Color4f.vec"]], "colorchannel (class in skia)": [[41, "skia.ColorChannel"]], "__init__() (colorchannel method)": [[41, "skia.ColorChannel.__init__"]], "ka (colorchannel attribute)": [[41, "skia.ColorChannel.kA"]], "kb (colorchannel attribute)": [[41, "skia.ColorChannel.kB"]], "kg (colorchannel attribute)": [[41, "skia.ColorChannel.kG"]], "klastenum (colorchannel attribute)": [[41, "skia.ColorChannel.kLastEnum"]], "kr (colorchannel attribute)": [[41, "skia.ColorChannel.kR"]], "name (colorchannel attribute)": [[41, "skia.ColorChannel.name"]], "value (colorchannel attribute)": [[41, "skia.ColorChannel.value"]], "colorchannelflag (class in skia)": [[42, "skia.ColorChannelFlag"]], "__init__() (colorchannelflag method)": [[42, "skia.ColorChannelFlag.__init__"]], "kalpha_colorchannelflag (colorchannelflag attribute)": [[42, "skia.ColorChannelFlag.kAlpha_ColorChannelFlag"]], "kblue_colorchannelflag (colorchannelflag attribute)": [[42, "skia.ColorChannelFlag.kBlue_ColorChannelFlag"]], "kgray_colorchannelflag (colorchannelflag attribute)": [[42, "skia.ColorChannelFlag.kGray_ColorChannelFlag"]], "kgreen_colorchannelflag (colorchannelflag attribute)": [[42, "skia.ColorChannelFlag.kGreen_ColorChannelFlag"]], "krgba_colorchannelflags (colorchannelflag attribute)": [[42, "skia.ColorChannelFlag.kRGBA_ColorChannelFlags"]], "krgb_colorchannelflags (colorchannelflag attribute)": [[42, "skia.ColorChannelFlag.kRGB_ColorChannelFlags"]], "krg_colorchannelflags (colorchannelflag attribute)": [[42, "skia.ColorChannelFlag.kRG_ColorChannelFlags"]], "kred_colorchannelflag (colorchannelflag attribute)": [[42, "skia.ColorChannelFlag.kRed_ColorChannelFlag"]], "name (colorchannelflag attribute)": [[42, "skia.ColorChannelFlag.name"]], "value (colorchannelflag attribute)": [[42, "skia.ColorChannelFlag.value"]], "colorfilter (class in skia)": [[43, "skia.ColorFilter"]], "deserialize() (colorfilter static method)": [[43, "skia.ColorFilter.Deserialize"]], "__init__() (colorfilter method)": [[43, "skia.ColorFilter.__init__"]], "asacolormatrix() (colorfilter method)": [[43, "skia.ColorFilter.asAColorMatrix"]], "asacolormode() (colorfilter method)": [[43, "skia.ColorFilter.asAColorMode"]], "ascolormode() (colorfilter method)": [[43, "skia.ColorFilter.asColorMode"]], "filtercolor() (colorfilter method)": [[43, "skia.ColorFilter.filterColor"]], "filtercolor4f() (colorfilter method)": [[43, "skia.ColorFilter.filterColor4f"]], "getflags() (colorfilter method)": [[43, "skia.ColorFilter.getFlags"]], "getflattenabletype() (colorfilter method)": [[43, "skia.ColorFilter.getFlattenableType"]], "gettypename() (colorfilter method)": [[43, "skia.ColorFilter.getTypeName"]], "kalphaunchanged_flag (colorfilter attribute)": [[43, "skia.ColorFilter.kAlphaUnchanged_Flag"]], "kcolorfilter_type (colorfilter attribute)": [[43, "skia.ColorFilter.kColorFilter_Type"]], "kdrawlooper_type (colorfilter attribute)": [[43, "skia.ColorFilter.kDrawLooper_Type"]], "kdrawable_type (colorfilter attribute)": [[43, "skia.ColorFilter.kDrawable_Type"]], "kimagefilter_type (colorfilter attribute)": [[43, "skia.ColorFilter.kImageFilter_Type"]], "kmaskfilter_type (colorfilter attribute)": [[43, "skia.ColorFilter.kMaskFilter_Type"]], "kpatheffect_type (colorfilter attribute)": [[43, "skia.ColorFilter.kPathEffect_Type"]], "kpixelref_type (colorfilter attribute)": [[43, "skia.ColorFilter.kPixelRef_Type"]], "kshaderbase_type (colorfilter attribute)": [[43, "skia.ColorFilter.kShaderBase_Type"]], "kunused_type (colorfilter attribute)": [[43, "skia.ColorFilter.kUnused_Type"]], "kunused_type2 (colorfilter attribute)": [[43, "skia.ColorFilter.kUnused_Type2"]], "kunused_type3 (colorfilter attribute)": [[43, "skia.ColorFilter.kUnused_Type3"]], "kunused_type4 (colorfilter attribute)": [[43, "skia.ColorFilter.kUnused_Type4"]], "makecomposed() (colorfilter method)": [[43, "skia.ColorFilter.makeComposed"]], "ref() (colorfilter method)": [[43, "skia.ColorFilter.ref"]], "serialize() (colorfilter method)": [[43, "skia.ColorFilter.serialize"]], "unique() (colorfilter method)": [[43, "skia.ColorFilter.unique"]], "unref() (colorfilter method)": [[43, "skia.ColorFilter.unref"]], "flags (class in skia.colorfilter)": [[44, "skia.ColorFilter.Flags"]], "__init__() (flags method)": [[44, "skia.ColorFilter.Flags.__init__"], [51, "skia.ColorMatrixFilter.Flags.__init__"], [141, "skia.GradientShader.Flags.__init__"], [276, "skia.SurfaceProps.Flags.__init__"]], "kalphaunchanged_flag (flags attribute)": [[44, "skia.ColorFilter.Flags.kAlphaUnchanged_Flag"], [51, "skia.ColorMatrixFilter.Flags.kAlphaUnchanged_Flag"]], "name (flags attribute)": [[44, "skia.ColorFilter.Flags.name"], [51, "skia.ColorMatrixFilter.Flags.name"], [141, "skia.GradientShader.Flags.name"], [276, "skia.SurfaceProps.Flags.name"]], "value (flags attribute)": [[44, "skia.ColorFilter.Flags.value"], [51, "skia.ColorMatrixFilter.Flags.value"], [141, "skia.GradientShader.Flags.value"], [276, "skia.SurfaceProps.Flags.value"]], "type (class in skia.colorfilter)": [[45, "skia.ColorFilter.Type"]], "__init__() (type method)": [[45, "skia.ColorFilter.Type.__init__"], [52, "skia.ColorMatrixFilter.Type.__init__"], [61, "skia.CornerPathEffect.Type.__init__"], [70, "skia.DiscretePathEffect.Type.__init__"], [75, "skia.Drawable.Type.__init__"], [86, "skia.Flattanable.Type.__init__"], [157, "skia.ImageFilter.Type.__init__"], [166, "skia.Line2DPathEffect.Type.__init__"], [171, "skia.MaskFilter.Type.__init__"], [206, "skia.Path1DPathEffect.Type.__init__"], [212, "skia.Path2DPathEffect.Type.__init__"], [221, "skia.PathEffect.Type.__init__"], [239, "skia.RRect.Type.__init__"], [254, "skia.Shader.Type.__init__"]], "kcolorfilter_type (type attribute)": [[45, "skia.ColorFilter.Type.kColorFilter_Type"], [52, "skia.ColorMatrixFilter.Type.kColorFilter_Type"], [61, "skia.CornerPathEffect.Type.kColorFilter_Type"], [70, "skia.DiscretePathEffect.Type.kColorFilter_Type"], [75, "skia.Drawable.Type.kColorFilter_Type"], [86, "skia.Flattanable.Type.kColorFilter_Type"], [157, "skia.ImageFilter.Type.kColorFilter_Type"], [166, "skia.Line2DPathEffect.Type.kColorFilter_Type"], [171, "skia.MaskFilter.Type.kColorFilter_Type"], [206, "skia.Path1DPathEffect.Type.kColorFilter_Type"], [212, "skia.Path2DPathEffect.Type.kColorFilter_Type"], [221, "skia.PathEffect.Type.kColorFilter_Type"], [254, "skia.Shader.Type.kColorFilter_Type"]], "kdrawlooper_type (type attribute)": [[45, "skia.ColorFilter.Type.kDrawLooper_Type"], [52, "skia.ColorMatrixFilter.Type.kDrawLooper_Type"], [61, "skia.CornerPathEffect.Type.kDrawLooper_Type"], [70, "skia.DiscretePathEffect.Type.kDrawLooper_Type"], [75, "skia.Drawable.Type.kDrawLooper_Type"], [86, "skia.Flattanable.Type.kDrawLooper_Type"], [157, "skia.ImageFilter.Type.kDrawLooper_Type"], [166, "skia.Line2DPathEffect.Type.kDrawLooper_Type"], [171, "skia.MaskFilter.Type.kDrawLooper_Type"], [206, "skia.Path1DPathEffect.Type.kDrawLooper_Type"], [212, "skia.Path2DPathEffect.Type.kDrawLooper_Type"], [221, "skia.PathEffect.Type.kDrawLooper_Type"], [254, "skia.Shader.Type.kDrawLooper_Type"]], "kdrawable_type (type attribute)": [[45, "skia.ColorFilter.Type.kDrawable_Type"], [52, "skia.ColorMatrixFilter.Type.kDrawable_Type"], [61, "skia.CornerPathEffect.Type.kDrawable_Type"], [70, "skia.DiscretePathEffect.Type.kDrawable_Type"], [75, "skia.Drawable.Type.kDrawable_Type"], [86, "skia.Flattanable.Type.kDrawable_Type"], [157, "skia.ImageFilter.Type.kDrawable_Type"], [166, "skia.Line2DPathEffect.Type.kDrawable_Type"], [171, "skia.MaskFilter.Type.kDrawable_Type"], [206, "skia.Path1DPathEffect.Type.kDrawable_Type"], [212, "skia.Path2DPathEffect.Type.kDrawable_Type"], [221, "skia.PathEffect.Type.kDrawable_Type"], [254, "skia.Shader.Type.kDrawable_Type"]], "kimagefilter_type (type attribute)": [[45, "skia.ColorFilter.Type.kImageFilter_Type"], [52, "skia.ColorMatrixFilter.Type.kImageFilter_Type"], [61, "skia.CornerPathEffect.Type.kImageFilter_Type"], [70, "skia.DiscretePathEffect.Type.kImageFilter_Type"], [75, "skia.Drawable.Type.kImageFilter_Type"], [86, "skia.Flattanable.Type.kImageFilter_Type"], [157, "skia.ImageFilter.Type.kImageFilter_Type"], [166, "skia.Line2DPathEffect.Type.kImageFilter_Type"], [171, "skia.MaskFilter.Type.kImageFilter_Type"], [206, "skia.Path1DPathEffect.Type.kImageFilter_Type"], [212, "skia.Path2DPathEffect.Type.kImageFilter_Type"], [221, "skia.PathEffect.Type.kImageFilter_Type"], [254, "skia.Shader.Type.kImageFilter_Type"]], "kmaskfilter_type (type attribute)": [[45, "skia.ColorFilter.Type.kMaskFilter_Type"], [52, "skia.ColorMatrixFilter.Type.kMaskFilter_Type"], [61, "skia.CornerPathEffect.Type.kMaskFilter_Type"], [70, "skia.DiscretePathEffect.Type.kMaskFilter_Type"], [75, "skia.Drawable.Type.kMaskFilter_Type"], [86, "skia.Flattanable.Type.kMaskFilter_Type"], [157, "skia.ImageFilter.Type.kMaskFilter_Type"], [166, "skia.Line2DPathEffect.Type.kMaskFilter_Type"], [171, "skia.MaskFilter.Type.kMaskFilter_Type"], [206, "skia.Path1DPathEffect.Type.kMaskFilter_Type"], [212, "skia.Path2DPathEffect.Type.kMaskFilter_Type"], [221, "skia.PathEffect.Type.kMaskFilter_Type"], [254, "skia.Shader.Type.kMaskFilter_Type"]], "kpatheffect_type (type attribute)": [[45, "skia.ColorFilter.Type.kPathEffect_Type"], [52, "skia.ColorMatrixFilter.Type.kPathEffect_Type"], [61, "skia.CornerPathEffect.Type.kPathEffect_Type"], [70, "skia.DiscretePathEffect.Type.kPathEffect_Type"], [75, "skia.Drawable.Type.kPathEffect_Type"], [86, "skia.Flattanable.Type.kPathEffect_Type"], [157, "skia.ImageFilter.Type.kPathEffect_Type"], [166, "skia.Line2DPathEffect.Type.kPathEffect_Type"], [171, "skia.MaskFilter.Type.kPathEffect_Type"], [206, "skia.Path1DPathEffect.Type.kPathEffect_Type"], [212, "skia.Path2DPathEffect.Type.kPathEffect_Type"], [221, "skia.PathEffect.Type.kPathEffect_Type"], [254, "skia.Shader.Type.kPathEffect_Type"]], "kpixelref_type (type attribute)": [[45, "skia.ColorFilter.Type.kPixelRef_Type"], [52, "skia.ColorMatrixFilter.Type.kPixelRef_Type"], [61, "skia.CornerPathEffect.Type.kPixelRef_Type"], [70, "skia.DiscretePathEffect.Type.kPixelRef_Type"], [75, "skia.Drawable.Type.kPixelRef_Type"], [86, "skia.Flattanable.Type.kPixelRef_Type"], [157, "skia.ImageFilter.Type.kPixelRef_Type"], [166, "skia.Line2DPathEffect.Type.kPixelRef_Type"], [171, "skia.MaskFilter.Type.kPixelRef_Type"], [206, "skia.Path1DPathEffect.Type.kPixelRef_Type"], [212, "skia.Path2DPathEffect.Type.kPixelRef_Type"], [221, "skia.PathEffect.Type.kPixelRef_Type"], [254, "skia.Shader.Type.kPixelRef_Type"]], "kshaderbase_type (type attribute)": [[45, "skia.ColorFilter.Type.kShaderBase_Type"], [52, "skia.ColorMatrixFilter.Type.kShaderBase_Type"], [61, "skia.CornerPathEffect.Type.kShaderBase_Type"], [70, "skia.DiscretePathEffect.Type.kShaderBase_Type"], [75, "skia.Drawable.Type.kShaderBase_Type"], [86, "skia.Flattanable.Type.kShaderBase_Type"], [157, "skia.ImageFilter.Type.kShaderBase_Type"], [166, "skia.Line2DPathEffect.Type.kShaderBase_Type"], [171, "skia.MaskFilter.Type.kShaderBase_Type"], [206, "skia.Path1DPathEffect.Type.kShaderBase_Type"], [212, "skia.Path2DPathEffect.Type.kShaderBase_Type"], [221, "skia.PathEffect.Type.kShaderBase_Type"], [254, "skia.Shader.Type.kShaderBase_Type"]], "kunused_type (type attribute)": [[45, "skia.ColorFilter.Type.kUnused_Type"], [52, "skia.ColorMatrixFilter.Type.kUnused_Type"], [61, "skia.CornerPathEffect.Type.kUnused_Type"], [70, "skia.DiscretePathEffect.Type.kUnused_Type"], [75, "skia.Drawable.Type.kUnused_Type"], [86, "skia.Flattanable.Type.kUnused_Type"], [157, "skia.ImageFilter.Type.kUnused_Type"], [166, "skia.Line2DPathEffect.Type.kUnused_Type"], [171, "skia.MaskFilter.Type.kUnused_Type"], [206, "skia.Path1DPathEffect.Type.kUnused_Type"], [212, "skia.Path2DPathEffect.Type.kUnused_Type"], [221, "skia.PathEffect.Type.kUnused_Type"], [254, "skia.Shader.Type.kUnused_Type"]], "kunused_type2 (type attribute)": [[45, "skia.ColorFilter.Type.kUnused_Type2"], [52, "skia.ColorMatrixFilter.Type.kUnused_Type2"], [61, "skia.CornerPathEffect.Type.kUnused_Type2"], [70, "skia.DiscretePathEffect.Type.kUnused_Type2"], [75, "skia.Drawable.Type.kUnused_Type2"], [86, "skia.Flattanable.Type.kUnused_Type2"], [157, "skia.ImageFilter.Type.kUnused_Type2"], [166, "skia.Line2DPathEffect.Type.kUnused_Type2"], [171, "skia.MaskFilter.Type.kUnused_Type2"], [206, "skia.Path1DPathEffect.Type.kUnused_Type2"], [212, "skia.Path2DPathEffect.Type.kUnused_Type2"], [221, "skia.PathEffect.Type.kUnused_Type2"], [254, "skia.Shader.Type.kUnused_Type2"]], "kunused_type3 (type attribute)": [[45, "skia.ColorFilter.Type.kUnused_Type3"], [52, "skia.ColorMatrixFilter.Type.kUnused_Type3"], [61, "skia.CornerPathEffect.Type.kUnused_Type3"], [70, "skia.DiscretePathEffect.Type.kUnused_Type3"], [75, "skia.Drawable.Type.kUnused_Type3"], [86, "skia.Flattanable.Type.kUnused_Type3"], [157, "skia.ImageFilter.Type.kUnused_Type3"], [166, "skia.Line2DPathEffect.Type.kUnused_Type3"], [171, "skia.MaskFilter.Type.kUnused_Type3"], [206, "skia.Path1DPathEffect.Type.kUnused_Type3"], [212, "skia.Path2DPathEffect.Type.kUnused_Type3"], [221, "skia.PathEffect.Type.kUnused_Type3"], [254, "skia.Shader.Type.kUnused_Type3"]], "kunused_type4 (type attribute)": [[45, "skia.ColorFilter.Type.kUnused_Type4"], [52, "skia.ColorMatrixFilter.Type.kUnused_Type4"], [61, "skia.CornerPathEffect.Type.kUnused_Type4"], [70, "skia.DiscretePathEffect.Type.kUnused_Type4"], [75, "skia.Drawable.Type.kUnused_Type4"], [86, "skia.Flattanable.Type.kUnused_Type4"], [157, "skia.ImageFilter.Type.kUnused_Type4"], [166, "skia.Line2DPathEffect.Type.kUnused_Type4"], [171, "skia.MaskFilter.Type.kUnused_Type4"], [206, "skia.Path1DPathEffect.Type.kUnused_Type4"], [212, "skia.Path2DPathEffect.Type.kUnused_Type4"], [221, "skia.PathEffect.Type.kUnused_Type4"], [254, "skia.Shader.Type.kUnused_Type4"]], "name (type attribute)": [[45, "skia.ColorFilter.Type.name"], [52, "skia.ColorMatrixFilter.Type.name"], [61, "skia.CornerPathEffect.Type.name"], [70, "skia.DiscretePathEffect.Type.name"], [75, "skia.Drawable.Type.name"], [86, "skia.Flattanable.Type.name"], [157, "skia.ImageFilter.Type.name"], [166, "skia.Line2DPathEffect.Type.name"], [171, "skia.MaskFilter.Type.name"], [206, "skia.Path1DPathEffect.Type.name"], [212, "skia.Path2DPathEffect.Type.name"], [221, "skia.PathEffect.Type.name"], [239, "skia.RRect.Type.name"], [254, "skia.Shader.Type.name"]], "value (type attribute)": [[45, "skia.ColorFilter.Type.value"], [52, "skia.ColorMatrixFilter.Type.value"], [61, "skia.CornerPathEffect.Type.value"], [70, "skia.DiscretePathEffect.Type.value"], [75, "skia.Drawable.Type.value"], [86, "skia.Flattanable.Type.value"], [157, "skia.ImageFilter.Type.value"], [166, "skia.Line2DPathEffect.Type.value"], [171, "skia.MaskFilter.Type.value"], [206, "skia.Path1DPathEffect.Type.value"], [212, "skia.Path2DPathEffect.Type.value"], [221, "skia.PathEffect.Type.value"], [239, "skia.RRect.Type.value"], [254, "skia.Shader.Type.value"]], "colorfilterimagefilter (class in skia)": [[46, "skia.ColorFilterImageFilter"]], "make() (colorfilterimagefilter static method)": [[46, "skia.ColorFilterImageFilter.Make"]], "__init__() (colorfilterimagefilter method)": [[46, "skia.ColorFilterImageFilter.__init__"]], "blend() (colorfilters static method)": [[47, "skia.ColorFilters.Blend"]], "colorfilters (class in skia)": [[47, "skia.ColorFilters"]], "compose() (colorfilters static method)": [[47, "skia.ColorFilters.Compose"]], "hslamatrix() (colorfilters static method)": [[47, "skia.ColorFilters.HSLAMatrix"]], "lerp() (colorfilters static method)": [[47, "skia.ColorFilters.Lerp"]], "lineartosrgbgamma() (colorfilters static method)": [[47, "skia.ColorFilters.LinearToSRGBGamma"]], "matrix() (colorfilters static method)": [[47, "skia.ColorFilters.Matrix"]], "srgbtolineargamma() (colorfilters static method)": [[47, "skia.ColorFilters.SRGBToLinearGamma"]], "__init__() (colorfilters method)": [[47, "skia.ColorFilters.__init__"]], "colorinfo (class in skia)": [[48, "skia.ColorInfo"]], "__init__() (colorinfo method)": [[48, "skia.ColorInfo.__init__"]], "alphatype() (colorinfo method)": [[48, "skia.ColorInfo.alphaType"]], "bytesperpixel() (colorinfo method)": [[48, "skia.ColorInfo.bytesPerPixel"]], "colorspace() (colorinfo method)": [[48, "skia.ColorInfo.colorSpace"]], "colortype() (colorinfo method)": [[48, "skia.ColorInfo.colorType"]], "gammaclosetosrgb() (colorinfo method)": [[48, "skia.ColorInfo.gammaCloseToSRGB"]], "isopaque() (colorinfo method)": [[48, "skia.ColorInfo.isOpaque"]], "makealphatype() (colorinfo method)": [[48, "skia.ColorInfo.makeAlphaType"]], "makecolorspace() (colorinfo method)": [[48, "skia.ColorInfo.makeColorSpace"]], "makecolortype() (colorinfo method)": [[48, "skia.ColorInfo.makeColorType"]], "refcolorspace() (colorinfo method)": [[48, "skia.ColorInfo.refColorSpace"]], "shiftperpixel() (colorinfo method)": [[48, "skia.ColorInfo.shiftPerPixel"]], "colormatrix (class in skia)": [[49, "skia.ColorMatrix"]], "__init__() (colormatrix method)": [[49, "skia.ColorMatrix.__init__"]], "colormatrixfilter (class in skia)": [[50, "skia.ColorMatrixFilter"]], "deserialize() (colormatrixfilter static method)": [[50, "skia.ColorMatrixFilter.Deserialize"]], "makelightingfilter() (colormatrixfilter static method)": [[50, "skia.ColorMatrixFilter.MakeLightingFilter"]], "__init__() (colormatrixfilter method)": [[50, "skia.ColorMatrixFilter.__init__"]], "asacolormatrix() (colormatrixfilter method)": [[50, "skia.ColorMatrixFilter.asAColorMatrix"]], "asacolormode() (colormatrixfilter method)": [[50, "skia.ColorMatrixFilter.asAColorMode"]], "ascolormode() (colormatrixfilter method)": [[50, "skia.ColorMatrixFilter.asColorMode"]], "filtercolor() (colormatrixfilter method)": [[50, "skia.ColorMatrixFilter.filterColor"]], "filtercolor4f() (colormatrixfilter method)": [[50, "skia.ColorMatrixFilter.filterColor4f"]], "getflags() (colormatrixfilter method)": [[50, "skia.ColorMatrixFilter.getFlags"]], "getflattenabletype() (colormatrixfilter method)": [[50, "skia.ColorMatrixFilter.getFlattenableType"]], "gettypename() (colormatrixfilter method)": [[50, "skia.ColorMatrixFilter.getTypeName"]], "kalphaunchanged_flag (colormatrixfilter attribute)": [[50, "skia.ColorMatrixFilter.kAlphaUnchanged_Flag"]], "kcolorfilter_type (colormatrixfilter attribute)": [[50, "skia.ColorMatrixFilter.kColorFilter_Type"]], "kdrawlooper_type (colormatrixfilter attribute)": [[50, "skia.ColorMatrixFilter.kDrawLooper_Type"]], "kdrawable_type (colormatrixfilter attribute)": [[50, "skia.ColorMatrixFilter.kDrawable_Type"]], "kimagefilter_type (colormatrixfilter attribute)": [[50, "skia.ColorMatrixFilter.kImageFilter_Type"]], "kmaskfilter_type (colormatrixfilter attribute)": [[50, "skia.ColorMatrixFilter.kMaskFilter_Type"]], "kpatheffect_type (colormatrixfilter attribute)": [[50, "skia.ColorMatrixFilter.kPathEffect_Type"]], "kpixelref_type (colormatrixfilter attribute)": [[50, "skia.ColorMatrixFilter.kPixelRef_Type"]], "kshaderbase_type (colormatrixfilter attribute)": [[50, "skia.ColorMatrixFilter.kShaderBase_Type"]], "kunused_type (colormatrixfilter attribute)": [[50, "skia.ColorMatrixFilter.kUnused_Type"]], "kunused_type2 (colormatrixfilter attribute)": [[50, "skia.ColorMatrixFilter.kUnused_Type2"]], "kunused_type3 (colormatrixfilter attribute)": [[50, "skia.ColorMatrixFilter.kUnused_Type3"]], "kunused_type4 (colormatrixfilter attribute)": [[50, "skia.ColorMatrixFilter.kUnused_Type4"]], "makecomposed() (colormatrixfilter method)": [[50, "skia.ColorMatrixFilter.makeComposed"]], "ref() (colormatrixfilter method)": [[50, "skia.ColorMatrixFilter.ref"]], "serialize() (colormatrixfilter method)": [[50, "skia.ColorMatrixFilter.serialize"]], "unique() (colormatrixfilter method)": [[50, "skia.ColorMatrixFilter.unique"]], "unref() (colormatrixfilter method)": [[50, "skia.ColorMatrixFilter.unref"]], "flags (class in skia.colormatrixfilter)": [[51, "skia.ColorMatrixFilter.Flags"]], "type (class in skia.colormatrixfilter)": [[52, "skia.ColorMatrixFilter.Type"]], "colorspace (class in skia)": [[53, "skia.ColorSpace"]], "deserialize() (colorspace static method)": [[53, "skia.ColorSpace.Deserialize"]], "equals() (colorspace static method)": [[53, "skia.ColorSpace.Equals"]], "make() (colorspace static method)": [[53, "skia.ColorSpace.Make"]], "makergb() (colorspace static method)": [[53, "skia.ColorSpace.MakeRGB"]], "makesrgb() (colorspace static method)": [[53, "skia.ColorSpace.MakeSRGB"]], "makesrgblinear() (colorspace static method)": [[53, "skia.ColorSpace.MakeSRGBLinear"]], "__init__() (colorspace method)": [[53, "skia.ColorSpace.__init__"]], "deref() (colorspace method)": [[53, "skia.ColorSpace.deref"]], "gammaclosetosrgb() (colorspace method)": [[53, "skia.ColorSpace.gammaCloseToSRGB"]], "gammaislinear() (colorspace method)": [[53, "skia.ColorSpace.gammaIsLinear"]], "gamuttransformto() (colorspace method)": [[53, "skia.ColorSpace.gamutTransformTo"]], "hash() (colorspace method)": [[53, "skia.ColorSpace.hash"]], "invtransferfn() (colorspace method)": [[53, "skia.ColorSpace.invTransferFn"]], "isnumericaltransferfn() (colorspace method)": [[53, "skia.ColorSpace.isNumericalTransferFn"]], "issrgb() (colorspace method)": [[53, "skia.ColorSpace.isSRGB"]], "makecolorspin() (colorspace method)": [[53, "skia.ColorSpace.makeColorSpin"]], "makelineargamma() (colorspace method)": [[53, "skia.ColorSpace.makeLinearGamma"]], "makesrgbgamma() (colorspace method)": [[53, "skia.ColorSpace.makeSRGBGamma"]], "ref() (colorspace method)": [[53, "skia.ColorSpace.ref"]], "refcntgreaterthan() (colorspace method)": [[53, "skia.ColorSpace.refCntGreaterThan"]], "serialize() (colorspace method)": [[53, "skia.ColorSpace.serialize"]], "toprofile() (colorspace method)": [[53, "skia.ColorSpace.toProfile"]], "toxyzd50() (colorspace method)": [[53, "skia.ColorSpace.toXYZD50"]], "toxyzd50hash() (colorspace method)": [[53, "skia.ColorSpace.toXYZD50Hash"]], "transferfn() (colorspace method)": [[53, "skia.ColorSpace.transferFn"]], "transferfnhash() (colorspace method)": [[53, "skia.ColorSpace.transferFnHash"]], "unique() (colorspace method)": [[53, "skia.ColorSpace.unique"]], "unref() (colorspace method)": [[53, "skia.ColorSpace.unref"]], "writetomemory() (colorspace method)": [[53, "skia.ColorSpace.writeToMemory"]], "colortype (class in skia)": [[54, "skia.ColorType"]], "__init__() (colortype method)": [[54, "skia.ColorType.__init__"]], "ka16_float_colortype (colortype attribute)": [[54, "skia.ColorType.kA16_float_ColorType"]], "ka16_unorm_colortype (colortype attribute)": [[54, "skia.ColorType.kA16_unorm_ColorType"]], "kargb_4444_colortype (colortype attribute)": [[54, "skia.ColorType.kARGB_4444_ColorType"]], "kalpha_8_colortype (colortype attribute)": [[54, "skia.ColorType.kAlpha_8_ColorType"]], "kbgra_1010102_colortype (colortype attribute)": [[54, "skia.ColorType.kBGRA_1010102_ColorType"]], "kbgra_8888_colortype (colortype attribute)": [[54, "skia.ColorType.kBGRA_8888_ColorType"]], "kbgr_101010x_colortype (colortype attribute)": [[54, "skia.ColorType.kBGR_101010x_ColorType"]], "kgray_8_colortype (colortype attribute)": [[54, "skia.ColorType.kGray_8_ColorType"]], "kn32_colortype (colortype attribute)": [[54, "skia.ColorType.kN32_ColorType"]], "kr16g16b16a16_unorm_colortype (colortype attribute)": [[54, "skia.ColorType.kR16G16B16A16_unorm_ColorType"]], "kr16g16_float_colortype (colortype attribute)": [[54, "skia.ColorType.kR16G16_float_ColorType"]], "kr16g16_unorm_colortype (colortype attribute)": [[54, "skia.ColorType.kR16G16_unorm_ColorType"]], "kr8g8_unorm_colortype (colortype attribute)": [[54, "skia.ColorType.kR8G8_unorm_ColorType"]], "krgba_1010102_colortype (colortype attribute)": [[54, "skia.ColorType.kRGBA_1010102_ColorType"]], "krgba_8888_colortype (colortype attribute)": [[54, "skia.ColorType.kRGBA_8888_ColorType"]], "krgba_f16norm_colortype (colortype attribute)": [[54, "skia.ColorType.kRGBA_F16Norm_ColorType"]], "krgba_f16_colortype (colortype attribute)": [[54, "skia.ColorType.kRGBA_F16_ColorType"]], "krgba_f32_colortype (colortype attribute)": [[54, "skia.ColorType.kRGBA_F32_ColorType"]], "krgb_101010x_colortype (colortype attribute)": [[54, "skia.ColorType.kRGB_101010x_ColorType"]], "krgb_565_colortype (colortype attribute)": [[54, "skia.ColorType.kRGB_565_ColorType"]], "krgb_888x_colortype (colortype attribute)": [[54, "skia.ColorType.kRGB_888x_ColorType"]], "kunknown_colortype (colortype attribute)": [[54, "skia.ColorType.kUnknown_ColorType"]], "name (colortype attribute)": [[54, "skia.ColorType.name"]], "value (colortype attribute)": [[54, "skia.ColorType.value"]], "convergemode (class in skia)": [[55, "skia.ConvergeMode"]], "__init__() (convergemode method)": [[55, "skia.ConvergeMode.__init__"]], "kdifference (convergemode attribute)": [[55, "skia.ConvergeMode.kDifference"]], "kintersect (convergemode attribute)": [[55, "skia.ConvergeMode.kIntersect"]], "klast (convergemode attribute)": [[55, "skia.ConvergeMode.kLast"]], "kreversedifference (convergemode attribute)": [[55, "skia.ConvergeMode.kReverseDifference"]], "kunion (convergemode attribute)": [[55, "skia.ConvergeMode.kUnion"]], "kxor (convergemode attribute)": [[55, "skia.ConvergeMode.kXor"]], "name (convergemode attribute)": [[55, "skia.ConvergeMode.name"]], "value (convergemode attribute)": [[55, "skia.ConvergeMode.value"]], "cornerpatheffect (class in skia)": [[56, "skia.CornerPathEffect"]], "deserialize() (cornerpatheffect static method)": [[56, "skia.CornerPathEffect.Deserialize"]], "getflattenabletype() (cornerpatheffect static method)": [[56, "skia.CornerPathEffect.GetFlattenableType"]], "make() (cornerpatheffect static method)": [[56, "skia.CornerPathEffect.Make"]], "makecompose() (cornerpatheffect static method)": [[56, "skia.CornerPathEffect.MakeCompose"]], "makesum() (cornerpatheffect static method)": [[56, "skia.CornerPathEffect.MakeSum"]], "registerflattenables() (cornerpatheffect static method)": [[56, "skia.CornerPathEffect.RegisterFlattenables"]], "__init__() (cornerpatheffect method)": [[56, "skia.CornerPathEffect.__init__"]], "asadash() (cornerpatheffect method)": [[56, "skia.CornerPathEffect.asADash"]], "aspoints() (cornerpatheffect method)": [[56, "skia.CornerPathEffect.asPoints"]], "computefastbounds() (cornerpatheffect method)": [[56, "skia.CornerPathEffect.computeFastBounds"]], "filterpath() (cornerpatheffect method)": [[56, "skia.CornerPathEffect.filterPath"]], "getflattenabletype() (cornerpatheffect method)": [[56, "skia.CornerPathEffect.getFlattenableType"]], "gettypename() (cornerpatheffect method)": [[56, "skia.CornerPathEffect.getTypeName"]], "kcolorfilter_type (cornerpatheffect attribute)": [[56, "skia.CornerPathEffect.kColorFilter_Type"]], "kdash_dashtype (cornerpatheffect attribute)": [[56, "skia.CornerPathEffect.kDash_DashType"]], "kdrawlooper_type (cornerpatheffect attribute)": [[56, "skia.CornerPathEffect.kDrawLooper_Type"]], "kdrawable_type (cornerpatheffect attribute)": [[56, "skia.CornerPathEffect.kDrawable_Type"]], "kimagefilter_type (cornerpatheffect attribute)": [[56, "skia.CornerPathEffect.kImageFilter_Type"]], "kmaskfilter_type (cornerpatheffect attribute)": [[56, "skia.CornerPathEffect.kMaskFilter_Type"]], "knone_dashtype (cornerpatheffect attribute)": [[56, "skia.CornerPathEffect.kNone_DashType"]], "kpatheffect_type (cornerpatheffect attribute)": [[56, "skia.CornerPathEffect.kPathEffect_Type"]], "kpixelref_type (cornerpatheffect attribute)": [[56, "skia.CornerPathEffect.kPixelRef_Type"]], "kshaderbase_type (cornerpatheffect attribute)": [[56, "skia.CornerPathEffect.kShaderBase_Type"]], "kunused_type (cornerpatheffect attribute)": [[56, "skia.CornerPathEffect.kUnused_Type"]], "kunused_type2 (cornerpatheffect attribute)": [[56, "skia.CornerPathEffect.kUnused_Type2"]], "kunused_type3 (cornerpatheffect attribute)": [[56, "skia.CornerPathEffect.kUnused_Type3"]], "kunused_type4 (cornerpatheffect attribute)": [[56, "skia.CornerPathEffect.kUnused_Type4"]], "ref() (cornerpatheffect method)": [[56, "skia.CornerPathEffect.ref"]], "serialize() (cornerpatheffect method)": [[56, "skia.CornerPathEffect.serialize"]], "unique() (cornerpatheffect method)": [[56, "skia.CornerPathEffect.unique"]], "unref() (cornerpatheffect method)": [[56, "skia.CornerPathEffect.unref"]], "dashinfo (class in skia.cornerpatheffect)": [[57, "skia.CornerPathEffect.DashInfo"]], "__init__() (dashinfo method)": [[57, "skia.CornerPathEffect.DashInfo.__init__"], [66, "skia.DiscretePathEffect.DashInfo.__init__"], [162, "skia.Line2DPathEffect.DashInfo.__init__"], [201, "skia.Path1DPathEffect.DashInfo.__init__"], [208, "skia.Path2DPathEffect.DashInfo.__init__"], [217, "skia.PathEffect.DashInfo.__init__"]], "fcount (dashinfo attribute)": [[57, "skia.CornerPathEffect.DashInfo.fCount"], [66, "skia.DiscretePathEffect.DashInfo.fCount"], [162, "skia.Line2DPathEffect.DashInfo.fCount"], [201, "skia.Path1DPathEffect.DashInfo.fCount"], [208, "skia.Path2DPathEffect.DashInfo.fCount"], [217, "skia.PathEffect.DashInfo.fCount"]], "fintervals (dashinfo attribute)": [[57, "skia.CornerPathEffect.DashInfo.fIntervals"], [66, "skia.DiscretePathEffect.DashInfo.fIntervals"], [162, "skia.Line2DPathEffect.DashInfo.fIntervals"], [201, "skia.Path1DPathEffect.DashInfo.fIntervals"], [208, "skia.Path2DPathEffect.DashInfo.fIntervals"], [217, "skia.PathEffect.DashInfo.fIntervals"]], "fphase (dashinfo attribute)": [[57, "skia.CornerPathEffect.DashInfo.fPhase"], [66, "skia.DiscretePathEffect.DashInfo.fPhase"], [162, "skia.Line2DPathEffect.DashInfo.fPhase"], [201, "skia.Path1DPathEffect.DashInfo.fPhase"], [208, "skia.Path2DPathEffect.DashInfo.fPhase"], [217, "skia.PathEffect.DashInfo.fPhase"]], "dashtype (class in skia.cornerpatheffect)": [[58, "skia.CornerPathEffect.DashType"]], "__init__() (dashtype method)": [[58, "skia.CornerPathEffect.DashType.__init__"], [67, "skia.DiscretePathEffect.DashType.__init__"], [163, "skia.Line2DPathEffect.DashType.__init__"], [202, "skia.Path1DPathEffect.DashType.__init__"], [209, "skia.Path2DPathEffect.DashType.__init__"], [218, "skia.PathEffect.DashType.__init__"]], "kdash_dashtype (dashtype attribute)": [[58, "skia.CornerPathEffect.DashType.kDash_DashType"], [67, "skia.DiscretePathEffect.DashType.kDash_DashType"], [163, "skia.Line2DPathEffect.DashType.kDash_DashType"], [202, "skia.Path1DPathEffect.DashType.kDash_DashType"], [209, "skia.Path2DPathEffect.DashType.kDash_DashType"], [218, "skia.PathEffect.DashType.kDash_DashType"]], "knone_dashtype (dashtype attribute)": [[58, "skia.CornerPathEffect.DashType.kNone_DashType"], [67, "skia.DiscretePathEffect.DashType.kNone_DashType"], [163, "skia.Line2DPathEffect.DashType.kNone_DashType"], [202, "skia.Path1DPathEffect.DashType.kNone_DashType"], [209, "skia.Path2DPathEffect.DashType.kNone_DashType"], [218, "skia.PathEffect.DashType.kNone_DashType"]], "name (dashtype attribute)": [[58, "skia.CornerPathEffect.DashType.name"], [67, "skia.DiscretePathEffect.DashType.name"], [163, "skia.Line2DPathEffect.DashType.name"], [202, "skia.Path1DPathEffect.DashType.name"], [209, "skia.Path2DPathEffect.DashType.name"], [218, "skia.PathEffect.DashType.name"]], "value (dashtype attribute)": [[58, "skia.CornerPathEffect.DashType.value"], [67, "skia.DiscretePathEffect.DashType.value"], [163, "skia.Line2DPathEffect.DashType.value"], [202, "skia.Path1DPathEffect.DashType.value"], [209, "skia.Path2DPathEffect.DashType.value"], [218, "skia.PathEffect.DashType.value"]], "pointdata (class in skia.cornerpatheffect)": [[59, "skia.CornerPathEffect.PointData"]], "__init__() (pointdata method)": [[59, "skia.CornerPathEffect.PointData.__init__"], [68, "skia.DiscretePathEffect.PointData.__init__"], [164, "skia.Line2DPathEffect.PointData.__init__"], [203, "skia.Path1DPathEffect.PointData.__init__"], [210, "skia.Path2DPathEffect.PointData.__init__"], [219, "skia.PathEffect.PointData.__init__"]], "fcliprect (pointdata attribute)": [[59, "skia.CornerPathEffect.PointData.fClipRect"], [68, "skia.DiscretePathEffect.PointData.fClipRect"], [164, "skia.Line2DPathEffect.PointData.fClipRect"], [203, "skia.Path1DPathEffect.PointData.fClipRect"], [210, "skia.Path2DPathEffect.PointData.fClipRect"], [219, "skia.PathEffect.PointData.fClipRect"]], "ffirst (pointdata attribute)": [[59, "skia.CornerPathEffect.PointData.fFirst"], [68, "skia.DiscretePathEffect.PointData.fFirst"], [164, "skia.Line2DPathEffect.PointData.fFirst"], [203, "skia.Path1DPathEffect.PointData.fFirst"], [210, "skia.Path2DPathEffect.PointData.fFirst"], [219, "skia.PathEffect.PointData.fFirst"]], "fflags (pointdata attribute)": [[59, "skia.CornerPathEffect.PointData.fFlags"], [68, "skia.DiscretePathEffect.PointData.fFlags"], [164, "skia.Line2DPathEffect.PointData.fFlags"], [203, "skia.Path1DPathEffect.PointData.fFlags"], [210, "skia.Path2DPathEffect.PointData.fFlags"], [219, "skia.PathEffect.PointData.fFlags"]], "flast (pointdata attribute)": [[59, "skia.CornerPathEffect.PointData.fLast"], [68, "skia.DiscretePathEffect.PointData.fLast"], [164, "skia.Line2DPathEffect.PointData.fLast"], [203, "skia.Path1DPathEffect.PointData.fLast"], [210, "skia.Path2DPathEffect.PointData.fLast"], [219, "skia.PathEffect.PointData.fLast"]], "fnumpoints (pointdata attribute)": [[59, "skia.CornerPathEffect.PointData.fNumPoints"], [68, "skia.DiscretePathEffect.PointData.fNumPoints"], [164, "skia.Line2DPathEffect.PointData.fNumPoints"], [203, "skia.Path1DPathEffect.PointData.fNumPoints"], [210, "skia.Path2DPathEffect.PointData.fNumPoints"], [219, "skia.PathEffect.PointData.fNumPoints"]], "fpath (pointdata attribute)": [[59, "skia.CornerPathEffect.PointData.fPath"], [68, "skia.DiscretePathEffect.PointData.fPath"], [164, "skia.Line2DPathEffect.PointData.fPath"], [203, "skia.Path1DPathEffect.PointData.fPath"], [210, "skia.Path2DPathEffect.PointData.fPath"], [219, "skia.PathEffect.PointData.fPath"]], "fpoints (pointdata attribute)": [[59, "skia.CornerPathEffect.PointData.fPoints"], [68, "skia.DiscretePathEffect.PointData.fPoints"], [164, "skia.Line2DPathEffect.PointData.fPoints"], [203, "skia.Path1DPathEffect.PointData.fPoints"], [210, "skia.Path2DPathEffect.PointData.fPoints"], [219, "skia.PathEffect.PointData.fPoints"]], "fsize (pointdata attribute)": [[59, "skia.CornerPathEffect.PointData.fSize"], [68, "skia.DiscretePathEffect.PointData.fSize"], [164, "skia.Line2DPathEffect.PointData.fSize"], [203, "skia.Path1DPathEffect.PointData.fSize"], [210, "skia.Path2DPathEffect.PointData.fSize"], [219, "skia.PathEffect.PointData.fSize"]], "kcircles_pointflag (pointdata attribute)": [[59, "skia.CornerPathEffect.PointData.kCircles_PointFlag"], [68, "skia.DiscretePathEffect.PointData.kCircles_PointFlag"], [164, "skia.Line2DPathEffect.PointData.kCircles_PointFlag"], [203, "skia.Path1DPathEffect.PointData.kCircles_PointFlag"], [210, "skia.Path2DPathEffect.PointData.kCircles_PointFlag"], [219, "skia.PathEffect.PointData.kCircles_PointFlag"]], "kuseclip_pointflag (pointdata attribute)": [[59, "skia.CornerPathEffect.PointData.kUseClip_PointFlag"], [68, "skia.DiscretePathEffect.PointData.kUseClip_PointFlag"], [164, "skia.Line2DPathEffect.PointData.kUseClip_PointFlag"], [203, "skia.Path1DPathEffect.PointData.kUseClip_PointFlag"], [210, "skia.Path2DPathEffect.PointData.kUseClip_PointFlag"], [219, "skia.PathEffect.PointData.kUseClip_PointFlag"]], "kusepath_pointflag (pointdata attribute)": [[59, "skia.CornerPathEffect.PointData.kUsePath_PointFlag"], [68, "skia.DiscretePathEffect.PointData.kUsePath_PointFlag"], [164, "skia.Line2DPathEffect.PointData.kUsePath_PointFlag"], [203, "skia.Path1DPathEffect.PointData.kUsePath_PointFlag"], [210, "skia.Path2DPathEffect.PointData.kUsePath_PointFlag"], [219, "skia.PathEffect.PointData.kUsePath_PointFlag"]], "pointflags (class in skia.cornerpatheffect.pointdata)": [[60, "skia.CornerPathEffect.PointData.PointFlags"]], "__init__() (pointflags method)": [[60, "skia.CornerPathEffect.PointData.PointFlags.__init__"], [69, "skia.DiscretePathEffect.PointData.PointFlags.__init__"], [165, "skia.Line2DPathEffect.PointData.PointFlags.__init__"], [204, "skia.Path1DPathEffect.PointData.PointFlags.__init__"], [211, "skia.Path2DPathEffect.PointData.PointFlags.__init__"], [220, "skia.PathEffect.PointData.PointFlags.__init__"]], "kcircles_pointflag (pointflags attribute)": [[60, "skia.CornerPathEffect.PointData.PointFlags.kCircles_PointFlag"], [69, "skia.DiscretePathEffect.PointData.PointFlags.kCircles_PointFlag"], [165, "skia.Line2DPathEffect.PointData.PointFlags.kCircles_PointFlag"], [204, "skia.Path1DPathEffect.PointData.PointFlags.kCircles_PointFlag"], [211, "skia.Path2DPathEffect.PointData.PointFlags.kCircles_PointFlag"], [220, "skia.PathEffect.PointData.PointFlags.kCircles_PointFlag"]], "kuseclip_pointflag (pointflags attribute)": [[60, "skia.CornerPathEffect.PointData.PointFlags.kUseClip_PointFlag"], [69, "skia.DiscretePathEffect.PointData.PointFlags.kUseClip_PointFlag"], [165, "skia.Line2DPathEffect.PointData.PointFlags.kUseClip_PointFlag"], [204, "skia.Path1DPathEffect.PointData.PointFlags.kUseClip_PointFlag"], [211, "skia.Path2DPathEffect.PointData.PointFlags.kUseClip_PointFlag"], [220, "skia.PathEffect.PointData.PointFlags.kUseClip_PointFlag"]], "kusepath_pointflag (pointflags attribute)": [[60, "skia.CornerPathEffect.PointData.PointFlags.kUsePath_PointFlag"], [69, "skia.DiscretePathEffect.PointData.PointFlags.kUsePath_PointFlag"], [165, "skia.Line2DPathEffect.PointData.PointFlags.kUsePath_PointFlag"], [204, "skia.Path1DPathEffect.PointData.PointFlags.kUsePath_PointFlag"], [211, "skia.Path2DPathEffect.PointData.PointFlags.kUsePath_PointFlag"], [220, "skia.PathEffect.PointData.PointFlags.kUsePath_PointFlag"]], "name (pointflags attribute)": [[60, "skia.CornerPathEffect.PointData.PointFlags.name"], [69, "skia.DiscretePathEffect.PointData.PointFlags.name"], [165, "skia.Line2DPathEffect.PointData.PointFlags.name"], [204, "skia.Path1DPathEffect.PointData.PointFlags.name"], [211, "skia.Path2DPathEffect.PointData.PointFlags.name"], [220, "skia.PathEffect.PointData.PointFlags.name"]], "value (pointflags attribute)": [[60, "skia.CornerPathEffect.PointData.PointFlags.value"], [69, "skia.DiscretePathEffect.PointData.PointFlags.value"], [165, "skia.Line2DPathEffect.PointData.PointFlags.value"], [204, "skia.Path1DPathEffect.PointData.PointFlags.value"], [211, "skia.Path2DPathEffect.PointData.PointFlags.value"], [220, "skia.PathEffect.PointData.PointFlags.value"]], "type (class in skia.cornerpatheffect)": [[61, "skia.CornerPathEffect.Type"]], "dashpatheffect (class in skia)": [[62, "skia.DashPathEffect"]], "make() (dashpatheffect static method)": [[62, "skia.DashPathEffect.Make"]], "__init__() (dashpatheffect method)": [[62, "skia.DashPathEffect.__init__"]], "data (class in skia)": [[63, "skia.Data"]], "makeempty() (data static method)": [[63, "skia.Data.MakeEmpty"]], "makefromfilename() (data static method)": [[63, "skia.Data.MakeFromFileName"]], "makesubset() (data static method)": [[63, "skia.Data.MakeSubset"]], "makeuninitialized() (data static method)": [[63, "skia.Data.MakeUninitialized"]], "makewithcopy() (data static method)": [[63, "skia.Data.MakeWithCopy"]], "makewithoutcopy() (data static method)": [[63, "skia.Data.MakeWithoutCopy"]], "__init__() (data method)": [[63, "skia.Data.__init__"]], "bytes() (data method)": [[63, "skia.Data.bytes"]], "copyrange() (data method)": [[63, "skia.Data.copyRange"]], "data() (data method)": [[63, "skia.Data.data"]], "deref() (data method)": [[63, "skia.Data.deref"]], "equals() (data method)": [[63, "skia.Data.equals"]], "isempty() (data method)": [[63, "skia.Data.isEmpty"]], "ref() (data method)": [[63, "skia.Data.ref"]], "refcntgreaterthan() (data method)": [[63, "skia.Data.refCntGreaterThan"]], "size() (data method)": [[63, "skia.Data.size"]], "unique() (data method)": [[63, "skia.Data.unique"]], "unref() (data method)": [[63, "skia.Data.unref"]], "writable_data() (data method)": [[63, "skia.Data.writable_data"]], "dilateimagefilter (class in skia)": [[64, "skia.DilateImageFilter"]], "make() (dilateimagefilter static method)": [[64, "skia.DilateImageFilter.Make"]], "__init__() (dilateimagefilter method)": [[64, "skia.DilateImageFilter.__init__"]], "deserialize() (discretepatheffect static method)": [[65, "skia.DiscretePathEffect.Deserialize"]], "discretepatheffect (class in skia)": [[65, "skia.DiscretePathEffect"]], "getflattenabletype() (discretepatheffect static method)": [[65, "skia.DiscretePathEffect.GetFlattenableType"]], "make() (discretepatheffect static method)": [[65, "skia.DiscretePathEffect.Make"]], "makecompose() (discretepatheffect static method)": [[65, "skia.DiscretePathEffect.MakeCompose"]], "makesum() (discretepatheffect static method)": [[65, "skia.DiscretePathEffect.MakeSum"]], "registerflattenables() (discretepatheffect static method)": [[65, "skia.DiscretePathEffect.RegisterFlattenables"]], "__init__() (discretepatheffect method)": [[65, "skia.DiscretePathEffect.__init__"]], "asadash() (discretepatheffect method)": [[65, "skia.DiscretePathEffect.asADash"]], "aspoints() (discretepatheffect method)": [[65, "skia.DiscretePathEffect.asPoints"]], "computefastbounds() (discretepatheffect method)": [[65, "skia.DiscretePathEffect.computeFastBounds"]], "filterpath() (discretepatheffect method)": [[65, "skia.DiscretePathEffect.filterPath"]], "getflattenabletype() (discretepatheffect method)": [[65, "skia.DiscretePathEffect.getFlattenableType"]], "gettypename() (discretepatheffect method)": [[65, "skia.DiscretePathEffect.getTypeName"]], "kcolorfilter_type (discretepatheffect attribute)": [[65, "skia.DiscretePathEffect.kColorFilter_Type"]], "kdash_dashtype (discretepatheffect attribute)": [[65, "skia.DiscretePathEffect.kDash_DashType"]], "kdrawlooper_type (discretepatheffect attribute)": [[65, "skia.DiscretePathEffect.kDrawLooper_Type"]], "kdrawable_type (discretepatheffect attribute)": [[65, "skia.DiscretePathEffect.kDrawable_Type"]], "kimagefilter_type (discretepatheffect attribute)": [[65, "skia.DiscretePathEffect.kImageFilter_Type"]], "kmaskfilter_type (discretepatheffect attribute)": [[65, "skia.DiscretePathEffect.kMaskFilter_Type"]], "knone_dashtype (discretepatheffect attribute)": [[65, "skia.DiscretePathEffect.kNone_DashType"]], "kpatheffect_type (discretepatheffect attribute)": [[65, "skia.DiscretePathEffect.kPathEffect_Type"]], "kpixelref_type (discretepatheffect attribute)": [[65, "skia.DiscretePathEffect.kPixelRef_Type"]], "kshaderbase_type (discretepatheffect attribute)": [[65, "skia.DiscretePathEffect.kShaderBase_Type"]], "kunused_type (discretepatheffect attribute)": [[65, "skia.DiscretePathEffect.kUnused_Type"]], "kunused_type2 (discretepatheffect attribute)": [[65, "skia.DiscretePathEffect.kUnused_Type2"]], "kunused_type3 (discretepatheffect attribute)": [[65, "skia.DiscretePathEffect.kUnused_Type3"]], "kunused_type4 (discretepatheffect attribute)": [[65, "skia.DiscretePathEffect.kUnused_Type4"]], "ref() (discretepatheffect method)": [[65, "skia.DiscretePathEffect.ref"]], "serialize() (discretepatheffect method)": [[65, "skia.DiscretePathEffect.serialize"]], "unique() (discretepatheffect method)": [[65, "skia.DiscretePathEffect.unique"]], "unref() (discretepatheffect method)": [[65, "skia.DiscretePathEffect.unref"]], "dashinfo (class in skia.discretepatheffect)": [[66, "skia.DiscretePathEffect.DashInfo"]], "dashtype (class in skia.discretepatheffect)": [[67, "skia.DiscretePathEffect.DashType"]], "pointdata (class in skia.discretepatheffect)": [[68, "skia.DiscretePathEffect.PointData"]], "pointflags (class in skia.discretepatheffect.pointdata)": [[69, "skia.DiscretePathEffect.PointData.PointFlags"]], "type (class in skia.discretepatheffect)": [[70, "skia.DiscretePathEffect.Type"]], "displacementmapeffect (class in skia)": [[71, "skia.DisplacementMapEffect"]], "make() (displacementmapeffect static method)": [[71, "skia.DisplacementMapEffect.Make"]], "__init__() (displacementmapeffect method)": [[71, "skia.DisplacementMapEffect.__init__"]], "ka_channelselectortype (displacementmapeffect attribute)": [[71, "skia.DisplacementMapEffect.kA_ChannelSelectorType"]], "kb_channelselectortype (displacementmapeffect attribute)": [[71, "skia.DisplacementMapEffect.kB_ChannelSelectorType"]], "kg_channelselectortype (displacementmapeffect attribute)": [[71, "skia.DisplacementMapEffect.kG_ChannelSelectorType"]], "klast_channelselectortype (displacementmapeffect attribute)": [[71, "skia.DisplacementMapEffect.kLast_ChannelSelectorType"]], "kr_channelselectortype (displacementmapeffect attribute)": [[71, "skia.DisplacementMapEffect.kR_ChannelSelectorType"]], "kunknown_channelselectortype (displacementmapeffect attribute)": [[71, "skia.DisplacementMapEffect.kUnknown_ChannelSelectorType"]], "channelselectortype (class in skia.displacementmapeffect)": [[72, "skia.DisplacementMapEffect.ChannelSelectorType"]], "__init__() (channelselectortype method)": [[72, "skia.DisplacementMapEffect.ChannelSelectorType.__init__"]], "ka_channelselectortype (channelselectortype attribute)": [[72, "skia.DisplacementMapEffect.ChannelSelectorType.kA_ChannelSelectorType"]], "kb_channelselectortype (channelselectortype attribute)": [[72, "skia.DisplacementMapEffect.ChannelSelectorType.kB_ChannelSelectorType"]], "kg_channelselectortype (channelselectortype attribute)": [[72, "skia.DisplacementMapEffect.ChannelSelectorType.kG_ChannelSelectorType"]], "klast_channelselectortype (channelselectortype attribute)": [[72, "skia.DisplacementMapEffect.ChannelSelectorType.kLast_ChannelSelectorType"]], "kr_channelselectortype (channelselectortype attribute)": [[72, "skia.DisplacementMapEffect.ChannelSelectorType.kR_ChannelSelectorType"]], "kunknown_channelselectortype (channelselectortype attribute)": [[72, "skia.DisplacementMapEffect.ChannelSelectorType.kUnknown_ChannelSelectorType"]], "name (channelselectortype attribute)": [[72, "skia.DisplacementMapEffect.ChannelSelectorType.name"]], "value (channelselectortype attribute)": [[72, "skia.DisplacementMapEffect.ChannelSelectorType.value"]], "document (class in skia)": [[73, "skia.Document"]], "__init__() (document method)": [[73, "skia.Document.__init__"]], "abort() (document method)": [[73, "skia.Document.abort"]], "beginpage() (document method)": [[73, "skia.Document.beginPage"]], "close() (document method)": [[73, "skia.Document.close"]], "endpage() (document method)": [[73, "skia.Document.endPage"]], "page() (document method)": [[73, "skia.Document.page"]], "ref() (document method)": [[73, "skia.Document.ref"]], "unique() (document method)": [[73, "skia.Document.unique"]], "unref() (document method)": [[73, "skia.Document.unref"]], "deserialize() (drawable static method)": [[74, "skia.Drawable.Deserialize"]], "drawable (class in skia)": [[74, "skia.Drawable"]], "__init__() (drawable method)": [[74, "skia.Drawable.__init__"]], "draw() (drawable method)": [[74, "skia.Drawable.draw"]], "getbounds() (drawable method)": [[74, "skia.Drawable.getBounds"]], "getflattenabletype() (drawable method)": [[74, "skia.Drawable.getFlattenableType"]], "getgenerationid() (drawable method)": [[74, "skia.Drawable.getGenerationID"]], "gettypename() (drawable method)": [[74, "skia.Drawable.getTypeName"]], "kcolorfilter_type (drawable attribute)": [[74, "skia.Drawable.kColorFilter_Type"]], "kdrawlooper_type (drawable attribute)": [[74, "skia.Drawable.kDrawLooper_Type"]], "kdrawable_type (drawable attribute)": [[74, "skia.Drawable.kDrawable_Type"]], "kimagefilter_type (drawable attribute)": [[74, "skia.Drawable.kImageFilter_Type"]], "kmaskfilter_type (drawable attribute)": [[74, "skia.Drawable.kMaskFilter_Type"]], "kpatheffect_type (drawable attribute)": [[74, "skia.Drawable.kPathEffect_Type"]], "kpixelref_type (drawable attribute)": [[74, "skia.Drawable.kPixelRef_Type"]], "kshaderbase_type (drawable attribute)": [[74, "skia.Drawable.kShaderBase_Type"]], "kunused_type (drawable attribute)": [[74, "skia.Drawable.kUnused_Type"]], "kunused_type2 (drawable attribute)": [[74, "skia.Drawable.kUnused_Type2"]], "kunused_type3 (drawable attribute)": [[74, "skia.Drawable.kUnused_Type3"]], "kunused_type4 (drawable attribute)": [[74, "skia.Drawable.kUnused_Type4"]], "newpicturesnapshot() (drawable method)": [[74, "skia.Drawable.newPictureSnapshot"]], "notifydrawingchanged() (drawable method)": [[74, "skia.Drawable.notifyDrawingChanged"]], "ref() (drawable method)": [[74, "skia.Drawable.ref"]], "serialize() (drawable method)": [[74, "skia.Drawable.serialize"]], "unique() (drawable method)": [[74, "skia.Drawable.unique"]], "unref() (drawable method)": [[74, "skia.Drawable.unref"]], "type (class in skia.drawable)": [[75, "skia.Drawable.Type"]], "dropshadowimagefilter (class in skia)": [[76, "skia.DropShadowImageFilter"]], "make() (dropshadowimagefilter static method)": [[76, "skia.DropShadowImageFilter.Make"]], "__init__() (dropshadowimagefilter method)": [[76, "skia.DropShadowImageFilter.__init__"]], "kdrawshadowandforeground_shadowmode (dropshadowimagefilter attribute)": [[76, "skia.DropShadowImageFilter.kDrawShadowAndForeground_ShadowMode"]], "kdrawshadowonly_shadowmode (dropshadowimagefilter attribute)": [[76, "skia.DropShadowImageFilter.kDrawShadowOnly_ShadowMode"]], "klast_shadowmode (dropshadowimagefilter attribute)": [[76, "skia.DropShadowImageFilter.kLast_ShadowMode"]], "kshadowmodecount (dropshadowimagefilter attribute)": [[76, "skia.DropShadowImageFilter.kShadowModeCount"]], "shadowmode (class in skia.dropshadowimagefilter)": [[77, "skia.DropShadowImageFilter.ShadowMode"]], "__init__() (shadowmode method)": [[77, "skia.DropShadowImageFilter.ShadowMode.__init__"]], "kdrawshadowandforeground_shadowmode (shadowmode attribute)": [[77, "skia.DropShadowImageFilter.ShadowMode.kDrawShadowAndForeground_ShadowMode"]], "kdrawshadowonly_shadowmode (shadowmode attribute)": [[77, "skia.DropShadowImageFilter.ShadowMode.kDrawShadowOnly_ShadowMode"]], "klast_shadowmode (shadowmode attribute)": [[77, "skia.DropShadowImageFilter.ShadowMode.kLast_ShadowMode"]], "name (shadowmode attribute)": [[77, "skia.DropShadowImageFilter.ShadowMode.name"]], "value (shadowmode attribute)": [[77, "skia.DropShadowImageFilter.ShadowMode.value"]], "dynamicmemorywstream (class in skia)": [[78, "skia.DynamicMemoryWStream"]], "sizeofpackeduint() (dynamicmemorywstream static method)": [[78, "skia.DynamicMemoryWStream.SizeOfPackedUInt"]], "__init__() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.__init__"]], "byteswritten() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.bytesWritten"]], "copyto() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.copyTo"]], "copytoandreset() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.copyToAndReset"]], "detachasdata() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.detachAsData"]], "detachasstream() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.detachAsStream"]], "flush() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.flush"]], "newline() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.newline"]], "padtoalign4() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.padToAlign4"]], "prependtoandreset() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.prependToAndReset"]], "read() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.read"]], "reset() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.reset"]], "write() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.write"]], "write16() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.write16"]], "write32() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.write32"]], "write8() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.write8"]], "writebigdecastext() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.writeBigDecAsText"]], "writebool() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.writeBool"]], "writedecastext() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.writeDecAsText"]], "writehexastext() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.writeHexAsText"]], "writepackeduint() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.writePackedUInt"]], "writescalar() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.writeScalar"]], "writescalarastext() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.writeScalarAsText"]], "writestream() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.writeStream"]], "writetext() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.writeText"]], "writetoandreset() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.writeToAndReset"]], "writetostream() (dynamicmemorywstream method)": [[78, "skia.DynamicMemoryWStream.writeToStream"]], "encodedimageformat (class in skia)": [[79, "skia.EncodedImageFormat"]], "__init__() (encodedimageformat method)": [[79, "skia.EncodedImageFormat.__init__"]], "kastc (encodedimageformat attribute)": [[79, "skia.EncodedImageFormat.kASTC"]], "kbmp (encodedimageformat attribute)": [[79, "skia.EncodedImageFormat.kBMP"]], "kdng (encodedimageformat attribute)": [[79, "skia.EncodedImageFormat.kDNG"]], "kgif (encodedimageformat attribute)": [[79, "skia.EncodedImageFormat.kGIF"]], "kheif (encodedimageformat attribute)": [[79, "skia.EncodedImageFormat.kHEIF"]], "kico (encodedimageformat attribute)": [[79, "skia.EncodedImageFormat.kICO"]], "kjpeg (encodedimageformat attribute)": [[79, "skia.EncodedImageFormat.kJPEG"]], "kktx (encodedimageformat attribute)": [[79, "skia.EncodedImageFormat.kKTX"]], "kpkm (encodedimageformat attribute)": [[79, "skia.EncodedImageFormat.kPKM"]], "kpng (encodedimageformat attribute)": [[79, "skia.EncodedImageFormat.kPNG"]], "kwbmp (encodedimageformat attribute)": [[79, "skia.EncodedImageFormat.kWBMP"]], "kwebp (encodedimageformat attribute)": [[79, "skia.EncodedImageFormat.kWEBP"]], "name (encodedimageformat attribute)": [[79, "skia.EncodedImageFormat.name"]], "value (encodedimageformat attribute)": [[79, "skia.EncodedImageFormat.value"]], "encodedorigin (class in skia)": [[80, "skia.EncodedOrigin"]], "__init__() (encodedorigin method)": [[80, "skia.EncodedOrigin.__init__"]], "kbottomleft_encodedorigin (encodedorigin attribute)": [[80, "skia.EncodedOrigin.kBottomLeft_EncodedOrigin"]], "kbottomright_encodedorigin (encodedorigin attribute)": [[80, "skia.EncodedOrigin.kBottomRight_EncodedOrigin"]], "kdefault_encodedorigin (encodedorigin attribute)": [[80, "skia.EncodedOrigin.kDefault_EncodedOrigin"]], "klast_encodedorigin (encodedorigin attribute)": [[80, "skia.EncodedOrigin.kLast_EncodedOrigin"]], "kleftbottom_encodedorigin (encodedorigin attribute)": [[80, "skia.EncodedOrigin.kLeftBottom_EncodedOrigin"]], "klefttop_encodedorigin (encodedorigin attribute)": [[80, "skia.EncodedOrigin.kLeftTop_EncodedOrigin"]], "krightbottom_encodedorigin (encodedorigin attribute)": [[80, "skia.EncodedOrigin.kRightBottom_EncodedOrigin"]], "krighttop_encodedorigin (encodedorigin attribute)": [[80, "skia.EncodedOrigin.kRightTop_EncodedOrigin"]], "ktopleft_encodedorigin (encodedorigin attribute)": [[80, "skia.EncodedOrigin.kTopLeft_EncodedOrigin"]], "ktopright_encodedorigin (encodedorigin attribute)": [[80, "skia.EncodedOrigin.kTopRight_EncodedOrigin"]], "name (encodedorigin attribute)": [[80, "skia.EncodedOrigin.name"]], "value (encodedorigin attribute)": [[80, "skia.EncodedOrigin.value"]], "erodeimagefilter (class in skia)": [[81, "skia.ErodeImageFilter"]], "make() (erodeimagefilter static method)": [[81, "skia.ErodeImageFilter.Make"]], "__init__() (erodeimagefilter method)": [[81, "skia.ErodeImageFilter.__init__"]], "filestream (class in skia)": [[82, "skia.FILEStream"]], "make() (filestream static method)": [[82, "skia.FILEStream.Make"]], "makefromfile() (filestream static method)": [[82, "skia.FILEStream.MakeFromFile"]], "__init__() (filestream method)": [[82, "skia.FILEStream.__init__"]], "close() (filestream method)": [[82, "skia.FILEStream.close"]], "duplicate() (filestream method)": [[82, "skia.FILEStream.duplicate"]], "fork() (filestream method)": [[82, "skia.FILEStream.fork"]], "getlength() (filestream method)": [[82, "skia.FILEStream.getLength"]], "getmemorybase() (filestream method)": [[82, "skia.FILEStream.getMemoryBase"]], "getposition() (filestream method)": [[82, "skia.FILEStream.getPosition"]], "haslength() (filestream method)": [[82, "skia.FILEStream.hasLength"]], "hasposition() (filestream method)": [[82, "skia.FILEStream.hasPosition"]], "isatend() (filestream method)": [[82, "skia.FILEStream.isAtEnd"]], "isvalid() (filestream method)": [[82, "skia.FILEStream.isValid"]], "move() (filestream method)": [[82, "skia.FILEStream.move"]], "peek() (filestream method)": [[82, "skia.FILEStream.peek"]], "read() (filestream method)": [[82, "skia.FILEStream.read"]], "readbool() (filestream method)": [[82, "skia.FILEStream.readBool"]], "readpackeduint() (filestream method)": [[82, "skia.FILEStream.readPackedUInt"]], "reads16() (filestream method)": [[82, "skia.FILEStream.readS16"]], "reads32() (filestream method)": [[82, "skia.FILEStream.readS32"]], "reads8() (filestream method)": [[82, "skia.FILEStream.readS8"]], "readscalar() (filestream method)": [[82, "skia.FILEStream.readScalar"]], "readu16() (filestream method)": [[82, "skia.FILEStream.readU16"]], "readu32() (filestream method)": [[82, "skia.FILEStream.readU32"]], "readu8() (filestream method)": [[82, "skia.FILEStream.readU8"]], "rewind() (filestream method)": [[82, "skia.FILEStream.rewind"]], "seek() (filestream method)": [[82, "skia.FILEStream.seek"]], "skip() (filestream method)": [[82, "skia.FILEStream.skip"]], "filewstream (class in skia)": [[83, "skia.FILEWStream"]], "sizeofpackeduint() (filewstream static method)": [[83, "skia.FILEWStream.SizeOfPackedUInt"]], "__init__() (filewstream method)": [[83, "skia.FILEWStream.__init__"]], "byteswritten() (filewstream method)": [[83, "skia.FILEWStream.bytesWritten"]], "flush() (filewstream method)": [[83, "skia.FILEWStream.flush"]], "fsync() (filewstream method)": [[83, "skia.FILEWStream.fsync"]], "isvalid() (filewstream method)": [[83, "skia.FILEWStream.isValid"]], "newline() (filewstream method)": [[83, "skia.FILEWStream.newline"]], "write() (filewstream method)": [[83, "skia.FILEWStream.write"]], "write16() (filewstream method)": [[83, "skia.FILEWStream.write16"]], "write32() (filewstream method)": [[83, "skia.FILEWStream.write32"]], "write8() (filewstream method)": [[83, "skia.FILEWStream.write8"]], "writebigdecastext() (filewstream method)": [[83, "skia.FILEWStream.writeBigDecAsText"]], "writebool() (filewstream method)": [[83, "skia.FILEWStream.writeBool"]], "writedecastext() (filewstream method)": [[83, "skia.FILEWStream.writeDecAsText"]], "writehexastext() (filewstream method)": [[83, "skia.FILEWStream.writeHexAsText"]], "writepackeduint() (filewstream method)": [[83, "skia.FILEWStream.writePackedUInt"]], "writescalar() (filewstream method)": [[83, "skia.FILEWStream.writeScalar"]], "writescalarastext() (filewstream method)": [[83, "skia.FILEWStream.writeScalarAsText"]], "writestream() (filewstream method)": [[83, "skia.FILEWStream.writeStream"]], "writetext() (filewstream method)": [[83, "skia.FILEWStream.writeText"]], "filterquality (class in skia)": [[84, "skia.FilterQuality"]], "__init__() (filterquality method)": [[84, "skia.FilterQuality.__init__"]], "khigh_filterquality (filterquality attribute)": [[84, "skia.FilterQuality.kHigh_FilterQuality"]], "klast_filterquality (filterquality attribute)": [[84, "skia.FilterQuality.kLast_FilterQuality"]], "klow_filterquality (filterquality attribute)": [[84, "skia.FilterQuality.kLow_FilterQuality"]], "kmedium_filterquality (filterquality attribute)": [[84, "skia.FilterQuality.kMedium_FilterQuality"]], "knone_filterquality (filterquality attribute)": [[84, "skia.FilterQuality.kNone_FilterQuality"]], "name (filterquality attribute)": [[84, "skia.FilterQuality.name"]], "value (filterquality attribute)": [[84, "skia.FilterQuality.value"]], "deserialize() (flattanable static method)": [[85, "skia.Flattanable.Deserialize"]], "flattanable (class in skia)": [[85, "skia.Flattanable"]], "__init__() (flattanable method)": [[85, "skia.Flattanable.__init__"]], "getflattenabletype() (flattanable method)": [[85, "skia.Flattanable.getFlattenableType"]], "gettypename() (flattanable method)": [[85, "skia.Flattanable.getTypeName"]], "kcolorfilter_type (flattanable attribute)": [[85, "skia.Flattanable.kColorFilter_Type"]], "kdrawlooper_type (flattanable attribute)": [[85, "skia.Flattanable.kDrawLooper_Type"]], "kdrawable_type (flattanable attribute)": [[85, "skia.Flattanable.kDrawable_Type"]], "kimagefilter_type (flattanable attribute)": [[85, "skia.Flattanable.kImageFilter_Type"]], "kmaskfilter_type (flattanable attribute)": [[85, "skia.Flattanable.kMaskFilter_Type"]], "kpatheffect_type (flattanable attribute)": [[85, "skia.Flattanable.kPathEffect_Type"]], "kpixelref_type (flattanable attribute)": [[85, "skia.Flattanable.kPixelRef_Type"]], "kshaderbase_type (flattanable attribute)": [[85, "skia.Flattanable.kShaderBase_Type"]], "kunused_type (flattanable attribute)": [[85, "skia.Flattanable.kUnused_Type"]], "kunused_type2 (flattanable attribute)": [[85, "skia.Flattanable.kUnused_Type2"]], "kunused_type3 (flattanable attribute)": [[85, "skia.Flattanable.kUnused_Type3"]], "kunused_type4 (flattanable attribute)": [[85, "skia.Flattanable.kUnused_Type4"]], "ref() (flattanable method)": [[85, "skia.Flattanable.ref"]], "serialize() (flattanable method)": [[85, "skia.Flattanable.serialize"]], "unique() (flattanable method)": [[85, "skia.Flattanable.unique"]], "unref() (flattanable method)": [[85, "skia.Flattanable.unref"]], "type (class in skia.flattanable)": [[86, "skia.Flattanable.Type"]], "font (class in skia)": [[87, "skia.Font"]], "__init__() (font method)": [[87, "skia.Font.__init__"]], "counttext() (font method)": [[87, "skia.Font.countText"]], "dump() (font method)": [[87, "skia.Font.dump"]], "getbounds() (font method)": [[87, "skia.Font.getBounds"]], "getedging() (font method)": [[87, "skia.Font.getEdging"]], "gethinting() (font method)": [[87, "skia.Font.getHinting"]], "getmetrics() (font method)": [[87, "skia.Font.getMetrics"]], "getpath() (font method)": [[87, "skia.Font.getPath"]], "getpaths() (font method)": [[87, "skia.Font.getPaths"]], "getpos() (font method)": [[87, "skia.Font.getPos"]], "getscalex() (font method)": [[87, "skia.Font.getScaleX"]], "getsize() (font method)": [[87, "skia.Font.getSize"]], "getskewx() (font method)": [[87, "skia.Font.getSkewX"]], "getspacing() (font method)": [[87, "skia.Font.getSpacing"]], "gettypeface() (font method)": [[87, "skia.Font.getTypeface"]], "gettypefaceordefault() (font method)": [[87, "skia.Font.getTypefaceOrDefault"]], "getwidths() (font method)": [[87, "skia.Font.getWidths"]], "getwidthsbounds() (font method)": [[87, "skia.Font.getWidthsBounds"]], "getxpos() (font method)": [[87, "skia.Font.getXPos"]], "isbaselinesnap() (font method)": [[87, "skia.Font.isBaselineSnap"]], "isembeddedbitmaps() (font method)": [[87, "skia.Font.isEmbeddedBitmaps"]], "isembolden() (font method)": [[87, "skia.Font.isEmbolden"]], "isforceautohinting() (font method)": [[87, "skia.Font.isForceAutoHinting"]], "islinearmetrics() (font method)": [[87, "skia.Font.isLinearMetrics"]], "issubpixel() (font method)": [[87, "skia.Font.isSubpixel"]], "kalias (font attribute)": [[87, "skia.Font.kAlias"]], "kantialias (font attribute)": [[87, "skia.Font.kAntiAlias"]], "ksubpixelantialias (font attribute)": [[87, "skia.Font.kSubpixelAntiAlias"]], "makewithsize() (font method)": [[87, "skia.Font.makeWithSize"]], "measuretext() (font method)": [[87, "skia.Font.measureText"]], "reftypeface() (font method)": [[87, "skia.Font.refTypeface"]], "reftypefaceordefault() (font method)": [[87, "skia.Font.refTypefaceOrDefault"]], "setbaselinesnap() (font method)": [[87, "skia.Font.setBaselineSnap"]], "setedging() (font method)": [[87, "skia.Font.setEdging"]], "setembeddedbitmaps() (font method)": [[87, "skia.Font.setEmbeddedBitmaps"]], "setembolden() (font method)": [[87, "skia.Font.setEmbolden"]], "setforceautohinting() (font method)": [[87, "skia.Font.setForceAutoHinting"]], "sethinting() (font method)": [[87, "skia.Font.setHinting"]], "setlinearmetrics() (font method)": [[87, "skia.Font.setLinearMetrics"]], "setscalex() (font method)": [[87, "skia.Font.setScaleX"]], "setsize() (font method)": [[87, "skia.Font.setSize"]], "setskewx() (font method)": [[87, "skia.Font.setSkewX"]], "setsubpixel() (font method)": [[87, "skia.Font.setSubpixel"]], "settypeface() (font method)": [[87, "skia.Font.setTypeface"]], "texttoglyphs() (font method)": [[87, "skia.Font.textToGlyphs"]], "unichartoglyph() (font method)": [[87, "skia.Font.unicharToGlyph"]], "unicharstoglyphs() (font method)": [[87, "skia.Font.unicharsToGlyphs"]], "edging (class in skia.font)": [[88, "skia.Font.Edging"]], "__init__() (edging method)": [[88, "skia.Font.Edging.__init__"]], "kalias (edging attribute)": [[88, "skia.Font.Edging.kAlias"]], "kantialias (edging attribute)": [[88, "skia.Font.Edging.kAntiAlias"]], "ksubpixelantialias (edging attribute)": [[88, "skia.Font.Edging.kSubpixelAntiAlias"]], "name (edging attribute)": [[88, "skia.Font.Edging.name"]], "value (edging attribute)": [[88, "skia.Font.Edging.value"]], "fontarguments (class in skia)": [[89, "skia.FontArguments"]], "__init__() (fontarguments method)": [[89, "skia.FontArguments.__init__"]], "getcollectionindex() (fontarguments method)": [[89, "skia.FontArguments.getCollectionIndex"]], "getvariationdesignposition() (fontarguments method)": [[89, "skia.FontArguments.getVariationDesignPosition"]], "setcollectionindex() (fontarguments method)": [[89, "skia.FontArguments.setCollectionIndex"]], "setvariationdesignposition() (fontarguments method)": [[89, "skia.FontArguments.setVariationDesignPosition"]], "variationposition (class in skia.fontarguments)": [[90, "skia.FontArguments.VariationPosition"]], "__init__() (variationposition method)": [[90, "skia.FontArguments.VariationPosition.__init__"]], "coordinatecount (variationposition attribute)": [[90, "skia.FontArguments.VariationPosition.coordinateCount"]], "coordinates (variationposition attribute)": [[90, "skia.FontArguments.VariationPosition.coordinates"]], "coordinate (class in skia.fontarguments.variationposition)": [[91, "skia.FontArguments.VariationPosition.Coordinate"]], "__init__() (coordinate method)": [[91, "skia.FontArguments.VariationPosition.Coordinate.__init__"]], "axis (coordinate attribute)": [[91, "skia.FontArguments.VariationPosition.Coordinate.axis"]], "value (coordinate attribute)": [[91, "skia.FontArguments.VariationPosition.Coordinate.value"]], "coordinates (class in skia.fontarguments.variationposition)": [[92, "skia.FontArguments.VariationPosition.Coordinates"]], "__init__() (coordinates method)": [[92, "skia.FontArguments.VariationPosition.Coordinates.__init__"]], "append() (coordinates method)": [[92, "skia.FontArguments.VariationPosition.Coordinates.append"]], "clear() (coordinates method)": [[92, "skia.FontArguments.VariationPosition.Coordinates.clear"]], "extend() (coordinates method)": [[92, "skia.FontArguments.VariationPosition.Coordinates.extend"]], "insert() (coordinates method)": [[92, "skia.FontArguments.VariationPosition.Coordinates.insert"]], "pop() (coordinates method)": [[92, "skia.FontArguments.VariationPosition.Coordinates.pop"]], "fonthinting (class in skia)": [[93, "skia.FontHinting"]], "__init__() (fonthinting method)": [[93, "skia.FontHinting.__init__"]], "kfull (fonthinting attribute)": [[93, "skia.FontHinting.kFull"]], "knone (fonthinting attribute)": [[93, "skia.FontHinting.kNone"]], "knormal (fonthinting attribute)": [[93, "skia.FontHinting.kNormal"]], "kslight (fonthinting attribute)": [[93, "skia.FontHinting.kSlight"]], "name (fonthinting attribute)": [[93, "skia.FontHinting.name"]], "value (fonthinting attribute)": [[93, "skia.FontHinting.value"]], "fontmetrics (class in skia)": [[94, "skia.FontMetrics"]], "__init__() (fontmetrics method)": [[94, "skia.FontMetrics.__init__"]], "fascent (fontmetrics attribute)": [[94, "skia.FontMetrics.fAscent"]], "favgcharwidth (fontmetrics attribute)": [[94, "skia.FontMetrics.fAvgCharWidth"]], "fbottom (fontmetrics attribute)": [[94, "skia.FontMetrics.fBottom"]], "fcapheight (fontmetrics attribute)": [[94, "skia.FontMetrics.fCapHeight"]], "fdescent (fontmetrics attribute)": [[94, "skia.FontMetrics.fDescent"]], "fflags (fontmetrics attribute)": [[94, "skia.FontMetrics.fFlags"]], "fleading (fontmetrics attribute)": [[94, "skia.FontMetrics.fLeading"]], "fmaxcharwidth (fontmetrics attribute)": [[94, "skia.FontMetrics.fMaxCharWidth"]], "fstrikeoutposition (fontmetrics attribute)": [[94, "skia.FontMetrics.fStrikeoutPosition"]], "fstrikeoutthickness (fontmetrics attribute)": [[94, "skia.FontMetrics.fStrikeoutThickness"]], "ftop (fontmetrics attribute)": [[94, "skia.FontMetrics.fTop"]], "funderlineposition (fontmetrics attribute)": [[94, "skia.FontMetrics.fUnderlinePosition"]], "funderlinethickness (fontmetrics attribute)": [[94, "skia.FontMetrics.fUnderlineThickness"]], "fxheight (fontmetrics attribute)": [[94, "skia.FontMetrics.fXHeight"]], "fxmax (fontmetrics attribute)": [[94, "skia.FontMetrics.fXMax"]], "fxmin (fontmetrics attribute)": [[94, "skia.FontMetrics.fXMin"]], "hasstrikeoutposition() (fontmetrics method)": [[94, "skia.FontMetrics.hasStrikeoutPosition"]], "hasstrikeoutthickness() (fontmetrics method)": [[94, "skia.FontMetrics.hasStrikeoutThickness"]], "hasunderlineposition() (fontmetrics method)": [[94, "skia.FontMetrics.hasUnderlinePosition"]], "hasunderlinethickness() (fontmetrics method)": [[94, "skia.FontMetrics.hasUnderlineThickness"]], "kstrikeoutpositionisvalid_flag (fontmetrics attribute)": [[94, "skia.FontMetrics.kStrikeoutPositionIsValid_Flag"]], "kstrikeoutthicknessisvalid_flag (fontmetrics attribute)": [[94, "skia.FontMetrics.kStrikeoutThicknessIsValid_Flag"]], "kunderlinepositionisvalid_flag (fontmetrics attribute)": [[94, "skia.FontMetrics.kUnderlinePositionIsValid_Flag"]], "kunderlinethicknessisvalid_flag (fontmetrics attribute)": [[94, "skia.FontMetrics.kUnderlineThicknessIsValid_Flag"]], "fontmetricsflags (class in skia.fontmetrics)": [[95, "skia.FontMetrics.FontMetricsFlags"]], "__init__() (fontmetricsflags method)": [[95, "skia.FontMetrics.FontMetricsFlags.__init__"]], "kstrikeoutpositionisvalid_flag (fontmetricsflags attribute)": [[95, "skia.FontMetrics.FontMetricsFlags.kStrikeoutPositionIsValid_Flag"]], "kstrikeoutthicknessisvalid_flag (fontmetricsflags attribute)": [[95, "skia.FontMetrics.FontMetricsFlags.kStrikeoutThicknessIsValid_Flag"]], "kunderlinepositionisvalid_flag (fontmetricsflags attribute)": [[95, "skia.FontMetrics.FontMetricsFlags.kUnderlinePositionIsValid_Flag"]], "kunderlinethicknessisvalid_flag (fontmetricsflags attribute)": [[95, "skia.FontMetrics.FontMetricsFlags.kUnderlineThicknessIsValid_Flag"]], "name (fontmetricsflags attribute)": [[95, "skia.FontMetrics.FontMetricsFlags.name"]], "value (fontmetricsflags attribute)": [[95, "skia.FontMetrics.FontMetricsFlags.value"]], "fontmgr (class in skia)": [[96, "skia.FontMgr"]], "refdefault() (fontmgr static method)": [[96, "skia.FontMgr.RefDefault"]], "__init__() (fontmgr method)": [[96, "skia.FontMgr.__init__"]], "countfamilies() (fontmgr method)": [[96, "skia.FontMgr.countFamilies"]], "createstyleset() (fontmgr method)": [[96, "skia.FontMgr.createStyleSet"]], "getfamilyname() (fontmgr method)": [[96, "skia.FontMgr.getFamilyName"]], "legacymaketypeface() (fontmgr method)": [[96, "skia.FontMgr.legacyMakeTypeface"]], "makefromdata() (fontmgr method)": [[96, "skia.FontMgr.makeFromData"]], "makefromfile() (fontmgr method)": [[96, "skia.FontMgr.makeFromFile"]], "matchfamily() (fontmgr method)": [[96, "skia.FontMgr.matchFamily"]], "matchfamilystyle() (fontmgr method)": [[96, "skia.FontMgr.matchFamilyStyle"]], "matchfamilystylecharacter() (fontmgr method)": [[96, "skia.FontMgr.matchFamilyStyleCharacter"]], "ref() (fontmgr method)": [[96, "skia.FontMgr.ref"]], "unique() (fontmgr method)": [[96, "skia.FontMgr.unique"]], "unref() (fontmgr method)": [[96, "skia.FontMgr.unref"]], "fontparameters (class in skia)": [[97, "skia.FontParameters"]], "__init__() (fontparameters method)": [[97, "skia.FontParameters.__init__"]], "variation (class in skia.fontparameters)": [[98, "skia.FontParameters.Variation"]], "__init__() (variation method)": [[98, "skia.FontParameters.Variation.__init__"]], "axis (class in skia.fontparameters.variation)": [[99, "skia.FontParameters.Variation.Axis"]], "__init__() (axis method)": [[99, "skia.FontParameters.Variation.Axis.__init__"]], "def (axis attribute)": [[99, "skia.FontParameters.Variation.Axis.def"]], "ishidden() (axis method)": [[99, "skia.FontParameters.Variation.Axis.isHidden"]], "max (axis attribute)": [[99, "skia.FontParameters.Variation.Axis.max"]], "min (axis attribute)": [[99, "skia.FontParameters.Variation.Axis.min"]], "sethidden() (axis method)": [[99, "skia.FontParameters.Variation.Axis.setHidden"]], "tag (axis attribute)": [[99, "skia.FontParameters.Variation.Axis.tag"]], "bold() (fontstyle static method)": [[100, "skia.FontStyle.Bold"]], "bolditalic() (fontstyle static method)": [[100, "skia.FontStyle.BoldItalic"]], "fontstyle (class in skia)": [[100, "skia.FontStyle"]], "italic() (fontstyle static method)": [[100, "skia.FontStyle.Italic"]], "normal() (fontstyle static method)": [[100, "skia.FontStyle.Normal"]], "__init__() (fontstyle method)": [[100, "skia.FontStyle.__init__"]], "kblack_weight (fontstyle attribute)": [[100, "skia.FontStyle.kBlack_Weight"]], "kbold_weight (fontstyle attribute)": [[100, "skia.FontStyle.kBold_Weight"]], "kcondensed_width (fontstyle attribute)": [[100, "skia.FontStyle.kCondensed_Width"]], "kexpanded_width (fontstyle attribute)": [[100, "skia.FontStyle.kExpanded_Width"]], "kextrablack_weight (fontstyle attribute)": [[100, "skia.FontStyle.kExtraBlack_Weight"]], "kextrabold_weight (fontstyle attribute)": [[100, "skia.FontStyle.kExtraBold_Weight"]], "kextracondensed_width (fontstyle attribute)": [[100, "skia.FontStyle.kExtraCondensed_Width"]], "kextraexpanded_width (fontstyle attribute)": [[100, "skia.FontStyle.kExtraExpanded_Width"]], "kextralight_weight (fontstyle attribute)": [[100, "skia.FontStyle.kExtraLight_Weight"]], "kinvisible_weight (fontstyle attribute)": [[100, "skia.FontStyle.kInvisible_Weight"]], "kitalic_slant (fontstyle attribute)": [[100, "skia.FontStyle.kItalic_Slant"]], "klight_weight (fontstyle attribute)": [[100, "skia.FontStyle.kLight_Weight"]], "kmedium_weight (fontstyle attribute)": [[100, "skia.FontStyle.kMedium_Weight"]], "knormal_weight (fontstyle attribute)": [[100, "skia.FontStyle.kNormal_Weight"]], "knormal_width (fontstyle attribute)": [[100, "skia.FontStyle.kNormal_Width"]], "koblique_slant (fontstyle attribute)": [[100, "skia.FontStyle.kOblique_Slant"]], "ksemibold_weight (fontstyle attribute)": [[100, "skia.FontStyle.kSemiBold_Weight"]], "ksemicondensed_width (fontstyle attribute)": [[100, "skia.FontStyle.kSemiCondensed_Width"]], "ksemiexpanded_width (fontstyle attribute)": [[100, "skia.FontStyle.kSemiExpanded_Width"]], "kthin_weight (fontstyle attribute)": [[100, "skia.FontStyle.kThin_Weight"]], "kultracondensed_width (fontstyle attribute)": [[100, "skia.FontStyle.kUltraCondensed_Width"]], "kultraexpanded_width (fontstyle attribute)": [[100, "skia.FontStyle.kUltraExpanded_Width"]], "kupright_slant (fontstyle attribute)": [[100, "skia.FontStyle.kUpright_Slant"]], "slant() (fontstyle method)": [[100, "skia.FontStyle.slant"]], "weight() (fontstyle method)": [[100, "skia.FontStyle.weight"]], "width() (fontstyle method)": [[100, "skia.FontStyle.width"]], "slant (class in skia.fontstyle)": [[101, "skia.FontStyle.Slant"]], "__init__() (slant method)": [[101, "skia.FontStyle.Slant.__init__"]], "kitalic_slant (slant attribute)": [[101, "skia.FontStyle.Slant.kItalic_Slant"]], "koblique_slant (slant attribute)": [[101, "skia.FontStyle.Slant.kOblique_Slant"]], "kupright_slant (slant attribute)": [[101, "skia.FontStyle.Slant.kUpright_Slant"]], "name (slant attribute)": [[101, "skia.FontStyle.Slant.name"]], "value (slant attribute)": [[101, "skia.FontStyle.Slant.value"]], "weight (class in skia.fontstyle)": [[102, "skia.FontStyle.Weight"]], "__init__() (weight method)": [[102, "skia.FontStyle.Weight.__init__"]], "kblack_weight (weight attribute)": [[102, "skia.FontStyle.Weight.kBlack_Weight"]], "kbold_weight (weight attribute)": [[102, "skia.FontStyle.Weight.kBold_Weight"]], "kextrablack_weight (weight attribute)": [[102, "skia.FontStyle.Weight.kExtraBlack_Weight"]], "kextrabold_weight (weight attribute)": [[102, "skia.FontStyle.Weight.kExtraBold_Weight"]], "kextralight_weight (weight attribute)": [[102, "skia.FontStyle.Weight.kExtraLight_Weight"]], "kinvisible_weight (weight attribute)": [[102, "skia.FontStyle.Weight.kInvisible_Weight"]], "klight_weight (weight attribute)": [[102, "skia.FontStyle.Weight.kLight_Weight"]], "kmedium_weight (weight attribute)": [[102, "skia.FontStyle.Weight.kMedium_Weight"]], "knormal_weight (weight attribute)": [[102, "skia.FontStyle.Weight.kNormal_Weight"]], "ksemibold_weight (weight attribute)": [[102, "skia.FontStyle.Weight.kSemiBold_Weight"]], "kthin_weight (weight attribute)": [[102, "skia.FontStyle.Weight.kThin_Weight"]], "name (weight attribute)": [[102, "skia.FontStyle.Weight.name"]], "value (weight attribute)": [[102, "skia.FontStyle.Weight.value"]], "width (class in skia.fontstyle)": [[103, "skia.FontStyle.Width"]], "__init__() (width method)": [[103, "skia.FontStyle.Width.__init__"]], "kcondensed_width (width attribute)": [[103, "skia.FontStyle.Width.kCondensed_Width"]], "kexpanded_width (width attribute)": [[103, "skia.FontStyle.Width.kExpanded_Width"]], "kextracondensed_width (width attribute)": [[103, "skia.FontStyle.Width.kExtraCondensed_Width"]], "kextraexpanded_width (width attribute)": [[103, "skia.FontStyle.Width.kExtraExpanded_Width"]], "knormal_width (width attribute)": [[103, "skia.FontStyle.Width.kNormal_Width"]], "ksemicondensed_width (width attribute)": [[103, "skia.FontStyle.Width.kSemiCondensed_Width"]], "ksemiexpanded_width (width attribute)": [[103, "skia.FontStyle.Width.kSemiExpanded_Width"]], "kultracondensed_width (width attribute)": [[103, "skia.FontStyle.Width.kUltraCondensed_Width"]], "kultraexpanded_width (width attribute)": [[103, "skia.FontStyle.Width.kUltraExpanded_Width"]], "name (width attribute)": [[103, "skia.FontStyle.Width.name"]], "value (width attribute)": [[103, "skia.FontStyle.Width.value"]], "createempty() (fontstyleset static method)": [[104, "skia.FontStyleSet.CreateEmpty"]], "fontstyleset (class in skia)": [[104, "skia.FontStyleSet"]], "__init__() (fontstyleset method)": [[104, "skia.FontStyleSet.__init__"]], "count() (fontstyleset method)": [[104, "skia.FontStyleSet.count"]], "createtypeface() (fontstyleset method)": [[104, "skia.FontStyleSet.createTypeface"]], "getstyle() (fontstyleset method)": [[104, "skia.FontStyleSet.getStyle"]], "matchstyle() (fontstyleset method)": [[104, "skia.FontStyleSet.matchStyle"]], "ref() (fontstyleset method)": [[104, "skia.FontStyleSet.ref"]], "unique() (fontstyleset method)": [[104, "skia.FontStyleSet.unique"]], "unref() (fontstyleset method)": [[104, "skia.FontStyleSet.unref"]], "grbackendapi (class in skia)": [[105, "skia.GrBackendApi"]], "__init__() (grbackendapi method)": [[105, "skia.GrBackendApi.__init__"]], "kdawn (grbackendapi attribute)": [[105, "skia.GrBackendApi.kDawn"]], "kdirect3d (grbackendapi attribute)": [[105, "skia.GrBackendApi.kDirect3D"]], "kmetal (grbackendapi attribute)": [[105, "skia.GrBackendApi.kMetal"]], "kmock (grbackendapi attribute)": [[105, "skia.GrBackendApi.kMock"]], "kopengl (grbackendapi attribute)": [[105, "skia.GrBackendApi.kOpenGL"]], "kopengl_grbackend (grbackendapi attribute)": [[105, "skia.GrBackendApi.kOpenGL_GrBackend"]], "kvulkan (grbackendapi attribute)": [[105, "skia.GrBackendApi.kVulkan"]], "name (grbackendapi attribute)": [[105, "skia.GrBackendApi.name"]], "value (grbackendapi attribute)": [[105, "skia.GrBackendApi.value"]], "grbackendformat (class in skia)": [[106, "skia.GrBackendFormat"]], "makegl() (grbackendformat static method)": [[106, "skia.GrBackendFormat.MakeGL"]], "makemock() (grbackendformat static method)": [[106, "skia.GrBackendFormat.MakeMock"]], "makevk() (grbackendformat static method)": [[106, "skia.GrBackendFormat.MakeVk"]], "__init__() (grbackendformat method)": [[106, "skia.GrBackendFormat.__init__"]], "asglformat() (grbackendformat method)": [[106, "skia.GrBackendFormat.asGLFormat"]], "asmockcolortype() (grbackendformat method)": [[106, "skia.GrBackendFormat.asMockColorType"]], "asmockcompressiontype() (grbackendformat method)": [[106, "skia.GrBackendFormat.asMockCompressionType"]], "asvkformat() (grbackendformat method)": [[106, "skia.GrBackendFormat.asVkFormat"]], "backend() (grbackendformat method)": [[106, "skia.GrBackendFormat.backend"]], "channelmask() (grbackendformat method)": [[106, "skia.GrBackendFormat.channelMask"]], "getvkycbcrconversioninfo() (grbackendformat method)": [[106, "skia.GrBackendFormat.getVkYcbcrConversionInfo"]], "isvalid() (grbackendformat method)": [[106, "skia.GrBackendFormat.isValid"]], "maketexture2d() (grbackendformat method)": [[106, "skia.GrBackendFormat.makeTexture2D"]], "texturetype() (grbackendformat method)": [[106, "skia.GrBackendFormat.textureType"]], "grbackendrendertarget (class in skia)": [[107, "skia.GrBackendRenderTarget"]], "__init__() (grbackendrendertarget method)": [[107, "skia.GrBackendRenderTarget.__init__"]], "backend() (grbackendrendertarget method)": [[107, "skia.GrBackendRenderTarget.backend"]], "dimensions() (grbackendrendertarget method)": [[107, "skia.GrBackendRenderTarget.dimensions"]], "getbackendformat() (grbackendrendertarget method)": [[107, "skia.GrBackendRenderTarget.getBackendFormat"]], "getglframebufferinfo() (grbackendrendertarget method)": [[107, "skia.GrBackendRenderTarget.getGLFramebufferInfo"]], "getmockrendertargetinfo() (grbackendrendertarget method)": [[107, "skia.GrBackendRenderTarget.getMockRenderTargetInfo"]], "getvkimageinfo() (grbackendrendertarget method)": [[107, "skia.GrBackendRenderTarget.getVkImageInfo"]], "height() (grbackendrendertarget method)": [[107, "skia.GrBackendRenderTarget.height"]], "isframebufferonly() (grbackendrendertarget method)": [[107, "skia.GrBackendRenderTarget.isFramebufferOnly"]], "isprotected() (grbackendrendertarget method)": [[107, "skia.GrBackendRenderTarget.isProtected"]], "isvalid() (grbackendrendertarget method)": [[107, "skia.GrBackendRenderTarget.isValid"]], "samplecnt() (grbackendrendertarget method)": [[107, "skia.GrBackendRenderTarget.sampleCnt"]], "setvkimagelayout() (grbackendrendertarget method)": [[107, "skia.GrBackendRenderTarget.setVkImageLayout"]], "stencilbits() (grbackendrendertarget method)": [[107, "skia.GrBackendRenderTarget.stencilBits"]], "width() (grbackendrendertarget method)": [[107, "skia.GrBackendRenderTarget.width"]], "grbackendsemaphore (class in skia)": [[108, "skia.GrBackendSemaphore"]], "__init__() (grbackendsemaphore method)": [[108, "skia.GrBackendSemaphore.__init__"]], "glsync() (grbackendsemaphore method)": [[108, "skia.GrBackendSemaphore.glSync"]], "initgl() (grbackendsemaphore method)": [[108, "skia.GrBackendSemaphore.initGL"]], "initvulkan() (grbackendsemaphore method)": [[108, "skia.GrBackendSemaphore.initVulkan"]], "isinitialized() (grbackendsemaphore method)": [[108, "skia.GrBackendSemaphore.isInitialized"]], "vksemaphore() (grbackendsemaphore method)": [[108, "skia.GrBackendSemaphore.vkSemaphore"]], "grbackendsurfacemutablestate (class in skia)": [[109, "skia.GrBackendSurfaceMutableState"]], "__init__() (grbackendsurfacemutablestate method)": [[109, "skia.GrBackendSurfaceMutableState.__init__"]], "backend() (grbackendsurfacemutablestate method)": [[109, "skia.GrBackendSurfaceMutableState.backend"]], "isvalid() (grbackendsurfacemutablestate method)": [[109, "skia.GrBackendSurfaceMutableState.isValid"]], "grbackendtexture (class in skia)": [[110, "skia.GrBackendTexture"]], "__init__() (grbackendtexture method)": [[110, "skia.GrBackendTexture.__init__"]], "backend() (grbackendtexture method)": [[110, "skia.GrBackendTexture.backend"]], "dimensions() (grbackendtexture method)": [[110, "skia.GrBackendTexture.dimensions"]], "getbackendformat() (grbackendtexture method)": [[110, "skia.GrBackendTexture.getBackendFormat"]], "getgltextureinfo() (grbackendtexture method)": [[110, "skia.GrBackendTexture.getGLTextureInfo"]], "getmocktextureinfo() (grbackendtexture method)": [[110, "skia.GrBackendTexture.getMockTextureInfo"]], "getvkimageinfo() (grbackendtexture method)": [[110, "skia.GrBackendTexture.getVkImageInfo"]], "gltextureparametersmodified() (grbackendtexture method)": [[110, "skia.GrBackendTexture.glTextureParametersModified"]], "hasmipmaps() (grbackendtexture method)": [[110, "skia.GrBackendTexture.hasMipmaps"]], "height() (grbackendtexture method)": [[110, "skia.GrBackendTexture.height"]], "isprotected() (grbackendtexture method)": [[110, "skia.GrBackendTexture.isProtected"]], "issametexture() (grbackendtexture method)": [[110, "skia.GrBackendTexture.isSameTexture"]], "isvalid() (grbackendtexture method)": [[110, "skia.GrBackendTexture.isValid"]], "setmutablestate() (grbackendtexture method)": [[110, "skia.GrBackendTexture.setMutableState"]], "setvkimagelayout() (grbackendtexture method)": [[110, "skia.GrBackendTexture.setVkImageLayout"]], "width() (grbackendtexture method)": [[110, "skia.GrBackendTexture.width"]], "grcolortype (class in skia)": [[111, "skia.GrColorType"]], "__init__() (grcolortype method)": [[111, "skia.GrColorType.__init__"]], "kabgr_4444 (grcolortype attribute)": [[111, "skia.GrColorType.kABGR_4444"]], "kalpha_16 (grcolortype attribute)": [[111, "skia.GrColorType.kAlpha_16"]], "kalpha_8 (grcolortype attribute)": [[111, "skia.GrColorType.kAlpha_8"]], "kalpha_8xxx (grcolortype attribute)": [[111, "skia.GrColorType.kAlpha_8xxx"]], "kalpha_f16 (grcolortype attribute)": [[111, "skia.GrColorType.kAlpha_F16"]], "kalpha_f32xxx (grcolortype attribute)": [[111, "skia.GrColorType.kAlpha_F32xxx"]], "kbgra_8888 (grcolortype attribute)": [[111, "skia.GrColorType.kBGRA_8888"]], "kbgr_565 (grcolortype attribute)": [[111, "skia.GrColorType.kBGR_565"]], "kgray_8 (grcolortype attribute)": [[111, "skia.GrColorType.kGray_8"]], "kgray_8xxx (grcolortype attribute)": [[111, "skia.GrColorType.kGray_8xxx"]], "kgray_f16 (grcolortype attribute)": [[111, "skia.GrColorType.kGray_F16"]], "klast (grcolortype attribute)": [[111, "skia.GrColorType.kLast"]], "krgba_1010102 (grcolortype attribute)": [[111, "skia.GrColorType.kRGBA_1010102"]], "krgba_16161616 (grcolortype attribute)": [[111, "skia.GrColorType.kRGBA_16161616"]], "krgba_8888 (grcolortype attribute)": [[111, "skia.GrColorType.kRGBA_8888"]], "krgba_8888_srgb (grcolortype attribute)": [[111, "skia.GrColorType.kRGBA_8888_SRGB"]], "krgba_f16 (grcolortype attribute)": [[111, "skia.GrColorType.kRGBA_F16"]], "krgba_f16_clamped (grcolortype attribute)": [[111, "skia.GrColorType.kRGBA_F16_Clamped"]], "krgba_f32 (grcolortype attribute)": [[111, "skia.GrColorType.kRGBA_F32"]], "krgb_888 (grcolortype attribute)": [[111, "skia.GrColorType.kRGB_888"]], "krgb_888x (grcolortype attribute)": [[111, "skia.GrColorType.kRGB_888x"]], "krg_1616 (grcolortype attribute)": [[111, "skia.GrColorType.kRG_1616"]], "krg_88 (grcolortype attribute)": [[111, "skia.GrColorType.kRG_88"]], "krg_f16 (grcolortype attribute)": [[111, "skia.GrColorType.kRG_F16"]], "kr_16 (grcolortype attribute)": [[111, "skia.GrColorType.kR_16"]], "kr_8 (grcolortype attribute)": [[111, "skia.GrColorType.kR_8"]], "kr_f16 (grcolortype attribute)": [[111, "skia.GrColorType.kR_F16"]], "kunknown (grcolortype attribute)": [[111, "skia.GrColorType.kUnknown"]], "name (grcolortype attribute)": [[111, "skia.GrColorType.name"]], "value (grcolortype attribute)": [[111, "skia.GrColorType.value"]], "computeimagesize() (grcontext static method)": [[112, "skia.GrContext.ComputeImageSize"]], "grcontext (class in skia)": [[112, "skia.GrContext"]], "__init__() (grcontext method)": [[112, "skia.GrContext.__init__"]], "abandoncontext() (grcontext method)": [[112, "skia.GrContext.abandonContext"]], "abandoned() (grcontext method)": [[112, "skia.GrContext.abandoned"]], "asdirectcontext() (grcontext method)": [[112, "skia.GrContext.asDirectContext"]], "backend() (grcontext method)": [[112, "skia.GrContext.backend"]], "checkasyncworkcompletion() (grcontext method)": [[112, "skia.GrContext.checkAsyncWorkCompletion"]], "colortypesupportedasimage() (grcontext method)": [[112, "skia.GrContext.colorTypeSupportedAsImage"]], "colortypesupportedassurface() (grcontext method)": [[112, "skia.GrContext.colorTypeSupportedAsSurface"]], "compressedbackendformat() (grcontext method)": [[112, "skia.GrContext.compressedBackendFormat"]], "createbackendtexture() (grcontext method)": [[112, "skia.GrContext.createBackendTexture"]], "createcompressedbackendtexture() (grcontext method)": [[112, "skia.GrContext.createCompressedBackendTexture"]], "defaultbackendformat() (grcontext method)": [[112, "skia.GrContext.defaultBackendFormat"]], "deletebackendtexture() (grcontext method)": [[112, "skia.GrContext.deleteBackendTexture"]], "flush() (grcontext method)": [[112, "skia.GrContext.flush"]], "flushandsubmit() (grcontext method)": [[112, "skia.GrContext.flushAndSubmit"]], "freegpuresources() (grcontext method)": [[112, "skia.GrContext.freeGpuResources"]], "getresourcecachelimit() (grcontext method)": [[112, "skia.GrContext.getResourceCacheLimit"]], "getresourcecachepurgeablebytes() (grcontext method)": [[112, "skia.GrContext.getResourceCachePurgeableBytes"]], "getresourcecacheusage() (grcontext method)": [[112, "skia.GrContext.getResourceCacheUsage"]], "maxrendertargetsize() (grcontext method)": [[112, "skia.GrContext.maxRenderTargetSize"]], "maxsurfacesamplecountforcolortype() (grcontext method)": [[112, "skia.GrContext.maxSurfaceSampleCountForColorType"]], "maxtexturesize() (grcontext method)": [[112, "skia.GrContext.maxTextureSize"]], "oomed() (grcontext method)": [[112, "skia.GrContext.oomed"]], "performdeferredcleanup() (grcontext method)": [[112, "skia.GrContext.performDeferredCleanup"]], "precompileshader() (grcontext method)": [[112, "skia.GrContext.precompileShader"]], "purgeresourcesnotusedinms() (grcontext method)": [[112, "skia.GrContext.purgeResourcesNotUsedInMs"]], "purgeunlockedresources() (grcontext method)": [[112, "skia.GrContext.purgeUnlockedResources"]], "ref() (grcontext method)": [[112, "skia.GrContext.ref"]], "releaseresourcesandabandoncontext() (grcontext method)": [[112, "skia.GrContext.releaseResourcesAndAbandonContext"]], "resetcontext() (grcontext method)": [[112, "skia.GrContext.resetContext"]], "resetgltexturebindings() (grcontext method)": [[112, "skia.GrContext.resetGLTextureBindings"]], "setbackendrendertargetstate() (grcontext method)": [[112, "skia.GrContext.setBackendRenderTargetState"]], "setbackendtexturestate() (grcontext method)": [[112, "skia.GrContext.setBackendTextureState"]], "setresourcecachelimit() (grcontext method)": [[112, "skia.GrContext.setResourceCacheLimit"]], "storevkpipelinecachedata() (grcontext method)": [[112, "skia.GrContext.storeVkPipelineCacheData"]], "submit() (grcontext method)": [[112, "skia.GrContext.submit"]], "supportsdistancefieldtext() (grcontext method)": [[112, "skia.GrContext.supportsDistanceFieldText"]], "threadsafeproxy() (grcontext method)": [[112, "skia.GrContext.threadSafeProxy"]], "unique() (grcontext method)": [[112, "skia.GrContext.unique"]], "unref() (grcontext method)": [[112, "skia.GrContext.unref"]], "updatebackendtexture() (grcontext method)": [[112, "skia.GrContext.updateBackendTexture"]], "wait() (grcontext method)": [[112, "skia.GrContext.wait"]], "grcontextoptions (class in skia)": [[113, "skia.GrContextOptions"]], "__init__() (grcontextoptions method)": [[113, "skia.GrContextOptions.__init__"]], "grcontext_base (class in skia)": [[114, "skia.GrContext_Base"]], "__init__() (grcontext_base method)": [[114, "skia.GrContext_Base.__init__"]], "asdirectcontext() (grcontext_base method)": [[114, "skia.GrContext_Base.asDirectContext"]], "backend() (grcontext_base method)": [[114, "skia.GrContext_Base.backend"]], "compressedbackendformat() (grcontext_base method)": [[114, "skia.GrContext_Base.compressedBackendFormat"]], "defaultbackendformat() (grcontext_base method)": [[114, "skia.GrContext_Base.defaultBackendFormat"]], "ref() (grcontext_base method)": [[114, "skia.GrContext_Base.ref"]], "threadsafeproxy() (grcontext_base method)": [[114, "skia.GrContext_Base.threadSafeProxy"]], "unique() (grcontext_base method)": [[114, "skia.GrContext_Base.unique"]], "unref() (grcontext_base method)": [[114, "skia.GrContext_Base.unref"]], "computeimagesize() (grdirectcontext static method)": [[115, "skia.GrDirectContext.ComputeImageSize"]], "grdirectcontext (class in skia)": [[115, "skia.GrDirectContext"]], "makegl() (grdirectcontext static method)": [[115, "skia.GrDirectContext.MakeGL"]], "makemock() (grdirectcontext static method)": [[115, "skia.GrDirectContext.MakeMock"]], "__init__() (grdirectcontext method)": [[115, "skia.GrDirectContext.__init__"]], "abandoncontext() (grdirectcontext method)": [[115, "skia.GrDirectContext.abandonContext"]], "abandoned() (grdirectcontext method)": [[115, "skia.GrDirectContext.abandoned"]], "asdirectcontext() (grdirectcontext method)": [[115, "skia.GrDirectContext.asDirectContext"]], "backend() (grdirectcontext method)": [[115, "skia.GrDirectContext.backend"]], "checkasyncworkcompletion() (grdirectcontext method)": [[115, "skia.GrDirectContext.checkAsyncWorkCompletion"]], "colortypesupportedasimage() (grdirectcontext method)": [[115, "skia.GrDirectContext.colorTypeSupportedAsImage"]], "colortypesupportedassurface() (grdirectcontext method)": [[115, "skia.GrDirectContext.colorTypeSupportedAsSurface"]], "compressedbackendformat() (grdirectcontext method)": [[115, "skia.GrDirectContext.compressedBackendFormat"]], "createbackendtexture() (grdirectcontext method)": [[115, "skia.GrDirectContext.createBackendTexture"]], "createcompressedbackendtexture() (grdirectcontext method)": [[115, "skia.GrDirectContext.createCompressedBackendTexture"]], "defaultbackendformat() (grdirectcontext method)": [[115, "skia.GrDirectContext.defaultBackendFormat"]], "deletebackendtexture() (grdirectcontext method)": [[115, "skia.GrDirectContext.deleteBackendTexture"]], "flush() (grdirectcontext method)": [[115, "skia.GrDirectContext.flush"]], "flushandsubmit() (grdirectcontext method)": [[115, "skia.GrDirectContext.flushAndSubmit"]], "freegpuresources() (grdirectcontext method)": [[115, "skia.GrDirectContext.freeGpuResources"]], "getresourcecachelimit() (grdirectcontext method)": [[115, "skia.GrDirectContext.getResourceCacheLimit"]], "getresourcecachepurgeablebytes() (grdirectcontext method)": [[115, "skia.GrDirectContext.getResourceCachePurgeableBytes"]], "getresourcecacheusage() (grdirectcontext method)": [[115, "skia.GrDirectContext.getResourceCacheUsage"]], "maxrendertargetsize() (grdirectcontext method)": [[115, "skia.GrDirectContext.maxRenderTargetSize"]], "maxsurfacesamplecountforcolortype() (grdirectcontext method)": [[115, "skia.GrDirectContext.maxSurfaceSampleCountForColorType"]], "maxtexturesize() (grdirectcontext method)": [[115, "skia.GrDirectContext.maxTextureSize"]], "oomed() (grdirectcontext method)": [[115, "skia.GrDirectContext.oomed"]], "performdeferredcleanup() (grdirectcontext method)": [[115, "skia.GrDirectContext.performDeferredCleanup"]], "precompileshader() (grdirectcontext method)": [[115, "skia.GrDirectContext.precompileShader"]], "purgeresourcesnotusedinms() (grdirectcontext method)": [[115, "skia.GrDirectContext.purgeResourcesNotUsedInMs"]], "purgeunlockedresources() (grdirectcontext method)": [[115, "skia.GrDirectContext.purgeUnlockedResources"]], "ref() (grdirectcontext method)": [[115, "skia.GrDirectContext.ref"]], "releaseresourcesandabandoncontext() (grdirectcontext method)": [[115, "skia.GrDirectContext.releaseResourcesAndAbandonContext"]], "resetcontext() (grdirectcontext method)": [[115, "skia.GrDirectContext.resetContext"]], "resetgltexturebindings() (grdirectcontext method)": [[115, "skia.GrDirectContext.resetGLTextureBindings"]], "setbackendrendertargetstate() (grdirectcontext method)": [[115, "skia.GrDirectContext.setBackendRenderTargetState"]], "setbackendtexturestate() (grdirectcontext method)": [[115, "skia.GrDirectContext.setBackendTextureState"]], "setresourcecachelimit() (grdirectcontext method)": [[115, "skia.GrDirectContext.setResourceCacheLimit"]], "storevkpipelinecachedata() (grdirectcontext method)": [[115, "skia.GrDirectContext.storeVkPipelineCacheData"]], "submit() (grdirectcontext method)": [[115, "skia.GrDirectContext.submit"]], "supportsdistancefieldtext() (grdirectcontext method)": [[115, "skia.GrDirectContext.supportsDistanceFieldText"]], "threadsafeproxy() (grdirectcontext method)": [[115, "skia.GrDirectContext.threadSafeProxy"]], "unique() (grdirectcontext method)": [[115, "skia.GrDirectContext.unique"]], "unref() (grdirectcontext method)": [[115, "skia.GrDirectContext.unref"]], "updatebackendtexture() (grdirectcontext method)": [[115, "skia.GrDirectContext.updateBackendTexture"]], "wait() (grdirectcontext method)": [[115, "skia.GrDirectContext.wait"]], "grflushinfo (class in skia)": [[116, "skia.GrFlushInfo"]], "__init__() (grflushinfo method)": [[116, "skia.GrFlushInfo.__init__"]], "fnumsemaphores (grflushinfo attribute)": [[116, "skia.GrFlushInfo.fNumSemaphores"]], "semaphores (grflushinfo attribute)": [[116, "skia.GrFlushInfo.semaphores"]], "grglbackendstate (class in skia)": [[117, "skia.GrGLBackendState"]], "__init__() (grglbackendstate method)": [[117, "skia.GrGLBackendState.__init__"]], "kall_grglbackendstate (grglbackendstate attribute)": [[117, "skia.GrGLBackendState.kALL_GrGLBackendState"]], "kblend_grglbackendstate (grglbackendstate attribute)": [[117, "skia.GrGLBackendState.kBlend_GrGLBackendState"]], "kfixedfunction_grglbackendstate (grglbackendstate attribute)": [[117, "skia.GrGLBackendState.kFixedFunction_GrGLBackendState"]], "kmsaaenable_grglbackendstate (grglbackendstate attribute)": [[117, "skia.GrGLBackendState.kMSAAEnable_GrGLBackendState"]], "kmisc_grglbackendstate (grglbackendstate attribute)": [[117, "skia.GrGLBackendState.kMisc_GrGLBackendState"]], "kpathrendering_grglbackendstate (grglbackendstate attribute)": [[117, "skia.GrGLBackendState.kPathRendering_GrGLBackendState"]], "kpixelstore_grglbackendstate (grglbackendstate attribute)": [[117, "skia.GrGLBackendState.kPixelStore_GrGLBackendState"]], "kprogram_grglbackendstate (grglbackendstate attribute)": [[117, "skia.GrGLBackendState.kProgram_GrGLBackendState"]], "krendertarget_grglbackendstate (grglbackendstate attribute)": [[117, "skia.GrGLBackendState.kRenderTarget_GrGLBackendState"]], "kstencil_grglbackendstate (grglbackendstate attribute)": [[117, "skia.GrGLBackendState.kStencil_GrGLBackendState"]], "ktexturebinding_grglbackendstate (grglbackendstate attribute)": [[117, "skia.GrGLBackendState.kTextureBinding_GrGLBackendState"]], "kvertex_grglbackendstate (grglbackendstate attribute)": [[117, "skia.GrGLBackendState.kVertex_GrGLBackendState"]], "kview_grglbackendstate (grglbackendstate attribute)": [[117, "skia.GrGLBackendState.kView_GrGLBackendState"]], "name (grglbackendstate attribute)": [[117, "skia.GrGLBackendState.name"]], "value (grglbackendstate attribute)": [[117, "skia.GrGLBackendState.value"]], "grglformat (class in skia)": [[118, "skia.GrGLFormat"]], "__init__() (grglformat method)": [[118, "skia.GrGLFormat.__init__"]], "kalpha8 (grglformat attribute)": [[118, "skia.GrGLFormat.kALPHA8"]], "kbgra8 (grglformat attribute)": [[118, "skia.GrGLFormat.kBGRA8"]], "kcompressed_etc1_rgb8 (grglformat attribute)": [[118, "skia.GrGLFormat.kCOMPRESSED_ETC1_RGB8"]], "kcompressed_rgb8_bc1 (grglformat attribute)": [[118, "skia.GrGLFormat.kCOMPRESSED_RGB8_BC1"]], "kcompressed_rgb8_etc2 (grglformat attribute)": [[118, "skia.GrGLFormat.kCOMPRESSED_RGB8_ETC2"]], "kcompressed_rgba8_bc1 (grglformat attribute)": [[118, "skia.GrGLFormat.kCOMPRESSED_RGBA8_BC1"]], "kluminance16f (grglformat attribute)": [[118, "skia.GrGLFormat.kLUMINANCE16F"]], "kluminance8 (grglformat attribute)": [[118, "skia.GrGLFormat.kLUMINANCE8"]], "klast (grglformat attribute)": [[118, "skia.GrGLFormat.kLast"]], "kr16 (grglformat attribute)": [[118, "skia.GrGLFormat.kR16"]], "kr16f (grglformat attribute)": [[118, "skia.GrGLFormat.kR16F"]], "kr8 (grglformat attribute)": [[118, "skia.GrGLFormat.kR8"]], "krg16 (grglformat attribute)": [[118, "skia.GrGLFormat.kRG16"]], "krg16f (grglformat attribute)": [[118, "skia.GrGLFormat.kRG16F"]], "krg8 (grglformat attribute)": [[118, "skia.GrGLFormat.kRG8"]], "krgb10_a2 (grglformat attribute)": [[118, "skia.GrGLFormat.kRGB10_A2"]], "krgb565 (grglformat attribute)": [[118, "skia.GrGLFormat.kRGB565"]], "krgb8 (grglformat attribute)": [[118, "skia.GrGLFormat.kRGB8"]], "krgba16 (grglformat attribute)": [[118, "skia.GrGLFormat.kRGBA16"]], "krgba16f (grglformat attribute)": [[118, "skia.GrGLFormat.kRGBA16F"]], "krgba4 (grglformat attribute)": [[118, "skia.GrGLFormat.kRGBA4"]], "krgba8 (grglformat attribute)": [[118, "skia.GrGLFormat.kRGBA8"]], "ksrgb8_alpha8 (grglformat attribute)": [[118, "skia.GrGLFormat.kSRGB8_ALPHA8"]], "kunknown (grglformat attribute)": [[118, "skia.GrGLFormat.kUnknown"]], "name (grglformat attribute)": [[118, "skia.GrGLFormat.name"]], "value (grglformat attribute)": [[118, "skia.GrGLFormat.value"]], "grglframebufferinfo (class in skia)": [[119, "skia.GrGLFramebufferInfo"]], "__init__() (grglframebufferinfo method)": [[119, "skia.GrGLFramebufferInfo.__init__"]], "ffboid (grglframebufferinfo attribute)": [[119, "skia.GrGLFramebufferInfo.fFBOID"]], "fformat (grglframebufferinfo attribute)": [[119, "skia.GrGLFramebufferInfo.fFormat"]], "grglinterface (class in skia)": [[120, "skia.GrGLInterface"]], "__init__() (grglinterface method)": [[120, "skia.GrGLInterface.__init__"]], "ref() (grglinterface method)": [[120, "skia.GrGLInterface.ref"]], "unique() (grglinterface method)": [[120, "skia.GrGLInterface.unique"]], "unref() (grglinterface method)": [[120, "skia.GrGLInterface.unref"]], "grgltextureinfo (class in skia)": [[121, "skia.GrGLTextureInfo"]], "__init__() (grgltextureinfo method)": [[121, "skia.GrGLTextureInfo.__init__"]], "fformat (grgltextureinfo attribute)": [[121, "skia.GrGLTextureInfo.fFormat"]], "fid (grgltextureinfo attribute)": [[121, "skia.GrGLTextureInfo.fID"]], "ftarget (grgltextureinfo attribute)": [[121, "skia.GrGLTextureInfo.fTarget"]], "grimagecontext (class in skia)": [[122, "skia.GrImageContext"]], "__init__() (grimagecontext method)": [[122, "skia.GrImageContext.__init__"]], "asdirectcontext() (grimagecontext method)": [[122, "skia.GrImageContext.asDirectContext"]], "backend() (grimagecontext method)": [[122, "skia.GrImageContext.backend"]], "compressedbackendformat() (grimagecontext method)": [[122, "skia.GrImageContext.compressedBackendFormat"]], "defaultbackendformat() (grimagecontext method)": [[122, "skia.GrImageContext.defaultBackendFormat"]], "ref() (grimagecontext method)": [[122, "skia.GrImageContext.ref"]], "threadsafeproxy() (grimagecontext method)": [[122, "skia.GrImageContext.threadSafeProxy"]], "unique() (grimagecontext method)": [[122, "skia.GrImageContext.unique"]], "unref() (grimagecontext method)": [[122, "skia.GrImageContext.unref"]], "grmipmapped (class in skia)": [[123, "skia.GrMipmapped"]], "__init__() (grmipmapped method)": [[123, "skia.GrMipmapped.__init__"]], "kno (grmipmapped attribute)": [[123, "skia.GrMipmapped.kNo"]], "kyes (grmipmapped attribute)": [[123, "skia.GrMipmapped.kYes"]], "name (grmipmapped attribute)": [[123, "skia.GrMipmapped.name"]], "value (grmipmapped attribute)": [[123, "skia.GrMipmapped.value"]], "grmockoptions (class in skia)": [[124, "skia.GrMockOptions"]], "__init__() (grmockoptions method)": [[124, "skia.GrMockOptions.__init__"]], "grmockrendertargetinfo (class in skia)": [[125, "skia.GrMockRenderTargetInfo"]], "__init__() (grmockrendertargetinfo method)": [[125, "skia.GrMockRenderTargetInfo.__init__"]], "colortype() (grmockrendertargetinfo method)": [[125, "skia.GrMockRenderTargetInfo.colorType"]], "getbackendformat() (grmockrendertargetinfo method)": [[125, "skia.GrMockRenderTargetInfo.getBackendFormat"]], "grmocktextureinfo (class in skia)": [[126, "skia.GrMockTextureInfo"]], "__init__() (grmocktextureinfo method)": [[126, "skia.GrMockTextureInfo.__init__"]], "colortype() (grmocktextureinfo method)": [[126, "skia.GrMockTextureInfo.colorType"]], "compressiontype() (grmocktextureinfo method)": [[126, "skia.GrMockTextureInfo.compressionType"]], "getbackendformat() (grmocktextureinfo method)": [[126, "skia.GrMockTextureInfo.getBackendFormat"]], "id() (grmocktextureinfo method)": [[126, "skia.GrMockTextureInfo.id"]], "grprotected (class in skia)": [[127, "skia.GrProtected"]], "__init__() (grprotected method)": [[127, "skia.GrProtected.__init__"]], "kno (grprotected attribute)": [[127, "skia.GrProtected.kNo"]], "kyes (grprotected attribute)": [[127, "skia.GrProtected.kYes"]], "name (grprotected attribute)": [[127, "skia.GrProtected.name"]], "value (grprotected attribute)": [[127, "skia.GrProtected.value"]], "grrecordingcontext (class in skia)": [[128, "skia.GrRecordingContext"]], "__init__() (grrecordingcontext method)": [[128, "skia.GrRecordingContext.__init__"]], "abandoned() (grrecordingcontext method)": [[128, "skia.GrRecordingContext.abandoned"]], "asdirectcontext() (grrecordingcontext method)": [[128, "skia.GrRecordingContext.asDirectContext"]], "backend() (grrecordingcontext method)": [[128, "skia.GrRecordingContext.backend"]], "colortypesupportedasimage() (grrecordingcontext method)": [[128, "skia.GrRecordingContext.colorTypeSupportedAsImage"]], "colortypesupportedassurface() (grrecordingcontext method)": [[128, "skia.GrRecordingContext.colorTypeSupportedAsSurface"]], "compressedbackendformat() (grrecordingcontext method)": [[128, "skia.GrRecordingContext.compressedBackendFormat"]], "defaultbackendformat() (grrecordingcontext method)": [[128, "skia.GrRecordingContext.defaultBackendFormat"]], "maxrendertargetsize() (grrecordingcontext method)": [[128, "skia.GrRecordingContext.maxRenderTargetSize"]], "maxsurfacesamplecountforcolortype() (grrecordingcontext method)": [[128, "skia.GrRecordingContext.maxSurfaceSampleCountForColorType"]], "maxtexturesize() (grrecordingcontext method)": [[128, "skia.GrRecordingContext.maxTextureSize"]], "ref() (grrecordingcontext method)": [[128, "skia.GrRecordingContext.ref"]], "threadsafeproxy() (grrecordingcontext method)": [[128, "skia.GrRecordingContext.threadSafeProxy"]], "unique() (grrecordingcontext method)": [[128, "skia.GrRecordingContext.unique"]], "unref() (grrecordingcontext method)": [[128, "skia.GrRecordingContext.unref"]], "grrenderable (class in skia)": [[129, "skia.GrRenderable"]], "__init__() (grrenderable method)": [[129, "skia.GrRenderable.__init__"]], "kno (grrenderable attribute)": [[129, "skia.GrRenderable.kNo"]], "kyes (grrenderable attribute)": [[129, "skia.GrRenderable.kYes"]], "name (grrenderable attribute)": [[129, "skia.GrRenderable.name"]], "value (grrenderable attribute)": [[129, "skia.GrRenderable.value"]], "grsemaphoressubmitted (class in skia)": [[130, "skia.GrSemaphoresSubmitted"]], "__init__() (grsemaphoressubmitted method)": [[130, "skia.GrSemaphoresSubmitted.__init__"]], "kno (grsemaphoressubmitted attribute)": [[130, "skia.GrSemaphoresSubmitted.kNo"]], "kyes (grsemaphoressubmitted attribute)": [[130, "skia.GrSemaphoresSubmitted.kYes"]], "name (grsemaphoressubmitted attribute)": [[130, "skia.GrSemaphoresSubmitted.name"]], "value (grsemaphoressubmitted attribute)": [[130, "skia.GrSemaphoresSubmitted.value"]], "grsurfaceorigin (class in skia)": [[131, "skia.GrSurfaceOrigin"]], "__init__() (grsurfaceorigin method)": [[131, "skia.GrSurfaceOrigin.__init__"]], "kbottomleft_grsurfaceorigin (grsurfaceorigin attribute)": [[131, "skia.GrSurfaceOrigin.kBottomLeft_GrSurfaceOrigin"]], "ktopleft_grsurfaceorigin (grsurfaceorigin attribute)": [[131, "skia.GrSurfaceOrigin.kTopLeft_GrSurfaceOrigin"]], "name (grsurfaceorigin attribute)": [[131, "skia.GrSurfaceOrigin.name"]], "value (grsurfaceorigin attribute)": [[131, "skia.GrSurfaceOrigin.value"]], "grtexturetype (class in skia)": [[132, "skia.GrTextureType"]], "__init__() (grtexturetype method)": [[132, "skia.GrTextureType.__init__"]], "k2d (grtexturetype attribute)": [[132, "skia.GrTextureType.k2D"]], "kexternal (grtexturetype attribute)": [[132, "skia.GrTextureType.kExternal"]], "knone (grtexturetype attribute)": [[132, "skia.GrTextureType.kNone"]], "krectangle (grtexturetype attribute)": [[132, "skia.GrTextureType.kRectangle"]], "name (grtexturetype attribute)": [[132, "skia.GrTextureType.name"]], "value (grtexturetype attribute)": [[132, "skia.GrTextureType.value"]], "grvkalloc (class in skia)": [[133, "skia.GrVkAlloc"]], "__init__() (grvkalloc method)": [[133, "skia.GrVkAlloc.__init__"]], "grvkbackendcontext (class in skia)": [[134, "skia.GrVkBackendContext"]], "__init__() (grvkbackendcontext method)": [[134, "skia.GrVkBackendContext.__init__"]], "grvkdrawableinfo (class in skia)": [[135, "skia.GrVkDrawableInfo"]], "__init__() (grvkdrawableinfo method)": [[135, "skia.GrVkDrawableInfo.__init__"]], "grvkextensionflags (class in skia)": [[136, "skia.GrVkExtensionFlags"]], "__init__() (grvkextensionflags method)": [[136, "skia.GrVkExtensionFlags.__init__"]], "kext_debug_report_grvkextensionflag (grvkextensionflags attribute)": [[136, "skia.GrVkExtensionFlags.kEXT_debug_report_GrVkExtensionFlag"]], "kkhr_android_surface_grvkextensionflag (grvkextensionflags attribute)": [[136, "skia.GrVkExtensionFlags.kKHR_android_surface_GrVkExtensionFlag"]], "kkhr_surface_grvkextensionflag (grvkextensionflags attribute)": [[136, "skia.GrVkExtensionFlags.kKHR_surface_GrVkExtensionFlag"]], "kkhr_swapchain_grvkextensionflag (grvkextensionflags attribute)": [[136, "skia.GrVkExtensionFlags.kKHR_swapchain_GrVkExtensionFlag"]], "kkhr_win32_surface_grvkextensionflag (grvkextensionflags attribute)": [[136, "skia.GrVkExtensionFlags.kKHR_win32_surface_GrVkExtensionFlag"]], "kkhr_xcb_surface_grvkextensionflag (grvkextensionflags attribute)": [[136, "skia.GrVkExtensionFlags.kKHR_xcb_surface_GrVkExtensionFlag"]], "knv_glsl_shader_grvkextensionflag (grvkextensionflags attribute)": [[136, "skia.GrVkExtensionFlags.kNV_glsl_shader_GrVkExtensionFlag"]], "name (grvkextensionflags attribute)": [[136, "skia.GrVkExtensionFlags.name"]], "value (grvkextensionflags attribute)": [[136, "skia.GrVkExtensionFlags.value"]], "grvkfeatureflags (class in skia)": [[137, "skia.GrVkFeatureFlags"]], "__init__() (grvkfeatureflags method)": [[137, "skia.GrVkFeatureFlags.__init__"]], "kdualsrcblend_grvkfeatureflag (grvkfeatureflags attribute)": [[137, "skia.GrVkFeatureFlags.kDualSrcBlend_GrVkFeatureFlag"]], "kgeometryshader_grvkfeatureflag (grvkfeatureflags attribute)": [[137, "skia.GrVkFeatureFlags.kGeometryShader_GrVkFeatureFlag"]], "ksamplerateshading_grvkfeatureflag (grvkfeatureflags attribute)": [[137, "skia.GrVkFeatureFlags.kSampleRateShading_GrVkFeatureFlag"]], "name (grvkfeatureflags attribute)": [[137, "skia.GrVkFeatureFlags.name"]], "value (grvkfeatureflags attribute)": [[137, "skia.GrVkFeatureFlags.value"]], "grvkimageinfo (class in skia)": [[138, "skia.GrVkImageInfo"]], "__init__() (grvkimageinfo method)": [[138, "skia.GrVkImageInfo.__init__"]], "falloc (grvkimageinfo attribute)": [[138, "skia.GrVkImageInfo.fAlloc"]], "fcurrentqueuefamily (grvkimageinfo attribute)": [[138, "skia.GrVkImageInfo.fCurrentQueueFamily"]], "flevelcount (grvkimageinfo attribute)": [[138, "skia.GrVkImageInfo.fLevelCount"]], "fprotected (grvkimageinfo attribute)": [[138, "skia.GrVkImageInfo.fProtected"]], "fsharingmode (grvkimageinfo attribute)": [[138, "skia.GrVkImageInfo.fSharingMode"]], "fycbcrconversioninfo (grvkimageinfo attribute)": [[138, "skia.GrVkImageInfo.fYcbcrConversionInfo"]], "grvkycbcrconversioninfo (class in skia)": [[139, "skia.GrVkYcbcrConversionInfo"]], "__init__() (grvkycbcrconversioninfo method)": [[139, "skia.GrVkYcbcrConversionInfo.__init__"]], "gradientshader (class in skia)": [[140, "skia.GradientShader"]], "makelinear() (gradientshader static method)": [[140, "skia.GradientShader.MakeLinear"]], "makeradial() (gradientshader static method)": [[140, "skia.GradientShader.MakeRadial"]], "makesweep() (gradientshader static method)": [[140, "skia.GradientShader.MakeSweep"]], "maketwopointconical() (gradientshader static method)": [[140, "skia.GradientShader.MakeTwoPointConical"]], "__init__() (gradientshader method)": [[140, "skia.GradientShader.__init__"]], "kinterpolatecolorsinpremul_flag (gradientshader attribute)": [[140, "skia.GradientShader.kInterpolateColorsInPremul_Flag"]], "flags (class in skia.gradientshader)": [[141, "skia.GradientShader.Flags"]], "kinterpolatecolorsinpremul_flag (flags attribute)": [[141, "skia.GradientShader.Flags.kInterpolateColorsInPremul_Flag"]], "highcontrastconfig (class in skia)": [[142, "skia.HighContrastConfig"]], "__init__() (highcontrastconfig method)": [[142, "skia.HighContrastConfig.__init__"]], "fcontrast (highcontrastconfig attribute)": [[142, "skia.HighContrastConfig.fContrast"]], "fgrayscale (highcontrastconfig attribute)": [[142, "skia.HighContrastConfig.fGrayscale"]], "finvertstyle (highcontrastconfig attribute)": [[142, "skia.HighContrastConfig.fInvertStyle"]], "isvalid() (highcontrastconfig method)": [[142, "skia.HighContrastConfig.isValid"]], "kinvertbrightness (highcontrastconfig attribute)": [[142, "skia.HighContrastConfig.kInvertBrightness"]], "kinvertlightness (highcontrastconfig attribute)": [[142, "skia.HighContrastConfig.kInvertLightness"]], "klast (highcontrastconfig attribute)": [[142, "skia.HighContrastConfig.kLast"]], "knoinvert (highcontrastconfig attribute)": [[142, "skia.HighContrastConfig.kNoInvert"]], "invertstyle (class in skia.highcontrastconfig)": [[143, "skia.HighContrastConfig.InvertStyle"]], "__init__() (invertstyle method)": [[143, "skia.HighContrastConfig.InvertStyle.__init__"]], "kinvertbrightness (invertstyle attribute)": [[143, "skia.HighContrastConfig.InvertStyle.kInvertBrightness"]], "kinvertlightness (invertstyle attribute)": [[143, "skia.HighContrastConfig.InvertStyle.kInvertLightness"]], "klast (invertstyle attribute)": [[143, "skia.HighContrastConfig.InvertStyle.kLast"]], "knoinvert (invertstyle attribute)": [[143, "skia.HighContrastConfig.InvertStyle.kNoInvert"]], "name (invertstyle attribute)": [[143, "skia.HighContrastConfig.InvertStyle.name"]], "value (invertstyle attribute)": [[143, "skia.HighContrastConfig.InvertStyle.value"]], "highcontrastfilter (class in skia)": [[144, "skia.HighContrastFilter"]], "make() (highcontrastfilter static method)": [[144, "skia.HighContrastFilter.Make"]], "__init__() (highcontrastfilter method)": [[144, "skia.HighContrastFilter.__init__"]], "ipoint (class in skia)": [[145, "skia.IPoint"]], "make() (ipoint static method)": [[145, "skia.IPoint.Make"]], "__init__() (ipoint method)": [[145, "skia.IPoint.__init__"]], "equals() (ipoint method)": [[145, "skia.IPoint.equals"]], "fx (ipoint attribute)": [[145, "skia.IPoint.fX"]], "fy (ipoint attribute)": [[145, "skia.IPoint.fY"]], "iszero() (ipoint method)": [[145, "skia.IPoint.isZero"]], "set() (ipoint method)": [[145, "skia.IPoint.set"]], "x() (ipoint method)": [[145, "skia.IPoint.x"]], "y() (ipoint method)": [[145, "skia.IPoint.y"]], "irect (class in skia)": [[146, "skia.IRect"]], "intersects() (irect static method)": [[146, "skia.IRect.Intersects"]], "makeempty() (irect static method)": [[146, "skia.IRect.MakeEmpty"]], "makeltrb() (irect static method)": [[146, "skia.IRect.MakeLTRB"]], "makesize() (irect static method)": [[146, "skia.IRect.MakeSize"]], "makewh() (irect static method)": [[146, "skia.IRect.MakeWH"]], "makexywh() (irect static method)": [[146, "skia.IRect.MakeXYWH"]], "__init__() (irect method)": [[146, "skia.IRect.__init__"]], "adjust() (irect method)": [[146, "skia.IRect.adjust"]], "bottom() (irect method)": [[146, "skia.IRect.bottom"]], "contains() (irect method)": [[146, "skia.IRect.contains"]], "containsnoemptycheck() (irect method)": [[146, "skia.IRect.containsNoEmptyCheck"]], "fbottom (irect attribute)": [[146, "skia.IRect.fBottom"]], "fleft (irect attribute)": [[146, "skia.IRect.fLeft"]], "fright (irect attribute)": [[146, "skia.IRect.fRight"]], "ftop (irect attribute)": [[146, "skia.IRect.fTop"]], "height() (irect method)": [[146, "skia.IRect.height"]], "height64() (irect method)": [[146, "skia.IRect.height64"]], "inset() (irect method)": [[146, "skia.IRect.inset"]], "intersect() (irect method)": [[146, "skia.IRect.intersect"]], "isempty() (irect method)": [[146, "skia.IRect.isEmpty"]], "isempty64() (irect method)": [[146, "skia.IRect.isEmpty64"]], "join() (irect method)": [[146, "skia.IRect.join"]], "left() (irect method)": [[146, "skia.IRect.left"]], "makeinset() (irect method)": [[146, "skia.IRect.makeInset"]], "makeoffset() (irect method)": [[146, "skia.IRect.makeOffset"]], "makeoutset() (irect method)": [[146, "skia.IRect.makeOutset"]], "makesorted() (irect method)": [[146, "skia.IRect.makeSorted"]], "offset() (irect method)": [[146, "skia.IRect.offset"]], "offsetto() (irect method)": [[146, "skia.IRect.offsetTo"]], "outset() (irect method)": [[146, "skia.IRect.outset"]], "right() (irect method)": [[146, "skia.IRect.right"]], "setempty() (irect method)": [[146, "skia.IRect.setEmpty"]], "setltrb() (irect method)": [[146, "skia.IRect.setLTRB"]], "setwh() (irect method)": [[146, "skia.IRect.setWH"]], "setxywh() (irect method)": [[146, "skia.IRect.setXYWH"]], "size() (irect method)": [[146, "skia.IRect.size"]], "sort() (irect method)": [[146, "skia.IRect.sort"]], "top() (irect method)": [[146, "skia.IRect.top"]], "topleft() (irect method)": [[146, "skia.IRect.topLeft"]], "width() (irect method)": [[146, "skia.IRect.width"]], "width64() (irect method)": [[146, "skia.IRect.width64"]], "x() (irect method)": [[146, "skia.IRect.x"]], "y() (irect method)": [[146, "skia.IRect.y"]], "isize (class in skia)": [[147, "skia.ISize"]], "make() (isize static method)": [[147, "skia.ISize.Make"]], "makeempty() (isize static method)": [[147, "skia.ISize.MakeEmpty"]], "__init__() (isize method)": [[147, "skia.ISize.__init__"]], "area() (isize method)": [[147, "skia.ISize.area"]], "equals() (isize method)": [[147, "skia.ISize.equals"]], "fheight (isize attribute)": [[147, "skia.ISize.fHeight"]], "fwidth (isize attribute)": [[147, "skia.ISize.fWidth"]], "height() (isize method)": [[147, "skia.ISize.height"]], "isempty() (isize method)": [[147, "skia.ISize.isEmpty"]], "iszero() (isize method)": [[147, "skia.ISize.isZero"]], "set() (isize method)": [[147, "skia.ISize.set"]], "setempty() (isize method)": [[147, "skia.ISize.setEmpty"]], "width() (isize method)": [[147, "skia.ISize.width"]], "image (class in skia)": [[148, "skia.Image"]], "makebackendtexturefromimage() (image static method)": [[148, "skia.Image.MakeBackendTextureFromImage"]], "makecrosscontextfrompixmap() (image static method)": [[148, "skia.Image.MakeCrossContextFromPixmap"]], "makefromadoptedtexture() (image static method)": [[148, "skia.Image.MakeFromAdoptedTexture"]], "makefrombitmap() (image static method)": [[148, "skia.Image.MakeFromBitmap"]], "makefromcompressedtexture() (image static method)": [[148, "skia.Image.MakeFromCompressedTexture"]], "makefromencoded() (image static method)": [[148, "skia.Image.MakeFromEncoded"]], "makefromnv12texturescopy() (image static method)": [[148, "skia.Image.MakeFromNV12TexturesCopy"]], "makefromnv12texturescopywithexternalbackend() (image static method)": [[148, "skia.Image.MakeFromNV12TexturesCopyWithExternalBackend"]], "makefrompicture() (image static method)": [[148, "skia.Image.MakeFromPicture"]], "makefromraster() (image static method)": [[148, "skia.Image.MakeFromRaster"]], "makefromtexture() (image static method)": [[148, "skia.Image.MakeFromTexture"]], "makefromyuvapixmaps() (image static method)": [[148, "skia.Image.MakeFromYUVAPixmaps"]], "makefromyuvatextures() (image static method)": [[148, "skia.Image.MakeFromYUVATextures"]], "makefromyuvatexturescopy() (image static method)": [[148, "skia.Image.MakeFromYUVATexturesCopy"]], "makefromyuvatexturescopywithexternalbackend() (image static method)": [[148, "skia.Image.MakeFromYUVATexturesCopyWithExternalBackend"]], "makerastercopy() (image static method)": [[148, "skia.Image.MakeRasterCopy"]], "makerasterdata() (image static method)": [[148, "skia.Image.MakeRasterData"]], "makerasterfromcompressed() (image static method)": [[148, "skia.Image.MakeRasterFromCompressed"]], "maketexturefromcompressed() (image static method)": [[148, "skia.Image.MakeTextureFromCompressed"]], "__init__() (image method)": [[148, "skia.Image.__init__"]], "alphatype() (image method)": [[148, "skia.Image.alphaType"]], "aslegacybitmap() (image method)": [[148, "skia.Image.asLegacyBitmap"]], "bitmap() (image method)": [[148, "skia.Image.bitmap"]], "bounds() (image method)": [[148, "skia.Image.bounds"]], "colorspace() (image method)": [[148, "skia.Image.colorSpace"]], "colortype() (image method)": [[148, "skia.Image.colorType"]], "convert() (image method)": [[148, "skia.Image.convert"]], "dimensions() (image method)": [[148, "skia.Image.dimensions"]], "encodetodata() (image method)": [[148, "skia.Image.encodeToData"]], "flush() (image method)": [[148, "skia.Image.flush"]], "flushandsubmit() (image method)": [[148, "skia.Image.flushAndSubmit"]], "fromarray() (image static method)": [[148, "skia.Image.fromarray"]], "frombytes() (image static method)": [[148, "skia.Image.frombytes"]], "getbackendtexture() (image method)": [[148, "skia.Image.getBackendTexture"]], "hasmipmaps() (image method)": [[148, "skia.Image.hasMipmaps"]], "height() (image method)": [[148, "skia.Image.height"]], "imageinfo() (image method)": [[148, "skia.Image.imageInfo"]], "isalphaonly() (image method)": [[148, "skia.Image.isAlphaOnly"]], "islazygenerated() (image method)": [[148, "skia.Image.isLazyGenerated"]], "isopaque() (image method)": [[148, "skia.Image.isOpaque"]], "istexturebacked() (image method)": [[148, "skia.Image.isTextureBacked"]], "isvalid() (image method)": [[148, "skia.Image.isValid"]], "kallow_cachinghint (image attribute)": [[148, "skia.Image.kAllow_CachingHint"]], "kbc1_rgb8_unorm (image attribute)": [[148, "skia.Image.kBC1_RGB8_UNORM"]], "kbc1_rgba8_unorm (image attribute)": [[148, "skia.Image.kBC1_RGBA8_UNORM"]], "kdisallow_cachinghint (image attribute)": [[148, "skia.Image.kDisallow_CachingHint"]], "ketc2_rgb8_unorm (image attribute)": [[148, "skia.Image.kETC2_RGB8_UNORM"]], "kf16 (image attribute)": [[148, "skia.Image.kF16"]], "klast (image attribute)": [[148, "skia.Image.kLast"]], "knone (image attribute)": [[148, "skia.Image.kNone"]], "kro_legacybitmapmode (image attribute)": [[148, "skia.Image.kRO_LegacyBitmapMode"]], "ku8 (image attribute)": [[148, "skia.Image.kU8"]], "makecolorspace() (image method)": [[148, "skia.Image.makeColorSpace"]], "makecolortypeandcolorspace() (image method)": [[148, "skia.Image.makeColorTypeAndColorSpace"]], "makenontextureimage() (image method)": [[148, "skia.Image.makeNonTextureImage"]], "makerasterimage() (image method)": [[148, "skia.Image.makeRasterImage"]], "makeshader() (image method)": [[148, "skia.Image.makeShader"]], "makesubset() (image method)": [[148, "skia.Image.makeSubset"]], "maketextureimage() (image method)": [[148, "skia.Image.makeTextureImage"]], "makewithfilter() (image method)": [[148, "skia.Image.makeWithFilter"]], "open() (image static method)": [[148, "skia.Image.open"]], "peekpixels() (image method)": [[148, "skia.Image.peekPixels"]], "readpixels() (image method)": [[148, "skia.Image.readPixels"]], "ref() (image method)": [[148, "skia.Image.ref"]], "refcolorspace() (image method)": [[148, "skia.Image.refColorSpace"]], "refencodeddata() (image method)": [[148, "skia.Image.refEncodedData"]], "reinterpretcolorspace() (image method)": [[148, "skia.Image.reinterpretColorSpace"]], "resize() (image method)": [[148, "skia.Image.resize"]], "save() (image method)": [[148, "skia.Image.save"]], "scalepixels() (image method)": [[148, "skia.Image.scalePixels"]], "toarray() (image method)": [[148, "skia.Image.toarray"]], "tobytes() (image method)": [[148, "skia.Image.tobytes"]], "unique() (image method)": [[148, "skia.Image.unique"]], "uniqueid() (image method)": [[148, "skia.Image.uniqueID"]], "unref() (image method)": [[148, "skia.Image.unref"]], "width() (image method)": [[148, "skia.Image.width"]], "withdefaultmipmaps() (image method)": [[148, "skia.Image.withDefaultMipmaps"]], "bitdepth (class in skia.image)": [[149, "skia.Image.BitDepth"]], "__init__() (bitdepth method)": [[149, "skia.Image.BitDepth.__init__"]], "kf16 (bitdepth attribute)": [[149, "skia.Image.BitDepth.kF16"]], "ku8 (bitdepth attribute)": [[149, "skia.Image.BitDepth.kU8"]], "name (bitdepth attribute)": [[149, "skia.Image.BitDepth.name"]], "value (bitdepth attribute)": [[149, "skia.Image.BitDepth.value"]], "cachinghint (class in skia.image)": [[150, "skia.Image.CachingHint"]], "__init__() (cachinghint method)": [[150, "skia.Image.CachingHint.__init__"]], "kallow_cachinghint (cachinghint attribute)": [[150, "skia.Image.CachingHint.kAllow_CachingHint"]], "kdisallow_cachinghint (cachinghint attribute)": [[150, "skia.Image.CachingHint.kDisallow_CachingHint"]], "name (cachinghint attribute)": [[150, "skia.Image.CachingHint.name"]], "value (cachinghint attribute)": [[150, "skia.Image.CachingHint.value"]], "compressiontype (class in skia.image)": [[151, "skia.Image.CompressionType"]], "__init__() (compressiontype method)": [[151, "skia.Image.CompressionType.__init__"]], "kbc1_rgb8_unorm (compressiontype attribute)": [[151, "skia.Image.CompressionType.kBC1_RGB8_UNORM"]], "kbc1_rgba8_unorm (compressiontype attribute)": [[151, "skia.Image.CompressionType.kBC1_RGBA8_UNORM"]], "ketc2_rgb8_unorm (compressiontype attribute)": [[151, "skia.Image.CompressionType.kETC2_RGB8_UNORM"]], "klast (compressiontype attribute)": [[151, "skia.Image.CompressionType.kLast"]], "knone (compressiontype attribute)": [[151, "skia.Image.CompressionType.kNone"]], "name (compressiontype attribute)": [[151, "skia.Image.CompressionType.name"]], "value (compressiontype attribute)": [[151, "skia.Image.CompressionType.value"]], "legacybitmapmode (class in skia.image)": [[152, "skia.Image.LegacyBitmapMode"]], "__init__() (legacybitmapmode method)": [[152, "skia.Image.LegacyBitmapMode.__init__"]], "kro_legacybitmapmode (legacybitmapmode attribute)": [[152, "skia.Image.LegacyBitmapMode.kRO_LegacyBitmapMode"]], "name (legacybitmapmode attribute)": [[152, "skia.Image.LegacyBitmapMode.name"]], "value (legacybitmapmode attribute)": [[152, "skia.Image.LegacyBitmapMode.value"]], "deserialize() (imagefilter static method)": [[153, "skia.ImageFilter.Deserialize"]], "imagefilter (class in skia)": [[153, "skia.ImageFilter"]], "makematrixfilter() (imagefilter static method)": [[153, "skia.ImageFilter.MakeMatrixFilter"]], "__init__() (imagefilter method)": [[153, "skia.ImageFilter.__init__"]], "asacolorfilter() (imagefilter method)": [[153, "skia.ImageFilter.asAColorFilter"]], "ascolorfilter() (imagefilter method)": [[153, "skia.ImageFilter.asColorFilter"]], "cancomputefastbounds() (imagefilter method)": [[153, "skia.ImageFilter.canComputeFastBounds"]], "computefastbounds() (imagefilter method)": [[153, "skia.ImageFilter.computeFastBounds"]], "countinputs() (imagefilter method)": [[153, "skia.ImageFilter.countInputs"]], "filterbounds() (imagefilter method)": [[153, "skia.ImageFilter.filterBounds"]], "getflattenabletype() (imagefilter method)": [[153, "skia.ImageFilter.getFlattenableType"]], "getinput() (imagefilter method)": [[153, "skia.ImageFilter.getInput"]], "gettypename() (imagefilter method)": [[153, "skia.ImageFilter.getTypeName"]], "iscolorfilternode() (imagefilter method)": [[153, "skia.ImageFilter.isColorFilterNode"]], "kcolorfilter_type (imagefilter attribute)": [[153, "skia.ImageFilter.kColorFilter_Type"]], "kdrawlooper_type (imagefilter attribute)": [[153, "skia.ImageFilter.kDrawLooper_Type"]], "kdrawable_type (imagefilter attribute)": [[153, "skia.ImageFilter.kDrawable_Type"]], "kforward_mapdirection (imagefilter attribute)": [[153, "skia.ImageFilter.kForward_MapDirection"]], "kimagefilter_type (imagefilter attribute)": [[153, "skia.ImageFilter.kImageFilter_Type"]], "kmaskfilter_type (imagefilter attribute)": [[153, "skia.ImageFilter.kMaskFilter_Type"]], "kpatheffect_type (imagefilter attribute)": [[153, "skia.ImageFilter.kPathEffect_Type"]], "kpixelref_type (imagefilter attribute)": [[153, "skia.ImageFilter.kPixelRef_Type"]], "kreverse_mapdirection (imagefilter attribute)": [[153, "skia.ImageFilter.kReverse_MapDirection"]], "kshaderbase_type (imagefilter attribute)": [[153, "skia.ImageFilter.kShaderBase_Type"]], "kunused_type (imagefilter attribute)": [[153, "skia.ImageFilter.kUnused_Type"]], "kunused_type2 (imagefilter attribute)": [[153, "skia.ImageFilter.kUnused_Type2"]], "kunused_type3 (imagefilter attribute)": [[153, "skia.ImageFilter.kUnused_Type3"]], "kunused_type4 (imagefilter attribute)": [[153, "skia.ImageFilter.kUnused_Type4"]], "makewithlocalmatrix() (imagefilter method)": [[153, "skia.ImageFilter.makeWithLocalMatrix"]], "ref() (imagefilter method)": [[153, "skia.ImageFilter.ref"]], "serialize() (imagefilter method)": [[153, "skia.ImageFilter.serialize"]], "unique() (imagefilter method)": [[153, "skia.ImageFilter.unique"]], "unref() (imagefilter method)": [[153, "skia.ImageFilter.unref"]], "croprect (class in skia.imagefilter)": [[154, "skia.ImageFilter.CropRect"]], "__init__() (croprect method)": [[154, "skia.ImageFilter.CropRect.__init__"]], "applyto() (croprect method)": [[154, "skia.ImageFilter.CropRect.applyTo"]], "flags() (croprect method)": [[154, "skia.ImageFilter.CropRect.flags"]], "khasall_cropedge (croprect attribute)": [[154, "skia.ImageFilter.CropRect.kHasAll_CropEdge"]], "khasheight_cropedge (croprect attribute)": [[154, "skia.ImageFilter.CropRect.kHasHeight_CropEdge"]], "khasleft_cropedge (croprect attribute)": [[154, "skia.ImageFilter.CropRect.kHasLeft_CropEdge"]], "khastop_cropedge (croprect attribute)": [[154, "skia.ImageFilter.CropRect.kHasTop_CropEdge"]], "khaswidth_cropedge (croprect attribute)": [[154, "skia.ImageFilter.CropRect.kHasWidth_CropEdge"]], "rect() (croprect method)": [[154, "skia.ImageFilter.CropRect.rect"]], "cropedge (class in skia.imagefilter.croprect)": [[155, "skia.ImageFilter.CropRect.CropEdge"]], "__init__() (cropedge method)": [[155, "skia.ImageFilter.CropRect.CropEdge.__init__"]], "khasall_cropedge (cropedge attribute)": [[155, "skia.ImageFilter.CropRect.CropEdge.kHasAll_CropEdge"]], "khasheight_cropedge (cropedge attribute)": [[155, "skia.ImageFilter.CropRect.CropEdge.kHasHeight_CropEdge"]], "khasleft_cropedge (cropedge attribute)": [[155, "skia.ImageFilter.CropRect.CropEdge.kHasLeft_CropEdge"]], "khastop_cropedge (cropedge attribute)": [[155, "skia.ImageFilter.CropRect.CropEdge.kHasTop_CropEdge"]], "khaswidth_cropedge (cropedge attribute)": [[155, "skia.ImageFilter.CropRect.CropEdge.kHasWidth_CropEdge"]], "name (cropedge attribute)": [[155, "skia.ImageFilter.CropRect.CropEdge.name"]], "value (cropedge attribute)": [[155, "skia.ImageFilter.CropRect.CropEdge.value"]], "mapdirection (class in skia.imagefilter)": [[156, "skia.ImageFilter.MapDirection"]], "__init__() (mapdirection method)": [[156, "skia.ImageFilter.MapDirection.__init__"]], "kforward_mapdirection (mapdirection attribute)": [[156, "skia.ImageFilter.MapDirection.kForward_MapDirection"]], "kreverse_mapdirection (mapdirection attribute)": [[156, "skia.ImageFilter.MapDirection.kReverse_MapDirection"]], "name (mapdirection attribute)": [[156, "skia.ImageFilter.MapDirection.name"]], "value (mapdirection attribute)": [[156, "skia.ImageFilter.MapDirection.value"]], "type (class in skia.imagefilter)": [[157, "skia.ImageFilter.Type"]], "alphathreshold() (imagefilters static method)": [[158, "skia.ImageFilters.AlphaThreshold"]], "arithmetic() (imagefilters static method)": [[158, "skia.ImageFilters.Arithmetic"]], "blur() (imagefilters static method)": [[158, "skia.ImageFilters.Blur"]], "colorfilter() (imagefilters static method)": [[158, "skia.ImageFilters.ColorFilter"]], "compose() (imagefilters static method)": [[158, "skia.ImageFilters.Compose"]], "dilate() (imagefilters static method)": [[158, "skia.ImageFilters.Dilate"]], "displacementmap() (imagefilters static method)": [[158, "skia.ImageFilters.DisplacementMap"]], "distantlitdiffuse() (imagefilters static method)": [[158, "skia.ImageFilters.DistantLitDiffuse"]], "distantlitspecular() (imagefilters static method)": [[158, "skia.ImageFilters.DistantLitSpecular"]], "dropshadow() (imagefilters static method)": [[158, "skia.ImageFilters.DropShadow"]], "dropshadowonly() (imagefilters static method)": [[158, "skia.ImageFilters.DropShadowOnly"]], "erode() (imagefilters static method)": [[158, "skia.ImageFilters.Erode"]], "image() (imagefilters static method)": [[158, "skia.ImageFilters.Image"]], "imagefilters (class in skia)": [[158, "skia.ImageFilters"]], "magnifier() (imagefilters static method)": [[158, "skia.ImageFilters.Magnifier"]], "matrixconvolution() (imagefilters static method)": [[158, "skia.ImageFilters.MatrixConvolution"]], "matrixtransform() (imagefilters static method)": [[158, "skia.ImageFilters.MatrixTransform"]], "merge() (imagefilters static method)": [[158, "skia.ImageFilters.Merge"]], "offset() (imagefilters static method)": [[158, "skia.ImageFilters.Offset"]], "paint() (imagefilters static method)": [[158, "skia.ImageFilters.Paint"]], "picture() (imagefilters static method)": [[158, "skia.ImageFilters.Picture"]], "pointlitdiffuse() (imagefilters static method)": [[158, "skia.ImageFilters.PointLitDiffuse"]], "pointlitspecular() (imagefilters static method)": [[158, "skia.ImageFilters.PointLitSpecular"]], "spotlitdiffuse() (imagefilters static method)": [[158, "skia.ImageFilters.SpotLitDiffuse"]], "spotlitspecular() (imagefilters static method)": [[158, "skia.ImageFilters.SpotLitSpecular"]], "tile() (imagefilters static method)": [[158, "skia.ImageFilters.Tile"]], "xfermode() (imagefilters static method)": [[158, "skia.ImageFilters.Xfermode"]], "__init__() (imagefilters method)": [[158, "skia.ImageFilters.__init__"]], "bytesizeoverflowed() (imageinfo static method)": [[159, "skia.ImageInfo.ByteSizeOverflowed"]], "imageinfo (class in skia)": [[159, "skia.ImageInfo"]], "make() (imageinfo static method)": [[159, "skia.ImageInfo.Make"]], "makea8() (imageinfo static method)": [[159, "skia.ImageInfo.MakeA8"]], "maken32() (imageinfo static method)": [[159, "skia.ImageInfo.MakeN32"]], "maken32premul() (imageinfo static method)": [[159, "skia.ImageInfo.MakeN32Premul"]], "makes32() (imageinfo static method)": [[159, "skia.ImageInfo.MakeS32"]], "makeunknown() (imageinfo static method)": [[159, "skia.ImageInfo.MakeUnknown"]], "__init__() (imageinfo method)": [[159, "skia.ImageInfo.__init__"]], "alphatype() (imageinfo method)": [[159, "skia.ImageInfo.alphaType"]], "bounds() (imageinfo method)": [[159, "skia.ImageInfo.bounds"]], "bytesperpixel() (imageinfo method)": [[159, "skia.ImageInfo.bytesPerPixel"]], "colorinfo() (imageinfo method)": [[159, "skia.ImageInfo.colorInfo"]], "colorspace() (imageinfo method)": [[159, "skia.ImageInfo.colorSpace"]], "colortype() (imageinfo method)": [[159, "skia.ImageInfo.colorType"]], "computebytesize() (imageinfo method)": [[159, "skia.ImageInfo.computeByteSize"]], "computeminbytesize() (imageinfo method)": [[159, "skia.ImageInfo.computeMinByteSize"]], "computeoffset() (imageinfo method)": [[159, "skia.ImageInfo.computeOffset"]], "dimensions() (imageinfo method)": [[159, "skia.ImageInfo.dimensions"]], "gammaclosetosrgb() (imageinfo method)": [[159, "skia.ImageInfo.gammaCloseToSRGB"]], "height() (imageinfo method)": [[159, "skia.ImageInfo.height"]], "isempty() (imageinfo method)": [[159, "skia.ImageInfo.isEmpty"]], "isopaque() (imageinfo method)": [[159, "skia.ImageInfo.isOpaque"]], "makealphatype() (imageinfo method)": [[159, "skia.ImageInfo.makeAlphaType"]], "makecolorspace() (imageinfo method)": [[159, "skia.ImageInfo.makeColorSpace"]], "makecolortype() (imageinfo method)": [[159, "skia.ImageInfo.makeColorType"]], "makedimensions() (imageinfo method)": [[159, "skia.ImageInfo.makeDimensions"]], "makewh() (imageinfo method)": [[159, "skia.ImageInfo.makeWH"]], "minrowbytes() (imageinfo method)": [[159, "skia.ImageInfo.minRowBytes"]], "minrowbytes64() (imageinfo method)": [[159, "skia.ImageInfo.minRowBytes64"]], "refcolorspace() (imageinfo method)": [[159, "skia.ImageInfo.refColorSpace"]], "reset() (imageinfo method)": [[159, "skia.ImageInfo.reset"]], "shiftperpixel() (imageinfo method)": [[159, "skia.ImageInfo.shiftPerPixel"]], "validrowbytes() (imageinfo method)": [[159, "skia.ImageInfo.validRowBytes"]], "width() (imageinfo method)": [[159, "skia.ImageInfo.width"]], "lightingimagefilter (class in skia)": [[160, "skia.LightingImageFilter"]], "makedistantlitdiffuse() (lightingimagefilter static method)": [[160, "skia.LightingImageFilter.MakeDistantLitDiffuse"]], "makedistantlitspecular() (lightingimagefilter static method)": [[160, "skia.LightingImageFilter.MakeDistantLitSpecular"]], "makepointlitdiffuse() (lightingimagefilter static method)": [[160, "skia.LightingImageFilter.MakePointLitDiffuse"]], "makepointlitspecular() (lightingimagefilter static method)": [[160, "skia.LightingImageFilter.MakePointLitSpecular"]], "makespotlitdiffuse() (lightingimagefilter static method)": [[160, "skia.LightingImageFilter.MakeSpotLitDiffuse"]], "makespotlitspecular() (lightingimagefilter static method)": [[160, "skia.LightingImageFilter.MakeSpotLitSpecular"]], "__init__() (lightingimagefilter method)": [[160, "skia.LightingImageFilter.__init__"]], "deserialize() (line2dpatheffect static method)": [[161, "skia.Line2DPathEffect.Deserialize"]], "getflattenabletype() (line2dpatheffect static method)": [[161, "skia.Line2DPathEffect.GetFlattenableType"]], "line2dpatheffect (class in skia)": [[161, "skia.Line2DPathEffect"]], "make() (line2dpatheffect static method)": [[161, "skia.Line2DPathEffect.Make"]], "makecompose() (line2dpatheffect static method)": [[161, "skia.Line2DPathEffect.MakeCompose"]], "makesum() (line2dpatheffect static method)": [[161, "skia.Line2DPathEffect.MakeSum"]], "registerflattenables() (line2dpatheffect static method)": [[161, "skia.Line2DPathEffect.RegisterFlattenables"]], "__init__() (line2dpatheffect method)": [[161, "skia.Line2DPathEffect.__init__"]], "asadash() (line2dpatheffect method)": [[161, "skia.Line2DPathEffect.asADash"]], "aspoints() (line2dpatheffect method)": [[161, "skia.Line2DPathEffect.asPoints"]], "computefastbounds() (line2dpatheffect method)": [[161, "skia.Line2DPathEffect.computeFastBounds"]], "filterpath() (line2dpatheffect method)": [[161, "skia.Line2DPathEffect.filterPath"]], "getflattenabletype() (line2dpatheffect method)": [[161, "skia.Line2DPathEffect.getFlattenableType"]], "gettypename() (line2dpatheffect method)": [[161, "skia.Line2DPathEffect.getTypeName"]], "kcolorfilter_type (line2dpatheffect attribute)": [[161, "skia.Line2DPathEffect.kColorFilter_Type"]], "kdash_dashtype (line2dpatheffect attribute)": [[161, "skia.Line2DPathEffect.kDash_DashType"]], "kdrawlooper_type (line2dpatheffect attribute)": [[161, "skia.Line2DPathEffect.kDrawLooper_Type"]], "kdrawable_type (line2dpatheffect attribute)": [[161, "skia.Line2DPathEffect.kDrawable_Type"]], "kimagefilter_type (line2dpatheffect attribute)": [[161, "skia.Line2DPathEffect.kImageFilter_Type"]], "kmaskfilter_type (line2dpatheffect attribute)": [[161, "skia.Line2DPathEffect.kMaskFilter_Type"]], "knone_dashtype (line2dpatheffect attribute)": [[161, "skia.Line2DPathEffect.kNone_DashType"]], "kpatheffect_type (line2dpatheffect attribute)": [[161, "skia.Line2DPathEffect.kPathEffect_Type"]], "kpixelref_type (line2dpatheffect attribute)": [[161, "skia.Line2DPathEffect.kPixelRef_Type"]], "kshaderbase_type (line2dpatheffect attribute)": [[161, "skia.Line2DPathEffect.kShaderBase_Type"]], "kunused_type (line2dpatheffect attribute)": [[161, "skia.Line2DPathEffect.kUnused_Type"]], "kunused_type2 (line2dpatheffect attribute)": [[161, "skia.Line2DPathEffect.kUnused_Type2"]], "kunused_type3 (line2dpatheffect attribute)": [[161, "skia.Line2DPathEffect.kUnused_Type3"]], "kunused_type4 (line2dpatheffect attribute)": [[161, "skia.Line2DPathEffect.kUnused_Type4"]], "ref() (line2dpatheffect method)": [[161, "skia.Line2DPathEffect.ref"]], "serialize() (line2dpatheffect method)": [[161, "skia.Line2DPathEffect.serialize"]], "unique() (line2dpatheffect method)": [[161, "skia.Line2DPathEffect.unique"]], "unref() (line2dpatheffect method)": [[161, "skia.Line2DPathEffect.unref"]], "dashinfo (class in skia.line2dpatheffect)": [[162, "skia.Line2DPathEffect.DashInfo"]], "dashtype (class in skia.line2dpatheffect)": [[163, "skia.Line2DPathEffect.DashType"]], "pointdata (class in skia.line2dpatheffect)": [[164, "skia.Line2DPathEffect.PointData"]], "pointflags (class in skia.line2dpatheffect.pointdata)": [[165, "skia.Line2DPathEffect.PointData.PointFlags"]], "type (class in skia.line2dpatheffect)": [[166, "skia.Line2DPathEffect.Type"]], "lumacolorfilter (class in skia)": [[167, "skia.LumaColorFilter"]], "make() (lumacolorfilter static method)": [[167, "skia.LumaColorFilter.Make"]], "__init__() (lumacolorfilter method)": [[167, "skia.LumaColorFilter.__init__"]], "m44 (class in skia)": [[168, "skia.M44"]], "__init__() (m44 method)": [[168, "skia.M44.__init__"]], "magnifierimagefilter (class in skia)": [[169, "skia.MagnifierImageFilter"]], "make() (magnifierimagefilter static method)": [[169, "skia.MagnifierImageFilter.Make"]], "__init__() (magnifierimagefilter method)": [[169, "skia.MagnifierImageFilter.__init__"]], "deserialize() (maskfilter static method)": [[170, "skia.MaskFilter.Deserialize"]], "makeblur() (maskfilter static method)": [[170, "skia.MaskFilter.MakeBlur"]], "maskfilter (class in skia)": [[170, "skia.MaskFilter"]], "__init__() (maskfilter method)": [[170, "skia.MaskFilter.__init__"]], "getflattenabletype() (maskfilter method)": [[170, "skia.MaskFilter.getFlattenableType"]], "gettypename() (maskfilter method)": [[170, "skia.MaskFilter.getTypeName"]], "kcolorfilter_type (maskfilter attribute)": [[170, "skia.MaskFilter.kColorFilter_Type"]], "kdrawlooper_type (maskfilter attribute)": [[170, "skia.MaskFilter.kDrawLooper_Type"]], "kdrawable_type (maskfilter attribute)": [[170, "skia.MaskFilter.kDrawable_Type"]], "kimagefilter_type (maskfilter attribute)": [[170, "skia.MaskFilter.kImageFilter_Type"]], "kmaskfilter_type (maskfilter attribute)": [[170, "skia.MaskFilter.kMaskFilter_Type"]], "kpatheffect_type (maskfilter attribute)": [[170, "skia.MaskFilter.kPathEffect_Type"]], "kpixelref_type (maskfilter attribute)": [[170, "skia.MaskFilter.kPixelRef_Type"]], "kshaderbase_type (maskfilter attribute)": [[170, "skia.MaskFilter.kShaderBase_Type"]], "kunused_type (maskfilter attribute)": [[170, "skia.MaskFilter.kUnused_Type"]], "kunused_type2 (maskfilter attribute)": [[170, "skia.MaskFilter.kUnused_Type2"]], "kunused_type3 (maskfilter attribute)": [[170, "skia.MaskFilter.kUnused_Type3"]], "kunused_type4 (maskfilter attribute)": [[170, "skia.MaskFilter.kUnused_Type4"]], "ref() (maskfilter method)": [[170, "skia.MaskFilter.ref"]], "serialize() (maskfilter method)": [[170, "skia.MaskFilter.serialize"]], "unique() (maskfilter method)": [[170, "skia.MaskFilter.unique"]], "unref() (maskfilter method)": [[170, "skia.MaskFilter.unref"]], "type (class in skia.maskfilter)": [[171, "skia.MaskFilter.Type"]], "concat() (matrix static method)": [[172, "skia.Matrix.Concat"]], "i() (matrix static method)": [[172, "skia.Matrix.I"]], "invalidmatrix() (matrix static method)": [[172, "skia.Matrix.InvalidMatrix"]], "makeall() (matrix static method)": [[172, "skia.Matrix.MakeAll"]], "makerecttorect() (matrix static method)": [[172, "skia.Matrix.MakeRectToRect"]], "matrix (class in skia)": [[172, "skia.Matrix"]], "rotatedeg() (matrix static method)": [[172, "skia.Matrix.RotateDeg"]], "rotaterad() (matrix static method)": [[172, "skia.Matrix.RotateRad"]], "scale() (matrix static method)": [[172, "skia.Matrix.Scale"]], "setaffineidentity() (matrix static method)": [[172, "skia.Matrix.SetAffineIdentity"]], "translate() (matrix static method)": [[172, "skia.Matrix.Translate"]], "__init__() (matrix method)": [[172, "skia.Matrix.__init__"]], "asaffine() (matrix method)": [[172, "skia.Matrix.asAffine"]], "decomposescale() (matrix method)": [[172, "skia.Matrix.decomposeScale"]], "dirtymatrixtypecache() (matrix method)": [[172, "skia.Matrix.dirtyMatrixTypeCache"]], "dump() (matrix method)": [[172, "skia.Matrix.dump"]], "get() (matrix method)": [[172, "skia.Matrix.get"]], "get9() (matrix method)": [[172, "skia.Matrix.get9"]], "getmaxscale() (matrix method)": [[172, "skia.Matrix.getMaxScale"]], "getminmaxscales() (matrix method)": [[172, "skia.Matrix.getMinMaxScales"]], "getminscale() (matrix method)": [[172, "skia.Matrix.getMinScale"]], "getperspx() (matrix method)": [[172, "skia.Matrix.getPerspX"]], "getperspy() (matrix method)": [[172, "skia.Matrix.getPerspY"]], "getscalex() (matrix method)": [[172, "skia.Matrix.getScaleX"]], "getscaley() (matrix method)": [[172, "skia.Matrix.getScaleY"]], "getskewx() (matrix method)": [[172, "skia.Matrix.getSkewX"]], "getskewy() (matrix method)": [[172, "skia.Matrix.getSkewY"]], "gettranslatex() (matrix method)": [[172, "skia.Matrix.getTranslateX"]], "gettranslatey() (matrix method)": [[172, "skia.Matrix.getTranslateY"]], "gettype() (matrix method)": [[172, "skia.Matrix.getType"]], "hasperspective() (matrix method)": [[172, "skia.Matrix.hasPerspective"]], "invert() (matrix method)": [[172, "skia.Matrix.invert"]], "isfinite() (matrix method)": [[172, "skia.Matrix.isFinite"]], "isidentity() (matrix method)": [[172, "skia.Matrix.isIdentity"]], "isscaletranslate() (matrix method)": [[172, "skia.Matrix.isScaleTranslate"]], "issimilarity() (matrix method)": [[172, "skia.Matrix.isSimilarity"]], "istranslate() (matrix method)": [[172, "skia.Matrix.isTranslate"]], "kascalex (matrix attribute)": [[172, "skia.Matrix.kAScaleX"]], "kascaley (matrix attribute)": [[172, "skia.Matrix.kAScaleY"]], "kaskewx (matrix attribute)": [[172, "skia.Matrix.kASkewX"]], "kaskewy (matrix attribute)": [[172, "skia.Matrix.kASkewY"]], "katransx (matrix attribute)": [[172, "skia.Matrix.kATransX"]], "katransy (matrix attribute)": [[172, "skia.Matrix.kATransY"]], "kaffine_mask (matrix attribute)": [[172, "skia.Matrix.kAffine_Mask"]], "kcenter_scaletofit (matrix attribute)": [[172, "skia.Matrix.kCenter_ScaleToFit"]], "kend_scaletofit (matrix attribute)": [[172, "skia.Matrix.kEnd_ScaleToFit"]], "kfill_scaletofit (matrix attribute)": [[172, "skia.Matrix.kFill_ScaleToFit"]], "kidentity_mask (matrix attribute)": [[172, "skia.Matrix.kIdentity_Mask"]], "kmpersp0 (matrix attribute)": [[172, "skia.Matrix.kMPersp0"]], "kmpersp1 (matrix attribute)": [[172, "skia.Matrix.kMPersp1"]], "kmpersp2 (matrix attribute)": [[172, "skia.Matrix.kMPersp2"]], "kmscalex (matrix attribute)": [[172, "skia.Matrix.kMScaleX"]], "kmscaley (matrix attribute)": [[172, "skia.Matrix.kMScaleY"]], "kmskewx (matrix attribute)": [[172, "skia.Matrix.kMSkewX"]], "kmskewy (matrix attribute)": [[172, "skia.Matrix.kMSkewY"]], "kmtransx (matrix attribute)": [[172, "skia.Matrix.kMTransX"]], "kmtransy (matrix attribute)": [[172, "skia.Matrix.kMTransY"]], "kperspective_mask (matrix attribute)": [[172, "skia.Matrix.kPerspective_Mask"]], "kscale_mask (matrix attribute)": [[172, "skia.Matrix.kScale_Mask"]], "kstart_scaletofit (matrix attribute)": [[172, "skia.Matrix.kStart_ScaleToFit"]], "ktranslate_mask (matrix attribute)": [[172, "skia.Matrix.kTranslate_Mask"]], "maphomogeneouspoints() (matrix method)": [[172, "skia.Matrix.mapHomogeneousPoints"]], "mappoints() (matrix method)": [[172, "skia.Matrix.mapPoints"]], "mapradius() (matrix method)": [[172, "skia.Matrix.mapRadius"]], "maprect() (matrix method)": [[172, "skia.Matrix.mapRect"]], "maprectscaletranslate() (matrix method)": [[172, "skia.Matrix.mapRectScaleTranslate"]], "maprecttoquad() (matrix method)": [[172, "skia.Matrix.mapRectToQuad"]], "mapvector() (matrix method)": [[172, "skia.Matrix.mapVector"]], "mapvectors() (matrix method)": [[172, "skia.Matrix.mapVectors"]], "mapxy() (matrix method)": [[172, "skia.Matrix.mapXY"]], "normalizeperspective() (matrix method)": [[172, "skia.Matrix.normalizePerspective"]], "postconcat() (matrix method)": [[172, "skia.Matrix.postConcat"]], "postrotate() (matrix method)": [[172, "skia.Matrix.postRotate"]], "postscale() (matrix method)": [[172, "skia.Matrix.postScale"]], "postskew() (matrix method)": [[172, "skia.Matrix.postSkew"]], "posttranslate() (matrix method)": [[172, "skia.Matrix.postTranslate"]], "preconcat() (matrix method)": [[172, "skia.Matrix.preConcat"]], "prerotate() (matrix method)": [[172, "skia.Matrix.preRotate"]], "prescale() (matrix method)": [[172, "skia.Matrix.preScale"]], "preskew() (matrix method)": [[172, "skia.Matrix.preSkew"]], "pretranslate() (matrix method)": [[172, "skia.Matrix.preTranslate"]], "preservesaxisalignment() (matrix method)": [[172, "skia.Matrix.preservesAxisAlignment"]], "preservesrightangles() (matrix method)": [[172, "skia.Matrix.preservesRightAngles"]], "rc() (matrix method)": [[172, "skia.Matrix.rc"]], "rectstaysrect() (matrix method)": [[172, "skia.Matrix.rectStaysRect"]], "reset() (matrix method)": [[172, "skia.Matrix.reset"]], "set() (matrix method)": [[172, "skia.Matrix.set"]], "set9() (matrix method)": [[172, "skia.Matrix.set9"]], "setaffine() (matrix method)": [[172, "skia.Matrix.setAffine"]], "setall() (matrix method)": [[172, "skia.Matrix.setAll"]], "setconcat() (matrix method)": [[172, "skia.Matrix.setConcat"]], "setidentity() (matrix method)": [[172, "skia.Matrix.setIdentity"]], "setperspx() (matrix method)": [[172, "skia.Matrix.setPerspX"]], "setperspy() (matrix method)": [[172, "skia.Matrix.setPerspY"]], "setpolytopoly() (matrix method)": [[172, "skia.Matrix.setPolyToPoly"]], "setrsxform() (matrix method)": [[172, "skia.Matrix.setRSXform"]], "setrecttorect() (matrix method)": [[172, "skia.Matrix.setRectToRect"]], "setrotate() (matrix method)": [[172, "skia.Matrix.setRotate"]], "setscale() (matrix method)": [[172, "skia.Matrix.setScale"]], "setscaletranslate() (matrix method)": [[172, "skia.Matrix.setScaleTranslate"]], "setscalex() (matrix method)": [[172, "skia.Matrix.setScaleX"]], "setscaley() (matrix method)": [[172, "skia.Matrix.setScaleY"]], "setsincos() (matrix method)": [[172, "skia.Matrix.setSinCos"]], "setskew() (matrix method)": [[172, "skia.Matrix.setSkew"]], "setskewx() (matrix method)": [[172, "skia.Matrix.setSkewX"]], "setskewy() (matrix method)": [[172, "skia.Matrix.setSkewY"]], "settranslate() (matrix method)": [[172, "skia.Matrix.setTranslate"]], "settranslatex() (matrix method)": [[172, "skia.Matrix.setTranslateX"]], "settranslatey() (matrix method)": [[172, "skia.Matrix.setTranslateY"]], "scaletofit (class in skia.matrix)": [[173, "skia.Matrix.ScaleToFit"]], "__init__() (scaletofit method)": [[173, "skia.Matrix.ScaleToFit.__init__"]], "kcenter_scaletofit (scaletofit attribute)": [[173, "skia.Matrix.ScaleToFit.kCenter_ScaleToFit"]], "kend_scaletofit (scaletofit attribute)": [[173, "skia.Matrix.ScaleToFit.kEnd_ScaleToFit"]], "kfill_scaletofit (scaletofit attribute)": [[173, "skia.Matrix.ScaleToFit.kFill_ScaleToFit"]], "kstart_scaletofit (scaletofit attribute)": [[173, "skia.Matrix.ScaleToFit.kStart_ScaleToFit"]], "name (scaletofit attribute)": [[173, "skia.Matrix.ScaleToFit.name"]], "value (scaletofit attribute)": [[173, "skia.Matrix.ScaleToFit.value"]], "typemask (class in skia.matrix)": [[174, "skia.Matrix.TypeMask"]], "__init__() (typemask method)": [[174, "skia.Matrix.TypeMask.__init__"]], "kaffine_mask (typemask attribute)": [[174, "skia.Matrix.TypeMask.kAffine_Mask"]], "kidentity_mask (typemask attribute)": [[174, "skia.Matrix.TypeMask.kIdentity_Mask"]], "kperspective_mask (typemask attribute)": [[174, "skia.Matrix.TypeMask.kPerspective_Mask"]], "kscale_mask (typemask attribute)": [[174, "skia.Matrix.TypeMask.kScale_Mask"]], "ktranslate_mask (typemask attribute)": [[174, "skia.Matrix.TypeMask.kTranslate_Mask"]], "name (typemask attribute)": [[174, "skia.Matrix.TypeMask.name"]], "value (typemask attribute)": [[174, "skia.Matrix.TypeMask.value"]], "make() (matrixpatheffect static method)": [[175, "skia.MatrixPathEffect.Make"]], "maketranslate() (matrixpatheffect static method)": [[175, "skia.MatrixPathEffect.MakeTranslate"]], "matrixpatheffect (class in skia)": [[175, "skia.MatrixPathEffect"]], "__init__() (matrixpatheffect method)": [[175, "skia.MatrixPathEffect.__init__"]], "make() (memorystream static method)": [[176, "skia.MemoryStream.Make"]], "makecopy() (memorystream static method)": [[176, "skia.MemoryStream.MakeCopy"]], "makedirect() (memorystream static method)": [[176, "skia.MemoryStream.MakeDirect"]], "makefromfile() (memorystream static method)": [[176, "skia.MemoryStream.MakeFromFile"]], "memorystream (class in skia)": [[176, "skia.MemoryStream"]], "__init__() (memorystream method)": [[176, "skia.MemoryStream.__init__"]], "asdata() (memorystream method)": [[176, "skia.MemoryStream.asData"]], "duplicate() (memorystream method)": [[176, "skia.MemoryStream.duplicate"]], "fork() (memorystream method)": [[176, "skia.MemoryStream.fork"]], "getatpos() (memorystream method)": [[176, "skia.MemoryStream.getAtPos"]], "getlength() (memorystream method)": [[176, "skia.MemoryStream.getLength"]], "getmemorybase() (memorystream method)": [[176, "skia.MemoryStream.getMemoryBase"]], "getposition() (memorystream method)": [[176, "skia.MemoryStream.getPosition"]], "haslength() (memorystream method)": [[176, "skia.MemoryStream.hasLength"]], "hasposition() (memorystream method)": [[176, "skia.MemoryStream.hasPosition"]], "isatend() (memorystream method)": [[176, "skia.MemoryStream.isAtEnd"]], "move() (memorystream method)": [[176, "skia.MemoryStream.move"]], "peek() (memorystream method)": [[176, "skia.MemoryStream.peek"]], "read() (memorystream method)": [[176, "skia.MemoryStream.read"]], "readbool() (memorystream method)": [[176, "skia.MemoryStream.readBool"]], "readpackeduint() (memorystream method)": [[176, "skia.MemoryStream.readPackedUInt"]], "reads16() (memorystream method)": [[176, "skia.MemoryStream.readS16"]], "reads32() (memorystream method)": [[176, "skia.MemoryStream.readS32"]], "reads8() (memorystream method)": [[176, "skia.MemoryStream.readS8"]], "readscalar() (memorystream method)": [[176, "skia.MemoryStream.readScalar"]], "readu16() (memorystream method)": [[176, "skia.MemoryStream.readU16"]], "readu32() (memorystream method)": [[176, "skia.MemoryStream.readU32"]], "readu8() (memorystream method)": [[176, "skia.MemoryStream.readU8"]], "rewind() (memorystream method)": [[176, "skia.MemoryStream.rewind"]], "seek() (memorystream method)": [[176, "skia.MemoryStream.seek"]], "setdata() (memorystream method)": [[176, "skia.MemoryStream.setData"]], "setmemory() (memorystream method)": [[176, "skia.MemoryStream.setMemory"]], "skip() (memorystream method)": [[176, "skia.MemoryStream.skip"]], "skiptoalign4() (memorystream method)": [[176, "skia.MemoryStream.skipToAlign4"]], "make() (mergepatheffect static method)": [[177, "skia.MergePathEffect.Make"]], "mergepatheffect (class in skia)": [[177, "skia.MergePathEffect"]], "__init__() (mergepatheffect method)": [[177, "skia.MergePathEffect.__init__"]], "mipmapbuilder (class in skia)": [[178, "skia.MipmapBuilder"]], "__init__() (mipmapbuilder method)": [[178, "skia.MipmapBuilder.__init__"]], "attachto() (mipmapbuilder method)": [[178, "skia.MipmapBuilder.attachTo"]], "countlevels() (mipmapbuilder method)": [[178, "skia.MipmapBuilder.countLevels"]], "level() (mipmapbuilder method)": [[178, "skia.MipmapBuilder.level"]], "nullwstream (class in skia)": [[179, "skia.NullWStream"]], "sizeofpackeduint() (nullwstream static method)": [[179, "skia.NullWStream.SizeOfPackedUInt"]], "__init__() (nullwstream method)": [[179, "skia.NullWStream.__init__"]], "byteswritten() (nullwstream method)": [[179, "skia.NullWStream.bytesWritten"]], "flush() (nullwstream method)": [[179, "skia.NullWStream.flush"]], "newline() (nullwstream method)": [[179, "skia.NullWStream.newline"]], "write() (nullwstream method)": [[179, "skia.NullWStream.write"]], "write16() (nullwstream method)": [[179, "skia.NullWStream.write16"]], "write32() (nullwstream method)": [[179, "skia.NullWStream.write32"]], "write8() (nullwstream method)": [[179, "skia.NullWStream.write8"]], "writebigdecastext() (nullwstream method)": [[179, "skia.NullWStream.writeBigDecAsText"]], "writebool() (nullwstream method)": [[179, "skia.NullWStream.writeBool"]], "writedecastext() (nullwstream method)": [[179, "skia.NullWStream.writeDecAsText"]], "writehexastext() (nullwstream method)": [[179, "skia.NullWStream.writeHexAsText"]], "writepackeduint() (nullwstream method)": [[179, "skia.NullWStream.writePackedUInt"]], "writescalar() (nullwstream method)": [[179, "skia.NullWStream.writeScalar"]], "writescalarastext() (nullwstream method)": [[179, "skia.NullWStream.writeScalarAsText"]], "writestream() (nullwstream method)": [[179, "skia.NullWStream.writeStream"]], "writetext() (nullwstream method)": [[179, "skia.NullWStream.writeText"]], "make() (offsetimagefilter static method)": [[180, "skia.OffsetImageFilter.Make"]], "offsetimagefilter (class in skia)": [[180, "skia.OffsetImageFilter"]], "__init__() (offsetimagefilter method)": [[180, "skia.OffsetImageFilter.__init__"]], "opbuilder (class in skia)": [[181, "skia.OpBuilder"]], "__init__() (opbuilder method)": [[181, "skia.OpBuilder.__init__"]], "add() (opbuilder method)": [[181, "skia.OpBuilder.add"]], "resolve() (opbuilder method)": [[181, "skia.OpBuilder.resolve"]], "makewithcolors() (overdrawcolorfilter static method)": [[182, "skia.OverdrawColorFilter.MakeWithColors"]], "overdrawcolorfilter (class in skia)": [[182, "skia.OverdrawColorFilter"]], "__init__() (overdrawcolorfilter method)": [[182, "skia.OverdrawColorFilter.__init__"]], "knumcolors (overdrawcolorfilter attribute)": [[182, "skia.OverdrawColorFilter.kNumColors"]], "makedocument() (pdf static method)": [[183, "skia.PDF.MakeDocument"]], "pdf (class in skia)": [[183, "skia.PDF"]], "setnodeid() (pdf static method)": [[183, "skia.PDF.SetNodeId"]], "__init__() (pdf method)": [[183, "skia.PDF.__init__"]], "kannot (pdf attribute)": [[183, "skia.PDF.kAnnot"]], "kart (pdf attribute)": [[183, "skia.PDF.kArt"]], "kbibentry (pdf attribute)": [[183, "skia.PDF.kBibEntry"]], "kblockquote (pdf attribute)": [[183, "skia.PDF.kBlockQuote"]], "kcaption (pdf attribute)": [[183, "skia.PDF.kCaption"]], "kcode (pdf attribute)": [[183, "skia.PDF.kCode"]], "kdiv (pdf attribute)": [[183, "skia.PDF.kDiv"]], "kdocument (pdf attribute)": [[183, "skia.PDF.kDocument"]], "kfigure (pdf attribute)": [[183, "skia.PDF.kFigure"]], "kform (pdf attribute)": [[183, "skia.PDF.kForm"]], "kformula (pdf attribute)": [[183, "skia.PDF.kFormula"]], "kh (pdf attribute)": [[183, "skia.PDF.kH"]], "kh1 (pdf attribute)": [[183, "skia.PDF.kH1"]], "kh2 (pdf attribute)": [[183, "skia.PDF.kH2"]], "kh3 (pdf attribute)": [[183, "skia.PDF.kH3"]], "kh4 (pdf attribute)": [[183, "skia.PDF.kH4"]], "kh5 (pdf attribute)": [[183, "skia.PDF.kH5"]], "kh6 (pdf attribute)": [[183, "skia.PDF.kH6"]], "kindex (pdf attribute)": [[183, "skia.PDF.kIndex"]], "kl (pdf attribute)": [[183, "skia.PDF.kL"]], "klbody (pdf attribute)": [[183, "skia.PDF.kLBody"]], "kli (pdf attribute)": [[183, "skia.PDF.kLI"]], "klbl (pdf attribute)": [[183, "skia.PDF.kLbl"]], "klink (pdf attribute)": [[183, "skia.PDF.kLink"]], "knonstruct (pdf attribute)": [[183, "skia.PDF.kNonStruct"]], "knote (pdf attribute)": [[183, "skia.PDF.kNote"]], "kp (pdf attribute)": [[183, "skia.PDF.kP"]], "kpart (pdf attribute)": [[183, "skia.PDF.kPart"]], "kprivate (pdf attribute)": [[183, "skia.PDF.kPrivate"]], "kquote (pdf attribute)": [[183, "skia.PDF.kQuote"]], "krb (pdf attribute)": [[183, "skia.PDF.kRB"]], "krp (pdf attribute)": [[183, "skia.PDF.kRP"]], "krt (pdf attribute)": [[183, "skia.PDF.kRT"]], "kreference (pdf attribute)": [[183, "skia.PDF.kReference"]], "kruby (pdf attribute)": [[183, "skia.PDF.kRuby"]], "ksect (pdf attribute)": [[183, "skia.PDF.kSect"]], "kspan (pdf attribute)": [[183, "skia.PDF.kSpan"]], "ktbody (pdf attribute)": [[183, "skia.PDF.kTBody"]], "ktd (pdf attribute)": [[183, "skia.PDF.kTD"]], "ktfoot (pdf attribute)": [[183, "skia.PDF.kTFoot"]], "kth (pdf attribute)": [[183, "skia.PDF.kTH"]], "kthead (pdf attribute)": [[183, "skia.PDF.kTHead"]], "ktoc (pdf attribute)": [[183, "skia.PDF.kTOC"]], "ktoci (pdf attribute)": [[183, "skia.PDF.kTOCI"]], "ktr (pdf attribute)": [[183, "skia.PDF.kTR"]], "ktable (pdf attribute)": [[183, "skia.PDF.kTable"]], "kwp (pdf attribute)": [[183, "skia.PDF.kWP"]], "kwt (pdf attribute)": [[183, "skia.PDF.kWT"]], "kwarichu (pdf attribute)": [[183, "skia.PDF.kWarichu"]], "attributelist (class in skia.pdf)": [[184, "skia.PDF.AttributeList"]], "__init__() (attributelist method)": [[184, "skia.PDF.AttributeList.__init__"]], "appendfloat() (attributelist method)": [[184, "skia.PDF.AttributeList.appendFloat"]], "appendfloatarray() (attributelist method)": [[184, "skia.PDF.AttributeList.appendFloatArray"]], "appendint() (attributelist method)": [[184, "skia.PDF.AttributeList.appendInt"]], "appendstring() (attributelist method)": [[184, "skia.PDF.AttributeList.appendString"]], "appendstringarray() (attributelist method)": [[184, "skia.PDF.AttributeList.appendStringArray"]], "documentstructuretype (class in skia.pdf)": [[185, "skia.PDF.DocumentStructureType"]], "__init__() (documentstructuretype method)": [[185, "skia.PDF.DocumentStructureType.__init__"]], "kannot (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kAnnot"]], "kart (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kArt"]], "kbibentry (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kBibEntry"]], "kblockquote (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kBlockQuote"]], "kcaption (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kCaption"]], "kcode (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kCode"]], "kdiv (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kDiv"]], "kdocument (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kDocument"]], "kfigure (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kFigure"]], "kform (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kForm"]], "kformula (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kFormula"]], "kh (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kH"]], "kh1 (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kH1"]], "kh2 (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kH2"]], "kh3 (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kH3"]], "kh4 (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kH4"]], "kh5 (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kH5"]], "kh6 (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kH6"]], "kindex (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kIndex"]], "kl (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kL"]], "klbody (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kLBody"]], "kli (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kLI"]], "klbl (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kLbl"]], "klink (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kLink"]], "knonstruct (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kNonStruct"]], "knote (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kNote"]], "kp (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kP"]], "kpart (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kPart"]], "kprivate (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kPrivate"]], "kquote (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kQuote"]], "krb (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kRB"]], "krp (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kRP"]], "krt (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kRT"]], "kreference (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kReference"]], "kruby (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kRuby"]], "ksect (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kSect"]], "kspan (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kSpan"]], "ktbody (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kTBody"]], "ktd (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kTD"]], "ktfoot (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kTFoot"]], "kth (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kTH"]], "kthead (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kTHead"]], "ktoc (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kTOC"]], "ktoci (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kTOCI"]], "ktr (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kTR"]], "ktable (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kTable"]], "kwp (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kWP"]], "kwt (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kWT"]], "kwarichu (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.kWarichu"]], "name (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.name"]], "value (documentstructuretype attribute)": [[185, "skia.PDF.DocumentStructureType.value"]], "metadata (class in skia.pdf)": [[186, "skia.PDF.Metadata"]], "fauthor (metadata attribute)": [[186, "skia.PDF.Metadata.fAuthor"]], "fcreator (metadata attribute)": [[186, "skia.PDF.Metadata.fCreator"]], "fencodingquality (metadata attribute)": [[186, "skia.PDF.Metadata.fEncodingQuality"]], "fkeywords (metadata attribute)": [[186, "skia.PDF.Metadata.fKeywords"]], "fpdfa (metadata attribute)": [[186, "skia.PDF.Metadata.fPDFA"]], "fproducer (metadata attribute)": [[186, "skia.PDF.Metadata.fProducer"]], "frasterdpi (metadata attribute)": [[186, "skia.PDF.Metadata.fRasterDPI"]], "fstructureelementtreeroot (metadata attribute)": [[186, "skia.PDF.Metadata.fStructureElementTreeRoot"]], "fsubject (metadata attribute)": [[186, "skia.PDF.Metadata.fSubject"]], "ftitle (metadata attribute)": [[186, "skia.PDF.Metadata.fTitle"]], "structureelementnode (class in skia.pdf)": [[187, "skia.PDF.StructureElementNode"]], "__init__() (structureelementnode method)": [[187, "skia.PDF.StructureElementNode.__init__"]], "fadditionalnodeids (structureelementnode attribute)": [[187, "skia.PDF.StructureElementNode.fAdditionalNodeIds"]], "falt (structureelementnode attribute)": [[187, "skia.PDF.StructureElementNode.fAlt"]], "fattributes (structureelementnode attribute)": [[187, "skia.PDF.StructureElementNode.fAttributes"]], "flang (structureelementnode attribute)": [[187, "skia.PDF.StructureElementNode.fLang"]], "fnodeid (structureelementnode attribute)": [[187, "skia.PDF.StructureElementNode.fNodeId"]], "ftypestring (structureelementnode attribute)": [[187, "skia.PDF.StructureElementNode.fTypeString"]], "paint (class in skia)": [[188, "skia.Paint"]], "__init__() (paint method)": [[188, "skia.Paint.__init__"]], "cancomputefastbounds() (paint method)": [[188, "skia.Paint.canComputeFastBounds"]], "computefastbounds() (paint method)": [[188, "skia.Paint.computeFastBounds"]], "computefaststrokebounds() (paint method)": [[188, "skia.Paint.computeFastStrokeBounds"]], "docomputefastbounds() (paint method)": [[188, "skia.Paint.doComputeFastBounds"]], "getalpha() (paint method)": [[188, "skia.Paint.getAlpha"]], "getalphaf() (paint method)": [[188, "skia.Paint.getAlphaf"]], "getblendmode() (paint method)": [[188, "skia.Paint.getBlendMode"]], "getcolor() (paint method)": [[188, "skia.Paint.getColor"]], "getcolor4f() (paint method)": [[188, "skia.Paint.getColor4f"]], "getcolorfilter() (paint method)": [[188, "skia.Paint.getColorFilter"]], "getfillpath() (paint method)": [[188, "skia.Paint.getFillPath"]], "getfilterquality() (paint method)": [[188, "skia.Paint.getFilterQuality"]], "gethash() (paint method)": [[188, "skia.Paint.getHash"]], "getimagefilter() (paint method)": [[188, "skia.Paint.getImageFilter"]], "getmaskfilter() (paint method)": [[188, "skia.Paint.getMaskFilter"]], "getpatheffect() (paint method)": [[188, "skia.Paint.getPathEffect"]], "getshader() (paint method)": [[188, "skia.Paint.getShader"]], "getstrokecap() (paint method)": [[188, "skia.Paint.getStrokeCap"]], "getstrokejoin() (paint method)": [[188, "skia.Paint.getStrokeJoin"]], "getstrokemiter() (paint method)": [[188, "skia.Paint.getStrokeMiter"]], "getstrokewidth() (paint method)": [[188, "skia.Paint.getStrokeWidth"]], "getstyle() (paint method)": [[188, "skia.Paint.getStyle"]], "isantialias() (paint method)": [[188, "skia.Paint.isAntiAlias"]], "isdither() (paint method)": [[188, "skia.Paint.isDither"]], "issrcover() (paint method)": [[188, "skia.Paint.isSrcOver"]], "kbevel_join (paint attribute)": [[188, "skia.Paint.kBevel_Join"]], "kbutt_cap (paint attribute)": [[188, "skia.Paint.kButt_Cap"]], "kcapcount (paint attribute)": [[188, "skia.Paint.kCapCount"]], "kdefault_cap (paint attribute)": [[188, "skia.Paint.kDefault_Cap"]], "kdefault_join (paint attribute)": [[188, "skia.Paint.kDefault_Join"]], "kfill_style (paint attribute)": [[188, "skia.Paint.kFill_Style"]], "kjoincount (paint attribute)": [[188, "skia.Paint.kJoinCount"]], "klast_cap (paint attribute)": [[188, "skia.Paint.kLast_Cap"]], "klast_join (paint attribute)": [[188, "skia.Paint.kLast_Join"]], "kmiter_join (paint attribute)": [[188, "skia.Paint.kMiter_Join"]], "kround_cap (paint attribute)": [[188, "skia.Paint.kRound_Cap"]], "kround_join (paint attribute)": [[188, "skia.Paint.kRound_Join"]], "ksquare_cap (paint attribute)": [[188, "skia.Paint.kSquare_Cap"]], "kstrokeandfill_style (paint attribute)": [[188, "skia.Paint.kStrokeAndFill_Style"]], "kstroke_style (paint attribute)": [[188, "skia.Paint.kStroke_Style"]], "kstylecount (paint attribute)": [[188, "skia.Paint.kStyleCount"]], "nothingtodraw() (paint method)": [[188, "skia.Paint.nothingToDraw"]], "refcolorfilter() (paint method)": [[188, "skia.Paint.refColorFilter"]], "refimagefilter() (paint method)": [[188, "skia.Paint.refImageFilter"]], "refmaskfilter() (paint method)": [[188, "skia.Paint.refMaskFilter"]], "refpatheffect() (paint method)": [[188, "skia.Paint.refPathEffect"]], "refshader() (paint method)": [[188, "skia.Paint.refShader"]], "reset() (paint method)": [[188, "skia.Paint.reset"]], "setargb() (paint method)": [[188, "skia.Paint.setARGB"]], "setalpha() (paint method)": [[188, "skia.Paint.setAlpha"]], "setalphaf() (paint method)": [[188, "skia.Paint.setAlphaf"]], "setantialias() (paint method)": [[188, "skia.Paint.setAntiAlias"]], "setblendmode() (paint method)": [[188, "skia.Paint.setBlendMode"]], "setcolor() (paint method)": [[188, "skia.Paint.setColor"]], "setcolor4f() (paint method)": [[188, "skia.Paint.setColor4f"]], "setcolorfilter() (paint method)": [[188, "skia.Paint.setColorFilter"]], "setdither() (paint method)": [[188, "skia.Paint.setDither"]], "setfilterquality() (paint method)": [[188, "skia.Paint.setFilterQuality"]], "setimagefilter() (paint method)": [[188, "skia.Paint.setImageFilter"]], "setmaskfilter() (paint method)": [[188, "skia.Paint.setMaskFilter"]], "setpatheffect() (paint method)": [[188, "skia.Paint.setPathEffect"]], "setshader() (paint method)": [[188, "skia.Paint.setShader"]], "setstrokecap() (paint method)": [[188, "skia.Paint.setStrokeCap"]], "setstrokejoin() (paint method)": [[188, "skia.Paint.setStrokeJoin"]], "setstrokemiter() (paint method)": [[188, "skia.Paint.setStrokeMiter"]], "setstrokewidth() (paint method)": [[188, "skia.Paint.setStrokeWidth"]], "setstyle() (paint method)": [[188, "skia.Paint.setStyle"]], "cap (class in skia.paint)": [[189, "skia.Paint.Cap"]], "__init__() (cap method)": [[189, "skia.Paint.Cap.__init__"]], "kbutt_cap (cap attribute)": [[189, "skia.Paint.Cap.kButt_Cap"]], "kdefault_cap (cap attribute)": [[189, "skia.Paint.Cap.kDefault_Cap"]], "klast_cap (cap attribute)": [[189, "skia.Paint.Cap.kLast_Cap"]], "kround_cap (cap attribute)": [[189, "skia.Paint.Cap.kRound_Cap"]], "ksquare_cap (cap attribute)": [[189, "skia.Paint.Cap.kSquare_Cap"]], "name (cap attribute)": [[189, "skia.Paint.Cap.name"]], "value (cap attribute)": [[189, "skia.Paint.Cap.value"]], "join (class in skia.paint)": [[190, "skia.Paint.Join"]], "__init__() (join method)": [[190, "skia.Paint.Join.__init__"]], "kbevel_join (join attribute)": [[190, "skia.Paint.Join.kBevel_Join"]], "kdefault_join (join attribute)": [[190, "skia.Paint.Join.kDefault_Join"]], "klast_join (join attribute)": [[190, "skia.Paint.Join.kLast_Join"]], "kmiter_join (join attribute)": [[190, "skia.Paint.Join.kMiter_Join"]], "kround_join (join attribute)": [[190, "skia.Paint.Join.kRound_Join"]], "name (join attribute)": [[190, "skia.Paint.Join.name"]], "value (join attribute)": [[190, "skia.Paint.Join.value"]], "style (class in skia.paint)": [[191, "skia.Paint.Style"]], "__init__() (style method)": [[191, "skia.Paint.Style.__init__"], [205, "skia.Path1DPathEffect.Style.__init__"], [267, "skia.StrokeRec.Style.__init__"]], "kfill_style (style attribute)": [[191, "skia.Paint.Style.kFill_Style"], [267, "skia.StrokeRec.Style.kFill_Style"]], "kstrokeandfill_style (style attribute)": [[191, "skia.Paint.Style.kStrokeAndFill_Style"], [267, "skia.StrokeRec.Style.kStrokeAndFill_Style"]], "kstroke_style (style attribute)": [[191, "skia.Paint.Style.kStroke_Style"], [267, "skia.StrokeRec.Style.kStroke_Style"]], "name (style attribute)": [[191, "skia.Paint.Style.name"], [205, "skia.Path1DPathEffect.Style.name"], [267, "skia.StrokeRec.Style.name"]], "value (style attribute)": [[191, "skia.Paint.Style.value"], [205, "skia.Path1DPathEffect.Style.value"], [267, "skia.StrokeRec.Style.value"]], "make() (paintimagefilter static method)": [[192, "skia.PaintImageFilter.Make"]], "paintimagefilter (class in skia)": [[192, "skia.PaintImageFilter"]], "__init__() (paintimagefilter method)": [[192, "skia.PaintImageFilter.__init__"]], "circle() (path static method)": [[193, "skia.Path.Circle"]], "convertconictoquads() (path static method)": [[193, "skia.Path.ConvertConicToQuads"]], "iscubicdegenerate() (path static method)": [[193, "skia.Path.IsCubicDegenerate"]], "islinedegenerate() (path static method)": [[193, "skia.Path.IsLineDegenerate"]], "isquaddegenerate() (path static method)": [[193, "skia.Path.IsQuadDegenerate"]], "line() (path static method)": [[193, "skia.Path.Line"]], "make() (path static method)": [[193, "skia.Path.Make"]], "oval() (path static method)": [[193, "skia.Path.Oval"]], "path (class in skia)": [[193, "skia.Path"]], "polygon() (path static method)": [[193, "skia.Path.Polygon"]], "rrect() (path static method)": [[193, "skia.Path.RRect"]], "rect() (path static method)": [[193, "skia.Path.Rect"]], "__init__() (path method)": [[193, "skia.Path.__init__"]], "addarc() (path method)": [[193, "skia.Path.addArc"]], "addcircle() (path method)": [[193, "skia.Path.addCircle"]], "addoval() (path method)": [[193, "skia.Path.addOval"]], "addpath() (path method)": [[193, "skia.Path.addPath"]], "addpoly() (path method)": [[193, "skia.Path.addPoly"]], "addrrect() (path method)": [[193, "skia.Path.addRRect"]], "addrect() (path method)": [[193, "skia.Path.addRect"]], "addroundrect() (path method)": [[193, "skia.Path.addRoundRect"]], "approximatebytesused() (path method)": [[193, "skia.Path.approximateBytesUsed"]], "arcto() (path method)": [[193, "skia.Path.arcTo"]], "close() (path method)": [[193, "skia.Path.close"]], "computetightbounds() (path method)": [[193, "skia.Path.computeTightBounds"]], "conicto() (path method)": [[193, "skia.Path.conicTo"]], "conservativelycontainsrect() (path method)": [[193, "skia.Path.conservativelyContainsRect"]], "contains() (path method)": [[193, "skia.Path.contains"]], "countpoints() (path method)": [[193, "skia.Path.countPoints"]], "countverbs() (path method)": [[193, "skia.Path.countVerbs"]], "cubicto() (path method)": [[193, "skia.Path.cubicTo"]], "dump() (path method)": [[193, "skia.Path.dump"]], "dumphex() (path method)": [[193, "skia.Path.dumpHex"]], "getbounds() (path method)": [[193, "skia.Path.getBounds"]], "getfilltype() (path method)": [[193, "skia.Path.getFillType"]], "getgenerationid() (path method)": [[193, "skia.Path.getGenerationID"]], "getlastpt() (path method)": [[193, "skia.Path.getLastPt"]], "getpoint() (path method)": [[193, "skia.Path.getPoint"]], "getpoints() (path method)": [[193, "skia.Path.getPoints"]], "getsegmentmasks() (path method)": [[193, "skia.Path.getSegmentMasks"]], "getverbs() (path method)": [[193, "skia.Path.getVerbs"]], "increserve() (path method)": [[193, "skia.Path.incReserve"]], "interpolate() (path method)": [[193, "skia.Path.interpolate"]], "isconvex() (path method)": [[193, "skia.Path.isConvex"]], "isempty() (path method)": [[193, "skia.Path.isEmpty"]], "isfinite() (path method)": [[193, "skia.Path.isFinite"]], "isinterpolatable() (path method)": [[193, "skia.Path.isInterpolatable"]], "isinversefilltype() (path method)": [[193, "skia.Path.isInverseFillType"]], "islastcontourclosed() (path method)": [[193, "skia.Path.isLastContourClosed"]], "isline() (path method)": [[193, "skia.Path.isLine"]], "isoval() (path method)": [[193, "skia.Path.isOval"]], "isrrect() (path method)": [[193, "skia.Path.isRRect"]], "isrect() (path method)": [[193, "skia.Path.isRect"]], "isvalid() (path method)": [[193, "skia.Path.isValid"]], "isvolatile() (path method)": [[193, "skia.Path.isVolatile"]], "kappend_addpathmode (path attribute)": [[193, "skia.Path.kAppend_AddPathMode"]], "kclose_verb (path attribute)": [[193, "skia.Path.kClose_Verb"]], "kconic_segmentmask (path attribute)": [[193, "skia.Path.kConic_SegmentMask"]], "kconic_verb (path attribute)": [[193, "skia.Path.kConic_Verb"]], "kcubic_segmentmask (path attribute)": [[193, "skia.Path.kCubic_SegmentMask"]], "kcubic_verb (path attribute)": [[193, "skia.Path.kCubic_Verb"]], "kdone_verb (path attribute)": [[193, "skia.Path.kDone_Verb"]], "kextend_addpathmode (path attribute)": [[193, "skia.Path.kExtend_AddPathMode"]], "klarge_arcsize (path attribute)": [[193, "skia.Path.kLarge_ArcSize"]], "kline_segmentmask (path attribute)": [[193, "skia.Path.kLine_SegmentMask"]], "kline_verb (path attribute)": [[193, "skia.Path.kLine_Verb"]], "kmove_verb (path attribute)": [[193, "skia.Path.kMove_Verb"]], "kquad_segmentmask (path attribute)": [[193, "skia.Path.kQuad_SegmentMask"]], "kquad_verb (path attribute)": [[193, "skia.Path.kQuad_Verb"]], "ksmall_arcsize (path attribute)": [[193, "skia.Path.kSmall_ArcSize"]], "lineto() (path method)": [[193, "skia.Path.lineTo"]], "moveto() (path method)": [[193, "skia.Path.moveTo"]], "offset() (path method)": [[193, "skia.Path.offset"]], "quadto() (path method)": [[193, "skia.Path.quadTo"]], "rarcto() (path method)": [[193, "skia.Path.rArcTo"]], "rconicto() (path method)": [[193, "skia.Path.rConicTo"]], "rcubicto() (path method)": [[193, "skia.Path.rCubicTo"]], "rlineto() (path method)": [[193, "skia.Path.rLineTo"]], "rmoveto() (path method)": [[193, "skia.Path.rMoveTo"]], "rquadto() (path method)": [[193, "skia.Path.rQuadTo"]], "readfrommemory() (path method)": [[193, "skia.Path.readFromMemory"]], "reset() (path method)": [[193, "skia.Path.reset"]], "reverseaddpath() (path method)": [[193, "skia.Path.reverseAddPath"]], "rewind() (path method)": [[193, "skia.Path.rewind"]], "serialize() (path method)": [[193, "skia.Path.serialize"]], "setfilltype() (path method)": [[193, "skia.Path.setFillType"]], "setisvolatile() (path method)": [[193, "skia.Path.setIsVolatile"]], "setlastpt() (path method)": [[193, "skia.Path.setLastPt"]], "shrinktofit() (path method)": [[193, "skia.Path.shrinkToFit"]], "swap() (path method)": [[193, "skia.Path.swap"]], "toggleinversefilltype() (path method)": [[193, "skia.Path.toggleInverseFillType"]], "transform() (path method)": [[193, "skia.Path.transform"]], "updateboundscache() (path method)": [[193, "skia.Path.updateBoundsCache"]], "writetomemory() (path method)": [[193, "skia.Path.writeToMemory"]], "addpathmode (class in skia.path)": [[194, "skia.Path.AddPathMode"]], "__init__() (addpathmode method)": [[194, "skia.Path.AddPathMode.__init__"]], "kappend_addpathmode (addpathmode attribute)": [[194, "skia.Path.AddPathMode.kAppend_AddPathMode"]], "kextend_addpathmode (addpathmode attribute)": [[194, "skia.Path.AddPathMode.kExtend_AddPathMode"]], "name (addpathmode attribute)": [[194, "skia.Path.AddPathMode.name"]], "value (addpathmode attribute)": [[194, "skia.Path.AddPathMode.value"]], "arcsize (class in skia.path)": [[195, "skia.Path.ArcSize"]], "__init__() (arcsize method)": [[195, "skia.Path.ArcSize.__init__"], [214, "skia.PathBuilder.ArcSize.__init__"]], "klarge_arcsize (arcsize attribute)": [[195, "skia.Path.ArcSize.kLarge_ArcSize"], [214, "skia.PathBuilder.ArcSize.kLarge_ArcSize"]], "ksmall_arcsize (arcsize attribute)": [[195, "skia.Path.ArcSize.kSmall_ArcSize"], [214, "skia.PathBuilder.ArcSize.kSmall_ArcSize"]], "name (arcsize attribute)": [[195, "skia.Path.ArcSize.name"], [214, "skia.PathBuilder.ArcSize.name"]], "value (arcsize attribute)": [[195, "skia.Path.ArcSize.value"], [214, "skia.PathBuilder.ArcSize.value"]], "iter (class in skia.path)": [[196, "skia.Path.Iter"]], "__init__() (iter method)": [[196, "skia.Path.Iter.__init__"], [281, "skia.TextBlob.Iter.__init__"]], "conicweight() (iter method)": [[196, "skia.Path.Iter.conicWeight"]], "iscloseline() (iter method)": [[196, "skia.Path.Iter.isCloseLine"]], "isclosedcontour() (iter method)": [[196, "skia.Path.Iter.isClosedContour"]], "next() (iter method)": [[196, "skia.Path.Iter.next"], [281, "skia.TextBlob.Iter.next"]], "setpath() (iter method)": [[196, "skia.Path.Iter.setPath"]], "rawiter (class in skia.path)": [[197, "skia.Path.RawIter"]], "__init__() (rawiter method)": [[197, "skia.Path.RawIter.__init__"]], "conicweight() (rawiter method)": [[197, "skia.Path.RawIter.conicWeight"]], "next() (rawiter method)": [[197, "skia.Path.RawIter.next"]], "peek() (rawiter method)": [[197, "skia.Path.RawIter.peek"]], "setpath() (rawiter method)": [[197, "skia.Path.RawIter.setPath"]], "segmentmask (class in skia.path)": [[198, "skia.Path.SegmentMask"]], "__init__() (segmentmask method)": [[198, "skia.Path.SegmentMask.__init__"]], "kconic_segmentmask (segmentmask attribute)": [[198, "skia.Path.SegmentMask.kConic_SegmentMask"]], "kcubic_segmentmask (segmentmask attribute)": [[198, "skia.Path.SegmentMask.kCubic_SegmentMask"]], "kline_segmentmask (segmentmask attribute)": [[198, "skia.Path.SegmentMask.kLine_SegmentMask"]], "kquad_segmentmask (segmentmask attribute)": [[198, "skia.Path.SegmentMask.kQuad_SegmentMask"]], "name (segmentmask attribute)": [[198, "skia.Path.SegmentMask.name"]], "value (segmentmask attribute)": [[198, "skia.Path.SegmentMask.value"]], "verb (class in skia.path)": [[199, "skia.Path.Verb"]], "__init__() (verb method)": [[199, "skia.Path.Verb.__init__"]], "kclose_verb (verb attribute)": [[199, "skia.Path.Verb.kClose_Verb"]], "kconic_verb (verb attribute)": [[199, "skia.Path.Verb.kConic_Verb"]], "kcubic_verb (verb attribute)": [[199, "skia.Path.Verb.kCubic_Verb"]], "kdone_verb (verb attribute)": [[199, "skia.Path.Verb.kDone_Verb"]], "kline_verb (verb attribute)": [[199, "skia.Path.Verb.kLine_Verb"]], "kmove_verb (verb attribute)": [[199, "skia.Path.Verb.kMove_Verb"]], "kquad_verb (verb attribute)": [[199, "skia.Path.Verb.kQuad_Verb"]], "name (verb attribute)": [[199, "skia.Path.Verb.name"]], "value (verb attribute)": [[199, "skia.Path.Verb.value"]], "deserialize() (path1dpatheffect static method)": [[200, "skia.Path1DPathEffect.Deserialize"]], "getflattenabletype() (path1dpatheffect static method)": [[200, "skia.Path1DPathEffect.GetFlattenableType"]], "make() (path1dpatheffect static method)": [[200, "skia.Path1DPathEffect.Make"]], "makecompose() (path1dpatheffect static method)": [[200, "skia.Path1DPathEffect.MakeCompose"]], "makesum() (path1dpatheffect static method)": [[200, "skia.Path1DPathEffect.MakeSum"]], "path1dpatheffect (class in skia)": [[200, "skia.Path1DPathEffect"]], "registerflattenables() (path1dpatheffect static method)": [[200, "skia.Path1DPathEffect.RegisterFlattenables"]], "__init__() (path1dpatheffect method)": [[200, "skia.Path1DPathEffect.__init__"]], "asadash() (path1dpatheffect method)": [[200, "skia.Path1DPathEffect.asADash"]], "aspoints() (path1dpatheffect method)": [[200, "skia.Path1DPathEffect.asPoints"]], "computefastbounds() (path1dpatheffect method)": [[200, "skia.Path1DPathEffect.computeFastBounds"]], "filterpath() (path1dpatheffect method)": [[200, "skia.Path1DPathEffect.filterPath"]], "getflattenabletype() (path1dpatheffect method)": [[200, "skia.Path1DPathEffect.getFlattenableType"]], "gettypename() (path1dpatheffect method)": [[200, "skia.Path1DPathEffect.getTypeName"]], "kcolorfilter_type (path1dpatheffect attribute)": [[200, "skia.Path1DPathEffect.kColorFilter_Type"]], "kdash_dashtype (path1dpatheffect attribute)": [[200, "skia.Path1DPathEffect.kDash_DashType"]], "kdrawlooper_type (path1dpatheffect attribute)": [[200, "skia.Path1DPathEffect.kDrawLooper_Type"]], "kdrawable_type (path1dpatheffect attribute)": [[200, "skia.Path1DPathEffect.kDrawable_Type"]], "kimagefilter_type (path1dpatheffect attribute)": [[200, "skia.Path1DPathEffect.kImageFilter_Type"]], "klastenum_style (path1dpatheffect attribute)": [[200, "skia.Path1DPathEffect.kLastEnum_Style"]], "kmaskfilter_type (path1dpatheffect attribute)": [[200, "skia.Path1DPathEffect.kMaskFilter_Type"]], "kmorph_style (path1dpatheffect attribute)": [[200, "skia.Path1DPathEffect.kMorph_Style"]], "knone_dashtype (path1dpatheffect attribute)": [[200, "skia.Path1DPathEffect.kNone_DashType"]], "kpatheffect_type (path1dpatheffect attribute)": [[200, "skia.Path1DPathEffect.kPathEffect_Type"]], "kpixelref_type (path1dpatheffect attribute)": [[200, "skia.Path1DPathEffect.kPixelRef_Type"]], "krotate_style (path1dpatheffect attribute)": [[200, "skia.Path1DPathEffect.kRotate_Style"]], "kshaderbase_type (path1dpatheffect attribute)": [[200, "skia.Path1DPathEffect.kShaderBase_Type"]], "ktranslate_style (path1dpatheffect attribute)": [[200, "skia.Path1DPathEffect.kTranslate_Style"]], "kunused_type (path1dpatheffect attribute)": [[200, "skia.Path1DPathEffect.kUnused_Type"]], "kunused_type2 (path1dpatheffect attribute)": [[200, "skia.Path1DPathEffect.kUnused_Type2"]], "kunused_type3 (path1dpatheffect attribute)": [[200, "skia.Path1DPathEffect.kUnused_Type3"]], "kunused_type4 (path1dpatheffect attribute)": [[200, "skia.Path1DPathEffect.kUnused_Type4"]], "ref() (path1dpatheffect method)": [[200, "skia.Path1DPathEffect.ref"]], "serialize() (path1dpatheffect method)": [[200, "skia.Path1DPathEffect.serialize"]], "unique() (path1dpatheffect method)": [[200, "skia.Path1DPathEffect.unique"]], "unref() (path1dpatheffect method)": [[200, "skia.Path1DPathEffect.unref"]], "dashinfo (class in skia.path1dpatheffect)": [[201, "skia.Path1DPathEffect.DashInfo"]], "dashtype (class in skia.path1dpatheffect)": [[202, "skia.Path1DPathEffect.DashType"]], "pointdata (class in skia.path1dpatheffect)": [[203, "skia.Path1DPathEffect.PointData"]], "pointflags (class in skia.path1dpatheffect.pointdata)": [[204, "skia.Path1DPathEffect.PointData.PointFlags"]], "style (class in skia.path1dpatheffect)": [[205, "skia.Path1DPathEffect.Style"]], "klastenum_style (style attribute)": [[205, "skia.Path1DPathEffect.Style.kLastEnum_Style"]], "kmorph_style (style attribute)": [[205, "skia.Path1DPathEffect.Style.kMorph_Style"]], "krotate_style (style attribute)": [[205, "skia.Path1DPathEffect.Style.kRotate_Style"]], "ktranslate_style (style attribute)": [[205, "skia.Path1DPathEffect.Style.kTranslate_Style"]], "type (class in skia.path1dpatheffect)": [[206, "skia.Path1DPathEffect.Type"]], "deserialize() (path2dpatheffect static method)": [[207, "skia.Path2DPathEffect.Deserialize"]], "getflattenabletype() (path2dpatheffect static method)": [[207, "skia.Path2DPathEffect.GetFlattenableType"]], "make() (path2dpatheffect static method)": [[207, "skia.Path2DPathEffect.Make"]], "makecompose() (path2dpatheffect static method)": [[207, "skia.Path2DPathEffect.MakeCompose"]], "makesum() (path2dpatheffect static method)": [[207, "skia.Path2DPathEffect.MakeSum"]], "path2dpatheffect (class in skia)": [[207, "skia.Path2DPathEffect"]], "registerflattenables() (path2dpatheffect static method)": [[207, "skia.Path2DPathEffect.RegisterFlattenables"]], "__init__() (path2dpatheffect method)": [[207, "skia.Path2DPathEffect.__init__"]], "asadash() (path2dpatheffect method)": [[207, "skia.Path2DPathEffect.asADash"]], "aspoints() (path2dpatheffect method)": [[207, "skia.Path2DPathEffect.asPoints"]], "computefastbounds() (path2dpatheffect method)": [[207, "skia.Path2DPathEffect.computeFastBounds"]], "filterpath() (path2dpatheffect method)": [[207, "skia.Path2DPathEffect.filterPath"]], "getflattenabletype() (path2dpatheffect method)": [[207, "skia.Path2DPathEffect.getFlattenableType"]], "gettypename() (path2dpatheffect method)": [[207, "skia.Path2DPathEffect.getTypeName"]], "kcolorfilter_type (path2dpatheffect attribute)": [[207, "skia.Path2DPathEffect.kColorFilter_Type"]], "kdash_dashtype (path2dpatheffect attribute)": [[207, "skia.Path2DPathEffect.kDash_DashType"]], "kdrawlooper_type (path2dpatheffect attribute)": [[207, "skia.Path2DPathEffect.kDrawLooper_Type"]], "kdrawable_type (path2dpatheffect attribute)": [[207, "skia.Path2DPathEffect.kDrawable_Type"]], "kimagefilter_type (path2dpatheffect attribute)": [[207, "skia.Path2DPathEffect.kImageFilter_Type"]], "kmaskfilter_type (path2dpatheffect attribute)": [[207, "skia.Path2DPathEffect.kMaskFilter_Type"]], "knone_dashtype (path2dpatheffect attribute)": [[207, "skia.Path2DPathEffect.kNone_DashType"]], "kpatheffect_type (path2dpatheffect attribute)": [[207, "skia.Path2DPathEffect.kPathEffect_Type"]], "kpixelref_type (path2dpatheffect attribute)": [[207, "skia.Path2DPathEffect.kPixelRef_Type"]], "kshaderbase_type (path2dpatheffect attribute)": [[207, "skia.Path2DPathEffect.kShaderBase_Type"]], "kunused_type (path2dpatheffect attribute)": [[207, "skia.Path2DPathEffect.kUnused_Type"]], "kunused_type2 (path2dpatheffect attribute)": [[207, "skia.Path2DPathEffect.kUnused_Type2"]], "kunused_type3 (path2dpatheffect attribute)": [[207, "skia.Path2DPathEffect.kUnused_Type3"]], "kunused_type4 (path2dpatheffect attribute)": [[207, "skia.Path2DPathEffect.kUnused_Type4"]], "ref() (path2dpatheffect method)": [[207, "skia.Path2DPathEffect.ref"]], "serialize() (path2dpatheffect method)": [[207, "skia.Path2DPathEffect.serialize"]], "unique() (path2dpatheffect method)": [[207, "skia.Path2DPathEffect.unique"]], "unref() (path2dpatheffect method)": [[207, "skia.Path2DPathEffect.unref"]], "dashinfo (class in skia.path2dpatheffect)": [[208, "skia.Path2DPathEffect.DashInfo"]], "dashtype (class in skia.path2dpatheffect)": [[209, "skia.Path2DPathEffect.DashType"]], "pointdata (class in skia.path2dpatheffect)": [[210, "skia.Path2DPathEffect.PointData"]], "pointflags (class in skia.path2dpatheffect.pointdata)": [[211, "skia.Path2DPathEffect.PointData.PointFlags"]], "type (class in skia.path2dpatheffect)": [[212, "skia.Path2DPathEffect.Type"]], "pathbuilder (class in skia)": [[213, "skia.PathBuilder"]], "__init__() (pathbuilder method)": [[213, "skia.PathBuilder.__init__"]], "addarc() (pathbuilder method)": [[213, "skia.PathBuilder.addArc"]], "addcircle() (pathbuilder method)": [[213, "skia.PathBuilder.addCircle"]], "addoval() (pathbuilder method)": [[213, "skia.PathBuilder.addOval"]], "addpolygon() (pathbuilder method)": [[213, "skia.PathBuilder.addPolygon"]], "addrrect() (pathbuilder method)": [[213, "skia.PathBuilder.addRRect"]], "addrect() (pathbuilder method)": [[213, "skia.PathBuilder.addRect"]], "arcto() (pathbuilder method)": [[213, "skia.PathBuilder.arcTo"]], "close() (pathbuilder method)": [[213, "skia.PathBuilder.close"]], "computebounds() (pathbuilder method)": [[213, "skia.PathBuilder.computeBounds"]], "conicto() (pathbuilder method)": [[213, "skia.PathBuilder.conicTo"]], "cubicto() (pathbuilder method)": [[213, "skia.PathBuilder.cubicTo"]], "detach() (pathbuilder method)": [[213, "skia.PathBuilder.detach"]], "filltype() (pathbuilder method)": [[213, "skia.PathBuilder.fillType"]], "increserve() (pathbuilder method)": [[213, "skia.PathBuilder.incReserve"]], "klarge_arcsize (pathbuilder attribute)": [[213, "skia.PathBuilder.kLarge_ArcSize"]], "ksmall_arcsize (pathbuilder attribute)": [[213, "skia.PathBuilder.kSmall_ArcSize"]], "lineto() (pathbuilder method)": [[213, "skia.PathBuilder.lineTo"]], "moveto() (pathbuilder method)": [[213, "skia.PathBuilder.moveTo"]], "offset() (pathbuilder method)": [[213, "skia.PathBuilder.offset"]], "polylineto() (pathbuilder method)": [[213, "skia.PathBuilder.polylineTo"]], "quadto() (pathbuilder method)": [[213, "skia.PathBuilder.quadTo"]], "rconicto() (pathbuilder method)": [[213, "skia.PathBuilder.rConicTo"]], "rcubicto() (pathbuilder method)": [[213, "skia.PathBuilder.rCubicTo"]], "rlineto() (pathbuilder method)": [[213, "skia.PathBuilder.rLineTo"]], "rquadto() (pathbuilder method)": [[213, "skia.PathBuilder.rQuadTo"]], "reset() (pathbuilder method)": [[213, "skia.PathBuilder.reset"]], "setfilltype() (pathbuilder method)": [[213, "skia.PathBuilder.setFillType"]], "setisvolatile() (pathbuilder method)": [[213, "skia.PathBuilder.setIsVolatile"]], "snapshot() (pathbuilder method)": [[213, "skia.PathBuilder.snapshot"]], "toggleinversefilltype() (pathbuilder method)": [[213, "skia.PathBuilder.toggleInverseFillType"]], "arcsize (class in skia.pathbuilder)": [[214, "skia.PathBuilder.ArcSize"]], "pathdirection (class in skia)": [[215, "skia.PathDirection"]], "__init__() (pathdirection method)": [[215, "skia.PathDirection.__init__"]], "kccw (pathdirection attribute)": [[215, "skia.PathDirection.kCCW"]], "kcw (pathdirection attribute)": [[215, "skia.PathDirection.kCW"]], "name (pathdirection attribute)": [[215, "skia.PathDirection.name"]], "value (pathdirection attribute)": [[215, "skia.PathDirection.value"]], "deserialize() (patheffect static method)": [[216, "skia.PathEffect.Deserialize"]], "getflattenabletype() (patheffect static method)": [[216, "skia.PathEffect.GetFlattenableType"]], "makecompose() (patheffect static method)": [[216, "skia.PathEffect.MakeCompose"]], "makesum() (patheffect static method)": [[216, "skia.PathEffect.MakeSum"]], "patheffect (class in skia)": [[216, "skia.PathEffect"]], "registerflattenables() (patheffect static method)": [[216, "skia.PathEffect.RegisterFlattenables"]], "__init__() (patheffect method)": [[216, "skia.PathEffect.__init__"]], "asadash() (patheffect method)": [[216, "skia.PathEffect.asADash"]], "aspoints() (patheffect method)": [[216, "skia.PathEffect.asPoints"]], "computefastbounds() (patheffect method)": [[216, "skia.PathEffect.computeFastBounds"]], "filterpath() (patheffect method)": [[216, "skia.PathEffect.filterPath"]], "getflattenabletype() (patheffect method)": [[216, "skia.PathEffect.getFlattenableType"]], "gettypename() (patheffect method)": [[216, "skia.PathEffect.getTypeName"]], "kcolorfilter_type (patheffect attribute)": [[216, "skia.PathEffect.kColorFilter_Type"]], "kdash_dashtype (patheffect attribute)": [[216, "skia.PathEffect.kDash_DashType"]], "kdrawlooper_type (patheffect attribute)": [[216, "skia.PathEffect.kDrawLooper_Type"]], "kdrawable_type (patheffect attribute)": [[216, "skia.PathEffect.kDrawable_Type"]], "kimagefilter_type (patheffect attribute)": [[216, "skia.PathEffect.kImageFilter_Type"]], "kmaskfilter_type (patheffect attribute)": [[216, "skia.PathEffect.kMaskFilter_Type"]], "knone_dashtype (patheffect attribute)": [[216, "skia.PathEffect.kNone_DashType"]], "kpatheffect_type (patheffect attribute)": [[216, "skia.PathEffect.kPathEffect_Type"]], "kpixelref_type (patheffect attribute)": [[216, "skia.PathEffect.kPixelRef_Type"]], "kshaderbase_type (patheffect attribute)": [[216, "skia.PathEffect.kShaderBase_Type"]], "kunused_type (patheffect attribute)": [[216, "skia.PathEffect.kUnused_Type"]], "kunused_type2 (patheffect attribute)": [[216, "skia.PathEffect.kUnused_Type2"]], "kunused_type3 (patheffect attribute)": [[216, "skia.PathEffect.kUnused_Type3"]], "kunused_type4 (patheffect attribute)": [[216, "skia.PathEffect.kUnused_Type4"]], "ref() (patheffect method)": [[216, "skia.PathEffect.ref"]], "serialize() (patheffect method)": [[216, "skia.PathEffect.serialize"]], "unique() (patheffect method)": [[216, "skia.PathEffect.unique"]], "unref() (patheffect method)": [[216, "skia.PathEffect.unref"]], "dashinfo (class in skia.patheffect)": [[217, "skia.PathEffect.DashInfo"]], "dashtype (class in skia.patheffect)": [[218, "skia.PathEffect.DashType"]], "pointdata (class in skia.patheffect)": [[219, "skia.PathEffect.PointData"]], "pointflags (class in skia.patheffect.pointdata)": [[220, "skia.PathEffect.PointData.PointFlags"]], "type (class in skia.patheffect)": [[221, "skia.PathEffect.Type"]], "pathfilltype (class in skia)": [[222, "skia.PathFillType"]], "__init__() (pathfilltype method)": [[222, "skia.PathFillType.__init__"]], "kevenodd (pathfilltype attribute)": [[222, "skia.PathFillType.kEvenOdd"]], "kinverseevenodd (pathfilltype attribute)": [[222, "skia.PathFillType.kInverseEvenOdd"]], "kinversewinding (pathfilltype attribute)": [[222, "skia.PathFillType.kInverseWinding"]], "kwinding (pathfilltype attribute)": [[222, "skia.PathFillType.kWinding"]], "name (pathfilltype attribute)": [[222, "skia.PathFillType.name"]], "value (pathfilltype attribute)": [[222, "skia.PathFillType.value"]], "pathmeasure (class in skia)": [[223, "skia.PathMeasure"]], "__init__() (pathmeasure method)": [[223, "skia.PathMeasure.__init__"]], "getlength() (pathmeasure method)": [[223, "skia.PathMeasure.getLength"]], "getmatrix() (pathmeasure method)": [[223, "skia.PathMeasure.getMatrix"]], "getpostan() (pathmeasure method)": [[223, "skia.PathMeasure.getPosTan"]], "getsegment() (pathmeasure method)": [[223, "skia.PathMeasure.getSegment"]], "isclosed() (pathmeasure method)": [[223, "skia.PathMeasure.isClosed"]], "kgetposandtan_matrixflag (pathmeasure attribute)": [[223, "skia.PathMeasure.kGetPosAndTan_MatrixFlag"]], "kgetposition_matrixflag (pathmeasure attribute)": [[223, "skia.PathMeasure.kGetPosition_MatrixFlag"]], "kgettangent_matrixflag (pathmeasure attribute)": [[223, "skia.PathMeasure.kGetTangent_MatrixFlag"]], "nextcontour() (pathmeasure method)": [[223, "skia.PathMeasure.nextContour"]], "setpath() (pathmeasure method)": [[223, "skia.PathMeasure.setPath"]], "getposandtan (class in skia.pathmeasure)": [[224, "skia.PathMeasure.GetPosAndTan"]], "__init__() (getposandtan method)": [[224, "skia.PathMeasure.GetPosAndTan.__init__"]], "kgetposandtan_matrixflag (getposandtan attribute)": [[224, "skia.PathMeasure.GetPosAndTan.kGetPosAndTan_MatrixFlag"]], "kgetposition_matrixflag (getposandtan attribute)": [[224, "skia.PathMeasure.GetPosAndTan.kGetPosition_MatrixFlag"]], "kgettangent_matrixflag (getposandtan attribute)": [[224, "skia.PathMeasure.GetPosAndTan.kGetTangent_MatrixFlag"]], "name (getposandtan attribute)": [[224, "skia.PathMeasure.GetPosAndTan.name"]], "value (getposandtan attribute)": [[224, "skia.PathMeasure.GetPosAndTan.value"]], "pathop (class in skia)": [[225, "skia.PathOp"]], "__init__() (pathop method)": [[225, "skia.PathOp.__init__"]], "kdifference_pathop (pathop attribute)": [[225, "skia.PathOp.kDifference_PathOp"]], "kintersect_pathop (pathop attribute)": [[225, "skia.PathOp.kIntersect_PathOp"]], "kreversedifference_pathop (pathop attribute)": [[225, "skia.PathOp.kReverseDifference_PathOp"]], "kunion_pathop (pathop attribute)": [[225, "skia.PathOp.kUnion_PathOp"]], "kxor_pathop (pathop attribute)": [[225, "skia.PathOp.kXOR_PathOp"]], "name (pathop attribute)": [[225, "skia.PathOp.name"]], "value (pathop attribute)": [[225, "skia.PathOp.value"]], "pathsegmentmask (class in skia)": [[226, "skia.PathSegmentMask"]], "__init__() (pathsegmentmask method)": [[226, "skia.PathSegmentMask.__init__"]], "kconic_pathsegmentmask (pathsegmentmask attribute)": [[226, "skia.PathSegmentMask.kConic_PathSegmentMask"]], "kcubic_pathsegmentmask (pathsegmentmask attribute)": [[226, "skia.PathSegmentMask.kCubic_PathSegmentMask"]], "kline_pathsegmentmask (pathsegmentmask attribute)": [[226, "skia.PathSegmentMask.kLine_PathSegmentMask"]], "kquad_pathsegmentmask (pathsegmentmask attribute)": [[226, "skia.PathSegmentMask.kQuad_PathSegmentMask"]], "name (pathsegmentmask attribute)": [[226, "skia.PathSegmentMask.name"]], "value (pathsegmentmask attribute)": [[226, "skia.PathSegmentMask.value"]], "pathverb (class in skia)": [[227, "skia.PathVerb"]], "__init__() (pathverb method)": [[227, "skia.PathVerb.__init__"]], "kclose (pathverb attribute)": [[227, "skia.PathVerb.kClose"]], "kconic (pathverb attribute)": [[227, "skia.PathVerb.kConic"]], "kcubic (pathverb attribute)": [[227, "skia.PathVerb.kCubic"]], "kline (pathverb attribute)": [[227, "skia.PathVerb.kLine"]], "kmove (pathverb attribute)": [[227, "skia.PathVerb.kMove"]], "kquad (pathverb attribute)": [[227, "skia.PathVerb.kQuad"]], "name (pathverb attribute)": [[227, "skia.PathVerb.name"]], "value (pathverb attribute)": [[227, "skia.PathVerb.value"]], "makefractalnoise() (perlinnoiseshader static method)": [[228, "skia.PerlinNoiseShader.MakeFractalNoise"]], "makeimprovednoise() (perlinnoiseshader static method)": [[228, "skia.PerlinNoiseShader.MakeImprovedNoise"]], "maketurbulence() (perlinnoiseshader static method)": [[228, "skia.PerlinNoiseShader.MakeTurbulence"]], "perlinnoiseshader (class in skia)": [[228, "skia.PerlinNoiseShader"]], "__init__() (perlinnoiseshader method)": [[228, "skia.PerlinNoiseShader.__init__"]], "makefromdata() (picture static method)": [[229, "skia.Picture.MakeFromData"]], "makefromstream() (picture static method)": [[229, "skia.Picture.MakeFromStream"]], "makeplaceholder() (picture static method)": [[229, "skia.Picture.MakePlaceholder"]], "picture (class in skia)": [[229, "skia.Picture"]], "__init__() (picture method)": [[229, "skia.Picture.__init__"]], "approximatebytesused() (picture method)": [[229, "skia.Picture.approximateBytesUsed"]], "approximateopcount() (picture method)": [[229, "skia.Picture.approximateOpCount"]], "cullrect() (picture method)": [[229, "skia.Picture.cullRect"]], "makeshader() (picture method)": [[229, "skia.Picture.makeShader"]], "playback() (picture method)": [[229, "skia.Picture.playback"]], "ref() (picture method)": [[229, "skia.Picture.ref"]], "serialize() (picture method)": [[229, "skia.Picture.serialize"]], "unique() (picture method)": [[229, "skia.Picture.unique"]], "uniqueid() (picture method)": [[229, "skia.Picture.uniqueID"]], "unref() (picture method)": [[229, "skia.Picture.unref"]], "picturerecorder (class in skia)": [[230, "skia.PictureRecorder"]], "__init__() (picturerecorder method)": [[230, "skia.PictureRecorder.__init__"]], "beginrecording() (picturerecorder method)": [[230, "skia.PictureRecorder.beginRecording"]], "finishrecordingasdrawable() (picturerecorder method)": [[230, "skia.PictureRecorder.finishRecordingAsDrawable"]], "finishrecordingaspicture() (picturerecorder method)": [[230, "skia.PictureRecorder.finishRecordingAsPicture"]], "finishrecordingaspicturewithcull() (picturerecorder method)": [[230, "skia.PictureRecorder.finishRecordingAsPictureWithCull"]], "getrecordingcanvas() (picturerecorder method)": [[230, "skia.PictureRecorder.getRecordingCanvas"]], "finishflags (class in skia.picturerecorder)": [[231, "skia.PictureRecorder.FinishFlags"]], "__init__() (finishflags method)": [[231, "skia.PictureRecorder.FinishFlags.__init__"]], "name (finishflags attribute)": [[231, "skia.PictureRecorder.FinishFlags.name"]], "value (finishflags attribute)": [[231, "skia.PictureRecorder.FinishFlags.value"]], "pixelgeometry (class in skia)": [[232, "skia.PixelGeometry"]], "__init__() (pixelgeometry method)": [[232, "skia.PixelGeometry.__init__"]], "kbgr_h_pixelgeometry (pixelgeometry attribute)": [[232, "skia.PixelGeometry.kBGR_H_PixelGeometry"]], "kbgr_v_pixelgeometry (pixelgeometry attribute)": [[232, "skia.PixelGeometry.kBGR_V_PixelGeometry"]], "krgb_h_pixelgeometry (pixelgeometry attribute)": [[232, "skia.PixelGeometry.kRGB_H_PixelGeometry"]], "krgb_v_pixelgeometry (pixelgeometry attribute)": [[232, "skia.PixelGeometry.kRGB_V_PixelGeometry"]], "kunknown_pixelgeometry (pixelgeometry attribute)": [[232, "skia.PixelGeometry.kUnknown_PixelGeometry"]], "name (pixelgeometry attribute)": [[232, "skia.PixelGeometry.name"]], "value (pixelgeometry attribute)": [[232, "skia.PixelGeometry.value"]], "pixelref (class in skia)": [[233, "skia.PixelRef"]], "__init__() (pixelref method)": [[233, "skia.PixelRef.__init__"]], "pixmap (class in skia)": [[234, "skia.Pixmap"]], "__init__() (pixmap method)": [[234, "skia.Pixmap.__init__"]], "addr() (pixmap method)": [[234, "skia.Pixmap.addr"]], "addr16() (pixmap method)": [[234, "skia.Pixmap.addr16"]], "addr32() (pixmap method)": [[234, "skia.Pixmap.addr32"]], "addr64() (pixmap method)": [[234, "skia.Pixmap.addr64"]], "addr8() (pixmap method)": [[234, "skia.Pixmap.addr8"]], "alphatype() (pixmap method)": [[234, "skia.Pixmap.alphaType"]], "bounds() (pixmap method)": [[234, "skia.Pixmap.bounds"]], "colorspace() (pixmap method)": [[234, "skia.Pixmap.colorSpace"]], "colortype() (pixmap method)": [[234, "skia.Pixmap.colorType"]], "computebytesize() (pixmap method)": [[234, "skia.Pixmap.computeByteSize"]], "computeisopaque() (pixmap method)": [[234, "skia.Pixmap.computeIsOpaque"]], "dimensions() (pixmap method)": [[234, "skia.Pixmap.dimensions"]], "erase() (pixmap method)": [[234, "skia.Pixmap.erase"]], "extractsubset() (pixmap method)": [[234, "skia.Pixmap.extractSubset"]], "getalphaf() (pixmap method)": [[234, "skia.Pixmap.getAlphaf"]], "getcolor() (pixmap method)": [[234, "skia.Pixmap.getColor"]], "height() (pixmap method)": [[234, "skia.Pixmap.height"]], "info() (pixmap method)": [[234, "skia.Pixmap.info"]], "isopaque() (pixmap method)": [[234, "skia.Pixmap.isOpaque"]], "readpixels() (pixmap method)": [[234, "skia.Pixmap.readPixels"]], "refcolorspace() (pixmap method)": [[234, "skia.Pixmap.refColorSpace"]], "reset() (pixmap method)": [[234, "skia.Pixmap.reset"]], "rowbytes() (pixmap method)": [[234, "skia.Pixmap.rowBytes"]], "rowbytesaspixels() (pixmap method)": [[234, "skia.Pixmap.rowBytesAsPixels"]], "scalepixels() (pixmap method)": [[234, "skia.Pixmap.scalePixels"]], "setcolorspace() (pixmap method)": [[234, "skia.Pixmap.setColorSpace"]], "shiftperpixel() (pixmap method)": [[234, "skia.Pixmap.shiftPerPixel"]], "tobytes() (pixmap method)": [[234, "skia.Pixmap.tobytes"]], "width() (pixmap method)": [[234, "skia.Pixmap.width"]], "writable_addr() (pixmap method)": [[234, "skia.Pixmap.writable_addr"]], "crossproduct() (point static method)": [[235, "skia.Point.CrossProduct"]], "distance() (point static method)": [[235, "skia.Point.Distance"]], "dotproduct() (point static method)": [[235, "skia.Point.DotProduct"]], "length() (point static method)": [[235, "skia.Point.Length"]], "make() (point static method)": [[235, "skia.Point.Make"]], "normalize() (point static method)": [[235, "skia.Point.Normalize"]], "offset() (point static method)": [[235, "skia.Point.Offset"]], "point (class in skia)": [[235, "skia.Point"]], "__init__() (point method)": [[235, "skia.Point.__init__"]], "cross() (point method)": [[235, "skia.Point.cross"]], "distancetoorigin() (point method)": [[235, "skia.Point.distanceToOrigin"]], "dot() (point method)": [[235, "skia.Point.dot"]], "equals() (point method)": [[235, "skia.Point.equals"]], "fx (point attribute)": [[235, "skia.Point.fX"]], "fy (point attribute)": [[235, "skia.Point.fY"]], "isfinite() (point method)": [[235, "skia.Point.isFinite"]], "iszero() (point method)": [[235, "skia.Point.isZero"]], "iset() (point method)": [[235, "skia.Point.iset"]], "length() (point method)": [[235, "skia.Point.length"]], "negate() (point method)": [[235, "skia.Point.negate"]], "normalize() (point method)": [[235, "skia.Point.normalize"]], "offset() (point method)": [[235, "skia.Point.offset"]], "scale() (point method)": [[235, "skia.Point.scale"]], "set() (point method)": [[235, "skia.Point.set"]], "setabs() (point method)": [[235, "skia.Point.setAbs"]], "setlength() (point method)": [[235, "skia.Point.setLength"]], "setnormalize() (point method)": [[235, "skia.Point.setNormalize"]], "x() (point method)": [[235, "skia.Point.x"]], "y() (point method)": [[235, "skia.Point.y"]], "crossproduct() (point3 static method)": [[236, "skia.Point3.CrossProduct"]], "dotproduct() (point3 static method)": [[236, "skia.Point3.DotProduct"]], "length() (point3 static method)": [[236, "skia.Point3.Length"]], "make() (point3 static method)": [[236, "skia.Point3.Make"]], "point3 (class in skia)": [[236, "skia.Point3"]], "__init__() (point3 method)": [[236, "skia.Point3.__init__"]], "cross() (point3 method)": [[236, "skia.Point3.cross"]], "dot() (point3 method)": [[236, "skia.Point3.dot"]], "fx (point3 attribute)": [[236, "skia.Point3.fX"]], "fy (point3 attribute)": [[236, "skia.Point3.fY"]], "fz (point3 attribute)": [[236, "skia.Point3.fZ"]], "isfinite() (point3 method)": [[236, "skia.Point3.isFinite"]], "length() (point3 method)": [[236, "skia.Point3.length"]], "makescale() (point3 method)": [[236, "skia.Point3.makeScale"]], "normalize() (point3 method)": [[236, "skia.Point3.normalize"]], "scale() (point3 method)": [[236, "skia.Point3.scale"]], "set() (point3 method)": [[236, "skia.Point3.set"]], "x() (point3 method)": [[236, "skia.Point3.x"]], "y() (point3 method)": [[236, "skia.Point3.y"]], "z() (point3 method)": [[236, "skia.Point3.z"]], "makeempty() (rrect static method)": [[237, "skia.RRect.MakeEmpty"]], "makeoval() (rrect static method)": [[237, "skia.RRect.MakeOval"]], "makerect() (rrect static method)": [[237, "skia.RRect.MakeRect"]], "makerectxy() (rrect static method)": [[237, "skia.RRect.MakeRectXY"]], "rrect (class in skia)": [[237, "skia.RRect"]], "__init__() (rrect method)": [[237, "skia.RRect.__init__"]], "contains() (rrect method)": [[237, "skia.RRect.contains"]], "dump() (rrect method)": [[237, "skia.RRect.dump"]], "dumphex() (rrect method)": [[237, "skia.RRect.dumpHex"]], "dumptostring() (rrect method)": [[237, "skia.RRect.dumpToString"]], "getbounds() (rrect method)": [[237, "skia.RRect.getBounds"]], "getsimpleradii() (rrect method)": [[237, "skia.RRect.getSimpleRadii"]], "gettype() (rrect method)": [[237, "skia.RRect.getType"]], "height() (rrect method)": [[237, "skia.RRect.height"]], "inset() (rrect method)": [[237, "skia.RRect.inset"]], "iscomplex() (rrect method)": [[237, "skia.RRect.isComplex"]], "isempty() (rrect method)": [[237, "skia.RRect.isEmpty"]], "isninepatch() (rrect method)": [[237, "skia.RRect.isNinePatch"]], "isoval() (rrect method)": [[237, "skia.RRect.isOval"]], "isrect() (rrect method)": [[237, "skia.RRect.isRect"]], "issimple() (rrect method)": [[237, "skia.RRect.isSimple"]], "isvalid() (rrect method)": [[237, "skia.RRect.isValid"]], "kcomplex_type (rrect attribute)": [[237, "skia.RRect.kComplex_Type"]], "kempty_type (rrect attribute)": [[237, "skia.RRect.kEmpty_Type"]], "klasttype (rrect attribute)": [[237, "skia.RRect.kLastType"]], "klowerleft_corner (rrect attribute)": [[237, "skia.RRect.kLowerLeft_Corner"]], "klowerright_corner (rrect attribute)": [[237, "skia.RRect.kLowerRight_Corner"]], "kninepatch_type (rrect attribute)": [[237, "skia.RRect.kNinePatch_Type"]], "koval_type (rrect attribute)": [[237, "skia.RRect.kOval_Type"]], "krect_type (rrect attribute)": [[237, "skia.RRect.kRect_Type"]], "ksimple_type (rrect attribute)": [[237, "skia.RRect.kSimple_Type"]], "ksizeinmemory (rrect attribute)": [[237, "skia.RRect.kSizeInMemory"]], "kupperleft_corner (rrect attribute)": [[237, "skia.RRect.kUpperLeft_Corner"]], "kupperright_corner (rrect attribute)": [[237, "skia.RRect.kUpperRight_Corner"]], "makeoffset() (rrect method)": [[237, "skia.RRect.makeOffset"]], "offset() (rrect method)": [[237, "skia.RRect.offset"]], "outset() (rrect method)": [[237, "skia.RRect.outset"]], "radii() (rrect method)": [[237, "skia.RRect.radii"]], "readfrommemory() (rrect method)": [[237, "skia.RRect.readFromMemory"]], "rect() (rrect method)": [[237, "skia.RRect.rect"]], "setempty() (rrect method)": [[237, "skia.RRect.setEmpty"]], "setninepatch() (rrect method)": [[237, "skia.RRect.setNinePatch"]], "setoval() (rrect method)": [[237, "skia.RRect.setOval"]], "setrect() (rrect method)": [[237, "skia.RRect.setRect"]], "setrectradii() (rrect method)": [[237, "skia.RRect.setRectRadii"]], "setrectxy() (rrect method)": [[237, "skia.RRect.setRectXY"]], "transform() (rrect method)": [[237, "skia.RRect.transform"]], "type() (rrect method)": [[237, "skia.RRect.type"]], "width() (rrect method)": [[237, "skia.RRect.width"]], "writetomemory() (rrect method)": [[237, "skia.RRect.writeToMemory"]], "corner (class in skia.rrect)": [[238, "skia.RRect.Corner"]], "__init__() (corner method)": [[238, "skia.RRect.Corner.__init__"]], "klowerleft_corner (corner attribute)": [[238, "skia.RRect.Corner.kLowerLeft_Corner"]], "klowerright_corner (corner attribute)": [[238, "skia.RRect.Corner.kLowerRight_Corner"]], "kupperleft_corner (corner attribute)": [[238, "skia.RRect.Corner.kUpperLeft_Corner"]], "kupperright_corner (corner attribute)": [[238, "skia.RRect.Corner.kUpperRight_Corner"]], "name (corner attribute)": [[238, "skia.RRect.Corner.name"]], "value (corner attribute)": [[238, "skia.RRect.Corner.value"]], "type (class in skia.rrect)": [[239, "skia.RRect.Type"]], "kcomplex_type (type attribute)": [[239, "skia.RRect.Type.kComplex_Type"]], "kempty_type (type attribute)": [[239, "skia.RRect.Type.kEmpty_Type"]], "klasttype (type attribute)": [[239, "skia.RRect.Type.kLastType"]], "kninepatch_type (type attribute)": [[239, "skia.RRect.Type.kNinePatch_Type"]], "koval_type (type attribute)": [[239, "skia.RRect.Type.kOval_Type"]], "krect_type (type attribute)": [[239, "skia.RRect.Type.kRect_Type"]], "ksimple_type (type attribute)": [[239, "skia.RRect.Type.kSimple_Type"]], "make() (rsxform static method)": [[240, "skia.RSXform.Make"]], "makefromradians() (rsxform static method)": [[240, "skia.RSXform.MakeFromRadians"]], "rsxform (class in skia)": [[240, "skia.RSXform"]], "__init__() (rsxform method)": [[240, "skia.RSXform.__init__"]], "fscos (rsxform attribute)": [[240, "skia.RSXform.fSCos"]], "fssin (rsxform attribute)": [[240, "skia.RSXform.fSSin"]], "ftx (rsxform attribute)": [[240, "skia.RSXform.fTx"]], "fty (rsxform attribute)": [[240, "skia.RSXform.fTy"]], "rectstaysrect() (rsxform method)": [[240, "skia.RSXform.rectStaysRect"]], "set() (rsxform method)": [[240, "skia.RSXform.set"]], "setidentity() (rsxform method)": [[240, "skia.RSXform.setIdentity"]], "toquad() (rsxform method)": [[240, "skia.RSXform.toQuad"]], "totristrip() (rsxform method)": [[240, "skia.RSXform.toTriStrip"]], "intersects() (rect static method)": [[241, "skia.Rect.Intersects"]], "make() (rect static method)": [[241, "skia.Rect.Make"]], "makeempty() (rect static method)": [[241, "skia.Rect.MakeEmpty"]], "makeiwh() (rect static method)": [[241, "skia.Rect.MakeIWH"]], "makeltrb() (rect static method)": [[241, "skia.Rect.MakeLTRB"]], "makesize() (rect static method)": [[241, "skia.Rect.MakeSize"]], "makewh() (rect static method)": [[241, "skia.Rect.MakeWH"]], "makexywh() (rect static method)": [[241, "skia.Rect.MakeXYWH"]], "rect (class in skia)": [[241, "skia.Rect"]], "__init__() (rect method)": [[241, "skia.Rect.__init__"]], "asscalars() (rect method)": [[241, "skia.Rect.asScalars"]], "bottom() (rect method)": [[241, "skia.Rect.bottom"]], "centerx() (rect method)": [[241, "skia.Rect.centerX"]], "centery() (rect method)": [[241, "skia.Rect.centerY"]], "contains() (rect method)": [[241, "skia.Rect.contains"]], "dump() (rect method)": [[241, "skia.Rect.dump"]], "dumphex() (rect method)": [[241, "skia.Rect.dumpHex"]], "fbottom (rect attribute)": [[241, "skia.Rect.fBottom"]], "fleft (rect attribute)": [[241, "skia.Rect.fLeft"]], "fright (rect attribute)": [[241, "skia.Rect.fRight"]], "ftop (rect attribute)": [[241, "skia.Rect.fTop"]], "height() (rect method)": [[241, "skia.Rect.height"]], "inset() (rect method)": [[241, "skia.Rect.inset"]], "intersect() (rect method)": [[241, "skia.Rect.intersect"]], "intersects() (rect method)": [[241, "skia.Rect.intersects"]], "isempty() (rect method)": [[241, "skia.Rect.isEmpty"]], "isfinite() (rect method)": [[241, "skia.Rect.isFinite"]], "issorted() (rect method)": [[241, "skia.Rect.isSorted"]], "join() (rect method)": [[241, "skia.Rect.join"]], "joinnonemptyarg() (rect method)": [[241, "skia.Rect.joinNonEmptyArg"]], "joinpossiblyemptyrect() (rect method)": [[241, "skia.Rect.joinPossiblyEmptyRect"]], "left() (rect method)": [[241, "skia.Rect.left"]], "makeinset() (rect method)": [[241, "skia.Rect.makeInset"]], "makeoffset() (rect method)": [[241, "skia.Rect.makeOffset"]], "makeoutset() (rect method)": [[241, "skia.Rect.makeOutset"]], "makesorted() (rect method)": [[241, "skia.Rect.makeSorted"]], "offset() (rect method)": [[241, "skia.Rect.offset"]], "offsetto() (rect method)": [[241, "skia.Rect.offsetTo"]], "outset() (rect method)": [[241, "skia.Rect.outset"]], "right() (rect method)": [[241, "skia.Rect.right"]], "round() (rect method)": [[241, "skia.Rect.round"]], "roundin() (rect method)": [[241, "skia.Rect.roundIn"]], "roundout() (rect method)": [[241, "skia.Rect.roundOut"]], "set() (rect method)": [[241, "skia.Rect.set"]], "setbounds() (rect method)": [[241, "skia.Rect.setBounds"]], "setboundscheck() (rect method)": [[241, "skia.Rect.setBoundsCheck"]], "setboundsnocheck() (rect method)": [[241, "skia.Rect.setBoundsNoCheck"]], "setempty() (rect method)": [[241, "skia.Rect.setEmpty"]], "setiwh() (rect method)": [[241, "skia.Rect.setIWH"]], "setltrb() (rect method)": [[241, "skia.Rect.setLTRB"]], "setwh() (rect method)": [[241, "skia.Rect.setWH"]], "setxywh() (rect method)": [[241, "skia.Rect.setXYWH"]], "sort() (rect method)": [[241, "skia.Rect.sort"]], "toquad() (rect method)": [[241, "skia.Rect.toQuad"]], "top() (rect method)": [[241, "skia.Rect.top"]], "width() (rect method)": [[241, "skia.Rect.width"]], "x() (rect method)": [[241, "skia.Rect.x"]], "y() (rect method)": [[241, "skia.Rect.y"]], "refcnt (class in skia)": [[242, "skia.RefCnt"]], "__init__() (refcnt method)": [[242, "skia.RefCnt.__init__"]], "ref() (refcnt method)": [[242, "skia.RefCnt.ref"]], "unique() (refcnt method)": [[242, "skia.RefCnt.unique"]], "unref() (refcnt method)": [[242, "skia.RefCnt.unref"]], "refcntbase (class in skia)": [[243, "skia.RefCntBase"]], "__init__() (refcntbase method)": [[243, "skia.RefCntBase.__init__"]], "ref() (refcntbase method)": [[243, "skia.RefCntBase.ref"]], "unique() (refcntbase method)": [[243, "skia.RefCntBase.unique"]], "unref() (refcntbase method)": [[243, "skia.RefCntBase.unref"]], "region (class in skia)": [[244, "skia.Region"]], "__init__() (region method)": [[244, "skia.Region.__init__"]], "cliperator() (region method)": [[244, "skia.Region.cliperator"]], "computeregioncomplexity() (region method)": [[244, "skia.Region.computeRegionComplexity"]], "contains() (region method)": [[244, "skia.Region.contains"]], "getboundarypath() (region method)": [[244, "skia.Region.getBoundaryPath"]], "getbounds() (region method)": [[244, "skia.Region.getBounds"]], "intersects() (region method)": [[244, "skia.Region.intersects"]], "iscomplex() (region method)": [[244, "skia.Region.isComplex"]], "isempty() (region method)": [[244, "skia.Region.isEmpty"]], "isrect() (region method)": [[244, "skia.Region.isRect"]], "iterator() (region method)": [[244, "skia.Region.iterator"]], "kdifference_op (region attribute)": [[244, "skia.Region.kDifference_Op"]], "kintersect_op (region attribute)": [[244, "skia.Region.kIntersect_Op"]], "klastop (region attribute)": [[244, "skia.Region.kLastOp"]], "kopcnt (region attribute)": [[244, "skia.Region.kOpCnt"]], "kreplace_op (region attribute)": [[244, "skia.Region.kReplace_Op"]], "kreversedifference_op (region attribute)": [[244, "skia.Region.kReverseDifference_Op"]], "kunion_op (region attribute)": [[244, "skia.Region.kUnion_Op"]], "kxor_op (region attribute)": [[244, "skia.Region.kXOR_Op"]], "op() (region method)": [[244, "skia.Region.op"]], "quickcontains() (region method)": [[244, "skia.Region.quickContains"]], "quickreject() (region method)": [[244, "skia.Region.quickReject"]], "readfrommemory() (region method)": [[244, "skia.Region.readFromMemory"]], "set() (region method)": [[244, "skia.Region.set"]], "setempty() (region method)": [[244, "skia.Region.setEmpty"]], "setpath() (region method)": [[244, "skia.Region.setPath"]], "setrect() (region method)": [[244, "skia.Region.setRect"]], "setrects() (region method)": [[244, "skia.Region.setRects"]], "setregion() (region method)": [[244, "skia.Region.setRegion"]], "spanerator() (region method)": [[244, "skia.Region.spanerator"]], "swap() (region method)": [[244, "skia.Region.swap"]], "translate() (region method)": [[244, "skia.Region.translate"]], "writetomemory() (region method)": [[244, "skia.Region.writeToMemory"]], "cliperator (class in skia.region)": [[245, "skia.Region.Cliperator"]], "__init__() (cliperator method)": [[245, "skia.Region.Cliperator.__init__"]], "done() (cliperator method)": [[245, "skia.Region.Cliperator.done"]], "next() (cliperator method)": [[245, "skia.Region.Cliperator.next"]], "rect() (cliperator method)": [[245, "skia.Region.Cliperator.rect"]], "iterator (class in skia.region)": [[246, "skia.Region.Iterator"]], "__init__() (iterator method)": [[246, "skia.Region.Iterator.__init__"]], "done() (iterator method)": [[246, "skia.Region.Iterator.done"]], "next() (iterator method)": [[246, "skia.Region.Iterator.next"]], "rect() (iterator method)": [[246, "skia.Region.Iterator.rect"]], "reset() (iterator method)": [[246, "skia.Region.Iterator.reset"]], "rewind() (iterator method)": [[246, "skia.Region.Iterator.rewind"]], "rgn() (iterator method)": [[246, "skia.Region.Iterator.rgn"]], "op (class in skia.region)": [[247, "skia.Region.Op"]], "__init__() (op method)": [[247, "skia.Region.Op.__init__"]], "kdifference_op (op attribute)": [[247, "skia.Region.Op.kDifference_Op"]], "kintersect_op (op attribute)": [[247, "skia.Region.Op.kIntersect_Op"]], "klastop (op attribute)": [[247, "skia.Region.Op.kLastOp"]], "kreplace_op (op attribute)": [[247, "skia.Region.Op.kReplace_Op"]], "kreversedifference_op (op attribute)": [[247, "skia.Region.Op.kReverseDifference_Op"]], "kunion_op (op attribute)": [[247, "skia.Region.Op.kUnion_Op"]], "kxor_op (op attribute)": [[247, "skia.Region.Op.kXOR_Op"]], "name (op attribute)": [[247, "skia.Region.Op.name"]], "value (op attribute)": [[247, "skia.Region.Op.value"]], "spanerator (class in skia.region)": [[248, "skia.Region.Spanerator"]], "__init__() (spanerator method)": [[248, "skia.Region.Spanerator.__init__"]], "next() (spanerator method)": [[248, "skia.Region.Spanerator.next"]], "make() (svgcanvas static method)": [[249, "skia.SVGCanvas.Make"]], "svgcanvas (class in skia)": [[249, "skia.SVGCanvas"]], "__init__() (svgcanvas method)": [[249, "skia.SVGCanvas.__init__"]], "kconverttexttopaths_flag (svgcanvas attribute)": [[249, "skia.SVGCanvas.kConvertTextToPaths_Flag"]], "knoprettyxml_flag (svgcanvas attribute)": [[249, "skia.SVGCanvas.kNoPrettyXML_Flag"]], "makefromstream() (svgdom static method)": [[250, "skia.SVGDOM.MakeFromStream"]], "svgdom (class in skia)": [[250, "skia.SVGDOM"]], "__init__() (svgdom method)": [[250, "skia.SVGDOM.__init__"]], "containersize() (svgdom method)": [[250, "skia.SVGDOM.containerSize"]], "ref() (svgdom method)": [[250, "skia.SVGDOM.ref"]], "render() (svgdom method)": [[250, "skia.SVGDOM.render"]], "setcontainersize() (svgdom method)": [[250, "skia.SVGDOM.setContainerSize"]], "unique() (svgdom method)": [[250, "skia.SVGDOM.unique"]], "unref() (svgdom method)": [[250, "skia.SVGDOM.unref"]], "deserialize() (shader static method)": [[251, "skia.Shader.Deserialize"]], "shader (class in skia)": [[251, "skia.Shader"]], "__init__() (shader method)": [[251, "skia.Shader.__init__"]], "asagradient() (shader method)": [[251, "skia.Shader.asAGradient"]], "getflattenabletype() (shader method)": [[251, "skia.Shader.getFlattenableType"]], "gettypename() (shader method)": [[251, "skia.Shader.getTypeName"]], "isaimage() (shader method)": [[251, "skia.Shader.isAImage"]], "isopaque() (shader method)": [[251, "skia.Shader.isOpaque"]], "kcolorfilter_type (shader attribute)": [[251, "skia.Shader.kColorFilter_Type"]], "kcolor_gradienttype (shader attribute)": [[251, "skia.Shader.kColor_GradientType"]], "kconical_gradienttype (shader attribute)": [[251, "skia.Shader.kConical_GradientType"]], "kdrawlooper_type (shader attribute)": [[251, "skia.Shader.kDrawLooper_Type"]], "kdrawable_type (shader attribute)": [[251, "skia.Shader.kDrawable_Type"]], "kimagefilter_type (shader attribute)": [[251, "skia.Shader.kImageFilter_Type"]], "klast_gradienttype (shader attribute)": [[251, "skia.Shader.kLast_GradientType"]], "klinear_gradienttype (shader attribute)": [[251, "skia.Shader.kLinear_GradientType"]], "kmaskfilter_type (shader attribute)": [[251, "skia.Shader.kMaskFilter_Type"]], "knone_gradienttype (shader attribute)": [[251, "skia.Shader.kNone_GradientType"]], "kpatheffect_type (shader attribute)": [[251, "skia.Shader.kPathEffect_Type"]], "kpixelref_type (shader attribute)": [[251, "skia.Shader.kPixelRef_Type"]], "kradial_gradienttype (shader attribute)": [[251, "skia.Shader.kRadial_GradientType"]], "kshaderbase_type (shader attribute)": [[251, "skia.Shader.kShaderBase_Type"]], "ksweep_gradienttype (shader attribute)": [[251, "skia.Shader.kSweep_GradientType"]], "kunused_type (shader attribute)": [[251, "skia.Shader.kUnused_Type"]], "kunused_type2 (shader attribute)": [[251, "skia.Shader.kUnused_Type2"]], "kunused_type3 (shader attribute)": [[251, "skia.Shader.kUnused_Type3"]], "kunused_type4 (shader attribute)": [[251, "skia.Shader.kUnused_Type4"]], "makewithcolorfilter() (shader method)": [[251, "skia.Shader.makeWithColorFilter"]], "makewithlocalmatrix() (shader method)": [[251, "skia.Shader.makeWithLocalMatrix"]], "ref() (shader method)": [[251, "skia.Shader.ref"]], "serialize() (shader method)": [[251, "skia.Shader.serialize"]], "unique() (shader method)": [[251, "skia.Shader.unique"]], "unref() (shader method)": [[251, "skia.Shader.unref"]], "gradientinfo (class in skia.shader)": [[252, "skia.Shader.GradientInfo"]], "__init__() (gradientinfo method)": [[252, "skia.Shader.GradientInfo.__init__"]], "fcolorcount (gradientinfo attribute)": [[252, "skia.Shader.GradientInfo.fColorCount"]], "fcoloroffsets (gradientinfo attribute)": [[252, "skia.Shader.GradientInfo.fColorOffsets"]], "fcolors (gradientinfo attribute)": [[252, "skia.Shader.GradientInfo.fColors"]], "fgradientflags (gradientinfo attribute)": [[252, "skia.Shader.GradientInfo.fGradientFlags"]], "fpoint (gradientinfo attribute)": [[252, "skia.Shader.GradientInfo.fPoint"]], "fradius (gradientinfo attribute)": [[252, "skia.Shader.GradientInfo.fRadius"]], "ftilemode (gradientinfo attribute)": [[252, "skia.Shader.GradientInfo.fTileMode"]], "gradienttype (class in skia.shader)": [[253, "skia.Shader.GradientType"]], "__init__() (gradienttype method)": [[253, "skia.Shader.GradientType.__init__"]], "kcolor_gradienttype (gradienttype attribute)": [[253, "skia.Shader.GradientType.kColor_GradientType"]], "kconical_gradienttype (gradienttype attribute)": [[253, "skia.Shader.GradientType.kConical_GradientType"]], "klast_gradienttype (gradienttype attribute)": [[253, "skia.Shader.GradientType.kLast_GradientType"]], "klinear_gradienttype (gradienttype attribute)": [[253, "skia.Shader.GradientType.kLinear_GradientType"]], "knone_gradienttype (gradienttype attribute)": [[253, "skia.Shader.GradientType.kNone_GradientType"]], "kradial_gradienttype (gradienttype attribute)": [[253, "skia.Shader.GradientType.kRadial_GradientType"]], "ksweep_gradienttype (gradienttype attribute)": [[253, "skia.Shader.GradientType.kSweep_GradientType"]], "name (gradienttype attribute)": [[253, "skia.Shader.GradientType.name"]], "value (gradienttype attribute)": [[253, "skia.Shader.GradientType.value"]], "type (class in skia.shader)": [[254, "skia.Shader.Type"]], "make() (shadermaskfilter static method)": [[255, "skia.ShaderMaskFilter.Make"]], "shadermaskfilter (class in skia)": [[255, "skia.ShaderMaskFilter"]], "__init__() (shadermaskfilter method)": [[255, "skia.ShaderMaskFilter.__init__"]], "blend() (shaders static method)": [[256, "skia.Shaders.Blend"]], "color() (shaders static method)": [[256, "skia.Shaders.Color"]], "empty() (shaders static method)": [[256, "skia.Shaders.Empty"]], "lerp() (shaders static method)": [[256, "skia.Shaders.Lerp"]], "shaders (class in skia)": [[256, "skia.Shaders"]], "__init__() (shaders method)": [[256, "skia.Shaders.__init__"]], "make() (size static method)": [[257, "skia.Size.Make"]], "makeempty() (size static method)": [[257, "skia.Size.MakeEmpty"]], "size (class in skia)": [[257, "skia.Size"]], "__init__() (size method)": [[257, "skia.Size.__init__"]], "equals() (size method)": [[257, "skia.Size.equals"]], "fheight (size attribute)": [[257, "skia.Size.fHeight"]], "fwidth (size attribute)": [[257, "skia.Size.fWidth"]], "height() (size method)": [[257, "skia.Size.height"]], "isempty() (size method)": [[257, "skia.Size.isEmpty"]], "iszero() (size method)": [[257, "skia.Size.isZero"]], "set() (size method)": [[257, "skia.Size.set"]], "setempty() (size method)": [[257, "skia.Size.setEmpty"]], "toceil() (size method)": [[257, "skia.Size.toCeil"]], "tofloor() (size method)": [[257, "skia.Size.toFloor"]], "toround() (size method)": [[257, "skia.Size.toRound"]], "width() (size method)": [[257, "skia.Size.width"]], "makefromfile() (stream static method)": [[258, "skia.Stream.MakeFromFile"]], "stream (class in skia)": [[258, "skia.Stream"]], "__init__() (stream method)": [[258, "skia.Stream.__init__"]], "duplicate() (stream method)": [[258, "skia.Stream.duplicate"]], "fork() (stream method)": [[258, "skia.Stream.fork"]], "getlength() (stream method)": [[258, "skia.Stream.getLength"]], "getmemorybase() (stream method)": [[258, "skia.Stream.getMemoryBase"]], "getposition() (stream method)": [[258, "skia.Stream.getPosition"]], "haslength() (stream method)": [[258, "skia.Stream.hasLength"]], "hasposition() (stream method)": [[258, "skia.Stream.hasPosition"]], "isatend() (stream method)": [[258, "skia.Stream.isAtEnd"]], "move() (stream method)": [[258, "skia.Stream.move"]], "peek() (stream method)": [[258, "skia.Stream.peek"]], "read() (stream method)": [[258, "skia.Stream.read"]], "readbool() (stream method)": [[258, "skia.Stream.readBool"]], "readpackeduint() (stream method)": [[258, "skia.Stream.readPackedUInt"]], "reads16() (stream method)": [[258, "skia.Stream.readS16"]], "reads32() (stream method)": [[258, "skia.Stream.readS32"]], "reads8() (stream method)": [[258, "skia.Stream.readS8"]], "readscalar() (stream method)": [[258, "skia.Stream.readScalar"]], "readu16() (stream method)": [[258, "skia.Stream.readU16"]], "readu32() (stream method)": [[258, "skia.Stream.readU32"]], "readu8() (stream method)": [[258, "skia.Stream.readU8"]], "rewind() (stream method)": [[258, "skia.Stream.rewind"]], "seek() (stream method)": [[258, "skia.Stream.seek"]], "skip() (stream method)": [[258, "skia.Stream.skip"]], "makefromfile() (streamasset static method)": [[259, "skia.StreamAsset.MakeFromFile"]], "streamasset (class in skia)": [[259, "skia.StreamAsset"]], "__init__() (streamasset method)": [[259, "skia.StreamAsset.__init__"]], "duplicate() (streamasset method)": [[259, "skia.StreamAsset.duplicate"]], "fork() (streamasset method)": [[259, "skia.StreamAsset.fork"]], "getlength() (streamasset method)": [[259, "skia.StreamAsset.getLength"]], "getmemorybase() (streamasset method)": [[259, "skia.StreamAsset.getMemoryBase"]], "getposition() (streamasset method)": [[259, "skia.StreamAsset.getPosition"]], "haslength() (streamasset method)": [[259, "skia.StreamAsset.hasLength"]], "hasposition() (streamasset method)": [[259, "skia.StreamAsset.hasPosition"]], "isatend() (streamasset method)": [[259, "skia.StreamAsset.isAtEnd"]], "move() (streamasset method)": [[259, "skia.StreamAsset.move"]], "peek() (streamasset method)": [[259, "skia.StreamAsset.peek"]], "read() (streamasset method)": [[259, "skia.StreamAsset.read"]], "readbool() (streamasset method)": [[259, "skia.StreamAsset.readBool"]], "readpackeduint() (streamasset method)": [[259, "skia.StreamAsset.readPackedUInt"]], "reads16() (streamasset method)": [[259, "skia.StreamAsset.readS16"]], "reads32() (streamasset method)": [[259, "skia.StreamAsset.readS32"]], "reads8() (streamasset method)": [[259, "skia.StreamAsset.readS8"]], "readscalar() (streamasset method)": [[259, "skia.StreamAsset.readScalar"]], "readu16() (streamasset method)": [[259, "skia.StreamAsset.readU16"]], "readu32() (streamasset method)": [[259, "skia.StreamAsset.readU32"]], "readu8() (streamasset method)": [[259, "skia.StreamAsset.readU8"]], "rewind() (streamasset method)": [[259, "skia.StreamAsset.rewind"]], "seek() (streamasset method)": [[259, "skia.StreamAsset.seek"]], "skip() (streamasset method)": [[259, "skia.StreamAsset.skip"]], "makefromfile() (streammemory static method)": [[260, "skia.StreamMemory.MakeFromFile"]], "streammemory (class in skia)": [[260, "skia.StreamMemory"]], "__init__() (streammemory method)": [[260, "skia.StreamMemory.__init__"]], "duplicate() (streammemory method)": [[260, "skia.StreamMemory.duplicate"]], "fork() (streammemory method)": [[260, "skia.StreamMemory.fork"]], "getlength() (streammemory method)": [[260, "skia.StreamMemory.getLength"]], "getmemorybase() (streammemory method)": [[260, "skia.StreamMemory.getMemoryBase"]], "getposition() (streammemory method)": [[260, "skia.StreamMemory.getPosition"]], "haslength() (streammemory method)": [[260, "skia.StreamMemory.hasLength"]], "hasposition() (streammemory method)": [[260, "skia.StreamMemory.hasPosition"]], "isatend() (streammemory method)": [[260, "skia.StreamMemory.isAtEnd"]], "move() (streammemory method)": [[260, "skia.StreamMemory.move"]], "peek() (streammemory method)": [[260, "skia.StreamMemory.peek"]], "read() (streammemory method)": [[260, "skia.StreamMemory.read"]], "readbool() (streammemory method)": [[260, "skia.StreamMemory.readBool"]], "readpackeduint() (streammemory method)": [[260, "skia.StreamMemory.readPackedUInt"]], "reads16() (streammemory method)": [[260, "skia.StreamMemory.readS16"]], "reads32() (streammemory method)": [[260, "skia.StreamMemory.readS32"]], "reads8() (streammemory method)": [[260, "skia.StreamMemory.readS8"]], "readscalar() (streammemory method)": [[260, "skia.StreamMemory.readScalar"]], "readu16() (streammemory method)": [[260, "skia.StreamMemory.readU16"]], "readu32() (streammemory method)": [[260, "skia.StreamMemory.readU32"]], "readu8() (streammemory method)": [[260, "skia.StreamMemory.readU8"]], "rewind() (streammemory method)": [[260, "skia.StreamMemory.rewind"]], "seek() (streammemory method)": [[260, "skia.StreamMemory.seek"]], "skip() (streammemory method)": [[260, "skia.StreamMemory.skip"]], "makefromfile() (streamrewindable static method)": [[261, "skia.StreamRewindable.MakeFromFile"]], "streamrewindable (class in skia)": [[261, "skia.StreamRewindable"]], "__init__() (streamrewindable method)": [[261, "skia.StreamRewindable.__init__"]], "duplicate() (streamrewindable method)": [[261, "skia.StreamRewindable.duplicate"]], "fork() (streamrewindable method)": [[261, "skia.StreamRewindable.fork"]], "getlength() (streamrewindable method)": [[261, "skia.StreamRewindable.getLength"]], "getmemorybase() (streamrewindable method)": [[261, "skia.StreamRewindable.getMemoryBase"]], "getposition() (streamrewindable method)": [[261, "skia.StreamRewindable.getPosition"]], "haslength() (streamrewindable method)": [[261, "skia.StreamRewindable.hasLength"]], "hasposition() (streamrewindable method)": [[261, "skia.StreamRewindable.hasPosition"]], "isatend() (streamrewindable method)": [[261, "skia.StreamRewindable.isAtEnd"]], "move() (streamrewindable method)": [[261, "skia.StreamRewindable.move"]], "peek() (streamrewindable method)": [[261, "skia.StreamRewindable.peek"]], "read() (streamrewindable method)": [[261, "skia.StreamRewindable.read"]], "readbool() (streamrewindable method)": [[261, "skia.StreamRewindable.readBool"]], "readpackeduint() (streamrewindable method)": [[261, "skia.StreamRewindable.readPackedUInt"]], "reads16() (streamrewindable method)": [[261, "skia.StreamRewindable.readS16"]], "reads32() (streamrewindable method)": [[261, "skia.StreamRewindable.readS32"]], "reads8() (streamrewindable method)": [[261, "skia.StreamRewindable.readS8"]], "readscalar() (streamrewindable method)": [[261, "skia.StreamRewindable.readScalar"]], "readu16() (streamrewindable method)": [[261, "skia.StreamRewindable.readU16"]], "readu32() (streamrewindable method)": [[261, "skia.StreamRewindable.readU32"]], "readu8() (streamrewindable method)": [[261, "skia.StreamRewindable.readU8"]], "rewind() (streamrewindable method)": [[261, "skia.StreamRewindable.rewind"]], "seek() (streamrewindable method)": [[261, "skia.StreamRewindable.seek"]], "skip() (streamrewindable method)": [[261, "skia.StreamRewindable.skip"]], "makefromfile() (streamseekable static method)": [[262, "skia.StreamSeekable.MakeFromFile"]], "streamseekable (class in skia)": [[262, "skia.StreamSeekable"]], "__init__() (streamseekable method)": [[262, "skia.StreamSeekable.__init__"]], "duplicate() (streamseekable method)": [[262, "skia.StreamSeekable.duplicate"]], "fork() (streamseekable method)": [[262, "skia.StreamSeekable.fork"]], "getlength() (streamseekable method)": [[262, "skia.StreamSeekable.getLength"]], "getmemorybase() (streamseekable method)": [[262, "skia.StreamSeekable.getMemoryBase"]], "getposition() (streamseekable method)": [[262, "skia.StreamSeekable.getPosition"]], "haslength() (streamseekable method)": [[262, "skia.StreamSeekable.hasLength"]], "hasposition() (streamseekable method)": [[262, "skia.StreamSeekable.hasPosition"]], "isatend() (streamseekable method)": [[262, "skia.StreamSeekable.isAtEnd"]], "move() (streamseekable method)": [[262, "skia.StreamSeekable.move"]], "peek() (streamseekable method)": [[262, "skia.StreamSeekable.peek"]], "read() (streamseekable method)": [[262, "skia.StreamSeekable.read"]], "readbool() (streamseekable method)": [[262, "skia.StreamSeekable.readBool"]], "readpackeduint() (streamseekable method)": [[262, "skia.StreamSeekable.readPackedUInt"]], "reads16() (streamseekable method)": [[262, "skia.StreamSeekable.readS16"]], "reads32() (streamseekable method)": [[262, "skia.StreamSeekable.readS32"]], "reads8() (streamseekable method)": [[262, "skia.StreamSeekable.readS8"]], "readscalar() (streamseekable method)": [[262, "skia.StreamSeekable.readScalar"]], "readu16() (streamseekable method)": [[262, "skia.StreamSeekable.readU16"]], "readu32() (streamseekable method)": [[262, "skia.StreamSeekable.readU32"]], "readu8() (streamseekable method)": [[262, "skia.StreamSeekable.readU8"]], "rewind() (streamseekable method)": [[262, "skia.StreamSeekable.rewind"]], "seek() (streamseekable method)": [[262, "skia.StreamSeekable.seek"]], "skip() (streamseekable method)": [[262, "skia.StreamSeekable.skip"]], "string (class in skia)": [[263, "skia.String"]], "__init__() (string method)": [[263, "skia.String.__init__"]], "append() (string method)": [[263, "skia.String.append"]], "appendhex() (string method)": [[263, "skia.String.appendHex"]], "appends32() (string method)": [[263, "skia.String.appendS32"]], "appends64() (string method)": [[263, "skia.String.appendS64"]], "appendscalar() (string method)": [[263, "skia.String.appendScalar"]], "appendu32() (string method)": [[263, "skia.String.appendU32"]], "appendu64() (string method)": [[263, "skia.String.appendU64"]], "appendunichar() (string method)": [[263, "skia.String.appendUnichar"]], "c_str() (string method)": [[263, "skia.String.c_str"]], "contains() (string method)": [[263, "skia.String.contains"]], "endswith() (string method)": [[263, "skia.String.endsWith"]], "equals() (string method)": [[263, "skia.String.equals"]], "find() (string method)": [[263, "skia.String.find"]], "findlastof() (string method)": [[263, "skia.String.findLastOf"]], "insert() (string method)": [[263, "skia.String.insert"]], "inserthex() (string method)": [[263, "skia.String.insertHex"]], "inserts32() (string method)": [[263, "skia.String.insertS32"]], "inserts64() (string method)": [[263, "skia.String.insertS64"]], "insertscalar() (string method)": [[263, "skia.String.insertScalar"]], "insertu32() (string method)": [[263, "skia.String.insertU32"]], "insertu64() (string method)": [[263, "skia.String.insertU64"]], "insertunichar() (string method)": [[263, "skia.String.insertUnichar"]], "isempty() (string method)": [[263, "skia.String.isEmpty"]], "prepend() (string method)": [[263, "skia.String.prepend"]], "prependhex() (string method)": [[263, "skia.String.prependHex"]], "prepends32() (string method)": [[263, "skia.String.prependS32"]], "prepends64() (string method)": [[263, "skia.String.prependS64"]], "prependscalar() (string method)": [[263, "skia.String.prependScalar"]], "prependunichar() (string method)": [[263, "skia.String.prependUnichar"]], "remove() (string method)": [[263, "skia.String.remove"]], "reset() (string method)": [[263, "skia.String.reset"]], "resize() (string method)": [[263, "skia.String.resize"]], "set() (string method)": [[263, "skia.String.set"]], "size() (string method)": [[263, "skia.String.size"]], "startswith() (string method)": [[263, "skia.String.startsWith"]], "swap() (string method)": [[263, "skia.String.swap"]], "make() (strokepatheffect static method)": [[264, "skia.StrokePathEffect.Make"]], "strokepatheffect (class in skia)": [[264, "skia.StrokePathEffect"]], "__init__() (strokepatheffect method)": [[264, "skia.StrokePathEffect.__init__"]], "getinflationradius() (strokerec static method)": [[265, "skia.StrokeRec.GetInflationRadius"]], "strokerec (class in skia)": [[265, "skia.StrokeRec"]], "__init__() (strokerec method)": [[265, "skia.StrokeRec.__init__"]], "applytopaint() (strokerec method)": [[265, "skia.StrokeRec.applyToPaint"]], "applytopath() (strokerec method)": [[265, "skia.StrokeRec.applyToPath"]], "getcap() (strokerec method)": [[265, "skia.StrokeRec.getCap"]], "getinflationradius() (strokerec method)": [[265, "skia.StrokeRec.getInflationRadius"]], "getjoin() (strokerec method)": [[265, "skia.StrokeRec.getJoin"]], "getmiter() (strokerec method)": [[265, "skia.StrokeRec.getMiter"]], "getresscale() (strokerec method)": [[265, "skia.StrokeRec.getResScale"]], "getstyle() (strokerec method)": [[265, "skia.StrokeRec.getStyle"]], "getwidth() (strokerec method)": [[265, "skia.StrokeRec.getWidth"]], "hasequaleffect() (strokerec method)": [[265, "skia.StrokeRec.hasEqualEffect"]], "isfillstyle() (strokerec method)": [[265, "skia.StrokeRec.isFillStyle"]], "ishairlinestyle() (strokerec method)": [[265, "skia.StrokeRec.isHairlineStyle"]], "kfill_initstyle (strokerec attribute)": [[265, "skia.StrokeRec.kFill_InitStyle"]], "kfill_style (strokerec attribute)": [[265, "skia.StrokeRec.kFill_Style"]], "khairline_initstyle (strokerec attribute)": [[265, "skia.StrokeRec.kHairline_InitStyle"]], "khairline_style (strokerec attribute)": [[265, "skia.StrokeRec.kHairline_Style"]], "kstrokeandfill_style (strokerec attribute)": [[265, "skia.StrokeRec.kStrokeAndFill_Style"]], "kstroke_style (strokerec attribute)": [[265, "skia.StrokeRec.kStroke_Style"]], "kstylecount (strokerec attribute)": [[265, "skia.StrokeRec.kStyleCount"]], "needtoapply() (strokerec method)": [[265, "skia.StrokeRec.needToApply"]], "setfillstyle() (strokerec method)": [[265, "skia.StrokeRec.setFillStyle"]], "sethairlinestyle() (strokerec method)": [[265, "skia.StrokeRec.setHairlineStyle"]], "setresscale() (strokerec method)": [[265, "skia.StrokeRec.setResScale"]], "setstrokeparams() (strokerec method)": [[265, "skia.StrokeRec.setStrokeParams"]], "setstrokestyle() (strokerec method)": [[265, "skia.StrokeRec.setStrokeStyle"]], "initstyle (class in skia.strokerec)": [[266, "skia.StrokeRec.InitStyle"]], "__init__() (initstyle method)": [[266, "skia.StrokeRec.InitStyle.__init__"]], "kfill_initstyle (initstyle attribute)": [[266, "skia.StrokeRec.InitStyle.kFill_InitStyle"]], "khairline_initstyle (initstyle attribute)": [[266, "skia.StrokeRec.InitStyle.kHairline_InitStyle"]], "name (initstyle attribute)": [[266, "skia.StrokeRec.InitStyle.name"]], "value (initstyle attribute)": [[266, "skia.StrokeRec.InitStyle.value"]], "style (class in skia.strokerec)": [[267, "skia.StrokeRec.Style"]], "khairline_style (style attribute)": [[267, "skia.StrokeRec.Style.kHairline_Style"]], "makefrombackendrendertarget() (surface static method)": [[268, "skia.Surface.MakeFromBackendRenderTarget"]], "makefrombackendtexture() (surface static method)": [[268, "skia.Surface.MakeFromBackendTexture"]], "makenull() (surface static method)": [[268, "skia.Surface.MakeNull"]], "makeraster() (surface static method)": [[268, "skia.Surface.MakeRaster"]], "makerasterdirect() (surface static method)": [[268, "skia.Surface.MakeRasterDirect"]], "makerastern32premul() (surface static method)": [[268, "skia.Surface.MakeRasterN32Premul"]], "makerendertarget() (surface static method)": [[268, "skia.Surface.MakeRenderTarget"]], "surface (class in skia)": [[268, "skia.Surface"]], "__init__() (surface method)": [[268, "skia.Surface.__init__"]], "asyncrescaleandreadpixels() (surface method)": [[268, "skia.Surface.asyncRescaleAndReadPixels"]], "asyncrescaleandreadpixelsyuv420() (surface method)": [[268, "skia.Surface.asyncRescaleAndReadPixelsYUV420"]], "characterize() (surface method)": [[268, "skia.Surface.characterize"]], "draw() (surface method)": [[268, "skia.Surface.draw"]], "flush() (surface method)": [[268, "skia.Surface.flush"]], "flushandsubmit() (surface method)": [[268, "skia.Surface.flushAndSubmit"]], "generationid() (surface method)": [[268, "skia.Surface.generationID"]], "getbackendrendertarget() (surface method)": [[268, "skia.Surface.getBackendRenderTarget"]], "getbackendtexture() (surface method)": [[268, "skia.Surface.getBackendTexture"]], "getcanvas() (surface method)": [[268, "skia.Surface.getCanvas"]], "height() (surface method)": [[268, "skia.Surface.height"]], "imageinfo() (surface method)": [[268, "skia.Surface.imageInfo"]], "iscompatible() (surface method)": [[268, "skia.Surface.isCompatible"]], "kdiscardwrite_backendhandleaccess (surface attribute)": [[268, "skia.Surface.kDiscardWrite_BackendHandleAccess"]], "kdiscard_contentchangemode (surface attribute)": [[268, "skia.Surface.kDiscard_ContentChangeMode"]], "kflushread_backendhandleaccess (surface attribute)": [[268, "skia.Surface.kFlushRead_BackendHandleAccess"]], "kflushwrite_backendhandleaccess (surface attribute)": [[268, "skia.Surface.kFlushWrite_BackendHandleAccess"]], "klinear (surface attribute)": [[268, "skia.Surface.kLinear"]], "knoaccess (surface attribute)": [[268, "skia.Surface.kNoAccess"]], "kpresent (surface attribute)": [[268, "skia.Surface.kPresent"]], "kretain_contentchangemode (surface attribute)": [[268, "skia.Surface.kRetain_ContentChangeMode"]], "ksrc (surface attribute)": [[268, "skia.Surface.kSrc"]], "makeimagesnapshot() (surface method)": [[268, "skia.Surface.makeImageSnapshot"]], "makesurface() (surface method)": [[268, "skia.Surface.makeSurface"]], "notifycontentwillchange() (surface method)": [[268, "skia.Surface.notifyContentWillChange"]], "peekpixels() (surface method)": [[268, "skia.Surface.peekPixels"]], "props() (surface method)": [[268, "skia.Surface.props"]], "readpixels() (surface method)": [[268, "skia.Surface.readPixels"]], "recordingcontext() (surface method)": [[268, "skia.Surface.recordingContext"]], "ref() (surface method)": [[268, "skia.Surface.ref"]], "replacebackendtexture() (surface method)": [[268, "skia.Surface.replaceBackendTexture"]], "toarray() (surface method)": [[268, "skia.Surface.toarray"]], "unique() (surface method)": [[268, "skia.Surface.unique"]], "unref() (surface method)": [[268, "skia.Surface.unref"]], "width() (surface method)": [[268, "skia.Surface.width"]], "writepixels() (surface method)": [[268, "skia.Surface.writePixels"]], "asyncreadresult (class in skia.surface)": [[269, "skia.Surface.AsyncReadResult"]], "__init__() (asyncreadresult method)": [[269, "skia.Surface.AsyncReadResult.__init__"]], "count() (asyncreadresult method)": [[269, "skia.Surface.AsyncReadResult.count"]], "data() (asyncreadresult method)": [[269, "skia.Surface.AsyncReadResult.data"]], "rowbytes() (asyncreadresult method)": [[269, "skia.Surface.AsyncReadResult.rowBytes"]], "backendhandleaccess (class in skia.surface)": [[270, "skia.Surface.BackendHandleAccess"]], "__init__() (backendhandleaccess method)": [[270, "skia.Surface.BackendHandleAccess.__init__"]], "kdiscardwrite_backendhandleaccess (backendhandleaccess attribute)": [[270, "skia.Surface.BackendHandleAccess.kDiscardWrite_BackendHandleAccess"]], "kflushread_backendhandleaccess (backendhandleaccess attribute)": [[270, "skia.Surface.BackendHandleAccess.kFlushRead_BackendHandleAccess"]], "kflushwrite_backendhandleaccess (backendhandleaccess attribute)": [[270, "skia.Surface.BackendHandleAccess.kFlushWrite_BackendHandleAccess"]], "name (backendhandleaccess attribute)": [[270, "skia.Surface.BackendHandleAccess.name"]], "value (backendhandleaccess attribute)": [[270, "skia.Surface.BackendHandleAccess.value"]], "backendsurfaceaccess (class in skia.surface)": [[271, "skia.Surface.BackendSurfaceAccess"]], "__init__() (backendsurfaceaccess method)": [[271, "skia.Surface.BackendSurfaceAccess.__init__"]], "knoaccess (backendsurfaceaccess attribute)": [[271, "skia.Surface.BackendSurfaceAccess.kNoAccess"]], "kpresent (backendsurfaceaccess attribute)": [[271, "skia.Surface.BackendSurfaceAccess.kPresent"]], "name (backendsurfaceaccess attribute)": [[271, "skia.Surface.BackendSurfaceAccess.name"]], "value (backendsurfaceaccess attribute)": [[271, "skia.Surface.BackendSurfaceAccess.value"]], "contentchangemode (class in skia.surface)": [[272, "skia.Surface.ContentChangeMode"]], "__init__() (contentchangemode method)": [[272, "skia.Surface.ContentChangeMode.__init__"]], "kdiscard_contentchangemode (contentchangemode attribute)": [[272, "skia.Surface.ContentChangeMode.kDiscard_ContentChangeMode"]], "kretain_contentchangemode (contentchangemode attribute)": [[272, "skia.Surface.ContentChangeMode.kRetain_ContentChangeMode"]], "name (contentchangemode attribute)": [[272, "skia.Surface.ContentChangeMode.name"]], "value (contentchangemode attribute)": [[272, "skia.Surface.ContentChangeMode.value"]], "rescalegamma (class in skia.surface)": [[273, "skia.Surface.RescaleGamma"]], "__init__() (rescalegamma method)": [[273, "skia.Surface.RescaleGamma.__init__"]], "klinear (rescalegamma attribute)": [[273, "skia.Surface.RescaleGamma.kLinear"]], "ksrc (rescalegamma attribute)": [[273, "skia.Surface.RescaleGamma.kSrc"]], "name (rescalegamma attribute)": [[273, "skia.Surface.RescaleGamma.name"]], "value (rescalegamma attribute)": [[273, "skia.Surface.RescaleGamma.value"]], "surfacecharacterization (class in skia)": [[274, "skia.SurfaceCharacterization"]], "__init__() (surfacecharacterization method)": [[274, "skia.SurfaceCharacterization.__init__"]], "cachemaxresourcebytes() (surfacecharacterization method)": [[274, "skia.SurfaceCharacterization.cacheMaxResourceBytes"]], "colorspace() (surfacecharacterization method)": [[274, "skia.SurfaceCharacterization.colorSpace"]], "createbackendformat() (surfacecharacterization method)": [[274, "skia.SurfaceCharacterization.createBackendFormat"]], "createcolorspace() (surfacecharacterization method)": [[274, "skia.SurfaceCharacterization.createColorSpace"]], "createfbo0() (surfacecharacterization method)": [[274, "skia.SurfaceCharacterization.createFBO0"]], "createresized() (surfacecharacterization method)": [[274, "skia.SurfaceCharacterization.createResized"]], "height() (surfacecharacterization method)": [[274, "skia.SurfaceCharacterization.height"]], "ismipmapped() (surfacecharacterization method)": [[274, "skia.SurfaceCharacterization.isMipMapped"]], "istextureable() (surfacecharacterization method)": [[274, "skia.SurfaceCharacterization.isTextureable"]], "isvalid() (surfacecharacterization method)": [[274, "skia.SurfaceCharacterization.isValid"]], "refcolorspace() (surfacecharacterization method)": [[274, "skia.SurfaceCharacterization.refColorSpace"]], "surfaceprops() (surfacecharacterization method)": [[274, "skia.SurfaceCharacterization.surfaceProps"]], "usesglfbo0() (surfacecharacterization method)": [[274, "skia.SurfaceCharacterization.usesGLFBO0"]], "vulkansecondarycbcompatible() (surfacecharacterization method)": [[274, "skia.SurfaceCharacterization.vulkanSecondaryCBCompatible"]], "width() (surfacecharacterization method)": [[274, "skia.SurfaceCharacterization.width"]], "surfaceprops (class in skia)": [[275, "skia.SurfaceProps"]], "__init__() (surfaceprops method)": [[275, "skia.SurfaceProps.__init__"]], "flags() (surfaceprops method)": [[275, "skia.SurfaceProps.flags"]], "isusedeviceindependentfonts() (surfaceprops method)": [[275, "skia.SurfaceProps.isUseDeviceIndependentFonts"]], "klegacyfonthost_inittype (surfaceprops attribute)": [[275, "skia.SurfaceProps.kLegacyFontHost_InitType"]], "kusedeviceindependentfonts_flag (surfaceprops attribute)": [[275, "skia.SurfaceProps.kUseDeviceIndependentFonts_Flag"]], "kusedistancefieldfonts_flag (surfaceprops attribute)": [[275, "skia.SurfaceProps.kUseDistanceFieldFonts_Flag"]], "pixelgeometry() (surfaceprops method)": [[275, "skia.SurfaceProps.pixelGeometry"]], "flags (class in skia.surfaceprops)": [[276, "skia.SurfaceProps.Flags"]], "kusedeviceindependentfonts_flag (flags attribute)": [[276, "skia.SurfaceProps.Flags.kUseDeviceIndependentFonts_Flag"]], "inittype (class in skia.surfaceprops)": [[277, "skia.SurfaceProps.InitType"]], "__init__() (inittype method)": [[277, "skia.SurfaceProps.InitType.__init__"]], "klegacyfonthost_inittype (inittype attribute)": [[277, "skia.SurfaceProps.InitType.kLegacyFontHost_InitType"]], "name (inittype attribute)": [[277, "skia.SurfaceProps.InitType.name"]], "value (inittype attribute)": [[277, "skia.SurfaceProps.InitType.value"]], "make() (tablecolorfilter static method)": [[278, "skia.TableColorFilter.Make"]], "makeargb() (tablecolorfilter static method)": [[278, "skia.TableColorFilter.MakeARGB"]], "tablecolorfilter (class in skia)": [[278, "skia.TableColorFilter"]], "__init__() (tablecolorfilter method)": [[278, "skia.TableColorFilter.__init__"]], "create() (tablemaskfilter static method)": [[279, "skia.TableMaskFilter.Create"]], "createclip() (tablemaskfilter static method)": [[279, "skia.TableMaskFilter.CreateClip"]], "creategamma() (tablemaskfilter static method)": [[279, "skia.TableMaskFilter.CreateGamma"]], "makecliptable() (tablemaskfilter static method)": [[279, "skia.TableMaskFilter.MakeClipTable"]], "makegammatable() (tablemaskfilter static method)": [[279, "skia.TableMaskFilter.MakeGammaTable"]], "tablemaskfilter (class in skia)": [[279, "skia.TableMaskFilter"]], "__init__() (tablemaskfilter method)": [[279, "skia.TableMaskFilter.__init__"]], "deserialize() (textblob static method)": [[280, "skia.TextBlob.Deserialize"]], "makefrompostext() (textblob static method)": [[280, "skia.TextBlob.MakeFromPosText"]], "makefrompostexth() (textblob static method)": [[280, "skia.TextBlob.MakeFromPosTextH"]], "makefromrsxform() (textblob static method)": [[280, "skia.TextBlob.MakeFromRSXform"]], "makefromstring() (textblob static method)": [[280, "skia.TextBlob.MakeFromString"]], "makefromtext() (textblob static method)": [[280, "skia.TextBlob.MakeFromText"]], "textblob (class in skia)": [[280, "skia.TextBlob"]], "__init__() (textblob method)": [[280, "skia.TextBlob.__init__"]], "bounds() (textblob method)": [[280, "skia.TextBlob.bounds"]], "deref() (textblob method)": [[280, "skia.TextBlob.deref"]], "getintercepts() (textblob method)": [[280, "skia.TextBlob.getIntercepts"]], "ref() (textblob method)": [[280, "skia.TextBlob.ref"]], "refcntgreaterthan() (textblob method)": [[280, "skia.TextBlob.refCntGreaterThan"]], "serialize() (textblob method)": [[280, "skia.TextBlob.serialize"]], "unique() (textblob method)": [[280, "skia.TextBlob.unique"]], "uniqueid() (textblob method)": [[280, "skia.TextBlob.uniqueID"]], "unref() (textblob method)": [[280, "skia.TextBlob.unref"]], "iter (class in skia.textblob)": [[281, "skia.TextBlob.Iter"]], "run (class in skia.textblob.iter)": [[282, "skia.TextBlob.Iter.Run"]], "__init__() (run method)": [[282, "skia.TextBlob.Iter.Run.__init__"]], "fglyphcount (run attribute)": [[282, "skia.TextBlob.Iter.Run.fGlyphCount"]], "fglyphindices (run attribute)": [[282, "skia.TextBlob.Iter.Run.fGlyphIndices"]], "ftypeface (run attribute)": [[282, "skia.TextBlob.Iter.Run.fTypeface"]], "textblobbuilder (class in skia)": [[283, "skia.TextBlobBuilder"]], "__init__() (textblobbuilder method)": [[283, "skia.TextBlobBuilder.__init__"]], "allocrun() (textblobbuilder method)": [[283, "skia.TextBlobBuilder.allocRun"]], "allocrunpos() (textblobbuilder method)": [[283, "skia.TextBlobBuilder.allocRunPos"]], "allocrunposh() (textblobbuilder method)": [[283, "skia.TextBlobBuilder.allocRunPosH"]], "allocrunrsxform() (textblobbuilder method)": [[283, "skia.TextBlobBuilder.allocRunRSXform"]], "make() (textblobbuilder method)": [[283, "skia.TextBlobBuilder.make"]], "textencoding (class in skia)": [[284, "skia.TextEncoding"]], "__init__() (textencoding method)": [[284, "skia.TextEncoding.__init__"]], "kglyphid (textencoding attribute)": [[284, "skia.TextEncoding.kGlyphID"]], "kutf16 (textencoding attribute)": [[284, "skia.TextEncoding.kUTF16"]], "kutf32 (textencoding attribute)": [[284, "skia.TextEncoding.kUTF32"]], "kutf8 (textencoding attribute)": [[284, "skia.TextEncoding.kUTF8"]], "name (textencoding attribute)": [[284, "skia.TextEncoding.name"]], "value (textencoding attribute)": [[284, "skia.TextEncoding.value"]], "make() (tileimagefilter static method)": [[285, "skia.TileImageFilter.Make"]], "tileimagefilter (class in skia)": [[285, "skia.TileImageFilter"]], "__init__() (tileimagefilter method)": [[285, "skia.TileImageFilter.__init__"]], "tilemode (class in skia)": [[286, "skia.TileMode"]], "kclamp (tilemode attribute)": [[286, "skia.TileMode.kClamp"]], "kdecal (tilemode attribute)": [[286, "skia.TileMode.kDecal"]], "klasttilemode (tilemode attribute)": [[286, "skia.TileMode.kLastTileMode"]], "kmirror (tilemode attribute)": [[286, "skia.TileMode.kMirror"]], "krepeat (tilemode attribute)": [[286, "skia.TileMode.kRepeat"]], "make() (trimpatheffect static method)": [[287, "skia.TrimPathEffect.Make"]], "trimpatheffect (class in skia)": [[287, "skia.TrimPathEffect"]], "__init__() (trimpatheffect method)": [[287, "skia.TrimPathEffect.__init__"]], "kinverted (trimpatheffect attribute)": [[287, "skia.TrimPathEffect.kInverted"]], "knormal (trimpatheffect attribute)": [[287, "skia.TrimPathEffect.kNormal"]], "mode (class in skia.trimpatheffect)": [[288, "skia.TrimPathEffect.Mode"]], "__init__() (mode method)": [[288, "skia.TrimPathEffect.Mode.__init__"]], "kinverted (mode attribute)": [[288, "skia.TrimPathEffect.Mode.kInverted"]], "knormal (mode attribute)": [[288, "skia.TrimPathEffect.Mode.kNormal"]], "name (mode attribute)": [[288, "skia.TrimPathEffect.Mode.name"]], "value (mode attribute)": [[288, "skia.TrimPathEffect.Mode.value"]], "equal() (typeface static method)": [[289, "skia.Typeface.Equal"]], "makedefault() (typeface static method)": [[289, "skia.Typeface.MakeDefault"]], "makedeserialize() (typeface static method)": [[289, "skia.Typeface.MakeDeserialize"]], "makefromdata() (typeface static method)": [[289, "skia.Typeface.MakeFromData"]], "makefromfile() (typeface static method)": [[289, "skia.Typeface.MakeFromFile"]], "makefromname() (typeface static method)": [[289, "skia.Typeface.MakeFromName"]], "typeface (class in skia)": [[289, "skia.Typeface"]], "uniqueid() (typeface static method)": [[289, "skia.Typeface.UniqueID"]], "__init__() (typeface method)": [[289, "skia.Typeface.__init__"]], "copytabledata() (typeface method)": [[289, "skia.Typeface.copyTableData"]], "countglyphs() (typeface method)": [[289, "skia.Typeface.countGlyphs"]], "counttables() (typeface method)": [[289, "skia.Typeface.countTables"]], "fontstyle() (typeface method)": [[289, "skia.Typeface.fontStyle"]], "getbounds() (typeface method)": [[289, "skia.Typeface.getBounds"]], "getfamilyname() (typeface method)": [[289, "skia.Typeface.getFamilyName"]], "getfamilynames() (typeface method)": [[289, "skia.Typeface.getFamilyNames"]], "getkerningpairadjustments() (typeface method)": [[289, "skia.Typeface.getKerningPairAdjustments"]], "getpostscriptname() (typeface method)": [[289, "skia.Typeface.getPostScriptName"]], "gettabledata() (typeface method)": [[289, "skia.Typeface.getTableData"]], "gettablesize() (typeface method)": [[289, "skia.Typeface.getTableSize"]], "gettabletags() (typeface method)": [[289, "skia.Typeface.getTableTags"]], "getunitsperem() (typeface method)": [[289, "skia.Typeface.getUnitsPerEm"]], "getvariationdesignparameters() (typeface method)": [[289, "skia.Typeface.getVariationDesignParameters"]], "getvariationdesignposition() (typeface method)": [[289, "skia.Typeface.getVariationDesignPosition"]], "isbold() (typeface method)": [[289, "skia.Typeface.isBold"]], "isfixedpitch() (typeface method)": [[289, "skia.Typeface.isFixedPitch"]], "isitalic() (typeface method)": [[289, "skia.Typeface.isItalic"]], "kdoincludedata (typeface attribute)": [[289, "skia.Typeface.kDoIncludeData"]], "kdontincludedata (typeface attribute)": [[289, "skia.Typeface.kDontIncludeData"]], "kincludedataiflocal (typeface attribute)": [[289, "skia.Typeface.kIncludeDataIfLocal"]], "makeclone() (typeface method)": [[289, "skia.Typeface.makeClone"]], "ref() (typeface method)": [[289, "skia.Typeface.ref"]], "serialize() (typeface method)": [[289, "skia.Typeface.serialize"]], "unichartoglyph() (typeface method)": [[289, "skia.Typeface.unicharToGlyph"]], "unicharstoglyphs() (typeface method)": [[289, "skia.Typeface.unicharsToGlyphs"]], "unique() (typeface method)": [[289, "skia.Typeface.unique"]], "uniqueid() (typeface method)": [[289, "skia.Typeface.uniqueID"]], "unref() (typeface method)": [[289, "skia.Typeface.unref"]], "serializebehavior (class in skia.typeface)": [[290, "skia.Typeface.SerializeBehavior"]], "__init__() (serializebehavior method)": [[290, "skia.Typeface.SerializeBehavior.__init__"]], "kdoincludedata (serializebehavior attribute)": [[290, "skia.Typeface.SerializeBehavior.kDoIncludeData"]], "kdontincludedata (serializebehavior attribute)": [[290, "skia.Typeface.SerializeBehavior.kDontIncludeData"]], "kincludedataiflocal (serializebehavior attribute)": [[290, "skia.Typeface.SerializeBehavior.kIncludeDataIfLocal"]], "name (serializebehavior attribute)": [[290, "skia.Typeface.SerializeBehavior.name"]], "value (serializebehavior attribute)": [[290, "skia.Typeface.SerializeBehavior.value"]], "makecopy() (vertices static method)": [[291, "skia.Vertices.MakeCopy"]], "vertices (class in skia)": [[291, "skia.Vertices"]], "__init__() (vertices method)": [[291, "skia.Vertices.__init__"]], "approximatesize() (vertices method)": [[291, "skia.Vertices.approximateSize"]], "bounds() (vertices method)": [[291, "skia.Vertices.bounds"]], "deref() (vertices method)": [[291, "skia.Vertices.deref"]], "klast_vertexmode (vertices attribute)": [[291, "skia.Vertices.kLast_VertexMode"]], "ktrianglefan_vertexmode (vertices attribute)": [[291, "skia.Vertices.kTriangleFan_VertexMode"]], "ktrianglestrip_vertexmode (vertices attribute)": [[291, "skia.Vertices.kTriangleStrip_VertexMode"]], "ktriangles_vertexmode (vertices attribute)": [[291, "skia.Vertices.kTriangles_VertexMode"]], "ref() (vertices method)": [[291, "skia.Vertices.ref"]], "refcntgreaterthan() (vertices method)": [[291, "skia.Vertices.refCntGreaterThan"]], "unique() (vertices method)": [[291, "skia.Vertices.unique"]], "uniqueid() (vertices method)": [[291, "skia.Vertices.uniqueID"]], "unref() (vertices method)": [[291, "skia.Vertices.unref"]], "vertexmode (class in skia.vertices)": [[292, "skia.Vertices.VertexMode"]], "__init__() (vertexmode method)": [[292, "skia.Vertices.VertexMode.__init__"]], "klast_vertexmode (vertexmode attribute)": [[292, "skia.Vertices.VertexMode.kLast_VertexMode"]], "ktrianglefan_vertexmode (vertexmode attribute)": [[292, "skia.Vertices.VertexMode.kTriangleFan_VertexMode"]], "ktrianglestrip_vertexmode (vertexmode attribute)": [[292, "skia.Vertices.VertexMode.kTriangleStrip_VertexMode"]], "ktriangles_vertexmode (vertexmode attribute)": [[292, "skia.Vertices.VertexMode.kTriangles_VertexMode"]], "name (vertexmode attribute)": [[292, "skia.Vertices.VertexMode.name"]], "value (vertexmode attribute)": [[292, "skia.Vertices.VertexMode.value"]], "vkformat (class in skia)": [[293, "skia.VkFormat"]], "__init__() (vkformat method)": [[293, "skia.VkFormat.__init__"]], "name (vkformat attribute)": [[293, "skia.VkFormat.name"]], "value (vkformat attribute)": [[293, "skia.VkFormat.value"]], "vkimagelayout (class in skia)": [[294, "skia.VkImageLayout"]], "__init__() (vkimagelayout method)": [[294, "skia.VkImageLayout.__init__"]], "name (vkimagelayout attribute)": [[294, "skia.VkImageLayout.name"]], "value (vkimagelayout attribute)": [[294, "skia.VkImageLayout.value"]], "sizeofpackeduint() (wstream static method)": [[295, "skia.WStream.SizeOfPackedUInt"]], "wstream (class in skia)": [[295, "skia.WStream"]], "__init__() (wstream method)": [[295, "skia.WStream.__init__"]], "byteswritten() (wstream method)": [[295, "skia.WStream.bytesWritten"]], "flush() (wstream method)": [[295, "skia.WStream.flush"]], "newline() (wstream method)": [[295, "skia.WStream.newline"]], "write() (wstream method)": [[295, "skia.WStream.write"]], "write16() (wstream method)": [[295, "skia.WStream.write16"]], "write32() (wstream method)": [[295, "skia.WStream.write32"]], "write8() (wstream method)": [[295, "skia.WStream.write8"]], "writebigdecastext() (wstream method)": [[295, "skia.WStream.writeBigDecAsText"]], "writebool() (wstream method)": [[295, "skia.WStream.writeBool"]], "writedecastext() (wstream method)": [[295, "skia.WStream.writeDecAsText"]], "writehexastext() (wstream method)": [[295, "skia.WStream.writeHexAsText"]], "writepackeduint() (wstream method)": [[295, "skia.WStream.writePackedUInt"]], "writescalar() (wstream method)": [[295, "skia.WStream.writeScalar"]], "writescalarastext() (wstream method)": [[295, "skia.WStream.writeScalarAsText"]], "writestream() (wstream method)": [[295, "skia.WStream.writeStream"]], "writetext() (wstream method)": [[295, "skia.WStream.writeText"]], "make() (xfermodeimagefilter static method)": [[296, "skia.XfermodeImageFilter.Make"]], "xfermodeimagefilter (class in skia)": [[296, "skia.XfermodeImageFilter"]], "__init__() (xfermodeimagefilter method)": [[296, "skia.XfermodeImageFilter.__init__"]], "arevalidindices() (yuvaindex static method)": [[297, "skia.YUVAIndex.AreValidIndices"]], "yuvaindex (class in skia)": [[297, "skia.YUVAIndex"]], "__init__() (yuvaindex method)": [[297, "skia.YUVAIndex.__init__"]], "fchannel (yuvaindex attribute)": [[297, "skia.YUVAIndex.fChannel"]], "findex (yuvaindex attribute)": [[297, "skia.YUVAIndex.fIndex"]], "ka_index (yuvaindex attribute)": [[297, "skia.YUVAIndex.kA_Index"]], "kindexcount (yuvaindex attribute)": [[297, "skia.YUVAIndex.kIndexCount"]], "klast_index (yuvaindex attribute)": [[297, "skia.YUVAIndex.kLast_Index"]], "ku_index (yuvaindex attribute)": [[297, "skia.YUVAIndex.kU_Index"]], "kv_index (yuvaindex attribute)": [[297, "skia.YUVAIndex.kV_Index"]], "ky_index (yuvaindex attribute)": [[297, "skia.YUVAIndex.kY_Index"]], "index (class in skia.yuvaindex)": [[298, "skia.YUVAIndex.Index"]], "__init__() (index method)": [[298, "skia.YUVAIndex.Index.__init__"]], "ka_index (index attribute)": [[298, "skia.YUVAIndex.Index.kA_Index"]], "klast_index (index attribute)": [[298, "skia.YUVAIndex.Index.kLast_Index"]], "ku_index (index attribute)": [[298, "skia.YUVAIndex.Index.kU_Index"]], "kv_index (index attribute)": [[298, "skia.YUVAIndex.Index.kV_Index"]], "ky_index (index attribute)": [[298, "skia.YUVAIndex.Index.kY_Index"]], "name (index attribute)": [[298, "skia.YUVAIndex.Index.name"]], "value (index attribute)": [[298, "skia.YUVAIndex.Index.value"]], "hasalpha() (yuvainfo static method)": [[299, "skia.YUVAInfo.HasAlpha"]], "numchannelsinplane() (yuvainfo static method)": [[299, "skia.YUVAInfo.NumChannelsInPlane"]], "numplanes() (yuvainfo static method)": [[299, "skia.YUVAInfo.NumPlanes"]], "planedimensions() (yuvainfo static method)": [[299, "skia.YUVAInfo.PlaneDimensions"]], "yuvainfo (class in skia)": [[299, "skia.YUVAInfo"]], "__init__() (yuvainfo method)": [[299, "skia.YUVAInfo.__init__"]], "computetotalbytes() (yuvainfo method)": [[299, "skia.YUVAInfo.computeTotalBytes"]], "dimensions() (yuvainfo method)": [[299, "skia.YUVAInfo.dimensions"]], "hasalpha() (yuvainfo method)": [[299, "skia.YUVAInfo.hasAlpha"]], "height() (yuvainfo method)": [[299, "skia.YUVAInfo.height"]], "kcentered (yuvainfo attribute)": [[299, "skia.YUVAInfo.kCentered"]], "kmaxplanes (yuvainfo attribute)": [[299, "skia.YUVAInfo.kMaxPlanes"]], "kuyva_4444 (yuvainfo attribute)": [[299, "skia.YUVAInfo.kUYVA_4444"]], "kuyv_444 (yuvainfo attribute)": [[299, "skia.YUVAInfo.kUYV_444"]], "kyuva_4444 (yuvainfo attribute)": [[299, "skia.YUVAInfo.kYUVA_4444"]], "kyuv_444 (yuvainfo attribute)": [[299, "skia.YUVAInfo.kYUV_444"]], "ky_uv_420 (yuvainfo attribute)": [[299, "skia.YUVAInfo.kY_UV_420"]], "ky_uv_a_4204 (yuvainfo attribute)": [[299, "skia.YUVAInfo.kY_UV_A_4204"]], "ky_u_v_410 (yuvainfo attribute)": [[299, "skia.YUVAInfo.kY_U_V_410"]], "ky_u_v_411 (yuvainfo attribute)": [[299, "skia.YUVAInfo.kY_U_V_411"]], "ky_u_v_420 (yuvainfo attribute)": [[299, "skia.YUVAInfo.kY_U_V_420"]], "ky_u_v_422 (yuvainfo attribute)": [[299, "skia.YUVAInfo.kY_U_V_422"]], "ky_u_v_440 (yuvainfo attribute)": [[299, "skia.YUVAInfo.kY_U_V_440"]], "ky_u_v_444 (yuvainfo attribute)": [[299, "skia.YUVAInfo.kY_U_V_444"]], "ky_u_v_a_4204 (yuvainfo attribute)": [[299, "skia.YUVAInfo.kY_U_V_A_4204"]], "ky_vu_420 (yuvainfo attribute)": [[299, "skia.YUVAInfo.kY_VU_420"]], "ky_vu_a_4204 (yuvainfo attribute)": [[299, "skia.YUVAInfo.kY_VU_A_4204"]], "ky_v_u_420 (yuvainfo attribute)": [[299, "skia.YUVAInfo.kY_V_U_420"]], "ky_v_u_a_4204 (yuvainfo attribute)": [[299, "skia.YUVAInfo.kY_V_U_A_4204"]], "numchannelsinplane() (yuvainfo method)": [[299, "skia.YUVAInfo.numChannelsInPlane"]], "numplanes() (yuvainfo method)": [[299, "skia.YUVAInfo.numPlanes"]], "origin() (yuvainfo method)": [[299, "skia.YUVAInfo.origin"]], "planarconfig() (yuvainfo method)": [[299, "skia.YUVAInfo.planarConfig"]], "planedimensions() (yuvainfo method)": [[299, "skia.YUVAInfo.planeDimensions"]], "sitingx() (yuvainfo method)": [[299, "skia.YUVAInfo.sitingX"]], "sitingy() (yuvainfo method)": [[299, "skia.YUVAInfo.sitingY"]], "width() (yuvainfo method)": [[299, "skia.YUVAInfo.width"]], "yuvcolorspace() (yuvainfo method)": [[299, "skia.YUVAInfo.yuvColorSpace"]], "planarconfig (class in skia.yuvainfo)": [[300, "skia.YUVAInfo.PlanarConfig"]], "__init__() (planarconfig method)": [[300, "skia.YUVAInfo.PlanarConfig.__init__"]], "kuyva_4444 (planarconfig attribute)": [[300, "skia.YUVAInfo.PlanarConfig.kUYVA_4444"]], "kuyv_444 (planarconfig attribute)": [[300, "skia.YUVAInfo.PlanarConfig.kUYV_444"]], "kyuva_4444 (planarconfig attribute)": [[300, "skia.YUVAInfo.PlanarConfig.kYUVA_4444"]], "kyuv_444 (planarconfig attribute)": [[300, "skia.YUVAInfo.PlanarConfig.kYUV_444"]], "ky_uv_420 (planarconfig attribute)": [[300, "skia.YUVAInfo.PlanarConfig.kY_UV_420"]], "ky_uv_a_4204 (planarconfig attribute)": [[300, "skia.YUVAInfo.PlanarConfig.kY_UV_A_4204"]], "ky_u_v_410 (planarconfig attribute)": [[300, "skia.YUVAInfo.PlanarConfig.kY_U_V_410"]], "ky_u_v_411 (planarconfig attribute)": [[300, "skia.YUVAInfo.PlanarConfig.kY_U_V_411"]], "ky_u_v_420 (planarconfig attribute)": [[300, "skia.YUVAInfo.PlanarConfig.kY_U_V_420"]], "ky_u_v_422 (planarconfig attribute)": [[300, "skia.YUVAInfo.PlanarConfig.kY_U_V_422"]], "ky_u_v_440 (planarconfig attribute)": [[300, "skia.YUVAInfo.PlanarConfig.kY_U_V_440"]], "ky_u_v_444 (planarconfig attribute)": [[300, "skia.YUVAInfo.PlanarConfig.kY_U_V_444"]], "ky_u_v_a_4204 (planarconfig attribute)": [[300, "skia.YUVAInfo.PlanarConfig.kY_U_V_A_4204"]], "ky_vu_420 (planarconfig attribute)": [[300, "skia.YUVAInfo.PlanarConfig.kY_VU_420"]], "ky_vu_a_4204 (planarconfig attribute)": [[300, "skia.YUVAInfo.PlanarConfig.kY_VU_A_4204"]], "ky_v_u_420 (planarconfig attribute)": [[300, "skia.YUVAInfo.PlanarConfig.kY_V_U_420"]], "ky_v_u_a_4204 (planarconfig attribute)": [[300, "skia.YUVAInfo.PlanarConfig.kY_V_U_A_4204"]], "name (planarconfig attribute)": [[300, "skia.YUVAInfo.PlanarConfig.name"]], "value (planarconfig attribute)": [[300, "skia.YUVAInfo.PlanarConfig.value"]], "siting (class in skia.yuvainfo)": [[301, "skia.YUVAInfo.Siting"]], "__init__() (siting method)": [[301, "skia.YUVAInfo.Siting.__init__"]], "kcentered (siting attribute)": [[301, "skia.YUVAInfo.Siting.kCentered"]], "name (siting attribute)": [[301, "skia.YUVAInfo.Siting.name"]], "value (siting attribute)": [[301, "skia.YUVAInfo.Siting.value"]], "defaultcolortypefordatatype() (yuvapixmapinfo static method)": [[302, "skia.YUVAPixmapInfo.DefaultColorTypeForDataType"]], "numchannelsanddatatype() (yuvapixmapinfo static method)": [[302, "skia.YUVAPixmapInfo.NumChannelsAndDataType"]], "yuvapixmapinfo (class in skia)": [[302, "skia.YUVAPixmapInfo"]], "__init__() (yuvapixmapinfo method)": [[302, "skia.YUVAPixmapInfo.__init__"]], "computetotalbytes() (yuvapixmapinfo method)": [[302, "skia.YUVAPixmapInfo.computeTotalBytes"]], "datatype() (yuvapixmapinfo method)": [[302, "skia.YUVAPixmapInfo.dataType"]], "initpixmapsfromsingleallocation() (yuvapixmapinfo method)": [[302, "skia.YUVAPixmapInfo.initPixmapsFromSingleAllocation"]], "issupported() (yuvapixmapinfo method)": [[302, "skia.YUVAPixmapInfo.isSupported"]], "isvalid() (yuvapixmapinfo method)": [[302, "skia.YUVAPixmapInfo.isValid"]], "kfloat16 (yuvapixmapinfo attribute)": [[302, "skia.YUVAPixmapInfo.kFloat16"]], "klast (yuvapixmapinfo attribute)": [[302, "skia.YUVAPixmapInfo.kLast"]], "kmaxplanes (yuvapixmapinfo attribute)": [[302, "skia.YUVAPixmapInfo.kMaxPlanes"]], "kunorm10_unorm2 (yuvapixmapinfo attribute)": [[302, "skia.YUVAPixmapInfo.kUnorm10_Unorm2"]], "kunorm16 (yuvapixmapinfo attribute)": [[302, "skia.YUVAPixmapInfo.kUnorm16"]], "kunorm8 (yuvapixmapinfo attribute)": [[302, "skia.YUVAPixmapInfo.kUnorm8"]], "numplanes() (yuvapixmapinfo method)": [[302, "skia.YUVAPixmapInfo.numPlanes"]], "planeinfo() (yuvapixmapinfo method)": [[302, "skia.YUVAPixmapInfo.planeInfo"]], "rowbytes() (yuvapixmapinfo method)": [[302, "skia.YUVAPixmapInfo.rowBytes"]], "yuvcolorspace() (yuvapixmapinfo method)": [[302, "skia.YUVAPixmapInfo.yuvColorSpace"]], "yuvainfo() (yuvapixmapinfo method)": [[302, "skia.YUVAPixmapInfo.yuvaInfo"]], "datatype (class in skia.yuvapixmapinfo)": [[303, "skia.YUVAPixmapInfo.DataType"]], "__init__() (datatype method)": [[303, "skia.YUVAPixmapInfo.DataType.__init__"]], "kfloat16 (datatype attribute)": [[303, "skia.YUVAPixmapInfo.DataType.kFloat16"]], "klast (datatype attribute)": [[303, "skia.YUVAPixmapInfo.DataType.kLast"]], "kunorm10_unorm2 (datatype attribute)": [[303, "skia.YUVAPixmapInfo.DataType.kUnorm10_Unorm2"]], "kunorm16 (datatype attribute)": [[303, "skia.YUVAPixmapInfo.DataType.kUnorm16"]], "kunorm8 (datatype attribute)": [[303, "skia.YUVAPixmapInfo.DataType.kUnorm8"]], "name (datatype attribute)": [[303, "skia.YUVAPixmapInfo.DataType.name"]], "value (datatype attribute)": [[303, "skia.YUVAPixmapInfo.DataType.value"]], "all() (supporteddatatypes static method)": [[304, "skia.YUVAPixmapInfo.SupportedDataTypes.All"]], "supporteddatatypes (class in skia.yuvapixmapinfo)": [[304, "skia.YUVAPixmapInfo.SupportedDataTypes"]], "__init__() (supporteddatatypes method)": [[304, "skia.YUVAPixmapInfo.SupportedDataTypes.__init__"]], "enabledatatype() (supporteddatatypes method)": [[304, "skia.YUVAPixmapInfo.SupportedDataTypes.enableDataType"]], "supported() (supporteddatatypes method)": [[304, "skia.YUVAPixmapInfo.SupportedDataTypes.supported"]], "allocate() (yuvapixmaps static method)": [[305, "skia.YUVAPixmaps.Allocate"]], "fromdata() (yuvapixmaps static method)": [[305, "skia.YUVAPixmaps.FromData"]], "fromexternalmemory() (yuvapixmaps static method)": [[305, "skia.YUVAPixmaps.FromExternalMemory"]], "fromexternalpixmaps() (yuvapixmaps static method)": [[305, "skia.YUVAPixmaps.FromExternalPixmaps"]], "yuvapixmaps (class in skia)": [[305, "skia.YUVAPixmaps"]], "__init__() (yuvapixmaps method)": [[305, "skia.YUVAPixmaps.__init__"]], "isvalid() (yuvapixmaps method)": [[305, "skia.YUVAPixmaps.isValid"]], "numplanes() (yuvapixmaps method)": [[305, "skia.YUVAPixmaps.numPlanes"]], "plane() (yuvapixmaps method)": [[305, "skia.YUVAPixmaps.plane"]], "planes() (yuvapixmaps method)": [[305, "skia.YUVAPixmaps.planes"]], "tolegacy() (yuvapixmaps method)": [[305, "skia.YUVAPixmaps.toLegacy"]], "yuvainfo() (yuvapixmaps method)": [[305, "skia.YUVAPixmaps.yuvaInfo"]], "yuvasizeinfo (class in skia)": [[306, "skia.YUVASizeInfo"]], "__init__() (yuvasizeinfo method)": [[306, "skia.YUVASizeInfo.__init__"]], "computetotalbytes() (yuvasizeinfo method)": [[306, "skia.YUVASizeInfo.computeTotalBytes"]], "forigin (yuvasizeinfo attribute)": [[306, "skia.YUVASizeInfo.fOrigin"]], "fsizes (yuvasizeinfo attribute)": [[306, "skia.YUVASizeInfo.fSizes"]], "fwidthbytes (yuvasizeinfo attribute)": [[306, "skia.YUVASizeInfo.fWidthBytes"]], "yuvcolorspace (class in skia)": [[307, "skia.YUVColorSpace"]], "__init__() (yuvcolorspace method)": [[307, "skia.YUVColorSpace.__init__"]], "kbt2020_yuvcolorspace (yuvcolorspace attribute)": [[307, "skia.YUVColorSpace.kBT2020_YUVColorSpace"]], "kidentity_yuvcolorspace (yuvcolorspace attribute)": [[307, "skia.YUVColorSpace.kIdentity_YUVColorSpace"]], "kjpeg_yuvcolorspace (yuvcolorspace attribute)": [[307, "skia.YUVColorSpace.kJPEG_YUVColorSpace"]], "klastenum_yuvcolorspace (yuvcolorspace attribute)": [[307, "skia.YUVColorSpace.kLastEnum_YUVColorSpace"]], "krec601_yuvcolorspace (yuvcolorspace attribute)": [[307, "skia.YUVColorSpace.kRec601_YUVColorSpace"]], "krec709_yuvcolorspace (yuvcolorspace attribute)": [[307, "skia.YUVColorSpace.kRec709_YUVColorSpace"]], "name (yuvcolorspace attribute)": [[307, "skia.YUVColorSpace.name"]], "value (yuvcolorspace attribute)": [[307, "skia.YUVColorSpace.value"]]}})