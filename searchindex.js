Search.setIndex({"docnames": ["development", "index", "install", "reference", "reference/skia", "reference/skia.AlphaType", "reference/skia.ApplyPerspectiveClip", "reference/skia.AutoCanvasRestore", "reference/skia.BBHFactory", "reference/skia.BBoxHierarchy", "reference/skia.BBoxHierarchy.Metadata", "reference/skia.Bitmap", "reference/skia.Bitmap.AllocFlags", "reference/skia.BlendMode", "reference/skia.BlendModeCoeff", "reference/skia.BlurMaskFilter", "reference/skia.BlurStyle", "reference/skia.Budgeted", "reference/skia.Canvas", "reference/skia.Canvas.Lattice", "reference/skia.Canvas.Lattice.RectType", "reference/skia.Canvas.PointMode", "reference/skia.Canvas.QuadAAFlags", "reference/skia.Canvas.SaveLayerFlags", "reference/skia.Canvas.SaveLayerRec", "reference/skia.Canvas.SrcRectConstraint", "reference/skia.ClipOp", "reference/skia.Codec", "reference/skia.Codec.DisposalMethod", "reference/skia.Codec.FrameInfo", "reference/skia.Codec.Options", "reference/skia.Codec.Result", "reference/skia.Codec.ScanlineOrder", "reference/skia.Codec.SelectionPolicy", "reference/skia.Codec.ZeroInitialized", "reference/skia.Color4f", "reference/skia.ColorChannel", "reference/skia.ColorChannelFlag", "reference/skia.ColorFilter", "reference/skia.ColorFilter.Type", "reference/skia.ColorFilters", "reference/skia.ColorInfo", "reference/skia.ColorMatrix", "reference/skia.ColorMatrixFilter", "reference/skia.ColorMatrixFilter.Type", "reference/skia.ColorSpace", "reference/skia.ColorType", "reference/skia.ConvergeMode", "reference/skia.CornerPathEffect", "reference/skia.DashPathEffect", "reference/skia.Data", "reference/skia.DiscretePathEffect", "reference/skia.Document", "reference/skia.Drawable", "reference/skia.Drawable.Type", "reference/skia.DynamicMemoryWStream", "reference/skia.EncodedImageFormat", "reference/skia.EncodedOrigin", "reference/skia.FILEStream", "reference/skia.FILEWStream", "reference/skia.FilterMode", "reference/skia.Flattanable", "reference/skia.Flattanable.Type", "reference/skia.Font", "reference/skia.Font.Edging", "reference/skia.FontArguments", "reference/skia.FontArguments.VariationPosition", "reference/skia.FontArguments.VariationPosition.Coordinate", "reference/skia.FontArguments.VariationPosition.Coordinates", "reference/skia.FontHinting", "reference/skia.FontMetrics", "reference/skia.FontMetrics.FontMetricsFlags", "reference/skia.FontMgr", "reference/skia.FontParameters", "reference/skia.FontParameters.Variation", "reference/skia.FontParameters.Variation.Axis", "reference/skia.FontStyle", "reference/skia.FontStyle.Slant", "reference/skia.FontStyle.Weight", "reference/skia.FontStyle.Width", "reference/skia.FontStyleSet", "reference/skia.GrBackendApi", "reference/skia.GrBackendFormat", "reference/skia.GrBackendRenderTarget", "reference/skia.GrBackendSemaphore", "reference/skia.GrBackendSurfaceMutableState", "reference/skia.GrBackendTexture", "reference/skia.GrColorType", "reference/skia.GrContext", "reference/skia.GrContextOptions", "reference/skia.GrContext_Base", "reference/skia.GrDirectContext", "reference/skia.GrFlushInfo", "reference/skia.GrGLBackendState", "reference/skia.GrGLFormat", "reference/skia.GrGLFramebufferInfo", "reference/skia.GrGLInterface", "reference/skia.GrGLTextureInfo", "reference/skia.GrImageContext", "reference/skia.GrMipmapped", "reference/skia.GrMockOptions", "reference/skia.GrMockRenderTargetInfo", "reference/skia.GrMockTextureInfo", "reference/skia.GrProtected", "reference/skia.GrRecordingContext", "reference/skia.GrRenderable", "reference/skia.GrSemaphoresSubmitted", "reference/skia.GrSurfaceOrigin", "reference/skia.GrTextureType", "reference/skia.GrVkAlloc", "reference/skia.GrVkBackendContext", "reference/skia.GrVkDrawableInfo", "reference/skia.GrVkExtensionFlags", "reference/skia.GrVkFeatureFlags", "reference/skia.GrVkImageInfo", "reference/skia.GrVkYcbcrConversionInfo", "reference/skia.GradientShader", "reference/skia.GradientShader.Flags", "reference/skia.HighContrastConfig", "reference/skia.HighContrastConfig.InvertStyle", "reference/skia.HighContrastFilter", "reference/skia.IPoint", "reference/skia.IRect", "reference/skia.ISize", "reference/skia.Image", "reference/skia.Image.BitDepth", "reference/skia.Image.CachingHint", "reference/skia.Image.CompressionType", "reference/skia.Image.LegacyBitmapMode", "reference/skia.ImageFilter", "reference/skia.ImageFilter.CropRect", "reference/skia.ImageFilter.MapDirection", "reference/skia.ImageFilter.Type", "reference/skia.ImageFilters", "reference/skia.ImageInfo", "reference/skia.Line2DPathEffect", "reference/skia.LumaColorFilter", "reference/skia.M44", "reference/skia.MaskFilter", "reference/skia.MaskFilter.Type", "reference/skia.Matrix", "reference/skia.Matrix.ScaleToFit", "reference/skia.Matrix.TypeMask", "reference/skia.MatrixPathEffect", "reference/skia.MemoryStream", "reference/skia.MergePathEffect", "reference/skia.MipmapBuilder", "reference/skia.NullWStream", "reference/skia.OpBuilder", "reference/skia.OverdrawColorFilter", "reference/skia.PDF", "reference/skia.PDF.AttributeList", "reference/skia.PDF.Metadata", "reference/skia.PDF.StructureElementNode", "reference/skia.Paint", "reference/skia.Paint.Cap", "reference/skia.Paint.Join", "reference/skia.Paint.Style", "reference/skia.Path", "reference/skia.Path.AddPathMode", "reference/skia.Path.ArcSize", "reference/skia.Path.Iter", "reference/skia.Path.RawIter", "reference/skia.Path.SegmentMask", "reference/skia.Path.Verb", "reference/skia.Path1DPathEffect", "reference/skia.Path1DPathEffect.Style", "reference/skia.Path2DPathEffect", "reference/skia.PathBuilder", "reference/skia.PathBuilder.ArcSize", "reference/skia.PathDirection", "reference/skia.PathEffect", "reference/skia.PathEffect.DashInfo", "reference/skia.PathEffect.DashType", "reference/skia.PathEffect.Type", "reference/skia.PathFillType", "reference/skia.PathMeasure", "reference/skia.PathMeasure.GetPosAndTan", "reference/skia.PathOp", "reference/skia.PathSegmentMask", "reference/skia.PathVerb", "reference/skia.PerlinNoiseShader", "reference/skia.Picture", "reference/skia.PictureRecorder", "reference/skia.PixelGeometry", "reference/skia.PixelRef", "reference/skia.Pixmap", "reference/skia.Point", "reference/skia.Point3", "reference/skia.RRect", "reference/skia.RRect.Corner", "reference/skia.RRect.Type", "reference/skia.RSXform", "reference/skia.RTreeFactory", "reference/skia.Rect", "reference/skia.RefCnt", "reference/skia.RefCntBase", "reference/skia.Region", "reference/skia.Region.Cliperator", "reference/skia.Region.Iterator", "reference/skia.Region.Op", "reference/skia.Region.Spanerator", "reference/skia.SVGCanvas", "reference/skia.SVGDOM", "reference/skia.SamplingOptions", "reference/skia.Shader", "reference/skia.Shader.Type", "reference/skia.ShaderMaskFilter", "reference/skia.Shaders", "reference/skia.Size", "reference/skia.Stream", "reference/skia.StreamAsset", "reference/skia.StreamMemory", "reference/skia.StreamRewindable", "reference/skia.StreamSeekable", "reference/skia.String", "reference/skia.StrokePathEffect", "reference/skia.StrokeRec", "reference/skia.StrokeRec.InitStyle", "reference/skia.StrokeRec.Style", "reference/skia.Surface", "reference/skia.Surface.AsyncReadResult", "reference/skia.Surface.BackendHandleAccess", "reference/skia.Surface.BackendSurfaceAccess", "reference/skia.Surface.ContentChangeMode", "reference/skia.Surface.RescaleGamma", "reference/skia.SurfaceCharacterization", "reference/skia.SurfaceProps", "reference/skia.SurfaceProps.Flags", "reference/skia.TableMaskFilter", "reference/skia.TextBlob", "reference/skia.TextBlob.Iter", "reference/skia.TextBlob.Iter.Run", "reference/skia.TextBlobBuilder", "reference/skia.TextEncoding", "reference/skia.TileMode", "reference/skia.TrimPathEffect", "reference/skia.TrimPathEffect.Mode", "reference/skia.Typeface", "reference/skia.Typeface.SerializeBehavior", "reference/skia.Vertices", "reference/skia.Vertices.VertexMode", "reference/skia.VkFormat", "reference/skia.VkImageLayout", "reference/skia.WStream", "reference/skia.YUVAInfo", "reference/skia.YUVAInfo.PlaneConfig", "reference/skia.YUVAInfo.Siting", "reference/skia.YUVAInfo.Subsampling", "reference/skia.YUVAPixmapInfo", "reference/skia.YUVAPixmapInfo.DataType", "reference/skia.YUVAPixmapInfo.SupportedDataTypes", "reference/skia.YUVAPixmaps", "reference/skia.YUVColorSpace", "reference/skia.gpuBackendApi", "tutorial/canvas", "tutorial/index", "tutorial/overview", "tutorial/paint", "tutorial/path"], "filenames": ["development.rst", "index.rst", "install.rst", "reference.rst", "reference/skia.rst", "reference/skia.AlphaType.rst", "reference/skia.ApplyPerspectiveClip.rst", "reference/skia.AutoCanvasRestore.rst", "reference/skia.BBHFactory.rst", "reference/skia.BBoxHierarchy.rst", "reference/skia.BBoxHierarchy.Metadata.rst", "reference/skia.Bitmap.rst", "reference/skia.Bitmap.AllocFlags.rst", "reference/skia.BlendMode.rst", "reference/skia.BlendModeCoeff.rst", "reference/skia.BlurMaskFilter.rst", "reference/skia.BlurStyle.rst", "reference/skia.Budgeted.rst", "reference/skia.Canvas.rst", "reference/skia.Canvas.Lattice.rst", "reference/skia.Canvas.Lattice.RectType.rst", "reference/skia.Canvas.PointMode.rst", "reference/skia.Canvas.QuadAAFlags.rst", "reference/skia.Canvas.SaveLayerFlags.rst", "reference/skia.Canvas.SaveLayerRec.rst", "reference/skia.Canvas.SrcRectConstraint.rst", "reference/skia.ClipOp.rst", "reference/skia.Codec.rst", "reference/skia.Codec.DisposalMethod.rst", "reference/skia.Codec.FrameInfo.rst", "reference/skia.Codec.Options.rst", "reference/skia.Codec.Result.rst", "reference/skia.Codec.ScanlineOrder.rst", "reference/skia.Codec.SelectionPolicy.rst", "reference/skia.Codec.ZeroInitialized.rst", "reference/skia.Color4f.rst", "reference/skia.ColorChannel.rst", "reference/skia.ColorChannelFlag.rst", "reference/skia.ColorFilter.rst", "reference/skia.ColorFilter.Type.rst", "reference/skia.ColorFilters.rst", "reference/skia.ColorInfo.rst", "reference/skia.ColorMatrix.rst", "reference/skia.ColorMatrixFilter.rst", "reference/skia.ColorMatrixFilter.Type.rst", "reference/skia.ColorSpace.rst", "reference/skia.ColorType.rst", "reference/skia.ConvergeMode.rst", "reference/skia.CornerPathEffect.rst", "reference/skia.DashPathEffect.rst", "reference/skia.Data.rst", "reference/skia.DiscretePathEffect.rst", "reference/skia.Document.rst", "reference/skia.Drawable.rst", "reference/skia.Drawable.Type.rst", "reference/skia.DynamicMemoryWStream.rst", "reference/skia.EncodedImageFormat.rst", "reference/skia.EncodedOrigin.rst", "reference/skia.FILEStream.rst", "reference/skia.FILEWStream.rst", "reference/skia.FilterMode.rst", "reference/skia.Flattanable.rst", "reference/skia.Flattanable.Type.rst", "reference/skia.Font.rst", "reference/skia.Font.Edging.rst", "reference/skia.FontArguments.rst", "reference/skia.FontArguments.VariationPosition.rst", "reference/skia.FontArguments.VariationPosition.Coordinate.rst", "reference/skia.FontArguments.VariationPosition.Coordinates.rst", "reference/skia.FontHinting.rst", "reference/skia.FontMetrics.rst", "reference/skia.FontMetrics.FontMetricsFlags.rst", "reference/skia.FontMgr.rst", "reference/skia.FontParameters.rst", "reference/skia.FontParameters.Variation.rst", "reference/skia.FontParameters.Variation.Axis.rst", "reference/skia.FontStyle.rst", "reference/skia.FontStyle.Slant.rst", "reference/skia.FontStyle.Weight.rst", "reference/skia.FontStyle.Width.rst", "reference/skia.FontStyleSet.rst", "reference/skia.GrBackendApi.rst", "reference/skia.GrBackendFormat.rst", "reference/skia.GrBackendRenderTarget.rst", "reference/skia.GrBackendSemaphore.rst", "reference/skia.GrBackendSurfaceMutableState.rst", "reference/skia.GrBackendTexture.rst", "reference/skia.GrColorType.rst", "reference/skia.GrContext.rst", "reference/skia.GrContextOptions.rst", "reference/skia.GrContext_Base.rst", "reference/skia.GrDirectContext.rst", "reference/skia.GrFlushInfo.rst", "reference/skia.GrGLBackendState.rst", "reference/skia.GrGLFormat.rst", "reference/skia.GrGLFramebufferInfo.rst", "reference/skia.GrGLInterface.rst", "reference/skia.GrGLTextureInfo.rst", "reference/skia.GrImageContext.rst", "reference/skia.GrMipmapped.rst", "reference/skia.GrMockOptions.rst", "reference/skia.GrMockRenderTargetInfo.rst", "reference/skia.GrMockTextureInfo.rst", "reference/skia.GrProtected.rst", "reference/skia.GrRecordingContext.rst", "reference/skia.GrRenderable.rst", "reference/skia.GrSemaphoresSubmitted.rst", "reference/skia.GrSurfaceOrigin.rst", "reference/skia.GrTextureType.rst", "reference/skia.GrVkAlloc.rst", "reference/skia.GrVkBackendContext.rst", "reference/skia.GrVkDrawableInfo.rst", "reference/skia.GrVkExtensionFlags.rst", "reference/skia.GrVkFeatureFlags.rst", "reference/skia.GrVkImageInfo.rst", "reference/skia.GrVkYcbcrConversionInfo.rst", "reference/skia.GradientShader.rst", "reference/skia.GradientShader.Flags.rst", "reference/skia.HighContrastConfig.rst", "reference/skia.HighContrastConfig.InvertStyle.rst", "reference/skia.HighContrastFilter.rst", "reference/skia.IPoint.rst", "reference/skia.IRect.rst", "reference/skia.ISize.rst", "reference/skia.Image.rst", "reference/skia.Image.BitDepth.rst", "reference/skia.Image.CachingHint.rst", "reference/skia.Image.CompressionType.rst", "reference/skia.Image.LegacyBitmapMode.rst", "reference/skia.ImageFilter.rst", "reference/skia.ImageFilter.CropRect.rst", "reference/skia.ImageFilter.MapDirection.rst", "reference/skia.ImageFilter.Type.rst", "reference/skia.ImageFilters.rst", "reference/skia.ImageInfo.rst", "reference/skia.Line2DPathEffect.rst", "reference/skia.LumaColorFilter.rst", "reference/skia.M44.rst", "reference/skia.MaskFilter.rst", "reference/skia.MaskFilter.Type.rst", "reference/skia.Matrix.rst", "reference/skia.Matrix.ScaleToFit.rst", "reference/skia.Matrix.TypeMask.rst", "reference/skia.MatrixPathEffect.rst", "reference/skia.MemoryStream.rst", "reference/skia.MergePathEffect.rst", "reference/skia.MipmapBuilder.rst", "reference/skia.NullWStream.rst", "reference/skia.OpBuilder.rst", "reference/skia.OverdrawColorFilter.rst", "reference/skia.PDF.rst", "reference/skia.PDF.AttributeList.rst", "reference/skia.PDF.Metadata.rst", "reference/skia.PDF.StructureElementNode.rst", "reference/skia.Paint.rst", "reference/skia.Paint.Cap.rst", "reference/skia.Paint.Join.rst", "reference/skia.Paint.Style.rst", "reference/skia.Path.rst", "reference/skia.Path.AddPathMode.rst", "reference/skia.Path.ArcSize.rst", "reference/skia.Path.Iter.rst", "reference/skia.Path.RawIter.rst", "reference/skia.Path.SegmentMask.rst", "reference/skia.Path.Verb.rst", "reference/skia.Path1DPathEffect.rst", "reference/skia.Path1DPathEffect.Style.rst", "reference/skia.Path2DPathEffect.rst", "reference/skia.PathBuilder.rst", "reference/skia.PathBuilder.ArcSize.rst", "reference/skia.PathDirection.rst", "reference/skia.PathEffect.rst", "reference/skia.PathEffect.DashInfo.rst", "reference/skia.PathEffect.DashType.rst", "reference/skia.PathEffect.Type.rst", "reference/skia.PathFillType.rst", "reference/skia.PathMeasure.rst", "reference/skia.PathMeasure.GetPosAndTan.rst", "reference/skia.PathOp.rst", "reference/skia.PathSegmentMask.rst", "reference/skia.PathVerb.rst", "reference/skia.PerlinNoiseShader.rst", "reference/skia.Picture.rst", "reference/skia.PictureRecorder.rst", "reference/skia.PixelGeometry.rst", "reference/skia.PixelRef.rst", "reference/skia.Pixmap.rst", "reference/skia.Point.rst", "reference/skia.Point3.rst", "reference/skia.RRect.rst", "reference/skia.RRect.Corner.rst", "reference/skia.RRect.Type.rst", "reference/skia.RSXform.rst", "reference/skia.RTreeFactory.rst", "reference/skia.Rect.rst", "reference/skia.RefCnt.rst", "reference/skia.RefCntBase.rst", "reference/skia.Region.rst", "reference/skia.Region.Cliperator.rst", "reference/skia.Region.Iterator.rst", "reference/skia.Region.Op.rst", "reference/skia.Region.Spanerator.rst", "reference/skia.SVGCanvas.rst", "reference/skia.SVGDOM.rst", "reference/skia.SamplingOptions.rst", "reference/skia.Shader.rst", "reference/skia.Shader.Type.rst", "reference/skia.ShaderMaskFilter.rst", "reference/skia.Shaders.rst", "reference/skia.Size.rst", "reference/skia.Stream.rst", "reference/skia.StreamAsset.rst", "reference/skia.StreamMemory.rst", "reference/skia.StreamRewindable.rst", "reference/skia.StreamSeekable.rst", "reference/skia.String.rst", "reference/skia.StrokePathEffect.rst", "reference/skia.StrokeRec.rst", "reference/skia.StrokeRec.InitStyle.rst", "reference/skia.StrokeRec.Style.rst", "reference/skia.Surface.rst", "reference/skia.Surface.AsyncReadResult.rst", "reference/skia.Surface.BackendHandleAccess.rst", "reference/skia.Surface.BackendSurfaceAccess.rst", "reference/skia.Surface.ContentChangeMode.rst", "reference/skia.Surface.RescaleGamma.rst", "reference/skia.SurfaceCharacterization.rst", "reference/skia.SurfaceProps.rst", "reference/skia.SurfaceProps.Flags.rst", "reference/skia.TableMaskFilter.rst", "reference/skia.TextBlob.rst", "reference/skia.TextBlob.Iter.rst", "reference/skia.TextBlob.Iter.Run.rst", "reference/skia.TextBlobBuilder.rst", "reference/skia.TextEncoding.rst", "reference/skia.TileMode.rst", "reference/skia.TrimPathEffect.rst", "reference/skia.TrimPathEffect.Mode.rst", "reference/skia.Typeface.rst", "reference/skia.Typeface.SerializeBehavior.rst", "reference/skia.Vertices.rst", "reference/skia.Vertices.VertexMode.rst", "reference/skia.VkFormat.rst", "reference/skia.VkImageLayout.rst", "reference/skia.WStream.rst", "reference/skia.YUVAInfo.rst", "reference/skia.YUVAInfo.PlaneConfig.rst", "reference/skia.YUVAInfo.Siting.rst", "reference/skia.YUVAInfo.Subsampling.rst", "reference/skia.YUVAPixmapInfo.rst", "reference/skia.YUVAPixmapInfo.DataType.rst", "reference/skia.YUVAPixmapInfo.SupportedDataTypes.rst", "reference/skia.YUVAPixmaps.rst", "reference/skia.YUVColorSpace.rst", "reference/skia.gpuBackendApi.rst", "tutorial/canvas.rst", "tutorial/index.rst", "tutorial/overview.rst", "tutorial/paint.rst", "tutorial/path.rst"], "titles": ["Development", "skia-python", "Install", "Reference", "skia", "AlphaType", "ApplyPerspectiveClip", "AutoCanvasRestore", "BBHFactory", "BBoxHierarchy", "BBoxHierarchy.Metadata", "Bitmap", "Bitmap.AllocFlags", "BlendMode", "BlendModeCoeff", "BlurMaskFilter", "BlurStyle", "Budgeted", "Canvas", "Canvas.Lattice", "Canvas.Lattice.RectType", "Canvas.PointMode", "Canvas.QuadAAFlags", "Canvas.SaveLayerFlags", "Canvas.SaveLayerRec", "Canvas.SrcRectConstraint", "ClipOp", "Codec", "Codec.DisposalMethod", "Codec.FrameInfo", "Codec.Options", "Codec.Result", "Codec.ScanlineOrder", "Codec.SelectionPolicy", "Codec.ZeroInitialized", "Color4f", "ColorChannel", "ColorChannelFlag", "ColorFilter", "ColorFilter.Type", "ColorFilters", "ColorInfo", "ColorMatrix", "ColorMatrixFilter", "ColorMatrixFilter.Type", "ColorSpace", "ColorType", "ConvergeMode", "CornerPathEffect", "DashPathEffect", "Data", "DiscretePathEffect", "Document", "Drawable", "Drawable.Type", "DynamicMemoryWStream", "EncodedImageFormat", "EncodedOrigin", "FILEStream", "FILEWStream", "FilterMode", "Flattanable", "Flattanable.Type", "Font", "Font.Edging", "FontArguments", "FontArguments.VariationPosition", "FontArguments.VariationPosition.Coordinate", "FontArguments.VariationPosition.Coordinates", "FontHinting", "FontMetrics", "FontMetrics.FontMetricsFlags", "FontMgr", "FontParameters", "FontParameters.Variation", "FontParameters.Variation.Axis", "FontStyle", "FontStyle.Slant", "FontStyle.Weight", "FontStyle.Width", "FontStyleSet", "GrBackendApi", "GrBackendFormat", "GrBackendRenderTarget", "GrBackendSemaphore", "GrBackendSurfaceMutableState", "GrBackendTexture", "GrColorType", "GrContext", "GrContextOptions", "GrContext_Base", "GrDirectContext", "GrFlushInfo", "GrGLBackendState", "GrGLFormat", "GrGLFramebufferInfo", "GrGLInterface", "GrGLTextureInfo", "GrImageContext", "GrMipmapped", "GrMockOptions", "GrMockRenderTargetInfo", "GrMockTextureInfo", "GrProtected", "GrRecordingContext", "GrRenderable", "GrSemaphoresSubmitted", "GrSurfaceOrigin", "GrTextureType", "GrVkAlloc", "GrVkBackendContext", "GrVkDrawableInfo", "GrVkExtensionFlags", "GrVkFeatureFlags", "GrVkImageInfo", "GrVkYcbcrConversionInfo", "GradientShader", "GradientShader.Flags", "HighContrastConfig", "HighContrastConfig.InvertStyle", "HighContrastFilter", "IPoint", "IRect", "ISize", "Image", "Image.BitDepth", "Image.CachingHint", "Image.CompressionType", "Image.LegacyBitmapMode", "ImageFilter", "ImageFilter.CropRect", "ImageFilter.MapDirection", "ImageFilter.Type", "ImageFilters", "ImageInfo", "Line2DPathEffect", "LumaColorFilter", "M44", "MaskFilter", "MaskFilter.Type", "Matrix", "Matrix.ScaleToFit", "Matrix.TypeMask", "MatrixPathEffect", "MemoryStream", "MergePathEffect", "MipmapBuilder", "NullWStream", "OpBuilder", "OverdrawColorFilter", "PDF", "PDF.AttributeList", "PDF.Metadata", "PDF.StructureElementNode", "Paint", "Paint.Cap", "Paint.Join", "Paint.Style", "Path", "Path.AddPathMode", "Path.ArcSize", "Path.Iter", "Path.RawIter", "Path.SegmentMask", "Path.Verb", "Path1DPathEffect", "Path1DPathEffect.Style", "Path2DPathEffect", "PathBuilder", "PathBuilder.ArcSize", "PathDirection", "PathEffect", "PathEffect.DashInfo", "PathEffect.DashType", "PathEffect.Type", "PathFillType", "PathMeasure", "PathMeasure.GetPosAndTan", "PathOp", "PathSegmentMask", "PathVerb", "PerlinNoiseShader", "Picture", "PictureRecorder", "PixelGeometry", "PixelRef", "Pixmap", "Point", "Point3", "RRect", "RRect.Corner", "RRect.Type", "RSXform", "RTreeFactory", "Rect", "RefCnt", "RefCntBase", "Region", "Region.Cliperator", "Region.Iterator", "Region.Op", "Region.Spanerator", "SVGCanvas", "SVGDOM", "SamplingOptions", "Shader", "Shader.Type", "ShaderMaskFilter", "Shaders", "Size", "Stream", "StreamAsset", "StreamMemory", "StreamRewindable", "StreamSeekable", "String", "StrokePathEffect", "StrokeRec", "StrokeRec.InitStyle", "StrokeRec.Style", "Surface", "Surface.AsyncReadResult", "Surface.BackendHandleAccess", "Surface.BackendSurfaceAccess", "Surface.ContentChangeMode", "Surface.RescaleGamma", "SurfaceCharacterization", "SurfaceProps", "SurfaceProps.Flags", "TableMaskFilter", "TextBlob", "TextBlob.Iter", "TextBlob.Iter.Run", "TextBlobBuilder", "TextEncoding", "TileMode", "TrimPathEffect", "TrimPathEffect.Mode", "Typeface", "Typeface.SerializeBehavior", "Vertices", "Vertices.VertexMode", "VkFormat", "VkImageLayout", "WStream", "YUVAInfo", "YUVAInfo.PlaneConfig", "YUVAInfo.Siting", "YUVAInfo.Subsampling", "YUVAPixmapInfo", "YUVAPixmapInfo.DataType", "YUVAPixmapInfo.SupportedDataTypes", "YUVAPixmaps", "YUVColorSpace", "gpuBackendApi", "Canvas Creation", "Tutorial", "Overview", "Paint Overview", "Path Overview"], "terms": {"skia": [0, 2, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259], "i": [0, 1, 2, 4, 5, 7, 9, 11, 12, 14, 18, 19, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 41, 43, 45, 48, 49, 50, 51, 52, 53, 55, 58, 61, 63, 68, 70, 71, 72, 75, 80, 81, 83, 85, 88, 90, 91, 92, 96, 98, 104, 110, 114, 116, 120, 121, 122, 124, 128, 129, 133, 134, 136, 138, 140, 144, 148, 150, 152, 153, 154, 158, 159, 161, 162, 168, 171, 173, 175, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 194, 195, 196, 197, 198, 199, 202, 203, 205, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 230, 233, 236, 238, 245, 246, 247, 248, 249, 251, 252, 255, 256, 257, 258, 259], "built": [0, 2, 11, 18, 124, 186, 230, 233], "upon": [0, 53, 220], "pybind11": [0, 2], "ar": [0, 2, 4, 5, 9, 11, 14, 18, 19, 27, 28, 31, 32, 35, 38, 41, 43, 45, 52, 53, 58, 61, 63, 70, 71, 72, 80, 85, 88, 90, 91, 92, 93, 96, 98, 104, 110, 116, 121, 122, 123, 124, 129, 133, 134, 138, 140, 144, 146, 150, 152, 154, 158, 161, 162, 168, 171, 176, 182, 183, 184, 186, 187, 188, 189, 194, 195, 196, 197, 203, 205, 209, 210, 211, 212, 213, 214, 220, 230, 233, 236, 238, 245, 246, 247, 248, 249, 250, 251, 252, 255, 257, 258, 259], "mostli": 0, "plain": 0, "convers": [0, 11, 120, 124, 186, 187], "from": [0, 4, 11, 13, 18, 19, 27, 29, 31, 32, 35, 41, 45, 48, 51, 57, 63, 70, 72, 88, 91, 92, 121, 122, 124, 133, 134, 137, 140, 152, 154, 158, 161, 162, 168, 171, 178, 181, 182, 183, 186, 187, 188, 189, 194, 197, 202, 220, 221, 230, 233, 238, 249, 255, 257, 258, 259], "c": [0, 2, 4, 11, 40, 41, 46, 124, 134, 140, 158, 189, 194, 208, 226, 258], "api": [0, 1, 18, 32, 35, 52, 81, 83, 85, 88, 90, 91, 92, 98, 104, 124, 210, 220, 254, 256], "function": [0, 9, 11, 14, 18, 24, 27, 35, 40, 41, 45, 53, 55, 59, 63, 68, 76, 82, 83, 86, 88, 91, 92, 95, 97, 101, 102, 118, 121, 122, 123, 124, 130, 133, 134, 140, 144, 147, 150, 152, 154, 158, 161, 162, 168, 176, 181, 182, 183, 186, 187, 188, 189, 192, 194, 197, 199, 205, 208, 209, 215, 217, 220, 227, 230, 238, 244, 245, 249], "name": [0, 4, 5, 6, 12, 13, 14, 16, 17, 20, 21, 22, 23, 25, 26, 28, 31, 32, 33, 34, 36, 37, 38, 39, 43, 44, 46, 47, 53, 54, 56, 57, 60, 61, 62, 64, 69, 71, 72, 77, 78, 79, 81, 87, 93, 94, 99, 103, 105, 106, 107, 108, 112, 113, 117, 119, 125, 126, 127, 128, 129, 131, 132, 136, 138, 139, 141, 142, 151, 152, 155, 156, 157, 158, 159, 160, 163, 164, 166, 169, 170, 171, 173, 174, 175, 177, 178, 179, 180, 184, 190, 191, 200, 205, 206, 218, 219, 222, 223, 224, 225, 228, 234, 235, 237, 238, 239, 241, 242, 243, 246, 247, 248, 250, 253, 254], "remain": [0, 11, 19, 27, 65, 75, 88, 91, 140, 189, 202, 229, 249, 252, 259], "same": [0, 4, 11, 18, 24, 27, 32, 38, 41, 45, 49, 50, 51, 53, 58, 63, 88, 91, 92, 124, 129, 133, 134, 140, 144, 150, 154, 158, 173, 175, 183, 188, 189, 197, 205, 210, 211, 212, 213, 214, 217, 220, 238, 249, 255], "A": [0, 18, 27, 31, 35, 40, 49, 88, 91, 93, 133, 140, 150, 152, 153, 158, 192, 220, 239, 245, 246, 248, 249, 250, 258, 259], "few": [0, 2, 124, 197], "differ": [0, 4, 11, 18, 27, 36, 47, 51, 53, 124, 140, 158, 189, 197, 210, 220, 248, 258], "all": [0, 4, 9, 11, 18, 19, 27, 32, 34, 35, 38, 43, 49, 52, 53, 58, 61, 63, 68, 72, 80, 85, 88, 90, 91, 92, 96, 98, 104, 110, 122, 124, 129, 133, 134, 138, 140, 142, 144, 148, 154, 158, 171, 173, 182, 186, 189, 194, 195, 196, 197, 203, 205, 210, 211, 212, 213, 214, 220, 230, 236, 238, 245, 249, 251, 255, 257, 258], "resid": [0, 124, 220], "modul": [0, 3, 4, 205], "remov": [0, 18, 68, 154, 158, 215], "class": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257], "prefix": 0, "sk": [0, 140], "e": [0, 14, 27, 28, 29, 31, 35, 40, 48, 53, 88, 91, 110, 120, 129, 133, 140, 152, 154, 184, 188, 205, 217, 220, 227, 229, 236, 246, 248, 257, 258], "g": [0, 4, 11, 27, 29, 31, 35, 48, 53, 88, 91, 110, 120, 133, 136, 140, 152, 154, 184, 205, 220, 227, 229, 236, 246, 248, 253, 257, 258], "skcanva": [0, 7, 18, 52, 53, 133, 150, 182, 183], "canva": [0, 1, 4, 7, 11, 52, 53, 124, 129, 133, 137, 150, 153, 154, 158, 168, 171, 182, 183, 186, 197, 202, 203, 220, 240, 256, 258, 259], "some": [0, 11, 18, 27, 45, 53, 63, 88, 91, 129, 158, 182, 186, 202, 205, 220, 229, 238, 257, 258], "method": [0, 257], "signatur": [0, 154, 238], "adapt": 0, "style": [0, 18, 63, 72, 138, 154, 165, 217, 238, 257, 258, 259], "surfac": [0, 11, 18, 41, 88, 91, 104, 107, 124, 133, 134, 158, 186, 227, 233, 255, 257], "__init__": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], "accept": [0, 124, 129, 133], "addit": [0, 11, 30, 63, 124, 154, 158, 171, 186, 220, 247], "arg": [0, 2, 8, 9, 10, 11, 15, 18, 19, 24, 27, 35, 38, 40, 41, 43, 45, 48, 49, 51, 52, 53, 55, 59, 61, 63, 68, 73, 74, 76, 80, 82, 83, 86, 88, 90, 91, 95, 97, 98, 101, 102, 104, 111, 116, 118, 120, 121, 122, 123, 124, 129, 130, 133, 134, 135, 136, 138, 140, 143, 144, 145, 147, 149, 150, 152, 154, 158, 161, 162, 165, 167, 168, 171, 176, 181, 183, 185, 186, 187, 188, 189, 192, 194, 195, 196, 197, 199, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 227, 229, 236, 238, 244, 245, 249], "paint": [0, 1, 7, 11, 18, 24, 38, 63, 124, 129, 158, 171, 182, 205, 216, 217, 220, 230, 238, 255, 256, 257, 259], "implicitli": [0, 11, 134, 154], "convert": [0, 4, 11, 18, 31, 35, 38, 41, 43, 45, 50, 63, 121, 122, 124, 134, 152, 154, 186, 187, 188, 194, 220, 257], "dict": [0, 152, 154], "take": [0, 11, 32, 34, 63, 88, 91, 140, 154, 158, 217, 220, 236, 238, 249], "void": 0, "ptr": [0, 50, 205], "us": [0, 2, 7, 11, 14, 18, 24, 27, 29, 30, 32, 34, 35, 37, 45, 46, 47, 50, 51, 52, 55, 63, 65, 72, 81, 85, 88, 91, 92, 99, 104, 120, 124, 129, 133, 134, 136, 137, 138, 140, 149, 150, 152, 154, 158, 167, 168, 181, 182, 183, 184, 185, 186, 187, 194, 197, 199, 205, 220, 223, 230, 233, 238, 240, 248, 249, 252, 254, 255, 257, 258, 259], "buffer": [0, 11, 18, 27, 29, 38, 43, 50, 53, 55, 58, 59, 61, 88, 91, 124, 129, 134, 138, 140, 144, 147, 158, 171, 186, 189, 197, 202, 205, 210, 211, 212, 213, 214, 220, 230, 244, 249, 252], "protocol": [0, 11, 50, 186], "return": [0, 4, 7, 9, 11, 18, 27, 29, 30, 31, 32, 35, 38, 41, 43, 45, 50, 52, 53, 55, 58, 59, 61, 63, 68, 70, 72, 75, 80, 83, 88, 90, 91, 92, 96, 98, 104, 116, 120, 121, 122, 123, 124, 128, 129, 133, 134, 138, 140, 144, 146, 147, 148, 150, 154, 158, 161, 162, 168, 171, 173, 176, 180, 182, 183, 186, 187, 188, 189, 194, 195, 196, 197, 198, 199, 201, 202, 203, 205, 209, 210, 211, 212, 213, 214, 217, 220, 229, 230, 233, 235, 236, 238, 244, 245, 249, 252, 258], "raw": [0, 124, 154], "memori": [0, 9, 11, 12, 18, 27, 34, 45, 55, 88, 91, 124, 134, 152, 158, 185, 186, 189, 197, 210, 220, 230, 238, 245, 249, 252, 255, 259], "address": [0, 11, 18, 55, 58, 59, 124, 134, 144, 147, 186, 210, 211, 212, 213, 214, 220, 244, 257], "wrap": [0, 11, 18, 85, 88, 91, 110, 114, 124, 134, 158, 186, 220, 252], "memoryview": [0, 11, 18, 35, 50, 124, 158, 186, 194, 220, 230], "numpi": [0, 2, 18, 124, 140, 186, 220, 255, 257], "export": [0, 2, 18, 124, 220, 257], "ad": [0, 81, 122, 124, 133, 148, 158, 168, 170, 183, 187, 189, 194, 233, 259], "imag": [0, 11, 13, 18, 19, 27, 29, 30, 31, 32, 33, 57, 85, 88, 91, 104, 107, 129, 133, 134, 146, 152, 154, 181, 186, 205, 220, 235, 245, 249, 255, 256, 257, 258], "support": [0, 2, 11, 18, 27, 30, 31, 41, 50, 52, 58, 63, 75, 81, 88, 91, 104, 110, 124, 133, 134, 144, 152, 158, 186, 197, 210, 211, 212, 213, 214, 220, 238, 247, 249, 251, 257, 258], "bitmap": [0, 4, 18, 19, 20, 63, 71, 124, 128, 129, 133, 134, 185, 186, 205, 220, 257], "pixmap": [0, 11, 18, 27, 88, 91, 124, 134, 220, 245, 246, 249, 251, 252, 257], "happen": [0, 1, 88, 91, 129, 133, 220, 238], "github": [0, 1, 2], "feel": 0, "free": [0, 11, 88, 91, 176, 182, 252], "post": [0, 129], "issu": [0, 92, 220], "make": [0, 4, 18, 20, 27, 30, 45, 48, 49, 51, 58, 88, 91, 120, 121, 122, 123, 124, 134, 135, 136, 140, 143, 144, 145, 152, 154, 158, 165, 167, 187, 188, 192, 194, 197, 198, 199, 202, 205, 207, 209, 216, 220, 233, 236, 255, 258, 259], "pr": 0, "bind": [1, 2, 4, 88, 91], "graphic": [1, 18, 110, 114], "librari": [1, 2, 255], "an": [1, 4, 11, 14, 17, 18, 27, 29, 31, 32, 35, 41, 45, 48, 49, 50, 58, 63, 68, 70, 72, 83, 88, 91, 92, 93, 122, 124, 129, 133, 134, 136, 138, 140, 144, 150, 152, 154, 158, 161, 162, 168, 173, 175, 176, 181, 182, 183, 186, 187, 189, 194, 196, 197, 199, 202, 205, 210, 211, 212, 213, 214, 217, 220, 227, 230, 233, 238, 240, 249, 252, 255, 257, 258, 259], "open": [1, 18, 21, 50, 58, 124, 144, 158, 161, 210, 211, 212, 213, 214, 257, 259], "sourc": [1, 4, 11, 13, 18, 19, 27, 38, 41, 43, 45, 124, 129, 133, 134, 140, 154, 186, 205, 210, 220, 258], "2d": [1, 116, 140], "which": [1, 4, 11, 18, 27, 30, 31, 32, 38, 40, 41, 51, 53, 70, 88, 91, 110, 124, 129, 133, 134, 140, 152, 154, 158, 176, 181, 182, 183, 186, 210, 220, 238, 239, 255, 258, 259], "provid": [1, 11, 18, 27, 41, 50, 88, 91, 92, 118, 120, 124, 133, 140, 152, 161, 181, 186, 187, 189, 197, 201, 202, 220, 230], "common": [1, 18, 32, 122, 158, 168, 194, 197, 229, 259], "work": [1, 18, 51, 88, 91, 92, 124, 158, 220], "across": [1, 18, 53, 186, 220, 236], "varieti": 1, "hardwar": [1, 124], "softwar": 1, "platform": [1, 2, 11, 18, 63, 124, 220, 238], "develop": 1, "instal": [1, 129, 255], "pypi": 1, "distribut": [1, 116, 154], "build": [1, 11, 52, 124, 134, 154, 182, 189, 233], "instruct": [1, 33, 63], "test": [1, 45, 51, 81, 122, 124, 154, 158, 189, 194, 197], "tutori": 1, "overview": [1, 256], "creation": [1, 110, 220, 256], "path": [1, 2, 4, 18, 49, 50, 51, 58, 59, 63, 72, 124, 144, 148, 154, 165, 167, 168, 171, 175, 176, 178, 197, 210, 211, 212, 213, 214, 217, 236, 238, 256, 257], "notebook": [1, 257], "exampl": [1, 4, 7, 27, 32, 35, 49, 72, 121, 122, 134, 138, 140, 154, 158, 161, 171, 182, 187, 188, 194, 197, 220, 230, 231, 238, 255, 257, 258, 259], "design": [1, 65, 122, 194, 238], "contribut": [1, 140, 158], "refer": [1, 9, 11, 18, 38, 43, 50, 52, 53, 61, 72, 80, 88, 90, 91, 96, 98, 104, 124, 129, 134, 138, 140, 154, 158, 168, 171, 182, 183, 186, 189, 195, 196, 203, 205, 220, 238, 258], "index": [1, 11, 27, 29, 30, 63, 65, 68, 72, 80, 114, 124, 129, 134, 140, 158, 186, 190, 238], "search": [1, 9], "page": [1, 2, 52, 150, 255], "binari": [2, 124, 158, 189, 194, 197], "packag": [2, 255], "avail": [2, 4, 11, 18, 37, 124, 129, 220, 238, 258], "pip": [2, 255], "python": [2, 4, 50, 52, 124, 154, 256], "x86_64": 2, "aarch64": 2, "arm64": 2, "For": [2, 4, 14, 18, 27, 32, 33, 45, 49, 52, 63, 88, 91, 129, 134, 140, 154, 158, 171, 186, 220, 236, 257, 258], "must": [2, 9, 11, 18, 27, 30, 34, 38, 43, 48, 50, 52, 53, 58, 61, 65, 72, 80, 88, 90, 91, 96, 98, 104, 110, 116, 124, 129, 133, 134, 138, 140, 144, 158, 171, 181, 182, 183, 186, 195, 196, 202, 203, 205, 210, 211, 212, 213, 214, 220, 222, 230, 236, 238, 249, 252, 255], "opengl": [2, 18, 88, 91, 140, 256], "fontconfig": 2, "apt": 2, "get": [2, 18, 27, 30, 32, 51, 83, 88, 91, 92, 104, 140, 158, 173, 177, 210, 238, 249, 252], "libfontconfig1": 2, "libgl1": 2, "mesa": 2, "glx": 2, "dri": 2, "Or": [2, 11, 186], "yum": 2, "libgl": 2, "driver": [2, 88, 91, 92, 220], "unsupport": 2, "check": [2, 4, 11, 18, 45, 63, 88, 91, 104, 122, 134, 154, 158, 186, 189, 194, 220, 251, 257], "first": [2, 4, 18, 27, 30, 38, 43, 58, 63, 88, 91, 133, 140, 144, 148, 158, 168, 171, 178, 194, 210, 211, 212, 213, 214, 249, 258, 259], "clone": [2, 238], "repo": 2, "git": 2, "recurs": [2, 129], "http": [2, 116, 181], "com": 2, "kyamagu": 2, "cd": 2, "The": [2, 4, 11, 18, 19, 27, 28, 29, 30, 31, 32, 34, 43, 50, 52, 53, 55, 58, 59, 63, 65, 70, 75, 85, 88, 90, 91, 92, 98, 104, 110, 116, 122, 124, 129, 133, 134, 138, 140, 144, 147, 148, 150, 152, 154, 158, 165, 168, 171, 176, 178, 181, 182, 183, 186, 187, 189, 194, 197, 202, 205, 210, 211, 212, 213, 214, 220, 221, 227, 230, 236, 238, 244, 245, 249, 252, 255, 257, 258], "repositori": 2, "bundl": 2, "its": [2, 4, 11, 18, 29, 53, 63, 72, 88, 91, 122, 124, 133, 136, 140, 148, 150, 158, 165, 182, 186, 189, 194, 196, 202, 205, 210, 220, 227, 233, 235, 238, 252, 259], "tool": 2, "depot_tool": 2, "submodul": 2, "actual": [2, 11, 32, 50, 58, 65, 88, 91, 92, 124, 129, 136, 144, 210, 211, 212, 213, 214, 220, 239, 245, 249, 255, 257], "ci": 2, "procedur": 2, "implement": [2, 11, 18, 27, 31, 38, 43, 53, 55, 58, 59, 61, 88, 91, 124, 129, 133, 134, 138, 144, 147, 154, 158, 168, 171, 186, 189, 205, 210, 211, 212, 213, 214, 244, 258], "script": 2, "build_": 2, "o": [2, 124, 140, 205, 256, 257], "sh": 2, "compil": [2, 11, 158, 186, 187, 189, 194], "time": [2, 11, 18, 27, 32, 51, 53, 55, 63, 88, 91, 134, 140, 158, 161, 162, 182, 186, 187, 199, 220], "requir": [2, 4, 11, 18, 27, 30, 31, 38, 41, 45, 63, 88, 91, 92, 124, 129, 134, 140, 154, 186, 187, 220, 230, 259], "run": [2, 197, 230, 231, 233, 238, 257], "type": [2, 4, 11, 18, 19, 27, 32, 37, 38, 43, 45, 50, 53, 61, 63, 88, 91, 104, 124, 129, 134, 138, 140, 158, 161, 162, 171, 181, 186, 189, 205, 220, 229, 238, 249, 250, 251, 258], "inform": [2, 18, 29, 85, 88, 91, 152, 158], "rtti": 2, "enabl": [2, 88, 91], "frtti": 2, "flag": [2, 11, 63, 88, 91, 116, 124, 158, 168, 176, 181, 202, 220, 227], "clang": 2, "gcc": 2, "gr": 2, "cl": [2, 140], "ex": 2, "visual": [2, 140], "md": 2, "set": [2, 4, 11, 18, 24, 27, 30, 41, 45, 49, 51, 53, 58, 63, 65, 70, 71, 72, 75, 88, 91, 93, 110, 121, 122, 123, 124, 134, 136, 140, 144, 149, 152, 154, 157, 158, 161, 162, 181, 186, 187, 188, 189, 192, 194, 197, 198, 199, 201, 209, 210, 211, 212, 213, 214, 215, 220, 229, 233, 238, 240, 245, 249, 258], "gn": 2, "should": [2, 11, 17, 18, 27, 28, 29, 32, 33, 48, 50, 52, 53, 63, 88, 91, 92, 104, 114, 124, 129, 133, 152, 153, 158, 172, 181, 186, 205, 210, 217, 220, 245, 249, 255, 257], "includ": [2, 4, 11, 18, 27, 122, 124, 133, 134, 140, 152, 154, 158, 182, 186, 194, 220, 236, 239, 255], "skia_enable_tool": 2, "true": [2, 4, 7, 9, 11, 18, 27, 35, 38, 43, 45, 50, 52, 53, 55, 58, 59, 61, 63, 70, 72, 80, 83, 88, 90, 91, 96, 98, 104, 121, 122, 123, 124, 129, 133, 134, 138, 140, 144, 147, 148, 152, 154, 158, 161, 168, 171, 176, 181, 182, 186, 187, 188, 189, 194, 195, 196, 197, 198, 199, 201, 203, 205, 209, 210, 211, 212, 213, 214, 217, 220, 238, 244, 245, 249, 257, 258, 259], "h": [2, 4, 122, 140, 194], "header": 2, "detail": [2, 88, 91, 124, 220, 256], "offici": 2, "prerequisit": 2, "2": [2, 4, 5, 11, 13, 14, 16, 18, 19, 20, 21, 22, 23, 27, 28, 31, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 49, 53, 54, 56, 57, 61, 62, 63, 64, 69, 70, 71, 76, 77, 79, 81, 87, 93, 94, 108, 112, 113, 118, 119, 124, 127, 129, 132, 134, 138, 139, 140, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 166, 171, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 187, 189, 190, 191, 197, 200, 202, 205, 206, 217, 219, 220, 222, 234, 235, 236, 238, 239, 240, 241, 245, 246, 248, 249, 250, 254, 258], "7": [2, 13, 14, 27, 31, 37, 45, 46, 56, 57, 76, 79, 87, 94, 140, 245, 246, 258], "onli": [2, 4, 9, 11, 18, 25, 27, 30, 38, 43, 47, 49, 50, 52, 53, 61, 63, 72, 80, 88, 90, 91, 96, 98, 104, 124, 128, 129, 133, 138, 140, 154, 158, 171, 182, 186, 189, 195, 196, 203, 205, 220, 230, 235, 238, 247, 248, 255, 258], "glibc": 2, "17": [2, 13, 46, 87, 94], "10": [2, 7, 13, 14, 46, 49, 56, 94, 158, 181, 245, 246, 250, 253, 257, 258], "93": 2, "depend": [2, 11, 13, 18, 88, 91, 124, 158, 161, 162, 168, 220, 230, 245], "y": [2, 11, 18, 19, 27, 32, 53, 63, 70, 121, 122, 124, 133, 134, 137, 140, 141, 158, 168, 181, 182, 186, 187, 188, 189, 194, 197, 198, 199, 201, 220, 230, 233, 245, 246, 248, 250, 253, 258], "dev": [2, 51, 116], "devel": 2, "up": [2, 11, 27, 49, 92, 110, 158, 168, 186, 189, 194, 198, 199, 220, 258], "At": 2, "thi": [2, 4, 7, 9, 11, 12, 18, 24, 27, 28, 29, 30, 31, 32, 33, 34, 38, 43, 45, 49, 50, 51, 52, 53, 55, 58, 61, 63, 72, 75, 80, 83, 85, 88, 90, 91, 92, 96, 98, 104, 110, 116, 120, 122, 124, 129, 133, 134, 136, 138, 140, 144, 146, 150, 152, 154, 158, 168, 171, 176, 181, 182, 183, 184, 185, 186, 187, 189, 194, 195, 196, 197, 203, 205, 210, 211, 212, 213, 214, 215, 217, 220, 230, 233, 236, 238, 239, 245, 249, 252, 255, 257, 258], "point": [2, 4, 11, 18, 21, 35, 45, 49, 58, 60, 63, 88, 91, 116, 121, 133, 140, 144, 150, 154, 158, 161, 162, 165, 168, 176, 180, 186, 188, 189, 192, 194, 197, 198, 199, 210, 211, 212, 213, 214, 230, 233, 238, 240, 249, 250, 257, 259], "execut": [2, 11, 18, 88, 91, 255], "note": [2, 9, 27, 29, 38, 43, 49, 51, 52, 53, 61, 63, 72, 80, 88, 90, 91, 92, 96, 98, 104, 124, 129, 133, 136, 138, 140, 171, 182, 187, 195, 196, 203, 205, 210, 217, 220, 236, 238, 248, 257], "rel": [2, 58, 63, 116, 140, 144, 158, 197, 210, 211, 212, 213, 214, 220, 233, 238, 247, 257, 258], "new": [2, 9, 18, 24, 35, 38, 41, 43, 45, 50, 52, 53, 61, 72, 80, 88, 90, 91, 92, 93, 96, 98, 104, 124, 129, 134, 138, 146, 154, 158, 168, 171, 182, 183, 187, 188, 195, 196, 199, 202, 203, 205, 217, 220, 230, 233, 238, 259], "pwd": 2, "python2": 2, "sync": [2, 88, 91, 220], "dep": 2, "bin": 2, "gen": 2, "out": [2, 4, 7, 11, 18, 27, 35, 52, 88, 91, 140, 154, 158, 186, 196, 202, 258], "releas": [2, 11, 110, 124, 134, 158, 186, 196], "is_official_build": 2, "skia_use_system_libjpeg_turbo": 2, "fals": [2, 4, 11, 18, 27, 45, 50, 58, 63, 70, 82, 83, 88, 91, 122, 124, 133, 140, 144, 154, 158, 168, 171, 176, 182, 186, 187, 188, 189, 194, 197, 199, 210, 211, 212, 213, 214, 217, 220, 238, 245, 249, 255], "skia_use_system_libwebp": 2, "skia_use_system_libpng": 2, "skia_use_system_icu": 2, "skia_use_system_harfbuzz": 2, "extra_cflags_cc": 2, "extra_ldflag": 2, "lrt": 2, "ninja": 2, "Then": 2, "desir": [2, 27, 65, 88, 91, 122, 186, 220], "version": [2, 18, 27, 40, 55, 124, 154, 220], "skia_path": 2, "skia_out_path": 2, "m": [2, 133, 140], "wheel": 2, "setup": 2, "py": [2, 11, 18, 140, 158, 161, 186], "bdist_wheel": 2, "xcode": 2, "command": [2, 18, 88, 91, 92, 124, 150, 182, 183, 202, 220, 255, 257], "line": [2, 4, 18, 21, 27, 63, 70, 140, 158, 159, 168, 172, 187, 197, 201, 230, 257, 259], "14": [2, 13, 46, 87, 94], "can": [2, 4, 11, 18, 27, 29, 30, 32, 36, 38, 41, 43, 45, 47, 48, 50, 51, 52, 53, 58, 72, 75, 85, 88, 91, 92, 93, 104, 107, 114, 120, 124, 129, 133, 134, 140, 144, 150, 152, 154, 171, 173, 178, 181, 182, 185, 186, 187, 189, 210, 211, 212, 213, 214, 220, 227, 238, 239, 240, 249, 252, 255, 257, 258, 259], "gener": [2, 11, 18, 27, 31, 53, 85, 92, 116, 124, 140, 154, 158, 161, 173, 182, 183, 186, 189, 194, 202, 258], "step": [2, 11], "abov": [2, 18, 70, 229, 249, 257], "env": 2, "skia_use_system_expat": 2, "skia_use_system_zlib": 2, "ehsc": 2, "target_cpu": 2, "pytest": 2, "glfw": [2, 255], "altern": [2, 93, 235, 255, 257], "tox": 2, "under": [2, 88, 91, 133], "variou": [2, 31, 48, 154, 173, 257, 258], "onc": [2, 11, 18, 32, 88, 91, 154, 173, 205, 238, 259], "sphinx": 2, "rtd": 2, "theme": 2, "build_sphinx": 2, "alphatypeisopaqu": 4, "alphatyp": [4, 11, 18, 41, 88, 91, 124, 134, 186, 220, 257], "bool": [4, 7, 9, 11, 18, 27, 35, 38, 41, 43, 45, 50, 52, 53, 55, 58, 59, 61, 63, 70, 72, 75, 80, 82, 83, 84, 85, 86, 88, 90, 91, 92, 96, 98, 104, 118, 121, 122, 123, 124, 129, 133, 134, 138, 140, 144, 147, 154, 158, 161, 168, 171, 176, 182, 186, 187, 188, 189, 192, 194, 195, 196, 197, 198, 199, 201, 203, 205, 209, 210, 211, 212, 213, 214, 215, 217, 220, 226, 227, 230, 231, 238, 240, 244, 245, 249, 251, 252], "equal": [4, 11, 18, 27, 30, 45, 50, 63, 75, 121, 122, 123, 124, 134, 140, 158, 168, 173, 182, 186, 187, 189, 191, 194, 197, 209, 215, 217, 238], "kopaque_alphatyp": [4, 5, 11, 124, 134, 186], "hint": [4, 11, 18, 24, 63, 124, 134, 168, 182, 220, 238], "colortyp": [4, 11, 18, 41, 82, 88, 91, 101, 102, 104, 124, 134, 186, 220, 226, 249], "opaqu": [4, 5, 11, 18, 29, 35, 63, 64, 124, 134, 152, 154, 186, 205], "alpha": [4, 5, 11, 14, 18, 27, 29, 35, 41, 43, 46, 47, 124, 133, 134, 136, 149, 154, 186, 205, 220, 229, 245, 246, 248, 250, 258], "valu": [4, 5, 6, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 44, 46, 47, 51, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 67, 69, 70, 71, 75, 77, 78, 79, 81, 87, 88, 91, 93, 94, 99, 103, 105, 106, 107, 108, 112, 113, 116, 117, 119, 121, 122, 124, 125, 126, 127, 128, 131, 132, 133, 134, 139, 140, 141, 142, 147, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 164, 166, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 186, 187, 188, 189, 190, 191, 194, 197, 200, 205, 206, 215, 217, 218, 219, 220, 222, 223, 224, 225, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 258, 259], "1": [4, 5, 6, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 41, 43, 45, 46, 47, 50, 52, 53, 56, 57, 60, 61, 63, 64, 69, 70, 71, 72, 76, 77, 79, 80, 81, 87, 88, 90, 91, 93, 94, 96, 98, 99, 103, 104, 105, 106, 107, 108, 112, 113, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 131, 133, 134, 138, 140, 141, 142, 149, 150, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 189, 190, 191, 192, 195, 196, 197, 200, 202, 203, 205, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 234, 235, 236, 237, 238, 239, 240, 241, 245, 246, 248, 249, 250, 253, 254, 258], "0": [4, 5, 6, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 38, 39, 41, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 69, 72, 76, 77, 78, 81, 87, 88, 91, 94, 95, 97, 99, 103, 104, 105, 106, 107, 108, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 136, 138, 139, 140, 141, 142, 144, 147, 149, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 194, 197, 200, 202, 205, 206, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259], "equival": [4, 11, 18, 55, 88, 91, 121, 140, 154, 155, 156, 158, 186, 187, 217, 220, 230], "If": [4, 9, 11, 18, 19, 24, 27, 30, 31, 32, 33, 38, 41, 43, 45, 50, 51, 52, 53, 58, 61, 63, 70, 72, 80, 83, 88, 90, 91, 92, 96, 98, 104, 114, 116, 122, 124, 129, 133, 134, 138, 140, 144, 146, 152, 154, 158, 161, 162, 168, 171, 173, 176, 181, 182, 183, 184, 186, 187, 188, 189, 194, 195, 196, 197, 203, 205, 210, 211, 212, 213, 214, 217, 220, 230, 233, 236, 238, 245, 248, 249, 257, 259], "result": [4, 9, 11, 13, 18, 27, 38, 43, 49, 51, 53, 63, 72, 88, 91, 120, 122, 124, 129, 133, 134, 140, 148, 150, 154, 158, 161, 162, 171, 176, 181, 182, 183, 186, 189, 194, 196, 197, 198, 199, 217, 220, 221, 230, 238, 257], "draw": [4, 11, 18, 19, 20, 21, 28, 38, 41, 52, 53, 63, 64, 81, 88, 91, 124, 129, 133, 134, 138, 150, 152, 153, 154, 158, 168, 171, 175, 182, 183, 186, 197, 202, 220, 227, 230, 233, 235, 255, 256, 258, 259], "ani": [4, 11, 18, 19, 27, 29, 30, 45, 58, 65, 70, 72, 85, 88, 91, 110, 124, 133, 134, 140, 144, 150, 158, 171, 182, 183, 186, 194, 205, 210, 211, 212, 213, 214, 217, 220, 238, 257, 258], "pixel": [4, 5, 11, 12, 13, 18, 27, 31, 41, 46, 49, 63, 64, 107, 124, 129, 133, 134, 149, 152, 154, 184, 185, 186, 197, 220, 249, 252, 257], "less": [4, 11, 18, 27, 63, 122, 124, 134, 140, 154, 158, 168, 182, 186, 189, 194, 197], "than": [4, 11, 18, 24, 27, 63, 122, 124, 129, 134, 140, 154, 158, 168, 175, 181, 182, 186, 187, 189, 194, 197, 205, 210, 220, 230, 238, 248], "undefin": [4, 11, 18, 27, 122, 124, 140, 161, 162, 183, 186], "aswind": 4, "fill": [4, 11, 18, 19, 27, 51, 88, 91, 124, 129, 140, 141, 154, 157, 158, 167, 171, 173, 181, 191, 217, 249, 257, 258, 259], "wind": [4, 158, 175], "area": [4, 11, 18, 28, 122, 123, 124, 134, 158, 181, 186, 187, 189, 194, 197, 259], "success": [4, 11, 27, 31, 55, 58, 59, 88, 91, 92, 140, 144, 147, 182, 186, 210, 211, 212, 213, 214, 220, 230, 244], "doe": [4, 11, 18, 27, 29, 30, 45, 51, 58, 63, 81, 88, 91, 122, 124, 133, 134, 136, 140, 144, 154, 158, 162, 168, 182, 183, 186, 189, 194, 197, 198, 199, 210, 211, 212, 213, 214, 217, 220, 230, 233, 238, 245, 249, 252, 255, 257, 259], "detect": [4, 133, 158], "contain": [4, 11, 18, 24, 27, 29, 30, 31, 33, 41, 49, 63, 66, 110, 122, 124, 133, 134, 140, 154, 158, 168, 176, 181, 182, 183, 185, 187, 189, 194, 197, 198, 215, 220, 230, 236, 246, 259], "contour": [4, 18, 63, 158, 159, 161, 168, 170, 176, 180, 236, 259], "self": [4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], "cross": [4, 175, 187, 188], "other": [4, 11, 13, 18, 27, 45, 50, 88, 91, 92, 122, 124, 137, 140, 158, 182, 183, 186, 187, 194, 197, 215, 217, 220, 230, 238, 248, 255, 257], "case": [4, 9, 27, 30, 38, 41, 43, 45, 50, 51, 52, 53, 61, 70, 72, 80, 88, 90, 91, 92, 96, 98, 104, 124, 129, 134, 138, 140, 158, 171, 176, 182, 194, 195, 196, 203, 205, 210, 220, 238, 257, 258], "mai": [4, 9, 11, 18, 24, 27, 34, 38, 41, 43, 52, 53, 55, 58, 61, 63, 65, 71, 72, 80, 81, 88, 90, 91, 96, 98, 104, 107, 116, 122, 124, 129, 134, 138, 140, 144, 150, 152, 154, 158, 161, 168, 171, 182, 183, 186, 187, 189, 194, 195, 196, 197, 201, 202, 203, 205, 210, 211, 212, 213, 214, 217, 220, 230, 233, 238, 240, 254, 257, 258, 259], "even": [4, 11, 18, 19, 30, 31, 41, 49, 88, 91, 92, 124, 134, 172, 189, 197, 236, 238, 255, 259], "though": [4, 11, 18, 134, 140, 197, 238, 255, 257], "oper": [4, 13, 18, 40, 47, 124, 140, 148, 178, 182, 183, 187, 197, 220], "wa": [4, 11, 18, 31, 53, 88, 91, 124, 140, 152, 158, 161, 176, 182, 197, 199, 201, 217, 220, 230, 238, 257], "abl": [4, 18, 27, 63, 92, 220], "produc": [4, 45, 52, 129, 133, 140, 181, 194, 205, 217], "otherwis": [4, 11, 18, 27, 45, 58, 63, 83, 122, 124, 129, 140, 144, 150, 154, 158, 168, 173, 176, 182, 186, 187, 188, 189, 194, 197, 199, 210, 211, 212, 213, 214, 217, 220, 230], "throw": [4, 215], "runtim": 4, "error": [4, 29, 31, 45, 88, 91, 92, 124, 150, 154, 187, 196, 210, 238], "input": [4, 11, 27, 31, 40, 55, 59, 116, 122, 129, 133, 136, 140, 147, 154, 171, 186, 187, 189, 194, 220, 244, 245, 257], "paramet": [4, 7, 11, 18, 27, 31, 35, 41, 45, 49, 50, 51, 55, 58, 59, 63, 65, 70, 72, 74, 88, 91, 116, 121, 122, 124, 133, 134, 138, 140, 144, 147, 148, 150, 154, 158, 161, 162, 165, 168, 173, 181, 182, 183, 186, 187, 189, 194, 197, 198, 199, 201, 202, 210, 211, 212, 213, 214, 217, 220, 230, 233, 238, 240, 244, 249, 257], "typic": [4, 53, 70, 88, 91, 124, 129, 186, 220], "odd": [4, 18, 49, 175], "blendmode_ascoeff": 4, "mode": [4, 13, 14, 18, 27, 38, 40, 43, 47, 116, 124, 129, 133, 154, 158, 182, 208, 220, 236, 240, 255, 258], "blendmod": [4, 18, 38, 40, 43, 47, 154, 208, 220, 257, 258], "src": [4, 11, 14, 18, 38, 40, 43, 50, 88, 91, 129, 133, 140, 146, 149, 154, 158, 171, 194, 197, 208, 215, 217, 220, 258], "blendmodecoeff": 4, "dst": [4, 11, 14, 18, 27, 30, 38, 40, 43, 45, 55, 124, 133, 140, 149, 154, 158, 171, 176, 186, 187, 189, 208, 217, 220, 258], "coeffici": [4, 14, 45, 133], "base": [4, 11, 14, 18, 27, 28, 29, 52, 53, 61, 88, 91, 104, 110, 124, 129, 133, 134, 138, 146, 158, 165, 171, 181, 186, 196, 220, 230, 238], "blend": [4, 13, 14, 18, 29, 30, 40, 133, 208, 257, 258], "klastcoeffmod": [4, 13, 14], "": [4, 9, 27, 28, 30, 32, 35, 38, 43, 52, 53, 58, 61, 63, 72, 80, 88, 90, 91, 92, 93, 96, 98, 104, 124, 129, 133, 138, 140, 144, 146, 150, 152, 168, 171, 176, 180, 182, 188, 195, 196, 203, 205, 210, 211, 212, 213, 214, 220, 235, 238, 249, 255, 258], "blendmode_nam": [4, 258], "str": [4, 18, 27, 38, 43, 50, 53, 55, 58, 59, 61, 63, 72, 88, 91, 129, 138, 144, 147, 151, 171, 189, 203, 205, 210, 211, 212, 213, 214, 215, 230, 233, 238, 244], "null": [4, 24, 27, 30, 31, 45, 50, 58, 72, 88, 91, 116, 129, 133, 144, 150, 173, 181, 182, 183, 210, 211, 212, 213, 214, 220, 236, 238], "termin": [4, 255], "string": [4, 18, 152, 230], "color": [4, 11, 13, 14, 18, 19, 27, 28, 29, 35, 36, 37, 38, 41, 43, 45, 88, 91, 104, 116, 120, 124, 133, 134, 136, 149, 154, 186, 205, 208, 220, 235, 240, 249, 251, 252, 255, 257, 259], "r": [4, 11, 35, 122, 133, 136, 140, 154, 158, 168, 189, 194, 197, 217, 246, 253, 258], "int": [4, 5, 6, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 91, 93, 94, 95, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 139, 140, 141, 142, 144, 146, 147, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 163, 164, 166, 168, 169, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 184, 186, 187, 189, 190, 191, 194, 197, 200, 201, 202, 206, 208, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], "b": [4, 11, 35, 53, 61, 122, 133, 136, 140, 154, 158, 187, 188, 194, 205, 246, 248, 253], "255": [4, 11, 18, 43, 154, 181, 186, 229, 257, 258], "8": [4, 11, 13, 14, 18, 22, 27, 31, 37, 46, 56, 57, 63, 70, 71, 76, 79, 87, 93, 94, 112, 124, 140, 142, 154, 158, 163, 179, 186, 230, 245, 246, 250, 255, 258, 259], "bit": [4, 11, 18, 41, 45, 46, 88, 91, 121, 122, 124, 134, 140, 142, 154, 158, 186, 187, 188, 189, 194, 238, 250], "compon": [4, 5, 11, 13, 18, 35, 41, 43, 124, 133, 134, 140, 154, 186, 187, 257, 259], "In": [4, 18, 27, 28, 30, 85, 88, 91, 92, 129, 140, 158, 181, 182, 197, 220, 255, 258], "repres": [4, 18, 27, 30, 37, 38, 43, 45, 63, 65, 124, 129, 134, 140, 154, 158, 173, 182, 187, 189, 194, 238, 249, 251, 258], "32": [4, 18, 46, 93, 112, 121, 122, 134, 154, 158, 186, 187, 188, 189, 194, 257, 258], "argb": [4, 18, 35, 154], "word": [4, 46, 186], "where": [4, 14, 18, 27, 88, 91, 124, 133, 140, 154, 158, 168, 251, 257, 258], "each": [4, 11, 13, 18, 21, 27, 43, 46, 48, 52, 63, 116, 120, 124, 133, 134, 140, 153, 158, 161, 165, 171, 181, 182, 184, 186, 187, 189, 220, 229, 230, 233, 238, 245, 246, 249, 251, 255, 257, 258, 259], "ha": [4, 11, 18, 27, 29, 34, 50, 52, 53, 63, 70, 88, 91, 92, 99, 104, 122, 124, 134, 140, 154, 158, 161, 162, 173, 182, 186, 188, 189, 194, 197, 205, 220, 238, 249, 255, 257], "specifi": [4, 11, 14, 18, 27, 28, 30, 48, 49, 50, 52, 53, 58, 63, 65, 70, 72, 88, 91, 116, 124, 134, 140, 144, 158, 165, 167, 171, 175, 176, 182, 186, 189, 198, 205, 210, 211, 212, 213, 214, 217, 220, 230, 233, 238, 240, 245, 246, 248, 249, 255, 257, 258], "liter": 4, "construct": [4, 11, 18, 38, 43, 45, 63, 121, 122, 140, 154, 158, 181, 182, 187, 189, 194, 197, 230, 233], "float": [4, 11, 18, 27, 35, 38, 40, 43, 45, 46, 48, 49, 51, 52, 53, 55, 58, 59, 63, 67, 70, 116, 118, 124, 133, 135, 138, 140, 143, 144, 147, 151, 154, 158, 161, 162, 165, 168, 176, 181, 183, 186, 187, 188, 189, 192, 194, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 229, 230, 233, 236, 244, 250, 257], "represent": [4, 27, 140, 152, 153, 158, 189, 194], "via": [4, 9, 27, 38, 43, 52, 53, 61, 72, 80, 88, 90, 91, 92, 96, 98, 104, 124, 129, 138, 171, 182, 195, 196, 203, 205, 220, 238, 255, 257], "color4f": [4, 11, 18, 38, 40, 43, 88, 91, 154, 186, 208], "0xffff0000": 4, "rgb": [4, 11, 18, 43, 45, 120, 133, 154, 246], "rgba": [4, 35, 40, 133, 154, 246, 257], "colorsetrgb": 4, "colorsetargb": [4, 258], "assert": [4, 11, 35, 50, 72, 122, 134, 140, 154, 186, 189, 194, 255, 258], "sk_debug": [4, 11, 35, 122, 140, 186, 194], "defin": [4, 11, 18, 35, 122, 124, 133, 140, 158, 167, 186, 189, 194, 202, 220, 230, 233, 258], "exce": [4, 11, 18, 88, 91, 124, 134, 186, 189, 220], "sinc": [4, 11, 18, 27, 30, 32, 85, 122, 124, 140, 194, 255, 259], "unpremultipli": [4, 11, 18, 35, 154, 186], "smaller": [4, 18, 122, 129, 134, 158, 160, 168, 169, 194, 230], "largest": [4, 155, 156, 191], "amount": [4, 11, 18, 154, 158], "red": [4, 11, 35, 41, 46, 134, 136, 154], "full": [4, 11, 18, 27, 30, 32, 124, 133, 154, 220, 245, 253], "green": [4, 11, 35, 41, 46, 134, 136, 154], "blue": [4, 11, 35, 41, 46, 134, 136, 154], "fulli": [4, 11, 13, 18, 124, 154, 249], "transpar": [4, 11, 13, 18, 20, 24, 28, 41, 63, 64, 124, 134, 154, 186, 205, 220, 235], "colorgeta": [4, 154], "byte": [4, 11, 18, 27, 41, 46, 47, 50, 55, 58, 59, 88, 91, 124, 134, 144, 147, 158, 182, 186, 189, 197, 210, 211, 212, 213, 214, 220, 230, 238, 244, 245, 249], "colorgetb": [4, 154], "zero": [4, 11, 12, 13, 18, 27, 30, 34, 41, 63, 70, 71, 121, 122, 124, 134, 136, 140, 150, 154, 158, 161, 162, 168, 175, 176, 182, 186, 187, 189, 191, 194, 196, 197, 220, 230, 238, 249, 255, 257, 259], "colorgetg": [4, 154], "colorgetr": [4, 154], "colorseta": 4, "ignor": [4, 11, 18, 30, 31, 41, 43, 50, 52, 63, 65, 70, 88, 91, 124, 134, 158, 161, 171, 173, 186, 220, 230, 249], "replac": [4, 11, 13, 18, 129, 154, 158, 197, 220], "pack": [4, 124, 154, 250], "eight": [4, 189], "per": [4, 11, 18, 27, 41, 124, 133, 134, 152, 158, 186, 220, 238, 245, 249], "colortohsv": 4, "list": [4, 18, 27, 38, 40, 43, 49, 63, 68, 72, 88, 91, 116, 133, 140, 149, 151, 158, 161, 162, 168, 189, 194, 197, 205, 229, 230, 233, 238, 240, 245, 249, 252, 255, 258, 259], "hsv": 4, "hue": [4, 13], "assign": [4, 187, 197, 258], "360": [4, 18, 116, 150, 158, 168], "satur": [4, 13], "one": [4, 11, 18, 20, 28, 29, 30, 32, 33, 36, 41, 43, 45, 53, 63, 88, 91, 104, 110, 124, 129, 133, 134, 140, 145, 148, 154, 158, 168, 176, 182, 183, 186, 187, 189, 197, 220, 230, 236, 238, 255, 257, 259], "three": [4, 158, 187, 188, 189, 258, 259], "element": [4, 18, 35, 133, 140, 150, 154, 158, 161, 162, 197, 198, 199, 202], "arrai": [4, 11, 18, 19, 21, 35, 49, 50, 63, 92, 116, 124, 133, 134, 140, 158, 161, 162, 186, 187, 189, 194, 197, 198, 199, 220, 230, 233, 238, 240, 249, 252, 255, 257], "hold": [4, 11, 18, 19, 27, 35, 50, 52, 121, 122, 124, 134, 140, 186, 187, 188, 194, 257, 258], "colortypebytesperpixel": 4, "ct": [4, 41, 134, 258], "number": [4, 11, 18, 19, 27, 28, 29, 41, 49, 50, 55, 58, 59, 63, 88, 91, 124, 129, 134, 144, 147, 158, 172, 175, 181, 182, 186, 189, 194, 197, 210, 211, 212, 213, 214, 220, 230, 238, 244, 245, 249, 252, 257, 258], "store": [4, 11, 18, 27, 50, 52, 92, 107, 122, 124, 140, 158, 161, 162, 186, 189, 194, 197, 217, 220, 245, 249, 252, 257], "unus": [4, 11, 186], "pad": [4, 134], "kunknown_colortyp": [4, 11, 18, 41, 46, 124, 134, 186, 220], "invalid": [4, 11, 18, 31, 53, 63, 83, 88, 91, 93, 116, 122, 124, 140, 183, 189, 194, 220, 245, 249, 252], "colortypeisalwaysopaqu": 4, "alwai": [4, 18, 19, 27, 35, 50, 53, 63, 88, 91, 124, 129, 154, 158, 168, 186, 197, 210, 220, 235, 238, 259], "decod": [4, 27, 29, 30, 31, 32, 33, 124, 230], "reserv": [4, 11, 70, 168], "encod": [4, 18, 27, 41, 56, 57, 63, 88, 91, 124, 133, 134, 136, 152, 154, 186, 197, 220, 230, 233, 238, 257], "colortypevalidatealphatyp": 4, "canon": 4, "none": [4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258], "valid": [4, 5, 11, 13, 18, 27, 31, 41, 53, 63, 65, 70, 71, 83, 88, 91, 104, 120, 122, 124, 134, 154, 158, 182, 186, 189, 194, 202, 220, 230, 238, 248, 249, 252, 253], "more": [4, 11, 18, 27, 31, 55, 58, 88, 91, 124, 129, 133, 140, 144, 148, 152, 158, 168, 182, 186, 189, 197, 210, 211, 212, 213, 214, 220, 256, 258, 259], "nullptr": [4, 11, 18, 24, 41, 45, 58, 63, 72, 120, 124, 134, 140, 144, 146, 154, 158, 182, 186, 199, 201, 205, 210, 211, 212, 213, 214, 220, 230, 233, 238, 249], "kunknown_alphatyp": [4, 5, 11, 41, 124, 134, 186], "output": [4, 11, 27, 32, 33, 38, 43, 52, 63, 124, 133, 140, 152, 158, 171, 189, 194, 202, 220, 255, 257], "storag": [4, 11, 18, 63, 70, 124, 134, 140, 158, 161, 162, 168, 182, 186, 220, 230, 252], "associ": [4, 11, 18, 63, 88, 91, 104, 124, 134, 150, 152, 153, 158, 161, 162, 176, 186, 205, 230, 238], "computeisopaqu": [4, 186], "bm": [4, 140], "determin": [4, 11, 18, 27, 32, 124, 129, 133, 140, 158, 186, 220, 230, 233, 245, 249, 259], "how": [4, 18, 27, 28, 29, 33, 41, 58, 63, 92, 124, 133, 134, 136, 140, 144, 154, 165, 184, 186, 210, 211, 212, 213, 214, 238, 239, 245, 246, 247, 250, 255, 257, 258], "whether": [4, 17, 18, 27, 29, 34, 50, 63, 64, 75, 88, 91, 99, 104, 124, 140, 154, 158, 186, 220, 251, 259], "describ": [4, 11, 14, 18, 27, 36, 41, 45, 47, 56, 63, 122, 124, 134, 140, 154, 158, 161, 162, 168, 181, 182, 186, 189, 194, 197, 220, 227, 230, 247, 252, 253, 257, 259], "without": [4, 11, 18, 27, 50, 124, 140, 152, 154, 176, 181, 186, 220, 249, 259], "have": [4, 7, 9, 11, 18, 27, 38, 43, 45, 48, 50, 52, 53, 58, 61, 71, 72, 80, 85, 88, 90, 91, 92, 96, 98, 104, 122, 124, 129, 133, 138, 140, 144, 158, 161, 171, 181, 182, 183, 186, 189, 194, 195, 196, 197, 203, 205, 210, 211, 212, 213, 214, 217, 220, 238, 245, 248, 249, 252, 255, 257, 258], "greater": [4, 11, 18, 63, 122, 124, 134, 140, 154, 158, 168, 173, 182, 186, 189, 194, 197, 220], "krgb_565_colortyp": [4, 11, 46, 186], "kgray_8_colortyp": [4, 11, 46, 124, 186], "kalpha_8_colortyp": [4, 11, 18, 46, 124, 134, 186], "kbgra_8888_colortyp": [4, 11, 46, 134, 186], "krgba_8888_colortyp": [4, 11, 18, 46, 124, 134, 186, 220, 255, 257], "kargb_4444_colortyp": [4, 11, 46, 186], "15": [4, 13, 18, 22, 37, 46, 87, 94, 186], "krgba_f16_colortyp": [4, 11, 46, 186], "encodedorigintomatrix": 4, "origin": [4, 11, 18, 19, 27, 30, 51, 63, 70, 122, 124, 129, 133, 134, 140, 152, 154, 158, 171, 186, 187, 189, 194, 205, 220, 235, 236, 245, 259], "encodedorigin": [4, 27, 245], "w": [4, 122, 140, 158, 168, 194, 205], "matrix": [4, 6, 7, 11, 18, 38, 40, 43, 45, 53, 63, 116, 124, 129, 133, 135, 137, 143, 154, 158, 167, 171, 176, 182, 189, 192, 205, 220, 257], "given": [4, 11, 18, 27, 32, 35, 45, 68, 72, 88, 91, 104, 110, 116, 124, 129, 133, 134, 140, 154, 158, 171, 176, 181, 210, 220, 227, 238, 245, 246], "width": [4, 11, 18, 30, 52, 63, 70, 75, 76, 83, 86, 88, 91, 122, 123, 124, 134, 135, 154, 158, 171, 183, 186, 189, 191, 192, 194, 197, 209, 216, 217, 220, 226, 245, 249, 255], "height": [4, 11, 18, 30, 52, 63, 70, 83, 86, 88, 91, 122, 123, 124, 133, 134, 158, 183, 186, 189, 191, 192, 194, 197, 209, 220, 226, 245, 255], "data": [4, 11, 18, 27, 31, 38, 43, 45, 53, 55, 56, 57, 58, 61, 72, 88, 91, 124, 129, 138, 144, 158, 161, 162, 171, 182, 186, 189, 197, 198, 199, 205, 210, 211, 212, 213, 214, 220, 221, 230, 238, 239, 240, 245, 249, 250, 251, 252, 255, 258], "transform": [4, 18, 27, 45, 63, 118, 120, 124, 129, 133, 138, 140, 154, 158, 165, 171, 184, 189, 220, 245, 257], "rectangl": [4, 11, 18, 20, 28, 122, 124, 133, 134, 140, 154, 158, 182, 183, 186, 189, 194, 197, 198, 199, 220, 238, 257], "upper": [4, 70, 122, 158, 194, 230], "left": [4, 11, 18, 27, 30, 41, 70, 107, 122, 124, 134, 140, 141, 150, 158, 186, 187, 189, 190, 194, 197, 201, 220], "corner": [4, 18, 48, 140, 154, 158, 189, 194, 220], "correctli": [4, 88, 91, 220], "orient": [4, 18, 27, 57, 220, 245], "destin": [4, 11, 13, 18, 19, 27, 45, 58, 124, 129, 134, 140, 141, 144, 154, 159, 186, 210, 211, 212, 213, 214, 220, 257, 258], "hsvtocolor": 4, "pass": [4, 11, 18, 27, 30, 34, 38, 51, 63, 72, 83, 88, 91, 92, 110, 114, 124, 133, 140, 152, 153, 154, 173, 182, 183, 194, 197, 198, 220, 230, 249, 252], "through": [4, 27, 63, 129, 158, 161, 162, 168, 197], "unchang": [4, 11, 18, 58, 122, 124, 134, 140, 144, 154, 158, 168, 176, 186, 189, 194, 210, 211, 212, 213, 214, 217, 220], "angl": [4, 18, 133, 140, 158, 168, 187], "vari": [4, 124, 140], "rang": [4, 11, 18, 35, 41, 50, 120, 124, 134, 140, 154, 158, 181, 186, 220, 253, 258], "pin": [4, 43, 176, 189, 220, 236], "makenullcanva": 4, "op": [4, 18, 27, 47, 88, 91, 124, 145, 148, 178, 197], "two": [4, 11, 18, 47, 50, 53, 116, 121, 124, 129, 133, 140, 145, 158, 178, 187, 197, 217, 230, 233, 238, 257, 259], "pathop": [4, 148], "appli": [4, 6, 18, 24, 38, 43, 45, 47, 63, 120, 124, 129, 133, 138, 140, 148, 154, 158, 171, 187, 205, 217, 220, 229, 236, 258], "operand": [4, 148, 197], "non": [4, 18, 27, 29, 30, 45, 88, 91, 104, 124, 140, 152, 158, 173, 175, 181, 182, 186, 191, 220, 230, 249, 253], "overlap": [4, 18, 158, 189, 259], "curv": [4, 158, 168, 189, 257, 259], "order": [4, 18, 27, 32, 35, 85, 88, 91, 120, 129, 133, 140, 150, 158, 181, 194, 220, 236, 238, 246], "reduc": [4, 88, 91, 124, 154, 158, 186, 189, 197, 259], "possibl": [4, 11, 27, 32, 53, 72, 81, 88, 91, 124, 140, 154, 158, 168, 186, 187, 210, 220, 238, 254, 255], "so": [4, 11, 18, 27, 29, 34, 49, 63, 72, 88, 91, 92, 104, 122, 124, 129, 134, 136, 140, 148, 154, 158, 168, 176, 181, 183, 186, 187, 189, 194, 197, 202, 220, 230, 235, 236, 238, 252, 258, 259], "cubic": [4, 18, 158], "turn": [4, 48, 129, 258], "quadrat": [4, 158], "mayb": [4, 11], "minuend": 4, "second": [4, 43, 88, 91, 133, 148, 158, 168, 171, 258, 259], "subtrahend": 4, "product": [4, 13, 136, 148, 152, 187, 188], "pathfilltype_converttononinvers": 4, "ft": [4, 158], "pathfilltyp": [4, 158, 168], "pathfilltype_isevenodd": 4, "pathfilltype_isinvers": 4, "premultiplyargb": 4, "skpmcolor": 4, "premultipli": [4, 5, 13, 18], "premultiplycolor": 4, "pmcolor": [4, 11, 220], "closest": [4, 27, 35, 58, 72, 144, 210, 211, 212, 213, 214, 238], "multipli": [4, 13, 43, 136, 140, 187], "arrang": [4, 11, 184, 220], "match": [4, 11, 18, 27, 31, 53, 57, 72, 88, 91, 110, 124, 129, 158, 186, 189, 197, 220, 238, 255], "format": [4, 11, 18, 27, 32, 33, 35, 37, 56, 63, 65, 82, 83, 88, 91, 95, 97, 104, 124, 152, 158, 220, 255], "kn32_colortyp": [4, 18, 46, 134], "rgbtohsv": 4, "simplifi": 4, "tightbound": 4, "rect": [4, 9, 11, 18, 24, 52, 53, 63, 122, 124, 129, 130, 133, 140, 154, 158, 168, 171, 182, 183, 186, 189, 197, 198, 199, 202, 220, 230, 233, 238, 240, 257, 258, 259], "tight": [4, 158], "bound": [4, 9, 11, 18, 19, 24, 25, 27, 30, 53, 63, 70, 88, 91, 122, 124, 129, 134, 140, 154, 158, 168, 182, 183, 186, 189, 194, 197, 198, 201, 202, 217, 220, 230, 233, 235, 238, 240, 258], "measur": [4, 63, 81, 158, 168, 176, 187, 188, 238, 258], "member": [5, 6, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 25, 26, 28, 31, 32, 33, 34, 36, 37, 39, 44, 46, 47, 54, 56, 57, 60, 62, 64, 69, 71, 77, 78, 79, 81, 87, 93, 94, 99, 103, 105, 106, 107, 108, 110, 112, 113, 117, 119, 122, 125, 126, 127, 128, 131, 132, 139, 140, 141, 142, 155, 156, 157, 159, 160, 163, 164, 166, 169, 170, 173, 174, 175, 177, 178, 179, 180, 184, 187, 190, 191, 194, 200, 206, 218, 219, 222, 223, 224, 225, 228, 234, 235, 237, 239, 241, 242, 243, 246, 247, 248, 250, 253, 254], "uniniti": [5, 29, 46, 50, 88, 91], "kpremul_alphatyp": [5, 11, 18, 134], "kunpremul_alphatyp": [5, 11, 18, 124, 186, 220, 257], "independ": [5, 18, 29, 32, 154, 220, 250, 259], "klastenum_alphatyp": 5, "last": [5, 11, 13, 18, 68, 158, 161, 168, 186, 253, 259], "3": [5, 11, 13, 14, 16, 18, 27, 28, 31, 36, 37, 38, 39, 41, 43, 44, 46, 47, 53, 54, 56, 57, 61, 62, 69, 76, 79, 81, 87, 94, 108, 124, 127, 129, 132, 133, 134, 138, 139, 140, 141, 154, 158, 164, 171, 174, 175, 176, 177, 178, 180, 184, 186, 189, 190, 191, 197, 200, 205, 206, 217, 219, 220, 234, 235, 245, 246, 248, 249, 250, 253, 254, 258, 259], "kno": [6, 17, 88, 91, 99, 103, 104, 105, 106, 124, 220, 255], "don": [6, 72, 92, 220], "t": [6, 35, 40, 72, 88, 91, 92, 121, 122, 123, 140, 181, 187, 188, 194, 208, 209, 220, 236, 249, 252], "pre": 6, "clip": [6, 7, 18, 24, 53, 129, 140, 154, 158, 182, 197, 198, 220, 229, 257, 258], "geometri": [6, 18, 129, 154, 157, 158, 171, 217, 227, 258], "befor": [6, 9, 18, 27, 28, 29, 38, 43, 50, 52, 53, 61, 63, 72, 80, 88, 90, 91, 96, 98, 104, 110, 124, 129, 133, 138, 140, 148, 158, 161, 168, 171, 182, 184, 187, 195, 196, 202, 203, 205, 220, 238, 245, 258], "perspect": [6, 140, 142, 152, 158, 257], "kye": [6, 17, 88, 91, 99, 103, 105, 106, 124, 140, 158, 220], "do": [6, 11, 18, 27, 45, 92, 122, 136, 154, 158, 194, 197, 220, 255, 257, 258], "stack": [7, 9, 18, 38, 43, 52, 53, 61, 72, 80, 88, 90, 91, 96, 98, 104, 124, 129, 138, 171, 182, 195, 196, 203, 205, 220, 238, 257, 258], "helper": [7, 50, 154, 229, 233, 252], "call": [7, 9, 11, 18, 27, 30, 38, 43, 50, 52, 53, 55, 58, 59, 61, 72, 80, 85, 88, 90, 91, 92, 96, 98, 104, 120, 122, 124, 129, 138, 140, 144, 147, 150, 154, 158, 161, 162, 168, 171, 173, 176, 182, 183, 194, 195, 196, 197, 199, 202, 203, 205, 210, 211, 212, 213, 214, 220, 230, 238, 244, 255, 257, 258], "restoretocount": [7, 18], "when": [7, 11, 18, 24, 27, 38, 45, 47, 50, 52, 53, 55, 58, 63, 71, 88, 91, 92, 104, 114, 122, 124, 133, 134, 140, 144, 153, 154, 158, 161, 162, 178, 182, 183, 186, 189, 194, 196, 197, 210, 211, 212, 213, 214, 220, 230, 233, 238, 255, 258], "goe": [7, 133, 137, 186, 196, 202], "scope": [7, 18, 52, 186, 196, 202], "guarante": [7, 29, 50, 53, 58, 88, 91, 104, 144, 158, 202, 205, 210, 211, 212, 213, 214, 215, 220], "restor": [7, 18, 257, 258], "known": [7, 35, 58, 124, 144, 210, 211, 212, 213, 214, 238], "state": [7, 11, 18, 24, 53, 58, 85, 86, 88, 91, 93, 104, 124, 140, 144, 148, 154, 158, 183, 210, 211, 212, 213, 214, 220, 233, 257, 258], "drawcircl": [7, 18, 255, 257, 258], "50": [7, 158, 257, 259], "dosav": 7, "preserv": [7, 11, 13, 24, 122, 140, 158, 186, 187, 189, 194, 220, 224], "save": [7, 18, 55, 124, 182, 255, 257, 258], "count": [7, 9, 11, 17, 18, 27, 38, 43, 45, 49, 50, 52, 53, 61, 72, 80, 88, 90, 91, 96, 98, 104, 124, 129, 133, 134, 138, 140, 158, 171, 182, 186, 187, 194, 195, 196, 197, 203, 205, 220, 221, 230, 238, 240, 258], "option": [7, 11, 18, 24, 27, 34, 38, 41, 63, 88, 91, 92, 124, 133, 134, 140, 152, 154, 158, 161, 182, 186, 197, 217, 220, 230, 233, 238, 240, 245, 246, 249, 257, 259], "guard": 7, "util": [7, 18, 186, 229], "destructor": [7, 88, 91, 196], "immedi": [7, 18, 52, 88, 91, 92, 220], "subsequ": [7, 11, 18, 88, 91, 124, 140, 150, 154, 158, 161, 168, 183, 220], "effect": [7, 11, 12, 18, 38, 43, 48, 50, 63, 122, 124, 129, 133, 140, 154, 158, 171, 173, 194, 197, 210, 217, 220, 257, 259], "kwarg": [8, 9, 10, 11, 15, 18, 19, 24, 27, 35, 38, 40, 41, 43, 45, 48, 49, 51, 52, 53, 55, 59, 61, 63, 68, 73, 74, 76, 80, 82, 83, 86, 88, 90, 91, 95, 97, 98, 101, 102, 104, 111, 116, 118, 120, 121, 122, 123, 124, 129, 130, 133, 134, 135, 136, 138, 140, 143, 144, 145, 147, 149, 150, 152, 154, 158, 161, 162, 165, 167, 168, 171, 176, 181, 183, 185, 186, 187, 188, 189, 192, 194, 195, 196, 197, 199, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 227, 229, 236, 238, 244, 245, 249], "bytesus": 9, "approxim": [9, 27, 45, 63, 133, 134, 158, 182], "size": [9, 11, 18, 19, 24, 27, 31, 45, 50, 55, 58, 59, 63, 88, 91, 104, 122, 124, 133, 134, 140, 144, 147, 150, 152, 154, 158, 168, 181, 182, 186, 192, 194, 197, 203, 210, 211, 212, 213, 214, 215, 220, 230, 238, 244, 245, 249, 257], "insert": [9, 68, 88, 91, 182, 215], "overload": [9, 11, 18, 24, 27, 35, 40, 41, 45, 53, 55, 59, 63, 68, 76, 82, 83, 86, 88, 91, 95, 97, 101, 102, 118, 121, 122, 123, 124, 130, 133, 134, 140, 144, 147, 150, 152, 154, 158, 161, 162, 168, 176, 183, 186, 187, 188, 189, 192, 194, 197, 199, 205, 208, 209, 215, 217, 220, 227, 238, 244, 245, 249], "n": [9, 133, 140, 210, 258], "box": [9, 63, 70, 182, 183, 189, 230, 233], "hierarchi": [9, 183], "metadata": [9, 150], "ref": [9, 38, 43, 45, 50, 52, 53, 61, 72, 80, 88, 90, 91, 96, 98, 104, 110, 124, 129, 138, 171, 182, 195, 196, 203, 205, 220, 230, 238, 240], "refcntbas": [9, 38, 43, 52, 53, 61, 72, 80, 88, 90, 91, 96, 98, 104, 124, 129, 138, 171, 182, 195, 203, 205, 220, 238], "increment": [9, 27, 30, 31, 38, 43, 52, 53, 61, 63, 72, 80, 88, 90, 91, 96, 98, 104, 124, 129, 138, 154, 171, 182, 186, 195, 196, 203, 205, 220, 238], "balanc": [9, 18, 38, 43, 52, 53, 61, 72, 80, 88, 90, 91, 96, 98, 104, 124, 129, 138, 171, 182, 195, 196, 203, 205, 220, 238], "unref": [9, 38, 43, 45, 50, 52, 53, 61, 72, 80, 88, 90, 91, 96, 98, 104, 124, 129, 138, 171, 182, 183, 195, 196, 203, 205, 220, 230, 238, 240], "queri": 9, "std": [9, 124, 187], "vector": [9, 27, 122, 133, 140, 158, 168, 176, 187, 188], "alloc": [9, 11, 17, 18, 38, 43, 52, 53, 61, 72, 80, 88, 90, 91, 96, 98, 99, 104, 124, 129, 138, 158, 171, 173, 182, 186, 187, 195, 196, 197, 203, 205, 220, 238, 245, 249, 252, 257], "popul": 9, "indic": [9, 17, 27, 30, 32, 49, 63, 70, 71, 88, 91, 129, 150, 197, 220, 240, 245, 251], "intersect": [9, 11, 18, 122, 178, 186, 194, 197, 198, 201, 220, 230, 233], "uniqu": [9, 11, 38, 43, 45, 50, 52, 53, 61, 72, 80, 88, 90, 91, 96, 98, 104, 124, 129, 138, 153, 158, 171, 182, 195, 196, 203, 205, 220, 230, 238, 240, 255], "caller": [9, 11, 18, 27, 38, 43, 50, 51, 52, 53, 61, 72, 80, 88, 90, 91, 96, 98, 104, 124, 129, 138, 140, 152, 158, 171, 182, 183, 186, 195, 196, 203, 205, 210, 220, 238, 252, 258], "owner": [9, 11, 38, 43, 52, 53, 61, 72, 80, 88, 90, 91, 96, 98, 104, 124, 129, 134, 138, 151, 171, 182, 186, 195, 196, 203, 205, 220, 238], "ensur": [9, 11, 38, 43, 52, 53, 61, 72, 80, 88, 90, 91, 96, 98, 104, 124, 129, 138, 171, 182, 186, 195, 196, 203, 205, 220, 238, 252], "previou": [9, 23, 28, 38, 43, 52, 53, 61, 63, 72, 80, 88, 90, 91, 92, 96, 98, 104, 124, 129, 136, 138, 154, 158, 171, 182, 195, 196, 203, 205, 220, 238, 255], "action": [9, 38, 43, 52, 53, 61, 72, 80, 88, 90, 91, 96, 98, 104, 124, 129, 138, 171, 182, 195, 196, 203, 205, 220, 238], "complet": [9, 27, 29, 38, 43, 52, 53, 61, 72, 80, 88, 90, 91, 96, 98, 104, 122, 124, 129, 134, 138, 140, 171, 182, 194, 195, 196, 197, 198, 199, 202, 203, 205, 220, 238, 255], "decrement": [9, 38, 43, 52, 53, 61, 72, 80, 88, 90, 91, 96, 98, 104, 124, 129, 138, 171, 182, 195, 196, 203, 205, 220, 238], "delet": [9, 18, 38, 43, 52, 53, 61, 72, 80, 88, 90, 91, 92, 96, 98, 104, 110, 124, 129, 138, 150, 171, 176, 182, 195, 196, 202, 203, 205, 220, 238], "object": [9, 11, 18, 27, 38, 43, 50, 52, 53, 61, 63, 72, 80, 88, 90, 91, 92, 96, 98, 104, 110, 116, 124, 129, 133, 134, 138, 140, 150, 154, 171, 176, 182, 183, 186, 195, 196, 203, 205, 220, 222, 223, 229, 230, 238, 240, 245, 249, 255, 257, 258], "need": [9, 18, 27, 29, 30, 38, 43, 52, 53, 61, 72, 80, 85, 88, 90, 91, 96, 98, 104, 110, 122, 124, 129, 138, 158, 168, 171, 176, 182, 194, 195, 196, 203, 205, 220, 238], "been": [9, 11, 27, 34, 38, 43, 52, 53, 58, 61, 72, 80, 88, 90, 91, 92, 96, 98, 104, 124, 129, 138, 144, 161, 162, 171, 182, 183, 186, 195, 196, 203, 205, 210, 211, 212, 213, 214, 220, 238, 245, 249, 255], "isdraw": 10, "dimension": [11, 124, 187, 257], "raster": [11, 18, 124, 152, 158, 186, 220, 256, 257], "imageinfo": [11, 18, 27, 41, 124, 146, 186, 220, 249, 255, 257], "integ": [11, 18, 121, 122, 124, 134, 158, 168, 186, 187, 194, 197, 238, 257], "colorspac": [11, 18, 27, 38, 40, 41, 43, 88, 91, 124, 134, 154, 186, 208, 220, 226, 255], "pixelref": [11, 27, 124, 186], "physic": [11, 133], "locat": [11, 18, 27, 63, 124, 133], "anywher": 11, "insid": [11, 13, 16, 18, 25, 28, 122, 158, 175, 186, 189, 194, 197, 198, 259], "drawn": [11, 18, 19, 24, 28, 29, 52, 63, 124, 129, 133, 134, 154, 158, 171, 183, 197, 205, 220, 230, 238, 255, 257, 258, 259], "flexibl": [11, 133], "limit": [11, 18, 24, 88, 91, 122, 133, 140, 154, 156, 158, 181, 182, 194], "optim": [11, 18, 134, 148, 182, 205, 227], "target": [11, 18, 82, 83, 88, 91, 97, 104, 124, 133, 220], "primarili": 11, "read": [11, 18, 27, 50, 55, 58, 124, 128, 140, 144, 154, 158, 186, 189, 197, 210, 211, 212, 213, 214, 220], "better": [11, 140, 152], "perform": [11, 18, 27, 88, 91, 138, 140, 148, 158, 168, 178, 186, 220, 227, 230, 259], "written": [11, 18, 55, 59, 140, 147, 150, 158, 189, 194, 197, 238, 244], "declar": 11, "const": [11, 50, 72, 140], "prevent": [11, 88, 91, 154], "alter": [11, 154, 158, 161, 183, 233], "cannot": [11, 27, 31, 50, 58, 124, 136, 140, 144, 154, 171, 182, 194, 210, 211, 212, 213, 214], "chang": [11, 18, 27, 53, 63, 85, 88, 91, 124, 140, 158, 171, 182, 186, 187, 194, 197, 205, 217, 220, 224, 238], "It": [11, 18, 27, 32, 34, 41, 48, 72, 81, 88, 91, 92, 104, 110, 134, 154, 181, 182, 186, 187, 196, 220, 230, 238, 255, 257], "affect": [11, 18, 49, 63, 124, 129, 158, 168, 171, 182, 230], "write": [11, 27, 34, 50, 55, 59, 124, 140, 147, 150, 158, 186, 189, 194, 197, 220, 244, 255, 257], "configur": [11, 27, 118, 120, 220, 245, 249], "content": [11, 18, 23, 24, 50, 52, 53, 55, 68, 72, 88, 91, 107, 124, 133, 150, 152, 153, 154, 183, 197, 215, 220, 233, 238, 257, 259], "thread": [11, 38, 50, 140, 158, 185, 186, 220, 238, 255], "safe": [11, 32, 38, 88, 90, 91, 98, 104, 140, 158, 186, 187, 220], "own": [11, 18, 52, 88, 91, 92, 220], "copi": [11, 18, 24, 50, 58, 65, 68, 83, 124, 133, 144, 154, 158, 173, 176, 186, 189, 197, 210, 211, 212, 213, 214, 220, 233, 238, 240, 259], "field": [11, 63, 140, 150], "although": [11, 27, 158, 168, 259], "share": [11, 18, 38, 50, 124, 134, 154, 158, 185, 186, 196, 197, 220, 230, 233, 238, 255, 259], "underli": [11, 88, 91, 92, 104, 110, 124, 158, 197, 220, 238], "mount": [11, 186], "np": [11, 50, 186, 255, 257], "100": [11, 76, 78, 124, 152, 182, 186, 197, 255, 259], "4": [11, 13, 14, 18, 22, 23, 27, 28, 31, 37, 38, 39, 41, 43, 44, 46, 47, 53, 54, 56, 57, 61, 62, 70, 71, 76, 79, 81, 87, 93, 94, 112, 113, 124, 129, 132, 133, 138, 139, 140, 142, 158, 163, 164, 171, 174, 178, 179, 180, 181, 184, 186, 189, 191, 197, 200, 205, 206, 216, 217, 220, 245, 246, 248, 249, 252, 255, 257, 258], "uint8": [11, 186, 255, 257], "setinfo": 11, "maken32premul": [11, 134, 186, 255], "setpixel": 11, "creat": [11, 18, 24, 27, 41, 43, 45, 50, 52, 63, 72, 88, 91, 92, 104, 110, 122, 124, 129, 133, 134, 138, 140, 150, 152, 154, 158, 181, 182, 186, 194, 197, 205, 220, 229, 230, 238, 240, 255, 257, 258, 259], "both": [11, 18, 33, 45, 85, 121, 124, 140, 158, 168, 181, 187, 189, 220], "empti": [11, 18, 27, 50, 63, 72, 116, 122, 124, 134, 140, 148, 150, 154, 158, 161, 162, 168, 181, 186, 189, 194, 197, 198, 199, 208, 230, 233, 249], "volatil": [11, 158], "after": [11, 18, 27, 50, 52, 58, 88, 91, 92, 122, 124, 129, 133, 140, 144, 154, 158, 161, 168, 176, 186, 210, 211, 212, 213, 214, 220, 245, 259], "param": [11, 18, 63, 124, 134, 140, 168, 186, 187, 194, 220, 238], "allocn32pixel": 11, "isopaqu": [11, 35, 41, 124, 134, 186, 205], "nativ": [11, 18, 27, 152, 220, 238], "abort": [11, 52], "29": [11, 87, 124], "neg": [11, 18, 27, 70, 122, 124, 158, 181, 186, 189, 194, 220], "fail": [11, 45, 88, 91, 92, 124, 182, 186, 215, 220, 230, 249, 255], "user": [11, 75, 118, 120, 230], "sk_abort": 11, "devic": [11, 18, 88, 91, 104, 110, 129, 220, 255], "skip": [11, 18, 20, 27, 30, 32, 34, 58, 63, 144, 210, 211, 212, 213, 214, 220], "column": [11, 18, 19, 124, 134, 140, 186, 220], "row": [11, 18, 19, 27, 30, 32, 41, 45, 88, 91, 124, 133, 134, 140, 186, 220, 245, 249], "allocpixel": 11, "info": [11, 18, 27, 31, 83, 86, 88, 91, 124, 171, 173, 186, 220, 249, 255, 257], "skimageinfo": [11, 27, 186], "rowbyt": [11, 18, 27, 31, 124, 134, 186, 220, 221, 245, 249], "follow": [11, 55, 88, 91, 104, 116, 120, 124, 140, 158, 161, 162, 220, 255, 257, 258, 259], "rule": [11, 124, 158], "meth": [11, 186], "bytesperpixel": [11, 27, 41, 134, 186], "comput": [11, 18, 50, 53, 129, 134, 136, 140, 148, 154, 158, 175, 176, 187, 220, 230, 233], "minimum": [11, 75, 133, 134, 140, 158, 186, 197], "could": [11, 18, 27, 29, 58, 124, 140, 144, 210, 211, 212, 213, 214, 220, 255], "On": [11, 140], "most": [11, 32, 72, 140, 158, 168, 230, 238], "succe": [11, 88, 91, 124], "suffici": [11, 18, 158, 238, 252], "place": [11, 18, 187, 197], "until": [11, 18, 88, 91, 124, 150, 158, 197, 202, 220, 259], "behavior": [11, 18, 24, 45, 122, 183, 238], "malloc": 11, "larger": [11, 18, 32, 122, 124, 134, 149, 152, 158, 160, 168, 169, 186, 194, 220, 230], "allocpixelsflag": 11, "calloc": 11, "kzeropixels_allocflag": [11, 12], "skalphatyp": 11, "irect": [11, 18, 27, 124, 129, 133, 134, 186, 194, 197, 198, 199, 220, 257], "integr": [11, 18, 124, 134, 186], "immut": [11, 27, 50, 124, 128, 134, 182, 183, 186, 230, 233, 238, 240], "skcolortyp": [11, 88, 91, 104, 249], "computebytes": [11, 134, 186], "rowbytesaspixel": [11, 186], "size_max": [11, 134, 186, 245, 249], "fit": [11, 18, 19, 122, 124, 134, 158, 168, 186, 189, 194], "size_t": [11, 134, 186], "dimens": [11, 18, 24, 27, 31, 41, 63, 83, 86, 124, 133, 134, 158, 182, 186, 194, 197, 220, 245, 249, 252, 257], "isiz": [11, 18, 27, 83, 86, 122, 124, 133, 134, 181, 186, 194, 209, 245], "drawsnoth": 11, "either": [11, 38, 61, 88, 91, 92, 107, 110, 114, 120, 122, 123, 124, 133, 134, 140, 150, 158, 168, 189, 194, 197, 209, 220, 236, 238, 258], "enclos": [11, 122, 194], "eras": [11, 186, 257], "interpret": [11, 116, 133, 154], "being": [11, 154, 205, 220, 238, 257], "srgb": [11, 27, 41, 45, 124, 134, 152, 154, 186, 220], "treat": [11, 18, 28, 92, 124, 133, 140, 158, 161, 168, 171, 188, 194, 220, 238], "deprec": [11, 18, 70, 124, 140], "eraseargb": 11, "extractalpha": 11, "skpaint": [11, 63, 124, 154], "offset": [11, 18, 49, 50, 55, 58, 63, 121, 122, 124, 133, 134, 144, 158, 168, 172, 186, 187, 189, 194, 197, 210, 211, 212, 213, 214, 215, 220, 233, 257], "ipoint": [11, 18, 122, 124, 133, 140, 187, 197, 257], "maskfilt": [11, 18, 47, 63, 154, 207, 229, 256], "mask": [11, 18, 37, 47, 124, 138, 154, 158, 229, 257], "heapalloc": 11, "top": [11, 18, 27, 28, 30, 70, 107, 122, 124, 141, 158, 186, 189, 190, 194, 220], "posit": [11, 18, 58, 63, 65, 68, 70, 116, 122, 124, 140, 144, 158, 165, 168, 176, 177, 189, 194, 197, 210, 211, 212, 213, 214, 220, 230, 233, 238, 240], "align": [11, 18, 63, 124, 134, 140, 141, 158, 168, 189, 191], "unless": [11, 29, 124, 140], "layer": [11, 18, 24, 27, 258], "extractsubset": [11, 186], "subset": [11, 27, 30, 32, 50, 88, 91, 124, 133, 182, 186, 220, 236], "outsid": [11, 13, 16, 18, 25, 58, 88, 91, 120, 122, 124, 133, 134, 144, 154, 156, 158, 175, 182, 183, 194, 210, 211, 212, 213, 214, 220, 235, 236, 259], "discard": [11, 18, 27, 158, 182, 194, 220, 224], "isvolatil": [11, 158, 168], "getalphaf": [11, 154, 186], "x": [11, 18, 19, 53, 63, 68, 70, 121, 122, 124, 133, 134, 137, 140, 141, 158, 168, 181, 182, 186, 187, 188, 189, 194, 197, 198, 199, 220, 230, 233, 258], "look": [11, 186], "normal": [11, 63, 72, 76, 88, 91, 133, 158, 186, 187, 188, 238, 250], "roughli": [11, 186], "getcolora": [11, 186], "getcolor": [11, 154, 186], "effic": [11, 186], "precis": [11, 140, 154, 158, 176, 186, 194], "getbound": [11, 53, 63, 158, 189, 197, 238], "black": [11, 18, 24, 186, 235], "trigger": [11, 18, 24, 154, 186, 187], "crash": [11, 88, 91, 186], "sk_releas": [11, 186], "lost": [11, 88, 91, 186], "getgenerationid": [11, 53, 158], "correspond": [11, 27, 28, 63, 88, 91, 107, 116, 133, 140, 152, 158, 176, 186, 220, 238, 247], "notifypixelschang": 11, "examin": 11, "getpixel": [11, 27, 30, 34], "getsubset": 11, "within": [11, 18, 30, 58, 88, 91, 133, 134, 140, 144, 152, 153, 189, 197, 198, 201, 210, 211, 212, 213, 214, 220, 230, 233, 235, 246], "Will": [11, 72, 186, 238, 252], "pixelreforigin": 11, "fy": [11, 121, 122, 140, 158, 168, 187, 188, 194], "installpixel": 11, "minrowbyt": [11, 124, 134, 186, 220], "reset": [11, 55, 88, 91, 124, 134, 140, 148, 154, 158, 168, 176, 186, 199, 215, 233, 259], "lifetim": [11, 50, 124, 150, 186, 202, 205, 220], "skpixmap": [11, 27, 88, 91, 124, 146], "addr": [11, 124, 186], "isimmut": 11, "debug": [11, 63, 134, 154, 189], "isnul": 11, "explicitli": [11, 134, 140, 196, 255, 257], "incorrectli": [11, 134], "allow": [11, 18, 27, 45, 53, 124, 133, 134, 140, 154, 158, 182, 186, 189, 205, 233, 238, 249, 258], "makeshad": [11, 18, 124, 182, 258], "tmx": [11, 124, 182], "tilemod": [11, 18, 116, 124, 133, 182, 205, 258], "kclamp": [11, 18, 116, 124, 235], "tmy": [11, 124, 182], "sampl": [11, 18, 25, 32, 60, 88, 91, 104, 124, 133, 154, 182, 186, 220, 245, 248], "samplingopt": [11, 18, 124, 133, 186], "0x7fc5d9a8cfb0": 11, "localmatrix": [11, 116, 124, 129, 182, 205], "skshader": [11, 124, 154], "mark": [11, 124, 158], "peekpixel": [11, 18, 124, 220], "leav": [11, 18, 58, 122, 124, 144, 154, 158, 176, 186, 194, 197, 210, 211, 212, 213, 214, 220], "becom": [11, 88, 91, 124, 189, 220], "futur": [11, 18, 27, 88, 91, 140, 220], "readabl": [11, 18, 124, 186, 220, 222], "direct": [11, 18, 124, 129, 133, 158, 170, 182, 186, 187, 188, 220, 257], "access": [11, 18, 35, 50, 72, 124, 133, 158, 185, 186, 220, 252], "constant": [11, 14, 55, 158, 253], "readpixel": [11, 18, 124, 186, 220], "dstinfo": [11, 18, 27, 124, 186, 220], "dstpixel": [11, 18, 124, 186, 220], "dstrowbyt": [11, 18, 124, 186, 220], "srcx": [11, 18, 124, 186, 220], "srcy": [11, 18, 124, 186, 220], "start": [11, 18, 27, 32, 58, 116, 124, 140, 144, 158, 161, 168, 176, 186, 199, 201, 210, 211, 212, 213, 214, 236, 252, 258, 259], "specif": [11, 18, 63, 85, 88, 91, 93, 124, 129, 217, 220, 238, 258], "gap": [11, 124, 186], "next": [11, 18, 27, 28, 29, 32, 38, 53, 88, 91, 92, 124, 140, 158, 161, 162, 176, 180, 186, 198, 199, 201, 220, 231], "ab": [11, 124, 186], "length": [11, 18, 45, 49, 50, 51, 55, 58, 59, 124, 140, 144, 147, 152, 158, 168, 172, 176, 186, 187, 188, 189, 197, 210, 211, 212, 213, 214, 230, 238, 244, 259], "whose": [11, 38, 43, 45, 124, 186, 188, 238, 258], "absolut": [11, 58, 124, 144, 186, 187, 210, 211, 212, 213, 214], "readytodraw": 11, "refcolorspac": [11, 41, 124, 134, 186, 226], "smart": [11, 124, 134, 185, 186], "pointer": [11, 18, 63, 83, 124, 133, 134, 158, 186, 194, 197, 201, 220, 230], "track": [11, 32, 124, 134, 186, 220], "destruct": [11, 124, 134, 186], "initi": [11, 18, 23, 24, 27, 34, 35, 88, 91, 92, 133, 140, 148, 154, 158, 161, 162, 165, 168, 171, 176, 183, 189, 199, 202, 220, 233, 245, 249, 252], "had": [11, 31], "decreas": [11, 63, 154], "sole": [11, 124], "interv": [11, 18, 49, 172, 173, 186, 201, 220, 230, 236], "least": [11, 27, 55, 58, 59, 72, 110, 124, 134, 136, 144, 147, 186, 189, 210, 211, 212, 213, 214, 244, 249, 252], "larg": [11, 18, 19, 27, 45, 124, 134, 158, 181, 182, 186, 187, 194, 220, 238, 239], "suppli": [11, 18, 51, 92, 148, 230, 238], "enough": [11, 18, 19, 27, 45, 124, 134, 220, 258], "maximum": [11, 18, 51, 70, 75, 88, 91, 104, 133, 134, 140, 158, 186, 197, 220, 238], "setalphatyp": 11, "compat": [11, 88, 91, 124, 146, 158, 220, 249, 252], "current": [11, 18, 24, 27, 30, 52, 53, 55, 58, 63, 88, 91, 124, 144, 158, 165, 176, 183, 197, 210, 211, 212, 213, 214, 220, 247, 255, 257], "setimmut": 11, "intern": [11, 31, 53, 88, 91, 124, 140, 158, 197, 220, 258, 259], "also": [11, 27, 28, 55, 88, 91, 114, 124, 140, 158, 161, 187, 220, 239, 248, 255, 258, 259], "clear": [11, 18, 24, 28, 63, 68, 140, 142, 154, 182, 258], "permit": [11, 124, 182, 230], "31": [11, 87, 134], "successfulli": [11, 27, 140], "respons": [11, 53, 88, 91, 92, 124, 220, 252], "handl": [11, 32, 124, 238], "ownership": [11, 88, 91, 152, 183, 202, 252], "union": [11, 18, 50, 122, 124, 129, 148, 158, 178, 186, 194, 197, 220, 230, 238], "bytearrai": [11, 18, 50, 124, 158, 186, 220, 230, 258], "manag": [11, 63, 72, 124, 186, 220, 255, 257], "shiftperpixel": [11, 41, 134, 186], "shift": [11, 41, 133, 134, 186], "swap": [11, 122, 158, 194, 197, 215], "exchang": [11, 124, 158, 197], "tobyt": [11, 124, 186, 257], "tryallocn32pixel": 11, "tryallocpixel": 11, "tryallocpixelsflag": 11, "fx": [11, 121, 122, 140, 158, 168, 187, 188, 194], "writepixel": [11, 18, 220], "dstx": [11, 220], "dsty": [11, 220], "allocflag": 11, "No": [12, 186], "default": [12, 18, 27, 33, 34, 41, 50, 51, 63, 65, 72, 75, 88, 91, 104, 124, 129, 134, 152, 154, 158, 173, 220, 230, 238, 249, 251, 252], "kclear": [13, 258], "ksrc": [13, 18, 220, 225, 258], "kdst": [13, 258], "ksrcover": [13, 18, 154, 258], "over": [13, 29, 63, 133], "kdstover": [13, 258], "ksrcin": [13, 258], "trim": [13, 220, 236], "kdstin": [13, 258], "ksrcout": [13, 258], "kdstout": [13, 258], "ksrcatop": [13, 258], "kdstatop": [13, 258], "kxor": [13, 47, 258], "kplu": [13, 258], "sum": [13, 49, 63, 133, 148, 171, 175], "kmodul": [13, 18, 258], "darken": 13, "kscreen": [13, 257, 258], "invers": [13, 14, 18, 120, 140, 158], "invert": [13, 32, 140], "brighten": 13, "porter": [13, 14, 47, 258], "duff": [13, 14, 47, 258], "koverlai": [13, 258], "screen": [13, 137, 223, 255, 257], "kdarken": [13, 258], "darker": 13, "klighten": [13, 258], "lighter": 13, "kcolordodg": [13, 258], "reflect": [13, 18, 133, 140, 152, 183], "kcolorburn": [13, 258], "khardlight": [13, 258], "ksoftlight": [13, 258], "lighten": 13, "kdiffer": [13, 26, 47, 258], "subtract": [13, 121, 122, 178, 187, 189, 194], "higher": 13, "contrast": [13, 118, 120], "kexclus": [13, 258], "lower": [13, 70, 122, 158, 194, 230], "kmultipli": [13, 258], "klastseparablemod": 13, "separ": [13, 21, 88, 91, 133, 158, 182, 220, 246], "khue": [13, 258], "luminos": 13, "ksatur": [13, 258], "kcolor": [13, 258], "kluminos": [13, 258], "klastmod": 13, "27": [13, 87, 94], "19": [13, 46, 87, 94], "18": [13, 46, 87, 94, 257], "16": [13, 18, 23, 37, 46, 87, 93, 94, 112, 124, 186, 250, 258], "22": [13, 87, 94], "6": [13, 14, 27, 31, 38, 39, 43, 44, 46, 53, 54, 56, 57, 61, 62, 76, 79, 87, 94, 129, 132, 138, 139, 140, 149, 158, 164, 171, 174, 197, 205, 206, 245, 246, 248, 258, 259], "23": [13, 87, 94], "20": [13, 46, 49, 87, 94, 258, 259], "25": [13, 35, 49, 87, 158, 257, 258], "28": [13, 87], "24": [13, 94, 258, 259], "13": [13, 18, 46, 87, 94], "12": [13, 18, 46, 94, 245, 246], "26": [13, 87], "21": [13, 46, 87, 94, 258], "9": [13, 14, 27, 31, 46, 56, 76, 79, 87, 94, 245, 246], "5": [13, 14, 27, 31, 35, 38, 39, 43, 44, 46, 49, 53, 54, 56, 57, 61, 62, 76, 79, 81, 87, 129, 132, 138, 139, 140, 149, 158, 164, 171, 174, 180, 189, 191, 194, 197, 200, 205, 206, 236, 245, 246, 248, 253, 257, 258], "11": [13, 56, 87, 245, 246], "skblendmod": 14, "those": [14, 27, 88, 91, 124, 129, 183, 249, 258], "equat": [14, 45], "dstcoeff": 14, "srccoeff": 14, "kzero": 14, "kone": 14, "ksc": 14, "kisc": 14, "sc": 14, "kdc": 14, "kidc": 14, "dc": [14, 140], "ksa": 14, "kisa": 14, "sa": 14, "kda": 14, "kida": 14, "da": 14, "kcoeffcount": 14, "knormal_blurstyl": [16, 154, 258], "fuzzi": 16, "ksolid_blurstyl": 16, "solid": [16, 154, 258], "kouter_blurstyl": 16, "noth": [16, 18, 92, 251, 255], "kinner_blurstyl": 16, "klastenum_blurstyl": 16, "against": [17, 50, 124], "cach": [17, 18, 53, 61, 88, 91, 93, 124, 140, 158, 255], "interfac": [18, 75, 88, 91, 158, 197], "togeth": [18, 45, 133, 148], "basedevic": [18, 154, 158, 220], "concaten": 18, "typefac": [18, 63, 72, 80, 230, 257, 258], "text": [18, 24, 55, 59, 63, 140, 147, 152, 158, 189, 194, 215, 230, 233, 238, 244, 256, 257, 258], "stroke": [18, 49, 63, 70, 154, 155, 157, 158, 171, 217, 230, 257, 258, 259], "shader": [18, 116, 124, 154, 181, 182, 207, 235, 256, 257], "To": [18, 27, 52, 53, 88, 91, 104, 182, 220, 255, 257], "gpu": [18, 85, 88, 91, 92, 107, 124, 158, 220, 256], "request": [18, 27, 31, 32, 63, 72, 85, 124, 154, 171, 210, 217, 220, 238], "obtain": 18, "visibl": [18, 58, 144, 181, 210, 211, 212, 213, 214, 255, 259], "cpu": [18, 81, 124, 220, 255], "vulkan": [18, 85, 88, 91, 110, 220, 255], "document": [18, 140, 150, 152, 220, 255], "svg": [18, 158, 168, 181, 202, 256], "pdf": [18, 52, 57, 256], "picturerecord": [18, 182, 255], "subclass": [18, 38, 48, 53, 129, 138, 171, 205, 210, 244, 258], "approach": [18, 124, 173], "static": [18, 27, 35, 38, 40, 43, 45, 48, 49, 50, 51, 53, 55, 58, 59, 61, 72, 76, 80, 82, 88, 91, 116, 120, 121, 122, 123, 124, 129, 133, 134, 135, 136, 138, 140, 143, 144, 145, 147, 149, 150, 158, 165, 167, 171, 181, 182, 187, 188, 189, 192, 194, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 220, 229, 230, 236, 238, 240, 244, 245, 249, 251, 252], "makerasterdirect": [18, 220], "surfaceprop": [18, 220, 226], "sksurfaceprop": 18, "directli": [18, 27, 124, 154, 158, 187, 189, 194, 220, 255, 257], "flush": [18, 55, 59, 88, 91, 92, 124, 147, 202, 220, 244, 255], "prop": [18, 220, 227], "lcd": [18, 24, 184, 220], "stripe": [18, 220], "font": [18, 61, 65, 70, 71, 72, 74, 75, 220, 230, 233, 238, 239, 255, 257, 258, 259], "makerasterdirectn32": 18, "inlin": [18, 140], "back": [18, 88, 90, 91, 98, 104, 124, 150, 158, 186, 205, 210, 220, 222, 223, 252], "ndarrai": [18, 124, 140, 186, 220], "shape": [18, 124, 154, 167, 186, 220, 230, 257, 258], "channel": [18, 35, 36, 37, 43, 47, 124, 133, 136, 149, 186, 220, 245, 246, 249, 250, 251, 252], "appropri": [18, 27, 38, 43, 124, 220], "dtype": [18, 124, 220, 255], "custom": [18, 133, 230, 258], "inittyp": 18, "choos": [18, 27, 33, 158, 168, 171, 238], "dynam": 18, "rotat": [18, 45, 124, 129, 140, 142, 158, 168, 184, 192, 257], "multipl": [18, 51, 140, 154, 158, 185, 196, 197, 220, 230, 236, 255, 258], "monitor": 18, "characterist": [18, 257], "best": [18, 124], "reli": [18, 63], "legaci": [18, 81, 124], "klegacyfonthost": 18, "edit": [18, 259], "like": [18, 31, 49, 50, 65, 124, 140, 158, 220, 238, 249, 257, 258], "accesstoplayerpixel": 18, "while": [18, 45, 152, 158, 161, 168, 187, 220, 231, 252, 255], "inaccess": 18, "androidframework_setdevicecliprestrict": 18, "cliprect": [18, 258], "cliprrect": 18, "clippath": 18, "retroact": 18, "restrict": [18, 133, 257], "record": [18, 88, 91, 158, 182, 183, 220, 255], "pictur": [18, 53, 124, 133, 183, 256, 257], "disabl": [18, 197, 220, 227], "privat": [18, 154], "android": [18, 158], "framework": [18, 158], "coordin": [18, 19, 27, 32, 66, 70, 121, 122, 129, 133, 137, 140, 158, 182, 187, 188, 194, 197, 238, 257], "clipop": 18, "doantialia": 18, "alias": [18, 197, 220], "anti": [18, 197, 220], "edg": [18, 63, 116, 122, 133, 154, 156, 158, 175, 189, 194, 235], "filltyp": [18, 158, 168], "itself": [18, 53, 122, 194], "anoth": [18, 27, 50, 88, 91, 124, 129, 140, 152, 189, 255], "form": [18, 140, 158, 187, 192, 259], "part": [18, 41, 61, 134, 137, 158, 168, 176, 182, 189, 198, 199, 230, 245, 258], "combin": [18, 27, 41, 47, 72, 88, 91, 133, 134, 140, 146, 154, 178, 197, 230, 249, 251], "rrect": [18, 158, 168, 257], "clipregion": 18, "devicergn": 18, "region": [18, 47, 133, 257], "kintersect": [18, 26, 47], "unaffect": [18, 186], "concat": [18, 140], "exist": [18, 124, 148, 158, 176, 196, 197, 220, 238, 252], "m44": 18, "necessari": [18, 30, 152, 158], "done": [18, 27, 50, 58, 85, 92, 144, 176, 183, 198, 199, 210, 211, 212, 213, 214, 220], "drawannot": 18, "kei": [18, 61, 88, 91, 257], "annot": [18, 252], "pair": [18, 21, 158, 160, 168, 169, 186, 189, 230, 238, 259], "utf": [18, 63, 230], "extent": [18, 70, 158], "lookup": [18, 229], "drawarc": 18, "oval": [18, 158, 168, 189, 257, 259], "startangl": [18, 116, 158, 168], "sweepangl": [18, 158, 168], "usecent": 18, "arc": [18, 158, 160, 168, 169, 259], "sweep": [18, 158, 168], "plu": [18, 38, 43, 158, 259], "degre": [18, 140, 158, 168, 257], "right": [18, 70, 122, 137, 140, 141, 158, 187, 189, 190, 194, 197, 201], "middl": [18, 236, 259], "end": [18, 27, 29, 58, 68, 88, 91, 92, 116, 124, 144, 154, 158, 161, 168, 187, 201, 210, 211, 212, 213, 214, 220, 222, 223, 257, 258, 259], "clockwis": [18, 140, 158, 168, 170], "counterclockwis": [18, 158, 168], "circl": [18, 116, 140, 155, 156, 158, 168, 189, 259], "wedg": 18, "center": [18, 116, 133, 141, 158, 168, 189, 247, 258], "between": [18, 38, 60, 63, 70, 116, 133, 152, 154, 158, 165, 181, 185, 187, 215, 236, 238], "begin": [18, 52, 58, 63, 116, 129, 144, 154, 158, 168, 176, 210, 211, 212, 213, 214, 220, 257], "drawatla": 18, "atla": 18, "xform": [18, 230, 233], "rsxform": [18, 140, 230, 233], "tex": [18, 240], "0x7fc5d9a36c30": 18, "cullrect": [18, 154, 182, 183], "sprite": 18, "alia": [18, 88], "colorfilt": [18, 43, 120, 129, 133, 136, 149, 154, 205, 220, 256], "imagefilt": [18, 24, 38, 124, 154, 220, 256], "present": [18, 27, 38, 65, 124, 183, 220, 223, 238, 248, 250], "entri": [18, 19, 49, 88, 91, 158, 187, 194, 238, 249, 259], "space": [18, 19, 27, 40, 45, 63, 65, 107, 120, 124, 129, 133, 134, 140, 154, 165, 173, 220, 245, 252], "conserv": [18, 29, 53, 140, 217, 230, 238], "map": [18, 27, 41, 45, 63, 88, 91, 124, 129, 133, 134, 140, 186, 220, 230, 246, 253, 257], "effici": [18, 27, 55, 158, 197, 258], "drawbitmap": 18, "drawloop": [18, 220], "extend": [18, 68, 154, 156, 158, 168, 220, 238], "beyond": [18, 220, 249, 258], "replic": [18, 165, 235, 258], "just": [18, 27, 72, 220, 239, 257], "made": [18, 27, 50, 58, 88, 91, 144, 154, 182, 210, 211, 212, 213, 214, 220, 255], "makebitmapshad": 18, "side": [18, 19, 122, 133, 140, 187, 194], "drawbitmaprect": 18, "constraint": [18, 227], "srcrectconstraint": 18, "kstrict_srcrectconstraint": [18, 25], "scale": [18, 19, 27, 31, 63, 124, 133, 140, 141, 142, 158, 168, 182, 184, 186, 187, 188, 192, 220, 230, 238, 258], "translat": [18, 122, 124, 140, 142, 158, 182, 189, 197, 257, 258, 259], "addition": [18, 88, 91, 124, 158, 220], "filterqu": [18, 124, 133, 154, 186], "kfast_srcrectconstraint": [18, 25], "improv": [18, 118, 120, 140, 158, 259], "filter": [18, 24, 38, 43, 51, 120, 124, 129, 133, 136, 154, 181, 186], "strictli": [18, 116], "faster": [18, 25, 187, 197, 238], "isrc": 18, "boundari": 18, "fraction": [18, 194], "cx": [18, 116, 258], "cy": [18, 116, 258], "radiu": [18, 48, 116, 133, 140, 158, 168, 189, 258], "thick": [18, 70, 154, 217], "axi": [18, 19, 63, 65, 67, 74, 121, 122, 124, 133, 140, 158, 168, 187, 188, 189, 191, 194, 197, 198, 199, 220, 233, 238], "half": [18, 46, 158, 189, 236, 250], "diamet": 18, "drawcolor": [18, 257, 258], "drawdrrect": 18, "outer": [18, 122, 133, 171, 194, 258], "inner": [18, 38, 43, 133, 171, 258], "join": [18, 122, 154, 158, 171, 194, 216, 217], "round": [18, 45, 48, 63, 158, 168, 189, 194, 220, 257, 258], "squar": [18, 140, 155, 189], "concav": [18, 158], "These": [18, 47, 57, 93, 220, 258], "ident": [18, 27, 124, 140, 142, 158, 189, 197, 259], "fast": [18, 45, 154, 158], "drawirect": 18, "drawimag": [18, 257, 258], "0x7fc5db551630": 18, "drawimagerect": [18, 133, 257], "uncompress": 18, "rectangular": [18, 19, 30, 197], "0x7fc5d9a36870": 18, "system": [18, 70, 72, 124, 129, 137, 220], "ctm": [18, 129, 138], "drawrect": [18, 257, 258], "0x7fc5d9a367b0": 18, "0x7fc5d9a366b0": 18, "drawlin": [18, 154, 182], "x0": 18, "y0": 18, "x1": [18, 158, 168], "y1": [18, 158, 168], "segment": [18, 21, 51, 158, 176, 197, 201, 236, 258], "cap": [18, 154, 158, 216, 217], "were": [18, 27, 58, 88, 91, 92, 129, 144, 183, 210, 211, 212, 213, 214, 220, 233], "kstroke": 18, "p0": [18, 158, 194], "p1": [18, 158, 168, 194], "drawov": [18, 258], "drawpaint": [18, 154, 257, 258], "patheffect": [18, 48, 49, 51, 63, 135, 143, 145, 154, 165, 167, 216, 230, 236, 256], "drawpatch": 18, "texcoord": 18, "coon": 18, "patch": [18, 189], "interpol": [18, 60, 158], "four": [18, 35, 75, 122, 140, 154, 158, 161, 162, 168, 189, 194, 197, 220], "textur": [18, 37, 85, 86, 88, 91, 99, 104, 107, 110, 124, 220, 245, 246, 255], "everi": [18, 85, 158], "fourth": [18, 133], "bottom": [18, 27, 32, 70, 107, 122, 140, 141, 158, 189, 190, 194, 220], "deriv": 18, "drawpath": [18, 257, 258, 259], "close": [18, 52, 58, 150, 158, 159, 161, 168, 170, 176, 238, 258, 259], "drawpictur": [18, 182], "seri": [18, 148, 168, 259], "later": [18, 27, 161, 162, 182, 186, 199, 255], "playback": [18, 182, 255], "savelay": [18, 258], "plai": [18, 27, 124, 182], "drawpoint": 18, "kround": 18, "ksquar": 18, "butt": 18, "p": [18, 140, 158, 187], "pointmod": 18, "pt": [18, 140, 150, 158, 161, 162, 168, 180, 187, 194, 238, 258], "kpoint": 18, "kline": [18, 180, 259], "kpolygon": 18, "kbutt": 18, "One": [18, 186], "final": [18, 92, 129, 158, 198, 199, 259], "adjac": [18, 235], "minu": [18, 122, 158, 189, 194], "respect": [18, 24, 63, 88, 91, 124, 257], "unlik": [18, 27, 158, 183, 257, 258], "iter": [18, 68, 158, 162, 180, 197, 198, 201, 230, 233], "drawrrect": [18, 257], "uniformli": [18, 140, 158], "radii": [18, 133, 158, 168, 189, 190, 191], "drawregion": 18, "drawroundrect": [18, 257], "rx": [18, 158], "ry": [18, 158], "thei": [18, 27, 32, 38, 51, 85, 88, 91, 92, 154, 183, 197, 205, 210, 220, 236, 238, 252, 258], "down": [18, 19, 32, 70, 137, 176, 220], "skrect": [18, 122, 140, 141, 194], "skrrect": [18, 189], "drawsimpletext": 18, "charact": [18, 63, 70, 72, 75, 230, 238], "glyph": [18, 63, 70, 230, 233, 238, 257], "fallback": [18, 45, 72, 230], "found": [18, 63, 72, 140, 158, 201, 230, 238], "kern": [18, 230, 238], "complex": [18, 197, 230], "advanc": [18, 63, 161, 162, 165, 198, 199, 201, 230], "By": [18, 32, 140, 152, 158], "code": [18, 31, 63, 72, 158, 189, 194, 220, 230, 238, 257], "drawstr": [18, 259], "char": [18, 72, 238], "drawtextblob": [18, 257, 258], "blob": [18, 230, 233, 258], "textblob": [18, 233, 257, 258], "skew": [18, 63, 140, 142, 257], "fake": [18, 63], "bold": [18, 63, 76, 238], "embed": [18, 71], "linear": [18, 41, 45, 116, 134, 136, 220, 258], "subpixel": [18, 63], "textencod": [18, 63, 230, 233], "kglyphid": [18, 234], "dither": [18, 154], "horizont": [18, 63, 140, 197, 201, 220, 233, 235, 238, 248, 258], "vertic": [18, 140, 220, 233, 235, 248, 258], "drawvertic": [18, 240], "triangl": 18, "mesh": 18, "vvertic": 18, "pend": [18, 124, 220], "resolv": [18, 148, 220, 238], "never": [18, 72, 88, 91, 129, 158, 182, 197, 215, 220, 238, 259], "defer": [18, 124, 134], "getbaselayers": 18, "root": [18, 202], "global": [18, 50, 88, 91, 158], "due": [18, 72, 92, 217], "getdeviceclipbound": 18, "makeempti": [18, 50, 122, 123, 189, 194, 209], "getlocalclipbound": 18, "outset": [18, 122, 189, 194, 217, 258], "account": [18, 63, 154, 158, 217, 220, 238], "partial": [18, 30, 31, 63, 64, 93, 124, 154], "coverag": [18, 47], "local": [18, 116, 124, 129, 133], "getlocaltodevic": 18, "getprop": 18, "writabl": [18, 124, 140, 158, 186, 222], "getsavecount": 18, "depth": [18, 134], "getsurfac": 18, "sksurfac": [18, 88, 91], "sometim": [18, 45, 227, 238], "bare": 18, "els": [18, 124, 129, 140, 154, 176, 210, 235], "gettotalmatrix": 18, "strip": [18, 184, 192], "awai": [18, 51, 137, 182], "z": [18, 137, 140, 187, 188], "3x3": [18, 45, 133, 140, 257], "isclipempti": 18, "often": [18, 72, 220], "howev": [18, 30, 88, 91, 140, 220, 257, 258], "iscliprect": 18, "makesurfac": [18, 220], "beginpag": [18, 52], "beginrecord": [18, 182, 183, 255], "debugcanva": 18, "quickreject": [18, 154, 197], "quickli": [18, 181, 197], "compar": [18, 45, 121, 158, 187, 197, 217], "instanc": [18, 35, 38, 50, 53, 88, 91, 110, 124, 129, 154, 165, 202, 220, 238, 259], "too": [18, 19, 31, 32, 45, 152, 158, 168, 186, 197, 220], "small": [18, 19, 31, 45, 158, 168, 181, 186, 197, 220], "resetmatrix": 18, "skmatrix": [18, 140, 142, 189], "prior": [18, 24, 30, 88, 91, 133, 158, 159, 186, 187], "overwritten": [18, 158, 222], "savecount": 18, "savelayerpreservelcdtextrequest": 18, "savelayeralpha": 18, "mathemat": [18, 140], "px": [18, 140], "about": [18, 27, 29, 92, 140], "setmatrix": 18, "put": 18, "suggest": [18, 27], "layerrec": 18, "savelayerrec": 18, "opac": 18, "onto": [18, 38, 255, 257], "sx": [18, 140], "sy": [18, 140], "skm44": 18, "increas": [18, 63, 116, 120, 154, 158, 176, 197], "toarrai": [18, 124, 220, 257], "dx": [18, 122, 133, 140, 143, 158, 168, 187, 189, 194, 197], "dy": [18, 122, 133, 140, 143, 158, 168, 187, 189, 194, 197], "along": [18, 129, 133, 140, 165, 198, 199, 233, 238, 258], "move": [18, 27, 51, 58, 63, 122, 124, 133, 140, 144, 158, 176, 186, 194, 210, 211, 212, 213, 214], "distanc": [18, 48, 63, 70, 133, 158, 165, 168, 176, 187, 188, 259], "kall_quadaaflag": [18, 22], "quadaaflag": 18, "kbottom_quadaaflag": [18, 22], "kf16colortyp": [18, 23], "savelayerflag": [18, 24], "kinitwithprevious_savelayerflag": [18, 23], "kleft_quadaaflag": [18, 22], "klines_pointmod": [18, 21], "knone_quadaaflag": [18, 22], "kpoints_pointmod": [18, 21], "kpolygon_pointmod": [18, 21], "kpreservelcdtext_savelayerflag": [18, 23], "kright_quadaaflag": [18, 22], "ktop_quadaaflag": [18, 22], "divid": [19, 220, 246], "grid": 19, "fix": [19, 45, 238], "proportion": [19, 189], "fbound": [19, 24], "fcolor": [19, 20], "frecttyp": 19, "fxcount": 19, "fxdiv": 19, "fycount": 19, "fydiv": 19, "kdefault": [19, 20], "recttyp": 19, "kfixedcolor": [19, 20], "ktranspar": [19, 20, 35], "polygon": [21, 158], "fpaint": 24, "fbackdrop": 24, "fsavelayerflag": 24, "overlai": 24, "modifi": [24, 27, 29, 50, 51, 63, 85, 88, 91, 124, 138, 154, 158, 176, 181, 186, 187, 189, 197, 205, 258], "backdrop": 24, "caus": [24, 53, 124, 140, 187, 189, 220], "kinitwithprevi": 24, "rather": [24, 175, 181, 257], "slower": [25, 152, 158], "abstract": [27, 182, 210], "makefromdata": [27, 72, 182, 238], "we": [27, 30, 45, 85, 88, 91, 92, 93, 176, 220, 255, 257], "know": [27, 72, 92, 257], "minbufferedbytesneed": 27, "resulttostr": 27, "textual": 27, "stream": [27, 29, 52, 55, 58, 59, 61, 124, 144, 147, 150, 158, 182, 202, 203, 211, 212, 213, 214, 238, 244, 255], "getencodedformat": 27, "skencodedimageformat": 27, "getframecount": 27, "frame": [27, 28, 29, 30, 51, 124], "getframeinfo": [27, 30], "frameinfo": 27, "singl": [27, 60, 63, 85, 148, 154, 181, 182, 197, 205, 230, 255, 258, 259], "multi": [27, 29, 30, 220], "pars": [27, 45, 124, 198, 199, 227], "alreadi": [27, 30, 50, 124, 133, 188, 258], "As": [27, 32, 140], "rewind": [27, 31, 58, 144, 158, 199, 210, 211, 212, 213, 214], "still": [27, 29, 32, 33, 88, 91, 220, 255], "anim": [27, 33, 53, 124, 158], "getinfo": [27, 30], "reason": 27, "icc": [27, 45], "profil": [27, 45, 133], "getorigin": 27, "exif": [27, 57], "ktopleft": [27, 220], "block": [27, 247, 255], "fheight": [27, 123, 209], "fwidth": [27, 123, 209], "repeat": [27, 140, 158, 181, 197, 235, 258], "give": [27, 153, 217, 255], "scanlin": [27, 30, 32], "progress": 27, "client": [27, 30, 32, 50, 53, 63, 81, 85, 88, 91, 92, 110, 176, 220, 223, 255, 258], "startscanlinedecod": 27, "descript": [27, 184, 220, 259], "config": [27, 120, 245], "expect": [27, 124, 245], "simpli": [27, 88, 91, 220], "contract": 27, "decid": [27, 171, 239], "impli": [27, 140, 182], "kinvalidscal": [27, 31], "skcolorspac": 27, "report": [27, 30, 58, 88, 91, 104, 144, 210, 211, 212, 213, 214, 249], "geticcprofil": 27, "ksuccess": [27, 31], "explain": [27, 32], "failur": [27, 45, 58, 88, 91, 124, 144, 158, 210, 211, 212, 213, 214, 220, 238], "getrepetitioncount": 27, "repetit": 27, "mean": [27, 50, 63, 88, 91, 133, 140, 210, 217, 220, 230], "stop": [27, 52, 176, 236], "krepetitioncountinfinit": 27, "loop": [27, 158, 259], "forev": 27, "find": [27, 72, 215, 238], "getscaleddimens": 27, "desiredscal": 27, "factor": [27, 133, 140, 187, 258], "exact": [27, 30, 129, 158, 189, 194, 259], "getscanlineord": 27, "scanlineord": 27, "enum": [27, 56, 81, 93, 239, 246, 248], "getscanlin": [27, 30], "countlin": 27, "Not": [27, 50, 258], "getvalidsubset": 27, "desiredsubset": 27, "anyth": [27, 63, 81, 258], "similar": [27, 28, 45, 88, 91, 133, 136, 140, 255, 257], "particular": [27, 88, 91, 140, 258], "someth": [27, 136, 210, 258], "potenti": [27, 124], "getyuvaplan": 27, "yuvapixmap": 27, "skyuvapixmap": 27, "attempt": [27, 29, 30, 58, 124, 144, 210, 211, 212, 213, 214], "planar": [27, 245], "queryyuvainfo": 27, "prealloc": 27, "accord": [27, 116], "incrementaldecod": 27, "rowsdecod": 27, "continu": [27, 31, 158], "startincrementaldecod": 27, "kincompleteinput": [27, 31], "again": [27, 88, 91, 173, 210, 220, 238], "skstream": 27, "latter": 27, "variabl": [27, 70, 140], "total": [27, 58, 88, 91, 129, 144, 176, 210, 211, 212, 213, 214, 245, 249], "meaning": [27, 30, 63, 140], "mani": [27, 58, 122, 133, 144, 148, 194, 210, 211, 212, 213, 214, 259], "necessarili": [27, 122, 194], "finish": [27, 88, 91, 92, 124], "interlac": 27, "png": [27, 124, 255, 257, 258], "what": [27, 53, 88, 91, 129, 205, 220, 239, 249, 257, 258], "nextscanlin": [27, 32], "fcurrscanlin": 27, "except": [27, 28, 31, 133, 183, 220], "strang": 27, "bmp": [27, 32, 124], "outputscanlin": 27, "inputscanlin": 27, "gif": [27, 28, 124], "supporteddatatyp": [27, 249], "skyuvapixmapinfo": [27, 249], "yuv": [27, 245, 246, 249], "subsampl": [27, 245, 247], "chroma": [27, 247], "site": [27, 245], "plane": [27, 245, 246, 248, 249, 250, 251, 252], "skipscanlin": 27, "ongetscanlin": 27, "reallyhasalpha": 27, "incomplet": [27, 31], "past": [27, 58, 144, 210, 211, 212, 213, 214], "prepar": [27, 158], "readi": [27, 220], "kcouldnotrewind": [27, 31], "kerrorininput": [27, 31], "kinternalerror": [27, 31], "kinvalidconvers": [27, 31], "kinvalidinput": [27, 31], "kinvalidparamet": [27, 31], "kkeep": [27, 28, 32], "disposalmethod": 27, "knofram": [27, 29, 30], "kno_zeroiniti": [27, 34], "zeroiniti": 27, "kpreferanim": [27, 33], "selectionpolici": 27, "kpreferstillimag": [27, 33], "krestorebgcolor": [27, 28, 32], "krestoreprevi": [27, 28, 29, 30], "kunimpl": [27, 31], "kyes_zeroiniti": [27, 34], "89a": 28, "spec": [28, 116], "keep": [28, 32, 88, 91, 124, 140, 205, 220], "background": [28, 88, 91, 133, 258], "disregard": 28, "restoreprevi": 28, "individu": [29, 189], "falphatyp": 29, "fdisposalmethod": 29, "fdurat": 29, "millisecond": 29, "show": [29, 184, 255, 258], "ffullyreceiv": 29, "marker": 29, "There": [29, 252, 258], "frequiredfram": [29, 30], "earliest": 29, "fframeindex": 30, "fpriorfram": 30, "fzeroiniti": 30, "fsubset": 30, "encodedformat": 30, "encodedimageformat": [30, 124], "kwebp": [30, 56, 124], "sens": 30, "control": [30, 63, 152, 154, 158, 176, 189, 220, 225, 239, 257], "dure": [30, 88, 91, 92, 150, 182, 183, 220, 227], "besid": [31, 258], "etc": [31, 49, 88, 91, 133, 168, 239, 257], "did": [31, 88, 91, 124, 161, 162, 220], "fulfil": [31, 210], "oom": [31, 88, 91], "variat": [32, 65, 238], "far": [32, 194], "reliabl": 32, "logic": [32, 45, 178, 236], "revers": [32, 122, 158, 194], "kbottomup": 32, "forc": [32, 140, 161], "advantag": [32, 34], "tough": 32, "simplest": 32, "ask": [32, 181, 255], "chunk": 32, "caution": [32, 50], "deliv": 32, "upsid": 32, "sequenc": [33, 53, 63, 158, 198, 199, 257, 258, 259], "select": [33, 140, 220], "struct": [34, 45, 83, 92, 110, 118], "public": 35, "0xffffffff": [35, 154, 182], "tupl": [35, 38, 43, 63, 80, 121, 122, 123, 124, 140, 161, 162, 176, 187, 188, 194, 209, 249], "tocolor": 35, "frombytes_rgba": 35, "fromcolor": [35, 154], "see": [35, 41, 45, 47, 50, 88, 91, 122, 129, 134, 154, 158, 194, 220, 238, 257, 258], "fitsinbyt": 35, "fa": 35, "makeopaqu": 35, "tobytes_rgba": 35, "vec": [35, 140, 187, 188], "fb": 35, "fg": 35, "fr": [35, 140], "kblack": 35, "kblue": 35, "kcyan": 35, "kdkgrai": 35, "kgrai": 35, "kgreen": 35, "kltgrai": 35, "75": [35, 258], "kmagenta": 35, "kred": 35, "kwhite": 35, "kyellow": 35, "manipul": 36, "kr": 36, "kg": 36, "kb": 36, "ka": 36, "klastenum": 36, "kred_colorchannelflag": 37, "kgreen_colorchannelflag": 37, "kblue_colorchannelflag": 37, "kalpha_colorchannelflag": 37, "kgray_colorchannelflag": 37, "krg_colorchannelflag": 37, "krgb_colorchannelflag": 37, "krgba_colorchannelflag": 37, "pipelin": [38, 258], "stage": 38, "xfermod": [38, 129, 256, 257], "reentrant": 38, "legal": [38, 41, 134, 154, 158, 176, 236, 251], "sever": [38, 45, 236, 257, 258], "deseri": [38, 43, 45, 53, 61, 129, 138, 171, 205, 230, 238], "asacolormatrix": [38, 43], "5x4": [38, 43], "asacolormod": [38, 43], "ascolormod": [38, 43], "filtercolor": [38, 43], "filtercolor4f": [38, 43], "srccolor": [38, 43], "srcc": [38, 43], "dstc": [38, 43], "getflattenabletyp": [38, 43, 53, 61, 129, 138, 171, 205], "flattan": [38, 39, 43, 44, 53, 54, 129, 132, 138, 139, 171, 174, 205, 206], "gettypenam": [38, 43, 53, 61, 129, 138, 171, 205], "drawabl": [38, 43, 61, 129, 138, 171, 182, 183, 205], "makecompos": [38, 43, 171, 258], "serial": [38, 43, 45, 53, 61, 129, 138, 158, 171, 182, 205, 230, 238, 239, 255], "kcolorfilter_typ": [38, 39, 43, 44, 53, 54, 61, 62, 129, 132, 138, 139, 171, 174, 205, 206], "kdrawlooper_typ": [38, 39, 43, 44, 53, 54, 61, 62, 129, 132, 138, 139, 171, 174, 205, 206], "kdrawable_typ": [38, 39, 43, 44, 53, 54, 61, 62, 129, 132, 138, 139, 171, 174, 205, 206], "kimagefilter_typ": [38, 39, 43, 44, 53, 54, 61, 62, 129, 132, 138, 139, 171, 174, 205, 206], "kmaskfilter_typ": [38, 39, 43, 44, 53, 54, 61, 62, 129, 132, 138, 139, 171, 174, 205, 206], "kpatheffect_typ": [38, 39, 43, 44, 53, 54, 61, 62, 129, 132, 138, 139, 171, 174, 205, 206], "hslamatrix": 40, "rowmajor": 40, "colormatrix": [40, 258], "hsla": 40, "instead": [40, 63, 124, 133, 154, 158, 168, 182, 194, 205, 255, 258], "lerp": [40, 208], "lineartosrgbgamma": 40, "srgbtolineargamma": 40, "arg0": [41, 68, 82, 104, 124, 146, 152, 176, 203, 231], "gammaclosetosrgb": [41, 45, 134], "makealphatyp": [41, 134], "newalphatyp": [41, 134], "incompat": [41, 134, 220], "makecolorspac": [41, 124, 134], "makecolortyp": [41, 134], "newcolortyp": [41, 134], "makelightingfilt": 43, "mul": 43, "add": [43, 52, 68, 70, 93, 121, 148, 152, 155, 156, 158, 159, 161, 168, 182, 187, 251], "argument": [43, 65, 154, 220, 238], "capsul": [45, 58, 84, 144, 210, 211, 212, 213, 214, 221], "deeper": 45, "cm": [45, 140], "iccprofil": 45, "skcm": 45, "makergb": 45, "transferfn": 45, "transferfunct": 45, "toxyz": 45, "matrix3x3": 45, "transfer": [45, 124, 154, 202, 220, 258], "major": [45, 140], "xyz": 45, "makesrgb": [45, 255], "makesrgblinear": 45, "primari": 45, "gamma": [45, 134, 136, 220, 225, 229], "deref": [45, 50, 230, 240], "gammaislinear": 45, "gamuttransformto": 45, "src_to_dst": 45, "hash": 45, "invtransferfn": 45, "fn": 45, "isnumericaltransferfn": 45, "standard": [45, 138, 140, 158, 189, 194, 258], "eg": 45, "pq": 45, "hlg": 45, "issrgb": 45, "littl": [45, 46, 257], "toler": 45, "might": [45, 122, 140, 257], "numer": [45, 158, 168], "white": 45, "d50": 45, "decis": 45, "consid": [45, 88, 91, 122, 182, 194], "2f": 45, "exponenti": [45, 133], "them": [45, 88, 91, 92, 110, 124, 154, 187, 188, 202, 220, 236, 258, 259], "makecolorspin": 45, "gbr": 45, "brg": 45, "testabl": 45, "makelineargamma": 45, "gamut": [45, 154], "term": [45, 92], "makesrgbgamma": 45, "refcntgreaterthan": [45, 50, 230, 240], "skdata": [45, 197], "toprofil": 45, "toxyzd50": 45, "toxyzd50hash": 45, "veri": [45, 158, 194, 197], "risk": 45, "collis": 45, "gabcdef": 45, "transferfnhash": 45, "writetomemori": [45, 158, 189, 197], "krgb_888x_colortyp": 46, "krgba_1010102_colortyp": 46, "kbgra_1010102_colortyp": 46, "krgb_101010x_colortyp": 46, "kbgr_101010x_colortyp": 46, "grayscal": [46, 118, 120, 258], "level": [46, 52, 63, 88, 91, 99, 124, 146, 186, 257], "krgba_f16norm_colortyp": 46, "64": [46, 93, 112, 134, 186, 258], "krgba_f32_colortyp": 46, "128": [46, 93, 257, 258], "kr8g8_unorm_colortyp": 46, "ka16_float_colortyp": 46, "kr16g16_float_colortyp": 46, "ka16_unorm_colortyp": 46, "kr16g16_unorm_colortyp": 46, "endian": [46, 238], "uint16_t": 46, "kr16g16b16a16_unorm_colortyp": 46, "geometr": [47, 140], "ala": 47, "thought": [47, 140], "variant": [47, 124, 220], "wai": [47, 85, 129, 255, 257], "kunion": 47, "kreversediffer": 47, "klast": [47, 87, 94, 118, 119, 124, 127, 249, 250], "sharp": [48, 154, 189, 258], "treatment": [48, 258], "phase": [49, 165], "dash": [49, 154, 165, 171, 172, 173], "off": [49, 124, 152, 172], "55": 49, "85": 49, "would": [49, 129, 152, 181, 238], "becaus": [49, 88, 91], "30": [49, 258, 259], "mod": [49, 165], "life": [50, 65], "dataref": 50, "eventu": [50, 210], "makefromfilenam": [50, 124, 258], "file": [50, 52, 58, 72, 124, 144, 152, 210, 211, 212, 213, 214, 238, 255, 257], "makesubset": [50, 124], "makeuniniti": 50, "writable_data": 50, "makewithcopi": [50, 124], "makewithoutcopi": 50, "outliv": 50, "suitabl": [50, 220], "buf": 50, "cast": [50, 122, 158, 168, 187], "copyrang": 50, "clamp": [50, 133, 229, 258], "memcmp": 50, "isempti": [50, 122, 123, 134, 158, 189, 194, 197, 209, 215], "WITH": 50, "refcnt": [50, 63, 154, 183], "precaut": 50, "seglength": 51, "seedassist": 51, "break": 51, "randomli": [51, 258], "endpoint": 51, "deviat": [51, 138], "seed": [51, 181], "random": 51, "want": [51, 53, 196, 205, 217, 220, 257, 258], "behaviour": 51, "high": [52, 124, 257], "doc": 52, "draw_my_cont": 52, "endpag": 52, "syntax": 52, "filewstream": [52, 55, 147, 202, 244, 255], "makedocu": [52, 150, 255], "480": [52, 202, 220, 255], "640": [52, 202, 220, 255, 258], "trust": 52, "go": [52, 88, 91, 196], "longer": [52, 88, 91, 205, 220], "automat": [52, 124], "anonym": 52, "namespac": 52, "pyautodocumentpag": 52, "id": [53, 88, 91, 97, 101, 102, 124, 150, 153, 233, 238], "whenev": 53, "savelevel": 53, "extern": [53, 220, 245, 252, 257], "presum": 53, "render": [53, 83, 88, 91, 104, 133, 140, 152, 158, 181, 203, 220, 227, 230, 255], "thing": 53, "well": [53, 85, 110, 171, 182, 257], "notifydrawingchang": 53, "newpicturesnapshot": [53, 183], "sizeofpackeduint": [55, 59, 147, 244], "byteswritten": [55, 59, 147, 244], "wstream": [55, 59, 147, 150, 158, 202], "copyto": 55, "copytoandreset": 55, "detachasdata": 55, "detachasstream": 55, "streamasset": [55, 58, 144, 210, 212, 213, 214], "reader": 55, "reimplement": [55, 58, 59, 144, 147, 210, 211, 212, 213, 214, 244], "nullwstream": [55, 59, 244], "newlin": [55, 59, 147, 244], "padtoalign4": 55, "prependtoandreset": 55, "prepend": [55, 215], "write16": [55, 59, 147, 244], "write32": [55, 59, 147, 244], "write8": [55, 59, 147, 244], "writebigdecastext": [55, 59, 147, 244], "mindigit": [55, 59, 147, 215, 244], "writebool": [55, 59, 147, 244], "writedecastext": [55, 59, 147, 244], "writehexastext": [55, 59, 147, 244], "writepackeduint": [55, 59, 147, 244], "writescalar": [55, 59, 147, 244], "writescalarastext": [55, 59, 147, 244], "writestream": [55, 59, 147, 244], "writetext": [55, 59, 147, 244], "writetoandreset": 55, "writetostream": 55, "kbmp": [56, 124], "kgif": [56, 124], "kico": [56, 124], "kjpeg": [56, 124], "kpng": [56, 124, 255, 257], "kwbmp": 56, "kpkm": 56, "kktx": 56, "kastc": 56, "kdng": 56, "kheif": 56, "www": [57, 181], "org": [57, 116, 181], "exif2": 57, "ktopleft_encodedorigin": [57, 245], "ktopright_encodedorigin": 57, "kbottomright_encodedorigin": 57, "kbottomleft_encodedorigin": 57, "klefttop_encodedorigin": 57, "krighttop_encodedorigin": 57, "krightbottom_encodedorigin": 57, "kleftbottom_encodedorigin": 57, "kdefault_encodedorigin": 57, "klast_encodedorigin": 57, "makefromfil": [58, 72, 144, 210, 211, 212, 213, 214, 238], "skstreamasset": [58, 144, 210, 211, 212, 213, 214], "duplic": [58, 144, 210, 211, 212, 213, 214, 259], "streamseek": [58, 144, 210, 211, 212, 213], "fork": [58, 144, 210, 211, 212, 213, 214], "getlength": [58, 144, 176, 210, 211, 212, 213, 214], "memorystream": [58, 210, 211, 212, 213, 214], "getmemorybas": [58, 144, 210, 211, 212, 213, 214], "streammemori": [58, 144, 210, 211, 213, 214], "getposit": [58, 144, 210, 211, 212, 213, 214], "haslength": [58, 144, 210, 211, 212, 213, 214], "hasposit": [58, 144, 210, 211, 212, 213, 214], "isatend": [58, 144, 210, 211, 212, 213, 214], "earli": [58, 144, 210, 211, 212, 213, 214], "late": [58, 144, 210, 211, 212, 213, 214], "unsuccess": [58, 144, 210, 211, 212, 213, 214], "isvalid": [58, 59, 82, 83, 85, 86, 118, 124, 158, 189, 220, 226, 249, 252], "seek": [58, 124, 144, 210, 211, 212, 213, 214], "peek": [58, 144, 162, 210, 211, 212, 213, 214], "min": [58, 75, 140, 144, 210, 211, 212, 213, 214, 229, 258], "peekabl": [58, 144, 210, 211, 212, 213, 214], "regardless": [58, 88, 91, 144, 210, 211, 212, 213, 214, 220], "readbool": [58, 144, 210, 211, 212, 213, 214], "readpackeduint": [58, 144, 210, 211, 212, 213, 214], "reads16": [58, 144, 210, 211, 212, 213, 214], "reads32": [58, 144, 210, 211, 212, 213, 214], "reads8": [58, 144, 210, 211, 212, 213, 214], "readscalar": [58, 144, 210, 211, 212, 213, 214], "readu16": [58, 144, 210, 211, 212, 213, 214], "readu32": [58, 144, 210, 211, 212, 213, 214], "readu8": [58, 144, 210, 211, 212, 213, 214], "streamrewind": [58, 144, 210, 211, 212, 214], "fsync": 59, "dynamicmemorywstream": [59, 147, 244], "knearest": 60, "nearest": [60, 124, 186, 236], "neighbor": [60, 124, 186], "klinear": [60, 220, 225], "interpor": 60, "2x2": 60, "bilinear": 60, "flatten": 61, "transport": 61, "typograph": 63, "scalex": [63, 140], "skewx": [63, 140], "emul": 63, "condens": 63, "expand": [63, 247], "obliqu": 63, "shear": 63, "counttext": 63, "kutf8": [63, 230, 233, 234], "kutf16": [63, 230, 234], "kutf32": [63, 230, 234], "unicod": [63, 238], "codepoint": 63, "dump": [63, 140, 158, 189, 194], "skdebugf": 63, "aid": 63, "retriev": [63, 88, 91, 104, 124, 134, 154, 220, 245], "getedg": 63, "gethint": 63, "fonthint": 63, "outlin": [63, 154, 158, 197], "adjust": [63, 122, 154, 189, 238], "getmetr": 63, "skfontmetr": 63, "fontmetr": 63, "getpath": 63, "glyphid": [63, 238], "degener": [63, 140, 158, 161, 188], "getpo": 63, "getscalex": [63, 140], "getsiz": 63, "getskewx": [63, 140], "getspac": 63, "recommend": [63, 75, 255], "metric": [63, 70, 71, 124, 158, 233], "descent": 63, "ascent": 63, "lead": 63, "gettypefac": 63, "previous": [63, 88, 91, 154, 182, 238, 257], "gettypefaceordefault": 63, "getwidth": [63, 217], "getwidthsbound": 63, "getxpo": 63, "isbaselinesnap": 63, "baselin": [63, 70, 233], "snap": [63, 183], "isembeddedbitmap": 63, "engin": [63, 227], "isembolden": 63, "isforceautohint": 63, "freetyp": 63, "islinearmetr": 63, "linearli": [63, 88, 91], "scalabl": 63, "issubpixel": 63, "sub": [63, 220, 248], "makewiths": 63, "infinit": [63, 189, 194], "nan": [63, 140, 187, 194, 236], "measuretext": [63, 258], "reftypefac": 63, "reftypefaceordefault": 63, "setbaselinesnap": 63, "baselinesnap": 63, "setedg": 63, "setembeddedbitmap": 63, "embeddedbitmap": 63, "setembolden": 63, "embolden": 63, "setforceautohint": 63, "forceautohint": 63, "sethint": 63, "hintinglevel": 63, "setlinearmetr": 63, "linearmetr": 63, "setscalex": [63, 140], "setsiz": 63, "textsiz": [63, 238], "setskewx": [63, 140], "setsubpixel": 63, "settypefac": 63, "tf": 63, "texttoglyph": [63, 258], "unichartoglyph": [63, 238], "uni": 63, "unicharstoglyph": [63, 238], "kalia": [63, 64], "kantialia": [63, 64], "ksubpixelantialia": [63, 64], "getcollectionindex": 65, "getvariationdesignposit": [65, 238], "variationposit": [65, 238], "setcollectionindex": 65, "collectionindex": 65, "ttc": [65, 72], "dfont": 65, "cff": 65, "cid": 65, "pfr": 65, "t42": 65, "t1": 65, "fon": 65, "collect": [65, 154], "setvariationdesignposit": 65, "coordinatecount": [66, 238], "constructor": [68, 110, 124, 140, 158, 197, 198, 201, 257], "append": [68, 158, 159, 168, 197, 215], "item": 68, "l": [68, 122, 140, 194], "pop": 68, "knone": [69, 108, 124, 127], "kslight": 69, "knormal": [69, 236, 237], "kfull": 69, "consist": [70, 134, 158, 230], "hasstrikeoutposit": 70, "strikeout": [70, 71], "underlin": [70, 71], "hasstrikeoutthick": 70, "hasunderlineposit": 70, "hasunderlinethick": 70, "fascent": 70, "favgcharwidth": 70, "averag": [70, 140, 158, 194], "unknown": [70, 140, 184], "fbottom": [70, 122, 140, 189, 194], "greatest": 70, "below": [70, 229], "fcapheight": 70, "letter": 70, "fdescent": 70, "fflag": 70, "fontmetricsflag": 70, "flead": 70, "fmaxcharwidth": 70, "fstrikeoutposit": [70, 71], "fstrikeoutthick": [70, 71], "ftop": [70, 122, 140, 189, 194], "funderlineposit": [70, 71], "funderlinethick": [70, 71], "fxheight": 70, "fxmax": 70, "fxmin": 70, "kstrikeoutpositionisvalid_flag": [70, 71], "kstrikeoutthicknessisvalid_flag": [70, 71], "kunderlinepositionisvalid_flag": [70, 71], "kunderlinethicknessisvalid_flag": [70, 71], "certain": 71, "print": [72, 121, 122, 158, 161, 187, 188, 194, 230, 231], "familynam": [72, 238], "matchfamilystyl": 72, "fontstyl": [72, 80, 238], "refdefault": 72, "countfamili": 72, "createstyleset": 72, "fontstyleset": 72, "getfamilynam": [72, 238], "legacymaketypefac": 72, "ttcindex": 72, "recogn": [72, 124, 158], "filenam": 72, "matchfamili": 72, "famili": [72, 110, 238], "hidden": [72, 75, 140], "auto": 72, "activ": [72, 104, 154, 183], "good": [72, 88, 91], "matchfamilystylecharact": 72, "bcp47": 72, "iso": 72, "639": 72, "15924": 72, "3166": 72, "fine": 72, "here": [72, 81, 181, 220, 255], "signific": 72, "bcp47count": 72, "ishidden": 75, "sethidden": 75, "def": [75, 255, 258], "max": [75, 133, 140, 158, 229, 258], "tag": [75, 152, 238], "identifi": [75, 124, 158, 182, 220, 230], "weight": [75, 76, 158, 161, 162, 168, 258], "slant": [75, 76], "ital": [75, 76], "boldital": 76, "kblack_weight": [76, 78], "900": [76, 78], "kbold_weight": [76, 78], "700": [76, 78], "kcondensed_width": [76, 79], "kexpanded_width": [76, 79], "kextrablack_weight": [76, 78], "1000": [76, 78], "kextrabold_weight": [76, 78], "800": [76, 78], "kextracondensed_width": [76, 79], "kextraexpanded_width": [76, 79], "kextralight_weight": [76, 78], "200": [76, 78, 255], "kinvisible_weight": [76, 78], "kitalic_sl": [76, 77], "klight_weight": [76, 78], "300": [76, 78], "kmedium_weight": [76, 78], "500": [76, 78], "knormal_weight": [76, 78], "400": [76, 78], "knormal_width": [76, 79], "koblique_sl": [76, 77], "ksemibold_weight": [76, 78], "600": [76, 78], "ksemicondensed_width": [76, 79], "ksemiexpanded_width": [76, 79], "kthin_weight": [76, 78], "kultracondensed_width": [76, 79], "kultraexpanded_width": [76, 79], "kupright_sl": [76, 77], "createempti": 80, "createtypefac": 80, "getstyl": [80, 154, 217], "matchstyl": 80, "pattern": [80, 158, 172, 173, 189, 194, 258], "3d": [81, 88, 90, 91, 98, 104, 188, 220, 254], "ganesh": [81, 255], "kopengl": [81, 88, 91], "kvulkan": [81, 254], "kmetal": [81, 254], "kdirect3d": 81, "kdawn": [81, 254], "kmock": [81, 254], "mock": [81, 83], "backend": [81, 82, 83, 85, 86, 88, 90, 91, 92, 93, 98, 104, 124, 220, 255], "unit": [81, 88, 91, 150, 187, 188, 238], "overhead": 81, "kopengl_grbackend": 81, "grbackend": 81, "who": [81, 129, 152, 183], "referenc": [81, 124, 154, 182, 186, 238, 258], "makegl": [82, 88, 91, 255], "makemock": [82, 88, 91], "grcolortyp": [82, 101, 102], "compress": [82, 88, 91, 124, 140, 192, 257], "sktexturecompressiontyp": [82, 88, 91, 102], "isstencilformat": 82, "asglformat": 82, "grglformat": 82, "asmockcolortyp": 82, "asmockcompressiontyp": 82, "grbackendapi": [82, 83, 86, 88, 90, 91, 98, 104], "channelmask": 82, "maketexture2d": 82, "texturetyp": 82, "grtexturetyp": 82, "samplecnt": [83, 220, 255], "stencilbit": [83, 255], "glinfo": [83, 86], "grglframebufferinfo": [83, 255], "mockinfo": [83, 86], "grmockrendertargetinfo": 83, "getbackendformat": [83, 86, 101, 102], "grbackendformat": [83, 86, 88, 91, 101, 102, 104, 220, 226], "getglframebufferinfo": 83, "gl": [83, 88, 91, 92, 93, 140, 220, 255], "snapshot": [83, 168], "getmockrendertargetinfo": 83, "grmocktextureinfo": [83, 86], "isframebufferonli": 83, "isprotect": [83, 86, 88, 91], "glsync": 84, "initgl": 84, "isiniti": 84, "connect": [85, 129, 156, 158, 168, 257, 259], "u": [85, 110, 245, 246, 248, 250, 253], "modifiend": 85, "setter": 85, "wrapper": 85, "around": [85, 257], "mutabl": 85, "vkimagelayout": [85, 88, 91], "queuefamilyindex": [85, 88, 91, 110], "gpubackendapi": 85, "mipmap": [86, 88, 91, 124], "grmipmap": [86, 88, 91, 124], "grgltextureinfo": 86, "getgltextureinfo": 86, "getmocktextureinfo": 86, "gltextureparametersmodifi": 86, "hasmipmap": [86, 124], "issametextur": 86, "setmutablest": 86, "skgpu": [86, 220], "mutabletexturest": [86, 220], "kunknown": [87, 94, 184, 245, 246, 248], "kalpha_8": 87, "kbgr_565": 87, "kabgr_4444": 87, "krgba_8888": 87, "krgba_8888_srgb": 87, "krgb_888x": 87, "krg_88": 87, "kbgra_8888": 87, "krgba_1010102": 87, "kgray_8": 87, "kalpha_f16": 87, "krgba_f16": 87, "krgba_f16_clamp": 87, "krgba_f32": 87, "kalpha_16": 87, "krg_1616": 87, "krg_f16": 87, "krgba_16161616": 87, "kalpha_8xxx": 87, "kalpha_f32xxx": 87, "kgray_8xxx": 87, "krgb_888": 87, "kr_8": 87, "kr_16": 87, "kr_f16": 87, "kgray_f16": 87, "grdirectcontext": [88, 90, 92, 98, 104, 124, 255], "computeimages": [88, 91], "skimag": [88, 91, 146], "usenextpow2": [88, 91], "grglinterfac": [88, 91], "grcontextopt": [88, 91], "context": [88, 90, 91, 93, 98, 104, 116, 124, 220, 230, 255, 257], "grglmakenativeinterfac": [88, 91], "mockopt": [88, 91], "grmockopt": [88, 91], "abandoncontext": [88, 91, 255], "abandon": [88, 91, 104, 220], "resourc": [88, 91, 257, 258], "assum": [88, 91, 124, 134, 137, 154, 249, 255], "usabl": [88, 91], "you": [88, 91, 120, 217, 255, 257, 258], "thu": [88, 91, 122, 173, 220, 257], "now": [88, 91, 158, 258], "further": [88, 91, 220], "vkqueue": [88, 91], "vkdevic": [88, 91, 110], "vkinstanc": [88, 91], "aliv": [88, 91, 220], "gotten": [88, 91], "unrecoverarbl": [88, 91], "ve": [88, 91], "vk_error_device_lost": [88, 91], "asdirectcontext": [88, 90, 91, 98, 104], "grcontext_bas": [88, 91, 98, 104], "downcast": [88, 90, 91, 98, 104], "checkasyncworkcomplet": [88, 91], "asynchron": [88, 91, 220], "relat": [88, 91, 230, 255], "callback": [88, 91, 182, 220], "colortypesupportedasimag": [88, 91, 104], "colortypesupportedassurfac": [88, 91, 104], "msaa": [88, 91, 104, 220], "maxsurfacesamplecountforcolortyp": [88, 91, 104], "compressedbackendformat": [88, 91], "compressiontyp": [88, 91, 102, 124], "createcompressedsbackendtextur": [88, 91], "createbackendtextur": [88, 91, 104], "backendformat": [88, 91, 226], "grrender": [88, 91, 104], "grprotect": [88, 91], "view": [88, 91], "grbackendtextur": [88, 91, 114, 124, 220], "layout": [88, 91, 220], "vkimag": [88, 91, 220], "vk_image_layout_undefin": [88, 91], "finishedproc": [88, 91, 92, 220], "notifi": [88, 91, 92, 220], "upload": [88, 91, 124], "submit": [88, 91, 92, 124, 158, 194, 220], "send": [88, 91, 92, 202], "vk_image_layout_shader_read_only_optim": [88, 91], "srcdata": [88, 91], "defaultbackendformat": [88, 91, 104], "numlevel": [88, 91], "miplevel": [88, 91], "pleas": [88, 91, 220], "skmipmap": [88, 91], "computelevels": [88, 91], "computelevelcount": [88, 91], "createcompressedbackendtextur": [88, 91], "surfacecharacter": [88, 91, 104, 220], "deletebackendtextur": [88, 91], "grflushinfo": [88, 91, 124, 220], "grsemaphoressubmit": [88, 91, 124, 220], "sent": [88, 91, 92, 152, 182, 220], "glflush": [88, 91, 220], "submiss": [88, 91, 92, 220], "occur": [88, 91, 129, 220, 225, 238], "metal": [88, 91, 220], "d3d": [88, 91, 220], "dawn": [88, 91, 220], "grbackendsemaphor": [88, 91, 92, 220], "semaphor": [88, 91, 92, 124, 220], "wait": [88, 91, 92, 220], "signal": [88, 91, 92, 183, 220], "regardleess": [88, 91, 220], "emphas": [88, 91, 220], "flushandsubmit": [88, 91, 124, 220, 255], "synccpu": [88, 91, 220], "freegpuresourc": [88, 91], "pressur": [88, 91], "getresourcecachelimit": [88, 91], "getresourcecachepurgeablebyt": [88, 91], "consum": [88, 91], "purgeabl": [88, 91], "unlock": [88, 91], "getresourcecacheusag": [88, 91], "resourcecount": [88, 91], "maxresourcebyt": [88, 91], "usag": [88, 91, 124, 245], "held": [88, 91, 110], "video": [88, 91], "maxrendertargets": [88, 91, 104], "maxtextures": [88, 91, 104], "glgeterror": [88, 91], "swallow": [88, 91], "gl_out_of_memori": [88, 91], "therefor": [88, 91, 92, 183], "hide": [88, 91], "advis": [88, 91], "fskipglerrorcheck": [88, 91], "That": [88, 91, 255], "ever": [88, 91], "vk_error_out_of_host_memori": [88, 91], "vk_error_out_of_device_memori": [88, 91], "precompileshad": [88, 91], "purgeresourcesnotusedinm": [88, 91], "msnotus": [88, 91], "datetim": [88, 91], "timedelta": [88, 91], "purgeunlockedresourc": [88, 91], "maxbytestopurg": [88, 91], "preferscratchresourc": [88, 91], "purg": [88, 91, 124], "reach": [88, 91], "polici": [88, 91], "lru": [88, 91], "overridden": [88, 91], "prefer": [88, 91], "scratch": [88, 91], "scratchresourcesonli": [88, 91], "intend": [88, 91, 245], "app": [88, 91], "suspend": [88, 91], "persist": [88, 91], "budget": [88, 91, 124, 220, 255], "enforc": [88, 91, 181], "releaseresourcesandabandoncontext": [88, 91], "yet": [88, 91, 133], "cleanup": [88, 91], "destroi": [88, 91, 110, 220], "perhap": [88, 91], "ed": [88, 91, 238], "elsewher": [88, 91], "resetcontext": [88, 91], "4294967295": [88, 91], "whatev": [88, 91, 140, 238, 257], "resend": [88, 91], "shouldn": [88, 91], "frequent": [88, 91], "resetgltexturebind": [88, 91], "unmodifi": [88, 91, 124, 158, 197], "twice": [88, 91, 158, 230, 238], "interven": [88, 91, 176], "setbackendrendertargetst": [88, 91], "grbackendrendertarget": [88, 91, 220, 255], "mutablest": [88, 91], "grbackendsurfacemutablest": [88, 91, 220], "previousst": [88, 91], "setbackendtexturest": [88, 91], "updat": [88, 91, 140, 158, 183, 251], "rendertarget": [88, 91], "awar": [88, 91], "updatebackendtextur": [88, 91], "vk_queue_family_ignor": [88, 91, 114], "tell": [88, 91], "setresourcecachelimit": [88, 91], "storevkpipelinecachedata": [88, 91], "outstand": [88, 91, 124], "un": [88, 91], "synchron": [88, 91, 210, 220], "try": [88, 91, 120, 186, 210, 255], "supportsdistancefieldtext": [88, 91], "threadsafeproxi": [88, 90, 91, 98, 104], "grcontextthreadsafeproxi": [88, 90, 91, 98, 104], "backendtextur": [88, 91, 124, 220], "mip": [88, 91, 99, 124, 146, 186, 220], "deletesemaphoresafterwait": [88, 91], "grcontext": [91, 93, 124, 220], "fnumsemaphor": 92, "themselv": [92, 183], "soon": 92, "proc": [92, 124, 230], "submittedproc": 92, "possibli": [92, 140, 176, 220, 250], "reattempt": 92, "realli": 92, "main": 92, "d": [93, 140, 154], "krendertarget_grglbackendst": 93, "ktexturebinding_grglbackendst": 93, "kview_grglbackendst": 93, "kblend_grglbackendst": 93, "kmsaaenable_grglbackendst": 93, "kvertex_grglbackendst": 93, "kstencil_grglbackendst": 93, "kpixelstore_grglbackendst": 93, "kprogram_grglbackendst": 93, "kfixedfunction_grglbackendst": 93, "kmisc_grglbackendst": 93, "kall_grglbackendst": 93, "65535": 93, "512": [93, 181, 257, 258], "1024": 93, "256": [93, 257, 258], "krgba8": 94, "kr8": 94, "kalpha8": 94, "kluminance8": 94, "kbgra8": 94, "krgb565": 94, "krgba16f": 94, "kr16f": 94, "krgb8": 94, "krg8": 94, "krgb10_a2": 94, "krgba4": 94, "ksrgb8_alpha8": 94, "kcompressed_etc1_rgb8": 94, "kcompressed_rgb8_etc2": 94, "kcompressed_rgb8_bc1": 94, "kcompressed_rgba8_bc1": 94, "kr16": 94, "krg16": 94, "krgba16": 94, "krg16f": 94, "kluminance16f": 94, "fboid": 95, "ffboid": 95, "fformat": [95, 97], "fid": 97, "ftarget": 97, "sai": 99, "disconnect": 104, "statu": 104, "transit": [104, 110, 154, 220], "ktopleft_grsurfaceorigin": 107, "kbottomleft_grsurfaceorigin": [107, 220, 255], "k2d": 108, "krectangl": 108, "kextern": 108, "backendcontext": 110, "grvkgpu": 110, "assumpt": 110, "queue": [110, 114, 124, 220], "commandpool": 110, "grbackendobject": 110, "hand": [110, 129, 137], "manual": 110, "kext_debug_report_grvkextensionflag": 112, "knv_glsl_shader_grvkextensionflag": 112, "kkhr_surface_grvkextensionflag": 112, "kkhr_swapchain_grvkextensionflag": 112, "kkhr_win32_surface_grvkextensionflag": 112, "kkhr_android_surface_grvkextensionflag": 112, "kkhr_xcb_surface_grvkextensionflag": 112, "kgeometryshader_grvkfeatureflag": 113, "kdualsrcblend_grvkfeatureflag": 113, "ksamplerateshading_grvkfeatureflag": 113, "grbackendrendendertarget": 114, "fcurrentqueuefamili": 114, "vk_queue_family_extern": 114, "vk_queue_family_foreign_ext": 114, "fsharingmod": 114, "vk_sharing_mode_exclus": 114, "falloc": 114, "flevelcount": 114, "fprotect": 114, "fycbcrconversioninfo": 114, "makelinear": [116, 258], "gradient": [116, 154, 205], "scalar": [116, 140, 158, 187, 189, 194, 230, 233], "evenli": 116, "intermedi": [116, 220], "tile": [116, 124, 133, 181, 182, 205, 220], "makeradi": [116, 258], "radial": 116, "makesweep": [116, 258], "endangl": 116, "conic": [116, 158, 161, 162, 168], "html": [116, 158, 168, 181], "w3": [116, 181], "html5": 116, "2dcontext": 116, "dom": 116, "createradialgradi": 116, "maketwopointcon": [116, 258], "startradiu": [116, 258], "endradiu": [116, 258], "kinterpolatecolorsinpremul_flag": [116, 117], "highcontrastfilt": 118, "low": [118, 120, 124, 186, 257], "vision": [118, 120], "invertstyl": 118, "fcontrast": 118, "fgrayscal": 118, "finvertstyl": 118, "kinvertbright": [118, 119], "kinvertlight": [118, 119], "knoinvert": [118, 119], "highcontrastconfig": 120, "hsl": 120, "iszero": [121, 123, 187, 209], "180": [122, 158, 168, 194, 257, 258], "120": [122, 124, 194, 258, 259], "conveni": [122, 186, 194], "special": [122, 194, 258], "makeltrb": [122, 194], "sort": [122, 189, 194, 198, 199, 210], "fleft": [122, 140, 189, 194], "fright": [122, 140, 158, 189, 194], "makes": [122, 194], "makewh": [122, 134, 194], "makexywh": [122, 194, 258], "dl": [122, 140], "dt": 122, "dr": 122, "db": 122, "narrow": [122, 187, 194], "widen": 122, "shrink": 122, "lengthen": 122, "containsnoemptycheck": 122, "span": [122, 187, 189, 194, 201], "sign": [122, 134, 175, 187], "height64": 122, "safer": 122, "overflow": [122, 140, 194, 245, 249], "calcul": [122, 133, 236], "int64_t": 122, "inset": [122, 133, 189, 194], "wider": [122, 194], "shorter": [122, 194], "taller": [122, 194], "isempty64": 122, "width64": 122, "expans": [122, 194], "makeinset": [122, 194], "symmetr": [122, 194], "makeoffset": [122, 189, 194], "upward": [122, 194], "downward": [122, 194], "makeoutset": [122, 194], "makesort": [122, 194], "delta": [122, 194], "offsetto": [122, 194], "newx": [122, 194], "newi": [122, 194], "setempti": [122, 123, 189, 194, 197, 209], "setltrb": [122, 194], "setwh": [122, 194], "setxywh": [122, 194], "topleft": 122, "iff": [123, 205, 209], "yuv_colorspac": 124, "heif": 124, "ico": 124, "jpeg": [124, 152], "wbmp": 124, "webp": 124, "resiz": [124, 215], "jpg": [124, 258], "import": [124, 255, 257, 258], "fromarrai": [124, 257], "frombyt": [124, 257], "makebackendtexturefromimag": 124, "singli": 124, "makefrombitmap": 124, "shareabl": 124, "makefromencod": [124, 258], "deferr": 124, "re": [124, 176], "makefrompictur": 124, "skpictur": [124, 133], "bitdepth": 124, "ku8": [124, 125], "makefromrast": 124, "makefromtextur": 124, "grrecordingcontext": [124, 220], "grsurfaceorigin": [124, 220], "makerastercopi": 124, "makerasterdata": 124, "aslegacybitmap": 124, "legacybitmapmod": 124, "kro_legacybitmapmod": [124, 128], "capabl": [124, 220], "receiv": [124, 133, 158, 182, 210, 255], "alphattyp": 124, "rais": [124, 182, 255], "encodetodata": 124, "qualiti": [124, 133, 152, 220], "sk_encode_jpeg": 124, "sk_encode_png": 124, "sk_encode_webp": 124, "sk_build_for_mac": 124, "sk_build_for_io": 124, "trade": [124, 152], "miss": 124, "arg1": [124, 176, 203], "promis": 124, "cull": [124, 182, 183], "getbackendtextur": [124, 220], "flushpendinggrcontextio": 124, "isalphaonli": 124, "islazygener": 124, "servic": 124, "demand": 124, "istextureback": 124, "lazi": 124, "makecolortypeandcolorspac": 124, "targetcolortyp": 124, "targetcolorspac": 124, "experiment": [124, 255], "makenontextureimag": 124, "makerasterimag": 124, "cachinghint": 124, "kallow_cachinghint": [124, 126], "retain": [124, 140, 152, 158, 220, 252], "kdisallow_cachinghint": [124, 126], "0x7fc5db55f5b0": 124, "taken": [124, 217], "maketextureimag": 124, "dstcolorspac": 124, "newli": [124, 150], "makewithfilt": 124, "skimagefilt": [124, 154], "clipbound": 124, "outsubset": 124, "process": [124, 133, 140, 152, 161, 182, 220], "reus": [124, 158, 233], "fp": [124, 140], "shortcut": 124, "hasattr": 124, "refencodeddata": 124, "reinterpretcolorspac": 124, "newcolorspac": 124, "0x7fc5d9a5f8f0": 124, "none_filterqu": [124, 186], "fastest": [124, 186], "klow_filterqu": [124, 186], "bilerp": [124, 186], "kmedium_filterqu": [124, 154, 186], "khigh_filterqu": [124, 186], "slowest": [124, 186], "bicub": [124, 186], "wb": 124, "f": [124, 140, 258], "scalepixel": [124, 186], "0x7fc5d9a650b0": 124, "uniqueid": [124, 182, 230, 238, 240], "withdefaultmipmap": 124, "attach": [124, 158, 255], "kbc1_rgb8_unorm": [124, 127], "kbc1_rgba8_unorm": [124, 127], "ketc2_rgb8_unorm": [124, 127], "kf16": [124, 125], "usual": [129, 181], "offscreen": [129, 257], "blur": [129, 133, 138, 154], "ax": [129, 133, 140, 158, 168, 192, 194, 197, 238], "achiev": 129, "unrot": 129, "easili": 129, "asacolorfilt": 129, "ascolorfilt": 129, "cancomputefastbound": [129, 154], "computefastbound": [129, 154], "countinput": 129, "filterbound": 129, "mapdirect": 129, "inputrect": 129, "forward": 129, "backward": 129, "dag": [129, 133], "kforward_mapdirect": [129, 131], "touch": [129, 158, 168], "kreverse_mapdirect": [129, 131], "temp": 129, "real": 129, "answer": [129, 134], "krevers": 129, "kforward": 129, "incorrect": [129, 134, 194], "getinput": 129, "iscolorfilternod": 129, "makewithlocalmatrix": [129, 205], "arithmet": [133, 257], "k1": 133, "k2": 133, "k3": 133, "k4": 133, "enforcepmcolor": 133, "foreground": 133, "croprect": 133, "third": [133, 158, 236, 259], "crop": [133, 182], "sigmax": 133, "sigmai": 133, "kdecal": [133, 235], "sigma": [133, 138], "kernel": 133, "gaussian": [133, 138], "todo": 133, "michaelludwig": 133, "kmirror": [133, 235], "cf": 133, "compos": [133, 259], "evalu": 133, "dilat": 133, "radiusx": 133, "radiusi": 133, "displacementmap": 133, "xchannelselector": 133, "colorchannel": 133, "ychannelselector": 133, "displac": [133, 258], "xchannel": 133, "ychannel": 133, "selector": [133, 158], "extract": [133, 154], "distantlitdiffus": 133, "point3": [133, 140], "lightcolor": 133, "surfacescal": 133, "kd": 133, "diffus": 133, "illumin": 133, "distant": 133, "light": [133, 258], "distantlitspecular": 133, "k": [133, 140, 158, 258], "shini": 133, "specular": 133, "expon": 133, "dropshadow": [133, 258], "drop": 133, "shadow": [133, 158], "dropshadowonli": 133, "exactli": [133, 158, 181, 194, 257], "manner": 133, "erod": 133, "srcrect": [133, 220], "dstrect": 133, "0x7fc5d9a97bb0": 133, "portion": [133, 140, 194], "0x7fc5db556870": 133, "magnifi": 133, "zoomamount": 133, "mimic": 133, "zoom": 133, "len": [133, 258], "matrixconvolut": 133, "kernels": 133, "gain": 133, "bia": 133, "kerneloffset": 133, "convolvealpha": 133, "nxm": 133, "sharpen": 133, "convolut": 133, "convolv": 133, "matrixtransform": 133, "come": 133, "merg": 133, "pic": 133, "targetrect": 133, "skirect": 133, "pointlitdiffus": 133, "pointlitspecular": 133, "spotlitdiffus": 133, "falloffexpon": 133, "cutoffangl": 133, "spot": 133, "toward": [133, 158], "falloff": 133, "spotlitspecular": 133, "bytesizeoverflow": 134, "bytes": 134, "computeminbytes": 134, "colorinfo": 134, "makea8": 134, "maken32": 134, "whichev": 134, "makes32": 134, "makeunknown": 134, "dimensionless": [134, 197], "computeoffset": 134, "makedimens": 134, "newsiz": 134, "newdimens": 134, "newwidth": 134, "newheight": 134, "minrowbytes64": 134, "unsign": [134, 186, 250], "validrowbyt": 134, "properli": 134, "luma": [136, 247], "luminancetoalpha": 136, "fecolormatrix": 136, "fold": 136, "despit": 136, "dot": [136, 187, 188], "lumin": [136, 246, 253], "agre": [136, 186, 220], "4x4": 137, "viewer": 137, "makeblur": [138, 154, 258], "blurstyl": 138, "respectctm": 138, "setident": [140, 192], "settransl": 140, "setscal": [140, 258], "setskew": 140, "setrot": 140, "set9": 140, "setal": 140, "classifi": 140, "gettyp": [140, 189], "j": [140, 248], "q": 140, "aj": 140, "cp": 140, "ak": 140, "bn": 140, "cq": 140, "al": 140, "bo": 140, "cr": 140, "dj": 140, "em": [140, 238], "dk": 140, "en": 140, "fq": 140, "eo": 140, "gj": 140, "hm": 140, "ip": 140, "gk": 140, "hn": 140, "iq": 140, "ho": 140, "ir": 140, "express": 140, "invalidmatrix": 140, "sk_scalarmax": [140, 158, 194], "makeal": 140, "transx": 140, "skewi": 140, "scalei": 140, "transi": 140, "pers0": 140, "pers1": 140, "pers2": 140, "makerecttorect": 140, "stf": 140, "scaletofit": 140, "aspect": [140, 258], "ratio": [140, 187], "rotatedeg": 140, "deg": 140, "pivot": 140, "rotaterad": 140, "rad": 140, "setaffineident": 140, "affin": 140, "matric": [140, 257], "xp": 140, "float32": 140, "asaffin": 140, "decomposescal": 140, "decompos": 140, "remaind": 140, "finit": [140, 158, 189, 194, 220], "nearli": [140, 158, 168, 187, 188], "dirtymatrixtypecach": 140, "modif": [140, 154, 181, 258], "reconstruct": [140, 158, 189, 194, 238], "kmscalex": 140, "kmskewx": 140, "kmtransx": 140, "kmskewi": 140, "kmscalei": 140, "kmtransi": 140, "kmpersp0": 140, "kmpersp1": 140, "kmpersp2": 140, "get9": 140, "nine": [140, 189], "ascend": 140, "getmaxscal": 140, "getminmaxscal": 140, "getminscal": 140, "getperspx": 140, "getperspi": 140, "With": [140, 158], "mappoint": 140, "getscalei": 140, "getskewi": 140, "gettranslatex": 140, "gettranslatei": 140, "typemask": 140, "kperspective_mask": [140, 142], "kidentity_mask": [140, 142], "ktranslate_mask": [140, 142], "kscale_mask": [140, 142], "kaffine_mask": [140, 142], "hasperspect": 140, "reciproc": 140, "isfinit": [140, 158, 187, 188, 194], "infin": [140, 187, 189, 194], "isident": 140, "isscaletransl": 140, "issimilar": 140, "tol": 140, "000244140625": 140, "uniform": 140, "collaps": 140, "alik": 140, "euclidean": [140, 187], "arm": 140, "istransl": 140, "maphomogeneouspoint": 140, "cz": 140, "ei": 140, "fz": [140, 188], "gx": 140, "hy": 140, "iz": 140, "homogen": 140, "mapradiu": 140, "ellips": [140, 158, 168], "minor": 140, "maprect": 140, "pc": [140, 158], "applyperspectiveclip": [140, 158], "maprectscaletransl": 140, "maprecttoquad": 140, "suspect": 140, "mapvector": 140, "dhy": 140, "mapxi": 140, "normalizeperspect": 140, "categor": 140, "behav": [140, 158, 210], "rest": 140, "postconcat": 140, "postrot": 140, "co": [140, 258], "sin": [140, 258], "cj": 140, "sm": 140, "ck": 140, "sn": 140, "sj": 140, "cn": 140, "sl": 140, "upright": [140, 158], "postscal": 140, "postskew": 140, "kx": 140, "ky": 140, "posttransl": 140, "preconcat": 140, "prerot": [140, 258], "ac": 140, "bc": 140, "ec": 140, "gc": 140, "hc": 140, "prescal": 140, "preskew": 140, "pretransl": 140, "preservesaxisalign": 140, "90": [140, 158, 168, 257], "mirror": [140, 235, 258], "rectstaysrect": [140, 192], "preservesrightangl": 140, "rc": 140, "fetch": 140, "anticip": 140, "recomput": 140, "setaffin": 140, "persp0": 140, "persp1": 140, "persp2": 140, "setconcat": 140, "setperspx": 140, "v": [140, 194, 245, 246, 248, 250, 253], "proport": [140, 187], "setperspi": 140, "setpolytopoli": 140, "setrsxform": 140, "skrsxform": 140, "fssin": [140, 192], "fsco": [140, 192], "ftx": [140, 192], "fty": [140, 192], "setrecttorect": 140, "setscaletransl": 140, "tx": [140, 192], "ty": [140, 192], "setscalei": 140, "setsinco": 140, "sinvalu": 140, "cosvalu": 140, "setskewi": 140, "settranslatex": 140, "settranslatei": 140, "kascalex": 140, "kascalei": 140, "kaskewx": 140, "kaskewi": 140, "katransx": 140, "katransi": 140, "kcenter_scaletofit": [140, 141], "kend_scaletofit": [140, 141], "kfill_scaletofit": [140, 141], "kstart_scaletofit": [140, 141], "maketransl": 143, "makecopi": [144, 240], "makedirect": 144, "copydata": 144, "asdata": 144, "getatpo": 144, "filestream": [144, 210, 211, 212, 213, 214], "setdata": 144, "setmemori": 144, "skiptoalign4": 144, "skpathop": 145, "attachto": 146, "countlevel": 146, "builder": [148, 168, 233], "emptypath": 148, "succeed": [148, 189], "makewithcolor": 149, "knumcolor": 149, "72": [150, 258], "inch": [150, 152], "127": 150, "mm": 150, "anytim": [150, 183, 258], "pdfmetadata": 150, "setnodeid": [150, 153], "nodeid": [150, 153], "node": [150, 153], "appear": [150, 238], "structureelementnod": 150, "structur": [150, 152, 153, 245, 251], "tree": [150, 152, 153], "appendfloat": 151, "appendfloatarrai": 151, "appendint": 151, "appendstr": 151, "appendstringarrai": 151, "factori": 152, "fauthor": 152, "person": 152, "fcreator": 152, "conform": 152, "fencodingqu": 152, "101": 152, "percent": 152, "lossless": 152, "fkeyword": 152, "keyword": [152, 154], "comma": 152, "delin": 152, "fpdfa": 152, "xmp": 152, "uuid": 152, "intent": 152, "reproduc": 152, "featur": [152, 227], "2b": 152, "fproduc": 152, "frasterdpi": 152, "dpi": 152, "fidel": 152, "onlin": 152, "printer": 152, "fstructureelementtreeroot": 152, "semant": [152, 153], "fsubject": 152, "subject": [152, 205], "ftitl": 152, "titl": 152, "fadditionalnodeid": 153, "falt": 153, "fattribut": 153, "flang": 153, "fnodeid": 153, "ftypestr": 153, "algorithm": [154, 181, 238], "alphaf": 154, "antialia": [154, 257, 258, 259], "colorblu": [154, 257, 258, 259], "strokewidth": [154, 217, 257, 258, 259], "kstroke_styl": [154, 157, 158, 217, 219, 257, 258, 259], "0xff0000ff": [154, 258], "shallow": 154, "setxxx": 154, "0xff00ff00": 154, "lumacolorfilt": 154, "dashpatheffect": [154, 258], "strokecap": [154, 259], "kbutt_cap": [154, 155], "strokejoin": 154, "kmiter_join": [154, 156], "strokemit": 154, "extens": [154, 155], "orig": 154, "stylist": [154, 257, 258], "computefaststrokebound": 154, "docomputefastbound": 154, "overrid": [154, 205, 258], "getalpha": 154, "getcolor4f": 154, "getcolorfilt": 154, "skcolorfilt": 154, "getfillpath": 154, "skpath": [154, 158, 161, 165, 167, 171, 197, 217], "resscal": [154, 176, 217], "favor": 154, "speed": [154, 158], "hairlin": [154, 217], "getimagefilt": 154, "getmaskfilt": 154, "skmaskfilt": 154, "getpatheffect": 154, "skpatheffect": 154, "getshad": 154, "getstrokecap": 154, "getstrokejoin": 154, "getstrokemit": 154, "bevel": 154, "miter": [154, 156, 216], "getstrokewidth": 154, "pen": [154, 257], "isantialia": 154, "antialias": 154, "isdith": 154, "smooth": 154, "issrcov": 154, "nothingtodraw": 154, "refcolorfilt": 154, "refimagefilt": 154, "refmaskfilt": 154, "refpatheffect": 154, "refshad": 154, "setargb": 154, "setalpha": 154, "setalphaf": 154, "setantialia": 154, "aa": 154, "setblendmod": [154, 257, 258], "setcolor": [154, 257, 258, 259], "setcolor4f": 154, "setcolorfilt": 154, "setdith": 154, "diter": 154, "setimagefilt": 154, "setmaskfilt": 154, "unalt": [154, 158, 159, 162], "setpatheffect": 154, "setshad": 154, "setstrokecap": [154, 259], "setstrokejoin": 154, "setstrokemit": 154, "setstrokewidth": [154, 258, 259], "setstyl": [154, 259], "kbevel_join": [154, 156], "kcapcount": 154, "kdefault_cap": [154, 155], "kdefault_join": [154, 156], "kfill_styl": [154, 157, 158, 217, 219, 257, 258], "kjoincount": 154, "klast_cap": [154, 155], "ksquare_cap": [154, 155, 259], "klast_join": [154, 156], "kround_cap": [154, 155, 259], "kround_join": [154, 156], "kstrokeandfill_styl": [154, 157, 217, 219, 259], "kstylecount": [154, 217], "verb": [158, 161, 162, 259], "figur": 158, "cartesian": 158, "bezier": 158, "lazili": 158, "convex": 158, "updateboundscach": 158, "addcircl": [158, 168, 259], "addrect": [158, 168], "60": [158, 257, 258], "70": [158, 259], "center_x": [158, 168], "center_i": [158, 168], "pathdirect": [158, 168], "kcw": [158, 168, 170], "convertconictoquad": 158, "p2": [158, 168], "pow2": 158, "quad": [158, 194, 259], "influenc": 158, "ellipt": 158, "section": 158, "hyperbol": 158, "parabol": 158, "power": 158, "iscubicdegener": 158, "p3": 158, "p4": 158, "short": [158, 238], "islinedegener": 158, "isquaddegener": 158, "conicweight": [158, 161, 162, 180], "illeg": 158, "encount": 158, "startindex": [158, 168], "isclos": [158, 168, 176], "kwind": [158, 175], "expos": [158, 197], "addarc": [158, 168], "modulo": [158, 168, 210], "dir": 158, "pathverb": [158, 259], "kmove": [158, 180, 259], "kconic": [158, 180], "kclose": [158, 180, 259], "kccw": [158, 170], "addov": [158, 168, 258], "kmove_verb": [158, 161, 164], "kconic_verb": [158, 161, 162, 164], "kclose_verb": [158, 161, 164], "centeri": [158, 194], "kcw_direct": [158, 168], "addpath": 158, "addpathmod": 158, "kappend_addpathmod": [158, 159], "kextend_addpathmod": [158, 159], "refe": 158, "renc": 158, "addpoli": 158, "addrrect": [158, 168], "attr": [158, 161], "kline_verb": [158, 161, 164], "addroundrect": 158, "approximatebytesus": [158, 182], "arcto": [158, 168], "forcemoveto": [158, 168], "x2": [158, 168], "y2": [158, 168], "tangent": [158, 165, 168, 176, 177], "parallel": [158, 168, 220, 230], "postscript": [158, 168, 238, 257], "arct": [158, 168], "xaxisrot": [158, 168], "largearc": [158, 168], "arcsiz": [158, 168], "rout": [158, 168], "opposit": [158, 168], "xy": [158, 168, 205], "computetightbound": 158, "conicto": [158, 168, 259], "kquad_verb": [158, 164], "conservativelycontainsrect": 158, "countpoint": 158, "countverb": 158, "kcubic_verb": [158, 164], "cubicto": [158, 168, 257], "x3": [158, 168], "y3": [158, 168], "dumpashex": 158, "forceclos": [158, 161, 176], "hexadecim": [158, 189, 194], "dumphex": [158, 189, 194], "getfilltyp": 158, "bug": 158, "1762": 158, "getlastpt": 158, "lastpt": 158, "getpoint": 158, "excess": 158, "getsegmentmask": 158, "segmentmask": 158, "getverb": 158, "increserv": [158, 168], "extraptcount": [158, 168], "grow": 158, "formula": 158, "point_arrai": 158, "isinterpolat": 158, "isconvex": 158, "sk_scalarinfin": [158, 187], "sk_scalarnegativeinfin": 158, "sk_scalarnan": 158, "trivial": 158, "isinversefilltyp": 158, "indefinit": 158, "kinversewind": [158, 175], "kinverseevenodd": [158, 175], "islastcontourclos": 158, "islin": 158, "isov": [158, 189], "isrrect": 158, "isrect": [158, 189, 197], "corrupt": [158, 189], "lineto": [158, 168, 258, 259], "moveto": [158, 168, 176, 180, 258, 259], "quadto": [158, 168, 259], "rarcto": 158, "rconicto": [158, 168], "dx1": 158, "dy1": 158, "dx2": 158, "dy2": 158, "stand": 158, "rcubicto": [158, 168], "dx3": 158, "dy3": 158, "rlineto": [158, 168], "rmoveto": 158, "rquadto": [158, 168], "readfrommemori": [158, 189, 197], "inconsist": 158, "concert": 158, "reverseaddpath": 158, "front": 158, "critic": 158, "setfilltyp": [158, 168], "setisvolatil": [158, 168], "temporari": 158, "setlastpt": 158, "lightweight": [158, 197], "toggleinversefilltyp": [158, 168], "instantan": 158, "avoid": [158, 187, 194], "race": 158, "condit": 158, "kconic_segmentmask": [158, 163], "kcubic_segmentmask": [158, 163], "kdone_verb": [158, 161, 162, 164], "klarge_arcs": [158, 160, 168, 169], "kline_segmentmask": [158, 163], "kquad_segmentmask": [158, 163], "ksmall_arcs": [158, 160, 168, 169], "setpath": [161, 162, 176, 197], "iscloselin": 161, "isclosedcontour": 161, "exhaust": [161, 162], "klastenum_styl": [165, 166], "kmorph_styl": [165, 166], "krotate_styl": [165, 166, 258], "ktranslate_styl": [165, 166], "stamp": [167, 258], "latic": [167, 258], "startangledeg": 168, "sweepangledeg": 168, "addpolygon": 168, "skpoint": [168, 187], "computebound": 168, "pt1": 168, "pt2": 168, "pt3": 168, "detach": 168, "extraverbcount": 168, "extra": 168, "polylineto": 168, "counter": 170, "primit": [171, 220, 257], "makesum": [171, 258], "appl": 171, "asadash": [171, 173], "dashinfo": [171, 173], "dashtyp": 171, "filterpath": 171, "stroke_rec": 171, "strokerec": 171, "cullr": 171, "rec": [171, 217], "kdash_dashtyp": [171, 173], "knone_dashtyp": [171, 173], "fcount": [172, 173], "finterv": 172, "fphase": 172, "memcpi": 173, "kevenodd": 175, "evenodd": 175, "slow": 176, "getmatrix": 176, "getposandtan": 176, "kgetposandtan_matrixflag": [176, 177], "getpostan": 176, "getseg": 176, "startd": 176, "stopd": 176, "startwithmoveto": 176, "untouch": 176, "nextcontour": 176, "kgetposition_matrixflag": [176, 177], "kgettangent_matrixflag": [176, 177], "kdifference_pathop": 178, "kintersect_pathop": 178, "kunion_pathop": 178, "inclus": [178, 236], "kxor_pathop": 178, "exclus": 178, "kreversedifference_pathop": 178, "kline_pathsegmentmask": 179, "kquad_pathsegmentmask": 179, "kconic_pathsegmentmask": 179, "kcubic_pathsegmentmask": 179, "kquad": 180, "kcubic": 180, "perlin": 181, "turbul": 181, "tileabl": 181, "nois": 181, "stitch": 181, "stitchtil": 181, "seam": [181, 235], "tr": 181, "feturbulenceel": 181, "makefractalnois": [181, 258], "basefrequencyx": 181, "basefrequencyi": 181, "numoctav": 181, "tiles": 181, "fractal": 181, "frequenc": 181, "octav": 181, "fairli": 181, "doubl": 181, "basefrequ": 181, "yield": [181, 255], "insignificantli": 181, "period": 181, "resembl": 181, "regular": 181, "unstructur": 181, "isn": [181, 252], "maketurbul": [181, 258], "whole": 182, "finishrecordingaspictur": [182, 183, 255], "recreat": [182, 230], "valueerror": 182, "makefromstream": [182, 203], "makeplacehold": 182, "placehold": 182, "intercept": [182, 230], "approximateopcount": 182, "nest": [182, 183], "fall": [182, 183], "filtermod": 182, "superset": 182, "replai": 182, "interrupt": 182, "among": [182, 230, 246], "bbh": 183, "bboxhierarchi": 183, "finishrecordingasdraw": 183, "getrecordingcanva": 183, "live": 183, "finishrecordingaspicturewithcul": 183, "overal": 183, "meant": 184, "portabl": 184, "kunknown_pixelgeometri": 184, "krgb_h_pixelgeometri": 184, "kbgr_h_pixelgeometri": 184, "krgb_v_pixelgeometri": 184, "kbgr_v_pixelgeometri": 184, "nor": 186, "creator": 186, "addr16": 186, "addr32": 186, "addr64": 186, "addr8": 186, "warn": [186, 194], "0x7fc5d9ab74b0": 186, "setcolorspac": 186, "writable_addr": 186, "crossproduct": [187, 188], "straight": [187, 258], "dotproduct": [187, 188], "magnitud": 187, "cosin": 187, "sqrt": 187, "skscalar": 187, "distancetoorigin": 187, "iset": 187, "promot": [187, 194], "negat": 187, "former": 187, "setab": 187, "setlength": 187, "setnorm": 187, "euclidian": 188, "makescal": [188, 258], "css": 189, "properti": [189, 220, 227], "kempty_typ": [189, 191], "makeov": [189, 257], "koval_typ": [189, 191], "makerect": 189, "makerectxi": 189, "xrad": 189, "yrad": 189, "krect_typ": [189, 191], "ksimple_typ": [189, 191], "ashex": [189, 194], "dumptostr": 189, "skstring": 189, "getsimpleradii": 189, "kninepatch_typ": [189, 191], "kcomplex_typ": [189, 191], "simpl": [189, 258], "curvatur": 189, "iscomplex": [189, 197], "isninepatch": 189, "issimpl": 189, "parma": 189, "ksizeinmemori": 189, "setninepatch": 189, "leftrad": 189, "toprad": 189, "rightrad": 189, "bottomrad": 189, "setov": 189, "setrect": [189, 197], "setrectradii": 189, "setrectxi": 189, "klasttyp": [189, 191], "klowerleft_corn": [189, 190], "klowerright_corn": [189, 190], "48": [189, 259], "kupperleft_corn": [189, 190], "kupperright_corn": [189, 190], "arbitrari": 191, "sco": 192, "ssin": 192, "makefromradian": 192, "radian": 192, "ai": 192, "toquad": [192, 194], "quqd": 192, "totristrip": 192, "unsort": 194, "makeiwh": 194, "lose": [194, 259], "asscalar": 194, "centerx": 194, "midpoint": 194, "sk_scalarmin": 194, "issort": 194, "joinnonemptyarg": 194, "joinpossiblyemptyrect": 194, "skscalarroundtoint": 194, "roundin": 194, "skscalarceiltoint": 194, "skscalarfloortoint": 194, "roundout": 194, "smallest": 194, "setbound": 194, "setboundscheck": 194, "setboundsnocheck": 194, "setiwh": 194, "virtual": 196, "getrefcnt": 196, "compact": 197, "scan": [197, 201], "regiona": 197, "regionb": 197, "inequ": 197, "xor": 197, "cliper": 197, "computeregioncomplex": 197, "getboundarypath": 197, "quickcontain": 197, "rgn": [197, 199], "setregion": 197, "spaner": 197, "ivector": 197, "kdifference_op": [197, 200], "kintersect_op": [197, 200], "klastop": [197, 200], "kreplace_op": [197, 200], "kopcnt": 197, "kreversedifference_op": [197, 200], "kunion_op": [197, 200], "kxor_op": [197, 200], "predict": [198, 199], "sure": 202, "del": [202, 255], "viewport": 202, "viewbox": 202, "kconverttexttopaths_flag": 202, "knoprettyxml_flag": 202, "containers": 203, "rendernod": 203, "setcontainers": 203, "easi": 205, "isaimag": 205, "makewithcolorfilt": 205, "invok": 205, "blender": 208, "skblender": 208, "toceil": 209, "tofloor": 209, "toround": 209, "classic": 210, "async": 210, "fewer": 210, "eof": 210, "hit": 210, "hope": 210, "appendhex": 215, "appends32": 215, "appends64": 215, "appendscalar": 215, "appendu32": 215, "appendu64": 215, "appendunichar": 215, "c_str": 215, "substr": 215, "subchar": 215, "endswith": 215, "suffixstr": 215, "suffixchar": 215, "findlastof": 215, "inserthex": 215, "inserts32": 215, "inserts64": 215, "insertscalar": 215, "insertu32": 215, "insertu64": 215, "insertunichar": 215, "prependhex": 215, "prepends32": 215, "prepends64": 215, "prependscalar": 215, "prependunichar": 215, "startswith": 215, "prefixstr": 215, "prefixchar": 215, "getinflationradiu": 217, "miterlimit": 217, "initstyl": 217, "applytopaint": 217, "applytopath": 217, "getcap": 217, "inflat": 217, "getjoin": 217, "getmit": 217, "getresscal": 217, "hasequaleffect": 217, "skstrokerec": 217, "isfillstyl": 217, "ishairlinestyl": 217, "needtoappli": 217, "setfillstyl": 217, "sethairlinestyl": 217, "setresscal": 217, "setstrokeparam": 217, "setstrokestyl": 217, "strokeandfil": 217, "kfill_initstyl": [217, 218], "khairline_initstyl": [217, 218], "khairline_styl": [217, 219], "grrendertarget": 220, "care": 220, "getcanva": 220, "makeimagesnapshot": [220, 255, 257], "makefrombackendrendertarget": [220, 255], "backendrendertarget": 220, "releaseproc": 220, "sk_support_gpu": 220, "makefrombackendtextur": 220, "texturereleaseproc": 220, "scene": 220, "makenul": 220, "makerast": 220, "chosen": 220, "makerastern32premul": 220, "kpremul": 220, "makerendertarget": [220, 255], "samplecount": 220, "surfaceorigin": 220, "shouldcreatewithmip": 220, "kbottomleft": 220, "host": [220, 238, 257], "character": 220, "asyncrescaleandreadpixel": [220, 221, 225], "rescalegamma": 220, "rescal": [220, 225, 229], "asyncreadresult": 220, "subrectangl": 220, "rescalequ": 220, "cost": 220, "deferreddisplaylistrecord": 220, "backendsurfaceaccess": 220, "knoaccess": [220, 223], "kpresent": [220, 223], "grvkimageinfo": 220, "foreign": 220, "vk_image_layout_present_src_khr": 220, "newstat": 220, "ctualli": 220, "grbackendsurfac": 220, "prep": 220, "correct": [220, 255], "window": [220, 256], "generationid": 220, "notifycontentwillchang": 220, "getbackendrendertarget": 220, "backendhandleaccess": 220, "iscompat": 220, "viabl": 220, "deferreddisplaylist": 220, "captur": 220, "interest": 220, "sanit": 220, "contentchangemod": 220, "kn32": 220, "recordingcontext": 220, "replacebackendtextur": 220, "kretain_contentchangemod": [220, 224], "substitut": 220, "kdiscardwrite_backendhandleaccess": [220, 222], "kdiscard_contentchangemod": [220, 224], "kflushread_backendhandleaccess": [220, 222], "kflushwrite_backendhandleaccess": [220, 222], "asyncrescaleandreadpixelsyuv420": [221, 225], "cachemaxresourcebyt": 226, "createbackendformat": 226, "createcolorspac": 226, "createfbo0": 226, "usesglfbo0": 226, "createres": 226, "ismipmap": 226, "istextur": 226, "vulkansecondarycbcompat": 226, "expens": 227, "pixelgeometri": 227, "isusedeviceindependentfont": 227, "kusedeviceindependentfonts_flag": [227, 228], "kusedistancefieldfonts_flag": 227, "tabl": [229, 238], "createclip": 229, "creategamma": 229, "makeclipt": 229, "makegammat": 229, "fglyphindic": [230, 232], "ftypefaceproc": 230, "ftypefacectx": 230, "makefrompostext": 230, "po": [230, 233], "textblobbuild": [230, 257], "allocrunposh": [230, 233], "makefrompostexth": 230, "xpo": [230, 233], "consti": 230, "makefromrsxform": 230, "makefromstr": 230, "attribut": [230, 257, 258], "makefromtext": 230, "getintercept": 230, "fglyphcount": 232, "ftypefac": 232, "allocrun": 233, "placement": 233, "suppress": 233, "runbuff": 233, "allocrunpo": 233, "allocrunrsxform": 233, "krepeat": [235, 258], "domain": 235, "everywher": 235, "klasttilemod": 235, "startt": 236, "stopt": 236, "2nd": [236, 259], "33333": 236, "66667": 236, "entir": [236, 257], "spread": 236, "kinvert": [236, 237], "intrins": 238, "textskewx": 238, "textscalex": 238, "kfakeboldtext_mask": 238, "arial": 238, "makedefault": 238, "makedeseri": 238, "dat": 238, "makefromnam": 238, "face": 238, "copytabledata": 238, "gettabledata": 238, "countglyph": 238, "counttabl": 238, "utf8": 238, "languag": 238, "getkerningpairadjust": 238, "getunitsperem": 238, "getpostscriptnam": 238, "truetyp": 238, "big": 238, "gettables": 238, "gettabletag": 238, "getvariationdesignparamet": 238, "fontparamet": 238, "fontargu": 238, "isbold": 238, "kbold": 238, "isfixedpitch": 238, "claim": 238, "pitch": 238, "isital": 238, "kital": 238, "makeclon": 238, "parameter": 238, "exaclti": 238, "serializebehavior": 238, "kincludedataifloc": [238, 239], "unichar": 238, "utf32": 238, "cut": 238, "32bit": 238, "kdoincludedata": [238, 239], "kdontincludedata": [238, 239], "descriptor": 239, "vertex": 240, "vertexmod": 240, "approximates": 240, "klast_vertexmod": [240, 241], "ktrianglefan_vertexmod": [240, 241], "ktrianglestrip_vertexmod": [240, 241], "ktriangles_vertexmod": [240, 241], "hasalpha": 245, "planeconfig": [245, 248, 251], "numchannelsinplan": 245, "ith": [245, 249, 252], "numplan": [245, 249, 252], "planedimens": 245, "imagedimens": 245, "displai": [245, 255], "yuvcolorspac": [245, 249], "sittingx": 245, "kcenter": [245, 247], "sittingi": 245, "resolut": [245, 248], "computetotalbyt": [245, 249, 252], "returnplanes": [245, 249], "planes": [245, 249], "forigin": 245, "ret": 245, "sitingx": 245, "sitingi": 245, "k410": [245, 248], "k411": [245, 248], "k420": [245, 248], "k422": [245, 248], "k440": [245, 248], "k444": [245, 248], "kmaxplan": [245, 249], "kuyv": [245, 246], "kuyva": [245, 246], "kyuv": [245, 246], "kyuva": [245, 246], "ky_uv": [245, 246], "ky_uv_a": [245, 246], "ky_u_v": [245, 246], "ky_u_v_a": [245, 246], "ky_vu": [245, 246], "ky_vu_a": [245, 246], "ky_v_u": [245, 246], "ky_v_u_a": [245, 246], "underscor": 246, "yuva": [246, 249], "grai": 246, "rg": 246, "uv": [246, 248], "vu": 246, "uyv": 246, "uyva": 246, "notat": 248, "yuvainfo": [249, 251, 252], "defaultcolortypefordatatyp": 249, "datatyp": [249, 251], "numchannel": [249, 251], "kunknown_skcolortyp": 249, "numchannelsanddatatyp": 249, "aren": 249, "bpp": 249, "planess": 249, "initpixmapsfromsinglealloc": 249, "issupport": 249, "planeinfo": 249, "kfloat16": [249, 250], "kunorm10_unorm2": [249, 250], "kunorm16": [249, 250], "kunorm8": [249, 250], "unorm": 250, "planarconfig": 251, "enabledatatyp": 251, "yuvapixmapinfo": 252, "fromdata": 252, "fromexternalmemori": 252, "fromexternalpixmap": 252, "fixeds": 252, "kjpeg_yuvcolorspac": 253, "krec601_yuvcolorspac": 253, "sdtv": 253, "krec709_yuvcolorspac": 253, "hdtv": 253, "kbt2020_yuvcolorspac": 253, "uhdtv": 253, "kidentity_yuvcolorspac": 253, "klastenum_yuvcolorspac": 253, "graphit": 254, "acceler": 255, "40": [255, 257, 259], "colorgreen": [255, 257], "matplotlib": 255, "pyplot": 255, "plt": 255, "imshow": 255, "contextlib": 255, "contextmanag": 255, "glfw_context": 255, "init": 255, "runtimeerror": 255, "window_hint": 255, "stencil_bit": 255, "create_window": 255, "make_context_curr": 255, "shown": 255, "glfw_window": 255, "skia_surfac": 255, "fb_width": 255, "fb_height": 255, "get_framebuffer_s": 255, "backend_render_target": 255, "gl_rgba8": 255, "glclear": 255, "gl_color_buffer_bit": 255, "swap_buff": 255, "get_kei": 255, "key_escap": 255, "press": 255, "window_should_clos": 255, "wait_ev": 255, "demonstr": [255, 257, 258], "svgcanva": 255, "interoper": 256, "glanc": 256, "showcas": 256, "organ": 257, "96": [257, 258], "much": [257, 258], "maintain": [257, 258], "cairo": 257, "awt": 257, "45": 257, "enorm": 257, "easier": 257, "colorwhit": [257, 258], "cours": 257, "yourself": 257, "110": [257, 259], "colorcyan": [257, 258], "80": [257, 258], "coloryellow": [257, 258], "768": 257, "color_wheel": [257, 258], "rect2": 257, "paint2": [257, 258], "hello": 257, "320": 257, "240": 257, "pil": 257, "skia_imag": 257, "pil_imag": 257, "autocanvasrestor": [257, 258], "paint1": 258, "136": [258, 259], "paint3": 258, "blob1": 258, "blob2": 258, "144": 258, "224": 258, "intermix": 258, "freeli": 258, "proce": 258, "fillpaint": 258, "strokepaint": 258, "150": [258, 259], "0xff": 258, "0x00": 258, "220": 258, "gradientshad": 258, "0xffffff00": 258, "transfermod": 258, "speak": 258, "gettextbound": 258, "getfontmetr": 258, "magenta": 258, "cyan": 258, "draw_utf8_str": 258, "colormagenta": 258, "0x00ffffff": 258, "tall": 258, "192": 258, "desc": 258, "68": 258, "colorltgrai": 258, "colortranspar": 258, "mention": 258, "perlinnoiseshad": 258, "05": 258, "025": 258, "colorblack": 258, "160": [258, 259], "mandrill_512_q075": 258, "07": 258, "tablecolorfilt": 258, "makeargb": 258, "path2dpatheffect": 258, "lattic": 258, "line2dpatheffect": 258, "path1dpatheffect": 258, "122": 258, "star": 258, "math": 258, "115": 258, "6927937": 258, "cornerpatheffect": 258, "chop": 258, "discretepatheffect": 258, "path_effect": 258, "1245": 258, "path_conic_weight": 259, "path_verb": 259, "round_rect": 259, "inspect": 259, "124": 259, "108": 259, "172": 259, "36": 259, "148": 259, "66": 259, "188": 259, "path_fill_typ": 259, "hole": 259, "88": 259, "satisfi": 259, "path_verb_arrai": 259, "1st": 259, "130": 259, "3rd": 259, "preced": 259, "path_last_point": 259, "paint_stroke_join": 259, "paint_stroke_cap": 259, "travel": 259, "56": 259}, "objects": {"": [[4, 0, 0, "-", "skia"]], "skia": [[5, 1, 1, "", "AlphaType"], [4, 4, 1, "", "AlphaTypeIsOpaque"], [6, 1, 1, "", "ApplyPerspectiveClip"], [4, 4, 1, "", "AsWinding"], [7, 1, 1, "", "AutoCanvasRestore"], [8, 1, 1, "", "BBHFactory"], [9, 1, 1, "", "BBoxHierarchy"], [11, 1, 1, "", "Bitmap"], [13, 1, 1, "", "BlendMode"], [14, 1, 1, "", "BlendModeCoeff"], [4, 4, 1, "", "BlendMode_AsCoeff"], [4, 4, 1, "", "BlendMode_Name"], [15, 1, 1, "", "BlurMaskFilter"], [16, 1, 1, "", "BlurStyle"], [17, 1, 1, "", "Budgeted"], [18, 1, 1, "", "Canvas"], [26, 1, 1, "", "ClipOp"], [27, 1, 1, "", "Codec"], [4, 4, 1, "", "Color"], [35, 1, 1, "", "Color4f"], [36, 1, 1, "", "ColorChannel"], [37, 1, 1, "", "ColorChannelFlag"], [38, 1, 1, "", "ColorFilter"], [40, 1, 1, "", "ColorFilters"], [4, 4, 1, "", "ColorGetA"], [4, 4, 1, "", "ColorGetB"], [4, 4, 1, "", "ColorGetG"], [4, 4, 1, "", "ColorGetR"], [41, 1, 1, "", "ColorInfo"], [42, 1, 1, "", "ColorMatrix"], [43, 1, 1, "", "ColorMatrixFilter"], [4, 4, 1, "", "ColorSetA"], [4, 4, 1, "", "ColorSetARGB"], [4, 4, 1, "", "ColorSetRGB"], [45, 1, 1, "", "ColorSpace"], [4, 4, 1, "", "ColorToHSV"], [46, 1, 1, "", "ColorType"], [4, 4, 1, "", "ColorTypeBytesPerPixel"], [4, 4, 1, "", "ColorTypeIsAlwaysOpaque"], [4, 4, 1, "", "ColorTypeValidateAlphaType"], [4, 4, 1, "", "ComputeIsOpaque"], [47, 1, 1, "", "ConvergeMode"], [48, 1, 1, "", "CornerPathEffect"], [49, 1, 1, "", "DashPathEffect"], [50, 1, 1, "", "Data"], [51, 1, 1, "", "DiscretePathEffect"], [52, 1, 1, "", "Document"], [53, 1, 1, "", "Drawable"], [55, 1, 1, "", "DynamicMemoryWStream"], [56, 1, 1, "", "EncodedImageFormat"], [57, 1, 1, "", "EncodedOrigin"], [4, 4, 1, "", "EncodedOriginToMatrix"], [58, 1, 1, "", "FILEStream"], [59, 1, 1, "", "FILEWStream"], [60, 1, 1, "", "FilterMode"], [61, 1, 1, "", "Flattanable"], [63, 1, 1, "", "Font"], [65, 1, 1, "", "FontArguments"], [69, 1, 1, "", "FontHinting"], [70, 1, 1, "", "FontMetrics"], [72, 1, 1, "", "FontMgr"], [73, 1, 1, "", "FontParameters"], [76, 1, 1, "", "FontStyle"], [80, 1, 1, "", "FontStyleSet"], [81, 1, 1, "", "GrBackendApi"], [82, 1, 1, "", "GrBackendFormat"], [83, 1, 1, "", "GrBackendRenderTarget"], [84, 1, 1, "", "GrBackendSemaphore"], [85, 1, 1, "", "GrBackendSurfaceMutableState"], [86, 1, 1, "", "GrBackendTexture"], [87, 1, 1, "", "GrColorType"], [88, 3, 1, "", "GrContext"], [89, 1, 1, "", "GrContextOptions"], [90, 1, 1, "", "GrContext_Base"], [91, 1, 1, "", "GrDirectContext"], [92, 1, 1, "", "GrFlushInfo"], [93, 1, 1, "", "GrGLBackendState"], [94, 1, 1, "", "GrGLFormat"], [95, 1, 1, "", "GrGLFramebufferInfo"], [96, 1, 1, "", "GrGLInterface"], [97, 1, 1, "", "GrGLTextureInfo"], [98, 1, 1, "", "GrImageContext"], [99, 1, 1, "", "GrMipmapped"], [100, 1, 1, "", "GrMockOptions"], [101, 1, 1, "", "GrMockRenderTargetInfo"], [102, 1, 1, "", "GrMockTextureInfo"], [103, 1, 1, "", "GrProtected"], [104, 1, 1, "", "GrRecordingContext"], [105, 1, 1, "", "GrRenderable"], [106, 1, 1, "", "GrSemaphoresSubmitted"], [107, 1, 1, "", "GrSurfaceOrigin"], [108, 1, 1, "", "GrTextureType"], [109, 1, 1, "", "GrVkAlloc"], [110, 1, 1, "", "GrVkBackendContext"], [111, 1, 1, "", "GrVkDrawableInfo"], [112, 1, 1, "", "GrVkExtensionFlags"], [113, 1, 1, "", "GrVkFeatureFlags"], [114, 1, 1, "", "GrVkImageInfo"], [115, 1, 1, "", "GrVkYcbcrConversionInfo"], [116, 1, 1, "", "GradientShader"], [4, 4, 1, "", "HSVToColor"], [118, 1, 1, "", "HighContrastConfig"], [120, 1, 1, "", "HighContrastFilter"], [121, 1, 1, "", "IPoint"], [122, 1, 1, "", "IRect"], [123, 1, 1, "", "ISize"], [124, 1, 1, "", "Image"], [129, 1, 1, "", "ImageFilter"], [133, 1, 1, "", "ImageFilters"], [134, 1, 1, "", "ImageInfo"], [135, 1, 1, "", "Line2DPathEffect"], [136, 1, 1, "", "LumaColorFilter"], [137, 1, 1, "", "M44"], [4, 4, 1, "", "MakeNullCanvas"], [138, 1, 1, "", "MaskFilter"], [140, 1, 1, "", "Matrix"], [143, 1, 1, "", "MatrixPathEffect"], [144, 1, 1, "", "MemoryStream"], [145, 1, 1, "", "MergePathEffect"], [146, 1, 1, "", "MipmapBuilder"], [147, 1, 1, "", "NullWStream"], [4, 4, 1, "", "Op"], [148, 1, 1, "", "OpBuilder"], [149, 1, 1, "", "OverdrawColorFilter"], [150, 1, 1, "", "PDF"], [154, 1, 1, "", "Paint"], [158, 1, 1, "", "Path"], [165, 1, 1, "", "Path1DPathEffect"], [167, 1, 1, "", "Path2DPathEffect"], [168, 1, 1, "", "PathBuilder"], [170, 1, 1, "", "PathDirection"], [171, 1, 1, "", "PathEffect"], [175, 1, 1, "", "PathFillType"], [4, 4, 1, "", "PathFillType_ConvertToNonInverse"], [4, 4, 1, "", "PathFillType_IsEvenOdd"], [4, 4, 1, "", "PathFillType_IsInverse"], [176, 1, 1, "", "PathMeasure"], [178, 1, 1, "", "PathOp"], [179, 1, 1, "", "PathSegmentMask"], [180, 1, 1, "", "PathVerb"], [181, 1, 1, "", "PerlinNoiseShader"], [182, 1, 1, "", "Picture"], [183, 1, 1, "", "PictureRecorder"], [184, 1, 1, "", "PixelGeometry"], [185, 1, 1, "", "PixelRef"], [186, 1, 1, "", "Pixmap"], [187, 1, 1, "", "Point"], [188, 1, 1, "", "Point3"], [4, 4, 1, "", "PreMultiplyARGB"], [4, 4, 1, "", "PreMultiplyColor"], [4, 4, 1, "", "RGBToHSV"], [189, 1, 1, "", "RRect"], [192, 1, 1, "", "RSXform"], [193, 1, 1, "", "RTreeFactory"], [194, 1, 1, "", "Rect"], [195, 1, 1, "", "RefCnt"], [196, 1, 1, "", "RefCntBase"], [197, 1, 1, "", "Region"], [202, 1, 1, "", "SVGCanvas"], [203, 1, 1, "", "SVGDOM"], [204, 1, 1, "", "SamplingOptions"], [205, 1, 1, "", "Shader"], [207, 1, 1, "", "ShaderMaskFilter"], [208, 1, 1, "", "Shaders"], [4, 4, 1, "", "Simplify"], [209, 1, 1, "", "Size"], [210, 1, 1, "", "Stream"], [211, 1, 1, "", "StreamAsset"], [212, 1, 1, "", "StreamMemory"], [213, 1, 1, "", "StreamRewindable"], [214, 1, 1, "", "StreamSeekable"], [215, 1, 1, "", "String"], [216, 1, 1, "", "StrokePathEffect"], [217, 1, 1, "", "StrokeRec"], [220, 1, 1, "", "Surface"], [226, 1, 1, "", "SurfaceCharacterization"], [227, 1, 1, "", "SurfaceProps"], [229, 1, 1, "", "TableMaskFilter"], [230, 1, 1, "", "TextBlob"], [233, 1, 1, "", "TextBlobBuilder"], [234, 1, 1, "", "TextEncoding"], [4, 4, 1, "", "TightBounds"], [235, 1, 1, "", "TileMode"], [236, 1, 1, "", "TrimPathEffect"], [238, 1, 1, "", "Typeface"], [240, 1, 1, "", "Vertices"], [242, 1, 1, "", "VkFormat"], [243, 1, 1, "", "VkImageLayout"], [244, 1, 1, "", "WStream"], [245, 1, 1, "", "YUVAInfo"], [249, 1, 1, "", "YUVAPixmapInfo"], [252, 1, 1, "", "YUVAPixmaps"], [253, 1, 1, "", "YUVColorSpace"], [254, 1, 1, "", "gpuBackendApi"]], "skia.AlphaType": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "kLastEnum_AlphaType"], [5, 3, 1, "", "kOpaque_AlphaType"], [5, 3, 1, "", "kPremul_AlphaType"], [5, 3, 1, "", "kUnknown_AlphaType"], [5, 3, 1, "", "kUnpremul_AlphaType"], [5, 3, 1, "", "name"], [5, 3, 1, "", "value"]], "skia.ApplyPerspectiveClip": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "kNo"], [6, 3, 1, "", "kYes"], [6, 3, 1, "", "name"], [6, 3, 1, "", "value"]], "skia.AutoCanvasRestore": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "restore"]], "skia.BBHFactory": [[8, 2, 1, "", "__init__"]], "skia.BBoxHierarchy": [[10, 1, 1, "", "Metadata"], [9, 2, 1, "", "__init__"], [9, 2, 1, "", "bytesUsed"], [9, 2, 1, "", "insert"], [9, 2, 1, "", "ref"], [9, 2, 1, "", "search"], [9, 2, 1, "", "unique"], [9, 2, 1, "", "unref"]], "skia.BBoxHierarchy.Metadata": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "isDraw"]], "skia.Bitmap": [[12, 1, 1, "", "AllocFlags"], [11, 2, 1, "", "__init__"], [11, 2, 1, "", "allocN32Pixels"], [11, 2, 1, "", "allocPixels"], [11, 2, 1, "", "allocPixelsFlags"], [11, 2, 1, "", "alphaType"], [11, 2, 1, "", "bounds"], [11, 2, 1, "", "bytesPerPixel"], [11, 2, 1, "", "colorSpace"], [11, 2, 1, "", "colorType"], [11, 2, 1, "", "computeByteSize"], [11, 2, 1, "", "dimensions"], [11, 2, 1, "", "drawsNothing"], [11, 2, 1, "", "empty"], [11, 2, 1, "", "erase"], [11, 2, 1, "", "eraseARGB"], [11, 2, 1, "", "extractAlpha"], [11, 2, 1, "", "extractSubset"], [11, 2, 1, "", "getAlphaf"], [11, 2, 1, "", "getBounds"], [11, 2, 1, "", "getColor"], [11, 2, 1, "", "getGenerationID"], [11, 2, 1, "", "getPixels"], [11, 2, 1, "", "getSubset"], [11, 2, 1, "", "height"], [11, 2, 1, "", "info"], [11, 2, 1, "", "installPixels"], [11, 2, 1, "", "isImmutable"], [11, 2, 1, "", "isNull"], [11, 2, 1, "", "isOpaque"], [11, 3, 1, "", "kZeroPixels_AllocFlag"], [11, 2, 1, "", "makeShader"], [11, 2, 1, "", "notifyPixelsChanged"], [11, 2, 1, "", "peekPixels"], [11, 2, 1, "", "pixmap"], [11, 2, 1, "", "readPixels"], [11, 2, 1, "", "readyToDraw"], [11, 2, 1, "", "refColorSpace"], [11, 2, 1, "", "reset"], [11, 2, 1, "", "rowBytes"], [11, 2, 1, "", "rowBytesAsPixels"], [11, 2, 1, "", "setAlphaType"], [11, 2, 1, "", "setImmutable"], [11, 2, 1, "", "setInfo"], [11, 2, 1, "", "setPixels"], [11, 2, 1, "", "shiftPerPixel"], [11, 2, 1, "", "swap"], [11, 2, 1, "", "tobytes"], [11, 2, 1, "", "tryAllocN32Pixels"], [11, 2, 1, "", "tryAllocPixels"], [11, 2, 1, "", "tryAllocPixelsFlags"], [11, 2, 1, "", "width"], [11, 2, 1, "", "writePixels"]], "skia.Bitmap.AllocFlags": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "kZeroPixels_AllocFlag"], [12, 3, 1, "", "name"], [12, 3, 1, "", "value"]], "skia.BlendMode": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "kClear"], [13, 3, 1, "", "kColor"], [13, 3, 1, "", "kColorBurn"], [13, 3, 1, "", "kColorDodge"], [13, 3, 1, "", "kDarken"], [13, 3, 1, "", "kDifference"], [13, 3, 1, "", "kDst"], [13, 3, 1, "", "kDstATop"], [13, 3, 1, "", "kDstIn"], [13, 3, 1, "", "kDstOut"], [13, 3, 1, "", "kDstOver"], [13, 3, 1, "", "kExclusion"], [13, 3, 1, "", "kHardLight"], [13, 3, 1, "", "kHue"], [13, 3, 1, "", "kLastCoeffMode"], [13, 3, 1, "", "kLastMode"], [13, 3, 1, "", "kLastSeparableMode"], [13, 3, 1, "", "kLighten"], [13, 3, 1, "", "kLuminosity"], [13, 3, 1, "", "kModulate"], [13, 3, 1, "", "kMultiply"], [13, 3, 1, "", "kOverlay"], [13, 3, 1, "", "kPlus"], [13, 3, 1, "", "kSaturation"], [13, 3, 1, "", "kScreen"], [13, 3, 1, "", "kSoftLight"], [13, 3, 1, "", "kSrc"], [13, 3, 1, "", "kSrcATop"], [13, 3, 1, "", "kSrcIn"], [13, 3, 1, "", "kSrcOut"], [13, 3, 1, "", "kSrcOver"], [13, 3, 1, "", "kXor"], [13, 3, 1, "", "name"], [13, 3, 1, "", "value"]], "skia.BlendModeCoeff": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "kCoeffCount"], [14, 3, 1, "", "kDA"], [14, 3, 1, "", "kDC"], [14, 3, 1, "", "kIDA"], [14, 3, 1, "", "kIDC"], [14, 3, 1, "", "kISA"], [14, 3, 1, "", "kISC"], [14, 3, 1, "", "kOne"], [14, 3, 1, "", "kSA"], [14, 3, 1, "", "kSC"], [14, 3, 1, "", "kZero"], [14, 3, 1, "", "name"], [14, 3, 1, "", "value"]], "skia.BlurMaskFilter": [[15, 2, 1, "", "__init__"]], "skia.BlurStyle": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "kInner_BlurStyle"], [16, 3, 1, "", "kLastEnum_BlurStyle"], [16, 3, 1, "", "kNormal_BlurStyle"], [16, 3, 1, "", "kOuter_BlurStyle"], [16, 3, 1, "", "kSolid_BlurStyle"], [16, 3, 1, "", "name"], [16, 3, 1, "", "value"]], "skia.Budgeted": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "kNo"], [17, 3, 1, "", "kYes"], [17, 3, 1, "", "name"], [17, 3, 1, "", "value"]], "skia.Canvas": [[19, 1, 1, "", "Lattice"], [18, 2, 1, "", "MakeRasterDirect"], [18, 2, 1, "", "MakeRasterDirectN32"], [21, 1, 1, "", "PointMode"], [22, 1, 1, "", "QuadAAFlags"], [23, 1, 1, "", "SaveLayerFlags"], [24, 1, 1, "", "SaveLayerRec"], [25, 1, 1, "", "SrcRectConstraint"], [18, 2, 1, "", "__init__"], [18, 2, 1, "", "accessTopLayerPixels"], [18, 2, 1, "", "androidFramework_setDeviceClipRestriction"], [18, 2, 1, "", "clear"], [18, 2, 1, "", "clipPath"], [18, 2, 1, "", "clipRRect"], [18, 2, 1, "", "clipRect"], [18, 2, 1, "", "clipRegion"], [18, 2, 1, "", "concat"], [18, 2, 1, "", "discard"], [18, 2, 1, "", "drawAnnotation"], [18, 2, 1, "", "drawArc"], [18, 2, 1, "", "drawAtlas"], [18, 2, 1, "", "drawBitmap"], [18, 2, 1, "", "drawBitmapRect"], [18, 2, 1, "", "drawCircle"], [18, 2, 1, "", "drawColor"], [18, 2, 1, "", "drawDRRect"], [18, 2, 1, "", "drawIRect"], [18, 2, 1, "", "drawImage"], [18, 2, 1, "", "drawImageRect"], [18, 2, 1, "", "drawLine"], [18, 2, 1, "", "drawOval"], [18, 2, 1, "", "drawPaint"], [18, 2, 1, "", "drawPatch"], [18, 2, 1, "", "drawPath"], [18, 2, 1, "", "drawPicture"], [18, 2, 1, "", "drawPoint"], [18, 2, 1, "", "drawPoints"], [18, 2, 1, "", "drawRRect"], [18, 2, 1, "", "drawRect"], [18, 2, 1, "", "drawRegion"], [18, 2, 1, "", "drawRoundRect"], [18, 2, 1, "", "drawSimpleText"], [18, 2, 1, "", "drawString"], [18, 2, 1, "", "drawTextBlob"], [18, 2, 1, "", "drawVertices"], [18, 2, 1, "", "flush"], [18, 2, 1, "", "getBaseLayerSize"], [18, 2, 1, "", "getDeviceClipBounds"], [18, 2, 1, "", "getLocalClipBounds"], [18, 2, 1, "", "getLocalToDevice"], [18, 2, 1, "", "getProps"], [18, 2, 1, "", "getSaveCount"], [18, 2, 1, "", "getSurface"], [18, 2, 1, "", "getTotalMatrix"], [18, 2, 1, "", "imageInfo"], [18, 2, 1, "", "isClipEmpty"], [18, 2, 1, "", "isClipRect"], [18, 3, 1, "", "kAll_QuadAAFlags"], [18, 3, 1, "", "kBottom_QuadAAFlag"], [18, 3, 1, "", "kF16ColorType"], [18, 3, 1, "", "kFast_SrcRectConstraint"], [18, 3, 1, "", "kInitWithPrevious_SaveLayerFlag"], [18, 3, 1, "", "kLeft_QuadAAFlag"], [18, 3, 1, "", "kLines_PointMode"], [18, 3, 1, "", "kNone_QuadAAFlags"], [18, 3, 1, "", "kPoints_PointMode"], [18, 3, 1, "", "kPolygon_PointMode"], [18, 3, 1, "", "kPreserveLCDText_SaveLayerFlag"], [18, 3, 1, "", "kRight_QuadAAFlag"], [18, 3, 1, "", "kStrict_SrcRectConstraint"], [18, 3, 1, "", "kTop_QuadAAFlag"], [18, 2, 1, "", "makeSurface"], [18, 2, 1, "", "peekPixels"], [18, 2, 1, "", "quickReject"], [18, 2, 1, "", "readPixels"], [18, 2, 1, "", "resetMatrix"], [18, 2, 1, "", "restore"], [18, 2, 1, "", "restoreToCount"], [18, 2, 1, "", "rotate"], [18, 2, 1, "", "save"], [18, 2, 1, "", "saveLayer"], [18, 2, 1, "", "saveLayerAlpha"], [18, 2, 1, "", "scale"], [18, 2, 1, "", "setMatrix"], [18, 2, 1, "", "skew"], [18, 2, 1, "", "toarray"], [18, 2, 1, "", "translate"], [18, 2, 1, "", "writePixels"]], "skia.Canvas.Lattice": [[20, 1, 1, "", "RectType"], [19, 2, 1, "", "__init__"], [19, 3, 1, "", "fBounds"], [19, 3, 1, "", "fColors"], [19, 3, 1, "", "fRectTypes"], [19, 3, 1, "", "fXCount"], [19, 3, 1, "", "fXDivs"], [19, 3, 1, "", "fYCount"], [19, 3, 1, "", "fYDivs"], [19, 3, 1, "", "kDefault"], [19, 3, 1, "", "kFixedColor"], [19, 3, 1, "", "kTransparent"]], "skia.Canvas.Lattice.RectType": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "kDefault"], [20, 3, 1, "", "kFixedColor"], [20, 3, 1, "", "kTransparent"], [20, 3, 1, "", "name"], [20, 3, 1, "", "value"]], "skia.Canvas.PointMode": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "kLines_PointMode"], [21, 3, 1, "", "kPoints_PointMode"], [21, 3, 1, "", "kPolygon_PointMode"], [21, 3, 1, "", "name"], [21, 3, 1, "", "value"]], "skia.Canvas.QuadAAFlags": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "kAll_QuadAAFlags"], [22, 3, 1, "", "kBottom_QuadAAFlag"], [22, 3, 1, "", "kLeft_QuadAAFlag"], [22, 3, 1, "", "kNone_QuadAAFlags"], [22, 3, 1, "", "kRight_QuadAAFlag"], [22, 3, 1, "", "kTop_QuadAAFlag"], [22, 3, 1, "", "name"], [22, 3, 1, "", "value"]], "skia.Canvas.SaveLayerFlags": [[23, 2, 1, "", "__init__"], [23, 3, 1, "", "kF16ColorType"], [23, 3, 1, "", "kInitWithPrevious_SaveLayerFlag"], [23, 3, 1, "", "kPreserveLCDText_SaveLayerFlag"], [23, 3, 1, "", "name"], [23, 3, 1, "", "value"]], "skia.Canvas.SaveLayerRec": [[24, 2, 1, "", "__init__"], [24, 3, 1, "", "fBackdrop"], [24, 3, 1, "", "fBounds"], [24, 3, 1, "", "fPaint"], [24, 3, 1, "", "fSaveLayerFlags"]], "skia.Canvas.SrcRectConstraint": [[25, 2, 1, "", "__init__"], [25, 3, 1, "", "kFast_SrcRectConstraint"], [25, 3, 1, "", "kStrict_SrcRectConstraint"], [25, 3, 1, "", "name"], [25, 3, 1, "", "value"]], "skia.ClipOp": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "kDifference"], [26, 3, 1, "", "kIntersect"], [26, 3, 1, "", "name"], [26, 3, 1, "", "value"]], "skia.Codec": [[28, 1, 1, "", "DisposalMethod"], [29, 1, 1, "", "FrameInfo"], [27, 2, 1, "", "MakeFromData"], [27, 2, 1, "", "MinBufferedBytesNeeded"], [30, 1, 1, "", "Options"], [31, 1, 1, "", "Result"], [27, 2, 1, "", "ResultToString"], [32, 1, 1, "", "ScanlineOrder"], [33, 1, 1, "", "SelectionPolicy"], [34, 1, 1, "", "ZeroInitialized"], [27, 2, 1, "", "__init__"], [27, 2, 1, "", "bounds"], [27, 2, 1, "", "dimensions"], [27, 2, 1, "", "getEncodedFormat"], [27, 2, 1, "", "getFrameCount"], [27, 2, 1, "", "getFrameInfo"], [27, 2, 1, "", "getInfo"], [27, 2, 1, "", "getOrigin"], [27, 2, 1, "", "getPixels"], [27, 2, 1, "", "getRepetitionCount"], [27, 2, 1, "", "getScaledDimensions"], [27, 2, 1, "", "getScanlineOrder"], [27, 2, 1, "", "getScanlines"], [27, 2, 1, "", "getValidSubset"], [27, 2, 1, "", "getYUVAPlanes"], [27, 2, 1, "", "incrementalDecode"], [27, 3, 1, "", "kCouldNotRewind"], [27, 3, 1, "", "kErrorInInput"], [27, 3, 1, "", "kIncompleteInput"], [27, 3, 1, "", "kInternalError"], [27, 3, 1, "", "kInvalidConversion"], [27, 3, 1, "", "kInvalidInput"], [27, 3, 1, "", "kInvalidParameters"], [27, 3, 1, "", "kInvalidScale"], [27, 3, 1, "", "kKeep"], [27, 3, 1, "", "kNoFrame"], [27, 3, 1, "", "kNo_ZeroInitialized"], [27, 3, 1, "", "kPreferAnimation"], [27, 3, 1, "", "kPreferStillImage"], [27, 3, 1, "", "kRepetitionCountInfinite"], [27, 3, 1, "", "kRestoreBGColor"], [27, 3, 1, "", "kRestorePrevious"], [27, 3, 1, "", "kSuccess"], [27, 3, 1, "", "kUnimplemented"], [27, 3, 1, "", "kYes_ZeroInitialized"], [27, 2, 1, "", "nextScanline"], [27, 2, 1, "", "outputScanline"], [27, 2, 1, "", "queryYUVAInfo"], [27, 2, 1, "", "skipScanlines"], [27, 2, 1, "", "startIncrementalDecode"], [27, 2, 1, "", "startScanlineDecode"]], "skia.Codec.DisposalMethod": [[28, 2, 1, "", "__init__"], [28, 3, 1, "", "kKeep"], [28, 3, 1, "", "kRestoreBGColor"], [28, 3, 1, "", "kRestorePrevious"], [28, 3, 1, "", "name"], [28, 3, 1, "", "value"]], "skia.Codec.FrameInfo": [[29, 2, 1, "", "__init__"], [29, 3, 1, "", "fAlphaType"], [29, 3, 1, "", "fDisposalMethod"], [29, 3, 1, "", "fDuration"], [29, 3, 1, "", "fFullyReceived"], [29, 3, 1, "", "fRequiredFrame"]], "skia.Codec.Options": [[30, 2, 1, "", "__init__"], [30, 3, 1, "", "fFrameIndex"], [30, 3, 1, "", "fPriorFrame"], [30, 3, 1, "", "fSubset"], [30, 3, 1, "", "fZeroInitialized"]], "skia.Codec.Result": [[31, 2, 1, "", "__init__"], [31, 3, 1, "", "kCouldNotRewind"], [31, 3, 1, "", "kErrorInInput"], [31, 3, 1, "", "kIncompleteInput"], [31, 3, 1, "", "kInternalError"], [31, 3, 1, "", "kInvalidConversion"], [31, 3, 1, "", "kInvalidInput"], [31, 3, 1, "", "kInvalidParameters"], [31, 3, 1, "", "kInvalidScale"], [31, 3, 1, "", "kSuccess"], [31, 3, 1, "", "kUnimplemented"], [31, 3, 1, "", "name"], [31, 3, 1, "", "value"]], "skia.Codec.ScanlineOrder": [[32, 2, 1, "", "__init__"], [32, 3, 1, "", "kKeep"], [32, 3, 1, "", "kRestoreBGColor"], [32, 3, 1, "", "name"], [32, 3, 1, "", "value"]], "skia.Codec.SelectionPolicy": [[33, 2, 1, "", "__init__"], [33, 3, 1, "", "kPreferAnimation"], [33, 3, 1, "", "kPreferStillImage"], [33, 3, 1, "", "name"], [33, 3, 1, "", "value"]], "skia.Codec.ZeroInitialized": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "kNo_ZeroInitialized"], [34, 3, 1, "", "kYes_ZeroInitialized"], [34, 3, 1, "", "name"], [34, 3, 1, "", "value"]], "skia.Color4f": [[35, 2, 1, "", "FromBytes_RGBA"], [35, 2, 1, "", "FromColor"], [35, 2, 1, "", "__init__"], [35, 3, 1, "", "fA"], [35, 3, 1, "", "fB"], [35, 3, 1, "", "fG"], [35, 3, 1, "", "fR"], [35, 2, 1, "", "fitsInBytes"], [35, 2, 1, "", "isOpaque"], [35, 3, 1, "", "kBlack"], [35, 3, 1, "", "kBlue"], [35, 3, 1, "", "kCyan"], [35, 3, 1, "", "kDkGray"], [35, 3, 1, "", "kGray"], [35, 3, 1, "", "kGreen"], [35, 3, 1, "", "kLtGray"], [35, 3, 1, "", "kMagenta"], [35, 3, 1, "", "kRed"], [35, 3, 1, "", "kTransparent"], [35, 3, 1, "", "kWhite"], [35, 3, 1, "", "kYellow"], [35, 2, 1, "", "makeOpaque"], [35, 2, 1, "", "toBytes_RGBA"], [35, 2, 1, "", "toColor"], [35, 2, 1, "", "vec"]], "skia.ColorChannel": [[36, 2, 1, "", "__init__"], [36, 3, 1, "", "kA"], [36, 3, 1, "", "kB"], [36, 3, 1, "", "kG"], [36, 3, 1, "", "kLastEnum"], [36, 3, 1, "", "kR"], [36, 3, 1, "", "name"], [36, 3, 1, "", "value"]], "skia.ColorChannelFlag": [[37, 2, 1, "", "__init__"], [37, 3, 1, "", "kAlpha_ColorChannelFlag"], [37, 3, 1, "", "kBlue_ColorChannelFlag"], [37, 3, 1, "", "kGray_ColorChannelFlag"], [37, 3, 1, "", "kGreen_ColorChannelFlag"], [37, 3, 1, "", "kRGBA_ColorChannelFlags"], [37, 3, 1, "", "kRGB_ColorChannelFlags"], [37, 3, 1, "", "kRG_ColorChannelFlags"], [37, 3, 1, "", "kRed_ColorChannelFlag"], [37, 3, 1, "", "name"], [37, 3, 1, "", "value"]], "skia.ColorFilter": [[38, 2, 1, "", "Deserialize"], [39, 1, 1, "", "Type"], [38, 2, 1, "", "__init__"], [38, 2, 1, "", "asAColorMatrix"], [38, 2, 1, "", "asAColorMode"], [38, 2, 1, "", "asColorMode"], [38, 2, 1, "", "filterColor"], [38, 2, 1, "", "filterColor4f"], [38, 2, 1, "", "getFlattenableType"], [38, 2, 1, "", "getTypeName"], [38, 3, 1, "", "kColorFilter_Type"], [38, 3, 1, "", "kDrawLooper_Type"], [38, 3, 1, "", "kDrawable_Type"], [38, 3, 1, "", "kImageFilter_Type"], [38, 3, 1, "", "kMaskFilter_Type"], [38, 3, 1, "", "kPathEffect_Type"], [38, 2, 1, "", "makeComposed"], [38, 2, 1, "", "ref"], [38, 2, 1, "", "serialize"], [38, 2, 1, "", "unique"], [38, 2, 1, "", "unref"]], "skia.ColorFilter.Type": [[39, 2, 1, "", "__init__"], [39, 3, 1, "", "kColorFilter_Type"], [39, 3, 1, "", "kDrawLooper_Type"], [39, 3, 1, "", "kDrawable_Type"], [39, 3, 1, "", "kImageFilter_Type"], [39, 3, 1, "", "kMaskFilter_Type"], [39, 3, 1, "", "kPathEffect_Type"], [39, 3, 1, "", "name"], [39, 3, 1, "", "value"]], "skia.ColorFilters": [[40, 2, 1, "", "Blend"], [40, 2, 1, "", "HSLAMatrix"], [40, 2, 1, "", "Lerp"], [40, 2, 1, "", "LinearToSRGBGamma"], [40, 2, 1, "", "Matrix"], [40, 2, 1, "", "SRGBToLinearGamma"], [40, 2, 1, "", "__init__"]], "skia.ColorInfo": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "alphaType"], [41, 2, 1, "", "bytesPerPixel"], [41, 2, 1, "", "colorSpace"], [41, 2, 1, "", "colorType"], [41, 2, 1, "", "gammaCloseToSRGB"], [41, 2, 1, "", "isOpaque"], [41, 2, 1, "", "makeAlphaType"], [41, 2, 1, "", "makeColorSpace"], [41, 2, 1, "", "makeColorType"], [41, 2, 1, "", "refColorSpace"], [41, 2, 1, "", "shiftPerPixel"]], "skia.ColorMatrix": [[42, 2, 1, "", "__init__"]], "skia.ColorMatrixFilter": [[43, 2, 1, "", "Deserialize"], [43, 2, 1, "", "MakeLightingFilter"], [44, 1, 1, "", "Type"], [43, 2, 1, "", "__init__"], [43, 2, 1, "", "asAColorMatrix"], [43, 2, 1, "", "asAColorMode"], [43, 2, 1, "", "asColorMode"], [43, 2, 1, "", "filterColor"], [43, 2, 1, "", "filterColor4f"], [43, 2, 1, "", "getFlattenableType"], [43, 2, 1, "", "getTypeName"], [43, 3, 1, "", "kColorFilter_Type"], [43, 3, 1, "", "kDrawLooper_Type"], [43, 3, 1, "", "kDrawable_Type"], [43, 3, 1, "", "kImageFilter_Type"], [43, 3, 1, "", "kMaskFilter_Type"], [43, 3, 1, "", "kPathEffect_Type"], [43, 2, 1, "", "makeComposed"], [43, 2, 1, "", "ref"], [43, 2, 1, "", "serialize"], [43, 2, 1, "", "unique"], [43, 2, 1, "", "unref"]], "skia.ColorMatrixFilter.Type": [[44, 2, 1, "", "__init__"], [44, 3, 1, "", "kColorFilter_Type"], [44, 3, 1, "", "kDrawLooper_Type"], [44, 3, 1, "", "kDrawable_Type"], [44, 3, 1, "", "kImageFilter_Type"], [44, 3, 1, "", "kMaskFilter_Type"], [44, 3, 1, "", "kPathEffect_Type"], [44, 3, 1, "", "name"], [44, 3, 1, "", "value"]], "skia.ColorSpace": [[45, 2, 1, "", "Deserialize"], [45, 2, 1, "", "Equals"], [45, 2, 1, "", "Make"], [45, 2, 1, "", "MakeRGB"], [45, 2, 1, "", "MakeSRGB"], [45, 2, 1, "", "MakeSRGBLinear"], [45, 2, 1, "", "__init__"], [45, 2, 1, "", "deref"], [45, 2, 1, "", "gammaCloseToSRGB"], [45, 2, 1, "", "gammaIsLinear"], [45, 2, 1, "", "gamutTransformTo"], [45, 2, 1, "", "hash"], [45, 2, 1, "", "invTransferFn"], [45, 2, 1, "", "isNumericalTransferFn"], [45, 2, 1, "", "isSRGB"], [45, 2, 1, "", "makeColorSpin"], [45, 2, 1, "", "makeLinearGamma"], [45, 2, 1, "", "makeSRGBGamma"], [45, 2, 1, "", "ref"], [45, 2, 1, "", "refCntGreaterThan"], [45, 2, 1, "", "serialize"], [45, 2, 1, "", "toProfile"], [45, 2, 1, "", "toXYZD50"], [45, 2, 1, "", "toXYZD50Hash"], [45, 2, 1, "", "transferFn"], [45, 2, 1, "", "transferFnHash"], [45, 2, 1, "", "unique"], [45, 2, 1, "", "unref"], [45, 2, 1, "", "writeToMemory"]], "skia.ColorType": [[46, 2, 1, "", "__init__"], [46, 3, 1, "", "kA16_float_ColorType"], [46, 3, 1, "", "kA16_unorm_ColorType"], [46, 3, 1, "", "kARGB_4444_ColorType"], [46, 3, 1, "", "kAlpha_8_ColorType"], [46, 3, 1, "", "kBGRA_1010102_ColorType"], [46, 3, 1, "", "kBGRA_8888_ColorType"], [46, 3, 1, "", "kBGR_101010x_ColorType"], [46, 3, 1, "", "kGray_8_ColorType"], [46, 3, 1, "", "kN32_ColorType"], [46, 3, 1, "", "kR16G16B16A16_unorm_ColorType"], [46, 3, 1, "", "kR16G16_float_ColorType"], [46, 3, 1, "", "kR16G16_unorm_ColorType"], [46, 3, 1, "", "kR8G8_unorm_ColorType"], [46, 3, 1, "", "kRGBA_1010102_ColorType"], [46, 3, 1, "", "kRGBA_8888_ColorType"], [46, 3, 1, "", "kRGBA_F16Norm_ColorType"], [46, 3, 1, "", "kRGBA_F16_ColorType"], [46, 3, 1, "", "kRGBA_F32_ColorType"], [46, 3, 1, "", "kRGB_101010x_ColorType"], [46, 3, 1, "", "kRGB_565_ColorType"], [46, 3, 1, "", "kRGB_888x_ColorType"], [46, 3, 1, "", "kUnknown_ColorType"], [46, 3, 1, "", "name"], [46, 3, 1, "", "value"]], "skia.ConvergeMode": [[47, 2, 1, "", "__init__"], [47, 3, 1, "", "kDifference"], [47, 3, 1, "", "kIntersect"], [47, 3, 1, "", "kLast"], [47, 3, 1, "", "kReverseDifference"], [47, 3, 1, "", "kUnion"], [47, 3, 1, "", "kXor"], [47, 3, 1, "", "name"], [47, 3, 1, "", "value"]], "skia.CornerPathEffect": [[48, 2, 1, "", "Make"], [48, 2, 1, "", "__init__"]], "skia.DashPathEffect": [[49, 2, 1, "", "Make"], [49, 2, 1, "", "__init__"]], "skia.Data": [[50, 2, 1, "", "MakeEmpty"], [50, 2, 1, "", "MakeFromFileName"], [50, 2, 1, "", "MakeSubset"], [50, 2, 1, "", "MakeUninitialized"], [50, 2, 1, "", "MakeWithCopy"], [50, 2, 1, "", "MakeWithoutCopy"], [50, 2, 1, "", "__init__"], [50, 2, 1, "", "bytes"], [50, 2, 1, "", "copyRange"], [50, 2, 1, "", "data"], [50, 2, 1, "", "deref"], [50, 2, 1, "", "equals"], [50, 2, 1, "", "isEmpty"], [50, 2, 1, "", "ref"], [50, 2, 1, "", "refCntGreaterThan"], [50, 2, 1, "", "size"], [50, 2, 1, "", "unique"], [50, 2, 1, "", "unref"], [50, 2, 1, "", "writable_data"]], "skia.DiscretePathEffect": [[51, 2, 1, "", "Make"], [51, 2, 1, "", "__init__"]], "skia.Document": [[52, 2, 1, "", "__init__"], [52, 2, 1, "", "abort"], [52, 2, 1, "", "beginPage"], [52, 2, 1, "", "close"], [52, 2, 1, "", "endPage"], [52, 2, 1, "", "page"], [52, 2, 1, "", "ref"], [52, 2, 1, "", "unique"], [52, 2, 1, "", "unref"]], "skia.Drawable": [[53, 2, 1, "", "Deserialize"], [54, 1, 1, "", "Type"], [53, 2, 1, "", "__init__"], [53, 2, 1, "", "draw"], [53, 2, 1, "", "getBounds"], [53, 2, 1, "", "getFlattenableType"], [53, 2, 1, "", "getGenerationID"], [53, 2, 1, "", "getTypeName"], [53, 3, 1, "", "kColorFilter_Type"], [53, 3, 1, "", "kDrawLooper_Type"], [53, 3, 1, "", "kDrawable_Type"], [53, 3, 1, "", "kImageFilter_Type"], [53, 3, 1, "", "kMaskFilter_Type"], [53, 3, 1, "", "kPathEffect_Type"], [53, 2, 1, "", "newPictureSnapshot"], [53, 2, 1, "", "notifyDrawingChanged"], [53, 2, 1, "", "ref"], [53, 2, 1, "", "serialize"], [53, 2, 1, "", "unique"], [53, 2, 1, "", "unref"]], "skia.Drawable.Type": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "kColorFilter_Type"], [54, 3, 1, "", "kDrawLooper_Type"], [54, 3, 1, "", "kDrawable_Type"], [54, 3, 1, "", "kImageFilter_Type"], [54, 3, 1, "", "kMaskFilter_Type"], [54, 3, 1, "", "kPathEffect_Type"], [54, 3, 1, "", "name"], [54, 3, 1, "", "value"]], "skia.DynamicMemoryWStream": [[55, 2, 1, "", "SizeOfPackedUInt"], [55, 2, 1, "", "__init__"], [55, 2, 1, "", "bytesWritten"], [55, 2, 1, "", "copyTo"], [55, 2, 1, "", "copyToAndReset"], [55, 2, 1, "", "detachAsData"], [55, 2, 1, "", "detachAsStream"], [55, 2, 1, "", "flush"], [55, 2, 1, "", "newline"], [55, 2, 1, "", "padToAlign4"], [55, 2, 1, "", "prependToAndReset"], [55, 2, 1, "", "read"], [55, 2, 1, "", "reset"], [55, 2, 1, "", "write"], [55, 2, 1, "", "write16"], [55, 2, 1, "", "write32"], [55, 2, 1, "", "write8"], [55, 2, 1, "", "writeBigDecAsText"], [55, 2, 1, "", "writeBool"], [55, 2, 1, "", "writeDecAsText"], [55, 2, 1, "", "writeHexAsText"], [55, 2, 1, "", "writePackedUInt"], [55, 2, 1, "", "writeScalar"], [55, 2, 1, "", "writeScalarAsText"], [55, 2, 1, "", "writeStream"], [55, 2, 1, "", "writeText"], [55, 2, 1, "", "writeToAndReset"], [55, 2, 1, "", "writeToStream"]], "skia.EncodedImageFormat": [[56, 2, 1, "", "__init__"], [56, 3, 1, "", "kASTC"], [56, 3, 1, "", "kBMP"], [56, 3, 1, "", "kDNG"], [56, 3, 1, "", "kGIF"], [56, 3, 1, "", "kHEIF"], [56, 3, 1, "", "kICO"], [56, 3, 1, "", "kJPEG"], [56, 3, 1, "", "kKTX"], [56, 3, 1, "", "kPKM"], [56, 3, 1, "", "kPNG"], [56, 3, 1, "", "kWBMP"], [56, 3, 1, "", "kWEBP"], [56, 3, 1, "", "name"], [56, 3, 1, "", "value"]], "skia.EncodedOrigin": [[57, 2, 1, "", "__init__"], [57, 3, 1, "", "kBottomLeft_EncodedOrigin"], [57, 3, 1, "", "kBottomRight_EncodedOrigin"], [57, 3, 1, "", "kDefault_EncodedOrigin"], [57, 3, 1, "", "kLast_EncodedOrigin"], [57, 3, 1, "", "kLeftBottom_EncodedOrigin"], [57, 3, 1, "", "kLeftTop_EncodedOrigin"], [57, 3, 1, "", "kRightBottom_EncodedOrigin"], [57, 3, 1, "", "kRightTop_EncodedOrigin"], [57, 3, 1, "", "kTopLeft_EncodedOrigin"], [57, 3, 1, "", "kTopRight_EncodedOrigin"], [57, 3, 1, "", "name"], [57, 3, 1, "", "value"]], "skia.FILEStream": [[58, 2, 1, "", "Make"], [58, 2, 1, "", "MakeFromFile"], [58, 2, 1, "", "__init__"], [58, 2, 1, "", "close"], [58, 2, 1, "", "duplicate"], [58, 2, 1, "", "fork"], [58, 2, 1, "", "getLength"], [58, 2, 1, "", "getMemoryBase"], [58, 2, 1, "", "getPosition"], [58, 2, 1, "", "hasLength"], [58, 2, 1, "", "hasPosition"], [58, 2, 1, "", "isAtEnd"], [58, 2, 1, "", "isValid"], [58, 2, 1, "", "move"], [58, 2, 1, "", "peek"], [58, 2, 1, "", "read"], [58, 2, 1, "", "readBool"], [58, 2, 1, "", "readPackedUInt"], [58, 2, 1, "", "readS16"], [58, 2, 1, "", "readS32"], [58, 2, 1, "", "readS8"], [58, 2, 1, "", "readScalar"], [58, 2, 1, "", "readU16"], [58, 2, 1, "", "readU32"], [58, 2, 1, "", "readU8"], [58, 2, 1, "", "rewind"], [58, 2, 1, "", "seek"], [58, 2, 1, "", "skip"]], "skia.FILEWStream": [[59, 2, 1, "", "SizeOfPackedUInt"], [59, 2, 1, "", "__init__"], [59, 2, 1, "", "bytesWritten"], [59, 2, 1, "", "flush"], [59, 2, 1, "", "fsync"], [59, 2, 1, "", "isValid"], [59, 2, 1, "", "newline"], [59, 2, 1, "", "write"], [59, 2, 1, "", "write16"], [59, 2, 1, "", "write32"], [59, 2, 1, "", "write8"], [59, 2, 1, "", "writeBigDecAsText"], [59, 2, 1, "", "writeBool"], [59, 2, 1, "", "writeDecAsText"], [59, 2, 1, "", "writeHexAsText"], [59, 2, 1, "", "writePackedUInt"], [59, 2, 1, "", "writeScalar"], [59, 2, 1, "", "writeScalarAsText"], [59, 2, 1, "", "writeStream"], [59, 2, 1, "", "writeText"]], "skia.FilterMode": [[60, 2, 1, "", "__init__"], [60, 3, 1, "", "kLinear"], [60, 3, 1, "", "kNearest"], [60, 3, 1, "", "name"], [60, 3, 1, "", "value"]], "skia.Flattanable": [[61, 2, 1, "", "Deserialize"], [62, 1, 1, "", "Type"], [61, 2, 1, "", "__init__"], [61, 2, 1, "", "getFlattenableType"], [61, 2, 1, "", "getTypeName"], [61, 3, 1, "", "kColorFilter_Type"], [61, 3, 1, "", "kDrawLooper_Type"], [61, 3, 1, "", "kDrawable_Type"], [61, 3, 1, "", "kImageFilter_Type"], [61, 3, 1, "", "kMaskFilter_Type"], [61, 3, 1, "", "kPathEffect_Type"], [61, 2, 1, "", "ref"], [61, 2, 1, "", "serialize"], [61, 2, 1, "", "unique"], [61, 2, 1, "", "unref"]], "skia.Flattanable.Type": [[62, 2, 1, "", "__init__"], [62, 3, 1, "", "kColorFilter_Type"], [62, 3, 1, "", "kDrawLooper_Type"], [62, 3, 1, "", "kDrawable_Type"], [62, 3, 1, "", "kImageFilter_Type"], [62, 3, 1, "", "kMaskFilter_Type"], [62, 3, 1, "", "kPathEffect_Type"], [62, 3, 1, "", "name"], [62, 3, 1, "", "value"]], "skia.Font": [[64, 1, 1, "", "Edging"], [63, 2, 1, "", "__init__"], [63, 2, 1, "", "countText"], [63, 2, 1, "", "dump"], [63, 2, 1, "", "getBounds"], [63, 2, 1, "", "getEdging"], [63, 2, 1, "", "getHinting"], [63, 2, 1, "", "getMetrics"], [63, 2, 1, "", "getPath"], [63, 2, 1, "", "getPaths"], [63, 2, 1, "", "getPos"], [63, 2, 1, "", "getScaleX"], [63, 2, 1, "", "getSize"], [63, 2, 1, "", "getSkewX"], [63, 2, 1, "", "getSpacing"], [63, 2, 1, "", "getTypeface"], [63, 2, 1, "", "getTypefaceOrDefault"], [63, 2, 1, "", "getWidths"], [63, 2, 1, "", "getWidthsBounds"], [63, 2, 1, "", "getXPos"], [63, 2, 1, "", "isBaselineSnap"], [63, 2, 1, "", "isEmbeddedBitmaps"], [63, 2, 1, "", "isEmbolden"], [63, 2, 1, "", "isForceAutoHinting"], [63, 2, 1, "", "isLinearMetrics"], [63, 2, 1, "", "isSubpixel"], [63, 3, 1, "", "kAlias"], [63, 3, 1, "", "kAntiAlias"], [63, 3, 1, "", "kSubpixelAntiAlias"], [63, 2, 1, "", "makeWithSize"], [63, 2, 1, "", "measureText"], [63, 2, 1, "", "refTypeface"], [63, 2, 1, "", "refTypefaceOrDefault"], [63, 2, 1, "", "setBaselineSnap"], [63, 2, 1, "", "setEdging"], [63, 2, 1, "", "setEmbeddedBitmaps"], [63, 2, 1, "", "setEmbolden"], [63, 2, 1, "", "setForceAutoHinting"], [63, 2, 1, "", "setHinting"], [63, 2, 1, "", "setLinearMetrics"], [63, 2, 1, "", "setScaleX"], [63, 2, 1, "", "setSize"], [63, 2, 1, "", "setSkewX"], [63, 2, 1, "", "setSubpixel"], [63, 2, 1, "", "setTypeface"], [63, 2, 1, "", "textToGlyphs"], [63, 2, 1, "", "unicharToGlyph"], [63, 2, 1, "", "unicharsToGlyphs"]], "skia.Font.Edging": [[64, 2, 1, "", "__init__"], [64, 3, 1, "", "kAlias"], [64, 3, 1, "", "kAntiAlias"], [64, 3, 1, "", "kSubpixelAntiAlias"], [64, 3, 1, "", "name"], [64, 3, 1, "", "value"]], "skia.FontArguments": [[66, 1, 1, "", "VariationPosition"], [65, 2, 1, "", "__init__"], [65, 2, 1, "", "getCollectionIndex"], [65, 2, 1, "", "getVariationDesignPosition"], [65, 2, 1, "", "setCollectionIndex"], [65, 2, 1, "", "setVariationDesignPosition"]], "skia.FontArguments.VariationPosition": [[67, 1, 1, "", "Coordinate"], [68, 1, 1, "", "Coordinates"], [66, 2, 1, "", "__init__"], [66, 3, 1, "", "coordinateCount"], [66, 3, 1, "", "coordinates"]], "skia.FontArguments.VariationPosition.Coordinate": [[67, 2, 1, "", "__init__"], [67, 3, 1, "", "axis"], [67, 3, 1, "", "value"]], "skia.FontArguments.VariationPosition.Coordinates": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "append"], [68, 2, 1, "", "clear"], [68, 2, 1, "", "extend"], [68, 2, 1, "", "insert"], [68, 2, 1, "", "pop"]], "skia.FontHinting": [[69, 2, 1, "", "__init__"], [69, 3, 1, "", "kFull"], [69, 3, 1, "", "kNone"], [69, 3, 1, "", "kNormal"], [69, 3, 1, "", "kSlight"], [69, 3, 1, "", "name"], [69, 3, 1, "", "value"]], "skia.FontMetrics": [[71, 1, 1, "", "FontMetricsFlags"], [70, 2, 1, "", "__init__"], [70, 3, 1, "", "fAscent"], [70, 3, 1, "", "fAvgCharWidth"], [70, 3, 1, "", "fBottom"], [70, 3, 1, "", "fCapHeight"], [70, 3, 1, "", "fDescent"], [70, 3, 1, "", "fFlags"], [70, 3, 1, "", "fLeading"], [70, 3, 1, "", "fMaxCharWidth"], [70, 3, 1, "", "fStrikeoutPosition"], [70, 3, 1, "", "fStrikeoutThickness"], [70, 3, 1, "", "fTop"], [70, 3, 1, "", "fUnderlinePosition"], [70, 3, 1, "", "fUnderlineThickness"], [70, 3, 1, "", "fXHeight"], [70, 3, 1, "", "fXMax"], [70, 3, 1, "", "fXMin"], [70, 2, 1, "", "hasStrikeoutPosition"], [70, 2, 1, "", "hasStrikeoutThickness"], [70, 2, 1, "", "hasUnderlinePosition"], [70, 2, 1, "", "hasUnderlineThickness"], [70, 3, 1, "", "kStrikeoutPositionIsValid_Flag"], [70, 3, 1, "", "kStrikeoutThicknessIsValid_Flag"], [70, 3, 1, "", "kUnderlinePositionIsValid_Flag"], [70, 3, 1, "", "kUnderlineThicknessIsValid_Flag"]], "skia.FontMetrics.FontMetricsFlags": [[71, 2, 1, "", "__init__"], [71, 3, 1, "", "kStrikeoutPositionIsValid_Flag"], [71, 3, 1, "", "kStrikeoutThicknessIsValid_Flag"], [71, 3, 1, "", "kUnderlinePositionIsValid_Flag"], [71, 3, 1, "", "kUnderlineThicknessIsValid_Flag"], [71, 3, 1, "", "name"], [71, 3, 1, "", "value"]], "skia.FontMgr": [[72, 2, 1, "", "RefDefault"], [72, 2, 1, "", "__init__"], [72, 2, 1, "", "countFamilies"], [72, 2, 1, "", "createStyleSet"], [72, 2, 1, "", "getFamilyName"], [72, 2, 1, "", "legacyMakeTypeface"], [72, 2, 1, "", "makeFromData"], [72, 2, 1, "", "makeFromFile"], [72, 2, 1, "", "matchFamily"], [72, 2, 1, "", "matchFamilyStyle"], [72, 2, 1, "", "matchFamilyStyleCharacter"], [72, 2, 1, "", "ref"], [72, 2, 1, "", "unique"], [72, 2, 1, "", "unref"]], "skia.FontParameters": [[74, 1, 1, "", "Variation"], [73, 2, 1, "", "__init__"]], "skia.FontParameters.Variation": [[75, 1, 1, "", "Axis"], [74, 2, 1, "", "__init__"]], "skia.FontParameters.Variation.Axis": [[75, 2, 1, "", "__init__"], [75, 3, 1, "", "def"], [75, 2, 1, "", "isHidden"], [75, 3, 1, "", "max"], [75, 3, 1, "", "min"], [75, 2, 1, "", "setHidden"], [75, 3, 1, "", "tag"]], "skia.FontStyle": [[76, 2, 1, "", "Bold"], [76, 2, 1, "", "BoldItalic"], [76, 2, 1, "", "Italic"], [76, 2, 1, "", "Normal"], [77, 1, 1, "", "Slant"], [78, 1, 1, "", "Weight"], [79, 1, 1, "", "Width"], [76, 2, 1, "", "__init__"], [76, 3, 1, "", "kBlack_Weight"], [76, 3, 1, "", "kBold_Weight"], [76, 3, 1, "", "kCondensed_Width"], [76, 3, 1, "", "kExpanded_Width"], [76, 3, 1, "", "kExtraBlack_Weight"], [76, 3, 1, "", "kExtraBold_Weight"], [76, 3, 1, "", "kExtraCondensed_Width"], [76, 3, 1, "", "kExtraExpanded_Width"], [76, 3, 1, "", "kExtraLight_Weight"], [76, 3, 1, "", "kInvisible_Weight"], [76, 3, 1, "", "kItalic_Slant"], [76, 3, 1, "", "kLight_Weight"], [76, 3, 1, "", "kMedium_Weight"], [76, 3, 1, "", "kNormal_Weight"], [76, 3, 1, "", "kNormal_Width"], [76, 3, 1, "", "kOblique_Slant"], [76, 3, 1, "", "kSemiBold_Weight"], [76, 3, 1, "", "kSemiCondensed_Width"], [76, 3, 1, "", "kSemiExpanded_Width"], [76, 3, 1, "", "kThin_Weight"], [76, 3, 1, "", "kUltraCondensed_Width"], [76, 3, 1, "", "kUltraExpanded_Width"], [76, 3, 1, "", "kUpright_Slant"], [76, 2, 1, "", "slant"], [76, 2, 1, "", "weight"], [76, 2, 1, "", "width"]], "skia.FontStyle.Slant": [[77, 2, 1, "", "__init__"], [77, 3, 1, "", "kItalic_Slant"], [77, 3, 1, "", "kOblique_Slant"], [77, 3, 1, "", "kUpright_Slant"], [77, 3, 1, "", "name"], [77, 3, 1, "", "value"]], "skia.FontStyle.Weight": [[78, 2, 1, "", "__init__"], [78, 3, 1, "", "kBlack_Weight"], [78, 3, 1, "", "kBold_Weight"], [78, 3, 1, "", "kExtraBlack_Weight"], [78, 3, 1, "", "kExtraBold_Weight"], [78, 3, 1, "", "kExtraLight_Weight"], [78, 3, 1, "", "kInvisible_Weight"], [78, 3, 1, "", "kLight_Weight"], [78, 3, 1, "", "kMedium_Weight"], [78, 3, 1, "", "kNormal_Weight"], [78, 3, 1, "", "kSemiBold_Weight"], [78, 3, 1, "", "kThin_Weight"], [78, 3, 1, "", "name"], [78, 3, 1, "", "value"]], "skia.FontStyle.Width": [[79, 2, 1, "", "__init__"], [79, 3, 1, "", "kCondensed_Width"], [79, 3, 1, "", "kExpanded_Width"], [79, 3, 1, "", "kExtraCondensed_Width"], [79, 3, 1, "", "kExtraExpanded_Width"], [79, 3, 1, "", "kNormal_Width"], [79, 3, 1, "", "kSemiCondensed_Width"], [79, 3, 1, "", "kSemiExpanded_Width"], [79, 3, 1, "", "kUltraCondensed_Width"], [79, 3, 1, "", "kUltraExpanded_Width"], [79, 3, 1, "", "name"], [79, 3, 1, "", "value"]], "skia.FontStyleSet": [[80, 2, 1, "", "CreateEmpty"], [80, 2, 1, "", "__init__"], [80, 2, 1, "", "count"], [80, 2, 1, "", "createTypeface"], [80, 2, 1, "", "getStyle"], [80, 2, 1, "", "matchStyle"], [80, 2, 1, "", "ref"], [80, 2, 1, "", "unique"], [80, 2, 1, "", "unref"]], "skia.GrBackendApi": [[81, 2, 1, "", "__init__"], [81, 3, 1, "", "kDawn"], [81, 3, 1, "", "kDirect3D"], [81, 3, 1, "", "kMetal"], [81, 3, 1, "", "kMock"], [81, 3, 1, "", "kOpenGL"], [81, 3, 1, "", "kOpenGL_GrBackend"], [81, 3, 1, "", "kVulkan"], [81, 3, 1, "", "name"], [81, 3, 1, "", "value"]], "skia.GrBackendFormat": [[82, 2, 1, "", "MakeGL"], [82, 2, 1, "", "MakeMock"], [82, 2, 1, "", "__init__"], [82, 2, 1, "", "asGLFormat"], [82, 2, 1, "", "asMockColorType"], [82, 2, 1, "", "asMockCompressionType"], [82, 2, 1, "", "backend"], [82, 2, 1, "", "channelMask"], [82, 2, 1, "", "isValid"], [82, 2, 1, "", "makeTexture2D"], [82, 2, 1, "", "textureType"]], "skia.GrBackendRenderTarget": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "backend"], [83, 2, 1, "", "dimensions"], [83, 2, 1, "", "getBackendFormat"], [83, 2, 1, "", "getGLFramebufferInfo"], [83, 2, 1, "", "getMockRenderTargetInfo"], [83, 2, 1, "", "height"], [83, 2, 1, "", "isFramebufferOnly"], [83, 2, 1, "", "isProtected"], [83, 2, 1, "", "isValid"], [83, 2, 1, "", "sampleCnt"], [83, 2, 1, "", "stencilBits"], [83, 2, 1, "", "width"]], "skia.GrBackendSemaphore": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "glSync"], [84, 2, 1, "", "initGL"], [84, 2, 1, "", "isInitialized"]], "skia.GrBackendSurfaceMutableState": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "backend"], [85, 2, 1, "", "isValid"]], "skia.GrBackendTexture": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "backend"], [86, 2, 1, "", "dimensions"], [86, 2, 1, "", "getBackendFormat"], [86, 2, 1, "", "getGLTextureInfo"], [86, 2, 1, "", "getMockTextureInfo"], [86, 2, 1, "", "glTextureParametersModified"], [86, 2, 1, "", "hasMipmaps"], [86, 2, 1, "", "height"], [86, 2, 1, "", "isProtected"], [86, 2, 1, "", "isSameTexture"], [86, 2, 1, "", "isValid"], [86, 2, 1, "", "setMutableState"], [86, 2, 1, "", "width"]], "skia.GrColorType": [[87, 2, 1, "", "__init__"], [87, 3, 1, "", "kABGR_4444"], [87, 3, 1, "", "kAlpha_16"], [87, 3, 1, "", "kAlpha_8"], [87, 3, 1, "", "kAlpha_8xxx"], [87, 3, 1, "", "kAlpha_F16"], [87, 3, 1, "", "kAlpha_F32xxx"], [87, 3, 1, "", "kBGRA_8888"], [87, 3, 1, "", "kBGR_565"], [87, 3, 1, "", "kGray_8"], [87, 3, 1, "", "kGray_8xxx"], [87, 3, 1, "", "kGray_F16"], [87, 3, 1, "", "kLast"], [87, 3, 1, "", "kRGBA_1010102"], [87, 3, 1, "", "kRGBA_16161616"], [87, 3, 1, "", "kRGBA_8888"], [87, 3, 1, "", "kRGBA_8888_SRGB"], [87, 3, 1, "", "kRGBA_F16"], [87, 3, 1, "", "kRGBA_F16_Clamped"], [87, 3, 1, "", "kRGBA_F32"], [87, 3, 1, "", "kRGB_888"], [87, 3, 1, "", "kRGB_888x"], [87, 3, 1, "", "kRG_1616"], [87, 3, 1, "", "kRG_88"], [87, 3, 1, "", "kRG_F16"], [87, 3, 1, "", "kR_16"], [87, 3, 1, "", "kR_8"], [87, 3, 1, "", "kR_F16"], [87, 3, 1, "", "kUnknown"], [87, 3, 1, "", "name"], [87, 3, 1, "", "value"]], "skia.GrContext": [[88, 2, 1, "", "ComputeImageSize"], [88, 2, 1, "", "MakeGL"], [88, 2, 1, "", "MakeMock"], [88, 2, 1, "", "__init__"], [88, 2, 1, "", "abandonContext"], [88, 2, 1, "", "abandoned"], [88, 2, 1, "", "asDirectContext"], [88, 2, 1, "", "backend"], [88, 2, 1, "", "checkAsyncWorkCompletion"], [88, 2, 1, "", "colorTypeSupportedAsImage"], [88, 2, 1, "", "colorTypeSupportedAsSurface"], [88, 2, 1, "", "compressedBackendFormat"], [88, 2, 1, "", "createBackendTexture"], [88, 2, 1, "", "createCompressedBackendTexture"], [88, 2, 1, "", "defaultBackendFormat"], [88, 2, 1, "", "deleteBackendTexture"], [88, 2, 1, "", "flush"], [88, 2, 1, "", "flushAndSubmit"], [88, 2, 1, "", "freeGpuResources"], [88, 2, 1, "", "getResourceCacheLimit"], [88, 2, 1, "", "getResourceCachePurgeableBytes"], [88, 2, 1, "", "getResourceCacheUsage"], [88, 2, 1, "", "maxRenderTargetSize"], [88, 2, 1, "", "maxSurfaceSampleCountForColorType"], [88, 2, 1, "", "maxTextureSize"], [88, 2, 1, "", "oomed"], [88, 2, 1, "", "precompileShader"], [88, 2, 1, "", "purgeResourcesNotUsedInMs"], [88, 2, 1, "", "purgeUnlockedResources"], [88, 2, 1, "", "ref"], [88, 2, 1, "", "releaseResourcesAndAbandonContext"], [88, 2, 1, "", "resetContext"], [88, 2, 1, "", "resetGLTextureBindings"], [88, 2, 1, "", "setBackendRenderTargetState"], [88, 2, 1, "", "setBackendTextureState"], [88, 2, 1, "", "setResourceCacheLimit"], [88, 2, 1, "", "storeVkPipelineCacheData"], [88, 2, 1, "", "submit"], [88, 2, 1, "", "supportsDistanceFieldText"], [88, 2, 1, "", "threadSafeProxy"], [88, 2, 1, "", "unique"], [88, 2, 1, "", "unref"], [88, 2, 1, "", "updateBackendTexture"], [88, 2, 1, "", "wait"]], "skia.GrContextOptions": [[89, 2, 1, "", "__init__"]], "skia.GrContext_Base": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "asDirectContext"], [90, 2, 1, "", "backend"], [90, 2, 1, "", "ref"], [90, 2, 1, "", "threadSafeProxy"], [90, 2, 1, "", "unique"], [90, 2, 1, "", "unref"]], "skia.GrDirectContext": [[91, 2, 1, "", "ComputeImageSize"], [91, 2, 1, "", "MakeGL"], [91, 2, 1, "", "MakeMock"], [91, 2, 1, "", "__init__"], [91, 2, 1, "", "abandonContext"], [91, 2, 1, "", "abandoned"], [91, 2, 1, "", "asDirectContext"], [91, 2, 1, "", "backend"], [91, 2, 1, "", "checkAsyncWorkCompletion"], [91, 2, 1, "", "colorTypeSupportedAsImage"], [91, 2, 1, "", "colorTypeSupportedAsSurface"], [91, 2, 1, "", "compressedBackendFormat"], [91, 2, 1, "", "createBackendTexture"], [91, 2, 1, "", "createCompressedBackendTexture"], [91, 2, 1, "", "defaultBackendFormat"], [91, 2, 1, "", "deleteBackendTexture"], [91, 2, 1, "", "flush"], [91, 2, 1, "", "flushAndSubmit"], [91, 2, 1, "", "freeGpuResources"], [91, 2, 1, "", "getResourceCacheLimit"], [91, 2, 1, "", "getResourceCachePurgeableBytes"], [91, 2, 1, "", "getResourceCacheUsage"], [91, 2, 1, "", "maxRenderTargetSize"], [91, 2, 1, "", "maxSurfaceSampleCountForColorType"], [91, 2, 1, "", "maxTextureSize"], [91, 2, 1, "", "oomed"], [91, 2, 1, "", "precompileShader"], [91, 2, 1, "", "purgeResourcesNotUsedInMs"], [91, 2, 1, "", "purgeUnlockedResources"], [91, 2, 1, "", "ref"], [91, 2, 1, "", "releaseResourcesAndAbandonContext"], [91, 2, 1, "", "resetContext"], [91, 2, 1, "", "resetGLTextureBindings"], [91, 2, 1, "", "setBackendRenderTargetState"], [91, 2, 1, "", "setBackendTextureState"], [91, 2, 1, "", "setResourceCacheLimit"], [91, 2, 1, "", "storeVkPipelineCacheData"], [91, 2, 1, "", "submit"], [91, 2, 1, "", "supportsDistanceFieldText"], [91, 2, 1, "", "threadSafeProxy"], [91, 2, 1, "", "unique"], [91, 2, 1, "", "unref"], [91, 2, 1, "", "updateBackendTexture"], [91, 2, 1, "", "wait"]], "skia.GrFlushInfo": [[92, 2, 1, "", "__init__"], [92, 3, 1, "", "fNumSemaphores"], [92, 3, 1, "", "semaphores"]], "skia.GrGLBackendState": [[93, 2, 1, "", "__init__"], [93, 3, 1, "", "kALL_GrGLBackendState"], [93, 3, 1, "", "kBlend_GrGLBackendState"], [93, 3, 1, "", "kFixedFunction_GrGLBackendState"], [93, 3, 1, "", "kMSAAEnable_GrGLBackendState"], [93, 3, 1, "", "kMisc_GrGLBackendState"], [93, 3, 1, "", "kPixelStore_GrGLBackendState"], [93, 3, 1, "", "kProgram_GrGLBackendState"], [93, 3, 1, "", "kRenderTarget_GrGLBackendState"], [93, 3, 1, "", "kStencil_GrGLBackendState"], [93, 3, 1, "", "kTextureBinding_GrGLBackendState"], [93, 3, 1, "", "kVertex_GrGLBackendState"], [93, 3, 1, "", "kView_GrGLBackendState"], [93, 3, 1, "", "name"], [93, 3, 1, "", "value"]], "skia.GrGLFormat": [[94, 2, 1, "", "__init__"], [94, 3, 1, "", "kALPHA8"], [94, 3, 1, "", "kBGRA8"], [94, 3, 1, "", "kCOMPRESSED_ETC1_RGB8"], [94, 3, 1, "", "kCOMPRESSED_RGB8_BC1"], [94, 3, 1, "", "kCOMPRESSED_RGB8_ETC2"], [94, 3, 1, "", "kCOMPRESSED_RGBA8_BC1"], [94, 3, 1, "", "kLUMINANCE16F"], [94, 3, 1, "", "kLUMINANCE8"], [94, 3, 1, "", "kLast"], [94, 3, 1, "", "kR16"], [94, 3, 1, "", "kR16F"], [94, 3, 1, "", "kR8"], [94, 3, 1, "", "kRG16"], [94, 3, 1, "", "kRG16F"], [94, 3, 1, "", "kRG8"], [94, 3, 1, "", "kRGB10_A2"], [94, 3, 1, "", "kRGB565"], [94, 3, 1, "", "kRGB8"], [94, 3, 1, "", "kRGBA16"], [94, 3, 1, "", "kRGBA16F"], [94, 3, 1, "", "kRGBA4"], [94, 3, 1, "", "kRGBA8"], [94, 3, 1, "", "kSRGB8_ALPHA8"], [94, 3, 1, "", "kUnknown"], [94, 3, 1, "", "name"], [94, 3, 1, "", "value"]], "skia.GrGLFramebufferInfo": [[95, 2, 1, "", "__init__"], [95, 3, 1, "", "fFBOID"], [95, 3, 1, "", "fFormat"]], "skia.GrGLInterface": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "ref"], [96, 2, 1, "", "unique"], [96, 2, 1, "", "unref"]], "skia.GrGLTextureInfo": [[97, 2, 1, "", "__init__"], [97, 3, 1, "", "fFormat"], [97, 3, 1, "", "fID"], [97, 3, 1, "", "fTarget"]], "skia.GrImageContext": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "asDirectContext"], [98, 2, 1, "", "backend"], [98, 2, 1, "", "ref"], [98, 2, 1, "", "threadSafeProxy"], [98, 2, 1, "", "unique"], [98, 2, 1, "", "unref"]], "skia.GrMipmapped": [[99, 2, 1, "", "__init__"], [99, 3, 1, "", "kNo"], [99, 3, 1, "", "kYes"], [99, 3, 1, "", "name"], [99, 3, 1, "", "value"]], "skia.GrMockOptions": [[100, 2, 1, "", "__init__"]], "skia.GrMockRenderTargetInfo": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "colorType"], [101, 2, 1, "", "getBackendFormat"]], "skia.GrMockTextureInfo": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "colorType"], [102, 2, 1, "", "compressionType"], [102, 2, 1, "", "getBackendFormat"], [102, 2, 1, "", "id"]], "skia.GrProtected": [[103, 2, 1, "", "__init__"], [103, 3, 1, "", "kNo"], [103, 3, 1, "", "kYes"], [103, 3, 1, "", "name"], [103, 3, 1, "", "value"]], "skia.GrRecordingContext": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "abandoned"], [104, 2, 1, "", "asDirectContext"], [104, 2, 1, "", "backend"], [104, 2, 1, "", "colorTypeSupportedAsImage"], [104, 2, 1, "", "colorTypeSupportedAsSurface"], [104, 2, 1, "", "defaultBackendFormat"], [104, 2, 1, "", "maxRenderTargetSize"], [104, 2, 1, "", "maxSurfaceSampleCountForColorType"], [104, 2, 1, "", "maxTextureSize"], [104, 2, 1, "", "ref"], [104, 2, 1, "", "threadSafeProxy"], [104, 2, 1, "", "unique"], [104, 2, 1, "", "unref"]], "skia.GrRenderable": [[105, 2, 1, "", "__init__"], [105, 3, 1, "", "kNo"], [105, 3, 1, "", "kYes"], [105, 3, 1, "", "name"], [105, 3, 1, "", "value"]], "skia.GrSemaphoresSubmitted": [[106, 2, 1, "", "__init__"], [106, 3, 1, "", "kNo"], [106, 3, 1, "", "kYes"], [106, 3, 1, "", "name"], [106, 3, 1, "", "value"]], "skia.GrSurfaceOrigin": [[107, 2, 1, "", "__init__"], [107, 3, 1, "", "kBottomLeft_GrSurfaceOrigin"], [107, 3, 1, "", "kTopLeft_GrSurfaceOrigin"], [107, 3, 1, "", "name"], [107, 3, 1, "", "value"]], "skia.GrTextureType": [[108, 2, 1, "", "__init__"], [108, 3, 1, "", "k2D"], [108, 3, 1, "", "kExternal"], [108, 3, 1, "", "kNone"], [108, 3, 1, "", "kRectangle"], [108, 3, 1, "", "name"], [108, 3, 1, "", "value"]], "skia.GrVkAlloc": [[109, 2, 1, "", "__init__"]], "skia.GrVkBackendContext": [[110, 2, 1, "", "__init__"]], "skia.GrVkDrawableInfo": [[111, 2, 1, "", "__init__"]], "skia.GrVkExtensionFlags": [[112, 2, 1, "", "__init__"], [112, 3, 1, "", "kEXT_debug_report_GrVkExtensionFlag"], [112, 3, 1, "", "kKHR_android_surface_GrVkExtensionFlag"], [112, 3, 1, "", "kKHR_surface_GrVkExtensionFlag"], [112, 3, 1, "", "kKHR_swapchain_GrVkExtensionFlag"], [112, 3, 1, "", "kKHR_win32_surface_GrVkExtensionFlag"], [112, 3, 1, "", "kKHR_xcb_surface_GrVkExtensionFlag"], [112, 3, 1, "", "kNV_glsl_shader_GrVkExtensionFlag"], [112, 3, 1, "", "name"], [112, 3, 1, "", "value"]], "skia.GrVkFeatureFlags": [[113, 2, 1, "", "__init__"], [113, 3, 1, "", "kDualSrcBlend_GrVkFeatureFlag"], [113, 3, 1, "", "kGeometryShader_GrVkFeatureFlag"], [113, 3, 1, "", "kSampleRateShading_GrVkFeatureFlag"], [113, 3, 1, "", "name"], [113, 3, 1, "", "value"]], "skia.GrVkImageInfo": [[114, 2, 1, "", "__init__"], [114, 3, 1, "", "fAlloc"], [114, 3, 1, "", "fCurrentQueueFamily"], [114, 3, 1, "", "fLevelCount"], [114, 3, 1, "", "fProtected"], [114, 3, 1, "", "fSharingMode"], [114, 3, 1, "", "fYcbcrConversionInfo"]], "skia.GrVkYcbcrConversionInfo": [[115, 2, 1, "", "__init__"]], "skia.GradientShader": [[117, 1, 1, "", "Flags"], [116, 2, 1, "", "MakeLinear"], [116, 2, 1, "", "MakeRadial"], [116, 2, 1, "", "MakeSweep"], [116, 2, 1, "", "MakeTwoPointConical"], [116, 2, 1, "", "__init__"], [116, 3, 1, "", "kInterpolateColorsInPremul_Flag"]], "skia.GradientShader.Flags": [[117, 2, 1, "", "__init__"], [117, 3, 1, "", "kInterpolateColorsInPremul_Flag"], [117, 3, 1, "", "name"], [117, 3, 1, "", "value"]], "skia.HighContrastConfig": [[119, 1, 1, "", "InvertStyle"], [118, 2, 1, "", "__init__"], [118, 3, 1, "", "fContrast"], [118, 3, 1, "", "fGrayscale"], [118, 3, 1, "", "fInvertStyle"], [118, 2, 1, "", "isValid"], [118, 3, 1, "", "kInvertBrightness"], [118, 3, 1, "", "kInvertLightness"], [118, 3, 1, "", "kLast"], [118, 3, 1, "", "kNoInvert"]], "skia.HighContrastConfig.InvertStyle": [[119, 2, 1, "", "__init__"], [119, 3, 1, "", "kInvertBrightness"], [119, 3, 1, "", "kInvertLightness"], [119, 3, 1, "", "kLast"], [119, 3, 1, "", "kNoInvert"], [119, 3, 1, "", "name"], [119, 3, 1, "", "value"]], "skia.HighContrastFilter": [[120, 2, 1, "", "Make"], [120, 2, 1, "", "__init__"]], "skia.IPoint": [[121, 2, 1, "", "Make"], [121, 2, 1, "", "__init__"], [121, 2, 1, "", "equals"], [121, 3, 1, "", "fX"], [121, 3, 1, "", "fY"], [121, 2, 1, "", "isZero"], [121, 2, 1, "", "set"], [121, 2, 1, "", "x"], [121, 2, 1, "", "y"]], "skia.IRect": [[122, 2, 1, "", "Intersects"], [122, 2, 1, "", "MakeEmpty"], [122, 2, 1, "", "MakeLTRB"], [122, 2, 1, "", "MakeSize"], [122, 2, 1, "", "MakeWH"], [122, 2, 1, "", "MakeXYWH"], [122, 2, 1, "", "__init__"], [122, 2, 1, "", "adjust"], [122, 2, 1, "", "bottom"], [122, 2, 1, "", "contains"], [122, 2, 1, "", "containsNoEmptyCheck"], [122, 3, 1, "", "fBottom"], [122, 3, 1, "", "fLeft"], [122, 3, 1, "", "fRight"], [122, 3, 1, "", "fTop"], [122, 2, 1, "", "height"], [122, 2, 1, "", "height64"], [122, 2, 1, "", "inset"], [122, 2, 1, "", "intersect"], [122, 2, 1, "", "isEmpty"], [122, 2, 1, "", "isEmpty64"], [122, 2, 1, "", "join"], [122, 2, 1, "", "left"], [122, 2, 1, "", "makeInset"], [122, 2, 1, "", "makeOffset"], [122, 2, 1, "", "makeOutset"], [122, 2, 1, "", "makeSorted"], [122, 2, 1, "", "offset"], [122, 2, 1, "", "offsetTo"], [122, 2, 1, "", "outset"], [122, 2, 1, "", "right"], [122, 2, 1, "", "setEmpty"], [122, 2, 1, "", "setLTRB"], [122, 2, 1, "", "setWH"], [122, 2, 1, "", "setXYWH"], [122, 2, 1, "", "size"], [122, 2, 1, "", "sort"], [122, 2, 1, "", "top"], [122, 2, 1, "", "topLeft"], [122, 2, 1, "", "width"], [122, 2, 1, "", "width64"], [122, 2, 1, "", "x"], [122, 2, 1, "", "y"]], "skia.ISize": [[123, 2, 1, "", "Make"], [123, 2, 1, "", "MakeEmpty"], [123, 2, 1, "", "__init__"], [123, 2, 1, "", "area"], [123, 2, 1, "", "equals"], [123, 3, 1, "", "fHeight"], [123, 3, 1, "", "fWidth"], [123, 2, 1, "", "height"], [123, 2, 1, "", "isEmpty"], [123, 2, 1, "", "isZero"], [123, 2, 1, "", "set"], [123, 2, 1, "", "setEmpty"], [123, 2, 1, "", "width"]], "skia.Image": [[125, 1, 1, "", "BitDepth"], [126, 1, 1, "", "CachingHint"], [127, 1, 1, "", "CompressionType"], [128, 1, 1, "", "LegacyBitmapMode"], [124, 2, 1, "", "MakeBackendTextureFromImage"], [124, 2, 1, "", "MakeFromBitmap"], [124, 2, 1, "", "MakeFromEncoded"], [124, 2, 1, "", "MakeFromPicture"], [124, 2, 1, "", "MakeFromRaster"], [124, 2, 1, "", "MakeFromTexture"], [124, 2, 1, "", "MakeRasterCopy"], [124, 2, 1, "", "MakeRasterData"], [124, 2, 1, "", "__init__"], [124, 2, 1, "", "alphaType"], [124, 2, 1, "", "asLegacyBitmap"], [124, 2, 1, "", "bitmap"], [124, 2, 1, "", "bounds"], [124, 2, 1, "", "colorSpace"], [124, 2, 1, "", "colorType"], [124, 2, 1, "", "convert"], [124, 2, 1, "", "dimensions"], [124, 2, 1, "", "encodeToData"], [124, 2, 1, "", "flush"], [124, 2, 1, "", "flushAndSubmit"], [124, 2, 1, "", "fromarray"], [124, 2, 1, "", "frombytes"], [124, 2, 1, "", "getBackendTexture"], [124, 2, 1, "", "hasMipmaps"], [124, 2, 1, "", "height"], [124, 2, 1, "", "imageInfo"], [124, 2, 1, "", "isAlphaOnly"], [124, 2, 1, "", "isLazyGenerated"], [124, 2, 1, "", "isOpaque"], [124, 2, 1, "", "isTextureBacked"], [124, 2, 1, "", "isValid"], [124, 3, 1, "", "kAllow_CachingHint"], [124, 3, 1, "", "kBC1_RGB8_UNORM"], [124, 3, 1, "", "kBC1_RGBA8_UNORM"], [124, 3, 1, "", "kDisallow_CachingHint"], [124, 3, 1, "", "kETC2_RGB8_UNORM"], [124, 3, 1, "", "kF16"], [124, 3, 1, "", "kLast"], [124, 3, 1, "", "kNone"], [124, 3, 1, "", "kRO_LegacyBitmapMode"], [124, 3, 1, "", "kU8"], [124, 2, 1, "", "makeColorSpace"], [124, 2, 1, "", "makeColorTypeAndColorSpace"], [124, 2, 1, "", "makeNonTextureImage"], [124, 2, 1, "", "makeRasterImage"], [124, 2, 1, "", "makeShader"], [124, 2, 1, "", "makeSubset"], [124, 2, 1, "", "makeTextureImage"], [124, 2, 1, "", "makeWithFilter"], [124, 2, 1, "", "open"], [124, 2, 1, "", "peekPixels"], [124, 2, 1, "", "readPixels"], [124, 2, 1, "", "ref"], [124, 2, 1, "", "refColorSpace"], [124, 2, 1, "", "refEncodedData"], [124, 2, 1, "", "reinterpretColorSpace"], [124, 2, 1, "", "resize"], [124, 2, 1, "", "save"], [124, 2, 1, "", "scalePixels"], [124, 2, 1, "", "toarray"], [124, 2, 1, "", "tobytes"], [124, 2, 1, "", "unique"], [124, 2, 1, "", "uniqueID"], [124, 2, 1, "", "unref"], [124, 2, 1, "", "width"], [124, 2, 1, "", "withDefaultMipmaps"]], "skia.Image.BitDepth": [[125, 2, 1, "", "__init__"], [125, 3, 1, "", "kF16"], [125, 3, 1, "", "kU8"], [125, 3, 1, "", "name"], [125, 3, 1, "", "value"]], "skia.Image.CachingHint": [[126, 2, 1, "", "__init__"], [126, 3, 1, "", "kAllow_CachingHint"], [126, 3, 1, "", "kDisallow_CachingHint"], [126, 3, 1, "", "name"], [126, 3, 1, "", "value"]], "skia.Image.CompressionType": [[127, 2, 1, "", "__init__"], [127, 3, 1, "", "kBC1_RGB8_UNORM"], [127, 3, 1, "", "kBC1_RGBA8_UNORM"], [127, 3, 1, "", "kETC2_RGB8_UNORM"], [127, 3, 1, "", "kLast"], [127, 3, 1, "", "kNone"], [127, 3, 1, "", "name"], [127, 3, 1, "", "value"]], "skia.Image.LegacyBitmapMode": [[128, 2, 1, "", "__init__"], [128, 3, 1, "", "kRO_LegacyBitmapMode"], [128, 3, 1, "", "name"], [128, 3, 1, "", "value"]], "skia.ImageFilter": [[130, 1, 1, "", "CropRect"], [129, 2, 1, "", "Deserialize"], [131, 1, 1, "", "MapDirection"], [132, 1, 1, "", "Type"], [129, 2, 1, "", "__init__"], [129, 2, 1, "", "asAColorFilter"], [129, 2, 1, "", "asColorFilter"], [129, 2, 1, "", "canComputeFastBounds"], [129, 2, 1, "", "computeFastBounds"], [129, 2, 1, "", "countInputs"], [129, 2, 1, "", "filterBounds"], [129, 2, 1, "", "getFlattenableType"], [129, 2, 1, "", "getInput"], [129, 2, 1, "", "getTypeName"], [129, 2, 1, "", "isColorFilterNode"], [129, 3, 1, "", "kColorFilter_Type"], [129, 3, 1, "", "kDrawLooper_Type"], [129, 3, 1, "", "kDrawable_Type"], [129, 3, 1, "", "kForward_MapDirection"], [129, 3, 1, "", "kImageFilter_Type"], [129, 3, 1, "", "kMaskFilter_Type"], [129, 3, 1, "", "kPathEffect_Type"], [129, 3, 1, "", "kReverse_MapDirection"], [129, 2, 1, "", "makeWithLocalMatrix"], [129, 2, 1, "", "ref"], [129, 2, 1, "", "serialize"], [129, 2, 1, "", "unique"], [129, 2, 1, "", "unref"]], "skia.ImageFilter.CropRect": [[130, 2, 1, "", "__init__"]], "skia.ImageFilter.MapDirection": [[131, 2, 1, "", "__init__"], [131, 3, 1, "", "kForward_MapDirection"], [131, 3, 1, "", "kReverse_MapDirection"], [131, 3, 1, "", "name"], [131, 3, 1, "", "value"]], "skia.ImageFilter.Type": [[132, 2, 1, "", "__init__"], [132, 3, 1, "", "kColorFilter_Type"], [132, 3, 1, "", "kDrawLooper_Type"], [132, 3, 1, "", "kDrawable_Type"], [132, 3, 1, "", "kImageFilter_Type"], [132, 3, 1, "", "kMaskFilter_Type"], [132, 3, 1, "", "kPathEffect_Type"], [132, 3, 1, "", "name"], [132, 3, 1, "", "value"]], "skia.ImageFilters": [[133, 2, 1, "", "Arithmetic"], [133, 2, 1, "", "Blur"], [133, 2, 1, "", "ColorFilter"], [133, 2, 1, "", "Compose"], [133, 2, 1, "", "Dilate"], [133, 2, 1, "", "DisplacementMap"], [133, 2, 1, "", "DistantLitDiffuse"], [133, 2, 1, "", "DistantLitSpecular"], [133, 2, 1, "", "DropShadow"], [133, 2, 1, "", "DropShadowOnly"], [133, 2, 1, "", "Erode"], [133, 2, 1, "", "Image"], [133, 2, 1, "", "Magnifier"], [133, 2, 1, "", "MatrixConvolution"], [133, 2, 1, "", "MatrixTransform"], [133, 2, 1, "", "Merge"], [133, 2, 1, "", "Offset"], [133, 2, 1, "", "Picture"], [133, 2, 1, "", "PointLitDiffuse"], [133, 2, 1, "", "PointLitSpecular"], [133, 2, 1, "", "SpotLitDiffuse"], [133, 2, 1, "", "SpotLitSpecular"], [133, 2, 1, "", "Tile"], [133, 2, 1, "", "__init__"]], "skia.ImageInfo": [[134, 2, 1, "", "ByteSizeOverflowed"], [134, 2, 1, "", "Make"], [134, 2, 1, "", "MakeA8"], [134, 2, 1, "", "MakeN32"], [134, 2, 1, "", "MakeN32Premul"], [134, 2, 1, "", "MakeS32"], [134, 2, 1, "", "MakeUnknown"], [134, 2, 1, "", "__init__"], [134, 2, 1, "", "alphaType"], [134, 2, 1, "", "bounds"], [134, 2, 1, "", "bytesPerPixel"], [134, 2, 1, "", "colorInfo"], [134, 2, 1, "", "colorSpace"], [134, 2, 1, "", "colorType"], [134, 2, 1, "", "computeByteSize"], [134, 2, 1, "", "computeMinByteSize"], [134, 2, 1, "", "computeOffset"], [134, 2, 1, "", "dimensions"], [134, 2, 1, "", "gammaCloseToSRGB"], [134, 2, 1, "", "height"], [134, 2, 1, "", "isEmpty"], [134, 2, 1, "", "isOpaque"], [134, 2, 1, "", "makeAlphaType"], [134, 2, 1, "", "makeColorSpace"], [134, 2, 1, "", "makeColorType"], [134, 2, 1, "", "makeDimensions"], [134, 2, 1, "", "makeWH"], [134, 2, 1, "", "minRowBytes"], [134, 2, 1, "", "minRowBytes64"], [134, 2, 1, "", "refColorSpace"], [134, 2, 1, "", "reset"], [134, 2, 1, "", "shiftPerPixel"], [134, 2, 1, "", "validRowBytes"], [134, 2, 1, "", "width"]], "skia.Line2DPathEffect": [[135, 2, 1, "", "Make"], [135, 2, 1, "", "__init__"]], "skia.LumaColorFilter": [[136, 2, 1, "", "Make"], [136, 2, 1, "", "__init__"]], "skia.M44": [[137, 2, 1, "", "__init__"]], "skia.MaskFilter": [[138, 2, 1, "", "Deserialize"], [138, 2, 1, "", "MakeBlur"], [139, 1, 1, "", "Type"], [138, 2, 1, "", "__init__"], [138, 2, 1, "", "getFlattenableType"], [138, 2, 1, "", "getTypeName"], [138, 3, 1, "", "kColorFilter_Type"], [138, 3, 1, "", "kDrawLooper_Type"], [138, 3, 1, "", "kDrawable_Type"], [138, 3, 1, "", "kImageFilter_Type"], [138, 3, 1, "", "kMaskFilter_Type"], [138, 3, 1, "", "kPathEffect_Type"], [138, 2, 1, "", "ref"], [138, 2, 1, "", "serialize"], [138, 2, 1, "", "unique"], [138, 2, 1, "", "unref"]], "skia.MaskFilter.Type": [[139, 2, 1, "", "__init__"], [139, 3, 1, "", "kColorFilter_Type"], [139, 3, 1, "", "kDrawLooper_Type"], [139, 3, 1, "", "kDrawable_Type"], [139, 3, 1, "", "kImageFilter_Type"], [139, 3, 1, "", "kMaskFilter_Type"], [139, 3, 1, "", "kPathEffect_Type"], [139, 3, 1, "", "name"], [139, 3, 1, "", "value"]], "skia.Matrix": [[140, 2, 1, "", "Concat"], [140, 2, 1, "", "I"], [140, 2, 1, "", "InvalidMatrix"], [140, 2, 1, "", "MakeAll"], [140, 2, 1, "", "MakeRectToRect"], [140, 2, 1, "", "RotateDeg"], [140, 2, 1, "", "RotateRad"], [140, 2, 1, "", "Scale"], [141, 1, 1, "", "ScaleToFit"], [140, 2, 1, "", "SetAffineIdentity"], [140, 2, 1, "", "Translate"], [142, 1, 1, "", "TypeMask"], [140, 2, 1, "", "__init__"], [140, 2, 1, "", "asAffine"], [140, 2, 1, "", "decomposeScale"], [140, 2, 1, "", "dirtyMatrixTypeCache"], [140, 2, 1, "", "dump"], [140, 2, 1, "", "get"], [140, 2, 1, "", "get9"], [140, 2, 1, "", "getMaxScale"], [140, 2, 1, "", "getMinMaxScales"], [140, 2, 1, "", "getMinScale"], [140, 2, 1, "", "getPerspX"], [140, 2, 1, "", "getPerspY"], [140, 2, 1, "", "getScaleX"], [140, 2, 1, "", "getScaleY"], [140, 2, 1, "", "getSkewX"], [140, 2, 1, "", "getSkewY"], [140, 2, 1, "", "getTranslateX"], [140, 2, 1, "", "getTranslateY"], [140, 2, 1, "", "getType"], [140, 2, 1, "", "hasPerspective"], [140, 2, 1, "", "invert"], [140, 2, 1, "", "isFinite"], [140, 2, 1, "", "isIdentity"], [140, 2, 1, "", "isScaleTranslate"], [140, 2, 1, "", "isSimilarity"], [140, 2, 1, "", "isTranslate"], [140, 3, 1, "", "kAScaleX"], [140, 3, 1, "", "kAScaleY"], [140, 3, 1, "", "kASkewX"], [140, 3, 1, "", "kASkewY"], [140, 3, 1, "", "kATransX"], [140, 3, 1, "", "kATransY"], [140, 3, 1, "", "kAffine_Mask"], [140, 3, 1, "", "kCenter_ScaleToFit"], [140, 3, 1, "", "kEnd_ScaleToFit"], [140, 3, 1, "", "kFill_ScaleToFit"], [140, 3, 1, "", "kIdentity_Mask"], [140, 3, 1, "", "kMPersp0"], [140, 3, 1, "", "kMPersp1"], [140, 3, 1, "", "kMPersp2"], [140, 3, 1, "", "kMScaleX"], [140, 3, 1, "", "kMScaleY"], [140, 3, 1, "", "kMSkewX"], [140, 3, 1, "", "kMSkewY"], [140, 3, 1, "", "kMTransX"], [140, 3, 1, "", "kMTransY"], [140, 3, 1, "", "kPerspective_Mask"], [140, 3, 1, "", "kScale_Mask"], [140, 3, 1, "", "kStart_ScaleToFit"], [140, 3, 1, "", "kTranslate_Mask"], [140, 2, 1, "", "mapHomogeneousPoints"], [140, 2, 1, "", "mapPoints"], [140, 2, 1, "", "mapRadius"], [140, 2, 1, "", "mapRect"], [140, 2, 1, "", "mapRectScaleTranslate"], [140, 2, 1, "", "mapRectToQuad"], [140, 2, 1, "", "mapVector"], [140, 2, 1, "", "mapVectors"], [140, 2, 1, "", "mapXY"], [140, 2, 1, "", "normalizePerspective"], [140, 2, 1, "", "postConcat"], [140, 2, 1, "", "postRotate"], [140, 2, 1, "", "postScale"], [140, 2, 1, "", "postSkew"], [140, 2, 1, "", "postTranslate"], [140, 2, 1, "", "preConcat"], [140, 2, 1, "", "preRotate"], [140, 2, 1, "", "preScale"], [140, 2, 1, "", "preSkew"], [140, 2, 1, "", "preTranslate"], [140, 2, 1, "", "preservesAxisAlignment"], [140, 2, 1, "", "preservesRightAngles"], [140, 2, 1, "", "rc"], [140, 2, 1, "", "rectStaysRect"], [140, 2, 1, "", "reset"], [140, 2, 1, "", "set"], [140, 2, 1, "", "set9"], [140, 2, 1, "", "setAffine"], [140, 2, 1, "", "setAll"], [140, 2, 1, "", "setConcat"], [140, 2, 1, "", "setIdentity"], [140, 2, 1, "", "setPerspX"], [140, 2, 1, "", "setPerspY"], [140, 2, 1, "", "setPolyToPoly"], [140, 2, 1, "", "setRSXform"], [140, 2, 1, "", "setRectToRect"], [140, 2, 1, "", "setRotate"], [140, 2, 1, "", "setScale"], [140, 2, 1, "", "setScaleTranslate"], [140, 2, 1, "", "setScaleX"], [140, 2, 1, "", "setScaleY"], [140, 2, 1, "", "setSinCos"], [140, 2, 1, "", "setSkew"], [140, 2, 1, "", "setSkewX"], [140, 2, 1, "", "setSkewY"], [140, 2, 1, "", "setTranslate"], [140, 2, 1, "", "setTranslateX"], [140, 2, 1, "", "setTranslateY"]], "skia.Matrix.ScaleToFit": [[141, 2, 1, "", "__init__"], [141, 3, 1, "", "kCenter_ScaleToFit"], [141, 3, 1, "", "kEnd_ScaleToFit"], [141, 3, 1, "", "kFill_ScaleToFit"], [141, 3, 1, "", "kStart_ScaleToFit"], [141, 3, 1, "", "name"], [141, 3, 1, "", "value"]], "skia.Matrix.TypeMask": [[142, 2, 1, "", "__init__"], [142, 3, 1, "", "kAffine_Mask"], [142, 3, 1, "", "kIdentity_Mask"], [142, 3, 1, "", "kPerspective_Mask"], [142, 3, 1, "", "kScale_Mask"], [142, 3, 1, "", "kTranslate_Mask"], [142, 3, 1, "", "name"], [142, 3, 1, "", "value"]], "skia.MatrixPathEffect": [[143, 2, 1, "", "Make"], [143, 2, 1, "", "MakeTranslate"], [143, 2, 1, "", "__init__"]], "skia.MemoryStream": [[144, 2, 1, "", "Make"], [144, 2, 1, "", "MakeCopy"], [144, 2, 1, "", "MakeDirect"], [144, 2, 1, "", "MakeFromFile"], [144, 2, 1, "", "__init__"], [144, 2, 1, "", "asData"], [144, 2, 1, "", "duplicate"], [144, 2, 1, "", "fork"], [144, 2, 1, "", "getAtPos"], [144, 2, 1, "", "getLength"], [144, 2, 1, "", "getMemoryBase"], [144, 2, 1, "", "getPosition"], [144, 2, 1, "", "hasLength"], [144, 2, 1, "", "hasPosition"], [144, 2, 1, "", "isAtEnd"], [144, 2, 1, "", "move"], [144, 2, 1, "", "peek"], [144, 2, 1, "", "read"], [144, 2, 1, "", "readBool"], [144, 2, 1, "", "readPackedUInt"], [144, 2, 1, "", "readS16"], [144, 2, 1, "", "readS32"], [144, 2, 1, "", "readS8"], [144, 2, 1, "", "readScalar"], [144, 2, 1, "", "readU16"], [144, 2, 1, "", "readU32"], [144, 2, 1, "", "readU8"], [144, 2, 1, "", "rewind"], [144, 2, 1, "", "seek"], [144, 2, 1, "", "setData"], [144, 2, 1, "", "setMemory"], [144, 2, 1, "", "skip"], [144, 2, 1, "", "skipToAlign4"]], "skia.MergePathEffect": [[145, 2, 1, "", "Make"], [145, 2, 1, "", "__init__"]], "skia.MipmapBuilder": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "attachTo"], [146, 2, 1, "", "countLevels"], [146, 2, 1, "", "level"]], "skia.NullWStream": [[147, 2, 1, "", "SizeOfPackedUInt"], [147, 2, 1, "", "__init__"], [147, 2, 1, "", "bytesWritten"], [147, 2, 1, "", "flush"], [147, 2, 1, "", "newline"], [147, 2, 1, "", "write"], [147, 2, 1, "", "write16"], [147, 2, 1, "", "write32"], [147, 2, 1, "", "write8"], [147, 2, 1, "", "writeBigDecAsText"], [147, 2, 1, "", "writeBool"], [147, 2, 1, "", "writeDecAsText"], [147, 2, 1, "", "writeHexAsText"], [147, 2, 1, "", "writePackedUInt"], [147, 2, 1, "", "writeScalar"], [147, 2, 1, "", "writeScalarAsText"], [147, 2, 1, "", "writeStream"], [147, 2, 1, "", "writeText"]], "skia.OpBuilder": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "add"], [148, 2, 1, "", "resolve"]], "skia.OverdrawColorFilter": [[149, 2, 1, "", "MakeWithColors"], [149, 2, 1, "", "__init__"], [149, 3, 1, "", "kNumColors"]], "skia.PDF": [[151, 1, 1, "", "AttributeList"], [150, 2, 1, "", "MakeDocument"], [152, 1, 1, "", "Metadata"], [150, 2, 1, "", "SetNodeId"], [153, 1, 1, "", "StructureElementNode"], [150, 2, 1, "", "__init__"]], "skia.PDF.AttributeList": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "appendFloat"], [151, 2, 1, "", "appendFloatArray"], [151, 2, 1, "", "appendInt"], [151, 2, 1, "", "appendString"], [151, 2, 1, "", "appendStringArray"]], "skia.PDF.Metadata": [[152, 2, 1, "", "__init__"], [152, 3, 1, "", "fAuthor"], [152, 3, 1, "", "fCreator"], [152, 3, 1, "", "fEncodingQuality"], [152, 3, 1, "", "fKeywords"], [152, 3, 1, "", "fPDFA"], [152, 3, 1, "", "fProducer"], [152, 3, 1, "", "fRasterDPI"], [152, 3, 1, "", "fStructureElementTreeRoot"], [152, 3, 1, "", "fSubject"], [152, 3, 1, "", "fTitle"]], "skia.PDF.StructureElementNode": [[153, 2, 1, "", "__init__"], [153, 3, 1, "", "fAdditionalNodeIds"], [153, 3, 1, "", "fAlt"], [153, 3, 1, "", "fAttributes"], [153, 3, 1, "", "fLang"], [153, 3, 1, "", "fNodeId"], [153, 3, 1, "", "fTypeString"]], "skia.Paint": [[155, 1, 1, "", "Cap"], [156, 1, 1, "", "Join"], [157, 1, 1, "", "Style"], [154, 2, 1, "", "__init__"], [154, 2, 1, "", "canComputeFastBounds"], [154, 2, 1, "", "computeFastBounds"], [154, 2, 1, "", "computeFastStrokeBounds"], [154, 2, 1, "", "doComputeFastBounds"], [154, 2, 1, "", "getAlpha"], [154, 2, 1, "", "getAlphaf"], [154, 2, 1, "", "getColor"], [154, 2, 1, "", "getColor4f"], [154, 2, 1, "", "getColorFilter"], [154, 2, 1, "", "getFillPath"], [154, 2, 1, "", "getImageFilter"], [154, 2, 1, "", "getMaskFilter"], [154, 2, 1, "", "getPathEffect"], [154, 2, 1, "", "getShader"], [154, 2, 1, "", "getStrokeCap"], [154, 2, 1, "", "getStrokeJoin"], [154, 2, 1, "", "getStrokeMiter"], [154, 2, 1, "", "getStrokeWidth"], [154, 2, 1, "", "getStyle"], [154, 2, 1, "", "isAntiAlias"], [154, 2, 1, "", "isDither"], [154, 2, 1, "", "isSrcOver"], [154, 3, 1, "", "kBevel_Join"], [154, 3, 1, "", "kButt_Cap"], [154, 3, 1, "", "kCapCount"], [154, 3, 1, "", "kDefault_Cap"], [154, 3, 1, "", "kDefault_Join"], [154, 3, 1, "", "kFill_Style"], [154, 3, 1, "", "kJoinCount"], [154, 3, 1, "", "kLast_Cap"], [154, 3, 1, "", "kLast_Join"], [154, 3, 1, "", "kMiter_Join"], [154, 3, 1, "", "kRound_Cap"], [154, 3, 1, "", "kRound_Join"], [154, 3, 1, "", "kSquare_Cap"], [154, 3, 1, "", "kStrokeAndFill_Style"], [154, 3, 1, "", "kStroke_Style"], [154, 3, 1, "", "kStyleCount"], [154, 2, 1, "", "nothingToDraw"], [154, 2, 1, "", "refColorFilter"], [154, 2, 1, "", "refImageFilter"], [154, 2, 1, "", "refMaskFilter"], [154, 2, 1, "", "refPathEffect"], [154, 2, 1, "", "refShader"], [154, 2, 1, "", "reset"], [154, 2, 1, "", "setARGB"], [154, 2, 1, "", "setAlpha"], [154, 2, 1, "", "setAlphaf"], [154, 2, 1, "", "setAntiAlias"], [154, 2, 1, "", "setBlendMode"], [154, 2, 1, "", "setColor"], [154, 2, 1, "", "setColor4f"], [154, 2, 1, "", "setColorFilter"], [154, 2, 1, "", "setDither"], [154, 2, 1, "", "setImageFilter"], [154, 2, 1, "", "setMaskFilter"], [154, 2, 1, "", "setPathEffect"], [154, 2, 1, "", "setShader"], [154, 2, 1, "", "setStrokeCap"], [154, 2, 1, "", "setStrokeJoin"], [154, 2, 1, "", "setStrokeMiter"], [154, 2, 1, "", "setStrokeWidth"], [154, 2, 1, "", "setStyle"]], "skia.Paint.Cap": [[155, 2, 1, "", "__init__"], [155, 3, 1, "", "kButt_Cap"], [155, 3, 1, "", "kDefault_Cap"], [155, 3, 1, "", "kLast_Cap"], [155, 3, 1, "", "kRound_Cap"], [155, 3, 1, "", "kSquare_Cap"], [155, 3, 1, "", "name"], [155, 3, 1, "", "value"]], "skia.Paint.Join": [[156, 2, 1, "", "__init__"], [156, 3, 1, "", "kBevel_Join"], [156, 3, 1, "", "kDefault_Join"], [156, 3, 1, "", "kLast_Join"], [156, 3, 1, "", "kMiter_Join"], [156, 3, 1, "", "kRound_Join"], [156, 3, 1, "", "name"], [156, 3, 1, "", "value"]], "skia.Paint.Style": [[157, 2, 1, "", "__init__"], [157, 3, 1, "", "kFill_Style"], [157, 3, 1, "", "kStrokeAndFill_Style"], [157, 3, 1, "", "kStroke_Style"], [157, 3, 1, "", "name"], [157, 3, 1, "", "value"]], "skia.Path": [[159, 1, 1, "", "AddPathMode"], [160, 1, 1, "", "ArcSize"], [158, 2, 1, "", "Circle"], [158, 2, 1, "", "ConvertConicToQuads"], [158, 2, 1, "", "IsCubicDegenerate"], [158, 2, 1, "", "IsLineDegenerate"], [158, 2, 1, "", "IsQuadDegenerate"], [161, 1, 1, "", "Iter"], [158, 2, 1, "", "Line"], [158, 2, 1, "", "Make"], [158, 2, 1, "", "Oval"], [158, 2, 1, "", "Polygon"], [158, 2, 1, "", "RRect"], [162, 1, 1, "", "RawIter"], [158, 2, 1, "", "Rect"], [163, 1, 1, "", "SegmentMask"], [164, 1, 1, "", "Verb"], [158, 2, 1, "", "__init__"], [158, 2, 1, "", "addArc"], [158, 2, 1, "", "addCircle"], [158, 2, 1, "", "addOval"], [158, 2, 1, "", "addPath"], [158, 2, 1, "", "addPoly"], [158, 2, 1, "", "addRRect"], [158, 2, 1, "", "addRect"], [158, 2, 1, "", "addRoundRect"], [158, 2, 1, "", "approximateBytesUsed"], [158, 2, 1, "", "arcTo"], [158, 2, 1, "", "close"], [158, 2, 1, "", "computeTightBounds"], [158, 2, 1, "", "conicTo"], [158, 2, 1, "", "conservativelyContainsRect"], [158, 2, 1, "", "contains"], [158, 2, 1, "", "countPoints"], [158, 2, 1, "", "countVerbs"], [158, 2, 1, "", "cubicTo"], [158, 2, 1, "", "dump"], [158, 2, 1, "", "dumpHex"], [158, 2, 1, "", "getBounds"], [158, 2, 1, "", "getFillType"], [158, 2, 1, "", "getGenerationID"], [158, 2, 1, "", "getLastPt"], [158, 2, 1, "", "getPoint"], [158, 2, 1, "", "getPoints"], [158, 2, 1, "", "getSegmentMasks"], [158, 2, 1, "", "getVerbs"], [158, 2, 1, "", "incReserve"], [158, 2, 1, "", "interpolate"], [158, 2, 1, "", "isConvex"], [158, 2, 1, "", "isEmpty"], [158, 2, 1, "", "isFinite"], [158, 2, 1, "", "isInterpolatable"], [158, 2, 1, "", "isInverseFillType"], [158, 2, 1, "", "isLastContourClosed"], [158, 2, 1, "", "isLine"], [158, 2, 1, "", "isOval"], [158, 2, 1, "", "isRRect"], [158, 2, 1, "", "isRect"], [158, 2, 1, "", "isValid"], [158, 2, 1, "", "isVolatile"], [158, 3, 1, "", "kAppend_AddPathMode"], [158, 3, 1, "", "kClose_Verb"], [158, 3, 1, "", "kConic_SegmentMask"], [158, 3, 1, "", "kConic_Verb"], [158, 3, 1, "", "kCubic_SegmentMask"], [158, 3, 1, "", "kCubic_Verb"], [158, 3, 1, "", "kDone_Verb"], [158, 3, 1, "", "kExtend_AddPathMode"], [158, 3, 1, "", "kLarge_ArcSize"], [158, 3, 1, "", "kLine_SegmentMask"], [158, 3, 1, "", "kLine_Verb"], [158, 3, 1, "", "kMove_Verb"], [158, 3, 1, "", "kQuad_SegmentMask"], [158, 3, 1, "", "kQuad_Verb"], [158, 3, 1, "", "kSmall_ArcSize"], [158, 2, 1, "", "lineTo"], [158, 2, 1, "", "moveTo"], [158, 2, 1, "", "offset"], [158, 2, 1, "", "quadTo"], [158, 2, 1, "", "rArcTo"], [158, 2, 1, "", "rConicTo"], [158, 2, 1, "", "rCubicTo"], [158, 2, 1, "", "rLineTo"], [158, 2, 1, "", "rMoveTo"], [158, 2, 1, "", "rQuadTo"], [158, 2, 1, "", "readFromMemory"], [158, 2, 1, "", "reset"], [158, 2, 1, "", "reverseAddPath"], [158, 2, 1, "", "rewind"], [158, 2, 1, "", "serialize"], [158, 2, 1, "", "setFillType"], [158, 2, 1, "", "setIsVolatile"], [158, 2, 1, "", "setLastPt"], [158, 2, 1, "", "swap"], [158, 2, 1, "", "toggleInverseFillType"], [158, 2, 1, "", "transform"], [158, 2, 1, "", "updateBoundsCache"], [158, 2, 1, "", "writeToMemory"]], "skia.Path.AddPathMode": [[159, 2, 1, "", "__init__"], [159, 3, 1, "", "kAppend_AddPathMode"], [159, 3, 1, "", "kExtend_AddPathMode"], [159, 3, 1, "", "name"], [159, 3, 1, "", "value"]], "skia.Path.ArcSize": [[160, 2, 1, "", "__init__"], [160, 3, 1, "", "kLarge_ArcSize"], [160, 3, 1, "", "kSmall_ArcSize"], [160, 3, 1, "", "name"], [160, 3, 1, "", "value"]], "skia.Path.Iter": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "conicWeight"], [161, 2, 1, "", "isCloseLine"], [161, 2, 1, "", "isClosedContour"], [161, 2, 1, "", "next"], [161, 2, 1, "", "setPath"]], "skia.Path.RawIter": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "conicWeight"], [162, 2, 1, "", "next"], [162, 2, 1, "", "peek"], [162, 2, 1, "", "setPath"]], "skia.Path.SegmentMask": [[163, 2, 1, "", "__init__"], [163, 3, 1, "", "kConic_SegmentMask"], [163, 3, 1, "", "kCubic_SegmentMask"], [163, 3, 1, "", "kLine_SegmentMask"], [163, 3, 1, "", "kQuad_SegmentMask"], [163, 3, 1, "", "name"], [163, 3, 1, "", "value"]], "skia.Path.Verb": [[164, 2, 1, "", "__init__"], [164, 3, 1, "", "kClose_Verb"], [164, 3, 1, "", "kConic_Verb"], [164, 3, 1, "", "kCubic_Verb"], [164, 3, 1, "", "kDone_Verb"], [164, 3, 1, "", "kLine_Verb"], [164, 3, 1, "", "kMove_Verb"], [164, 3, 1, "", "kQuad_Verb"], [164, 3, 1, "", "name"], [164, 3, 1, "", "value"]], "skia.Path1DPathEffect": [[165, 2, 1, "", "Make"], [166, 1, 1, "", "Style"], [165, 2, 1, "", "__init__"], [165, 3, 1, "", "kLastEnum_Style"], [165, 3, 1, "", "kMorph_Style"], [165, 3, 1, "", "kRotate_Style"], [165, 3, 1, "", "kTranslate_Style"]], "skia.Path1DPathEffect.Style": [[166, 2, 1, "", "__init__"], [166, 3, 1, "", "kLastEnum_Style"], [166, 3, 1, "", "kMorph_Style"], [166, 3, 1, "", "kRotate_Style"], [166, 3, 1, "", "kTranslate_Style"], [166, 3, 1, "", "name"], [166, 3, 1, "", "value"]], "skia.Path2DPathEffect": [[167, 2, 1, "", "Make"], [167, 2, 1, "", "__init__"]], "skia.PathBuilder": [[169, 1, 1, "", "ArcSize"], [168, 2, 1, "", "__init__"], [168, 2, 1, "", "addArc"], [168, 2, 1, "", "addCircle"], [168, 2, 1, "", "addOval"], [168, 2, 1, "", "addPolygon"], [168, 2, 1, "", "addRRect"], [168, 2, 1, "", "addRect"], [168, 2, 1, "", "arcTo"], [168, 2, 1, "", "close"], [168, 2, 1, "", "computeBounds"], [168, 2, 1, "", "conicTo"], [168, 2, 1, "", "cubicTo"], [168, 2, 1, "", "detach"], [168, 2, 1, "", "fillType"], [168, 2, 1, "", "incReserve"], [168, 3, 1, "", "kLarge_ArcSize"], [168, 3, 1, "", "kSmall_ArcSize"], [168, 2, 1, "", "lineTo"], [168, 2, 1, "", "moveTo"], [168, 2, 1, "", "offset"], [168, 2, 1, "", "polylineTo"], [168, 2, 1, "", "quadTo"], [168, 2, 1, "", "rConicTo"], [168, 2, 1, "", "rCubicTo"], [168, 2, 1, "", "rLineTo"], [168, 2, 1, "", "rQuadTo"], [168, 2, 1, "", "reset"], [168, 2, 1, "", "setFillType"], [168, 2, 1, "", "setIsVolatile"], [168, 2, 1, "", "snapshot"], [168, 2, 1, "", "toggleInverseFillType"]], "skia.PathBuilder.ArcSize": [[169, 2, 1, "", "__init__"], [169, 3, 1, "", "kLarge_ArcSize"], [169, 3, 1, "", "kSmall_ArcSize"], [169, 3, 1, "", "name"], [169, 3, 1, "", "value"]], "skia.PathDirection": [[170, 2, 1, "", "__init__"], [170, 3, 1, "", "kCCW"], [170, 3, 1, "", "kCW"], [170, 3, 1, "", "name"], [170, 3, 1, "", "value"]], "skia.PathEffect": [[172, 1, 1, "", "DashInfo"], [173, 1, 1, "", "DashType"], [171, 2, 1, "", "Deserialize"], [171, 2, 1, "", "GetFlattenableType"], [171, 2, 1, "", "MakeCompose"], [171, 2, 1, "", "MakeSum"], [174, 1, 1, "", "Type"], [171, 2, 1, "", "__init__"], [171, 2, 1, "", "asADash"], [171, 2, 1, "", "filterPath"], [171, 2, 1, "", "getFlattenableType"], [171, 2, 1, "", "getTypeName"], [171, 3, 1, "", "kColorFilter_Type"], [171, 3, 1, "", "kDash_DashType"], [171, 3, 1, "", "kDrawLooper_Type"], [171, 3, 1, "", "kDrawable_Type"], [171, 3, 1, "", "kImageFilter_Type"], [171, 3, 1, "", "kMaskFilter_Type"], [171, 3, 1, "", "kNone_DashType"], [171, 3, 1, "", "kPathEffect_Type"], [171, 2, 1, "", "ref"], [171, 2, 1, "", "serialize"], [171, 2, 1, "", "unique"], [171, 2, 1, "", "unref"]], "skia.PathEffect.DashInfo": [[172, 2, 1, "", "__init__"], [172, 3, 1, "", "fCount"], [172, 3, 1, "", "fIntervals"], [172, 3, 1, "", "fPhase"]], "skia.PathEffect.DashType": [[173, 2, 1, "", "__init__"], [173, 3, 1, "", "kDash_DashType"], [173, 3, 1, "", "kNone_DashType"], [173, 3, 1, "", "name"], [173, 3, 1, "", "value"]], "skia.PathEffect.Type": [[174, 2, 1, "", "__init__"], [174, 3, 1, "", "kColorFilter_Type"], [174, 3, 1, "", "kDrawLooper_Type"], [174, 3, 1, "", "kDrawable_Type"], [174, 3, 1, "", "kImageFilter_Type"], [174, 3, 1, "", "kMaskFilter_Type"], [174, 3, 1, "", "kPathEffect_Type"], [174, 3, 1, "", "name"], [174, 3, 1, "", "value"]], "skia.PathFillType": [[175, 2, 1, "", "__init__"], [175, 3, 1, "", "kEvenOdd"], [175, 3, 1, "", "kInverseEvenOdd"], [175, 3, 1, "", "kInverseWinding"], [175, 3, 1, "", "kWinding"], [175, 3, 1, "", "name"], [175, 3, 1, "", "value"]], "skia.PathMeasure": [[177, 1, 1, "", "GetPosAndTan"], [176, 2, 1, "", "__init__"], [176, 2, 1, "", "getLength"], [176, 2, 1, "", "getMatrix"], [176, 2, 1, "", "getPosTan"], [176, 2, 1, "", "getSegment"], [176, 2, 1, "", "isClosed"], [176, 3, 1, "", "kGetPosAndTan_MatrixFlag"], [176, 3, 1, "", "kGetPosition_MatrixFlag"], [176, 3, 1, "", "kGetTangent_MatrixFlag"], [176, 2, 1, "", "nextContour"], [176, 2, 1, "", "setPath"]], "skia.PathMeasure.GetPosAndTan": [[177, 2, 1, "", "__init__"], [177, 3, 1, "", "kGetPosAndTan_MatrixFlag"], [177, 3, 1, "", "kGetPosition_MatrixFlag"], [177, 3, 1, "", "kGetTangent_MatrixFlag"], [177, 3, 1, "", "name"], [177, 3, 1, "", "value"]], "skia.PathOp": [[178, 2, 1, "", "__init__"], [178, 3, 1, "", "kDifference_PathOp"], [178, 3, 1, "", "kIntersect_PathOp"], [178, 3, 1, "", "kReverseDifference_PathOp"], [178, 3, 1, "", "kUnion_PathOp"], [178, 3, 1, "", "kXOR_PathOp"], [178, 3, 1, "", "name"], [178, 3, 1, "", "value"]], "skia.PathSegmentMask": [[179, 2, 1, "", "__init__"], [179, 3, 1, "", "kConic_PathSegmentMask"], [179, 3, 1, "", "kCubic_PathSegmentMask"], [179, 3, 1, "", "kLine_PathSegmentMask"], [179, 3, 1, "", "kQuad_PathSegmentMask"], [179, 3, 1, "", "name"], [179, 3, 1, "", "value"]], "skia.PathVerb": [[180, 2, 1, "", "__init__"], [180, 3, 1, "", "kClose"], [180, 3, 1, "", "kConic"], [180, 3, 1, "", "kCubic"], [180, 3, 1, "", "kLine"], [180, 3, 1, "", "kMove"], [180, 3, 1, "", "kQuad"], [180, 3, 1, "", "name"], [180, 3, 1, "", "value"]], "skia.PerlinNoiseShader": [[181, 2, 1, "", "MakeFractalNoise"], [181, 2, 1, "", "MakeTurbulence"], [181, 2, 1, "", "__init__"]], "skia.Picture": [[182, 2, 1, "", "MakeFromData"], [182, 2, 1, "", "MakeFromStream"], [182, 2, 1, "", "MakePlaceholder"], [182, 2, 1, "", "__init__"], [182, 2, 1, "", "approximateBytesUsed"], [182, 2, 1, "", "approximateOpCount"], [182, 2, 1, "", "cullRect"], [182, 2, 1, "", "makeShader"], [182, 2, 1, "", "playback"], [182, 2, 1, "", "ref"], [182, 2, 1, "", "serialize"], [182, 2, 1, "", "unique"], [182, 2, 1, "", "uniqueID"], [182, 2, 1, "", "unref"]], "skia.PictureRecorder": [[183, 2, 1, "", "__init__"], [183, 2, 1, "", "beginRecording"], [183, 2, 1, "", "finishRecordingAsDrawable"], [183, 2, 1, "", "finishRecordingAsPicture"], [183, 2, 1, "", "finishRecordingAsPictureWithCull"], [183, 2, 1, "", "getRecordingCanvas"]], "skia.PixelGeometry": [[184, 2, 1, "", "__init__"], [184, 3, 1, "", "kBGR_H_PixelGeometry"], [184, 3, 1, "", "kBGR_V_PixelGeometry"], [184, 3, 1, "", "kRGB_H_PixelGeometry"], [184, 3, 1, "", "kRGB_V_PixelGeometry"], [184, 3, 1, "", "kUnknown_PixelGeometry"], [184, 3, 1, "", "name"], [184, 3, 1, "", "value"]], "skia.PixelRef": [[185, 2, 1, "", "__init__"]], "skia.Pixmap": [[186, 2, 1, "", "__init__"], [186, 2, 1, "", "addr"], [186, 2, 1, "", "addr16"], [186, 2, 1, "", "addr32"], [186, 2, 1, "", "addr64"], [186, 2, 1, "", "addr8"], [186, 2, 1, "", "alphaType"], [186, 2, 1, "", "bounds"], [186, 2, 1, "", "colorSpace"], [186, 2, 1, "", "colorType"], [186, 2, 1, "", "computeByteSize"], [186, 2, 1, "", "computeIsOpaque"], [186, 2, 1, "", "dimensions"], [186, 2, 1, "", "erase"], [186, 2, 1, "", "extractSubset"], [186, 2, 1, "", "getAlphaf"], [186, 2, 1, "", "getColor"], [186, 2, 1, "", "height"], [186, 2, 1, "", "info"], [186, 2, 1, "", "isOpaque"], [186, 2, 1, "", "readPixels"], [186, 2, 1, "", "refColorSpace"], [186, 2, 1, "", "reset"], [186, 2, 1, "", "rowBytes"], [186, 2, 1, "", "rowBytesAsPixels"], [186, 2, 1, "", "scalePixels"], [186, 2, 1, "", "setColorSpace"], [186, 2, 1, "", "shiftPerPixel"], [186, 2, 1, "", "tobytes"], [186, 2, 1, "", "width"], [186, 2, 1, "", "writable_addr"]], "skia.Point": [[187, 2, 1, "", "CrossProduct"], [187, 2, 1, "", "Distance"], [187, 2, 1, "", "DotProduct"], [187, 2, 1, "", "Length"], [187, 2, 1, "", "Make"], [187, 2, 1, "", "Normalize"], [187, 2, 1, "", "Offset"], [187, 2, 1, "", "__init__"], [187, 2, 1, "", "cross"], [187, 2, 1, "", "distanceToOrigin"], [187, 2, 1, "", "dot"], [187, 2, 1, "", "equals"], [187, 3, 1, "", "fX"], [187, 3, 1, "", "fY"], [187, 2, 1, "", "isFinite"], [187, 2, 1, "", "isZero"], [187, 2, 1, "", "iset"], [187, 2, 1, "", "length"], [187, 2, 1, "", "negate"], [187, 2, 1, "", "normalize"], [187, 2, 1, "", "offset"], [187, 2, 1, "", "scale"], [187, 2, 1, "", "set"], [187, 2, 1, "", "setAbs"], [187, 2, 1, "", "setLength"], [187, 2, 1, "", "setNormalize"], [187, 2, 1, "", "x"], [187, 2, 1, "", "y"]], "skia.Point3": [[188, 2, 1, "", "CrossProduct"], [188, 2, 1, "", "DotProduct"], [188, 2, 1, "", "Length"], [188, 2, 1, "", "Make"], [188, 2, 1, "", "__init__"], [188, 2, 1, "", "cross"], [188, 2, 1, "", "dot"], [188, 3, 1, "", "fX"], [188, 3, 1, "", "fY"], [188, 3, 1, "", "fZ"], [188, 2, 1, "", "isFinite"], [188, 2, 1, "", "length"], [188, 2, 1, "", "makeScale"], [188, 2, 1, "", "normalize"], [188, 2, 1, "", "scale"], [188, 2, 1, "", "set"], [188, 2, 1, "", "x"], [188, 2, 1, "", "y"], [188, 2, 1, "", "z"]], "skia.RRect": [[190, 1, 1, "", "Corner"], [189, 2, 1, "", "MakeEmpty"], [189, 2, 1, "", "MakeOval"], [189, 2, 1, "", "MakeRect"], [189, 2, 1, "", "MakeRectXY"], [191, 1, 1, "", "Type"], [189, 2, 1, "", "__init__"], [189, 2, 1, "", "contains"], [189, 2, 1, "", "dump"], [189, 2, 1, "", "dumpHex"], [189, 2, 1, "", "dumpToString"], [189, 2, 1, "", "getBounds"], [189, 2, 1, "", "getSimpleRadii"], [189, 2, 1, "", "getType"], [189, 2, 1, "", "height"], [189, 2, 1, "", "inset"], [189, 2, 1, "", "isComplex"], [189, 2, 1, "", "isEmpty"], [189, 2, 1, "", "isNinePatch"], [189, 2, 1, "", "isOval"], [189, 2, 1, "", "isRect"], [189, 2, 1, "", "isSimple"], [189, 2, 1, "", "isValid"], [189, 3, 1, "", "kComplex_Type"], [189, 3, 1, "", "kEmpty_Type"], [189, 3, 1, "", "kLastType"], [189, 3, 1, "", "kLowerLeft_Corner"], [189, 3, 1, "", "kLowerRight_Corner"], [189, 3, 1, "", "kNinePatch_Type"], [189, 3, 1, "", "kOval_Type"], [189, 3, 1, "", "kRect_Type"], [189, 3, 1, "", "kSimple_Type"], [189, 3, 1, "", "kSizeInMemory"], [189, 3, 1, "", "kUpperLeft_Corner"], [189, 3, 1, "", "kUpperRight_Corner"], [189, 2, 1, "", "makeOffset"], [189, 2, 1, "", "offset"], [189, 2, 1, "", "outset"], [189, 2, 1, "", "radii"], [189, 2, 1, "", "readFromMemory"], [189, 2, 1, "", "rect"], [189, 2, 1, "", "setEmpty"], [189, 2, 1, "", "setNinePatch"], [189, 2, 1, "", "setOval"], [189, 2, 1, "", "setRect"], [189, 2, 1, "", "setRectRadii"], [189, 2, 1, "", "setRectXY"], [189, 2, 1, "", "transform"], [189, 2, 1, "", "type"], [189, 2, 1, "", "width"], [189, 2, 1, "", "writeToMemory"]], "skia.RRect.Corner": [[190, 2, 1, "", "__init__"], [190, 3, 1, "", "kLowerLeft_Corner"], [190, 3, 1, "", "kLowerRight_Corner"], [190, 3, 1, "", "kUpperLeft_Corner"], [190, 3, 1, "", "kUpperRight_Corner"], [190, 3, 1, "", "name"], [190, 3, 1, "", "value"]], "skia.RRect.Type": [[191, 2, 1, "", "__init__"], [191, 3, 1, "", "kComplex_Type"], [191, 3, 1, "", "kEmpty_Type"], [191, 3, 1, "", "kLastType"], [191, 3, 1, "", "kNinePatch_Type"], [191, 3, 1, "", "kOval_Type"], [191, 3, 1, "", "kRect_Type"], [191, 3, 1, "", "kSimple_Type"], [191, 3, 1, "", "name"], [191, 3, 1, "", "value"]], "skia.RSXform": [[192, 2, 1, "", "Make"], [192, 2, 1, "", "MakeFromRadians"], [192, 2, 1, "", "__init__"], [192, 3, 1, "", "fSCos"], [192, 3, 1, "", "fSSin"], [192, 3, 1, "", "fTx"], [192, 3, 1, "", "fTy"], [192, 2, 1, "", "rectStaysRect"], [192, 2, 1, "", "set"], [192, 2, 1, "", "setIdentity"], [192, 2, 1, "", "toQuad"], [192, 2, 1, "", "toTriStrip"]], "skia.RTreeFactory": [[193, 2, 1, "", "__init__"]], "skia.Rect": [[194, 2, 1, "", "Intersects"], [194, 2, 1, "", "Make"], [194, 2, 1, "", "MakeEmpty"], [194, 2, 1, "", "MakeIWH"], [194, 2, 1, "", "MakeLTRB"], [194, 2, 1, "", "MakeSize"], [194, 2, 1, "", "MakeWH"], [194, 2, 1, "", "MakeXYWH"], [194, 2, 1, "", "__init__"], [194, 2, 1, "", "asScalars"], [194, 2, 1, "", "bottom"], [194, 2, 1, "", "centerX"], [194, 2, 1, "", "centerY"], [194, 2, 1, "", "contains"], [194, 2, 1, "", "dump"], [194, 2, 1, "", "dumpHex"], [194, 3, 1, "", "fBottom"], [194, 3, 1, "", "fLeft"], [194, 3, 1, "", "fRight"], [194, 3, 1, "", "fTop"], [194, 2, 1, "", "height"], [194, 2, 1, "", "inset"], [194, 2, 1, "", "intersect"], [194, 2, 1, "", "intersects"], [194, 2, 1, "", "isEmpty"], [194, 2, 1, "", "isFinite"], [194, 2, 1, "", "isSorted"], [194, 2, 1, "", "join"], [194, 2, 1, "", "joinNonEmptyArg"], [194, 2, 1, "", "joinPossiblyEmptyRect"], [194, 2, 1, "", "left"], [194, 2, 1, "", "makeInset"], [194, 2, 1, "", "makeOffset"], [194, 2, 1, "", "makeOutset"], [194, 2, 1, "", "makeSorted"], [194, 2, 1, "", "offset"], [194, 2, 1, "", "offsetTo"], [194, 2, 1, "", "outset"], [194, 2, 1, "", "right"], [194, 2, 1, "", "round"], [194, 2, 1, "", "roundIn"], [194, 2, 1, "", "roundOut"], [194, 2, 1, "", "set"], [194, 2, 1, "", "setBounds"], [194, 2, 1, "", "setBoundsCheck"], [194, 2, 1, "", "setBoundsNoCheck"], [194, 2, 1, "", "setEmpty"], [194, 2, 1, "", "setIWH"], [194, 2, 1, "", "setLTRB"], [194, 2, 1, "", "setWH"], [194, 2, 1, "", "setXYWH"], [194, 2, 1, "", "sort"], [194, 2, 1, "", "toQuad"], [194, 2, 1, "", "top"], [194, 2, 1, "", "width"], [194, 2, 1, "", "x"], [194, 2, 1, "", "y"]], "skia.RefCnt": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "ref"], [195, 2, 1, "", "unique"], [195, 2, 1, "", "unref"]], "skia.RefCntBase": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "ref"], [196, 2, 1, "", "unique"], [196, 2, 1, "", "unref"]], "skia.Region": [[198, 1, 1, "", "Cliperator"], [199, 1, 1, "", "Iterator"], [200, 1, 1, "", "Op"], [201, 1, 1, "", "Spanerator"], [197, 2, 1, "", "__init__"], [197, 2, 1, "", "cliperator"], [197, 2, 1, "", "computeRegionComplexity"], [197, 2, 1, "", "contains"], [197, 2, 1, "", "getBoundaryPath"], [197, 2, 1, "", "getBounds"], [197, 2, 1, "", "intersects"], [197, 2, 1, "", "isComplex"], [197, 2, 1, "", "isEmpty"], [197, 2, 1, "", "isRect"], [197, 2, 1, "", "iterator"], [197, 3, 1, "", "kDifference_Op"], [197, 3, 1, "", "kIntersect_Op"], [197, 3, 1, "", "kLastOp"], [197, 3, 1, "", "kOpCnt"], [197, 3, 1, "", "kReplace_Op"], [197, 3, 1, "", "kReverseDifference_Op"], [197, 3, 1, "", "kUnion_Op"], [197, 3, 1, "", "kXOR_Op"], [197, 2, 1, "", "op"], [197, 2, 1, "", "quickContains"], [197, 2, 1, "", "quickReject"], [197, 2, 1, "", "readFromMemory"], [197, 2, 1, "", "set"], [197, 2, 1, "", "setEmpty"], [197, 2, 1, "", "setPath"], [197, 2, 1, "", "setRect"], [197, 2, 1, "", "setRects"], [197, 2, 1, "", "setRegion"], [197, 2, 1, "", "spanerator"], [197, 2, 1, "", "swap"], [197, 2, 1, "", "translate"], [197, 2, 1, "", "writeToMemory"]], "skia.Region.Cliperator": [[198, 2, 1, "", "__init__"], [198, 2, 1, "", "done"], [198, 2, 1, "", "next"], [198, 2, 1, "", "rect"]], "skia.Region.Iterator": [[199, 2, 1, "", "__init__"], [199, 2, 1, "", "done"], [199, 2, 1, "", "next"], [199, 2, 1, "", "rect"], [199, 2, 1, "", "reset"], [199, 2, 1, "", "rewind"], [199, 2, 1, "", "rgn"]], "skia.Region.Op": [[200, 2, 1, "", "__init__"], [200, 3, 1, "", "kDifference_Op"], [200, 3, 1, "", "kIntersect_Op"], [200, 3, 1, "", "kLastOp"], [200, 3, 1, "", "kReplace_Op"], [200, 3, 1, "", "kReverseDifference_Op"], [200, 3, 1, "", "kUnion_Op"], [200, 3, 1, "", "kXOR_Op"], [200, 3, 1, "", "name"], [200, 3, 1, "", "value"]], "skia.Region.Spanerator": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "next"]], "skia.SVGCanvas": [[202, 2, 1, "", "Make"], [202, 2, 1, "", "__init__"], [202, 3, 1, "", "kConvertTextToPaths_Flag"], [202, 3, 1, "", "kNoPrettyXML_Flag"]], "skia.SVGDOM": [[203, 2, 1, "", "MakeFromStream"], [203, 2, 1, "", "__init__"], [203, 2, 1, "", "containerSize"], [203, 2, 1, "", "ref"], [203, 2, 1, "", "render"], [203, 2, 1, "", "renderNode"], [203, 2, 1, "", "setContainerSize"], [203, 2, 1, "", "unique"], [203, 2, 1, "", "unref"]], "skia.SamplingOptions": [[204, 2, 1, "", "__init__"]], "skia.Shader": [[205, 2, 1, "", "Deserialize"], [206, 1, 1, "", "Type"], [205, 2, 1, "", "__init__"], [205, 2, 1, "", "getFlattenableType"], [205, 2, 1, "", "getTypeName"], [205, 2, 1, "", "isAImage"], [205, 2, 1, "", "isOpaque"], [205, 3, 1, "", "kColorFilter_Type"], [205, 3, 1, "", "kDrawLooper_Type"], [205, 3, 1, "", "kDrawable_Type"], [205, 3, 1, "", "kImageFilter_Type"], [205, 3, 1, "", "kMaskFilter_Type"], [205, 3, 1, "", "kPathEffect_Type"], [205, 2, 1, "", "makeWithColorFilter"], [205, 2, 1, "", "makeWithLocalMatrix"], [205, 2, 1, "", "ref"], [205, 2, 1, "", "serialize"], [205, 2, 1, "", "unique"], [205, 2, 1, "", "unref"]], "skia.Shader.Type": [[206, 2, 1, "", "__init__"], [206, 3, 1, "", "kColorFilter_Type"], [206, 3, 1, "", "kDrawLooper_Type"], [206, 3, 1, "", "kDrawable_Type"], [206, 3, 1, "", "kImageFilter_Type"], [206, 3, 1, "", "kMaskFilter_Type"], [206, 3, 1, "", "kPathEffect_Type"], [206, 3, 1, "", "name"], [206, 3, 1, "", "value"]], "skia.ShaderMaskFilter": [[207, 2, 1, "", "Make"], [207, 2, 1, "", "__init__"]], "skia.Shaders": [[208, 2, 1, "", "Blend"], [208, 2, 1, "", "Color"], [208, 2, 1, "", "Empty"], [208, 2, 1, "", "Lerp"], [208, 2, 1, "", "__init__"]], "skia.Size": [[209, 2, 1, "", "Make"], [209, 2, 1, "", "MakeEmpty"], [209, 2, 1, "", "__init__"], [209, 2, 1, "", "equals"], [209, 3, 1, "", "fHeight"], [209, 3, 1, "", "fWidth"], [209, 2, 1, "", "height"], [209, 2, 1, "", "isEmpty"], [209, 2, 1, "", "isZero"], [209, 2, 1, "", "set"], [209, 2, 1, "", "setEmpty"], [209, 2, 1, "", "toCeil"], [209, 2, 1, "", "toFloor"], [209, 2, 1, "", "toRound"], [209, 2, 1, "", "width"]], "skia.Stream": [[210, 2, 1, "", "MakeFromFile"], [210, 2, 1, "", "__init__"], [210, 2, 1, "", "duplicate"], [210, 2, 1, "", "fork"], [210, 2, 1, "", "getLength"], [210, 2, 1, "", "getMemoryBase"], [210, 2, 1, "", "getPosition"], [210, 2, 1, "", "hasLength"], [210, 2, 1, "", "hasPosition"], [210, 2, 1, "", "isAtEnd"], [210, 2, 1, "", "move"], [210, 2, 1, "", "peek"], [210, 2, 1, "", "read"], [210, 2, 1, "", "readBool"], [210, 2, 1, "", "readPackedUInt"], [210, 2, 1, "", "readS16"], [210, 2, 1, "", "readS32"], [210, 2, 1, "", "readS8"], [210, 2, 1, "", "readScalar"], [210, 2, 1, "", "readU16"], [210, 2, 1, "", "readU32"], [210, 2, 1, "", "readU8"], [210, 2, 1, "", "rewind"], [210, 2, 1, "", "seek"], [210, 2, 1, "", "skip"]], "skia.StreamAsset": [[211, 2, 1, "", "MakeFromFile"], [211, 2, 1, "", "__init__"], [211, 2, 1, "", "duplicate"], [211, 2, 1, "", "fork"], [211, 2, 1, "", "getLength"], [211, 2, 1, "", "getMemoryBase"], [211, 2, 1, "", "getPosition"], [211, 2, 1, "", "hasLength"], [211, 2, 1, "", "hasPosition"], [211, 2, 1, "", "isAtEnd"], [211, 2, 1, "", "move"], [211, 2, 1, "", "peek"], [211, 2, 1, "", "read"], [211, 2, 1, "", "readBool"], [211, 2, 1, "", "readPackedUInt"], [211, 2, 1, "", "readS16"], [211, 2, 1, "", "readS32"], [211, 2, 1, "", "readS8"], [211, 2, 1, "", "readScalar"], [211, 2, 1, "", "readU16"], [211, 2, 1, "", "readU32"], [211, 2, 1, "", "readU8"], [211, 2, 1, "", "rewind"], [211, 2, 1, "", "seek"], [211, 2, 1, "", "skip"]], "skia.StreamMemory": [[212, 2, 1, "", "MakeFromFile"], [212, 2, 1, "", "__init__"], [212, 2, 1, "", "duplicate"], [212, 2, 1, "", "fork"], [212, 2, 1, "", "getLength"], [212, 2, 1, "", "getMemoryBase"], [212, 2, 1, "", "getPosition"], [212, 2, 1, "", "hasLength"], [212, 2, 1, "", "hasPosition"], [212, 2, 1, "", "isAtEnd"], [212, 2, 1, "", "move"], [212, 2, 1, "", "peek"], [212, 2, 1, "", "read"], [212, 2, 1, "", "readBool"], [212, 2, 1, "", "readPackedUInt"], [212, 2, 1, "", "readS16"], [212, 2, 1, "", "readS32"], [212, 2, 1, "", "readS8"], [212, 2, 1, "", "readScalar"], [212, 2, 1, "", "readU16"], [212, 2, 1, "", "readU32"], [212, 2, 1, "", "readU8"], [212, 2, 1, "", "rewind"], [212, 2, 1, "", "seek"], [212, 2, 1, "", "skip"]], "skia.StreamRewindable": [[213, 2, 1, "", "MakeFromFile"], [213, 2, 1, "", "__init__"], [213, 2, 1, "", "duplicate"], [213, 2, 1, "", "fork"], [213, 2, 1, "", "getLength"], [213, 2, 1, "", "getMemoryBase"], [213, 2, 1, "", "getPosition"], [213, 2, 1, "", "hasLength"], [213, 2, 1, "", "hasPosition"], [213, 2, 1, "", "isAtEnd"], [213, 2, 1, "", "move"], [213, 2, 1, "", "peek"], [213, 2, 1, "", "read"], [213, 2, 1, "", "readBool"], [213, 2, 1, "", "readPackedUInt"], [213, 2, 1, "", "readS16"], [213, 2, 1, "", "readS32"], [213, 2, 1, "", "readS8"], [213, 2, 1, "", "readScalar"], [213, 2, 1, "", "readU16"], [213, 2, 1, "", "readU32"], [213, 2, 1, "", "readU8"], [213, 2, 1, "", "rewind"], [213, 2, 1, "", "seek"], [213, 2, 1, "", "skip"]], "skia.StreamSeekable": [[214, 2, 1, "", "MakeFromFile"], [214, 2, 1, "", "__init__"], [214, 2, 1, "", "duplicate"], [214, 2, 1, "", "fork"], [214, 2, 1, "", "getLength"], [214, 2, 1, "", "getMemoryBase"], [214, 2, 1, "", "getPosition"], [214, 2, 1, "", "hasLength"], [214, 2, 1, "", "hasPosition"], [214, 2, 1, "", "isAtEnd"], [214, 2, 1, "", "move"], [214, 2, 1, "", "peek"], [214, 2, 1, "", "read"], [214, 2, 1, "", "readBool"], [214, 2, 1, "", "readPackedUInt"], [214, 2, 1, "", "readS16"], [214, 2, 1, "", "readS32"], [214, 2, 1, "", "readS8"], [214, 2, 1, "", "readScalar"], [214, 2, 1, "", "readU16"], [214, 2, 1, "", "readU32"], [214, 2, 1, "", "readU8"], [214, 2, 1, "", "rewind"], [214, 2, 1, "", "seek"], [214, 2, 1, "", "skip"]], "skia.String": [[215, 2, 1, "", "__init__"], [215, 2, 1, "", "append"], [215, 2, 1, "", "appendHex"], [215, 2, 1, "", "appendS32"], [215, 2, 1, "", "appendS64"], [215, 2, 1, "", "appendScalar"], [215, 2, 1, "", "appendU32"], [215, 2, 1, "", "appendU64"], [215, 2, 1, "", "appendUnichar"], [215, 2, 1, "", "c_str"], [215, 2, 1, "", "contains"], [215, 2, 1, "", "endsWith"], [215, 2, 1, "", "equals"], [215, 2, 1, "", "find"], [215, 2, 1, "", "findLastOf"], [215, 2, 1, "", "insert"], [215, 2, 1, "", "insertHex"], [215, 2, 1, "", "insertS32"], [215, 2, 1, "", "insertS64"], [215, 2, 1, "", "insertScalar"], [215, 2, 1, "", "insertU32"], [215, 2, 1, "", "insertU64"], [215, 2, 1, "", "insertUnichar"], [215, 2, 1, "", "isEmpty"], [215, 2, 1, "", "prepend"], [215, 2, 1, "", "prependHex"], [215, 2, 1, "", "prependS32"], [215, 2, 1, "", "prependS64"], [215, 2, 1, "", "prependScalar"], [215, 2, 1, "", "prependUnichar"], [215, 2, 1, "", "remove"], [215, 2, 1, "", "reset"], [215, 2, 1, "", "resize"], [215, 2, 1, "", "set"], [215, 2, 1, "", "size"], [215, 2, 1, "", "startsWith"], [215, 2, 1, "", "swap"]], "skia.StrokePathEffect": [[216, 2, 1, "", "Make"], [216, 2, 1, "", "__init__"]], "skia.StrokeRec": [[217, 2, 1, "", "GetInflationRadius"], [218, 1, 1, "", "InitStyle"], [219, 1, 1, "", "Style"], [217, 2, 1, "", "__init__"], [217, 2, 1, "", "applyToPaint"], [217, 2, 1, "", "applyToPath"], [217, 2, 1, "", "getCap"], [217, 2, 1, "", "getInflationRadius"], [217, 2, 1, "", "getJoin"], [217, 2, 1, "", "getMiter"], [217, 2, 1, "", "getResScale"], [217, 2, 1, "", "getStyle"], [217, 2, 1, "", "getWidth"], [217, 2, 1, "", "hasEqualEffect"], [217, 2, 1, "", "isFillStyle"], [217, 2, 1, "", "isHairlineStyle"], [217, 3, 1, "", "kFill_InitStyle"], [217, 3, 1, "", "kFill_Style"], [217, 3, 1, "", "kHairline_InitStyle"], [217, 3, 1, "", "kHairline_Style"], [217, 3, 1, "", "kStrokeAndFill_Style"], [217, 3, 1, "", "kStroke_Style"], [217, 3, 1, "", "kStyleCount"], [217, 2, 1, "", "needToApply"], [217, 2, 1, "", "setFillStyle"], [217, 2, 1, "", "setHairlineStyle"], [217, 2, 1, "", "setResScale"], [217, 2, 1, "", "setStrokeParams"], [217, 2, 1, "", "setStrokeStyle"]], "skia.StrokeRec.InitStyle": [[218, 2, 1, "", "__init__"], [218, 3, 1, "", "kFill_InitStyle"], [218, 3, 1, "", "kHairline_InitStyle"], [218, 3, 1, "", "name"], [218, 3, 1, "", "value"]], "skia.StrokeRec.Style": [[219, 2, 1, "", "__init__"], [219, 3, 1, "", "kFill_Style"], [219, 3, 1, "", "kHairline_Style"], [219, 3, 1, "", "kStrokeAndFill_Style"], [219, 3, 1, "", "kStroke_Style"], [219, 3, 1, "", "name"], [219, 3, 1, "", "value"]], "skia.Surface": [[221, 1, 1, "", "AsyncReadResult"], [222, 1, 1, "", "BackendHandleAccess"], [223, 1, 1, "", "BackendSurfaceAccess"], [224, 1, 1, "", "ContentChangeMode"], [220, 2, 1, "", "MakeFromBackendRenderTarget"], [220, 2, 1, "", "MakeFromBackendTexture"], [220, 2, 1, "", "MakeNull"], [220, 2, 1, "", "MakeRaster"], [220, 2, 1, "", "MakeRasterDirect"], [220, 2, 1, "", "MakeRasterN32Premul"], [220, 2, 1, "", "MakeRenderTarget"], [225, 1, 1, "", "RescaleGamma"], [220, 2, 1, "", "__init__"], [220, 2, 1, "", "asyncRescaleAndReadPixels"], [220, 2, 1, "", "characterize"], [220, 2, 1, "", "draw"], [220, 2, 1, "", "flush"], [220, 2, 1, "", "flushAndSubmit"], [220, 2, 1, "", "generationID"], [220, 2, 1, "", "getBackendRenderTarget"], [220, 2, 1, "", "getBackendTexture"], [220, 2, 1, "", "getCanvas"], [220, 2, 1, "", "height"], [220, 2, 1, "", "imageInfo"], [220, 2, 1, "", "isCompatible"], [220, 3, 1, "", "kDiscardWrite_BackendHandleAccess"], [220, 3, 1, "", "kDiscard_ContentChangeMode"], [220, 3, 1, "", "kFlushRead_BackendHandleAccess"], [220, 3, 1, "", "kFlushWrite_BackendHandleAccess"], [220, 3, 1, "", "kLinear"], [220, 3, 1, "", "kNoAccess"], [220, 3, 1, "", "kPresent"], [220, 3, 1, "", "kRetain_ContentChangeMode"], [220, 3, 1, "", "kSrc"], [220, 2, 1, "", "makeImageSnapshot"], [220, 2, 1, "", "makeSurface"], [220, 2, 1, "", "notifyContentWillChange"], [220, 2, 1, "", "peekPixels"], [220, 2, 1, "", "props"], [220, 2, 1, "", "readPixels"], [220, 2, 1, "", "recordingContext"], [220, 2, 1, "", "ref"], [220, 2, 1, "", "replaceBackendTexture"], [220, 2, 1, "", "toarray"], [220, 2, 1, "", "unique"], [220, 2, 1, "", "unref"], [220, 2, 1, "", "width"], [220, 2, 1, "", "writePixels"]], "skia.Surface.AsyncReadResult": [[221, 2, 1, "", "__init__"], [221, 2, 1, "", "count"], [221, 2, 1, "", "data"], [221, 2, 1, "", "rowBytes"]], "skia.Surface.BackendHandleAccess": [[222, 2, 1, "", "__init__"], [222, 3, 1, "", "kDiscardWrite_BackendHandleAccess"], [222, 3, 1, "", "kFlushRead_BackendHandleAccess"], [222, 3, 1, "", "kFlushWrite_BackendHandleAccess"], [222, 3, 1, "", "name"], [222, 3, 1, "", "value"]], "skia.Surface.BackendSurfaceAccess": [[223, 2, 1, "", "__init__"], [223, 3, 1, "", "kNoAccess"], [223, 3, 1, "", "kPresent"], [223, 3, 1, "", "name"], [223, 3, 1, "", "value"]], "skia.Surface.ContentChangeMode": [[224, 2, 1, "", "__init__"], [224, 3, 1, "", "kDiscard_ContentChangeMode"], [224, 3, 1, "", "kRetain_ContentChangeMode"], [224, 3, 1, "", "name"], [224, 3, 1, "", "value"]], "skia.Surface.RescaleGamma": [[225, 2, 1, "", "__init__"], [225, 3, 1, "", "kLinear"], [225, 3, 1, "", "kSrc"], [225, 3, 1, "", "name"], [225, 3, 1, "", "value"]], "skia.SurfaceCharacterization": [[226, 2, 1, "", "__init__"], [226, 2, 1, "", "cacheMaxResourceBytes"], [226, 2, 1, "", "colorSpace"], [226, 2, 1, "", "createBackendFormat"], [226, 2, 1, "", "createColorSpace"], [226, 2, 1, "", "createFBO0"], [226, 2, 1, "", "createResized"], [226, 2, 1, "", "height"], [226, 2, 1, "", "isMipMapped"], [226, 2, 1, "", "isTextureable"], [226, 2, 1, "", "isValid"], [226, 2, 1, "", "refColorSpace"], [226, 2, 1, "", "surfaceProps"], [226, 2, 1, "", "usesGLFBO0"], [226, 2, 1, "", "vulkanSecondaryCBCompatible"], [226, 2, 1, "", "width"]], "skia.SurfaceProps": [[228, 1, 1, "", "Flags"], [227, 2, 1, "", "__init__"], [227, 2, 1, "", "flags"], [227, 2, 1, "", "isUseDeviceIndependentFonts"], [227, 3, 1, "", "kUseDeviceIndependentFonts_Flag"], [227, 3, 1, "", "kUseDistanceFieldFonts_Flag"], [227, 2, 1, "", "pixelGeometry"]], "skia.SurfaceProps.Flags": [[228, 2, 1, "", "__init__"], [228, 3, 1, "", "kUseDeviceIndependentFonts_Flag"], [228, 3, 1, "", "name"], [228, 3, 1, "", "value"]], "skia.TableMaskFilter": [[229, 2, 1, "", "Create"], [229, 2, 1, "", "CreateClip"], [229, 2, 1, "", "CreateGamma"], [229, 2, 1, "", "MakeClipTable"], [229, 2, 1, "", "MakeGammaTable"], [229, 2, 1, "", "__init__"]], "skia.TextBlob": [[230, 2, 1, "", "Deserialize"], [231, 1, 1, "", "Iter"], [230, 2, 1, "", "MakeFromPosText"], [230, 2, 1, "", "MakeFromPosTextH"], [230, 2, 1, "", "MakeFromRSXform"], [230, 2, 1, "", "MakeFromString"], [230, 2, 1, "", "MakeFromText"], [230, 2, 1, "", "__init__"], [230, 2, 1, "", "bounds"], [230, 2, 1, "", "deref"], [230, 2, 1, "", "getIntercepts"], [230, 2, 1, "", "ref"], [230, 2, 1, "", "refCntGreaterThan"], [230, 2, 1, "", "serialize"], [230, 2, 1, "", "unique"], [230, 2, 1, "", "uniqueID"], [230, 2, 1, "", "unref"]], "skia.TextBlob.Iter": [[232, 1, 1, "", "Run"], [231, 2, 1, "", "__init__"], [231, 2, 1, "", "next"]], "skia.TextBlob.Iter.Run": [[232, 2, 1, "", "__init__"], [232, 3, 1, "", "fGlyphCount"], [232, 3, 1, "", "fGlyphIndices"], [232, 3, 1, "", "fTypeface"]], "skia.TextBlobBuilder": [[233, 2, 1, "", "__init__"], [233, 2, 1, "", "allocRun"], [233, 2, 1, "", "allocRunPos"], [233, 2, 1, "", "allocRunPosH"], [233, 2, 1, "", "allocRunRSXform"], [233, 2, 1, "", "make"]], "skia.TextEncoding": [[234, 2, 1, "", "__init__"], [234, 3, 1, "", "kGlyphID"], [234, 3, 1, "", "kUTF16"], [234, 3, 1, "", "kUTF32"], [234, 3, 1, "", "kUTF8"], [234, 3, 1, "", "name"], [234, 3, 1, "", "value"]], "skia.TileMode": [[235, 2, 1, "", "__init__"], [235, 3, 1, "", "kClamp"], [235, 3, 1, "", "kDecal"], [235, 3, 1, "", "kLastTileMode"], [235, 3, 1, "", "kMirror"], [235, 3, 1, "", "kRepeat"], [235, 3, 1, "", "name"], [235, 3, 1, "", "value"]], "skia.TrimPathEffect": [[236, 2, 1, "", "Make"], [237, 1, 1, "", "Mode"], [236, 2, 1, "", "__init__"], [236, 3, 1, "", "kInverted"], [236, 3, 1, "", "kNormal"]], "skia.TrimPathEffect.Mode": [[237, 2, 1, "", "__init__"], [237, 3, 1, "", "kInverted"], [237, 3, 1, "", "kNormal"], [237, 3, 1, "", "name"], [237, 3, 1, "", "value"]], "skia.Typeface": [[238, 2, 1, "", "Equal"], [238, 2, 1, "", "MakeDefault"], [238, 2, 1, "", "MakeDeserialize"], [238, 2, 1, "", "MakeFromData"], [238, 2, 1, "", "MakeFromFile"], [238, 2, 1, "", "MakeFromName"], [239, 1, 1, "", "SerializeBehavior"], [238, 2, 1, "", "UniqueID"], [238, 2, 1, "", "__init__"], [238, 2, 1, "", "copyTableData"], [238, 2, 1, "", "countGlyphs"], [238, 2, 1, "", "countTables"], [238, 2, 1, "", "fontStyle"], [238, 2, 1, "", "getBounds"], [238, 2, 1, "", "getFamilyName"], [238, 2, 1, "", "getFamilyNames"], [238, 2, 1, "", "getKerningPairAdjustments"], [238, 2, 1, "", "getPostScriptName"], [238, 2, 1, "", "getTableData"], [238, 2, 1, "", "getTableSize"], [238, 2, 1, "", "getTableTags"], [238, 2, 1, "", "getUnitsPerEm"], [238, 2, 1, "", "getVariationDesignParameters"], [238, 2, 1, "", "getVariationDesignPosition"], [238, 2, 1, "", "isBold"], [238, 2, 1, "", "isFixedPitch"], [238, 2, 1, "", "isItalic"], [238, 3, 1, "", "kDoIncludeData"], [238, 3, 1, "", "kDontIncludeData"], [238, 3, 1, "", "kIncludeDataIfLocal"], [238, 2, 1, "", "makeClone"], [238, 2, 1, "", "ref"], [238, 2, 1, "", "serialize"], [238, 2, 1, "", "unicharToGlyph"], [238, 2, 1, "", "unicharsToGlyphs"], [238, 2, 1, "", "unique"], [238, 2, 1, "", "uniqueID"], [238, 2, 1, "", "unref"]], "skia.Typeface.SerializeBehavior": [[239, 2, 1, "", "__init__"], [239, 3, 1, "", "kDoIncludeData"], [239, 3, 1, "", "kDontIncludeData"], [239, 3, 1, "", "kIncludeDataIfLocal"], [239, 3, 1, "", "name"], [239, 3, 1, "", "value"]], "skia.Vertices": [[240, 2, 1, "", "MakeCopy"], [241, 1, 1, "", "VertexMode"], [240, 2, 1, "", "__init__"], [240, 2, 1, "", "approximateSize"], [240, 2, 1, "", "bounds"], [240, 2, 1, "", "deref"], [240, 3, 1, "", "kLast_VertexMode"], [240, 3, 1, "", "kTriangleFan_VertexMode"], [240, 3, 1, "", "kTriangleStrip_VertexMode"], [240, 3, 1, "", "kTriangles_VertexMode"], [240, 2, 1, "", "ref"], [240, 2, 1, "", "refCntGreaterThan"], [240, 2, 1, "", "unique"], [240, 2, 1, "", "uniqueID"], [240, 2, 1, "", "unref"]], "skia.Vertices.VertexMode": [[241, 2, 1, "", "__init__"], [241, 3, 1, "", "kLast_VertexMode"], [241, 3, 1, "", "kTriangleFan_VertexMode"], [241, 3, 1, "", "kTriangleStrip_VertexMode"], [241, 3, 1, "", "kTriangles_VertexMode"], [241, 3, 1, "", "name"], [241, 3, 1, "", "value"]], "skia.VkFormat": [[242, 2, 1, "", "__init__"], [242, 3, 1, "", "name"], [242, 3, 1, "", "value"]], "skia.VkImageLayout": [[243, 2, 1, "", "__init__"], [243, 3, 1, "", "name"], [243, 3, 1, "", "value"]], "skia.WStream": [[244, 2, 1, "", "SizeOfPackedUInt"], [244, 2, 1, "", "__init__"], [244, 2, 1, "", "bytesWritten"], [244, 2, 1, "", "flush"], [244, 2, 1, "", "newline"], [244, 2, 1, "", "write"], [244, 2, 1, "", "write16"], [244, 2, 1, "", "write32"], [244, 2, 1, "", "write8"], [244, 2, 1, "", "writeBigDecAsText"], [244, 2, 1, "", "writeBool"], [244, 2, 1, "", "writeDecAsText"], [244, 2, 1, "", "writeHexAsText"], [244, 2, 1, "", "writePackedUInt"], [244, 2, 1, "", "writeScalar"], [244, 2, 1, "", "writeScalarAsText"], [244, 2, 1, "", "writeStream"], [244, 2, 1, "", "writeText"]], "skia.YUVAInfo": [[245, 2, 1, "", "HasAlpha"], [245, 2, 1, "", "NumChannelsInPlane"], [245, 2, 1, "", "NumPlanes"], [246, 1, 1, "", "PlaneConfig"], [245, 2, 1, "", "PlaneDimensions"], [247, 1, 1, "", "Siting"], [248, 1, 1, "", "Subsampling"], [245, 2, 1, "", "__init__"], [245, 2, 1, "", "computeTotalBytes"], [245, 2, 1, "", "dimensions"], [245, 2, 1, "", "hasAlpha"], [245, 2, 1, "", "height"], [245, 3, 1, "", "k410"], [245, 3, 1, "", "k411"], [245, 3, 1, "", "k420"], [245, 3, 1, "", "k422"], [245, 3, 1, "", "k440"], [245, 3, 1, "", "k444"], [245, 3, 1, "", "kCentered"], [245, 3, 1, "", "kMaxPlanes"], [245, 3, 1, "", "kUYV"], [245, 3, 1, "", "kUYVA"], [245, 3, 1, "", "kUnknown"], [245, 3, 1, "", "kYUV"], [245, 3, 1, "", "kYUVA"], [245, 3, 1, "", "kY_UV"], [245, 3, 1, "", "kY_UV_A"], [245, 3, 1, "", "kY_U_V"], [245, 3, 1, "", "kY_U_V_A"], [245, 3, 1, "", "kY_VU"], [245, 3, 1, "", "kY_VU_A"], [245, 3, 1, "", "kY_V_U"], [245, 3, 1, "", "kY_V_U_A"], [245, 2, 1, "", "numChannelsInPlane"], [245, 2, 1, "", "numPlanes"], [245, 2, 1, "", "origin"], [245, 2, 1, "", "planeConfig"], [245, 2, 1, "", "planeDimensions"], [245, 2, 1, "", "sitingX"], [245, 2, 1, "", "sitingY"], [245, 2, 1, "", "subSampling"], [245, 2, 1, "", "width"], [245, 2, 1, "", "yuvColorSpace"]], "skia.YUVAInfo.PlaneConfig": [[246, 2, 1, "", "__init__"], [246, 3, 1, "", "kUYV"], [246, 3, 1, "", "kUYVA"], [246, 3, 1, "", "kUnknown"], [246, 3, 1, "", "kYUV"], [246, 3, 1, "", "kYUVA"], [246, 3, 1, "", "kY_UV"], [246, 3, 1, "", "kY_UV_A"], [246, 3, 1, "", "kY_U_V"], [246, 3, 1, "", "kY_U_V_A"], [246, 3, 1, "", "kY_VU"], [246, 3, 1, "", "kY_VU_A"], [246, 3, 1, "", "kY_V_U"], [246, 3, 1, "", "kY_V_U_A"], [246, 3, 1, "", "name"], [246, 3, 1, "", "value"]], "skia.YUVAInfo.Siting": [[247, 2, 1, "", "__init__"], [247, 3, 1, "", "kCentered"], [247, 3, 1, "", "name"], [247, 3, 1, "", "value"]], "skia.YUVAInfo.Subsampling": [[248, 2, 1, "", "__init__"], [248, 3, 1, "", "k410"], [248, 3, 1, "", "k411"], [248, 3, 1, "", "k420"], [248, 3, 1, "", "k422"], [248, 3, 1, "", "k440"], [248, 3, 1, "", "k444"], [248, 3, 1, "", "kUnknown"], [248, 3, 1, "", "name"], [248, 3, 1, "", "value"]], "skia.YUVAPixmapInfo": [[250, 1, 1, "", "DataType"], [249, 2, 1, "", "DefaultColorTypeForDataType"], [249, 2, 1, "", "NumChannelsAndDataType"], [251, 1, 1, "", "SupportedDataTypes"], [249, 2, 1, "", "__init__"], [249, 2, 1, "", "computeTotalBytes"], [249, 2, 1, "", "dataType"], [249, 2, 1, "", "initPixmapsFromSingleAllocation"], [249, 2, 1, "", "isSupported"], [249, 2, 1, "", "isValid"], [249, 3, 1, "", "kFloat16"], [249, 3, 1, "", "kLast"], [249, 3, 1, "", "kMaxPlanes"], [249, 3, 1, "", "kUnorm10_Unorm2"], [249, 3, 1, "", "kUnorm16"], [249, 3, 1, "", "kUnorm8"], [249, 2, 1, "", "numPlanes"], [249, 2, 1, "", "planeInfo"], [249, 2, 1, "", "rowBytes"], [249, 2, 1, "", "yuvColorSpace"], [249, 2, 1, "", "yuvaInfo"]], "skia.YUVAPixmapInfo.DataType": [[250, 2, 1, "", "__init__"], [250, 3, 1, "", "kFloat16"], [250, 3, 1, "", "kLast"], [250, 3, 1, "", "kUnorm10_Unorm2"], [250, 3, 1, "", "kUnorm16"], [250, 3, 1, "", "kUnorm8"], [250, 3, 1, "", "name"], [250, 3, 1, "", "value"]], "skia.YUVAPixmapInfo.SupportedDataTypes": [[251, 2, 1, "", "All"], [251, 2, 1, "", "__init__"], [251, 2, 1, "", "enableDataType"], [251, 2, 1, "", "supported"]], "skia.YUVAPixmaps": [[252, 2, 1, "", "Allocate"], [252, 2, 1, "", "FromData"], [252, 2, 1, "", "FromExternalMemory"], [252, 2, 1, "", "FromExternalPixmaps"], [252, 2, 1, "", "__init__"], [252, 2, 1, "", "isValid"], [252, 2, 1, "", "numPlanes"], [252, 2, 1, "", "plane"], [252, 2, 1, "", "planes"], [252, 2, 1, "", "yuvaInfo"]], "skia.YUVColorSpace": [[253, 2, 1, "", "__init__"], [253, 3, 1, "", "kBT2020_YUVColorSpace"], [253, 3, 1, "", "kIdentity_YUVColorSpace"], [253, 3, 1, "", "kJPEG_YUVColorSpace"], [253, 3, 1, "", "kLastEnum_YUVColorSpace"], [253, 3, 1, "", "kRec601_YUVColorSpace"], [253, 3, 1, "", "kRec709_YUVColorSpace"], [253, 3, 1, "", "name"], [253, 3, 1, "", "value"]], "skia.gpuBackendApi": [[254, 2, 1, "", "__init__"], [254, 3, 1, "", "kDawn"], [254, 3, 1, "", "kMetal"], [254, 3, 1, "", "kMock"], [254, 3, 1, "", "kVulkan"], [254, 3, 1, "", "name"], [254, 3, 1, "", "value"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"develop": 0, "python": [0, 1, 257], "bind": 0, "design": 0, "contribut": 0, "skia": [1, 4], "document": [1, 2, 52], "indic": 1, "tabl": [1, 258], "instal": 2, "pypi": 2, "distribut": 2, "build": 2, "instruct": 2, "linux": 2, "maco": 2, "window": [2, 255], "test": 2, "refer": 3, "function": 4, "alphatyp": 5, "method": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], "attribut": [5, 6, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 46, 47, 53, 54, 56, 57, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 75, 76, 77, 78, 79, 81, 87, 92, 93, 94, 95, 97, 99, 103, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 138, 139, 140, 141, 142, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 187, 188, 189, 190, 191, 192, 194, 197, 200, 202, 205, 206, 209, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 253, 254], "applyperspectiveclip": 6, "autocanvasrestor": 7, "bbhfactori": 8, "bboxhierarchi": [9, 10], "metadata": [10, 152], "bitmap": [11, 12, 258], "allocflag": 12, "blendmod": 13, "blendmodecoeff": 14, "blurmaskfilt": 15, "blurstyl": 16, "budget": 17, "canva": [18, 19, 20, 21, 22, 23, 24, 25, 255, 257], "lattic": [19, 20], "recttyp": 20, "pointmod": 21, "quadaaflag": 22, "savelayerflag": 23, "savelayerrec": 24, "srcrectconstraint": 25, "clipop": 26, "codec": [27, 28, 29, 30, 31, 32, 33, 34], "disposalmethod": 28, "frameinfo": 29, "option": 30, "result": 31, "scanlineord": 32, "selectionpolici": 33, "zeroiniti": 34, "color4f": 35, "colorchannel": 36, "colorchannelflag": 37, "colorfilt": [38, 39, 40, 258], "type": [39, 44, 54, 62, 132, 139, 174, 191, 206], "colorinfo": 41, "colormatrix": 42, "colormatrixfilt": [43, 44], "colorspac": 45, "colortyp": 46, "convergemod": 47, "cornerpatheffect": 48, "dashpatheffect": 49, "data": 50, "discretepatheffect": 51, "drawabl": [53, 54], "dynamicmemorywstream": 55, "encodedimageformat": 56, "encodedorigin": 57, "filestream": 58, "filewstream": 59, "filtermod": 60, "flattan": [61, 62], "font": [63, 64], "edg": 64, "fontargu": [65, 66, 67, 68], "variationposit": [66, 67, 68], "coordin": [67, 68], "fonthint": 69, "fontmetr": [70, 71], "fontmetricsflag": 71, "fontmgr": 72, "fontparamet": [73, 74, 75], "variat": [74, 75], "axi": 75, "fontstyl": [76, 77, 78, 79], "slant": 77, "weight": 78, "width": 79, "fontstyleset": 80, "grbackendapi": 81, "grbackendformat": 82, "grbackendrendertarget": 83, "grbackendsemaphor": 84, "grbackendsurfacemutablest": 85, "grbackendtextur": 86, "grcolortyp": 87, "grcontext": 88, "grcontextopt": 89, "grcontext_bas": 90, "grdirectcontext": 91, "grflushinfo": 92, "grglbackendst": 93, "grglformat": 94, "grglframebufferinfo": 95, "grglinterfac": 96, "grgltextureinfo": 97, "grimagecontext": 98, "grmipmap": 99, "grmockopt": 100, "grmockrendertargetinfo": 101, "grmocktextureinfo": 102, "grprotect": 103, "grrecordingcontext": 104, "grrender": 105, "grsemaphoressubmit": 106, "grsurfaceorigin": 107, "grtexturetyp": 108, "grvkalloc": 109, "grvkbackendcontext": 110, "grvkdrawableinfo": 111, "grvkextensionflag": 112, "grvkfeatureflag": 113, "grvkimageinfo": 114, "grvkycbcrconversioninfo": 115, "gradientshad": [116, 117], "flag": [117, 228], "highcontrastconfig": [118, 119], "invertstyl": 119, "highcontrastfilt": 120, "ipoint": 121, "irect": 122, "isiz": 123, "imag": [124, 125, 126, 127, 128], "bitdepth": 125, "cachinghint": 126, "compressiontyp": 127, "legacybitmapmod": 128, "imagefilt": [129, 130, 131, 132, 133, 258], "croprect": 130, "mapdirect": 131, "imageinfo": 134, "line2dpatheffect": 135, "lumacolorfilt": 136, "m44": 137, "maskfilt": [138, 139, 258], "matrix": [140, 141, 142, 258], "scaletofit": 141, "typemask": 142, "matrixpatheffect": 143, "memorystream": 144, "mergepatheffect": 145, "mipmapbuild": 146, "nullwstream": 147, "opbuild": 148, "overdrawcolorfilt": 149, "pdf": [150, 151, 152, 153, 255], "attributelist": 151, "structureelementnod": 153, "paint": [154, 155, 156, 157, 258], "cap": 155, "join": 156, "style": [157, 166, 219], "path": [158, 159, 160, 161, 162, 163, 164, 258, 259], "addpathmod": 159, "arcsiz": [160, 169], "iter": [161, 199, 231, 232], "rawit": 162, "segmentmask": 163, "verb": 164, "path1dpatheffect": [165, 166], "path2dpatheffect": 167, "pathbuild": [168, 169], "pathdirect": 170, "patheffect": [171, 172, 173, 174, 258], "dashinfo": 172, "dashtyp": 173, "pathfilltyp": 175, "pathmeasur": [176, 177], "getposandtan": 177, "pathop": 178, "pathsegmentmask": 179, "pathverb": 180, "perlinnoiseshad": 181, "pictur": [182, 255], "picturerecord": 183, "pixelgeometri": 184, "pixelref": 185, "pixmap": 186, "point": [187, 258], "point3": 188, "rrect": [189, 190, 191], "corner": [190, 258], "rsxform": 192, "rtreefactori": 193, "rect": 194, "refcnt": 195, "refcntbas": 196, "region": [197, 198, 199, 200, 201], "cliper": 198, "op": 200, "spaner": 201, "svgcanva": 202, "svgdom": 203, "samplingopt": 204, "shader": [205, 206, 208, 258], "shadermaskfilt": 207, "size": 209, "stream": 210, "streamasset": 211, "streammemori": 212, "streamrewind": 213, "streamseek": 214, "string": 215, "strokepatheffect": 216, "strokerec": [217, 218, 219], "initstyl": 218, "surfac": [220, 221, 222, 223, 224, 225], "asyncreadresult": 221, "backendhandleaccess": 222, "backendsurfaceaccess": 223, "contentchangemod": 224, "rescalegamma": 225, "surfacecharacter": 226, "surfaceprop": [227, 228], "tablemaskfilt": 229, "textblob": [230, 231, 232], "run": 232, "textblobbuild": 233, "textencod": 234, "tilemod": 235, "trimpatheffect": [236, 237], "mode": 237, "typefac": [238, 239], "serializebehavior": 239, "vertic": [240, 241], "vertexmod": 241, "vkformat": 242, "vkimagelayout": 243, "wstream": 244, "yuvainfo": [245, 246, 247, 248], "planeconfig": 246, "site": 247, "subsampl": 248, "yuvapixmapinfo": [249, 250, 251], "datatyp": 250, "supporteddatatyp": 251, "yuvapixmap": 252, "yuvcolorspac": 253, "gpubackendapi": 254, "creation": 255, "raster": 255, "gpu": 255, "opengl": 255, "svg": 255, "tutori": 256, "notebook": 256, "exampl": 256, "overview": [257, 258, 259], "detail": 257, "more": 257, "draw": 257, "interoper": 257, "api": 257, "glanc": 257, "xfermod": 258, "radial": 258, "gradient": 258, "two": 258, "conic": 258, "sweep": 258, "fractal": 258, "perlin": 258, "nois": 258, "turbul": 258, "compos": 258, "drop": 258, "shadow": 258, "dilat": 258, "erod": 258, "blur": 258, "mask": 258, "filter": 258, "color": 258, "2d": 258, "effect": 258, "line": 258, "1d": 258, "dash": 258, "discret": 258, "sum": 258}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Development": [[0, "development"]], "Python binding design": [[0, "python-binding-design"]], "Contributing": [[0, "contributing"]], "skia-python": [[1, "skia-python"]], "Documentation": [[1, "documentation"], [2, "documentation"]], "Indices and tables": [[1, "indices-and-tables"]], "Install": [[2, "install"]], "PyPI distribution": [[2, "pypi-distribution"]], "Build instruction": [[2, "build-instruction"]], "Linux": [[2, "linux"]], "macOS": [[2, "macos"]], "Windows": [[2, "windows"]], "Testing": [[2, "testing"]], "Reference": [[3, "reference"]], "skia": [[4, "module-skia"]], "Functions": [[4, "functions"]], "AlphaType": [[5, "alphatype"]], "Methods": [[5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [9, "methods"], [10, "methods"], [11, "methods"], [12, "methods"], [13, "methods"], [14, "methods"], [15, "methods"], [16, "methods"], [17, "methods"], [18, "methods"], [19, "methods"], [20, "methods"], [21, "methods"], [22, "methods"], [23, "methods"], [24, "methods"], [25, "methods"], [26, "methods"], [27, "methods"], [28, "methods"], [29, "methods"], [30, "methods"], [31, "methods"], [32, "methods"], [33, "methods"], [34, "methods"], [35, "methods"], [36, "methods"], [37, "methods"], [38, "methods"], [39, "methods"], [40, "methods"], [41, "methods"], [42, "methods"], [43, "methods"], [44, "methods"], [45, "methods"], [46, "methods"], [47, "methods"], [48, "methods"], [49, "methods"], [50, "methods"], [51, "methods"], [52, "methods"], [53, "methods"], [54, "methods"], [55, "methods"], [56, "methods"], [57, "methods"], [58, "methods"], [59, "methods"], [60, "methods"], [61, "methods"], [62, "methods"], [63, "methods"], [64, "methods"], [65, "methods"], [66, "methods"], [67, "methods"], [68, "methods"], [69, "methods"], [70, "methods"], [71, "methods"], [72, "methods"], [73, "methods"], [74, "methods"], [75, "methods"], [76, "methods"], [77, "methods"], [78, "methods"], [79, "methods"], [80, "methods"], [81, "methods"], [82, "methods"], [83, "methods"], [84, "methods"], [85, "methods"], [86, "methods"], [87, "methods"], [88, "methods"], [89, "methods"], [90, "methods"], [91, "methods"], [92, "methods"], [93, "methods"], [94, "methods"], [95, "methods"], [96, "methods"], [97, "methods"], [98, "methods"], [99, "methods"], [100, "methods"], [101, "methods"], [102, "methods"], [103, "methods"], [104, "methods"], [105, "methods"], [106, "methods"], [107, "methods"], [108, "methods"], [109, "methods"], [110, "methods"], [111, "methods"], [112, "methods"], [113, "methods"], [114, "methods"], [115, "methods"], [116, "methods"], [117, "methods"], [118, "methods"], [119, "methods"], [120, "methods"], [121, "methods"], [122, "methods"], [123, "methods"], [124, "methods"], [125, "methods"], [126, "methods"], [127, "methods"], [128, "methods"], [129, "methods"], [130, "methods"], [131, "methods"], [132, "methods"], [133, "methods"], [134, "methods"], [135, "methods"], [136, "methods"], [137, "methods"], [138, "methods"], [139, "methods"], [140, "methods"], [141, "methods"], [142, "methods"], [143, "methods"], [144, "methods"], [145, "methods"], [146, "methods"], [147, "methods"], [148, "methods"], [149, "methods"], [150, "methods"], [151, "methods"], [152, "methods"], [153, "methods"], [154, "methods"], [155, "methods"], [156, "methods"], [157, "methods"], [158, "methods"], [159, "methods"], [160, "methods"], [161, "methods"], [162, "methods"], [163, "methods"], [164, "methods"], [165, "methods"], [166, "methods"], [167, "methods"], [168, "methods"], [169, "methods"], [170, "methods"], [171, "methods"], [172, "methods"], [173, "methods"], [174, "methods"], [175, "methods"], [176, "methods"], [177, "methods"], [178, "methods"], [179, "methods"], [180, "methods"], [181, "methods"], [182, "methods"], [183, "methods"], [184, "methods"], [185, "methods"], [186, "methods"], [187, "methods"], [188, "methods"], [189, "methods"], [190, "methods"], [191, "methods"], [192, "methods"], [193, "methods"], [194, "methods"], [195, "methods"], [196, "methods"], [197, "methods"], [198, "methods"], [199, "methods"], [200, "methods"], [201, "methods"], [202, "methods"], [203, "methods"], [204, "methods"], [205, "methods"], [206, "methods"], [207, "methods"], [208, "methods"], [209, "methods"], [210, "methods"], [211, "methods"], [212, "methods"], [213, "methods"], [214, "methods"], [215, "methods"], [216, "methods"], [217, "methods"], [218, "methods"], [219, "methods"], [220, "methods"], [221, "methods"], [222, "methods"], [223, "methods"], [224, "methods"], [225, "methods"], [226, "methods"], [227, "methods"], [228, "methods"], [229, "methods"], [230, "methods"], [231, "methods"], [232, "methods"], [233, "methods"], [234, "methods"], [235, "methods"], [236, "methods"], [237, "methods"], [238, "methods"], [239, "methods"], [240, "methods"], [241, "methods"], [242, "methods"], [243, "methods"], [244, "methods"], [245, "methods"], [246, "methods"], [247, "methods"], [248, "methods"], [249, "methods"], [250, "methods"], [251, "methods"], [252, "methods"], [253, "methods"], [254, "methods"]], "Attributes": [[5, "attributes"], [6, "attributes"], [10, "attributes"], [11, "attributes"], [12, "attributes"], [13, "attributes"], [14, "attributes"], [16, "attributes"], [17, "attributes"], [18, "attributes"], [19, "attributes"], [20, "attributes"], [21, "attributes"], [22, "attributes"], [23, "attributes"], [24, "attributes"], [25, "attributes"], [26, "attributes"], [27, "attributes"], [28, "attributes"], [29, "attributes"], [30, "attributes"], [31, "attributes"], [32, "attributes"], [33, "attributes"], [34, "attributes"], [35, "attributes"], [36, "attributes"], [37, "attributes"], [38, "attributes"], [39, "attributes"], [43, "attributes"], [44, "attributes"], [46, "attributes"], [47, "attributes"], [53, "attributes"], [54, "attributes"], [56, "attributes"], [57, "attributes"], [60, "attributes"], [61, "attributes"], [62, "attributes"], [63, "attributes"], [64, "attributes"], [66, "attributes"], [67, "attributes"], [69, "attributes"], [70, "attributes"], [71, "attributes"], [75, "attributes"], [76, "attributes"], [77, "attributes"], [78, "attributes"], [79, "attributes"], [81, "attributes"], [87, "attributes"], [92, "attributes"], [93, "attributes"], [94, "attributes"], [95, "attributes"], [97, "attributes"], [99, "attributes"], [103, "attributes"], [105, "attributes"], [106, "attributes"], [107, "attributes"], [108, "attributes"], [112, "attributes"], [113, "attributes"], [114, "attributes"], [116, "attributes"], [117, "attributes"], [118, "attributes"], [119, "attributes"], [121, "attributes"], [122, "attributes"], [123, "attributes"], [124, "attributes"], [125, "attributes"], [126, "attributes"], [127, "attributes"], [128, "attributes"], [129, "attributes"], [131, "attributes"], [132, "attributes"], [138, "attributes"], [139, "attributes"], [140, "attributes"], [141, "attributes"], [142, "attributes"], [149, "attributes"], [152, "attributes"], [153, "attributes"], [154, "attributes"], [155, "attributes"], [156, "attributes"], [157, "attributes"], [158, "attributes"], [159, "attributes"], [160, "attributes"], [163, "attributes"], [164, "attributes"], [165, "attributes"], [166, "attributes"], [168, "attributes"], [169, "attributes"], [170, "attributes"], [171, "attributes"], [172, "attributes"], [173, "attributes"], [174, "attributes"], [175, "attributes"], [176, "attributes"], [177, "attributes"], [178, "attributes"], [179, "attributes"], [180, "attributes"], [184, "attributes"], [187, "attributes"], [188, "attributes"], [189, "attributes"], [190, "attributes"], [191, "attributes"], [192, "attributes"], [194, "attributes"], [197, "attributes"], [200, "attributes"], [202, "attributes"], [205, "attributes"], [206, "attributes"], [209, "attributes"], [217, "attributes"], [218, "attributes"], [219, "attributes"], [220, "attributes"], [222, "attributes"], [223, "attributes"], [224, "attributes"], [225, "attributes"], [227, "attributes"], [228, "attributes"], [232, "attributes"], [234, "attributes"], [235, "attributes"], [236, "attributes"], [237, "attributes"], [238, "attributes"], [239, "attributes"], [240, "attributes"], [241, "attributes"], [242, "attributes"], [243, "attributes"], [245, "attributes"], [246, "attributes"], [247, "attributes"], [248, "attributes"], [249, "attributes"], [250, "attributes"], [253, "attributes"], [254, "attributes"]], "ApplyPerspectiveClip": [[6, "applyperspectiveclip"]], "AutoCanvasRestore": [[7, "autocanvasrestore"]], "BBHFactory": [[8, "bbhfactory"]], "BBoxHierarchy": [[9, "bboxhierarchy"]], "BBoxHierarchy.Metadata": [[10, "bboxhierarchy-metadata"]], "Bitmap": [[11, "bitmap"]], "Bitmap.AllocFlags": [[12, "bitmap-allocflags"]], "BlendMode": [[13, "blendmode"]], "BlendModeCoeff": [[14, "blendmodecoeff"]], "BlurMaskFilter": [[15, "blurmaskfilter"]], "BlurStyle": [[16, "blurstyle"]], "Budgeted": [[17, "budgeted"]], "Canvas": [[18, "canvas"]], "Canvas.Lattice": [[19, "canvas-lattice"]], "Canvas.Lattice.RectType": [[20, "canvas-lattice-recttype"]], "Canvas.PointMode": [[21, "canvas-pointmode"]], "Canvas.QuadAAFlags": [[22, "canvas-quadaaflags"]], "Canvas.SaveLayerFlags": [[23, "canvas-savelayerflags"]], "Canvas.SaveLayerRec": [[24, "canvas-savelayerrec"]], "Canvas.SrcRectConstraint": [[25, "canvas-srcrectconstraint"]], "ClipOp": [[26, "clipop"]], "Codec": [[27, "codec"]], "Codec.DisposalMethod": [[28, "codec-disposalmethod"]], "Codec.FrameInfo": [[29, "codec-frameinfo"]], "Codec.Options": [[30, "codec-options"]], "Codec.Result": [[31, "codec-result"]], "Codec.ScanlineOrder": [[32, "codec-scanlineorder"]], "Codec.SelectionPolicy": [[33, "codec-selectionpolicy"]], "Codec.ZeroInitialized": [[34, "codec-zeroinitialized"]], "Color4f": [[35, "color4f"]], "ColorChannel": [[36, "colorchannel"]], "ColorChannelFlag": [[37, "colorchannelflag"]], "ColorFilter": [[38, "colorfilter"], [258, "colorfilter"]], "ColorFilter.Type": [[39, "colorfilter-type"]], "ColorFilters": [[40, "colorfilters"]], "ColorInfo": [[41, "colorinfo"]], "ColorMatrix": [[42, "colormatrix"]], "ColorMatrixFilter": [[43, "colormatrixfilter"]], "ColorMatrixFilter.Type": [[44, "colormatrixfilter-type"]], "ColorSpace": [[45, "colorspace"]], "ColorType": [[46, "colortype"]], "ConvergeMode": [[47, "convergemode"]], "CornerPathEffect": [[48, "cornerpatheffect"]], "DashPathEffect": [[49, "dashpatheffect"]], "Data": [[50, "data"]], "DiscretePathEffect": [[51, "discretepatheffect"]], "Document": [[52, "document"]], "Drawable": [[53, "drawable"]], "Drawable.Type": [[54, "drawable-type"]], "DynamicMemoryWStream": [[55, "dynamicmemorywstream"]], "EncodedImageFormat": [[56, "encodedimageformat"]], "EncodedOrigin": [[57, "encodedorigin"]], "FILEStream": [[58, "filestream"]], "FILEWStream": [[59, "filewstream"]], "FilterMode": [[60, "filtermode"]], "Flattanable": [[61, "flattanable"]], "Flattanable.Type": [[62, "flattanable-type"]], "Font": [[63, "font"]], "Font.Edging": [[64, "font-edging"]], "FontArguments": [[65, "fontarguments"]], "FontArguments.VariationPosition": [[66, "fontarguments-variationposition"]], "FontArguments.VariationPosition.Coordinate": [[67, "fontarguments-variationposition-coordinate"]], "FontArguments.VariationPosition.Coordinates": [[68, "fontarguments-variationposition-coordinates"]], "FontHinting": [[69, "fonthinting"]], "FontMetrics": [[70, "fontmetrics"]], "FontMetrics.FontMetricsFlags": [[71, "fontmetrics-fontmetricsflags"]], "FontMgr": [[72, "fontmgr"]], "FontParameters": [[73, "fontparameters"]], "FontParameters.Variation": [[74, "fontparameters-variation"]], "FontParameters.Variation.Axis": [[75, "fontparameters-variation-axis"]], "FontStyle": [[76, "fontstyle"]], "FontStyle.Slant": [[77, "fontstyle-slant"]], "FontStyle.Weight": [[78, "fontstyle-weight"]], "FontStyle.Width": [[79, "fontstyle-width"]], "FontStyleSet": [[80, "fontstyleset"]], "GrBackendApi": [[81, "grbackendapi"]], "GrBackendFormat": [[82, "grbackendformat"]], "GrBackendRenderTarget": [[83, "grbackendrendertarget"]], "GrBackendSemaphore": [[84, "grbackendsemaphore"]], "GrBackendSurfaceMutableState": [[85, "grbackendsurfacemutablestate"]], "GrBackendTexture": [[86, "grbackendtexture"]], "GrColorType": [[87, "grcolortype"]], "GrContext": [[88, "grcontext"]], "GrContextOptions": [[89, "grcontextoptions"]], "GrContext_Base": [[90, "grcontext-base"]], "GrDirectContext": [[91, "grdirectcontext"]], "GrFlushInfo": [[92, "grflushinfo"]], "GrGLBackendState": [[93, "grglbackendstate"]], "GrGLFormat": [[94, "grglformat"]], "GrGLFramebufferInfo": [[95, "grglframebufferinfo"]], "GrGLInterface": [[96, "grglinterface"]], "GrGLTextureInfo": [[97, "grgltextureinfo"]], "GrImageContext": [[98, "grimagecontext"]], "GrMipmapped": [[99, "grmipmapped"]], "GrMockOptions": [[100, "grmockoptions"]], "GrMockRenderTargetInfo": [[101, "grmockrendertargetinfo"]], "GrMockTextureInfo": [[102, "grmocktextureinfo"]], "GrProtected": [[103, "grprotected"]], "GrRecordingContext": [[104, "grrecordingcontext"]], "GrRenderable": [[105, "grrenderable"]], "GrSemaphoresSubmitted": [[106, "grsemaphoressubmitted"]], "GrSurfaceOrigin": [[107, "grsurfaceorigin"]], "GrTextureType": [[108, "grtexturetype"]], "GrVkAlloc": [[109, "grvkalloc"]], "GrVkBackendContext": [[110, "grvkbackendcontext"]], "GrVkDrawableInfo": [[111, "grvkdrawableinfo"]], "GrVkExtensionFlags": [[112, "grvkextensionflags"]], "GrVkFeatureFlags": [[113, "grvkfeatureflags"]], "GrVkImageInfo": [[114, "grvkimageinfo"]], "GrVkYcbcrConversionInfo": [[115, "grvkycbcrconversioninfo"]], "GradientShader": [[116, "gradientshader"]], "GradientShader.Flags": [[117, "gradientshader-flags"]], "HighContrastConfig": [[118, "highcontrastconfig"]], "HighContrastConfig.InvertStyle": [[119, "highcontrastconfig-invertstyle"]], "HighContrastFilter": [[120, "highcontrastfilter"]], "IPoint": [[121, "ipoint"]], "IRect": [[122, "irect"]], "ISize": [[123, "isize"]], "Image": [[124, "image"]], "Image.BitDepth": [[125, "image-bitdepth"]], "Image.CachingHint": [[126, "image-cachinghint"]], "Image.CompressionType": [[127, "image-compressiontype"]], "Image.LegacyBitmapMode": [[128, "image-legacybitmapmode"]], "ImageFilter": [[129, "imagefilter"], [258, "imagefilter"]], "ImageFilter.CropRect": [[130, "imagefilter-croprect"]], "ImageFilter.MapDirection": [[131, "imagefilter-mapdirection"]], "ImageFilter.Type": [[132, "imagefilter-type"]], "ImageFilters": [[133, "imagefilters"]], "ImageInfo": [[134, "imageinfo"]], "Line2DPathEffect": [[135, "line2dpatheffect"]], "LumaColorFilter": [[136, "lumacolorfilter"]], "M44": [[137, "m44"]], "MaskFilter": [[138, "maskfilter"], [258, "maskfilter"]], "MaskFilter.Type": [[139, "maskfilter-type"]], "Matrix": [[140, "matrix"]], "Matrix.ScaleToFit": [[141, "matrix-scaletofit"]], "Matrix.TypeMask": [[142, "matrix-typemask"]], "MatrixPathEffect": [[143, "matrixpatheffect"]], "MemoryStream": [[144, "memorystream"]], "MergePathEffect": [[145, "mergepatheffect"]], "MipmapBuilder": [[146, "mipmapbuilder"]], "NullWStream": [[147, "nullwstream"]], "OpBuilder": [[148, "opbuilder"]], "OverdrawColorFilter": [[149, "overdrawcolorfilter"]], "PDF": [[150, "pdf"], [255, "pdf"]], "PDF.AttributeList": [[151, "pdf-attributelist"]], "PDF.Metadata": [[152, "pdf-metadata"]], "PDF.StructureElementNode": [[153, "pdf-structureelementnode"]], "Paint": [[154, "paint"]], "Paint.Cap": [[155, "paint-cap"]], "Paint.Join": [[156, "paint-join"]], "Paint.Style": [[157, "paint-style"]], "Path": [[158, "path"]], "Path.AddPathMode": [[159, "path-addpathmode"]], "Path.ArcSize": [[160, "path-arcsize"]], "Path.Iter": [[161, "path-iter"]], "Path.RawIter": [[162, "path-rawiter"]], "Path.SegmentMask": [[163, "path-segmentmask"]], "Path.Verb": [[164, "path-verb"]], "Path1DPathEffect": [[165, "path1dpatheffect"]], "Path1DPathEffect.Style": [[166, "path1dpatheffect-style"]], "Path2DPathEffect": [[167, "path2dpatheffect"]], "PathBuilder": [[168, "pathbuilder"]], "PathBuilder.ArcSize": [[169, "pathbuilder-arcsize"]], "PathDirection": [[170, "pathdirection"]], "PathEffect": [[171, "patheffect"], [258, "patheffect"]], "PathEffect.DashInfo": [[172, "patheffect-dashinfo"]], "PathEffect.DashType": [[173, "patheffect-dashtype"]], "PathEffect.Type": [[174, "patheffect-type"]], "PathFillType": [[175, "pathfilltype"]], "PathMeasure": [[176, "pathmeasure"]], "PathMeasure.GetPosAndTan": [[177, "pathmeasure-getposandtan"]], "PathOp": [[178, "pathop"]], "PathSegmentMask": [[179, "pathsegmentmask"]], "PathVerb": [[180, "pathverb"]], "PerlinNoiseShader": [[181, "perlinnoiseshader"]], "Picture": [[182, "picture"], [255, "picture"]], "PictureRecorder": [[183, "picturerecorder"]], "PixelGeometry": [[184, "pixelgeometry"]], "PixelRef": [[185, "pixelref"]], "Pixmap": [[186, "pixmap"]], "Point": [[187, "point"]], "Point3": [[188, "point3"]], "RRect": [[189, "rrect"]], "RRect.Corner": [[190, "rrect-corner"]], "RRect.Type": [[191, "rrect-type"]], "RSXform": [[192, "rsxform"]], "RTreeFactory": [[193, "rtreefactory"]], "Rect": [[194, "rect"]], "RefCnt": [[195, "refcnt"]], "RefCntBase": [[196, "refcntbase"]], "Region": [[197, "region"]], "Region.Cliperator": [[198, "region-cliperator"]], "Region.Iterator": [[199, "region-iterator"]], "Region.Op": [[200, "region-op"]], "Region.Spanerator": [[201, "region-spanerator"]], "SVGCanvas": [[202, "svgcanvas"]], "SVGDOM": [[203, "svgdom"]], "SamplingOptions": [[204, "samplingoptions"]], "Shader": [[205, "shader"], [258, "shader"]], "Shader.Type": [[206, "shader-type"]], "ShaderMaskFilter": [[207, "shadermaskfilter"]], "Shaders": [[208, "shaders"]], "Size": [[209, "size"]], "Stream": [[210, "stream"]], "StreamAsset": [[211, "streamasset"]], "StreamMemory": [[212, "streammemory"]], "StreamRewindable": [[213, "streamrewindable"]], "StreamSeekable": [[214, "streamseekable"]], "String": [[215, "string"]], "StrokePathEffect": [[216, "strokepatheffect"]], "StrokeRec": [[217, "strokerec"]], "StrokeRec.InitStyle": [[218, "strokerec-initstyle"]], "StrokeRec.Style": [[219, "strokerec-style"]], "Surface": [[220, "surface"]], "Surface.AsyncReadResult": [[221, "surface-asyncreadresult"]], "Surface.BackendHandleAccess": [[222, "surface-backendhandleaccess"]], "Surface.BackendSurfaceAccess": [[223, "surface-backendsurfaceaccess"]], "Surface.ContentChangeMode": [[224, "surface-contentchangemode"]], "Surface.RescaleGamma": [[225, "surface-rescalegamma"]], "SurfaceCharacterization": [[226, "surfacecharacterization"]], "SurfaceProps": [[227, "surfaceprops"]], "SurfaceProps.Flags": [[228, "surfaceprops-flags"]], "TableMaskFilter": [[229, "tablemaskfilter"]], "TextBlob": [[230, "textblob"]], "TextBlob.Iter": [[231, "textblob-iter"]], "TextBlob.Iter.Run": [[232, "textblob-iter-run"]], "TextBlobBuilder": [[233, "textblobbuilder"]], "TextEncoding": [[234, "textencoding"]], "TileMode": [[235, "tilemode"]], "TrimPathEffect": [[236, "trimpatheffect"]], "TrimPathEffect.Mode": [[237, "trimpatheffect-mode"]], "Typeface": [[238, "typeface"]], "Typeface.SerializeBehavior": [[239, "typeface-serializebehavior"]], "Vertices": [[240, "vertices"]], "Vertices.VertexMode": [[241, "vertices-vertexmode"]], "VkFormat": [[242, "vkformat"]], "VkImageLayout": [[243, "vkimagelayout"]], "WStream": [[244, "wstream"]], "YUVAInfo": [[245, "yuvainfo"]], "YUVAInfo.PlaneConfig": [[246, "yuvainfo-planeconfig"]], "YUVAInfo.Siting": [[247, "yuvainfo-siting"]], "YUVAInfo.Subsampling": [[248, "yuvainfo-subsampling"]], "YUVAPixmapInfo": [[249, "yuvapixmapinfo"]], "YUVAPixmapInfo.DataType": [[250, "yuvapixmapinfo-datatype"]], "YUVAPixmapInfo.SupportedDataTypes": [[251, "yuvapixmapinfo-supporteddatatypes"]], "YUVAPixmaps": [[252, "yuvapixmaps"]], "YUVColorSpace": [[253, "yuvcolorspace"]], "gpuBackendApi": [[254, "gpubackendapi"]], "Canvas Creation": [[255, "canvas-creation"]], "Raster": [[255, "raster"]], "GPU": [[255, "gpu"]], "OpenGL window": [[255, "opengl-window"]], "SVG": [[255, "svg"]], "Tutorial": [[256, "tutorial"]], "Notebook examples": [[256, "notebook-examples"]], "Overview": [[257, "overview"]], "Canvas details": [[257, "canvas-details"]], "More drawings": [[257, "more-drawings"]], "Python interoperability": [[257, "python-interoperability"]], "APIs at a glance": [[257, "apis-at-a-glance"]], "Paint Overview": [[258, "paint-overview"]], "Xfermode": [[258, "xfermode"]], "Bitmap Shader": [[258, "bitmap-shader"]], "Radial Gradient Shader": [[258, "radial-gradient-shader"]], "Two-Point Conical Gradient Shader": [[258, "two-point-conical-gradient-shader"]], "Sweep Gradient Shader": [[258, "sweep-gradient-shader"]], "Fractal Perlin Noise Shader": [[258, "fractal-perlin-noise-shader"]], "Turbulence Perlin Noise Shader": [[258, "turbulence-perlin-noise-shader"]], "Compose Shader": [[258, "compose-shader"]], "Drop Shadow": [[258, "drop-shadow"]], "Dilate": [[258, "dilate"]], "Erode": [[258, "erode"]], "Blur Mask Filter": [[258, "blur-mask-filter"]], "Color Matrix Color Filter": [[258, "color-matrix-color-filter"]], "Color Table Color Filter": [[258, "color-table-color-filter"]], "Path 2D Path Effect": [[258, "path-2d-path-effect"]], "Line 2D Path Effect": [[258, "line-2d-path-effect"]], "Path 1D Path Effect": [[258, "path-1d-path-effect"]], "Corner Path Effect": [[258, "corner-path-effect"]], "Dash Path Effect": [[258, "dash-path-effect"]], "Discrete Path Effect": [[258, "discrete-path-effect"]], "Compose Path Effect": [[258, "compose-path-effect"]], "Sum Path Effect": [[258, "sum-path-effect"]], "Path Overview": [[259, "path-overview"]]}, "indexentries": {"alphatypeisopaque() (in module skia)": [[4, "skia.AlphaTypeIsOpaque"]], "aswinding() (in module skia)": [[4, "skia.AsWinding"]], "blendmode_ascoeff() (in module skia)": [[4, "skia.BlendMode_AsCoeff"]], "blendmode_name() (in module skia)": [[4, "skia.BlendMode_Name"]], "color() (in module skia)": [[4, "skia.Color"]], "colorgeta() (in module skia)": [[4, "skia.ColorGetA"]], "colorgetb() (in module skia)": [[4, "skia.ColorGetB"]], "colorgetg() (in module skia)": [[4, "skia.ColorGetG"]], "colorgetr() (in module skia)": [[4, "skia.ColorGetR"]], "colorseta() (in module skia)": [[4, "skia.ColorSetA"]], "colorsetargb() (in module skia)": [[4, "skia.ColorSetARGB"]], "colorsetrgb() (in module skia)": [[4, "skia.ColorSetRGB"]], "colortohsv() (in module skia)": [[4, "skia.ColorToHSV"]], "colortypebytesperpixel() (in module skia)": [[4, "skia.ColorTypeBytesPerPixel"]], "colortypeisalwaysopaque() (in module skia)": [[4, "skia.ColorTypeIsAlwaysOpaque"]], "colortypevalidatealphatype() (in module skia)": [[4, "skia.ColorTypeValidateAlphaType"]], "computeisopaque() (in module skia)": [[4, "skia.ComputeIsOpaque"]], "encodedorigintomatrix() (in module skia)": [[4, "skia.EncodedOriginToMatrix"]], "hsvtocolor() (in module skia)": [[4, "skia.HSVToColor"]], "makenullcanvas() (in module skia)": [[4, "skia.MakeNullCanvas"]], "op() (in module skia)": [[4, "skia.Op"]], "pathfilltype_converttononinverse() (in module skia)": [[4, "skia.PathFillType_ConvertToNonInverse"]], "pathfilltype_isevenodd() (in module skia)": [[4, "skia.PathFillType_IsEvenOdd"]], "pathfilltype_isinverse() (in module skia)": [[4, "skia.PathFillType_IsInverse"]], "premultiplyargb() (in module skia)": [[4, "skia.PreMultiplyARGB"]], "premultiplycolor() (in module skia)": [[4, "skia.PreMultiplyColor"]], "rgbtohsv() (in module skia)": [[4, "skia.RGBToHSV"]], "simplify() (in module skia)": [[4, "skia.Simplify"]], "tightbounds() (in module skia)": [[4, "skia.TightBounds"]], "module": [[4, "module-skia"]], "skia": [[4, "module-skia"]], "alphatype (class in skia)": [[5, "skia.AlphaType"]], "__init__() (alphatype method)": [[5, "skia.AlphaType.__init__"]], "klastenum_alphatype (alphatype attribute)": [[5, "skia.AlphaType.kLastEnum_AlphaType"]], "kopaque_alphatype (alphatype attribute)": [[5, "skia.AlphaType.kOpaque_AlphaType"]], "kpremul_alphatype (alphatype attribute)": [[5, "skia.AlphaType.kPremul_AlphaType"]], "kunknown_alphatype (alphatype attribute)": [[5, "skia.AlphaType.kUnknown_AlphaType"]], "kunpremul_alphatype (alphatype attribute)": [[5, "skia.AlphaType.kUnpremul_AlphaType"]], "name (alphatype attribute)": [[5, "skia.AlphaType.name"]], "value (alphatype attribute)": [[5, "skia.AlphaType.value"]], "applyperspectiveclip (class in skia)": [[6, "skia.ApplyPerspectiveClip"]], "__init__() (applyperspectiveclip method)": [[6, "skia.ApplyPerspectiveClip.__init__"]], "kno (applyperspectiveclip attribute)": [[6, "skia.ApplyPerspectiveClip.kNo"]], "kyes (applyperspectiveclip attribute)": [[6, "skia.ApplyPerspectiveClip.kYes"]], "name (applyperspectiveclip attribute)": [[6, "skia.ApplyPerspectiveClip.name"]], "value (applyperspectiveclip attribute)": [[6, "skia.ApplyPerspectiveClip.value"]], "autocanvasrestore (class in skia)": [[7, "skia.AutoCanvasRestore"]], "__init__() (autocanvasrestore method)": [[7, "skia.AutoCanvasRestore.__init__"]], "restore() (autocanvasrestore method)": [[7, "skia.AutoCanvasRestore.restore"]], "bbhfactory (class in skia)": [[8, "skia.BBHFactory"]], "__init__() (bbhfactory method)": [[8, "skia.BBHFactory.__init__"]], "bboxhierarchy (class in skia)": [[9, "skia.BBoxHierarchy"]], "__init__() (bboxhierarchy method)": [[9, "skia.BBoxHierarchy.__init__"]], "bytesused() (bboxhierarchy method)": [[9, "skia.BBoxHierarchy.bytesUsed"]], "insert() (bboxhierarchy method)": [[9, "skia.BBoxHierarchy.insert"]], "ref() (bboxhierarchy method)": [[9, "skia.BBoxHierarchy.ref"]], "search() (bboxhierarchy method)": [[9, "skia.BBoxHierarchy.search"]], "unique() (bboxhierarchy method)": [[9, "skia.BBoxHierarchy.unique"]], "unref() (bboxhierarchy method)": [[9, "skia.BBoxHierarchy.unref"]], "metadata (class in skia.bboxhierarchy)": [[10, "skia.BBoxHierarchy.Metadata"]], "__init__() (metadata method)": [[10, "skia.BBoxHierarchy.Metadata.__init__"], [152, "skia.PDF.Metadata.__init__"]], "isdraw (metadata attribute)": [[10, "skia.BBoxHierarchy.Metadata.isDraw"]], "bitmap (class in skia)": [[11, "skia.Bitmap"]], "__init__() (bitmap method)": [[11, "skia.Bitmap.__init__"]], "allocn32pixels() (bitmap method)": [[11, "skia.Bitmap.allocN32Pixels"]], "allocpixels() (bitmap method)": [[11, "skia.Bitmap.allocPixels"]], "allocpixelsflags() (bitmap method)": [[11, "skia.Bitmap.allocPixelsFlags"]], "alphatype() (bitmap method)": [[11, "skia.Bitmap.alphaType"]], "bounds() (bitmap method)": [[11, "skia.Bitmap.bounds"]], "bytesperpixel() (bitmap method)": [[11, "skia.Bitmap.bytesPerPixel"]], "colorspace() (bitmap method)": [[11, "skia.Bitmap.colorSpace"]], "colortype() (bitmap method)": [[11, "skia.Bitmap.colorType"]], "computebytesize() (bitmap method)": [[11, "skia.Bitmap.computeByteSize"]], "dimensions() (bitmap method)": [[11, "skia.Bitmap.dimensions"]], "drawsnothing() (bitmap method)": [[11, "skia.Bitmap.drawsNothing"]], "empty() (bitmap method)": [[11, "skia.Bitmap.empty"]], "erase() (bitmap method)": [[11, "skia.Bitmap.erase"]], "eraseargb() (bitmap method)": [[11, "skia.Bitmap.eraseARGB"]], "extractalpha() (bitmap method)": [[11, "skia.Bitmap.extractAlpha"]], "extractsubset() (bitmap method)": [[11, "skia.Bitmap.extractSubset"]], "getalphaf() (bitmap method)": [[11, "skia.Bitmap.getAlphaf"]], "getbounds() (bitmap method)": [[11, "skia.Bitmap.getBounds"]], "getcolor() (bitmap method)": [[11, "skia.Bitmap.getColor"]], "getgenerationid() (bitmap method)": [[11, "skia.Bitmap.getGenerationID"]], "getpixels() (bitmap method)": [[11, "skia.Bitmap.getPixels"]], "getsubset() (bitmap method)": [[11, "skia.Bitmap.getSubset"]], "height() (bitmap method)": [[11, "skia.Bitmap.height"]], "info() (bitmap method)": [[11, "skia.Bitmap.info"]], "installpixels() (bitmap method)": [[11, "skia.Bitmap.installPixels"]], "isimmutable() (bitmap method)": [[11, "skia.Bitmap.isImmutable"]], "isnull() (bitmap method)": [[11, "skia.Bitmap.isNull"]], "isopaque() (bitmap method)": [[11, "skia.Bitmap.isOpaque"]], "kzeropixels_allocflag (bitmap attribute)": [[11, "skia.Bitmap.kZeroPixels_AllocFlag"]], "makeshader() (bitmap method)": [[11, "skia.Bitmap.makeShader"]], "notifypixelschanged() (bitmap method)": [[11, "skia.Bitmap.notifyPixelsChanged"]], "peekpixels() (bitmap method)": [[11, "skia.Bitmap.peekPixels"]], "pixmap() (bitmap method)": [[11, "skia.Bitmap.pixmap"]], "readpixels() (bitmap method)": [[11, "skia.Bitmap.readPixels"]], "readytodraw() (bitmap method)": [[11, "skia.Bitmap.readyToDraw"]], "refcolorspace() (bitmap method)": [[11, "skia.Bitmap.refColorSpace"]], "reset() (bitmap method)": [[11, "skia.Bitmap.reset"]], "rowbytes() (bitmap method)": [[11, "skia.Bitmap.rowBytes"]], "rowbytesaspixels() (bitmap method)": [[11, "skia.Bitmap.rowBytesAsPixels"]], "setalphatype() (bitmap method)": [[11, "skia.Bitmap.setAlphaType"]], "setimmutable() (bitmap method)": [[11, "skia.Bitmap.setImmutable"]], "setinfo() (bitmap method)": [[11, "skia.Bitmap.setInfo"]], "setpixels() (bitmap method)": [[11, "skia.Bitmap.setPixels"]], "shiftperpixel() (bitmap method)": [[11, "skia.Bitmap.shiftPerPixel"]], "swap() (bitmap method)": [[11, "skia.Bitmap.swap"]], "tobytes() (bitmap method)": [[11, "skia.Bitmap.tobytes"]], "tryallocn32pixels() (bitmap method)": [[11, "skia.Bitmap.tryAllocN32Pixels"]], "tryallocpixels() (bitmap method)": [[11, "skia.Bitmap.tryAllocPixels"]], "tryallocpixelsflags() (bitmap method)": [[11, "skia.Bitmap.tryAllocPixelsFlags"]], "width() (bitmap method)": [[11, "skia.Bitmap.width"]], "writepixels() (bitmap method)": [[11, "skia.Bitmap.writePixels"]], "allocflags (class in skia.bitmap)": [[12, "skia.Bitmap.AllocFlags"]], "__init__() (allocflags method)": [[12, "skia.Bitmap.AllocFlags.__init__"]], "kzeropixels_allocflag (allocflags attribute)": [[12, "skia.Bitmap.AllocFlags.kZeroPixels_AllocFlag"]], "name (allocflags attribute)": [[12, "skia.Bitmap.AllocFlags.name"]], "value (allocflags attribute)": [[12, "skia.Bitmap.AllocFlags.value"]], "blendmode (class in skia)": [[13, "skia.BlendMode"]], "__init__() (blendmode method)": [[13, "skia.BlendMode.__init__"]], "kclear (blendmode attribute)": [[13, "skia.BlendMode.kClear"]], "kcolor (blendmode attribute)": [[13, "skia.BlendMode.kColor"]], "kcolorburn (blendmode attribute)": [[13, "skia.BlendMode.kColorBurn"]], "kcolordodge (blendmode attribute)": [[13, "skia.BlendMode.kColorDodge"]], "kdarken (blendmode attribute)": [[13, "skia.BlendMode.kDarken"]], "kdifference (blendmode attribute)": [[13, "skia.BlendMode.kDifference"]], "kdst (blendmode attribute)": [[13, "skia.BlendMode.kDst"]], "kdstatop (blendmode attribute)": [[13, "skia.BlendMode.kDstATop"]], "kdstin (blendmode attribute)": [[13, "skia.BlendMode.kDstIn"]], "kdstout (blendmode attribute)": [[13, "skia.BlendMode.kDstOut"]], "kdstover (blendmode attribute)": [[13, "skia.BlendMode.kDstOver"]], "kexclusion (blendmode attribute)": [[13, "skia.BlendMode.kExclusion"]], "khardlight (blendmode attribute)": [[13, "skia.BlendMode.kHardLight"]], "khue (blendmode attribute)": [[13, "skia.BlendMode.kHue"]], "klastcoeffmode (blendmode attribute)": [[13, "skia.BlendMode.kLastCoeffMode"]], "klastmode (blendmode attribute)": [[13, "skia.BlendMode.kLastMode"]], "klastseparablemode (blendmode attribute)": [[13, "skia.BlendMode.kLastSeparableMode"]], "klighten (blendmode attribute)": [[13, "skia.BlendMode.kLighten"]], "kluminosity (blendmode attribute)": [[13, "skia.BlendMode.kLuminosity"]], "kmodulate (blendmode attribute)": [[13, "skia.BlendMode.kModulate"]], "kmultiply (blendmode attribute)": [[13, "skia.BlendMode.kMultiply"]], "koverlay (blendmode attribute)": [[13, "skia.BlendMode.kOverlay"]], "kplus (blendmode attribute)": [[13, "skia.BlendMode.kPlus"]], "ksaturation (blendmode attribute)": [[13, "skia.BlendMode.kSaturation"]], "kscreen (blendmode attribute)": [[13, "skia.BlendMode.kScreen"]], "ksoftlight (blendmode attribute)": [[13, "skia.BlendMode.kSoftLight"]], "ksrc (blendmode attribute)": [[13, "skia.BlendMode.kSrc"]], "ksrcatop (blendmode attribute)": [[13, "skia.BlendMode.kSrcATop"]], "ksrcin (blendmode attribute)": [[13, "skia.BlendMode.kSrcIn"]], "ksrcout (blendmode attribute)": [[13, "skia.BlendMode.kSrcOut"]], "ksrcover (blendmode attribute)": [[13, "skia.BlendMode.kSrcOver"]], "kxor (blendmode attribute)": [[13, "skia.BlendMode.kXor"]], "name (blendmode attribute)": [[13, "skia.BlendMode.name"]], "value (blendmode attribute)": [[13, "skia.BlendMode.value"]], "blendmodecoeff (class in skia)": [[14, "skia.BlendModeCoeff"]], "__init__() (blendmodecoeff method)": [[14, "skia.BlendModeCoeff.__init__"]], "kcoeffcount (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kCoeffCount"]], "kda (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kDA"]], "kdc (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kDC"]], "kida (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kIDA"]], "kidc (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kIDC"]], "kisa (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kISA"]], "kisc (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kISC"]], "kone (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kOne"]], "ksa (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kSA"]], "ksc (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kSC"]], "kzero (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.kZero"]], "name (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.name"]], "value (blendmodecoeff attribute)": [[14, "skia.BlendModeCoeff.value"]], "blurmaskfilter (class in skia)": [[15, "skia.BlurMaskFilter"]], "__init__() (blurmaskfilter method)": [[15, "skia.BlurMaskFilter.__init__"]], "blurstyle (class in skia)": [[16, "skia.BlurStyle"]], "__init__() (blurstyle method)": [[16, "skia.BlurStyle.__init__"]], "kinner_blurstyle (blurstyle attribute)": [[16, "skia.BlurStyle.kInner_BlurStyle"]], "klastenum_blurstyle (blurstyle attribute)": [[16, "skia.BlurStyle.kLastEnum_BlurStyle"]], "knormal_blurstyle (blurstyle attribute)": [[16, "skia.BlurStyle.kNormal_BlurStyle"]], "kouter_blurstyle (blurstyle attribute)": [[16, "skia.BlurStyle.kOuter_BlurStyle"]], "ksolid_blurstyle (blurstyle attribute)": [[16, "skia.BlurStyle.kSolid_BlurStyle"]], "name (blurstyle attribute)": [[16, "skia.BlurStyle.name"]], "value (blurstyle attribute)": [[16, "skia.BlurStyle.value"]], "budgeted (class in skia)": [[17, "skia.Budgeted"]], "__init__() (budgeted method)": [[17, "skia.Budgeted.__init__"]], "kno (budgeted attribute)": [[17, "skia.Budgeted.kNo"]], "kyes (budgeted attribute)": [[17, "skia.Budgeted.kYes"]], "name (budgeted attribute)": [[17, "skia.Budgeted.name"]], "value (budgeted attribute)": [[17, "skia.Budgeted.value"]], "canvas (class in skia)": [[18, "skia.Canvas"]], "makerasterdirect() (canvas static method)": [[18, "skia.Canvas.MakeRasterDirect"]], "makerasterdirectn32() (canvas static method)": [[18, "skia.Canvas.MakeRasterDirectN32"]], "__init__() (canvas method)": [[18, "skia.Canvas.__init__"]], "accesstoplayerpixels() (canvas method)": [[18, "skia.Canvas.accessTopLayerPixels"]], "androidframework_setdevicecliprestriction() (canvas method)": [[18, "skia.Canvas.androidFramework_setDeviceClipRestriction"]], "clear() (canvas method)": [[18, "skia.Canvas.clear"]], "clippath() (canvas method)": [[18, "skia.Canvas.clipPath"]], "cliprrect() (canvas method)": [[18, "skia.Canvas.clipRRect"]], "cliprect() (canvas method)": [[18, "skia.Canvas.clipRect"]], "clipregion() (canvas method)": [[18, "skia.Canvas.clipRegion"]], "concat() (canvas method)": [[18, "skia.Canvas.concat"]], "discard() (canvas method)": [[18, "skia.Canvas.discard"]], "drawannotation() (canvas method)": [[18, "skia.Canvas.drawAnnotation"]], "drawarc() (canvas method)": [[18, "skia.Canvas.drawArc"]], "drawatlas() (canvas method)": [[18, "skia.Canvas.drawAtlas"]], "drawbitmap() (canvas method)": [[18, "skia.Canvas.drawBitmap"]], "drawbitmaprect() (canvas method)": [[18, "skia.Canvas.drawBitmapRect"]], "drawcircle() (canvas method)": [[18, "skia.Canvas.drawCircle"]], "drawcolor() (canvas method)": [[18, "skia.Canvas.drawColor"]], "drawdrrect() (canvas method)": [[18, "skia.Canvas.drawDRRect"]], "drawirect() (canvas method)": [[18, "skia.Canvas.drawIRect"]], "drawimage() (canvas method)": [[18, "skia.Canvas.drawImage"]], "drawimagerect() (canvas method)": [[18, "skia.Canvas.drawImageRect"]], "drawline() (canvas method)": [[18, "skia.Canvas.drawLine"]], "drawoval() (canvas method)": [[18, "skia.Canvas.drawOval"]], "drawpaint() (canvas method)": [[18, "skia.Canvas.drawPaint"]], "drawpatch() (canvas method)": [[18, "skia.Canvas.drawPatch"]], "drawpath() (canvas method)": [[18, "skia.Canvas.drawPath"]], "drawpicture() (canvas method)": [[18, "skia.Canvas.drawPicture"]], "drawpoint() (canvas method)": [[18, "skia.Canvas.drawPoint"]], "drawpoints() (canvas method)": [[18, "skia.Canvas.drawPoints"]], "drawrrect() (canvas method)": [[18, "skia.Canvas.drawRRect"]], "drawrect() (canvas method)": [[18, "skia.Canvas.drawRect"]], "drawregion() (canvas method)": [[18, "skia.Canvas.drawRegion"]], "drawroundrect() (canvas method)": [[18, "skia.Canvas.drawRoundRect"]], "drawsimpletext() (canvas method)": [[18, "skia.Canvas.drawSimpleText"]], "drawstring() (canvas method)": [[18, "skia.Canvas.drawString"]], "drawtextblob() (canvas method)": [[18, "skia.Canvas.drawTextBlob"]], "drawvertices() (canvas method)": [[18, "skia.Canvas.drawVertices"]], "flush() (canvas method)": [[18, "skia.Canvas.flush"]], "getbaselayersize() (canvas method)": [[18, "skia.Canvas.getBaseLayerSize"]], "getdeviceclipbounds() (canvas method)": [[18, "skia.Canvas.getDeviceClipBounds"]], "getlocalclipbounds() (canvas method)": [[18, "skia.Canvas.getLocalClipBounds"]], "getlocaltodevice() (canvas method)": [[18, "skia.Canvas.getLocalToDevice"]], "getprops() (canvas method)": [[18, "skia.Canvas.getProps"]], "getsavecount() (canvas method)": [[18, "skia.Canvas.getSaveCount"]], "getsurface() (canvas method)": [[18, "skia.Canvas.getSurface"]], "gettotalmatrix() (canvas method)": [[18, "skia.Canvas.getTotalMatrix"]], "imageinfo() (canvas method)": [[18, "skia.Canvas.imageInfo"]], "isclipempty() (canvas method)": [[18, "skia.Canvas.isClipEmpty"]], "iscliprect() (canvas method)": [[18, "skia.Canvas.isClipRect"]], "kall_quadaaflags (canvas attribute)": [[18, "skia.Canvas.kAll_QuadAAFlags"]], "kbottom_quadaaflag (canvas attribute)": [[18, "skia.Canvas.kBottom_QuadAAFlag"]], "kf16colortype (canvas attribute)": [[18, "skia.Canvas.kF16ColorType"]], "kfast_srcrectconstraint (canvas attribute)": [[18, "skia.Canvas.kFast_SrcRectConstraint"]], "kinitwithprevious_savelayerflag (canvas attribute)": [[18, "skia.Canvas.kInitWithPrevious_SaveLayerFlag"]], "kleft_quadaaflag (canvas attribute)": [[18, "skia.Canvas.kLeft_QuadAAFlag"]], "klines_pointmode (canvas attribute)": [[18, "skia.Canvas.kLines_PointMode"]], "knone_quadaaflags (canvas attribute)": [[18, "skia.Canvas.kNone_QuadAAFlags"]], "kpoints_pointmode (canvas attribute)": [[18, "skia.Canvas.kPoints_PointMode"]], "kpolygon_pointmode (canvas attribute)": [[18, "skia.Canvas.kPolygon_PointMode"]], "kpreservelcdtext_savelayerflag (canvas attribute)": [[18, "skia.Canvas.kPreserveLCDText_SaveLayerFlag"]], "kright_quadaaflag (canvas attribute)": [[18, "skia.Canvas.kRight_QuadAAFlag"]], "kstrict_srcrectconstraint (canvas attribute)": [[18, "skia.Canvas.kStrict_SrcRectConstraint"]], "ktop_quadaaflag (canvas attribute)": [[18, "skia.Canvas.kTop_QuadAAFlag"]], "makesurface() (canvas method)": [[18, "skia.Canvas.makeSurface"]], "peekpixels() (canvas method)": [[18, "skia.Canvas.peekPixels"]], "quickreject() (canvas method)": [[18, "skia.Canvas.quickReject"]], "readpixels() (canvas method)": [[18, "skia.Canvas.readPixels"]], "resetmatrix() (canvas method)": [[18, "skia.Canvas.resetMatrix"]], "restore() (canvas method)": [[18, "skia.Canvas.restore"]], "restoretocount() (canvas method)": [[18, "skia.Canvas.restoreToCount"]], "rotate() (canvas method)": [[18, "skia.Canvas.rotate"]], "save() (canvas method)": [[18, "skia.Canvas.save"]], "savelayer() (canvas method)": [[18, "skia.Canvas.saveLayer"]], "savelayeralpha() (canvas method)": [[18, "skia.Canvas.saveLayerAlpha"]], "scale() (canvas method)": [[18, "skia.Canvas.scale"]], "setmatrix() (canvas method)": [[18, "skia.Canvas.setMatrix"]], "skew() (canvas method)": [[18, "skia.Canvas.skew"]], "toarray() (canvas method)": [[18, "skia.Canvas.toarray"]], "translate() (canvas method)": [[18, "skia.Canvas.translate"]], "writepixels() (canvas method)": [[18, "skia.Canvas.writePixels"]], "lattice (class in skia.canvas)": [[19, "skia.Canvas.Lattice"]], "__init__() (lattice method)": [[19, "skia.Canvas.Lattice.__init__"]], "fbounds (lattice attribute)": [[19, "skia.Canvas.Lattice.fBounds"]], "fcolors (lattice attribute)": [[19, "skia.Canvas.Lattice.fColors"]], "frecttypes (lattice attribute)": [[19, "skia.Canvas.Lattice.fRectTypes"]], "fxcount (lattice attribute)": [[19, "skia.Canvas.Lattice.fXCount"]], "fxdivs (lattice attribute)": [[19, "skia.Canvas.Lattice.fXDivs"]], "fycount (lattice attribute)": [[19, "skia.Canvas.Lattice.fYCount"]], "fydivs (lattice attribute)": [[19, "skia.Canvas.Lattice.fYDivs"]], "kdefault (lattice attribute)": [[19, "skia.Canvas.Lattice.kDefault"]], "kfixedcolor (lattice attribute)": [[19, "skia.Canvas.Lattice.kFixedColor"]], "ktransparent (lattice attribute)": [[19, "skia.Canvas.Lattice.kTransparent"]], "recttype (class in skia.canvas.lattice)": [[20, "skia.Canvas.Lattice.RectType"]], "__init__() (recttype method)": [[20, "skia.Canvas.Lattice.RectType.__init__"]], "kdefault (recttype attribute)": [[20, "skia.Canvas.Lattice.RectType.kDefault"]], "kfixedcolor (recttype attribute)": [[20, "skia.Canvas.Lattice.RectType.kFixedColor"]], "ktransparent (recttype attribute)": [[20, "skia.Canvas.Lattice.RectType.kTransparent"]], "name (recttype attribute)": [[20, "skia.Canvas.Lattice.RectType.name"]], "value (recttype attribute)": [[20, "skia.Canvas.Lattice.RectType.value"]], "pointmode (class in skia.canvas)": [[21, "skia.Canvas.PointMode"]], "__init__() (pointmode method)": [[21, "skia.Canvas.PointMode.__init__"]], "klines_pointmode (pointmode attribute)": [[21, "skia.Canvas.PointMode.kLines_PointMode"]], "kpoints_pointmode (pointmode attribute)": [[21, "skia.Canvas.PointMode.kPoints_PointMode"]], "kpolygon_pointmode (pointmode attribute)": [[21, "skia.Canvas.PointMode.kPolygon_PointMode"]], "name (pointmode attribute)": [[21, "skia.Canvas.PointMode.name"]], "value (pointmode attribute)": [[21, "skia.Canvas.PointMode.value"]], "quadaaflags (class in skia.canvas)": [[22, "skia.Canvas.QuadAAFlags"]], "__init__() (quadaaflags method)": [[22, "skia.Canvas.QuadAAFlags.__init__"]], "kall_quadaaflags (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.kAll_QuadAAFlags"]], "kbottom_quadaaflag (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.kBottom_QuadAAFlag"]], "kleft_quadaaflag (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.kLeft_QuadAAFlag"]], "knone_quadaaflags (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.kNone_QuadAAFlags"]], "kright_quadaaflag (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.kRight_QuadAAFlag"]], "ktop_quadaaflag (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.kTop_QuadAAFlag"]], "name (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.name"]], "value (quadaaflags attribute)": [[22, "skia.Canvas.QuadAAFlags.value"]], "savelayerflags (class in skia.canvas)": [[23, "skia.Canvas.SaveLayerFlags"]], "__init__() (savelayerflags method)": [[23, "skia.Canvas.SaveLayerFlags.__init__"]], "kf16colortype (savelayerflags attribute)": [[23, "skia.Canvas.SaveLayerFlags.kF16ColorType"]], "kinitwithprevious_savelayerflag (savelayerflags attribute)": [[23, "skia.Canvas.SaveLayerFlags.kInitWithPrevious_SaveLayerFlag"]], "kpreservelcdtext_savelayerflag (savelayerflags attribute)": [[23, "skia.Canvas.SaveLayerFlags.kPreserveLCDText_SaveLayerFlag"]], "name (savelayerflags attribute)": [[23, "skia.Canvas.SaveLayerFlags.name"]], "value (savelayerflags attribute)": [[23, "skia.Canvas.SaveLayerFlags.value"]], "savelayerrec (class in skia.canvas)": [[24, "skia.Canvas.SaveLayerRec"]], "__init__() (savelayerrec method)": [[24, "skia.Canvas.SaveLayerRec.__init__"]], "fbackdrop (savelayerrec attribute)": [[24, "skia.Canvas.SaveLayerRec.fBackdrop"]], "fbounds (savelayerrec attribute)": [[24, "skia.Canvas.SaveLayerRec.fBounds"]], "fpaint (savelayerrec attribute)": [[24, "skia.Canvas.SaveLayerRec.fPaint"]], "fsavelayerflags (savelayerrec attribute)": [[24, "skia.Canvas.SaveLayerRec.fSaveLayerFlags"]], "srcrectconstraint (class in skia.canvas)": [[25, "skia.Canvas.SrcRectConstraint"]], "__init__() (srcrectconstraint method)": [[25, "skia.Canvas.SrcRectConstraint.__init__"]], "kfast_srcrectconstraint (srcrectconstraint attribute)": [[25, "skia.Canvas.SrcRectConstraint.kFast_SrcRectConstraint"]], "kstrict_srcrectconstraint (srcrectconstraint attribute)": [[25, "skia.Canvas.SrcRectConstraint.kStrict_SrcRectConstraint"]], "name (srcrectconstraint attribute)": [[25, "skia.Canvas.SrcRectConstraint.name"]], "value (srcrectconstraint attribute)": [[25, "skia.Canvas.SrcRectConstraint.value"]], "clipop (class in skia)": [[26, "skia.ClipOp"]], "__init__() (clipop method)": [[26, "skia.ClipOp.__init__"]], "kdifference (clipop attribute)": [[26, "skia.ClipOp.kDifference"]], "kintersect (clipop attribute)": [[26, "skia.ClipOp.kIntersect"]], "name (clipop attribute)": [[26, "skia.ClipOp.name"]], "value (clipop attribute)": [[26, "skia.ClipOp.value"]], "codec (class in skia)": [[27, "skia.Codec"]], "makefromdata() (codec static method)": [[27, "skia.Codec.MakeFromData"]], "minbufferedbytesneeded() (codec static method)": [[27, "skia.Codec.MinBufferedBytesNeeded"]], "resulttostring() (codec static method)": [[27, "skia.Codec.ResultToString"]], "__init__() (codec method)": [[27, "skia.Codec.__init__"]], "bounds() (codec method)": [[27, "skia.Codec.bounds"]], "dimensions() (codec method)": [[27, "skia.Codec.dimensions"]], "getencodedformat() (codec method)": [[27, "skia.Codec.getEncodedFormat"]], "getframecount() (codec method)": [[27, "skia.Codec.getFrameCount"]], "getframeinfo() (codec method)": [[27, "skia.Codec.getFrameInfo"]], "getinfo() (codec method)": [[27, "skia.Codec.getInfo"]], "getorigin() (codec method)": [[27, "skia.Codec.getOrigin"]], "getpixels() (codec method)": [[27, "skia.Codec.getPixels"]], "getrepetitioncount() (codec method)": [[27, "skia.Codec.getRepetitionCount"]], "getscaleddimensions() (codec method)": [[27, "skia.Codec.getScaledDimensions"]], "getscanlineorder() (codec method)": [[27, "skia.Codec.getScanlineOrder"]], "getscanlines() (codec method)": [[27, "skia.Codec.getScanlines"]], "getvalidsubset() (codec method)": [[27, "skia.Codec.getValidSubset"]], "getyuvaplanes() (codec method)": [[27, "skia.Codec.getYUVAPlanes"]], "incrementaldecode() (codec method)": [[27, "skia.Codec.incrementalDecode"]], "kcouldnotrewind (codec attribute)": [[27, "skia.Codec.kCouldNotRewind"]], "kerrorininput (codec attribute)": [[27, "skia.Codec.kErrorInInput"]], "kincompleteinput (codec attribute)": [[27, "skia.Codec.kIncompleteInput"]], "kinternalerror (codec attribute)": [[27, "skia.Codec.kInternalError"]], "kinvalidconversion (codec attribute)": [[27, "skia.Codec.kInvalidConversion"]], "kinvalidinput (codec attribute)": [[27, "skia.Codec.kInvalidInput"]], "kinvalidparameters (codec attribute)": [[27, "skia.Codec.kInvalidParameters"]], "kinvalidscale (codec attribute)": [[27, "skia.Codec.kInvalidScale"]], "kkeep (codec attribute)": [[27, "skia.Codec.kKeep"]], "knoframe (codec attribute)": [[27, "skia.Codec.kNoFrame"]], "kno_zeroinitialized (codec attribute)": [[27, "skia.Codec.kNo_ZeroInitialized"]], "kpreferanimation (codec attribute)": [[27, "skia.Codec.kPreferAnimation"]], "kpreferstillimage (codec attribute)": [[27, "skia.Codec.kPreferStillImage"]], "krepetitioncountinfinite (codec attribute)": [[27, "skia.Codec.kRepetitionCountInfinite"]], "krestorebgcolor (codec attribute)": [[27, "skia.Codec.kRestoreBGColor"]], "krestoreprevious (codec attribute)": [[27, "skia.Codec.kRestorePrevious"]], "ksuccess (codec attribute)": [[27, "skia.Codec.kSuccess"]], "kunimplemented (codec attribute)": [[27, "skia.Codec.kUnimplemented"]], "kyes_zeroinitialized (codec attribute)": [[27, "skia.Codec.kYes_ZeroInitialized"]], "nextscanline() (codec method)": [[27, "skia.Codec.nextScanline"]], "outputscanline() (codec method)": [[27, "skia.Codec.outputScanline"]], "queryyuvainfo() (codec method)": [[27, "skia.Codec.queryYUVAInfo"]], "skipscanlines() (codec method)": [[27, "skia.Codec.skipScanlines"]], "startincrementaldecode() (codec method)": [[27, "skia.Codec.startIncrementalDecode"]], "startscanlinedecode() (codec method)": [[27, "skia.Codec.startScanlineDecode"]], "disposalmethod (class in skia.codec)": [[28, "skia.Codec.DisposalMethod"]], "__init__() (disposalmethod method)": [[28, "skia.Codec.DisposalMethod.__init__"]], "kkeep (disposalmethod attribute)": [[28, "skia.Codec.DisposalMethod.kKeep"]], "krestorebgcolor (disposalmethod attribute)": [[28, "skia.Codec.DisposalMethod.kRestoreBGColor"]], "krestoreprevious (disposalmethod attribute)": [[28, "skia.Codec.DisposalMethod.kRestorePrevious"]], "name (disposalmethod attribute)": [[28, "skia.Codec.DisposalMethod.name"]], "value (disposalmethod attribute)": [[28, "skia.Codec.DisposalMethod.value"]], "frameinfo (class in skia.codec)": [[29, "skia.Codec.FrameInfo"]], "__init__() (frameinfo method)": [[29, "skia.Codec.FrameInfo.__init__"]], "falphatype (frameinfo attribute)": [[29, "skia.Codec.FrameInfo.fAlphaType"]], "fdisposalmethod (frameinfo attribute)": [[29, "skia.Codec.FrameInfo.fDisposalMethod"]], "fduration (frameinfo attribute)": [[29, "skia.Codec.FrameInfo.fDuration"]], "ffullyreceived (frameinfo attribute)": [[29, "skia.Codec.FrameInfo.fFullyReceived"]], "frequiredframe (frameinfo attribute)": [[29, "skia.Codec.FrameInfo.fRequiredFrame"]], "options (class in skia.codec)": [[30, "skia.Codec.Options"]], "__init__() (options method)": [[30, "skia.Codec.Options.__init__"]], "fframeindex (options attribute)": [[30, "skia.Codec.Options.fFrameIndex"]], "fpriorframe (options attribute)": [[30, "skia.Codec.Options.fPriorFrame"]], "fsubset (options attribute)": [[30, "skia.Codec.Options.fSubset"]], "fzeroinitialized (options attribute)": [[30, "skia.Codec.Options.fZeroInitialized"]], "result (class in skia.codec)": [[31, "skia.Codec.Result"]], "__init__() (result method)": [[31, "skia.Codec.Result.__init__"]], "kcouldnotrewind (result attribute)": [[31, "skia.Codec.Result.kCouldNotRewind"]], "kerrorininput (result attribute)": [[31, "skia.Codec.Result.kErrorInInput"]], "kincompleteinput (result attribute)": [[31, "skia.Codec.Result.kIncompleteInput"]], "kinternalerror (result attribute)": [[31, "skia.Codec.Result.kInternalError"]], "kinvalidconversion (result attribute)": [[31, "skia.Codec.Result.kInvalidConversion"]], "kinvalidinput (result attribute)": [[31, "skia.Codec.Result.kInvalidInput"]], "kinvalidparameters (result attribute)": [[31, "skia.Codec.Result.kInvalidParameters"]], "kinvalidscale (result attribute)": [[31, "skia.Codec.Result.kInvalidScale"]], "ksuccess (result attribute)": [[31, "skia.Codec.Result.kSuccess"]], "kunimplemented (result attribute)": [[31, "skia.Codec.Result.kUnimplemented"]], "name (result attribute)": [[31, "skia.Codec.Result.name"]], "value (result attribute)": [[31, "skia.Codec.Result.value"]], "scanlineorder (class in skia.codec)": [[32, "skia.Codec.ScanlineOrder"]], "__init__() (scanlineorder method)": [[32, "skia.Codec.ScanlineOrder.__init__"]], "kkeep (scanlineorder attribute)": [[32, "skia.Codec.ScanlineOrder.kKeep"]], "krestorebgcolor (scanlineorder attribute)": [[32, "skia.Codec.ScanlineOrder.kRestoreBGColor"]], "name (scanlineorder attribute)": [[32, "skia.Codec.ScanlineOrder.name"]], "value (scanlineorder attribute)": [[32, "skia.Codec.ScanlineOrder.value"]], "selectionpolicy (class in skia.codec)": [[33, "skia.Codec.SelectionPolicy"]], "__init__() (selectionpolicy method)": [[33, "skia.Codec.SelectionPolicy.__init__"]], "kpreferanimation (selectionpolicy attribute)": [[33, "skia.Codec.SelectionPolicy.kPreferAnimation"]], "kpreferstillimage (selectionpolicy attribute)": [[33, "skia.Codec.SelectionPolicy.kPreferStillImage"]], "name (selectionpolicy attribute)": [[33, "skia.Codec.SelectionPolicy.name"]], "value (selectionpolicy attribute)": [[33, "skia.Codec.SelectionPolicy.value"]], "zeroinitialized (class in skia.codec)": [[34, "skia.Codec.ZeroInitialized"]], "__init__() (zeroinitialized method)": [[34, "skia.Codec.ZeroInitialized.__init__"]], "kno_zeroinitialized (zeroinitialized attribute)": [[34, "skia.Codec.ZeroInitialized.kNo_ZeroInitialized"]], "kyes_zeroinitialized (zeroinitialized attribute)": [[34, "skia.Codec.ZeroInitialized.kYes_ZeroInitialized"]], "name (zeroinitialized attribute)": [[34, "skia.Codec.ZeroInitialized.name"]], "value (zeroinitialized attribute)": [[34, "skia.Codec.ZeroInitialized.value"]], "color4f (class in skia)": [[35, "skia.Color4f"]], "frombytes_rgba() (color4f static method)": [[35, "skia.Color4f.FromBytes_RGBA"]], "fromcolor() (color4f static method)": [[35, "skia.Color4f.FromColor"]], "__init__() (color4f method)": [[35, "skia.Color4f.__init__"]], "fa (color4f attribute)": [[35, "skia.Color4f.fA"]], "fb (color4f attribute)": [[35, "skia.Color4f.fB"]], "fg (color4f attribute)": [[35, "skia.Color4f.fG"]], "fr (color4f attribute)": [[35, "skia.Color4f.fR"]], "fitsinbytes() (color4f method)": [[35, "skia.Color4f.fitsInBytes"]], "isopaque() (color4f method)": [[35, "skia.Color4f.isOpaque"]], "kblack (color4f attribute)": [[35, "skia.Color4f.kBlack"]], "kblue (color4f attribute)": [[35, "skia.Color4f.kBlue"]], "kcyan (color4f attribute)": [[35, "skia.Color4f.kCyan"]], "kdkgray (color4f attribute)": [[35, "skia.Color4f.kDkGray"]], "kgray (color4f attribute)": [[35, "skia.Color4f.kGray"]], "kgreen (color4f attribute)": [[35, "skia.Color4f.kGreen"]], "kltgray (color4f attribute)": [[35, "skia.Color4f.kLtGray"]], "kmagenta (color4f attribute)": [[35, "skia.Color4f.kMagenta"]], "kred (color4f attribute)": [[35, "skia.Color4f.kRed"]], "ktransparent (color4f attribute)": [[35, "skia.Color4f.kTransparent"]], "kwhite (color4f attribute)": [[35, "skia.Color4f.kWhite"]], "kyellow (color4f attribute)": [[35, "skia.Color4f.kYellow"]], "makeopaque() (color4f method)": [[35, "skia.Color4f.makeOpaque"]], "tobytes_rgba() (color4f method)": [[35, "skia.Color4f.toBytes_RGBA"]], "tocolor() (color4f method)": [[35, "skia.Color4f.toColor"]], "vec() (color4f method)": [[35, "skia.Color4f.vec"]], "colorchannel (class in skia)": [[36, "skia.ColorChannel"]], "__init__() (colorchannel method)": [[36, "skia.ColorChannel.__init__"]], "ka (colorchannel attribute)": [[36, "skia.ColorChannel.kA"]], "kb (colorchannel attribute)": [[36, "skia.ColorChannel.kB"]], "kg (colorchannel attribute)": [[36, "skia.ColorChannel.kG"]], "klastenum (colorchannel attribute)": [[36, "skia.ColorChannel.kLastEnum"]], "kr (colorchannel attribute)": [[36, "skia.ColorChannel.kR"]], "name (colorchannel attribute)": [[36, "skia.ColorChannel.name"]], "value (colorchannel attribute)": [[36, "skia.ColorChannel.value"]], "colorchannelflag (class in skia)": [[37, "skia.ColorChannelFlag"]], "__init__() (colorchannelflag method)": [[37, "skia.ColorChannelFlag.__init__"]], "kalpha_colorchannelflag (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kAlpha_ColorChannelFlag"]], "kblue_colorchannelflag (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kBlue_ColorChannelFlag"]], "kgray_colorchannelflag (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kGray_ColorChannelFlag"]], "kgreen_colorchannelflag (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kGreen_ColorChannelFlag"]], "krgba_colorchannelflags (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kRGBA_ColorChannelFlags"]], "krgb_colorchannelflags (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kRGB_ColorChannelFlags"]], "krg_colorchannelflags (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kRG_ColorChannelFlags"]], "kred_colorchannelflag (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.kRed_ColorChannelFlag"]], "name (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.name"]], "value (colorchannelflag attribute)": [[37, "skia.ColorChannelFlag.value"]], "colorfilter (class in skia)": [[38, "skia.ColorFilter"]], "deserialize() (colorfilter static method)": [[38, "skia.ColorFilter.Deserialize"]], "__init__() (colorfilter method)": [[38, "skia.ColorFilter.__init__"]], "asacolormatrix() (colorfilter method)": [[38, "skia.ColorFilter.asAColorMatrix"]], "asacolormode() (colorfilter method)": [[38, "skia.ColorFilter.asAColorMode"]], "ascolormode() (colorfilter method)": [[38, "skia.ColorFilter.asColorMode"]], "filtercolor() (colorfilter method)": [[38, "skia.ColorFilter.filterColor"]], "filtercolor4f() (colorfilter method)": [[38, "skia.ColorFilter.filterColor4f"]], "getflattenabletype() (colorfilter method)": [[38, "skia.ColorFilter.getFlattenableType"]], "gettypename() (colorfilter method)": [[38, "skia.ColorFilter.getTypeName"]], "kcolorfilter_type (colorfilter attribute)": [[38, "skia.ColorFilter.kColorFilter_Type"]], "kdrawlooper_type (colorfilter attribute)": [[38, "skia.ColorFilter.kDrawLooper_Type"]], "kdrawable_type (colorfilter attribute)": [[38, "skia.ColorFilter.kDrawable_Type"]], "kimagefilter_type (colorfilter attribute)": [[38, "skia.ColorFilter.kImageFilter_Type"]], "kmaskfilter_type (colorfilter attribute)": [[38, "skia.ColorFilter.kMaskFilter_Type"]], "kpatheffect_type (colorfilter attribute)": [[38, "skia.ColorFilter.kPathEffect_Type"]], "makecomposed() (colorfilter method)": [[38, "skia.ColorFilter.makeComposed"]], "ref() (colorfilter method)": [[38, "skia.ColorFilter.ref"]], "serialize() (colorfilter method)": [[38, "skia.ColorFilter.serialize"]], "unique() (colorfilter method)": [[38, "skia.ColorFilter.unique"]], "unref() (colorfilter method)": [[38, "skia.ColorFilter.unref"]], "type (class in skia.colorfilter)": [[39, "skia.ColorFilter.Type"]], "__init__() (type method)": [[39, "skia.ColorFilter.Type.__init__"], [44, "skia.ColorMatrixFilter.Type.__init__"], [54, "skia.Drawable.Type.__init__"], [62, "skia.Flattanable.Type.__init__"], [132, "skia.ImageFilter.Type.__init__"], [139, "skia.MaskFilter.Type.__init__"], [174, "skia.PathEffect.Type.__init__"], [191, "skia.RRect.Type.__init__"], [206, "skia.Shader.Type.__init__"]], "kcolorfilter_type (type attribute)": [[39, "skia.ColorFilter.Type.kColorFilter_Type"], [44, "skia.ColorMatrixFilter.Type.kColorFilter_Type"], [54, "skia.Drawable.Type.kColorFilter_Type"], [62, "skia.Flattanable.Type.kColorFilter_Type"], [132, "skia.ImageFilter.Type.kColorFilter_Type"], [139, "skia.MaskFilter.Type.kColorFilter_Type"], [174, "skia.PathEffect.Type.kColorFilter_Type"], [206, "skia.Shader.Type.kColorFilter_Type"]], "kdrawlooper_type (type attribute)": [[39, "skia.ColorFilter.Type.kDrawLooper_Type"], [44, "skia.ColorMatrixFilter.Type.kDrawLooper_Type"], [54, "skia.Drawable.Type.kDrawLooper_Type"], [62, "skia.Flattanable.Type.kDrawLooper_Type"], [132, "skia.ImageFilter.Type.kDrawLooper_Type"], [139, "skia.MaskFilter.Type.kDrawLooper_Type"], [174, "skia.PathEffect.Type.kDrawLooper_Type"], [206, "skia.Shader.Type.kDrawLooper_Type"]], "kdrawable_type (type attribute)": [[39, "skia.ColorFilter.Type.kDrawable_Type"], [44, "skia.ColorMatrixFilter.Type.kDrawable_Type"], [54, "skia.Drawable.Type.kDrawable_Type"], [62, "skia.Flattanable.Type.kDrawable_Type"], [132, "skia.ImageFilter.Type.kDrawable_Type"], [139, "skia.MaskFilter.Type.kDrawable_Type"], [174, "skia.PathEffect.Type.kDrawable_Type"], [206, "skia.Shader.Type.kDrawable_Type"]], "kimagefilter_type (type attribute)": [[39, "skia.ColorFilter.Type.kImageFilter_Type"], [44, "skia.ColorMatrixFilter.Type.kImageFilter_Type"], [54, "skia.Drawable.Type.kImageFilter_Type"], [62, "skia.Flattanable.Type.kImageFilter_Type"], [132, "skia.ImageFilter.Type.kImageFilter_Type"], [139, "skia.MaskFilter.Type.kImageFilter_Type"], [174, "skia.PathEffect.Type.kImageFilter_Type"], [206, "skia.Shader.Type.kImageFilter_Type"]], "kmaskfilter_type (type attribute)": [[39, "skia.ColorFilter.Type.kMaskFilter_Type"], [44, "skia.ColorMatrixFilter.Type.kMaskFilter_Type"], [54, "skia.Drawable.Type.kMaskFilter_Type"], [62, "skia.Flattanable.Type.kMaskFilter_Type"], [132, "skia.ImageFilter.Type.kMaskFilter_Type"], [139, "skia.MaskFilter.Type.kMaskFilter_Type"], [174, "skia.PathEffect.Type.kMaskFilter_Type"], [206, "skia.Shader.Type.kMaskFilter_Type"]], "kpatheffect_type (type attribute)": [[39, "skia.ColorFilter.Type.kPathEffect_Type"], [44, "skia.ColorMatrixFilter.Type.kPathEffect_Type"], [54, "skia.Drawable.Type.kPathEffect_Type"], [62, "skia.Flattanable.Type.kPathEffect_Type"], [132, "skia.ImageFilter.Type.kPathEffect_Type"], [139, "skia.MaskFilter.Type.kPathEffect_Type"], [174, "skia.PathEffect.Type.kPathEffect_Type"], [206, "skia.Shader.Type.kPathEffect_Type"]], "name (type attribute)": [[39, "skia.ColorFilter.Type.name"], [44, "skia.ColorMatrixFilter.Type.name"], [54, "skia.Drawable.Type.name"], [62, "skia.Flattanable.Type.name"], [132, "skia.ImageFilter.Type.name"], [139, "skia.MaskFilter.Type.name"], [174, "skia.PathEffect.Type.name"], [191, "skia.RRect.Type.name"], [206, "skia.Shader.Type.name"]], "value (type attribute)": [[39, "skia.ColorFilter.Type.value"], [44, "skia.ColorMatrixFilter.Type.value"], [54, "skia.Drawable.Type.value"], [62, "skia.Flattanable.Type.value"], [132, "skia.ImageFilter.Type.value"], [139, "skia.MaskFilter.Type.value"], [174, "skia.PathEffect.Type.value"], [191, "skia.RRect.Type.value"], [206, "skia.Shader.Type.value"]], "blend() (colorfilters static method)": [[40, "skia.ColorFilters.Blend"]], "colorfilters (class in skia)": [[40, "skia.ColorFilters"]], "hslamatrix() (colorfilters static method)": [[40, "skia.ColorFilters.HSLAMatrix"]], "lerp() (colorfilters static method)": [[40, "skia.ColorFilters.Lerp"]], "lineartosrgbgamma() (colorfilters static method)": [[40, "skia.ColorFilters.LinearToSRGBGamma"]], "matrix() (colorfilters static method)": [[40, "skia.ColorFilters.Matrix"]], "srgbtolineargamma() (colorfilters static method)": [[40, "skia.ColorFilters.SRGBToLinearGamma"]], "__init__() (colorfilters method)": [[40, "skia.ColorFilters.__init__"]], "colorinfo (class in skia)": [[41, "skia.ColorInfo"]], "__init__() (colorinfo method)": [[41, "skia.ColorInfo.__init__"]], "alphatype() (colorinfo method)": [[41, "skia.ColorInfo.alphaType"]], "bytesperpixel() (colorinfo method)": [[41, "skia.ColorInfo.bytesPerPixel"]], "colorspace() (colorinfo method)": [[41, "skia.ColorInfo.colorSpace"]], "colortype() (colorinfo method)": [[41, "skia.ColorInfo.colorType"]], "gammaclosetosrgb() (colorinfo method)": [[41, "skia.ColorInfo.gammaCloseToSRGB"]], "isopaque() (colorinfo method)": [[41, "skia.ColorInfo.isOpaque"]], "makealphatype() (colorinfo method)": [[41, "skia.ColorInfo.makeAlphaType"]], "makecolorspace() (colorinfo method)": [[41, "skia.ColorInfo.makeColorSpace"]], "makecolortype() (colorinfo method)": [[41, "skia.ColorInfo.makeColorType"]], "refcolorspace() (colorinfo method)": [[41, "skia.ColorInfo.refColorSpace"]], "shiftperpixel() (colorinfo method)": [[41, "skia.ColorInfo.shiftPerPixel"]], "colormatrix (class in skia)": [[42, "skia.ColorMatrix"]], "__init__() (colormatrix method)": [[42, "skia.ColorMatrix.__init__"]], "colormatrixfilter (class in skia)": [[43, "skia.ColorMatrixFilter"]], "deserialize() (colormatrixfilter static method)": [[43, "skia.ColorMatrixFilter.Deserialize"]], "makelightingfilter() (colormatrixfilter static method)": [[43, "skia.ColorMatrixFilter.MakeLightingFilter"]], "__init__() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.__init__"]], "asacolormatrix() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.asAColorMatrix"]], "asacolormode() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.asAColorMode"]], "ascolormode() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.asColorMode"]], "filtercolor() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.filterColor"]], "filtercolor4f() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.filterColor4f"]], "getflattenabletype() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.getFlattenableType"]], "gettypename() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.getTypeName"]], "kcolorfilter_type (colormatrixfilter attribute)": [[43, "skia.ColorMatrixFilter.kColorFilter_Type"]], "kdrawlooper_type (colormatrixfilter attribute)": [[43, "skia.ColorMatrixFilter.kDrawLooper_Type"]], "kdrawable_type (colormatrixfilter attribute)": [[43, "skia.ColorMatrixFilter.kDrawable_Type"]], "kimagefilter_type (colormatrixfilter attribute)": [[43, "skia.ColorMatrixFilter.kImageFilter_Type"]], "kmaskfilter_type (colormatrixfilter attribute)": [[43, "skia.ColorMatrixFilter.kMaskFilter_Type"]], "kpatheffect_type (colormatrixfilter attribute)": [[43, "skia.ColorMatrixFilter.kPathEffect_Type"]], "makecomposed() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.makeComposed"]], "ref() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.ref"]], "serialize() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.serialize"]], "unique() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.unique"]], "unref() (colormatrixfilter method)": [[43, "skia.ColorMatrixFilter.unref"]], "type (class in skia.colormatrixfilter)": [[44, "skia.ColorMatrixFilter.Type"]], "colorspace (class in skia)": [[45, "skia.ColorSpace"]], "deserialize() (colorspace static method)": [[45, "skia.ColorSpace.Deserialize"]], "equals() (colorspace static method)": [[45, "skia.ColorSpace.Equals"]], "make() (colorspace static method)": [[45, "skia.ColorSpace.Make"]], "makergb() (colorspace static method)": [[45, "skia.ColorSpace.MakeRGB"]], "makesrgb() (colorspace static method)": [[45, "skia.ColorSpace.MakeSRGB"]], "makesrgblinear() (colorspace static method)": [[45, "skia.ColorSpace.MakeSRGBLinear"]], "__init__() (colorspace method)": [[45, "skia.ColorSpace.__init__"]], "deref() (colorspace method)": [[45, "skia.ColorSpace.deref"]], "gammaclosetosrgb() (colorspace method)": [[45, "skia.ColorSpace.gammaCloseToSRGB"]], "gammaislinear() (colorspace method)": [[45, "skia.ColorSpace.gammaIsLinear"]], "gamuttransformto() (colorspace method)": [[45, "skia.ColorSpace.gamutTransformTo"]], "hash() (colorspace method)": [[45, "skia.ColorSpace.hash"]], "invtransferfn() (colorspace method)": [[45, "skia.ColorSpace.invTransferFn"]], "isnumericaltransferfn() (colorspace method)": [[45, "skia.ColorSpace.isNumericalTransferFn"]], "issrgb() (colorspace method)": [[45, "skia.ColorSpace.isSRGB"]], "makecolorspin() (colorspace method)": [[45, "skia.ColorSpace.makeColorSpin"]], "makelineargamma() (colorspace method)": [[45, "skia.ColorSpace.makeLinearGamma"]], "makesrgbgamma() (colorspace method)": [[45, "skia.ColorSpace.makeSRGBGamma"]], "ref() (colorspace method)": [[45, "skia.ColorSpace.ref"]], "refcntgreaterthan() (colorspace method)": [[45, "skia.ColorSpace.refCntGreaterThan"]], "serialize() (colorspace method)": [[45, "skia.ColorSpace.serialize"]], "toprofile() (colorspace method)": [[45, "skia.ColorSpace.toProfile"]], "toxyzd50() (colorspace method)": [[45, "skia.ColorSpace.toXYZD50"]], "toxyzd50hash() (colorspace method)": [[45, "skia.ColorSpace.toXYZD50Hash"]], "transferfn() (colorspace method)": [[45, "skia.ColorSpace.transferFn"]], "transferfnhash() (colorspace method)": [[45, "skia.ColorSpace.transferFnHash"]], "unique() (colorspace method)": [[45, "skia.ColorSpace.unique"]], "unref() (colorspace method)": [[45, "skia.ColorSpace.unref"]], "writetomemory() (colorspace method)": [[45, "skia.ColorSpace.writeToMemory"]], "colortype (class in skia)": [[46, "skia.ColorType"]], "__init__() (colortype method)": [[46, "skia.ColorType.__init__"]], "ka16_float_colortype (colortype attribute)": [[46, "skia.ColorType.kA16_float_ColorType"]], "ka16_unorm_colortype (colortype attribute)": [[46, "skia.ColorType.kA16_unorm_ColorType"]], "kargb_4444_colortype (colortype attribute)": [[46, "skia.ColorType.kARGB_4444_ColorType"]], "kalpha_8_colortype (colortype attribute)": [[46, "skia.ColorType.kAlpha_8_ColorType"]], "kbgra_1010102_colortype (colortype attribute)": [[46, "skia.ColorType.kBGRA_1010102_ColorType"]], "kbgra_8888_colortype (colortype attribute)": [[46, "skia.ColorType.kBGRA_8888_ColorType"]], "kbgr_101010x_colortype (colortype attribute)": [[46, "skia.ColorType.kBGR_101010x_ColorType"]], "kgray_8_colortype (colortype attribute)": [[46, "skia.ColorType.kGray_8_ColorType"]], "kn32_colortype (colortype attribute)": [[46, "skia.ColorType.kN32_ColorType"]], "kr16g16b16a16_unorm_colortype (colortype attribute)": [[46, "skia.ColorType.kR16G16B16A16_unorm_ColorType"]], "kr16g16_float_colortype (colortype attribute)": [[46, "skia.ColorType.kR16G16_float_ColorType"]], "kr16g16_unorm_colortype (colortype attribute)": [[46, "skia.ColorType.kR16G16_unorm_ColorType"]], "kr8g8_unorm_colortype (colortype attribute)": [[46, "skia.ColorType.kR8G8_unorm_ColorType"]], "krgba_1010102_colortype (colortype attribute)": [[46, "skia.ColorType.kRGBA_1010102_ColorType"]], "krgba_8888_colortype (colortype attribute)": [[46, "skia.ColorType.kRGBA_8888_ColorType"]], "krgba_f16norm_colortype (colortype attribute)": [[46, "skia.ColorType.kRGBA_F16Norm_ColorType"]], "krgba_f16_colortype (colortype attribute)": [[46, "skia.ColorType.kRGBA_F16_ColorType"]], "krgba_f32_colortype (colortype attribute)": [[46, "skia.ColorType.kRGBA_F32_ColorType"]], "krgb_101010x_colortype (colortype attribute)": [[46, "skia.ColorType.kRGB_101010x_ColorType"]], "krgb_565_colortype (colortype attribute)": [[46, "skia.ColorType.kRGB_565_ColorType"]], "krgb_888x_colortype (colortype attribute)": [[46, "skia.ColorType.kRGB_888x_ColorType"]], "kunknown_colortype (colortype attribute)": [[46, "skia.ColorType.kUnknown_ColorType"]], "name (colortype attribute)": [[46, "skia.ColorType.name"]], "value (colortype attribute)": [[46, "skia.ColorType.value"]], "convergemode (class in skia)": [[47, "skia.ConvergeMode"]], "__init__() (convergemode method)": [[47, "skia.ConvergeMode.__init__"]], "kdifference (convergemode attribute)": [[47, "skia.ConvergeMode.kDifference"]], "kintersect (convergemode attribute)": [[47, "skia.ConvergeMode.kIntersect"]], "klast (convergemode attribute)": [[47, "skia.ConvergeMode.kLast"]], "kreversedifference (convergemode attribute)": [[47, "skia.ConvergeMode.kReverseDifference"]], "kunion (convergemode attribute)": [[47, "skia.ConvergeMode.kUnion"]], "kxor (convergemode attribute)": [[47, "skia.ConvergeMode.kXor"]], "name (convergemode attribute)": [[47, "skia.ConvergeMode.name"]], "value (convergemode attribute)": [[47, "skia.ConvergeMode.value"]], "cornerpatheffect (class in skia)": [[48, "skia.CornerPathEffect"]], "make() (cornerpatheffect static method)": [[48, "skia.CornerPathEffect.Make"]], "__init__() (cornerpatheffect method)": [[48, "skia.CornerPathEffect.__init__"]], "dashpatheffect (class in skia)": [[49, "skia.DashPathEffect"]], "make() (dashpatheffect static method)": [[49, "skia.DashPathEffect.Make"]], "__init__() (dashpatheffect method)": [[49, "skia.DashPathEffect.__init__"]], "data (class in skia)": [[50, "skia.Data"]], "makeempty() (data static method)": [[50, "skia.Data.MakeEmpty"]], "makefromfilename() (data static method)": [[50, "skia.Data.MakeFromFileName"]], "makesubset() (data static method)": [[50, "skia.Data.MakeSubset"]], "makeuninitialized() (data static method)": [[50, "skia.Data.MakeUninitialized"]], "makewithcopy() (data static method)": [[50, "skia.Data.MakeWithCopy"]], "makewithoutcopy() (data static method)": [[50, "skia.Data.MakeWithoutCopy"]], "__init__() (data method)": [[50, "skia.Data.__init__"]], "bytes() (data method)": [[50, "skia.Data.bytes"]], "copyrange() (data method)": [[50, "skia.Data.copyRange"]], "data() (data method)": [[50, "skia.Data.data"]], "deref() (data method)": [[50, "skia.Data.deref"]], "equals() (data method)": [[50, "skia.Data.equals"]], "isempty() (data method)": [[50, "skia.Data.isEmpty"]], "ref() (data method)": [[50, "skia.Data.ref"]], "refcntgreaterthan() (data method)": [[50, "skia.Data.refCntGreaterThan"]], "size() (data method)": [[50, "skia.Data.size"]], "unique() (data method)": [[50, "skia.Data.unique"]], "unref() (data method)": [[50, "skia.Data.unref"]], "writable_data() (data method)": [[50, "skia.Data.writable_data"]], "discretepatheffect (class in skia)": [[51, "skia.DiscretePathEffect"]], "make() (discretepatheffect static method)": [[51, "skia.DiscretePathEffect.Make"]], "__init__() (discretepatheffect method)": [[51, "skia.DiscretePathEffect.__init__"]], "document (class in skia)": [[52, "skia.Document"]], "__init__() (document method)": [[52, "skia.Document.__init__"]], "abort() (document method)": [[52, "skia.Document.abort"]], "beginpage() (document method)": [[52, "skia.Document.beginPage"]], "close() (document method)": [[52, "skia.Document.close"]], "endpage() (document method)": [[52, "skia.Document.endPage"]], "page() (document method)": [[52, "skia.Document.page"]], "ref() (document method)": [[52, "skia.Document.ref"]], "unique() (document method)": [[52, "skia.Document.unique"]], "unref() (document method)": [[52, "skia.Document.unref"]], "deserialize() (drawable static method)": [[53, "skia.Drawable.Deserialize"]], "drawable (class in skia)": [[53, "skia.Drawable"]], "__init__() (drawable method)": [[53, "skia.Drawable.__init__"]], "draw() (drawable method)": [[53, "skia.Drawable.draw"]], "getbounds() (drawable method)": [[53, "skia.Drawable.getBounds"]], "getflattenabletype() (drawable method)": [[53, "skia.Drawable.getFlattenableType"]], "getgenerationid() (drawable method)": [[53, "skia.Drawable.getGenerationID"]], "gettypename() (drawable method)": [[53, "skia.Drawable.getTypeName"]], "kcolorfilter_type (drawable attribute)": [[53, "skia.Drawable.kColorFilter_Type"]], "kdrawlooper_type (drawable attribute)": [[53, "skia.Drawable.kDrawLooper_Type"]], "kdrawable_type (drawable attribute)": [[53, "skia.Drawable.kDrawable_Type"]], "kimagefilter_type (drawable attribute)": [[53, "skia.Drawable.kImageFilter_Type"]], "kmaskfilter_type (drawable attribute)": [[53, "skia.Drawable.kMaskFilter_Type"]], "kpatheffect_type (drawable attribute)": [[53, "skia.Drawable.kPathEffect_Type"]], "newpicturesnapshot() (drawable method)": [[53, "skia.Drawable.newPictureSnapshot"]], "notifydrawingchanged() (drawable method)": [[53, "skia.Drawable.notifyDrawingChanged"]], "ref() (drawable method)": [[53, "skia.Drawable.ref"]], "serialize() (drawable method)": [[53, "skia.Drawable.serialize"]], "unique() (drawable method)": [[53, "skia.Drawable.unique"]], "unref() (drawable method)": [[53, "skia.Drawable.unref"]], "type (class in skia.drawable)": [[54, "skia.Drawable.Type"]], "dynamicmemorywstream (class in skia)": [[55, "skia.DynamicMemoryWStream"]], "sizeofpackeduint() (dynamicmemorywstream static method)": [[55, "skia.DynamicMemoryWStream.SizeOfPackedUInt"]], "__init__() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.__init__"]], "byteswritten() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.bytesWritten"]], "copyto() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.copyTo"]], "copytoandreset() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.copyToAndReset"]], "detachasdata() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.detachAsData"]], "detachasstream() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.detachAsStream"]], "flush() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.flush"]], "newline() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.newline"]], "padtoalign4() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.padToAlign4"]], "prependtoandreset() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.prependToAndReset"]], "read() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.read"]], "reset() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.reset"]], "write() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.write"]], "write16() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.write16"]], "write32() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.write32"]], "write8() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.write8"]], "writebigdecastext() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.writeBigDecAsText"]], "writebool() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.writeBool"]], "writedecastext() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.writeDecAsText"]], "writehexastext() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.writeHexAsText"]], "writepackeduint() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.writePackedUInt"]], "writescalar() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.writeScalar"]], "writescalarastext() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.writeScalarAsText"]], "writestream() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.writeStream"]], "writetext() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.writeText"]], "writetoandreset() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.writeToAndReset"]], "writetostream() (dynamicmemorywstream method)": [[55, "skia.DynamicMemoryWStream.writeToStream"]], "encodedimageformat (class in skia)": [[56, "skia.EncodedImageFormat"]], "__init__() (encodedimageformat method)": [[56, "skia.EncodedImageFormat.__init__"]], "kastc (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kASTC"]], "kbmp (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kBMP"]], "kdng (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kDNG"]], "kgif (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kGIF"]], "kheif (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kHEIF"]], "kico (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kICO"]], "kjpeg (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kJPEG"]], "kktx (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kKTX"]], "kpkm (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kPKM"]], "kpng (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kPNG"]], "kwbmp (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kWBMP"]], "kwebp (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.kWEBP"]], "name (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.name"]], "value (encodedimageformat attribute)": [[56, "skia.EncodedImageFormat.value"]], "encodedorigin (class in skia)": [[57, "skia.EncodedOrigin"]], "__init__() (encodedorigin method)": [[57, "skia.EncodedOrigin.__init__"]], "kbottomleft_encodedorigin (encodedorigin attribute)": [[57, "skia.EncodedOrigin.kBottomLeft_EncodedOrigin"]], "kbottomright_encodedorigin (encodedorigin attribute)": [[57, "skia.EncodedOrigin.kBottomRight_EncodedOrigin"]], "kdefault_encodedorigin (encodedorigin attribute)": [[57, "skia.EncodedOrigin.kDefault_EncodedOrigin"]], "klast_encodedorigin (encodedorigin attribute)": [[57, "skia.EncodedOrigin.kLast_EncodedOrigin"]], "kleftbottom_encodedorigin (encodedorigin attribute)": [[57, "skia.EncodedOrigin.kLeftBottom_EncodedOrigin"]], "klefttop_encodedorigin (encodedorigin attribute)": [[57, "skia.EncodedOrigin.kLeftTop_EncodedOrigin"]], "krightbottom_encodedorigin (encodedorigin attribute)": [[57, "skia.EncodedOrigin.kRightBottom_EncodedOrigin"]], "krighttop_encodedorigin (encodedorigin attribute)": [[57, "skia.EncodedOrigin.kRightTop_EncodedOrigin"]], "ktopleft_encodedorigin (encodedorigin attribute)": [[57, "skia.EncodedOrigin.kTopLeft_EncodedOrigin"]], "ktopright_encodedorigin (encodedorigin attribute)": [[57, "skia.EncodedOrigin.kTopRight_EncodedOrigin"]], "name (encodedorigin attribute)": [[57, "skia.EncodedOrigin.name"]], "value (encodedorigin attribute)": [[57, "skia.EncodedOrigin.value"]], "filestream (class in skia)": [[58, "skia.FILEStream"]], "make() (filestream static method)": [[58, "skia.FILEStream.Make"]], "makefromfile() (filestream static method)": [[58, "skia.FILEStream.MakeFromFile"]], "__init__() (filestream method)": [[58, "skia.FILEStream.__init__"]], "close() (filestream method)": [[58, "skia.FILEStream.close"]], "duplicate() (filestream method)": [[58, "skia.FILEStream.duplicate"]], "fork() (filestream method)": [[58, "skia.FILEStream.fork"]], "getlength() (filestream method)": [[58, "skia.FILEStream.getLength"]], "getmemorybase() (filestream method)": [[58, "skia.FILEStream.getMemoryBase"]], "getposition() (filestream method)": [[58, "skia.FILEStream.getPosition"]], "haslength() (filestream method)": [[58, "skia.FILEStream.hasLength"]], "hasposition() (filestream method)": [[58, "skia.FILEStream.hasPosition"]], "isatend() (filestream method)": [[58, "skia.FILEStream.isAtEnd"]], "isvalid() (filestream method)": [[58, "skia.FILEStream.isValid"]], "move() (filestream method)": [[58, "skia.FILEStream.move"]], "peek() (filestream method)": [[58, "skia.FILEStream.peek"]], "read() (filestream method)": [[58, "skia.FILEStream.read"]], "readbool() (filestream method)": [[58, "skia.FILEStream.readBool"]], "readpackeduint() (filestream method)": [[58, "skia.FILEStream.readPackedUInt"]], "reads16() (filestream method)": [[58, "skia.FILEStream.readS16"]], "reads32() (filestream method)": [[58, "skia.FILEStream.readS32"]], "reads8() (filestream method)": [[58, "skia.FILEStream.readS8"]], "readscalar() (filestream method)": [[58, "skia.FILEStream.readScalar"]], "readu16() (filestream method)": [[58, "skia.FILEStream.readU16"]], "readu32() (filestream method)": [[58, "skia.FILEStream.readU32"]], "readu8() (filestream method)": [[58, "skia.FILEStream.readU8"]], "rewind() (filestream method)": [[58, "skia.FILEStream.rewind"]], "seek() (filestream method)": [[58, "skia.FILEStream.seek"]], "skip() (filestream method)": [[58, "skia.FILEStream.skip"]], "filewstream (class in skia)": [[59, "skia.FILEWStream"]], "sizeofpackeduint() (filewstream static method)": [[59, "skia.FILEWStream.SizeOfPackedUInt"]], "__init__() (filewstream method)": [[59, "skia.FILEWStream.__init__"]], "byteswritten() (filewstream method)": [[59, "skia.FILEWStream.bytesWritten"]], "flush() (filewstream method)": [[59, "skia.FILEWStream.flush"]], "fsync() (filewstream method)": [[59, "skia.FILEWStream.fsync"]], "isvalid() (filewstream method)": [[59, "skia.FILEWStream.isValid"]], "newline() (filewstream method)": [[59, "skia.FILEWStream.newline"]], "write() (filewstream method)": [[59, "skia.FILEWStream.write"]], "write16() (filewstream method)": [[59, "skia.FILEWStream.write16"]], "write32() (filewstream method)": [[59, "skia.FILEWStream.write32"]], "write8() (filewstream method)": [[59, "skia.FILEWStream.write8"]], "writebigdecastext() (filewstream method)": [[59, "skia.FILEWStream.writeBigDecAsText"]], "writebool() (filewstream method)": [[59, "skia.FILEWStream.writeBool"]], "writedecastext() (filewstream method)": [[59, "skia.FILEWStream.writeDecAsText"]], "writehexastext() (filewstream method)": [[59, "skia.FILEWStream.writeHexAsText"]], "writepackeduint() (filewstream method)": [[59, "skia.FILEWStream.writePackedUInt"]], "writescalar() (filewstream method)": [[59, "skia.FILEWStream.writeScalar"]], "writescalarastext() (filewstream method)": [[59, "skia.FILEWStream.writeScalarAsText"]], "writestream() (filewstream method)": [[59, "skia.FILEWStream.writeStream"]], "writetext() (filewstream method)": [[59, "skia.FILEWStream.writeText"]], "filtermode (class in skia)": [[60, "skia.FilterMode"]], "__init__() (filtermode method)": [[60, "skia.FilterMode.__init__"]], "klinear (filtermode attribute)": [[60, "skia.FilterMode.kLinear"]], "knearest (filtermode attribute)": [[60, "skia.FilterMode.kNearest"]], "name (filtermode attribute)": [[60, "skia.FilterMode.name"]], "value (filtermode attribute)": [[60, "skia.FilterMode.value"]], "deserialize() (flattanable static method)": [[61, "skia.Flattanable.Deserialize"]], "flattanable (class in skia)": [[61, "skia.Flattanable"]], "__init__() (flattanable method)": [[61, "skia.Flattanable.__init__"]], "getflattenabletype() (flattanable method)": [[61, "skia.Flattanable.getFlattenableType"]], "gettypename() (flattanable method)": [[61, "skia.Flattanable.getTypeName"]], "kcolorfilter_type (flattanable attribute)": [[61, "skia.Flattanable.kColorFilter_Type"]], "kdrawlooper_type (flattanable attribute)": [[61, "skia.Flattanable.kDrawLooper_Type"]], "kdrawable_type (flattanable attribute)": [[61, "skia.Flattanable.kDrawable_Type"]], "kimagefilter_type (flattanable attribute)": [[61, "skia.Flattanable.kImageFilter_Type"]], "kmaskfilter_type (flattanable attribute)": [[61, "skia.Flattanable.kMaskFilter_Type"]], "kpatheffect_type (flattanable attribute)": [[61, "skia.Flattanable.kPathEffect_Type"]], "ref() (flattanable method)": [[61, "skia.Flattanable.ref"]], "serialize() (flattanable method)": [[61, "skia.Flattanable.serialize"]], "unique() (flattanable method)": [[61, "skia.Flattanable.unique"]], "unref() (flattanable method)": [[61, "skia.Flattanable.unref"]], "type (class in skia.flattanable)": [[62, "skia.Flattanable.Type"]], "font (class in skia)": [[63, "skia.Font"]], "__init__() (font method)": [[63, "skia.Font.__init__"]], "counttext() (font method)": [[63, "skia.Font.countText"]], "dump() (font method)": [[63, "skia.Font.dump"]], "getbounds() (font method)": [[63, "skia.Font.getBounds"]], "getedging() (font method)": [[63, "skia.Font.getEdging"]], "gethinting() (font method)": [[63, "skia.Font.getHinting"]], "getmetrics() (font method)": [[63, "skia.Font.getMetrics"]], "getpath() (font method)": [[63, "skia.Font.getPath"]], "getpaths() (font method)": [[63, "skia.Font.getPaths"]], "getpos() (font method)": [[63, "skia.Font.getPos"]], "getscalex() (font method)": [[63, "skia.Font.getScaleX"]], "getsize() (font method)": [[63, "skia.Font.getSize"]], "getskewx() (font method)": [[63, "skia.Font.getSkewX"]], "getspacing() (font method)": [[63, "skia.Font.getSpacing"]], "gettypeface() (font method)": [[63, "skia.Font.getTypeface"]], "gettypefaceordefault() (font method)": [[63, "skia.Font.getTypefaceOrDefault"]], "getwidths() (font method)": [[63, "skia.Font.getWidths"]], "getwidthsbounds() (font method)": [[63, "skia.Font.getWidthsBounds"]], "getxpos() (font method)": [[63, "skia.Font.getXPos"]], "isbaselinesnap() (font method)": [[63, "skia.Font.isBaselineSnap"]], "isembeddedbitmaps() (font method)": [[63, "skia.Font.isEmbeddedBitmaps"]], "isembolden() (font method)": [[63, "skia.Font.isEmbolden"]], "isforceautohinting() (font method)": [[63, "skia.Font.isForceAutoHinting"]], "islinearmetrics() (font method)": [[63, "skia.Font.isLinearMetrics"]], "issubpixel() (font method)": [[63, "skia.Font.isSubpixel"]], "kalias (font attribute)": [[63, "skia.Font.kAlias"]], "kantialias (font attribute)": [[63, "skia.Font.kAntiAlias"]], "ksubpixelantialias (font attribute)": [[63, "skia.Font.kSubpixelAntiAlias"]], "makewithsize() (font method)": [[63, "skia.Font.makeWithSize"]], "measuretext() (font method)": [[63, "skia.Font.measureText"]], "reftypeface() (font method)": [[63, "skia.Font.refTypeface"]], "reftypefaceordefault() (font method)": [[63, "skia.Font.refTypefaceOrDefault"]], "setbaselinesnap() (font method)": [[63, "skia.Font.setBaselineSnap"]], "setedging() (font method)": [[63, "skia.Font.setEdging"]], "setembeddedbitmaps() (font method)": [[63, "skia.Font.setEmbeddedBitmaps"]], "setembolden() (font method)": [[63, "skia.Font.setEmbolden"]], "setforceautohinting() (font method)": [[63, "skia.Font.setForceAutoHinting"]], "sethinting() (font method)": [[63, "skia.Font.setHinting"]], "setlinearmetrics() (font method)": [[63, "skia.Font.setLinearMetrics"]], "setscalex() (font method)": [[63, "skia.Font.setScaleX"]], "setsize() (font method)": [[63, "skia.Font.setSize"]], "setskewx() (font method)": [[63, "skia.Font.setSkewX"]], "setsubpixel() (font method)": [[63, "skia.Font.setSubpixel"]], "settypeface() (font method)": [[63, "skia.Font.setTypeface"]], "texttoglyphs() (font method)": [[63, "skia.Font.textToGlyphs"]], "unichartoglyph() (font method)": [[63, "skia.Font.unicharToGlyph"]], "unicharstoglyphs() (font method)": [[63, "skia.Font.unicharsToGlyphs"]], "edging (class in skia.font)": [[64, "skia.Font.Edging"]], "__init__() (edging method)": [[64, "skia.Font.Edging.__init__"]], "kalias (edging attribute)": [[64, "skia.Font.Edging.kAlias"]], "kantialias (edging attribute)": [[64, "skia.Font.Edging.kAntiAlias"]], "ksubpixelantialias (edging attribute)": [[64, "skia.Font.Edging.kSubpixelAntiAlias"]], "name (edging attribute)": [[64, "skia.Font.Edging.name"]], "value (edging attribute)": [[64, "skia.Font.Edging.value"]], "fontarguments (class in skia)": [[65, "skia.FontArguments"]], "__init__() (fontarguments method)": [[65, "skia.FontArguments.__init__"]], "getcollectionindex() (fontarguments method)": [[65, "skia.FontArguments.getCollectionIndex"]], "getvariationdesignposition() (fontarguments method)": [[65, "skia.FontArguments.getVariationDesignPosition"]], "setcollectionindex() (fontarguments method)": [[65, "skia.FontArguments.setCollectionIndex"]], "setvariationdesignposition() (fontarguments method)": [[65, "skia.FontArguments.setVariationDesignPosition"]], "variationposition (class in skia.fontarguments)": [[66, "skia.FontArguments.VariationPosition"]], "__init__() (variationposition method)": [[66, "skia.FontArguments.VariationPosition.__init__"]], "coordinatecount (variationposition attribute)": [[66, "skia.FontArguments.VariationPosition.coordinateCount"]], "coordinates (variationposition attribute)": [[66, "skia.FontArguments.VariationPosition.coordinates"]], "coordinate (class in skia.fontarguments.variationposition)": [[67, "skia.FontArguments.VariationPosition.Coordinate"]], "__init__() (coordinate method)": [[67, "skia.FontArguments.VariationPosition.Coordinate.__init__"]], "axis (coordinate attribute)": [[67, "skia.FontArguments.VariationPosition.Coordinate.axis"]], "value (coordinate attribute)": [[67, "skia.FontArguments.VariationPosition.Coordinate.value"]], "coordinates (class in skia.fontarguments.variationposition)": [[68, "skia.FontArguments.VariationPosition.Coordinates"]], "__init__() (coordinates method)": [[68, "skia.FontArguments.VariationPosition.Coordinates.__init__"]], "append() (coordinates method)": [[68, "skia.FontArguments.VariationPosition.Coordinates.append"]], "clear() (coordinates method)": [[68, "skia.FontArguments.VariationPosition.Coordinates.clear"]], "extend() (coordinates method)": [[68, "skia.FontArguments.VariationPosition.Coordinates.extend"]], "insert() (coordinates method)": [[68, "skia.FontArguments.VariationPosition.Coordinates.insert"]], "pop() (coordinates method)": [[68, "skia.FontArguments.VariationPosition.Coordinates.pop"]], "fonthinting (class in skia)": [[69, "skia.FontHinting"]], "__init__() (fonthinting method)": [[69, "skia.FontHinting.__init__"]], "kfull (fonthinting attribute)": [[69, "skia.FontHinting.kFull"]], "knone (fonthinting attribute)": [[69, "skia.FontHinting.kNone"]], "knormal (fonthinting attribute)": [[69, "skia.FontHinting.kNormal"]], "kslight (fonthinting attribute)": [[69, "skia.FontHinting.kSlight"]], "name (fonthinting attribute)": [[69, "skia.FontHinting.name"]], "value (fonthinting attribute)": [[69, "skia.FontHinting.value"]], "fontmetrics (class in skia)": [[70, "skia.FontMetrics"]], "__init__() (fontmetrics method)": [[70, "skia.FontMetrics.__init__"]], "fascent (fontmetrics attribute)": [[70, "skia.FontMetrics.fAscent"]], "favgcharwidth (fontmetrics attribute)": [[70, "skia.FontMetrics.fAvgCharWidth"]], "fbottom (fontmetrics attribute)": [[70, "skia.FontMetrics.fBottom"]], "fcapheight (fontmetrics attribute)": [[70, "skia.FontMetrics.fCapHeight"]], "fdescent (fontmetrics attribute)": [[70, "skia.FontMetrics.fDescent"]], "fflags (fontmetrics attribute)": [[70, "skia.FontMetrics.fFlags"]], "fleading (fontmetrics attribute)": [[70, "skia.FontMetrics.fLeading"]], "fmaxcharwidth (fontmetrics attribute)": [[70, "skia.FontMetrics.fMaxCharWidth"]], "fstrikeoutposition (fontmetrics attribute)": [[70, "skia.FontMetrics.fStrikeoutPosition"]], "fstrikeoutthickness (fontmetrics attribute)": [[70, "skia.FontMetrics.fStrikeoutThickness"]], "ftop (fontmetrics attribute)": [[70, "skia.FontMetrics.fTop"]], "funderlineposition (fontmetrics attribute)": [[70, "skia.FontMetrics.fUnderlinePosition"]], "funderlinethickness (fontmetrics attribute)": [[70, "skia.FontMetrics.fUnderlineThickness"]], "fxheight (fontmetrics attribute)": [[70, "skia.FontMetrics.fXHeight"]], "fxmax (fontmetrics attribute)": [[70, "skia.FontMetrics.fXMax"]], "fxmin (fontmetrics attribute)": [[70, "skia.FontMetrics.fXMin"]], "hasstrikeoutposition() (fontmetrics method)": [[70, "skia.FontMetrics.hasStrikeoutPosition"]], "hasstrikeoutthickness() (fontmetrics method)": [[70, "skia.FontMetrics.hasStrikeoutThickness"]], "hasunderlineposition() (fontmetrics method)": [[70, "skia.FontMetrics.hasUnderlinePosition"]], "hasunderlinethickness() (fontmetrics method)": [[70, "skia.FontMetrics.hasUnderlineThickness"]], "kstrikeoutpositionisvalid_flag (fontmetrics attribute)": [[70, "skia.FontMetrics.kStrikeoutPositionIsValid_Flag"]], "kstrikeoutthicknessisvalid_flag (fontmetrics attribute)": [[70, "skia.FontMetrics.kStrikeoutThicknessIsValid_Flag"]], "kunderlinepositionisvalid_flag (fontmetrics attribute)": [[70, "skia.FontMetrics.kUnderlinePositionIsValid_Flag"]], "kunderlinethicknessisvalid_flag (fontmetrics attribute)": [[70, "skia.FontMetrics.kUnderlineThicknessIsValid_Flag"]], "fontmetricsflags (class in skia.fontmetrics)": [[71, "skia.FontMetrics.FontMetricsFlags"]], "__init__() (fontmetricsflags method)": [[71, "skia.FontMetrics.FontMetricsFlags.__init__"]], "kstrikeoutpositionisvalid_flag (fontmetricsflags attribute)": [[71, "skia.FontMetrics.FontMetricsFlags.kStrikeoutPositionIsValid_Flag"]], "kstrikeoutthicknessisvalid_flag (fontmetricsflags attribute)": [[71, "skia.FontMetrics.FontMetricsFlags.kStrikeoutThicknessIsValid_Flag"]], "kunderlinepositionisvalid_flag (fontmetricsflags attribute)": [[71, "skia.FontMetrics.FontMetricsFlags.kUnderlinePositionIsValid_Flag"]], "kunderlinethicknessisvalid_flag (fontmetricsflags attribute)": [[71, "skia.FontMetrics.FontMetricsFlags.kUnderlineThicknessIsValid_Flag"]], "name (fontmetricsflags attribute)": [[71, "skia.FontMetrics.FontMetricsFlags.name"]], "value (fontmetricsflags attribute)": [[71, "skia.FontMetrics.FontMetricsFlags.value"]], "fontmgr (class in skia)": [[72, "skia.FontMgr"]], "refdefault() (fontmgr static method)": [[72, "skia.FontMgr.RefDefault"]], "__init__() (fontmgr method)": [[72, "skia.FontMgr.__init__"]], "countfamilies() (fontmgr method)": [[72, "skia.FontMgr.countFamilies"]], "createstyleset() (fontmgr method)": [[72, "skia.FontMgr.createStyleSet"]], "getfamilyname() (fontmgr method)": [[72, "skia.FontMgr.getFamilyName"]], "legacymaketypeface() (fontmgr method)": [[72, "skia.FontMgr.legacyMakeTypeface"]], "makefromdata() (fontmgr method)": [[72, "skia.FontMgr.makeFromData"]], "makefromfile() (fontmgr method)": [[72, "skia.FontMgr.makeFromFile"]], "matchfamily() (fontmgr method)": [[72, "skia.FontMgr.matchFamily"]], "matchfamilystyle() (fontmgr method)": [[72, "skia.FontMgr.matchFamilyStyle"]], "matchfamilystylecharacter() (fontmgr method)": [[72, "skia.FontMgr.matchFamilyStyleCharacter"]], "ref() (fontmgr method)": [[72, "skia.FontMgr.ref"]], "unique() (fontmgr method)": [[72, "skia.FontMgr.unique"]], "unref() (fontmgr method)": [[72, "skia.FontMgr.unref"]], "fontparameters (class in skia)": [[73, "skia.FontParameters"]], "__init__() (fontparameters method)": [[73, "skia.FontParameters.__init__"]], "variation (class in skia.fontparameters)": [[74, "skia.FontParameters.Variation"]], "__init__() (variation method)": [[74, "skia.FontParameters.Variation.__init__"]], "axis (class in skia.fontparameters.variation)": [[75, "skia.FontParameters.Variation.Axis"]], "__init__() (axis method)": [[75, "skia.FontParameters.Variation.Axis.__init__"]], "def (axis attribute)": [[75, "skia.FontParameters.Variation.Axis.def"]], "ishidden() (axis method)": [[75, "skia.FontParameters.Variation.Axis.isHidden"]], "max (axis attribute)": [[75, "skia.FontParameters.Variation.Axis.max"]], "min (axis attribute)": [[75, "skia.FontParameters.Variation.Axis.min"]], "sethidden() (axis method)": [[75, "skia.FontParameters.Variation.Axis.setHidden"]], "tag (axis attribute)": [[75, "skia.FontParameters.Variation.Axis.tag"]], "bold() (fontstyle static method)": [[76, "skia.FontStyle.Bold"]], "bolditalic() (fontstyle static method)": [[76, "skia.FontStyle.BoldItalic"]], "fontstyle (class in skia)": [[76, "skia.FontStyle"]], "italic() (fontstyle static method)": [[76, "skia.FontStyle.Italic"]], "normal() (fontstyle static method)": [[76, "skia.FontStyle.Normal"]], "__init__() (fontstyle method)": [[76, "skia.FontStyle.__init__"]], "kblack_weight (fontstyle attribute)": [[76, "skia.FontStyle.kBlack_Weight"]], "kbold_weight (fontstyle attribute)": [[76, "skia.FontStyle.kBold_Weight"]], "kcondensed_width (fontstyle attribute)": [[76, "skia.FontStyle.kCondensed_Width"]], "kexpanded_width (fontstyle attribute)": [[76, "skia.FontStyle.kExpanded_Width"]], "kextrablack_weight (fontstyle attribute)": [[76, "skia.FontStyle.kExtraBlack_Weight"]], "kextrabold_weight (fontstyle attribute)": [[76, "skia.FontStyle.kExtraBold_Weight"]], "kextracondensed_width (fontstyle attribute)": [[76, "skia.FontStyle.kExtraCondensed_Width"]], "kextraexpanded_width (fontstyle attribute)": [[76, "skia.FontStyle.kExtraExpanded_Width"]], "kextralight_weight (fontstyle attribute)": [[76, "skia.FontStyle.kExtraLight_Weight"]], "kinvisible_weight (fontstyle attribute)": [[76, "skia.FontStyle.kInvisible_Weight"]], "kitalic_slant (fontstyle attribute)": [[76, "skia.FontStyle.kItalic_Slant"]], "klight_weight (fontstyle attribute)": [[76, "skia.FontStyle.kLight_Weight"]], "kmedium_weight (fontstyle attribute)": [[76, "skia.FontStyle.kMedium_Weight"]], "knormal_weight (fontstyle attribute)": [[76, "skia.FontStyle.kNormal_Weight"]], "knormal_width (fontstyle attribute)": [[76, "skia.FontStyle.kNormal_Width"]], "koblique_slant (fontstyle attribute)": [[76, "skia.FontStyle.kOblique_Slant"]], "ksemibold_weight (fontstyle attribute)": [[76, "skia.FontStyle.kSemiBold_Weight"]], "ksemicondensed_width (fontstyle attribute)": [[76, "skia.FontStyle.kSemiCondensed_Width"]], "ksemiexpanded_width (fontstyle attribute)": [[76, "skia.FontStyle.kSemiExpanded_Width"]], "kthin_weight (fontstyle attribute)": [[76, "skia.FontStyle.kThin_Weight"]], "kultracondensed_width (fontstyle attribute)": [[76, "skia.FontStyle.kUltraCondensed_Width"]], "kultraexpanded_width (fontstyle attribute)": [[76, "skia.FontStyle.kUltraExpanded_Width"]], "kupright_slant (fontstyle attribute)": [[76, "skia.FontStyle.kUpright_Slant"]], "slant() (fontstyle method)": [[76, "skia.FontStyle.slant"]], "weight() (fontstyle method)": [[76, "skia.FontStyle.weight"]], "width() (fontstyle method)": [[76, "skia.FontStyle.width"]], "slant (class in skia.fontstyle)": [[77, "skia.FontStyle.Slant"]], "__init__() (slant method)": [[77, "skia.FontStyle.Slant.__init__"]], "kitalic_slant (slant attribute)": [[77, "skia.FontStyle.Slant.kItalic_Slant"]], "koblique_slant (slant attribute)": [[77, "skia.FontStyle.Slant.kOblique_Slant"]], "kupright_slant (slant attribute)": [[77, "skia.FontStyle.Slant.kUpright_Slant"]], "name (slant attribute)": [[77, "skia.FontStyle.Slant.name"]], "value (slant attribute)": [[77, "skia.FontStyle.Slant.value"]], "weight (class in skia.fontstyle)": [[78, "skia.FontStyle.Weight"]], "__init__() (weight method)": [[78, "skia.FontStyle.Weight.__init__"]], "kblack_weight (weight attribute)": [[78, "skia.FontStyle.Weight.kBlack_Weight"]], "kbold_weight (weight attribute)": [[78, "skia.FontStyle.Weight.kBold_Weight"]], "kextrablack_weight (weight attribute)": [[78, "skia.FontStyle.Weight.kExtraBlack_Weight"]], "kextrabold_weight (weight attribute)": [[78, "skia.FontStyle.Weight.kExtraBold_Weight"]], "kextralight_weight (weight attribute)": [[78, "skia.FontStyle.Weight.kExtraLight_Weight"]], "kinvisible_weight (weight attribute)": [[78, "skia.FontStyle.Weight.kInvisible_Weight"]], "klight_weight (weight attribute)": [[78, "skia.FontStyle.Weight.kLight_Weight"]], "kmedium_weight (weight attribute)": [[78, "skia.FontStyle.Weight.kMedium_Weight"]], "knormal_weight (weight attribute)": [[78, "skia.FontStyle.Weight.kNormal_Weight"]], "ksemibold_weight (weight attribute)": [[78, "skia.FontStyle.Weight.kSemiBold_Weight"]], "kthin_weight (weight attribute)": [[78, "skia.FontStyle.Weight.kThin_Weight"]], "name (weight attribute)": [[78, "skia.FontStyle.Weight.name"]], "value (weight attribute)": [[78, "skia.FontStyle.Weight.value"]], "width (class in skia.fontstyle)": [[79, "skia.FontStyle.Width"]], "__init__() (width method)": [[79, "skia.FontStyle.Width.__init__"]], "kcondensed_width (width attribute)": [[79, "skia.FontStyle.Width.kCondensed_Width"]], "kexpanded_width (width attribute)": [[79, "skia.FontStyle.Width.kExpanded_Width"]], "kextracondensed_width (width attribute)": [[79, "skia.FontStyle.Width.kExtraCondensed_Width"]], "kextraexpanded_width (width attribute)": [[79, "skia.FontStyle.Width.kExtraExpanded_Width"]], "knormal_width (width attribute)": [[79, "skia.FontStyle.Width.kNormal_Width"]], "ksemicondensed_width (width attribute)": [[79, "skia.FontStyle.Width.kSemiCondensed_Width"]], "ksemiexpanded_width (width attribute)": [[79, "skia.FontStyle.Width.kSemiExpanded_Width"]], "kultracondensed_width (width attribute)": [[79, "skia.FontStyle.Width.kUltraCondensed_Width"]], "kultraexpanded_width (width attribute)": [[79, "skia.FontStyle.Width.kUltraExpanded_Width"]], "name (width attribute)": [[79, "skia.FontStyle.Width.name"]], "value (width attribute)": [[79, "skia.FontStyle.Width.value"]], "createempty() (fontstyleset static method)": [[80, "skia.FontStyleSet.CreateEmpty"]], "fontstyleset (class in skia)": [[80, "skia.FontStyleSet"]], "__init__() (fontstyleset method)": [[80, "skia.FontStyleSet.__init__"]], "count() (fontstyleset method)": [[80, "skia.FontStyleSet.count"]], "createtypeface() (fontstyleset method)": [[80, "skia.FontStyleSet.createTypeface"]], "getstyle() (fontstyleset method)": [[80, "skia.FontStyleSet.getStyle"]], "matchstyle() (fontstyleset method)": [[80, "skia.FontStyleSet.matchStyle"]], "ref() (fontstyleset method)": [[80, "skia.FontStyleSet.ref"]], "unique() (fontstyleset method)": [[80, "skia.FontStyleSet.unique"]], "unref() (fontstyleset method)": [[80, "skia.FontStyleSet.unref"]], "grbackendapi (class in skia)": [[81, "skia.GrBackendApi"]], "__init__() (grbackendapi method)": [[81, "skia.GrBackendApi.__init__"]], "kdawn (grbackendapi attribute)": [[81, "skia.GrBackendApi.kDawn"]], "kdirect3d (grbackendapi attribute)": [[81, "skia.GrBackendApi.kDirect3D"]], "kmetal (grbackendapi attribute)": [[81, "skia.GrBackendApi.kMetal"]], "kmock (grbackendapi attribute)": [[81, "skia.GrBackendApi.kMock"]], "kopengl (grbackendapi attribute)": [[81, "skia.GrBackendApi.kOpenGL"]], "kopengl_grbackend (grbackendapi attribute)": [[81, "skia.GrBackendApi.kOpenGL_GrBackend"]], "kvulkan (grbackendapi attribute)": [[81, "skia.GrBackendApi.kVulkan"]], "name (grbackendapi attribute)": [[81, "skia.GrBackendApi.name"]], "value (grbackendapi attribute)": [[81, "skia.GrBackendApi.value"]], "grbackendformat (class in skia)": [[82, "skia.GrBackendFormat"]], "makegl() (grbackendformat static method)": [[82, "skia.GrBackendFormat.MakeGL"]], "makemock() (grbackendformat static method)": [[82, "skia.GrBackendFormat.MakeMock"]], "__init__() (grbackendformat method)": [[82, "skia.GrBackendFormat.__init__"]], "asglformat() (grbackendformat method)": [[82, "skia.GrBackendFormat.asGLFormat"]], "asmockcolortype() (grbackendformat method)": [[82, "skia.GrBackendFormat.asMockColorType"]], "asmockcompressiontype() (grbackendformat method)": [[82, "skia.GrBackendFormat.asMockCompressionType"]], "backend() (grbackendformat method)": [[82, "skia.GrBackendFormat.backend"]], "channelmask() (grbackendformat method)": [[82, "skia.GrBackendFormat.channelMask"]], "isvalid() (grbackendformat method)": [[82, "skia.GrBackendFormat.isValid"]], "maketexture2d() (grbackendformat method)": [[82, "skia.GrBackendFormat.makeTexture2D"]], "texturetype() (grbackendformat method)": [[82, "skia.GrBackendFormat.textureType"]], "grbackendrendertarget (class in skia)": [[83, "skia.GrBackendRenderTarget"]], "__init__() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.__init__"]], "backend() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.backend"]], "dimensions() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.dimensions"]], "getbackendformat() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.getBackendFormat"]], "getglframebufferinfo() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.getGLFramebufferInfo"]], "getmockrendertargetinfo() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.getMockRenderTargetInfo"]], "height() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.height"]], "isframebufferonly() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.isFramebufferOnly"]], "isprotected() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.isProtected"]], "isvalid() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.isValid"]], "samplecnt() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.sampleCnt"]], "stencilbits() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.stencilBits"]], "width() (grbackendrendertarget method)": [[83, "skia.GrBackendRenderTarget.width"]], "grbackendsemaphore (class in skia)": [[84, "skia.GrBackendSemaphore"]], "__init__() (grbackendsemaphore method)": [[84, "skia.GrBackendSemaphore.__init__"]], "glsync() (grbackendsemaphore method)": [[84, "skia.GrBackendSemaphore.glSync"]], "initgl() (grbackendsemaphore method)": [[84, "skia.GrBackendSemaphore.initGL"]], "isinitialized() (grbackendsemaphore method)": [[84, "skia.GrBackendSemaphore.isInitialized"]], "grbackendsurfacemutablestate (class in skia)": [[85, "skia.GrBackendSurfaceMutableState"]], "__init__() (grbackendsurfacemutablestate method)": [[85, "skia.GrBackendSurfaceMutableState.__init__"]], "backend() (grbackendsurfacemutablestate method)": [[85, "skia.GrBackendSurfaceMutableState.backend"]], "isvalid() (grbackendsurfacemutablestate method)": [[85, "skia.GrBackendSurfaceMutableState.isValid"]], "grbackendtexture (class in skia)": [[86, "skia.GrBackendTexture"]], "__init__() (grbackendtexture method)": [[86, "skia.GrBackendTexture.__init__"]], "backend() (grbackendtexture method)": [[86, "skia.GrBackendTexture.backend"]], "dimensions() (grbackendtexture method)": [[86, "skia.GrBackendTexture.dimensions"]], "getbackendformat() (grbackendtexture method)": [[86, "skia.GrBackendTexture.getBackendFormat"]], "getgltextureinfo() (grbackendtexture method)": [[86, "skia.GrBackendTexture.getGLTextureInfo"]], "getmocktextureinfo() (grbackendtexture method)": [[86, "skia.GrBackendTexture.getMockTextureInfo"]], "gltextureparametersmodified() (grbackendtexture method)": [[86, "skia.GrBackendTexture.glTextureParametersModified"]], "hasmipmaps() (grbackendtexture method)": [[86, "skia.GrBackendTexture.hasMipmaps"]], "height() (grbackendtexture method)": [[86, "skia.GrBackendTexture.height"]], "isprotected() (grbackendtexture method)": [[86, "skia.GrBackendTexture.isProtected"]], "issametexture() (grbackendtexture method)": [[86, "skia.GrBackendTexture.isSameTexture"]], "isvalid() (grbackendtexture method)": [[86, "skia.GrBackendTexture.isValid"]], "setmutablestate() (grbackendtexture method)": [[86, "skia.GrBackendTexture.setMutableState"]], "width() (grbackendtexture method)": [[86, "skia.GrBackendTexture.width"]], "grcolortype (class in skia)": [[87, "skia.GrColorType"]], "__init__() (grcolortype method)": [[87, "skia.GrColorType.__init__"]], "kabgr_4444 (grcolortype attribute)": [[87, "skia.GrColorType.kABGR_4444"]], "kalpha_16 (grcolortype attribute)": [[87, "skia.GrColorType.kAlpha_16"]], "kalpha_8 (grcolortype attribute)": [[87, "skia.GrColorType.kAlpha_8"]], "kalpha_8xxx (grcolortype attribute)": [[87, "skia.GrColorType.kAlpha_8xxx"]], "kalpha_f16 (grcolortype attribute)": [[87, "skia.GrColorType.kAlpha_F16"]], "kalpha_f32xxx (grcolortype attribute)": [[87, "skia.GrColorType.kAlpha_F32xxx"]], "kbgra_8888 (grcolortype attribute)": [[87, "skia.GrColorType.kBGRA_8888"]], "kbgr_565 (grcolortype attribute)": [[87, "skia.GrColorType.kBGR_565"]], "kgray_8 (grcolortype attribute)": [[87, "skia.GrColorType.kGray_8"]], "kgray_8xxx (grcolortype attribute)": [[87, "skia.GrColorType.kGray_8xxx"]], "kgray_f16 (grcolortype attribute)": [[87, "skia.GrColorType.kGray_F16"]], "klast (grcolortype attribute)": [[87, "skia.GrColorType.kLast"]], "krgba_1010102 (grcolortype attribute)": [[87, "skia.GrColorType.kRGBA_1010102"]], "krgba_16161616 (grcolortype attribute)": [[87, "skia.GrColorType.kRGBA_16161616"]], "krgba_8888 (grcolortype attribute)": [[87, "skia.GrColorType.kRGBA_8888"]], "krgba_8888_srgb (grcolortype attribute)": [[87, "skia.GrColorType.kRGBA_8888_SRGB"]], "krgba_f16 (grcolortype attribute)": [[87, "skia.GrColorType.kRGBA_F16"]], "krgba_f16_clamped (grcolortype attribute)": [[87, "skia.GrColorType.kRGBA_F16_Clamped"]], "krgba_f32 (grcolortype attribute)": [[87, "skia.GrColorType.kRGBA_F32"]], "krgb_888 (grcolortype attribute)": [[87, "skia.GrColorType.kRGB_888"]], "krgb_888x (grcolortype attribute)": [[87, "skia.GrColorType.kRGB_888x"]], "krg_1616 (grcolortype attribute)": [[87, "skia.GrColorType.kRG_1616"]], "krg_88 (grcolortype attribute)": [[87, "skia.GrColorType.kRG_88"]], "krg_f16 (grcolortype attribute)": [[87, "skia.GrColorType.kRG_F16"]], "kr_16 (grcolortype attribute)": [[87, "skia.GrColorType.kR_16"]], "kr_8 (grcolortype attribute)": [[87, "skia.GrColorType.kR_8"]], "kr_f16 (grcolortype attribute)": [[87, "skia.GrColorType.kR_F16"]], "kunknown (grcolortype attribute)": [[87, "skia.GrColorType.kUnknown"]], "name (grcolortype attribute)": [[87, "skia.GrColorType.name"]], "value (grcolortype attribute)": [[87, "skia.GrColorType.value"]], "computeimagesize() (grcontext static method)": [[88, "skia.GrContext.ComputeImageSize"]], "grcontext (in module skia)": [[88, "skia.GrContext"]], "makegl() (grcontext static method)": [[88, "skia.GrContext.MakeGL"]], "makemock() (grcontext static method)": [[88, "skia.GrContext.MakeMock"]], "__init__() (grcontext method)": [[88, "skia.GrContext.__init__"]], "abandoncontext() (grcontext method)": [[88, "skia.GrContext.abandonContext"]], "abandoned() (grcontext method)": [[88, "skia.GrContext.abandoned"]], "asdirectcontext() (grcontext method)": [[88, "skia.GrContext.asDirectContext"]], "backend() (grcontext method)": [[88, "skia.GrContext.backend"]], "checkasyncworkcompletion() (grcontext method)": [[88, "skia.GrContext.checkAsyncWorkCompletion"]], "colortypesupportedasimage() (grcontext method)": [[88, "skia.GrContext.colorTypeSupportedAsImage"]], "colortypesupportedassurface() (grcontext method)": [[88, "skia.GrContext.colorTypeSupportedAsSurface"]], "compressedbackendformat() (grcontext method)": [[88, "skia.GrContext.compressedBackendFormat"]], "createbackendtexture() (grcontext method)": [[88, "skia.GrContext.createBackendTexture"]], "createcompressedbackendtexture() (grcontext method)": [[88, "skia.GrContext.createCompressedBackendTexture"]], "defaultbackendformat() (grcontext method)": [[88, "skia.GrContext.defaultBackendFormat"]], "deletebackendtexture() (grcontext method)": [[88, "skia.GrContext.deleteBackendTexture"]], "flush() (grcontext method)": [[88, "skia.GrContext.flush"]], "flushandsubmit() (grcontext method)": [[88, "skia.GrContext.flushAndSubmit"]], "freegpuresources() (grcontext method)": [[88, "skia.GrContext.freeGpuResources"]], "getresourcecachelimit() (grcontext method)": [[88, "skia.GrContext.getResourceCacheLimit"]], "getresourcecachepurgeablebytes() (grcontext method)": [[88, "skia.GrContext.getResourceCachePurgeableBytes"]], "getresourcecacheusage() (grcontext method)": [[88, "skia.GrContext.getResourceCacheUsage"]], "maxrendertargetsize() (grcontext method)": [[88, "skia.GrContext.maxRenderTargetSize"]], "maxsurfacesamplecountforcolortype() (grcontext method)": [[88, "skia.GrContext.maxSurfaceSampleCountForColorType"]], "maxtexturesize() (grcontext method)": [[88, "skia.GrContext.maxTextureSize"]], "oomed() (grcontext method)": [[88, "skia.GrContext.oomed"]], "precompileshader() (grcontext method)": [[88, "skia.GrContext.precompileShader"]], "purgeresourcesnotusedinms() (grcontext method)": [[88, "skia.GrContext.purgeResourcesNotUsedInMs"]], "purgeunlockedresources() (grcontext method)": [[88, "skia.GrContext.purgeUnlockedResources"]], "ref() (grcontext method)": [[88, "skia.GrContext.ref"]], "releaseresourcesandabandoncontext() (grcontext method)": [[88, "skia.GrContext.releaseResourcesAndAbandonContext"]], "resetcontext() (grcontext method)": [[88, "skia.GrContext.resetContext"]], "resetgltexturebindings() (grcontext method)": [[88, "skia.GrContext.resetGLTextureBindings"]], "setbackendrendertargetstate() (grcontext method)": [[88, "skia.GrContext.setBackendRenderTargetState"]], "setbackendtexturestate() (grcontext method)": [[88, "skia.GrContext.setBackendTextureState"]], "setresourcecachelimit() (grcontext method)": [[88, "skia.GrContext.setResourceCacheLimit"]], "storevkpipelinecachedata() (grcontext method)": [[88, "skia.GrContext.storeVkPipelineCacheData"]], "submit() (grcontext method)": [[88, "skia.GrContext.submit"]], "supportsdistancefieldtext() (grcontext method)": [[88, "skia.GrContext.supportsDistanceFieldText"]], "threadsafeproxy() (grcontext method)": [[88, "skia.GrContext.threadSafeProxy"]], "unique() (grcontext method)": [[88, "skia.GrContext.unique"]], "unref() (grcontext method)": [[88, "skia.GrContext.unref"]], "updatebackendtexture() (grcontext method)": [[88, "skia.GrContext.updateBackendTexture"]], "wait() (grcontext method)": [[88, "skia.GrContext.wait"]], "grcontextoptions (class in skia)": [[89, "skia.GrContextOptions"]], "__init__() (grcontextoptions method)": [[89, "skia.GrContextOptions.__init__"]], "grcontext_base (class in skia)": [[90, "skia.GrContext_Base"]], "__init__() (grcontext_base method)": [[90, "skia.GrContext_Base.__init__"]], "asdirectcontext() (grcontext_base method)": [[90, "skia.GrContext_Base.asDirectContext"]], "backend() (grcontext_base method)": [[90, "skia.GrContext_Base.backend"]], "ref() (grcontext_base method)": [[90, "skia.GrContext_Base.ref"]], "threadsafeproxy() (grcontext_base method)": [[90, "skia.GrContext_Base.threadSafeProxy"]], "unique() (grcontext_base method)": [[90, "skia.GrContext_Base.unique"]], "unref() (grcontext_base method)": [[90, "skia.GrContext_Base.unref"]], "computeimagesize() (grdirectcontext static method)": [[91, "skia.GrDirectContext.ComputeImageSize"]], "grdirectcontext (class in skia)": [[91, "skia.GrDirectContext"]], "makegl() (grdirectcontext static method)": [[91, "skia.GrDirectContext.MakeGL"]], "makemock() (grdirectcontext static method)": [[91, "skia.GrDirectContext.MakeMock"]], "__init__() (grdirectcontext method)": [[91, "skia.GrDirectContext.__init__"]], "abandoncontext() (grdirectcontext method)": [[91, "skia.GrDirectContext.abandonContext"]], "abandoned() (grdirectcontext method)": [[91, "skia.GrDirectContext.abandoned"]], "asdirectcontext() (grdirectcontext method)": [[91, "skia.GrDirectContext.asDirectContext"]], "backend() (grdirectcontext method)": [[91, "skia.GrDirectContext.backend"]], "checkasyncworkcompletion() (grdirectcontext method)": [[91, "skia.GrDirectContext.checkAsyncWorkCompletion"]], "colortypesupportedasimage() (grdirectcontext method)": [[91, "skia.GrDirectContext.colorTypeSupportedAsImage"]], "colortypesupportedassurface() (grdirectcontext method)": [[91, "skia.GrDirectContext.colorTypeSupportedAsSurface"]], "compressedbackendformat() (grdirectcontext method)": [[91, "skia.GrDirectContext.compressedBackendFormat"]], "createbackendtexture() (grdirectcontext method)": [[91, "skia.GrDirectContext.createBackendTexture"]], "createcompressedbackendtexture() (grdirectcontext method)": [[91, "skia.GrDirectContext.createCompressedBackendTexture"]], "defaultbackendformat() (grdirectcontext method)": [[91, "skia.GrDirectContext.defaultBackendFormat"]], "deletebackendtexture() (grdirectcontext method)": [[91, "skia.GrDirectContext.deleteBackendTexture"]], "flush() (grdirectcontext method)": [[91, "skia.GrDirectContext.flush"]], "flushandsubmit() (grdirectcontext method)": [[91, "skia.GrDirectContext.flushAndSubmit"]], "freegpuresources() (grdirectcontext method)": [[91, "skia.GrDirectContext.freeGpuResources"]], "getresourcecachelimit() (grdirectcontext method)": [[91, "skia.GrDirectContext.getResourceCacheLimit"]], "getresourcecachepurgeablebytes() (grdirectcontext method)": [[91, "skia.GrDirectContext.getResourceCachePurgeableBytes"]], "getresourcecacheusage() (grdirectcontext method)": [[91, "skia.GrDirectContext.getResourceCacheUsage"]], "maxrendertargetsize() (grdirectcontext method)": [[91, "skia.GrDirectContext.maxRenderTargetSize"]], "maxsurfacesamplecountforcolortype() (grdirectcontext method)": [[91, "skia.GrDirectContext.maxSurfaceSampleCountForColorType"]], "maxtexturesize() (grdirectcontext method)": [[91, "skia.GrDirectContext.maxTextureSize"]], "oomed() (grdirectcontext method)": [[91, "skia.GrDirectContext.oomed"]], "precompileshader() (grdirectcontext method)": [[91, "skia.GrDirectContext.precompileShader"]], "purgeresourcesnotusedinms() (grdirectcontext method)": [[91, "skia.GrDirectContext.purgeResourcesNotUsedInMs"]], "purgeunlockedresources() (grdirectcontext method)": [[91, "skia.GrDirectContext.purgeUnlockedResources"]], "ref() (grdirectcontext method)": [[91, "skia.GrDirectContext.ref"]], "releaseresourcesandabandoncontext() (grdirectcontext method)": [[91, "skia.GrDirectContext.releaseResourcesAndAbandonContext"]], "resetcontext() (grdirectcontext method)": [[91, "skia.GrDirectContext.resetContext"]], "resetgltexturebindings() (grdirectcontext method)": [[91, "skia.GrDirectContext.resetGLTextureBindings"]], "setbackendrendertargetstate() (grdirectcontext method)": [[91, "skia.GrDirectContext.setBackendRenderTargetState"]], "setbackendtexturestate() (grdirectcontext method)": [[91, "skia.GrDirectContext.setBackendTextureState"]], "setresourcecachelimit() (grdirectcontext method)": [[91, "skia.GrDirectContext.setResourceCacheLimit"]], "storevkpipelinecachedata() (grdirectcontext method)": [[91, "skia.GrDirectContext.storeVkPipelineCacheData"]], "submit() (grdirectcontext method)": [[91, "skia.GrDirectContext.submit"]], "supportsdistancefieldtext() (grdirectcontext method)": [[91, "skia.GrDirectContext.supportsDistanceFieldText"]], "threadsafeproxy() (grdirectcontext method)": [[91, "skia.GrDirectContext.threadSafeProxy"]], "unique() (grdirectcontext method)": [[91, "skia.GrDirectContext.unique"]], "unref() (grdirectcontext method)": [[91, "skia.GrDirectContext.unref"]], "updatebackendtexture() (grdirectcontext method)": [[91, "skia.GrDirectContext.updateBackendTexture"]], "wait() (grdirectcontext method)": [[91, "skia.GrDirectContext.wait"]], "grflushinfo (class in skia)": [[92, "skia.GrFlushInfo"]], "__init__() (grflushinfo method)": [[92, "skia.GrFlushInfo.__init__"]], "fnumsemaphores (grflushinfo attribute)": [[92, "skia.GrFlushInfo.fNumSemaphores"]], "semaphores (grflushinfo attribute)": [[92, "skia.GrFlushInfo.semaphores"]], "grglbackendstate (class in skia)": [[93, "skia.GrGLBackendState"]], "__init__() (grglbackendstate method)": [[93, "skia.GrGLBackendState.__init__"]], "kall_grglbackendstate (grglbackendstate attribute)": [[93, "skia.GrGLBackendState.kALL_GrGLBackendState"]], "kblend_grglbackendstate (grglbackendstate attribute)": [[93, "skia.GrGLBackendState.kBlend_GrGLBackendState"]], "kfixedfunction_grglbackendstate (grglbackendstate attribute)": [[93, "skia.GrGLBackendState.kFixedFunction_GrGLBackendState"]], "kmsaaenable_grglbackendstate (grglbackendstate attribute)": [[93, "skia.GrGLBackendState.kMSAAEnable_GrGLBackendState"]], "kmisc_grglbackendstate (grglbackendstate attribute)": [[93, "skia.GrGLBackendState.kMisc_GrGLBackendState"]], "kpixelstore_grglbackendstate (grglbackendstate attribute)": [[93, "skia.GrGLBackendState.kPixelStore_GrGLBackendState"]], "kprogram_grglbackendstate (grglbackendstate attribute)": [[93, "skia.GrGLBackendState.kProgram_GrGLBackendState"]], "krendertarget_grglbackendstate (grglbackendstate attribute)": [[93, "skia.GrGLBackendState.kRenderTarget_GrGLBackendState"]], "kstencil_grglbackendstate (grglbackendstate attribute)": [[93, "skia.GrGLBackendState.kStencil_GrGLBackendState"]], "ktexturebinding_grglbackendstate (grglbackendstate attribute)": [[93, "skia.GrGLBackendState.kTextureBinding_GrGLBackendState"]], "kvertex_grglbackendstate (grglbackendstate attribute)": [[93, "skia.GrGLBackendState.kVertex_GrGLBackendState"]], "kview_grglbackendstate (grglbackendstate attribute)": [[93, "skia.GrGLBackendState.kView_GrGLBackendState"]], "name (grglbackendstate attribute)": [[93, "skia.GrGLBackendState.name"]], "value (grglbackendstate attribute)": [[93, "skia.GrGLBackendState.value"]], "grglformat (class in skia)": [[94, "skia.GrGLFormat"]], "__init__() (grglformat method)": [[94, "skia.GrGLFormat.__init__"]], "kalpha8 (grglformat attribute)": [[94, "skia.GrGLFormat.kALPHA8"]], "kbgra8 (grglformat attribute)": [[94, "skia.GrGLFormat.kBGRA8"]], "kcompressed_etc1_rgb8 (grglformat attribute)": [[94, "skia.GrGLFormat.kCOMPRESSED_ETC1_RGB8"]], "kcompressed_rgb8_bc1 (grglformat attribute)": [[94, "skia.GrGLFormat.kCOMPRESSED_RGB8_BC1"]], "kcompressed_rgb8_etc2 (grglformat attribute)": [[94, "skia.GrGLFormat.kCOMPRESSED_RGB8_ETC2"]], "kcompressed_rgba8_bc1 (grglformat attribute)": [[94, "skia.GrGLFormat.kCOMPRESSED_RGBA8_BC1"]], "kluminance16f (grglformat attribute)": [[94, "skia.GrGLFormat.kLUMINANCE16F"]], "kluminance8 (grglformat attribute)": [[94, "skia.GrGLFormat.kLUMINANCE8"]], "klast (grglformat attribute)": [[94, "skia.GrGLFormat.kLast"]], "kr16 (grglformat attribute)": [[94, "skia.GrGLFormat.kR16"]], "kr16f (grglformat attribute)": [[94, "skia.GrGLFormat.kR16F"]], "kr8 (grglformat attribute)": [[94, "skia.GrGLFormat.kR8"]], "krg16 (grglformat attribute)": [[94, "skia.GrGLFormat.kRG16"]], "krg16f (grglformat attribute)": [[94, "skia.GrGLFormat.kRG16F"]], "krg8 (grglformat attribute)": [[94, "skia.GrGLFormat.kRG8"]], "krgb10_a2 (grglformat attribute)": [[94, "skia.GrGLFormat.kRGB10_A2"]], "krgb565 (grglformat attribute)": [[94, "skia.GrGLFormat.kRGB565"]], "krgb8 (grglformat attribute)": [[94, "skia.GrGLFormat.kRGB8"]], "krgba16 (grglformat attribute)": [[94, "skia.GrGLFormat.kRGBA16"]], "krgba16f (grglformat attribute)": [[94, "skia.GrGLFormat.kRGBA16F"]], "krgba4 (grglformat attribute)": [[94, "skia.GrGLFormat.kRGBA4"]], "krgba8 (grglformat attribute)": [[94, "skia.GrGLFormat.kRGBA8"]], "ksrgb8_alpha8 (grglformat attribute)": [[94, "skia.GrGLFormat.kSRGB8_ALPHA8"]], "kunknown (grglformat attribute)": [[94, "skia.GrGLFormat.kUnknown"]], "name (grglformat attribute)": [[94, "skia.GrGLFormat.name"]], "value (grglformat attribute)": [[94, "skia.GrGLFormat.value"]], "grglframebufferinfo (class in skia)": [[95, "skia.GrGLFramebufferInfo"]], "__init__() (grglframebufferinfo method)": [[95, "skia.GrGLFramebufferInfo.__init__"]], "ffboid (grglframebufferinfo attribute)": [[95, "skia.GrGLFramebufferInfo.fFBOID"]], "fformat (grglframebufferinfo attribute)": [[95, "skia.GrGLFramebufferInfo.fFormat"]], "grglinterface (class in skia)": [[96, "skia.GrGLInterface"]], "__init__() (grglinterface method)": [[96, "skia.GrGLInterface.__init__"]], "ref() (grglinterface method)": [[96, "skia.GrGLInterface.ref"]], "unique() (grglinterface method)": [[96, "skia.GrGLInterface.unique"]], "unref() (grglinterface method)": [[96, "skia.GrGLInterface.unref"]], "grgltextureinfo (class in skia)": [[97, "skia.GrGLTextureInfo"]], "__init__() (grgltextureinfo method)": [[97, "skia.GrGLTextureInfo.__init__"]], "fformat (grgltextureinfo attribute)": [[97, "skia.GrGLTextureInfo.fFormat"]], "fid (grgltextureinfo attribute)": [[97, "skia.GrGLTextureInfo.fID"]], "ftarget (grgltextureinfo attribute)": [[97, "skia.GrGLTextureInfo.fTarget"]], "grimagecontext (class in skia)": [[98, "skia.GrImageContext"]], "__init__() (grimagecontext method)": [[98, "skia.GrImageContext.__init__"]], "asdirectcontext() (grimagecontext method)": [[98, "skia.GrImageContext.asDirectContext"]], "backend() (grimagecontext method)": [[98, "skia.GrImageContext.backend"]], "ref() (grimagecontext method)": [[98, "skia.GrImageContext.ref"]], "threadsafeproxy() (grimagecontext method)": [[98, "skia.GrImageContext.threadSafeProxy"]], "unique() (grimagecontext method)": [[98, "skia.GrImageContext.unique"]], "unref() (grimagecontext method)": [[98, "skia.GrImageContext.unref"]], "grmipmapped (class in skia)": [[99, "skia.GrMipmapped"]], "__init__() (grmipmapped method)": [[99, "skia.GrMipmapped.__init__"]], "kno (grmipmapped attribute)": [[99, "skia.GrMipmapped.kNo"]], "kyes (grmipmapped attribute)": [[99, "skia.GrMipmapped.kYes"]], "name (grmipmapped attribute)": [[99, "skia.GrMipmapped.name"]], "value (grmipmapped attribute)": [[99, "skia.GrMipmapped.value"]], "grmockoptions (class in skia)": [[100, "skia.GrMockOptions"]], "__init__() (grmockoptions method)": [[100, "skia.GrMockOptions.__init__"]], "grmockrendertargetinfo (class in skia)": [[101, "skia.GrMockRenderTargetInfo"]], "__init__() (grmockrendertargetinfo method)": [[101, "skia.GrMockRenderTargetInfo.__init__"]], "colortype() (grmockrendertargetinfo method)": [[101, "skia.GrMockRenderTargetInfo.colorType"]], "getbackendformat() (grmockrendertargetinfo method)": [[101, "skia.GrMockRenderTargetInfo.getBackendFormat"]], "grmocktextureinfo (class in skia)": [[102, "skia.GrMockTextureInfo"]], "__init__() (grmocktextureinfo method)": [[102, "skia.GrMockTextureInfo.__init__"]], "colortype() (grmocktextureinfo method)": [[102, "skia.GrMockTextureInfo.colorType"]], "compressiontype() (grmocktextureinfo method)": [[102, "skia.GrMockTextureInfo.compressionType"]], "getbackendformat() (grmocktextureinfo method)": [[102, "skia.GrMockTextureInfo.getBackendFormat"]], "id() (grmocktextureinfo method)": [[102, "skia.GrMockTextureInfo.id"]], "grprotected (class in skia)": [[103, "skia.GrProtected"]], "__init__() (grprotected method)": [[103, "skia.GrProtected.__init__"]], "kno (grprotected attribute)": [[103, "skia.GrProtected.kNo"]], "kyes (grprotected attribute)": [[103, "skia.GrProtected.kYes"]], "name (grprotected attribute)": [[103, "skia.GrProtected.name"]], "value (grprotected attribute)": [[103, "skia.GrProtected.value"]], "grrecordingcontext (class in skia)": [[104, "skia.GrRecordingContext"]], "__init__() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.__init__"]], "abandoned() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.abandoned"]], "asdirectcontext() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.asDirectContext"]], "backend() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.backend"]], "colortypesupportedasimage() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.colorTypeSupportedAsImage"]], "colortypesupportedassurface() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.colorTypeSupportedAsSurface"]], "defaultbackendformat() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.defaultBackendFormat"]], "maxrendertargetsize() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.maxRenderTargetSize"]], "maxsurfacesamplecountforcolortype() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.maxSurfaceSampleCountForColorType"]], "maxtexturesize() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.maxTextureSize"]], "ref() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.ref"]], "threadsafeproxy() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.threadSafeProxy"]], "unique() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.unique"]], "unref() (grrecordingcontext method)": [[104, "skia.GrRecordingContext.unref"]], "grrenderable (class in skia)": [[105, "skia.GrRenderable"]], "__init__() (grrenderable method)": [[105, "skia.GrRenderable.__init__"]], "kno (grrenderable attribute)": [[105, "skia.GrRenderable.kNo"]], "kyes (grrenderable attribute)": [[105, "skia.GrRenderable.kYes"]], "name (grrenderable attribute)": [[105, "skia.GrRenderable.name"]], "value (grrenderable attribute)": [[105, "skia.GrRenderable.value"]], "grsemaphoressubmitted (class in skia)": [[106, "skia.GrSemaphoresSubmitted"]], "__init__() (grsemaphoressubmitted method)": [[106, "skia.GrSemaphoresSubmitted.__init__"]], "kno (grsemaphoressubmitted attribute)": [[106, "skia.GrSemaphoresSubmitted.kNo"]], "kyes (grsemaphoressubmitted attribute)": [[106, "skia.GrSemaphoresSubmitted.kYes"]], "name (grsemaphoressubmitted attribute)": [[106, "skia.GrSemaphoresSubmitted.name"]], "value (grsemaphoressubmitted attribute)": [[106, "skia.GrSemaphoresSubmitted.value"]], "grsurfaceorigin (class in skia)": [[107, "skia.GrSurfaceOrigin"]], "__init__() (grsurfaceorigin method)": [[107, "skia.GrSurfaceOrigin.__init__"]], "kbottomleft_grsurfaceorigin (grsurfaceorigin attribute)": [[107, "skia.GrSurfaceOrigin.kBottomLeft_GrSurfaceOrigin"]], "ktopleft_grsurfaceorigin (grsurfaceorigin attribute)": [[107, "skia.GrSurfaceOrigin.kTopLeft_GrSurfaceOrigin"]], "name (grsurfaceorigin attribute)": [[107, "skia.GrSurfaceOrigin.name"]], "value (grsurfaceorigin attribute)": [[107, "skia.GrSurfaceOrigin.value"]], "grtexturetype (class in skia)": [[108, "skia.GrTextureType"]], "__init__() (grtexturetype method)": [[108, "skia.GrTextureType.__init__"]], "k2d (grtexturetype attribute)": [[108, "skia.GrTextureType.k2D"]], "kexternal (grtexturetype attribute)": [[108, "skia.GrTextureType.kExternal"]], "knone (grtexturetype attribute)": [[108, "skia.GrTextureType.kNone"]], "krectangle (grtexturetype attribute)": [[108, "skia.GrTextureType.kRectangle"]], "name (grtexturetype attribute)": [[108, "skia.GrTextureType.name"]], "value (grtexturetype attribute)": [[108, "skia.GrTextureType.value"]], "grvkalloc (class in skia)": [[109, "skia.GrVkAlloc"]], "__init__() (grvkalloc method)": [[109, "skia.GrVkAlloc.__init__"]], "grvkbackendcontext (class in skia)": [[110, "skia.GrVkBackendContext"]], "__init__() (grvkbackendcontext method)": [[110, "skia.GrVkBackendContext.__init__"]], "grvkdrawableinfo (class in skia)": [[111, "skia.GrVkDrawableInfo"]], "__init__() (grvkdrawableinfo method)": [[111, "skia.GrVkDrawableInfo.__init__"]], "grvkextensionflags (class in skia)": [[112, "skia.GrVkExtensionFlags"]], "__init__() (grvkextensionflags method)": [[112, "skia.GrVkExtensionFlags.__init__"]], "kext_debug_report_grvkextensionflag (grvkextensionflags attribute)": [[112, "skia.GrVkExtensionFlags.kEXT_debug_report_GrVkExtensionFlag"]], "kkhr_android_surface_grvkextensionflag (grvkextensionflags attribute)": [[112, "skia.GrVkExtensionFlags.kKHR_android_surface_GrVkExtensionFlag"]], "kkhr_surface_grvkextensionflag (grvkextensionflags attribute)": [[112, "skia.GrVkExtensionFlags.kKHR_surface_GrVkExtensionFlag"]], "kkhr_swapchain_grvkextensionflag (grvkextensionflags attribute)": [[112, "skia.GrVkExtensionFlags.kKHR_swapchain_GrVkExtensionFlag"]], "kkhr_win32_surface_grvkextensionflag (grvkextensionflags attribute)": [[112, "skia.GrVkExtensionFlags.kKHR_win32_surface_GrVkExtensionFlag"]], "kkhr_xcb_surface_grvkextensionflag (grvkextensionflags attribute)": [[112, "skia.GrVkExtensionFlags.kKHR_xcb_surface_GrVkExtensionFlag"]], "knv_glsl_shader_grvkextensionflag (grvkextensionflags attribute)": [[112, "skia.GrVkExtensionFlags.kNV_glsl_shader_GrVkExtensionFlag"]], "name (grvkextensionflags attribute)": [[112, "skia.GrVkExtensionFlags.name"]], "value (grvkextensionflags attribute)": [[112, "skia.GrVkExtensionFlags.value"]], "grvkfeatureflags (class in skia)": [[113, "skia.GrVkFeatureFlags"]], "__init__() (grvkfeatureflags method)": [[113, "skia.GrVkFeatureFlags.__init__"]], "kdualsrcblend_grvkfeatureflag (grvkfeatureflags attribute)": [[113, "skia.GrVkFeatureFlags.kDualSrcBlend_GrVkFeatureFlag"]], "kgeometryshader_grvkfeatureflag (grvkfeatureflags attribute)": [[113, "skia.GrVkFeatureFlags.kGeometryShader_GrVkFeatureFlag"]], "ksamplerateshading_grvkfeatureflag (grvkfeatureflags attribute)": [[113, "skia.GrVkFeatureFlags.kSampleRateShading_GrVkFeatureFlag"]], "name (grvkfeatureflags attribute)": [[113, "skia.GrVkFeatureFlags.name"]], "value (grvkfeatureflags attribute)": [[113, "skia.GrVkFeatureFlags.value"]], "grvkimageinfo (class in skia)": [[114, "skia.GrVkImageInfo"]], "__init__() (grvkimageinfo method)": [[114, "skia.GrVkImageInfo.__init__"]], "falloc (grvkimageinfo attribute)": [[114, "skia.GrVkImageInfo.fAlloc"]], "fcurrentqueuefamily (grvkimageinfo attribute)": [[114, "skia.GrVkImageInfo.fCurrentQueueFamily"]], "flevelcount (grvkimageinfo attribute)": [[114, "skia.GrVkImageInfo.fLevelCount"]], "fprotected (grvkimageinfo attribute)": [[114, "skia.GrVkImageInfo.fProtected"]], "fsharingmode (grvkimageinfo attribute)": [[114, "skia.GrVkImageInfo.fSharingMode"]], "fycbcrconversioninfo (grvkimageinfo attribute)": [[114, "skia.GrVkImageInfo.fYcbcrConversionInfo"]], "grvkycbcrconversioninfo (class in skia)": [[115, "skia.GrVkYcbcrConversionInfo"]], "__init__() (grvkycbcrconversioninfo method)": [[115, "skia.GrVkYcbcrConversionInfo.__init__"]], "gradientshader (class in skia)": [[116, "skia.GradientShader"]], "makelinear() (gradientshader static method)": [[116, "skia.GradientShader.MakeLinear"]], "makeradial() (gradientshader static method)": [[116, "skia.GradientShader.MakeRadial"]], "makesweep() (gradientshader static method)": [[116, "skia.GradientShader.MakeSweep"]], "maketwopointconical() (gradientshader static method)": [[116, "skia.GradientShader.MakeTwoPointConical"]], "__init__() (gradientshader method)": [[116, "skia.GradientShader.__init__"]], "kinterpolatecolorsinpremul_flag (gradientshader attribute)": [[116, "skia.GradientShader.kInterpolateColorsInPremul_Flag"]], "flags (class in skia.gradientshader)": [[117, "skia.GradientShader.Flags"]], "__init__() (flags method)": [[117, "skia.GradientShader.Flags.__init__"], [228, "skia.SurfaceProps.Flags.__init__"]], "kinterpolatecolorsinpremul_flag (flags attribute)": [[117, "skia.GradientShader.Flags.kInterpolateColorsInPremul_Flag"]], "name (flags attribute)": [[117, "skia.GradientShader.Flags.name"], [228, "skia.SurfaceProps.Flags.name"]], "value (flags attribute)": [[117, "skia.GradientShader.Flags.value"], [228, "skia.SurfaceProps.Flags.value"]], "highcontrastconfig (class in skia)": [[118, "skia.HighContrastConfig"]], "__init__() (highcontrastconfig method)": [[118, "skia.HighContrastConfig.__init__"]], "fcontrast (highcontrastconfig attribute)": [[118, "skia.HighContrastConfig.fContrast"]], "fgrayscale (highcontrastconfig attribute)": [[118, "skia.HighContrastConfig.fGrayscale"]], "finvertstyle (highcontrastconfig attribute)": [[118, "skia.HighContrastConfig.fInvertStyle"]], "isvalid() (highcontrastconfig method)": [[118, "skia.HighContrastConfig.isValid"]], "kinvertbrightness (highcontrastconfig attribute)": [[118, "skia.HighContrastConfig.kInvertBrightness"]], "kinvertlightness (highcontrastconfig attribute)": [[118, "skia.HighContrastConfig.kInvertLightness"]], "klast (highcontrastconfig attribute)": [[118, "skia.HighContrastConfig.kLast"]], "knoinvert (highcontrastconfig attribute)": [[118, "skia.HighContrastConfig.kNoInvert"]], "invertstyle (class in skia.highcontrastconfig)": [[119, "skia.HighContrastConfig.InvertStyle"]], "__init__() (invertstyle method)": [[119, "skia.HighContrastConfig.InvertStyle.__init__"]], "kinvertbrightness (invertstyle attribute)": [[119, "skia.HighContrastConfig.InvertStyle.kInvertBrightness"]], "kinvertlightness (invertstyle attribute)": [[119, "skia.HighContrastConfig.InvertStyle.kInvertLightness"]], "klast (invertstyle attribute)": [[119, "skia.HighContrastConfig.InvertStyle.kLast"]], "knoinvert (invertstyle attribute)": [[119, "skia.HighContrastConfig.InvertStyle.kNoInvert"]], "name (invertstyle attribute)": [[119, "skia.HighContrastConfig.InvertStyle.name"]], "value (invertstyle attribute)": [[119, "skia.HighContrastConfig.InvertStyle.value"]], "highcontrastfilter (class in skia)": [[120, "skia.HighContrastFilter"]], "make() (highcontrastfilter static method)": [[120, "skia.HighContrastFilter.Make"]], "__init__() (highcontrastfilter method)": [[120, "skia.HighContrastFilter.__init__"]], "ipoint (class in skia)": [[121, "skia.IPoint"]], "make() (ipoint static method)": [[121, "skia.IPoint.Make"]], "__init__() (ipoint method)": [[121, "skia.IPoint.__init__"]], "equals() (ipoint method)": [[121, "skia.IPoint.equals"]], "fx (ipoint attribute)": [[121, "skia.IPoint.fX"]], "fy (ipoint attribute)": [[121, "skia.IPoint.fY"]], "iszero() (ipoint method)": [[121, "skia.IPoint.isZero"]], "set() (ipoint method)": [[121, "skia.IPoint.set"]], "x() (ipoint method)": [[121, "skia.IPoint.x"]], "y() (ipoint method)": [[121, "skia.IPoint.y"]], "irect (class in skia)": [[122, "skia.IRect"]], "intersects() (irect static method)": [[122, "skia.IRect.Intersects"]], "makeempty() (irect static method)": [[122, "skia.IRect.MakeEmpty"]], "makeltrb() (irect static method)": [[122, "skia.IRect.MakeLTRB"]], "makesize() (irect static method)": [[122, "skia.IRect.MakeSize"]], "makewh() (irect static method)": [[122, "skia.IRect.MakeWH"]], "makexywh() (irect static method)": [[122, "skia.IRect.MakeXYWH"]], "__init__() (irect method)": [[122, "skia.IRect.__init__"]], "adjust() (irect method)": [[122, "skia.IRect.adjust"]], "bottom() (irect method)": [[122, "skia.IRect.bottom"]], "contains() (irect method)": [[122, "skia.IRect.contains"]], "containsnoemptycheck() (irect method)": [[122, "skia.IRect.containsNoEmptyCheck"]], "fbottom (irect attribute)": [[122, "skia.IRect.fBottom"]], "fleft (irect attribute)": [[122, "skia.IRect.fLeft"]], "fright (irect attribute)": [[122, "skia.IRect.fRight"]], "ftop (irect attribute)": [[122, "skia.IRect.fTop"]], "height() (irect method)": [[122, "skia.IRect.height"]], "height64() (irect method)": [[122, "skia.IRect.height64"]], "inset() (irect method)": [[122, "skia.IRect.inset"]], "intersect() (irect method)": [[122, "skia.IRect.intersect"]], "isempty() (irect method)": [[122, "skia.IRect.isEmpty"]], "isempty64() (irect method)": [[122, "skia.IRect.isEmpty64"]], "join() (irect method)": [[122, "skia.IRect.join"]], "left() (irect method)": [[122, "skia.IRect.left"]], "makeinset() (irect method)": [[122, "skia.IRect.makeInset"]], "makeoffset() (irect method)": [[122, "skia.IRect.makeOffset"]], "makeoutset() (irect method)": [[122, "skia.IRect.makeOutset"]], "makesorted() (irect method)": [[122, "skia.IRect.makeSorted"]], "offset() (irect method)": [[122, "skia.IRect.offset"]], "offsetto() (irect method)": [[122, "skia.IRect.offsetTo"]], "outset() (irect method)": [[122, "skia.IRect.outset"]], "right() (irect method)": [[122, "skia.IRect.right"]], "setempty() (irect method)": [[122, "skia.IRect.setEmpty"]], "setltrb() (irect method)": [[122, "skia.IRect.setLTRB"]], "setwh() (irect method)": [[122, "skia.IRect.setWH"]], "setxywh() (irect method)": [[122, "skia.IRect.setXYWH"]], "size() (irect method)": [[122, "skia.IRect.size"]], "sort() (irect method)": [[122, "skia.IRect.sort"]], "top() (irect method)": [[122, "skia.IRect.top"]], "topleft() (irect method)": [[122, "skia.IRect.topLeft"]], "width() (irect method)": [[122, "skia.IRect.width"]], "width64() (irect method)": [[122, "skia.IRect.width64"]], "x() (irect method)": [[122, "skia.IRect.x"]], "y() (irect method)": [[122, "skia.IRect.y"]], "isize (class in skia)": [[123, "skia.ISize"]], "make() (isize static method)": [[123, "skia.ISize.Make"]], "makeempty() (isize static method)": [[123, "skia.ISize.MakeEmpty"]], "__init__() (isize method)": [[123, "skia.ISize.__init__"]], "area() (isize method)": [[123, "skia.ISize.area"]], "equals() (isize method)": [[123, "skia.ISize.equals"]], "fheight (isize attribute)": [[123, "skia.ISize.fHeight"]], "fwidth (isize attribute)": [[123, "skia.ISize.fWidth"]], "height() (isize method)": [[123, "skia.ISize.height"]], "isempty() (isize method)": [[123, "skia.ISize.isEmpty"]], "iszero() (isize method)": [[123, "skia.ISize.isZero"]], "set() (isize method)": [[123, "skia.ISize.set"]], "setempty() (isize method)": [[123, "skia.ISize.setEmpty"]], "width() (isize method)": [[123, "skia.ISize.width"]], "image (class in skia)": [[124, "skia.Image"]], "makebackendtexturefromimage() (image static method)": [[124, "skia.Image.MakeBackendTextureFromImage"]], "makefrombitmap() (image static method)": [[124, "skia.Image.MakeFromBitmap"]], "makefromencoded() (image static method)": [[124, "skia.Image.MakeFromEncoded"]], "makefrompicture() (image static method)": [[124, "skia.Image.MakeFromPicture"]], "makefromraster() (image static method)": [[124, "skia.Image.MakeFromRaster"]], "makefromtexture() (image static method)": [[124, "skia.Image.MakeFromTexture"]], "makerastercopy() (image static method)": [[124, "skia.Image.MakeRasterCopy"]], "makerasterdata() (image static method)": [[124, "skia.Image.MakeRasterData"]], "__init__() (image method)": [[124, "skia.Image.__init__"]], "alphatype() (image method)": [[124, "skia.Image.alphaType"]], "aslegacybitmap() (image method)": [[124, "skia.Image.asLegacyBitmap"]], "bitmap() (image method)": [[124, "skia.Image.bitmap"]], "bounds() (image method)": [[124, "skia.Image.bounds"]], "colorspace() (image method)": [[124, "skia.Image.colorSpace"]], "colortype() (image method)": [[124, "skia.Image.colorType"]], "convert() (image method)": [[124, "skia.Image.convert"]], "dimensions() (image method)": [[124, "skia.Image.dimensions"]], "encodetodata() (image method)": [[124, "skia.Image.encodeToData"]], "flush() (image method)": [[124, "skia.Image.flush"]], "flushandsubmit() (image method)": [[124, "skia.Image.flushAndSubmit"]], "fromarray() (image static method)": [[124, "skia.Image.fromarray"]], "frombytes() (image static method)": [[124, "skia.Image.frombytes"]], "getbackendtexture() (image method)": [[124, "skia.Image.getBackendTexture"]], "hasmipmaps() (image method)": [[124, "skia.Image.hasMipmaps"]], "height() (image method)": [[124, "skia.Image.height"]], "imageinfo() (image method)": [[124, "skia.Image.imageInfo"]], "isalphaonly() (image method)": [[124, "skia.Image.isAlphaOnly"]], "islazygenerated() (image method)": [[124, "skia.Image.isLazyGenerated"]], "isopaque() (image method)": [[124, "skia.Image.isOpaque"]], "istexturebacked() (image method)": [[124, "skia.Image.isTextureBacked"]], "isvalid() (image method)": [[124, "skia.Image.isValid"]], "kallow_cachinghint (image attribute)": [[124, "skia.Image.kAllow_CachingHint"]], "kbc1_rgb8_unorm (image attribute)": [[124, "skia.Image.kBC1_RGB8_UNORM"]], "kbc1_rgba8_unorm (image attribute)": [[124, "skia.Image.kBC1_RGBA8_UNORM"]], "kdisallow_cachinghint (image attribute)": [[124, "skia.Image.kDisallow_CachingHint"]], "ketc2_rgb8_unorm (image attribute)": [[124, "skia.Image.kETC2_RGB8_UNORM"]], "kf16 (image attribute)": [[124, "skia.Image.kF16"]], "klast (image attribute)": [[124, "skia.Image.kLast"]], "knone (image attribute)": [[124, "skia.Image.kNone"]], "kro_legacybitmapmode (image attribute)": [[124, "skia.Image.kRO_LegacyBitmapMode"]], "ku8 (image attribute)": [[124, "skia.Image.kU8"]], "makecolorspace() (image method)": [[124, "skia.Image.makeColorSpace"]], "makecolortypeandcolorspace() (image method)": [[124, "skia.Image.makeColorTypeAndColorSpace"]], "makenontextureimage() (image method)": [[124, "skia.Image.makeNonTextureImage"]], "makerasterimage() (image method)": [[124, "skia.Image.makeRasterImage"]], "makeshader() (image method)": [[124, "skia.Image.makeShader"]], "makesubset() (image method)": [[124, "skia.Image.makeSubset"]], "maketextureimage() (image method)": [[124, "skia.Image.makeTextureImage"]], "makewithfilter() (image method)": [[124, "skia.Image.makeWithFilter"]], "open() (image static method)": [[124, "skia.Image.open"]], "peekpixels() (image method)": [[124, "skia.Image.peekPixels"]], "readpixels() (image method)": [[124, "skia.Image.readPixels"]], "ref() (image method)": [[124, "skia.Image.ref"]], "refcolorspace() (image method)": [[124, "skia.Image.refColorSpace"]], "refencodeddata() (image method)": [[124, "skia.Image.refEncodedData"]], "reinterpretcolorspace() (image method)": [[124, "skia.Image.reinterpretColorSpace"]], "resize() (image method)": [[124, "skia.Image.resize"]], "save() (image method)": [[124, "skia.Image.save"]], "scalepixels() (image method)": [[124, "skia.Image.scalePixels"]], "toarray() (image method)": [[124, "skia.Image.toarray"]], "tobytes() (image method)": [[124, "skia.Image.tobytes"]], "unique() (image method)": [[124, "skia.Image.unique"]], "uniqueid() (image method)": [[124, "skia.Image.uniqueID"]], "unref() (image method)": [[124, "skia.Image.unref"]], "width() (image method)": [[124, "skia.Image.width"]], "withdefaultmipmaps() (image method)": [[124, "skia.Image.withDefaultMipmaps"]], "bitdepth (class in skia.image)": [[125, "skia.Image.BitDepth"]], "__init__() (bitdepth method)": [[125, "skia.Image.BitDepth.__init__"]], "kf16 (bitdepth attribute)": [[125, "skia.Image.BitDepth.kF16"]], "ku8 (bitdepth attribute)": [[125, "skia.Image.BitDepth.kU8"]], "name (bitdepth attribute)": [[125, "skia.Image.BitDepth.name"]], "value (bitdepth attribute)": [[125, "skia.Image.BitDepth.value"]], "cachinghint (class in skia.image)": [[126, "skia.Image.CachingHint"]], "__init__() (cachinghint method)": [[126, "skia.Image.CachingHint.__init__"]], "kallow_cachinghint (cachinghint attribute)": [[126, "skia.Image.CachingHint.kAllow_CachingHint"]], "kdisallow_cachinghint (cachinghint attribute)": [[126, "skia.Image.CachingHint.kDisallow_CachingHint"]], "name (cachinghint attribute)": [[126, "skia.Image.CachingHint.name"]], "value (cachinghint attribute)": [[126, "skia.Image.CachingHint.value"]], "compressiontype (class in skia.image)": [[127, "skia.Image.CompressionType"]], "__init__() (compressiontype method)": [[127, "skia.Image.CompressionType.__init__"]], "kbc1_rgb8_unorm (compressiontype attribute)": [[127, "skia.Image.CompressionType.kBC1_RGB8_UNORM"]], "kbc1_rgba8_unorm (compressiontype attribute)": [[127, "skia.Image.CompressionType.kBC1_RGBA8_UNORM"]], "ketc2_rgb8_unorm (compressiontype attribute)": [[127, "skia.Image.CompressionType.kETC2_RGB8_UNORM"]], "klast (compressiontype attribute)": [[127, "skia.Image.CompressionType.kLast"]], "knone (compressiontype attribute)": [[127, "skia.Image.CompressionType.kNone"]], "name (compressiontype attribute)": [[127, "skia.Image.CompressionType.name"]], "value (compressiontype attribute)": [[127, "skia.Image.CompressionType.value"]], "legacybitmapmode (class in skia.image)": [[128, "skia.Image.LegacyBitmapMode"]], "__init__() (legacybitmapmode method)": [[128, "skia.Image.LegacyBitmapMode.__init__"]], "kro_legacybitmapmode (legacybitmapmode attribute)": [[128, "skia.Image.LegacyBitmapMode.kRO_LegacyBitmapMode"]], "name (legacybitmapmode attribute)": [[128, "skia.Image.LegacyBitmapMode.name"]], "value (legacybitmapmode attribute)": [[128, "skia.Image.LegacyBitmapMode.value"]], "deserialize() (imagefilter static method)": [[129, "skia.ImageFilter.Deserialize"]], "imagefilter (class in skia)": [[129, "skia.ImageFilter"]], "__init__() (imagefilter method)": [[129, "skia.ImageFilter.__init__"]], "asacolorfilter() (imagefilter method)": [[129, "skia.ImageFilter.asAColorFilter"]], "ascolorfilter() (imagefilter method)": [[129, "skia.ImageFilter.asColorFilter"]], "cancomputefastbounds() (imagefilter method)": [[129, "skia.ImageFilter.canComputeFastBounds"]], "computefastbounds() (imagefilter method)": [[129, "skia.ImageFilter.computeFastBounds"]], "countinputs() (imagefilter method)": [[129, "skia.ImageFilter.countInputs"]], "filterbounds() (imagefilter method)": [[129, "skia.ImageFilter.filterBounds"]], "getflattenabletype() (imagefilter method)": [[129, "skia.ImageFilter.getFlattenableType"]], "getinput() (imagefilter method)": [[129, "skia.ImageFilter.getInput"]], "gettypename() (imagefilter method)": [[129, "skia.ImageFilter.getTypeName"]], "iscolorfilternode() (imagefilter method)": [[129, "skia.ImageFilter.isColorFilterNode"]], "kcolorfilter_type (imagefilter attribute)": [[129, "skia.ImageFilter.kColorFilter_Type"]], "kdrawlooper_type (imagefilter attribute)": [[129, "skia.ImageFilter.kDrawLooper_Type"]], "kdrawable_type (imagefilter attribute)": [[129, "skia.ImageFilter.kDrawable_Type"]], "kforward_mapdirection (imagefilter attribute)": [[129, "skia.ImageFilter.kForward_MapDirection"]], "kimagefilter_type (imagefilter attribute)": [[129, "skia.ImageFilter.kImageFilter_Type"]], "kmaskfilter_type (imagefilter attribute)": [[129, "skia.ImageFilter.kMaskFilter_Type"]], "kpatheffect_type (imagefilter attribute)": [[129, "skia.ImageFilter.kPathEffect_Type"]], "kreverse_mapdirection (imagefilter attribute)": [[129, "skia.ImageFilter.kReverse_MapDirection"]], "makewithlocalmatrix() (imagefilter method)": [[129, "skia.ImageFilter.makeWithLocalMatrix"]], "ref() (imagefilter method)": [[129, "skia.ImageFilter.ref"]], "serialize() (imagefilter method)": [[129, "skia.ImageFilter.serialize"]], "unique() (imagefilter method)": [[129, "skia.ImageFilter.unique"]], "unref() (imagefilter method)": [[129, "skia.ImageFilter.unref"]], "croprect (class in skia.imagefilter)": [[130, "skia.ImageFilter.CropRect"]], "__init__() (croprect method)": [[130, "skia.ImageFilter.CropRect.__init__"]], "mapdirection (class in skia.imagefilter)": [[131, "skia.ImageFilter.MapDirection"]], "__init__() (mapdirection method)": [[131, "skia.ImageFilter.MapDirection.__init__"]], "kforward_mapdirection (mapdirection attribute)": [[131, "skia.ImageFilter.MapDirection.kForward_MapDirection"]], "kreverse_mapdirection (mapdirection attribute)": [[131, "skia.ImageFilter.MapDirection.kReverse_MapDirection"]], "name (mapdirection attribute)": [[131, "skia.ImageFilter.MapDirection.name"]], "value (mapdirection attribute)": [[131, "skia.ImageFilter.MapDirection.value"]], "type (class in skia.imagefilter)": [[132, "skia.ImageFilter.Type"]], "arithmetic() (imagefilters static method)": [[133, "skia.ImageFilters.Arithmetic"]], "blur() (imagefilters static method)": [[133, "skia.ImageFilters.Blur"]], "colorfilter() (imagefilters static method)": [[133, "skia.ImageFilters.ColorFilter"]], "compose() (imagefilters static method)": [[133, "skia.ImageFilters.Compose"]], "dilate() (imagefilters static method)": [[133, "skia.ImageFilters.Dilate"]], "displacementmap() (imagefilters static method)": [[133, "skia.ImageFilters.DisplacementMap"]], "distantlitdiffuse() (imagefilters static method)": [[133, "skia.ImageFilters.DistantLitDiffuse"]], "distantlitspecular() (imagefilters static method)": [[133, "skia.ImageFilters.DistantLitSpecular"]], "dropshadow() (imagefilters static method)": [[133, "skia.ImageFilters.DropShadow"]], "dropshadowonly() (imagefilters static method)": [[133, "skia.ImageFilters.DropShadowOnly"]], "erode() (imagefilters static method)": [[133, "skia.ImageFilters.Erode"]], "image() (imagefilters static method)": [[133, "skia.ImageFilters.Image"]], "imagefilters (class in skia)": [[133, "skia.ImageFilters"]], "magnifier() (imagefilters static method)": [[133, "skia.ImageFilters.Magnifier"]], "matrixconvolution() (imagefilters static method)": [[133, "skia.ImageFilters.MatrixConvolution"]], "matrixtransform() (imagefilters static method)": [[133, "skia.ImageFilters.MatrixTransform"]], "merge() (imagefilters static method)": [[133, "skia.ImageFilters.Merge"]], "offset() (imagefilters static method)": [[133, "skia.ImageFilters.Offset"]], "picture() (imagefilters static method)": [[133, "skia.ImageFilters.Picture"]], "pointlitdiffuse() (imagefilters static method)": [[133, "skia.ImageFilters.PointLitDiffuse"]], "pointlitspecular() (imagefilters static method)": [[133, "skia.ImageFilters.PointLitSpecular"]], "spotlitdiffuse() (imagefilters static method)": [[133, "skia.ImageFilters.SpotLitDiffuse"]], "spotlitspecular() (imagefilters static method)": [[133, "skia.ImageFilters.SpotLitSpecular"]], "tile() (imagefilters static method)": [[133, "skia.ImageFilters.Tile"]], "__init__() (imagefilters method)": [[133, "skia.ImageFilters.__init__"]], "bytesizeoverflowed() (imageinfo static method)": [[134, "skia.ImageInfo.ByteSizeOverflowed"]], "imageinfo (class in skia)": [[134, "skia.ImageInfo"]], "make() (imageinfo static method)": [[134, "skia.ImageInfo.Make"]], "makea8() (imageinfo static method)": [[134, "skia.ImageInfo.MakeA8"]], "maken32() (imageinfo static method)": [[134, "skia.ImageInfo.MakeN32"]], "maken32premul() (imageinfo static method)": [[134, "skia.ImageInfo.MakeN32Premul"]], "makes32() (imageinfo static method)": [[134, "skia.ImageInfo.MakeS32"]], "makeunknown() (imageinfo static method)": [[134, "skia.ImageInfo.MakeUnknown"]], "__init__() (imageinfo method)": [[134, "skia.ImageInfo.__init__"]], "alphatype() (imageinfo method)": [[134, "skia.ImageInfo.alphaType"]], "bounds() (imageinfo method)": [[134, "skia.ImageInfo.bounds"]], "bytesperpixel() (imageinfo method)": [[134, "skia.ImageInfo.bytesPerPixel"]], "colorinfo() (imageinfo method)": [[134, "skia.ImageInfo.colorInfo"]], "colorspace() (imageinfo method)": [[134, "skia.ImageInfo.colorSpace"]], "colortype() (imageinfo method)": [[134, "skia.ImageInfo.colorType"]], "computebytesize() (imageinfo method)": [[134, "skia.ImageInfo.computeByteSize"]], "computeminbytesize() (imageinfo method)": [[134, "skia.ImageInfo.computeMinByteSize"]], "computeoffset() (imageinfo method)": [[134, "skia.ImageInfo.computeOffset"]], "dimensions() (imageinfo method)": [[134, "skia.ImageInfo.dimensions"]], "gammaclosetosrgb() (imageinfo method)": [[134, "skia.ImageInfo.gammaCloseToSRGB"]], "height() (imageinfo method)": [[134, "skia.ImageInfo.height"]], "isempty() (imageinfo method)": [[134, "skia.ImageInfo.isEmpty"]], "isopaque() (imageinfo method)": [[134, "skia.ImageInfo.isOpaque"]], "makealphatype() (imageinfo method)": [[134, "skia.ImageInfo.makeAlphaType"]], "makecolorspace() (imageinfo method)": [[134, "skia.ImageInfo.makeColorSpace"]], "makecolortype() (imageinfo method)": [[134, "skia.ImageInfo.makeColorType"]], "makedimensions() (imageinfo method)": [[134, "skia.ImageInfo.makeDimensions"]], "makewh() (imageinfo method)": [[134, "skia.ImageInfo.makeWH"]], "minrowbytes() (imageinfo method)": [[134, "skia.ImageInfo.minRowBytes"]], "minrowbytes64() (imageinfo method)": [[134, "skia.ImageInfo.minRowBytes64"]], "refcolorspace() (imageinfo method)": [[134, "skia.ImageInfo.refColorSpace"]], "reset() (imageinfo method)": [[134, "skia.ImageInfo.reset"]], "shiftperpixel() (imageinfo method)": [[134, "skia.ImageInfo.shiftPerPixel"]], "validrowbytes() (imageinfo method)": [[134, "skia.ImageInfo.validRowBytes"]], "width() (imageinfo method)": [[134, "skia.ImageInfo.width"]], "line2dpatheffect (class in skia)": [[135, "skia.Line2DPathEffect"]], "make() (line2dpatheffect static method)": [[135, "skia.Line2DPathEffect.Make"]], "__init__() (line2dpatheffect method)": [[135, "skia.Line2DPathEffect.__init__"]], "lumacolorfilter (class in skia)": [[136, "skia.LumaColorFilter"]], "make() (lumacolorfilter static method)": [[136, "skia.LumaColorFilter.Make"]], "__init__() (lumacolorfilter method)": [[136, "skia.LumaColorFilter.__init__"]], "m44 (class in skia)": [[137, "skia.M44"]], "__init__() (m44 method)": [[137, "skia.M44.__init__"]], "deserialize() (maskfilter static method)": [[138, "skia.MaskFilter.Deserialize"]], "makeblur() (maskfilter static method)": [[138, "skia.MaskFilter.MakeBlur"]], "maskfilter (class in skia)": [[138, "skia.MaskFilter"]], "__init__() (maskfilter method)": [[138, "skia.MaskFilter.__init__"]], "getflattenabletype() (maskfilter method)": [[138, "skia.MaskFilter.getFlattenableType"]], "gettypename() (maskfilter method)": [[138, "skia.MaskFilter.getTypeName"]], "kcolorfilter_type (maskfilter attribute)": [[138, "skia.MaskFilter.kColorFilter_Type"]], "kdrawlooper_type (maskfilter attribute)": [[138, "skia.MaskFilter.kDrawLooper_Type"]], "kdrawable_type (maskfilter attribute)": [[138, "skia.MaskFilter.kDrawable_Type"]], "kimagefilter_type (maskfilter attribute)": [[138, "skia.MaskFilter.kImageFilter_Type"]], "kmaskfilter_type (maskfilter attribute)": [[138, "skia.MaskFilter.kMaskFilter_Type"]], "kpatheffect_type (maskfilter attribute)": [[138, "skia.MaskFilter.kPathEffect_Type"]], "ref() (maskfilter method)": [[138, "skia.MaskFilter.ref"]], "serialize() (maskfilter method)": [[138, "skia.MaskFilter.serialize"]], "unique() (maskfilter method)": [[138, "skia.MaskFilter.unique"]], "unref() (maskfilter method)": [[138, "skia.MaskFilter.unref"]], "type (class in skia.maskfilter)": [[139, "skia.MaskFilter.Type"]], "concat() (matrix static method)": [[140, "skia.Matrix.Concat"]], "i() (matrix static method)": [[140, "skia.Matrix.I"]], "invalidmatrix() (matrix static method)": [[140, "skia.Matrix.InvalidMatrix"]], "makeall() (matrix static method)": [[140, "skia.Matrix.MakeAll"]], "makerecttorect() (matrix static method)": [[140, "skia.Matrix.MakeRectToRect"]], "matrix (class in skia)": [[140, "skia.Matrix"]], "rotatedeg() (matrix static method)": [[140, "skia.Matrix.RotateDeg"]], "rotaterad() (matrix static method)": [[140, "skia.Matrix.RotateRad"]], "scale() (matrix static method)": [[140, "skia.Matrix.Scale"]], "setaffineidentity() (matrix static method)": [[140, "skia.Matrix.SetAffineIdentity"]], "translate() (matrix static method)": [[140, "skia.Matrix.Translate"]], "__init__() (matrix method)": [[140, "skia.Matrix.__init__"]], "asaffine() (matrix method)": [[140, "skia.Matrix.asAffine"]], "decomposescale() (matrix method)": [[140, "skia.Matrix.decomposeScale"]], "dirtymatrixtypecache() (matrix method)": [[140, "skia.Matrix.dirtyMatrixTypeCache"]], "dump() (matrix method)": [[140, "skia.Matrix.dump"]], "get() (matrix method)": [[140, "skia.Matrix.get"]], "get9() (matrix method)": [[140, "skia.Matrix.get9"]], "getmaxscale() (matrix method)": [[140, "skia.Matrix.getMaxScale"]], "getminmaxscales() (matrix method)": [[140, "skia.Matrix.getMinMaxScales"]], "getminscale() (matrix method)": [[140, "skia.Matrix.getMinScale"]], "getperspx() (matrix method)": [[140, "skia.Matrix.getPerspX"]], "getperspy() (matrix method)": [[140, "skia.Matrix.getPerspY"]], "getscalex() (matrix method)": [[140, "skia.Matrix.getScaleX"]], "getscaley() (matrix method)": [[140, "skia.Matrix.getScaleY"]], "getskewx() (matrix method)": [[140, "skia.Matrix.getSkewX"]], "getskewy() (matrix method)": [[140, "skia.Matrix.getSkewY"]], "gettranslatex() (matrix method)": [[140, "skia.Matrix.getTranslateX"]], "gettranslatey() (matrix method)": [[140, "skia.Matrix.getTranslateY"]], "gettype() (matrix method)": [[140, "skia.Matrix.getType"]], "hasperspective() (matrix method)": [[140, "skia.Matrix.hasPerspective"]], "invert() (matrix method)": [[140, "skia.Matrix.invert"]], "isfinite() (matrix method)": [[140, "skia.Matrix.isFinite"]], "isidentity() (matrix method)": [[140, "skia.Matrix.isIdentity"]], "isscaletranslate() (matrix method)": [[140, "skia.Matrix.isScaleTranslate"]], "issimilarity() (matrix method)": [[140, "skia.Matrix.isSimilarity"]], "istranslate() (matrix method)": [[140, "skia.Matrix.isTranslate"]], "kascalex (matrix attribute)": [[140, "skia.Matrix.kAScaleX"]], "kascaley (matrix attribute)": [[140, "skia.Matrix.kAScaleY"]], "kaskewx (matrix attribute)": [[140, "skia.Matrix.kASkewX"]], "kaskewy (matrix attribute)": [[140, "skia.Matrix.kASkewY"]], "katransx (matrix attribute)": [[140, "skia.Matrix.kATransX"]], "katransy (matrix attribute)": [[140, "skia.Matrix.kATransY"]], "kaffine_mask (matrix attribute)": [[140, "skia.Matrix.kAffine_Mask"]], "kcenter_scaletofit (matrix attribute)": [[140, "skia.Matrix.kCenter_ScaleToFit"]], "kend_scaletofit (matrix attribute)": [[140, "skia.Matrix.kEnd_ScaleToFit"]], "kfill_scaletofit (matrix attribute)": [[140, "skia.Matrix.kFill_ScaleToFit"]], "kidentity_mask (matrix attribute)": [[140, "skia.Matrix.kIdentity_Mask"]], "kmpersp0 (matrix attribute)": [[140, "skia.Matrix.kMPersp0"]], "kmpersp1 (matrix attribute)": [[140, "skia.Matrix.kMPersp1"]], "kmpersp2 (matrix attribute)": [[140, "skia.Matrix.kMPersp2"]], "kmscalex (matrix attribute)": [[140, "skia.Matrix.kMScaleX"]], "kmscaley (matrix attribute)": [[140, "skia.Matrix.kMScaleY"]], "kmskewx (matrix attribute)": [[140, "skia.Matrix.kMSkewX"]], "kmskewy (matrix attribute)": [[140, "skia.Matrix.kMSkewY"]], "kmtransx (matrix attribute)": [[140, "skia.Matrix.kMTransX"]], "kmtransy (matrix attribute)": [[140, "skia.Matrix.kMTransY"]], "kperspective_mask (matrix attribute)": [[140, "skia.Matrix.kPerspective_Mask"]], "kscale_mask (matrix attribute)": [[140, "skia.Matrix.kScale_Mask"]], "kstart_scaletofit (matrix attribute)": [[140, "skia.Matrix.kStart_ScaleToFit"]], "ktranslate_mask (matrix attribute)": [[140, "skia.Matrix.kTranslate_Mask"]], "maphomogeneouspoints() (matrix method)": [[140, "skia.Matrix.mapHomogeneousPoints"]], "mappoints() (matrix method)": [[140, "skia.Matrix.mapPoints"]], "mapradius() (matrix method)": [[140, "skia.Matrix.mapRadius"]], "maprect() (matrix method)": [[140, "skia.Matrix.mapRect"]], "maprectscaletranslate() (matrix method)": [[140, "skia.Matrix.mapRectScaleTranslate"]], "maprecttoquad() (matrix method)": [[140, "skia.Matrix.mapRectToQuad"]], "mapvector() (matrix method)": [[140, "skia.Matrix.mapVector"]], "mapvectors() (matrix method)": [[140, "skia.Matrix.mapVectors"]], "mapxy() (matrix method)": [[140, "skia.Matrix.mapXY"]], "normalizeperspective() (matrix method)": [[140, "skia.Matrix.normalizePerspective"]], "postconcat() (matrix method)": [[140, "skia.Matrix.postConcat"]], "postrotate() (matrix method)": [[140, "skia.Matrix.postRotate"]], "postscale() (matrix method)": [[140, "skia.Matrix.postScale"]], "postskew() (matrix method)": [[140, "skia.Matrix.postSkew"]], "posttranslate() (matrix method)": [[140, "skia.Matrix.postTranslate"]], "preconcat() (matrix method)": [[140, "skia.Matrix.preConcat"]], "prerotate() (matrix method)": [[140, "skia.Matrix.preRotate"]], "prescale() (matrix method)": [[140, "skia.Matrix.preScale"]], "preskew() (matrix method)": [[140, "skia.Matrix.preSkew"]], "pretranslate() (matrix method)": [[140, "skia.Matrix.preTranslate"]], "preservesaxisalignment() (matrix method)": [[140, "skia.Matrix.preservesAxisAlignment"]], "preservesrightangles() (matrix method)": [[140, "skia.Matrix.preservesRightAngles"]], "rc() (matrix method)": [[140, "skia.Matrix.rc"]], "rectstaysrect() (matrix method)": [[140, "skia.Matrix.rectStaysRect"]], "reset() (matrix method)": [[140, "skia.Matrix.reset"]], "set() (matrix method)": [[140, "skia.Matrix.set"]], "set9() (matrix method)": [[140, "skia.Matrix.set9"]], "setaffine() (matrix method)": [[140, "skia.Matrix.setAffine"]], "setall() (matrix method)": [[140, "skia.Matrix.setAll"]], "setconcat() (matrix method)": [[140, "skia.Matrix.setConcat"]], "setidentity() (matrix method)": [[140, "skia.Matrix.setIdentity"]], "setperspx() (matrix method)": [[140, "skia.Matrix.setPerspX"]], "setperspy() (matrix method)": [[140, "skia.Matrix.setPerspY"]], "setpolytopoly() (matrix method)": [[140, "skia.Matrix.setPolyToPoly"]], "setrsxform() (matrix method)": [[140, "skia.Matrix.setRSXform"]], "setrecttorect() (matrix method)": [[140, "skia.Matrix.setRectToRect"]], "setrotate() (matrix method)": [[140, "skia.Matrix.setRotate"]], "setscale() (matrix method)": [[140, "skia.Matrix.setScale"]], "setscaletranslate() (matrix method)": [[140, "skia.Matrix.setScaleTranslate"]], "setscalex() (matrix method)": [[140, "skia.Matrix.setScaleX"]], "setscaley() (matrix method)": [[140, "skia.Matrix.setScaleY"]], "setsincos() (matrix method)": [[140, "skia.Matrix.setSinCos"]], "setskew() (matrix method)": [[140, "skia.Matrix.setSkew"]], "setskewx() (matrix method)": [[140, "skia.Matrix.setSkewX"]], "setskewy() (matrix method)": [[140, "skia.Matrix.setSkewY"]], "settranslate() (matrix method)": [[140, "skia.Matrix.setTranslate"]], "settranslatex() (matrix method)": [[140, "skia.Matrix.setTranslateX"]], "settranslatey() (matrix method)": [[140, "skia.Matrix.setTranslateY"]], "scaletofit (class in skia.matrix)": [[141, "skia.Matrix.ScaleToFit"]], "__init__() (scaletofit method)": [[141, "skia.Matrix.ScaleToFit.__init__"]], "kcenter_scaletofit (scaletofit attribute)": [[141, "skia.Matrix.ScaleToFit.kCenter_ScaleToFit"]], "kend_scaletofit (scaletofit attribute)": [[141, "skia.Matrix.ScaleToFit.kEnd_ScaleToFit"]], "kfill_scaletofit (scaletofit attribute)": [[141, "skia.Matrix.ScaleToFit.kFill_ScaleToFit"]], "kstart_scaletofit (scaletofit attribute)": [[141, "skia.Matrix.ScaleToFit.kStart_ScaleToFit"]], "name (scaletofit attribute)": [[141, "skia.Matrix.ScaleToFit.name"]], "value (scaletofit attribute)": [[141, "skia.Matrix.ScaleToFit.value"]], "typemask (class in skia.matrix)": [[142, "skia.Matrix.TypeMask"]], "__init__() (typemask method)": [[142, "skia.Matrix.TypeMask.__init__"]], "kaffine_mask (typemask attribute)": [[142, "skia.Matrix.TypeMask.kAffine_Mask"]], "kidentity_mask (typemask attribute)": [[142, "skia.Matrix.TypeMask.kIdentity_Mask"]], "kperspective_mask (typemask attribute)": [[142, "skia.Matrix.TypeMask.kPerspective_Mask"]], "kscale_mask (typemask attribute)": [[142, "skia.Matrix.TypeMask.kScale_Mask"]], "ktranslate_mask (typemask attribute)": [[142, "skia.Matrix.TypeMask.kTranslate_Mask"]], "name (typemask attribute)": [[142, "skia.Matrix.TypeMask.name"]], "value (typemask attribute)": [[142, "skia.Matrix.TypeMask.value"]], "make() (matrixpatheffect static method)": [[143, "skia.MatrixPathEffect.Make"]], "maketranslate() (matrixpatheffect static method)": [[143, "skia.MatrixPathEffect.MakeTranslate"]], "matrixpatheffect (class in skia)": [[143, "skia.MatrixPathEffect"]], "__init__() (matrixpatheffect method)": [[143, "skia.MatrixPathEffect.__init__"]], "make() (memorystream static method)": [[144, "skia.MemoryStream.Make"]], "makecopy() (memorystream static method)": [[144, "skia.MemoryStream.MakeCopy"]], "makedirect() (memorystream static method)": [[144, "skia.MemoryStream.MakeDirect"]], "makefromfile() (memorystream static method)": [[144, "skia.MemoryStream.MakeFromFile"]], "memorystream (class in skia)": [[144, "skia.MemoryStream"]], "__init__() (memorystream method)": [[144, "skia.MemoryStream.__init__"]], "asdata() (memorystream method)": [[144, "skia.MemoryStream.asData"]], "duplicate() (memorystream method)": [[144, "skia.MemoryStream.duplicate"]], "fork() (memorystream method)": [[144, "skia.MemoryStream.fork"]], "getatpos() (memorystream method)": [[144, "skia.MemoryStream.getAtPos"]], "getlength() (memorystream method)": [[144, "skia.MemoryStream.getLength"]], "getmemorybase() (memorystream method)": [[144, "skia.MemoryStream.getMemoryBase"]], "getposition() (memorystream method)": [[144, "skia.MemoryStream.getPosition"]], "haslength() (memorystream method)": [[144, "skia.MemoryStream.hasLength"]], "hasposition() (memorystream method)": [[144, "skia.MemoryStream.hasPosition"]], "isatend() (memorystream method)": [[144, "skia.MemoryStream.isAtEnd"]], "move() (memorystream method)": [[144, "skia.MemoryStream.move"]], "peek() (memorystream method)": [[144, "skia.MemoryStream.peek"]], "read() (memorystream method)": [[144, "skia.MemoryStream.read"]], "readbool() (memorystream method)": [[144, "skia.MemoryStream.readBool"]], "readpackeduint() (memorystream method)": [[144, "skia.MemoryStream.readPackedUInt"]], "reads16() (memorystream method)": [[144, "skia.MemoryStream.readS16"]], "reads32() (memorystream method)": [[144, "skia.MemoryStream.readS32"]], "reads8() (memorystream method)": [[144, "skia.MemoryStream.readS8"]], "readscalar() (memorystream method)": [[144, "skia.MemoryStream.readScalar"]], "readu16() (memorystream method)": [[144, "skia.MemoryStream.readU16"]], "readu32() (memorystream method)": [[144, "skia.MemoryStream.readU32"]], "readu8() (memorystream method)": [[144, "skia.MemoryStream.readU8"]], "rewind() (memorystream method)": [[144, "skia.MemoryStream.rewind"]], "seek() (memorystream method)": [[144, "skia.MemoryStream.seek"]], "setdata() (memorystream method)": [[144, "skia.MemoryStream.setData"]], "setmemory() (memorystream method)": [[144, "skia.MemoryStream.setMemory"]], "skip() (memorystream method)": [[144, "skia.MemoryStream.skip"]], "skiptoalign4() (memorystream method)": [[144, "skia.MemoryStream.skipToAlign4"]], "make() (mergepatheffect static method)": [[145, "skia.MergePathEffect.Make"]], "mergepatheffect (class in skia)": [[145, "skia.MergePathEffect"]], "__init__() (mergepatheffect method)": [[145, "skia.MergePathEffect.__init__"]], "mipmapbuilder (class in skia)": [[146, "skia.MipmapBuilder"]], "__init__() (mipmapbuilder method)": [[146, "skia.MipmapBuilder.__init__"]], "attachto() (mipmapbuilder method)": [[146, "skia.MipmapBuilder.attachTo"]], "countlevels() (mipmapbuilder method)": [[146, "skia.MipmapBuilder.countLevels"]], "level() (mipmapbuilder method)": [[146, "skia.MipmapBuilder.level"]], "nullwstream (class in skia)": [[147, "skia.NullWStream"]], "sizeofpackeduint() (nullwstream static method)": [[147, "skia.NullWStream.SizeOfPackedUInt"]], "__init__() (nullwstream method)": [[147, "skia.NullWStream.__init__"]], "byteswritten() (nullwstream method)": [[147, "skia.NullWStream.bytesWritten"]], "flush() (nullwstream method)": [[147, "skia.NullWStream.flush"]], "newline() (nullwstream method)": [[147, "skia.NullWStream.newline"]], "write() (nullwstream method)": [[147, "skia.NullWStream.write"]], "write16() (nullwstream method)": [[147, "skia.NullWStream.write16"]], "write32() (nullwstream method)": [[147, "skia.NullWStream.write32"]], "write8() (nullwstream method)": [[147, "skia.NullWStream.write8"]], "writebigdecastext() (nullwstream method)": [[147, "skia.NullWStream.writeBigDecAsText"]], "writebool() (nullwstream method)": [[147, "skia.NullWStream.writeBool"]], "writedecastext() (nullwstream method)": [[147, "skia.NullWStream.writeDecAsText"]], "writehexastext() (nullwstream method)": [[147, "skia.NullWStream.writeHexAsText"]], "writepackeduint() (nullwstream method)": [[147, "skia.NullWStream.writePackedUInt"]], "writescalar() (nullwstream method)": [[147, "skia.NullWStream.writeScalar"]], "writescalarastext() (nullwstream method)": [[147, "skia.NullWStream.writeScalarAsText"]], "writestream() (nullwstream method)": [[147, "skia.NullWStream.writeStream"]], "writetext() (nullwstream method)": [[147, "skia.NullWStream.writeText"]], "opbuilder (class in skia)": [[148, "skia.OpBuilder"]], "__init__() (opbuilder method)": [[148, "skia.OpBuilder.__init__"]], "add() (opbuilder method)": [[148, "skia.OpBuilder.add"]], "resolve() (opbuilder method)": [[148, "skia.OpBuilder.resolve"]], "makewithcolors() (overdrawcolorfilter static method)": [[149, "skia.OverdrawColorFilter.MakeWithColors"]], "overdrawcolorfilter (class in skia)": [[149, "skia.OverdrawColorFilter"]], "__init__() (overdrawcolorfilter method)": [[149, "skia.OverdrawColorFilter.__init__"]], "knumcolors (overdrawcolorfilter attribute)": [[149, "skia.OverdrawColorFilter.kNumColors"]], "makedocument() (pdf static method)": [[150, "skia.PDF.MakeDocument"]], "pdf (class in skia)": [[150, "skia.PDF"]], "setnodeid() (pdf static method)": [[150, "skia.PDF.SetNodeId"]], "__init__() (pdf method)": [[150, "skia.PDF.__init__"]], "attributelist (class in skia.pdf)": [[151, "skia.PDF.AttributeList"]], "__init__() (attributelist method)": [[151, "skia.PDF.AttributeList.__init__"]], "appendfloat() (attributelist method)": [[151, "skia.PDF.AttributeList.appendFloat"]], "appendfloatarray() (attributelist method)": [[151, "skia.PDF.AttributeList.appendFloatArray"]], "appendint() (attributelist method)": [[151, "skia.PDF.AttributeList.appendInt"]], "appendstring() (attributelist method)": [[151, "skia.PDF.AttributeList.appendString"]], "appendstringarray() (attributelist method)": [[151, "skia.PDF.AttributeList.appendStringArray"]], "metadata (class in skia.pdf)": [[152, "skia.PDF.Metadata"]], "fauthor (metadata attribute)": [[152, "skia.PDF.Metadata.fAuthor"]], "fcreator (metadata attribute)": [[152, "skia.PDF.Metadata.fCreator"]], "fencodingquality (metadata attribute)": [[152, "skia.PDF.Metadata.fEncodingQuality"]], "fkeywords (metadata attribute)": [[152, "skia.PDF.Metadata.fKeywords"]], "fpdfa (metadata attribute)": [[152, "skia.PDF.Metadata.fPDFA"]], "fproducer (metadata attribute)": [[152, "skia.PDF.Metadata.fProducer"]], "frasterdpi (metadata attribute)": [[152, "skia.PDF.Metadata.fRasterDPI"]], "fstructureelementtreeroot (metadata attribute)": [[152, "skia.PDF.Metadata.fStructureElementTreeRoot"]], "fsubject (metadata attribute)": [[152, "skia.PDF.Metadata.fSubject"]], "ftitle (metadata attribute)": [[152, "skia.PDF.Metadata.fTitle"]], "structureelementnode (class in skia.pdf)": [[153, "skia.PDF.StructureElementNode"]], "__init__() (structureelementnode method)": [[153, "skia.PDF.StructureElementNode.__init__"]], "fadditionalnodeids (structureelementnode attribute)": [[153, "skia.PDF.StructureElementNode.fAdditionalNodeIds"]], "falt (structureelementnode attribute)": [[153, "skia.PDF.StructureElementNode.fAlt"]], "fattributes (structureelementnode attribute)": [[153, "skia.PDF.StructureElementNode.fAttributes"]], "flang (structureelementnode attribute)": [[153, "skia.PDF.StructureElementNode.fLang"]], "fnodeid (structureelementnode attribute)": [[153, "skia.PDF.StructureElementNode.fNodeId"]], "ftypestring (structureelementnode attribute)": [[153, "skia.PDF.StructureElementNode.fTypeString"]], "paint (class in skia)": [[154, "skia.Paint"]], "__init__() (paint method)": [[154, "skia.Paint.__init__"]], "cancomputefastbounds() (paint method)": [[154, "skia.Paint.canComputeFastBounds"]], "computefastbounds() (paint method)": [[154, "skia.Paint.computeFastBounds"]], "computefaststrokebounds() (paint method)": [[154, "skia.Paint.computeFastStrokeBounds"]], "docomputefastbounds() (paint method)": [[154, "skia.Paint.doComputeFastBounds"]], "getalpha() (paint method)": [[154, "skia.Paint.getAlpha"]], "getalphaf() (paint method)": [[154, "skia.Paint.getAlphaf"]], "getcolor() (paint method)": [[154, "skia.Paint.getColor"]], "getcolor4f() (paint method)": [[154, "skia.Paint.getColor4f"]], "getcolorfilter() (paint method)": [[154, "skia.Paint.getColorFilter"]], "getfillpath() (paint method)": [[154, "skia.Paint.getFillPath"]], "getimagefilter() (paint method)": [[154, "skia.Paint.getImageFilter"]], "getmaskfilter() (paint method)": [[154, "skia.Paint.getMaskFilter"]], "getpatheffect() (paint method)": [[154, "skia.Paint.getPathEffect"]], "getshader() (paint method)": [[154, "skia.Paint.getShader"]], "getstrokecap() (paint method)": [[154, "skia.Paint.getStrokeCap"]], "getstrokejoin() (paint method)": [[154, "skia.Paint.getStrokeJoin"]], "getstrokemiter() (paint method)": [[154, "skia.Paint.getStrokeMiter"]], "getstrokewidth() (paint method)": [[154, "skia.Paint.getStrokeWidth"]], "getstyle() (paint method)": [[154, "skia.Paint.getStyle"]], "isantialias() (paint method)": [[154, "skia.Paint.isAntiAlias"]], "isdither() (paint method)": [[154, "skia.Paint.isDither"]], "issrcover() (paint method)": [[154, "skia.Paint.isSrcOver"]], "kbevel_join (paint attribute)": [[154, "skia.Paint.kBevel_Join"]], "kbutt_cap (paint attribute)": [[154, "skia.Paint.kButt_Cap"]], "kcapcount (paint attribute)": [[154, "skia.Paint.kCapCount"]], "kdefault_cap (paint attribute)": [[154, "skia.Paint.kDefault_Cap"]], "kdefault_join (paint attribute)": [[154, "skia.Paint.kDefault_Join"]], "kfill_style (paint attribute)": [[154, "skia.Paint.kFill_Style"]], "kjoincount (paint attribute)": [[154, "skia.Paint.kJoinCount"]], "klast_cap (paint attribute)": [[154, "skia.Paint.kLast_Cap"]], "klast_join (paint attribute)": [[154, "skia.Paint.kLast_Join"]], "kmiter_join (paint attribute)": [[154, "skia.Paint.kMiter_Join"]], "kround_cap (paint attribute)": [[154, "skia.Paint.kRound_Cap"]], "kround_join (paint attribute)": [[154, "skia.Paint.kRound_Join"]], "ksquare_cap (paint attribute)": [[154, "skia.Paint.kSquare_Cap"]], "kstrokeandfill_style (paint attribute)": [[154, "skia.Paint.kStrokeAndFill_Style"]], "kstroke_style (paint attribute)": [[154, "skia.Paint.kStroke_Style"]], "kstylecount (paint attribute)": [[154, "skia.Paint.kStyleCount"]], "nothingtodraw() (paint method)": [[154, "skia.Paint.nothingToDraw"]], "refcolorfilter() (paint method)": [[154, "skia.Paint.refColorFilter"]], "refimagefilter() (paint method)": [[154, "skia.Paint.refImageFilter"]], "refmaskfilter() (paint method)": [[154, "skia.Paint.refMaskFilter"]], "refpatheffect() (paint method)": [[154, "skia.Paint.refPathEffect"]], "refshader() (paint method)": [[154, "skia.Paint.refShader"]], "reset() (paint method)": [[154, "skia.Paint.reset"]], "setargb() (paint method)": [[154, "skia.Paint.setARGB"]], "setalpha() (paint method)": [[154, "skia.Paint.setAlpha"]], "setalphaf() (paint method)": [[154, "skia.Paint.setAlphaf"]], "setantialias() (paint method)": [[154, "skia.Paint.setAntiAlias"]], "setblendmode() (paint method)": [[154, "skia.Paint.setBlendMode"]], "setcolor() (paint method)": [[154, "skia.Paint.setColor"]], "setcolor4f() (paint method)": [[154, "skia.Paint.setColor4f"]], "setcolorfilter() (paint method)": [[154, "skia.Paint.setColorFilter"]], "setdither() (paint method)": [[154, "skia.Paint.setDither"]], "setimagefilter() (paint method)": [[154, "skia.Paint.setImageFilter"]], "setmaskfilter() (paint method)": [[154, "skia.Paint.setMaskFilter"]], "setpatheffect() (paint method)": [[154, "skia.Paint.setPathEffect"]], "setshader() (paint method)": [[154, "skia.Paint.setShader"]], "setstrokecap() (paint method)": [[154, "skia.Paint.setStrokeCap"]], "setstrokejoin() (paint method)": [[154, "skia.Paint.setStrokeJoin"]], "setstrokemiter() (paint method)": [[154, "skia.Paint.setStrokeMiter"]], "setstrokewidth() (paint method)": [[154, "skia.Paint.setStrokeWidth"]], "setstyle() (paint method)": [[154, "skia.Paint.setStyle"]], "cap (class in skia.paint)": [[155, "skia.Paint.Cap"]], "__init__() (cap method)": [[155, "skia.Paint.Cap.__init__"]], "kbutt_cap (cap attribute)": [[155, "skia.Paint.Cap.kButt_Cap"]], "kdefault_cap (cap attribute)": [[155, "skia.Paint.Cap.kDefault_Cap"]], "klast_cap (cap attribute)": [[155, "skia.Paint.Cap.kLast_Cap"]], "kround_cap (cap attribute)": [[155, "skia.Paint.Cap.kRound_Cap"]], "ksquare_cap (cap attribute)": [[155, "skia.Paint.Cap.kSquare_Cap"]], "name (cap attribute)": [[155, "skia.Paint.Cap.name"]], "value (cap attribute)": [[155, "skia.Paint.Cap.value"]], "join (class in skia.paint)": [[156, "skia.Paint.Join"]], "__init__() (join method)": [[156, "skia.Paint.Join.__init__"]], "kbevel_join (join attribute)": [[156, "skia.Paint.Join.kBevel_Join"]], "kdefault_join (join attribute)": [[156, "skia.Paint.Join.kDefault_Join"]], "klast_join (join attribute)": [[156, "skia.Paint.Join.kLast_Join"]], "kmiter_join (join attribute)": [[156, "skia.Paint.Join.kMiter_Join"]], "kround_join (join attribute)": [[156, "skia.Paint.Join.kRound_Join"]], "name (join attribute)": [[156, "skia.Paint.Join.name"]], "value (join attribute)": [[156, "skia.Paint.Join.value"]], "style (class in skia.paint)": [[157, "skia.Paint.Style"]], "__init__() (style method)": [[157, "skia.Paint.Style.__init__"], [166, "skia.Path1DPathEffect.Style.__init__"], [219, "skia.StrokeRec.Style.__init__"]], "kfill_style (style attribute)": [[157, "skia.Paint.Style.kFill_Style"], [219, "skia.StrokeRec.Style.kFill_Style"]], "kstrokeandfill_style (style attribute)": [[157, "skia.Paint.Style.kStrokeAndFill_Style"], [219, "skia.StrokeRec.Style.kStrokeAndFill_Style"]], "kstroke_style (style attribute)": [[157, "skia.Paint.Style.kStroke_Style"], [219, "skia.StrokeRec.Style.kStroke_Style"]], "name (style attribute)": [[157, "skia.Paint.Style.name"], [166, "skia.Path1DPathEffect.Style.name"], [219, "skia.StrokeRec.Style.name"]], "value (style attribute)": [[157, "skia.Paint.Style.value"], [166, "skia.Path1DPathEffect.Style.value"], [219, "skia.StrokeRec.Style.value"]], "circle() (path static method)": [[158, "skia.Path.Circle"]], "convertconictoquads() (path static method)": [[158, "skia.Path.ConvertConicToQuads"]], "iscubicdegenerate() (path static method)": [[158, "skia.Path.IsCubicDegenerate"]], "islinedegenerate() (path static method)": [[158, "skia.Path.IsLineDegenerate"]], "isquaddegenerate() (path static method)": [[158, "skia.Path.IsQuadDegenerate"]], "line() (path static method)": [[158, "skia.Path.Line"]], "make() (path static method)": [[158, "skia.Path.Make"]], "oval() (path static method)": [[158, "skia.Path.Oval"]], "path (class in skia)": [[158, "skia.Path"]], "polygon() (path static method)": [[158, "skia.Path.Polygon"]], "rrect() (path static method)": [[158, "skia.Path.RRect"]], "rect() (path static method)": [[158, "skia.Path.Rect"]], "__init__() (path method)": [[158, "skia.Path.__init__"]], "addarc() (path method)": [[158, "skia.Path.addArc"]], "addcircle() (path method)": [[158, "skia.Path.addCircle"]], "addoval() (path method)": [[158, "skia.Path.addOval"]], "addpath() (path method)": [[158, "skia.Path.addPath"]], "addpoly() (path method)": [[158, "skia.Path.addPoly"]], "addrrect() (path method)": [[158, "skia.Path.addRRect"]], "addrect() (path method)": [[158, "skia.Path.addRect"]], "addroundrect() (path method)": [[158, "skia.Path.addRoundRect"]], "approximatebytesused() (path method)": [[158, "skia.Path.approximateBytesUsed"]], "arcto() (path method)": [[158, "skia.Path.arcTo"]], "close() (path method)": [[158, "skia.Path.close"]], "computetightbounds() (path method)": [[158, "skia.Path.computeTightBounds"]], "conicto() (path method)": [[158, "skia.Path.conicTo"]], "conservativelycontainsrect() (path method)": [[158, "skia.Path.conservativelyContainsRect"]], "contains() (path method)": [[158, "skia.Path.contains"]], "countpoints() (path method)": [[158, "skia.Path.countPoints"]], "countverbs() (path method)": [[158, "skia.Path.countVerbs"]], "cubicto() (path method)": [[158, "skia.Path.cubicTo"]], "dump() (path method)": [[158, "skia.Path.dump"]], "dumphex() (path method)": [[158, "skia.Path.dumpHex"]], "getbounds() (path method)": [[158, "skia.Path.getBounds"]], "getfilltype() (path method)": [[158, "skia.Path.getFillType"]], "getgenerationid() (path method)": [[158, "skia.Path.getGenerationID"]], "getlastpt() (path method)": [[158, "skia.Path.getLastPt"]], "getpoint() (path method)": [[158, "skia.Path.getPoint"]], "getpoints() (path method)": [[158, "skia.Path.getPoints"]], "getsegmentmasks() (path method)": [[158, "skia.Path.getSegmentMasks"]], "getverbs() (path method)": [[158, "skia.Path.getVerbs"]], "increserve() (path method)": [[158, "skia.Path.incReserve"]], "interpolate() (path method)": [[158, "skia.Path.interpolate"]], "isconvex() (path method)": [[158, "skia.Path.isConvex"]], "isempty() (path method)": [[158, "skia.Path.isEmpty"]], "isfinite() (path method)": [[158, "skia.Path.isFinite"]], "isinterpolatable() (path method)": [[158, "skia.Path.isInterpolatable"]], "isinversefilltype() (path method)": [[158, "skia.Path.isInverseFillType"]], "islastcontourclosed() (path method)": [[158, "skia.Path.isLastContourClosed"]], "isline() (path method)": [[158, "skia.Path.isLine"]], "isoval() (path method)": [[158, "skia.Path.isOval"]], "isrrect() (path method)": [[158, "skia.Path.isRRect"]], "isrect() (path method)": [[158, "skia.Path.isRect"]], "isvalid() (path method)": [[158, "skia.Path.isValid"]], "isvolatile() (path method)": [[158, "skia.Path.isVolatile"]], "kappend_addpathmode (path attribute)": [[158, "skia.Path.kAppend_AddPathMode"]], "kclose_verb (path attribute)": [[158, "skia.Path.kClose_Verb"]], "kconic_segmentmask (path attribute)": [[158, "skia.Path.kConic_SegmentMask"]], "kconic_verb (path attribute)": [[158, "skia.Path.kConic_Verb"]], "kcubic_segmentmask (path attribute)": [[158, "skia.Path.kCubic_SegmentMask"]], "kcubic_verb (path attribute)": [[158, "skia.Path.kCubic_Verb"]], "kdone_verb (path attribute)": [[158, "skia.Path.kDone_Verb"]], "kextend_addpathmode (path attribute)": [[158, "skia.Path.kExtend_AddPathMode"]], "klarge_arcsize (path attribute)": [[158, "skia.Path.kLarge_ArcSize"]], "kline_segmentmask (path attribute)": [[158, "skia.Path.kLine_SegmentMask"]], "kline_verb (path attribute)": [[158, "skia.Path.kLine_Verb"]], "kmove_verb (path attribute)": [[158, "skia.Path.kMove_Verb"]], "kquad_segmentmask (path attribute)": [[158, "skia.Path.kQuad_SegmentMask"]], "kquad_verb (path attribute)": [[158, "skia.Path.kQuad_Verb"]], "ksmall_arcsize (path attribute)": [[158, "skia.Path.kSmall_ArcSize"]], "lineto() (path method)": [[158, "skia.Path.lineTo"]], "moveto() (path method)": [[158, "skia.Path.moveTo"]], "offset() (path method)": [[158, "skia.Path.offset"]], "quadto() (path method)": [[158, "skia.Path.quadTo"]], "rarcto() (path method)": [[158, "skia.Path.rArcTo"]], "rconicto() (path method)": [[158, "skia.Path.rConicTo"]], "rcubicto() (path method)": [[158, "skia.Path.rCubicTo"]], "rlineto() (path method)": [[158, "skia.Path.rLineTo"]], "rmoveto() (path method)": [[158, "skia.Path.rMoveTo"]], "rquadto() (path method)": [[158, "skia.Path.rQuadTo"]], "readfrommemory() (path method)": [[158, "skia.Path.readFromMemory"]], "reset() (path method)": [[158, "skia.Path.reset"]], "reverseaddpath() (path method)": [[158, "skia.Path.reverseAddPath"]], "rewind() (path method)": [[158, "skia.Path.rewind"]], "serialize() (path method)": [[158, "skia.Path.serialize"]], "setfilltype() (path method)": [[158, "skia.Path.setFillType"]], "setisvolatile() (path method)": [[158, "skia.Path.setIsVolatile"]], "setlastpt() (path method)": [[158, "skia.Path.setLastPt"]], "swap() (path method)": [[158, "skia.Path.swap"]], "toggleinversefilltype() (path method)": [[158, "skia.Path.toggleInverseFillType"]], "transform() (path method)": [[158, "skia.Path.transform"]], "updateboundscache() (path method)": [[158, "skia.Path.updateBoundsCache"]], "writetomemory() (path method)": [[158, "skia.Path.writeToMemory"]], "addpathmode (class in skia.path)": [[159, "skia.Path.AddPathMode"]], "__init__() (addpathmode method)": [[159, "skia.Path.AddPathMode.__init__"]], "kappend_addpathmode (addpathmode attribute)": [[159, "skia.Path.AddPathMode.kAppend_AddPathMode"]], "kextend_addpathmode (addpathmode attribute)": [[159, "skia.Path.AddPathMode.kExtend_AddPathMode"]], "name (addpathmode attribute)": [[159, "skia.Path.AddPathMode.name"]], "value (addpathmode attribute)": [[159, "skia.Path.AddPathMode.value"]], "arcsize (class in skia.path)": [[160, "skia.Path.ArcSize"]], "__init__() (arcsize method)": [[160, "skia.Path.ArcSize.__init__"], [169, "skia.PathBuilder.ArcSize.__init__"]], "klarge_arcsize (arcsize attribute)": [[160, "skia.Path.ArcSize.kLarge_ArcSize"], [169, "skia.PathBuilder.ArcSize.kLarge_ArcSize"]], "ksmall_arcsize (arcsize attribute)": [[160, "skia.Path.ArcSize.kSmall_ArcSize"], [169, "skia.PathBuilder.ArcSize.kSmall_ArcSize"]], "name (arcsize attribute)": [[160, "skia.Path.ArcSize.name"], [169, "skia.PathBuilder.ArcSize.name"]], "value (arcsize attribute)": [[160, "skia.Path.ArcSize.value"], [169, "skia.PathBuilder.ArcSize.value"]], "iter (class in skia.path)": [[161, "skia.Path.Iter"]], "__init__() (iter method)": [[161, "skia.Path.Iter.__init__"], [231, "skia.TextBlob.Iter.__init__"]], "conicweight() (iter method)": [[161, "skia.Path.Iter.conicWeight"]], "iscloseline() (iter method)": [[161, "skia.Path.Iter.isCloseLine"]], "isclosedcontour() (iter method)": [[161, "skia.Path.Iter.isClosedContour"]], "next() (iter method)": [[161, "skia.Path.Iter.next"], [231, "skia.TextBlob.Iter.next"]], "setpath() (iter method)": [[161, "skia.Path.Iter.setPath"]], "rawiter (class in skia.path)": [[162, "skia.Path.RawIter"]], "__init__() (rawiter method)": [[162, "skia.Path.RawIter.__init__"]], "conicweight() (rawiter method)": [[162, "skia.Path.RawIter.conicWeight"]], "next() (rawiter method)": [[162, "skia.Path.RawIter.next"]], "peek() (rawiter method)": [[162, "skia.Path.RawIter.peek"]], "setpath() (rawiter method)": [[162, "skia.Path.RawIter.setPath"]], "segmentmask (class in skia.path)": [[163, "skia.Path.SegmentMask"]], "__init__() (segmentmask method)": [[163, "skia.Path.SegmentMask.__init__"]], "kconic_segmentmask (segmentmask attribute)": [[163, "skia.Path.SegmentMask.kConic_SegmentMask"]], "kcubic_segmentmask (segmentmask attribute)": [[163, "skia.Path.SegmentMask.kCubic_SegmentMask"]], "kline_segmentmask (segmentmask attribute)": [[163, "skia.Path.SegmentMask.kLine_SegmentMask"]], "kquad_segmentmask (segmentmask attribute)": [[163, "skia.Path.SegmentMask.kQuad_SegmentMask"]], "name (segmentmask attribute)": [[163, "skia.Path.SegmentMask.name"]], "value (segmentmask attribute)": [[163, "skia.Path.SegmentMask.value"]], "verb (class in skia.path)": [[164, "skia.Path.Verb"]], "__init__() (verb method)": [[164, "skia.Path.Verb.__init__"]], "kclose_verb (verb attribute)": [[164, "skia.Path.Verb.kClose_Verb"]], "kconic_verb (verb attribute)": [[164, "skia.Path.Verb.kConic_Verb"]], "kcubic_verb (verb attribute)": [[164, "skia.Path.Verb.kCubic_Verb"]], "kdone_verb (verb attribute)": [[164, "skia.Path.Verb.kDone_Verb"]], "kline_verb (verb attribute)": [[164, "skia.Path.Verb.kLine_Verb"]], "kmove_verb (verb attribute)": [[164, "skia.Path.Verb.kMove_Verb"]], "kquad_verb (verb attribute)": [[164, "skia.Path.Verb.kQuad_Verb"]], "name (verb attribute)": [[164, "skia.Path.Verb.name"]], "value (verb attribute)": [[164, "skia.Path.Verb.value"]], "make() (path1dpatheffect static method)": [[165, "skia.Path1DPathEffect.Make"]], "path1dpatheffect (class in skia)": [[165, "skia.Path1DPathEffect"]], "__init__() (path1dpatheffect method)": [[165, "skia.Path1DPathEffect.__init__"]], "klastenum_style (path1dpatheffect attribute)": [[165, "skia.Path1DPathEffect.kLastEnum_Style"]], "kmorph_style (path1dpatheffect attribute)": [[165, "skia.Path1DPathEffect.kMorph_Style"]], "krotate_style (path1dpatheffect attribute)": [[165, "skia.Path1DPathEffect.kRotate_Style"]], "ktranslate_style (path1dpatheffect attribute)": [[165, "skia.Path1DPathEffect.kTranslate_Style"]], "style (class in skia.path1dpatheffect)": [[166, "skia.Path1DPathEffect.Style"]], "klastenum_style (style attribute)": [[166, "skia.Path1DPathEffect.Style.kLastEnum_Style"]], "kmorph_style (style attribute)": [[166, "skia.Path1DPathEffect.Style.kMorph_Style"]], "krotate_style (style attribute)": [[166, "skia.Path1DPathEffect.Style.kRotate_Style"]], "ktranslate_style (style attribute)": [[166, "skia.Path1DPathEffect.Style.kTranslate_Style"]], "make() (path2dpatheffect static method)": [[167, "skia.Path2DPathEffect.Make"]], "path2dpatheffect (class in skia)": [[167, "skia.Path2DPathEffect"]], "__init__() (path2dpatheffect method)": [[167, "skia.Path2DPathEffect.__init__"]], "pathbuilder (class in skia)": [[168, "skia.PathBuilder"]], "__init__() (pathbuilder method)": [[168, "skia.PathBuilder.__init__"]], "addarc() (pathbuilder method)": [[168, "skia.PathBuilder.addArc"]], "addcircle() (pathbuilder method)": [[168, "skia.PathBuilder.addCircle"]], "addoval() (pathbuilder method)": [[168, "skia.PathBuilder.addOval"]], "addpolygon() (pathbuilder method)": [[168, "skia.PathBuilder.addPolygon"]], "addrrect() (pathbuilder method)": [[168, "skia.PathBuilder.addRRect"]], "addrect() (pathbuilder method)": [[168, "skia.PathBuilder.addRect"]], "arcto() (pathbuilder method)": [[168, "skia.PathBuilder.arcTo"]], "close() (pathbuilder method)": [[168, "skia.PathBuilder.close"]], "computebounds() (pathbuilder method)": [[168, "skia.PathBuilder.computeBounds"]], "conicto() (pathbuilder method)": [[168, "skia.PathBuilder.conicTo"]], "cubicto() (pathbuilder method)": [[168, "skia.PathBuilder.cubicTo"]], "detach() (pathbuilder method)": [[168, "skia.PathBuilder.detach"]], "filltype() (pathbuilder method)": [[168, "skia.PathBuilder.fillType"]], "increserve() (pathbuilder method)": [[168, "skia.PathBuilder.incReserve"]], "klarge_arcsize (pathbuilder attribute)": [[168, "skia.PathBuilder.kLarge_ArcSize"]], "ksmall_arcsize (pathbuilder attribute)": [[168, "skia.PathBuilder.kSmall_ArcSize"]], "lineto() (pathbuilder method)": [[168, "skia.PathBuilder.lineTo"]], "moveto() (pathbuilder method)": [[168, "skia.PathBuilder.moveTo"]], "offset() (pathbuilder method)": [[168, "skia.PathBuilder.offset"]], "polylineto() (pathbuilder method)": [[168, "skia.PathBuilder.polylineTo"]], "quadto() (pathbuilder method)": [[168, "skia.PathBuilder.quadTo"]], "rconicto() (pathbuilder method)": [[168, "skia.PathBuilder.rConicTo"]], "rcubicto() (pathbuilder method)": [[168, "skia.PathBuilder.rCubicTo"]], "rlineto() (pathbuilder method)": [[168, "skia.PathBuilder.rLineTo"]], "rquadto() (pathbuilder method)": [[168, "skia.PathBuilder.rQuadTo"]], "reset() (pathbuilder method)": [[168, "skia.PathBuilder.reset"]], "setfilltype() (pathbuilder method)": [[168, "skia.PathBuilder.setFillType"]], "setisvolatile() (pathbuilder method)": [[168, "skia.PathBuilder.setIsVolatile"]], "snapshot() (pathbuilder method)": [[168, "skia.PathBuilder.snapshot"]], "toggleinversefilltype() (pathbuilder method)": [[168, "skia.PathBuilder.toggleInverseFillType"]], "arcsize (class in skia.pathbuilder)": [[169, "skia.PathBuilder.ArcSize"]], "pathdirection (class in skia)": [[170, "skia.PathDirection"]], "__init__() (pathdirection method)": [[170, "skia.PathDirection.__init__"]], "kccw (pathdirection attribute)": [[170, "skia.PathDirection.kCCW"]], "kcw (pathdirection attribute)": [[170, "skia.PathDirection.kCW"]], "name (pathdirection attribute)": [[170, "skia.PathDirection.name"]], "value (pathdirection attribute)": [[170, "skia.PathDirection.value"]], "deserialize() (patheffect static method)": [[171, "skia.PathEffect.Deserialize"]], "getflattenabletype() (patheffect static method)": [[171, "skia.PathEffect.GetFlattenableType"]], "makecompose() (patheffect static method)": [[171, "skia.PathEffect.MakeCompose"]], "makesum() (patheffect static method)": [[171, "skia.PathEffect.MakeSum"]], "patheffect (class in skia)": [[171, "skia.PathEffect"]], "__init__() (patheffect method)": [[171, "skia.PathEffect.__init__"]], "asadash() (patheffect method)": [[171, "skia.PathEffect.asADash"]], "filterpath() (patheffect method)": [[171, "skia.PathEffect.filterPath"]], "getflattenabletype() (patheffect method)": [[171, "skia.PathEffect.getFlattenableType"]], "gettypename() (patheffect method)": [[171, "skia.PathEffect.getTypeName"]], "kcolorfilter_type (patheffect attribute)": [[171, "skia.PathEffect.kColorFilter_Type"]], "kdash_dashtype (patheffect attribute)": [[171, "skia.PathEffect.kDash_DashType"]], "kdrawlooper_type (patheffect attribute)": [[171, "skia.PathEffect.kDrawLooper_Type"]], "kdrawable_type (patheffect attribute)": [[171, "skia.PathEffect.kDrawable_Type"]], "kimagefilter_type (patheffect attribute)": [[171, "skia.PathEffect.kImageFilter_Type"]], "kmaskfilter_type (patheffect attribute)": [[171, "skia.PathEffect.kMaskFilter_Type"]], "knone_dashtype (patheffect attribute)": [[171, "skia.PathEffect.kNone_DashType"]], "kpatheffect_type (patheffect attribute)": [[171, "skia.PathEffect.kPathEffect_Type"]], "ref() (patheffect method)": [[171, "skia.PathEffect.ref"]], "serialize() (patheffect method)": [[171, "skia.PathEffect.serialize"]], "unique() (patheffect method)": [[171, "skia.PathEffect.unique"]], "unref() (patheffect method)": [[171, "skia.PathEffect.unref"]], "dashinfo (class in skia.patheffect)": [[172, "skia.PathEffect.DashInfo"]], "__init__() (dashinfo method)": [[172, "skia.PathEffect.DashInfo.__init__"]], "fcount (dashinfo attribute)": [[172, "skia.PathEffect.DashInfo.fCount"]], "fintervals (dashinfo attribute)": [[172, "skia.PathEffect.DashInfo.fIntervals"]], "fphase (dashinfo attribute)": [[172, "skia.PathEffect.DashInfo.fPhase"]], "dashtype (class in skia.patheffect)": [[173, "skia.PathEffect.DashType"]], "__init__() (dashtype method)": [[173, "skia.PathEffect.DashType.__init__"]], "kdash_dashtype (dashtype attribute)": [[173, "skia.PathEffect.DashType.kDash_DashType"]], "knone_dashtype (dashtype attribute)": [[173, "skia.PathEffect.DashType.kNone_DashType"]], "name (dashtype attribute)": [[173, "skia.PathEffect.DashType.name"]], "value (dashtype attribute)": [[173, "skia.PathEffect.DashType.value"]], "type (class in skia.patheffect)": [[174, "skia.PathEffect.Type"]], "pathfilltype (class in skia)": [[175, "skia.PathFillType"]], "__init__() (pathfilltype method)": [[175, "skia.PathFillType.__init__"]], "kevenodd (pathfilltype attribute)": [[175, "skia.PathFillType.kEvenOdd"]], "kinverseevenodd (pathfilltype attribute)": [[175, "skia.PathFillType.kInverseEvenOdd"]], "kinversewinding (pathfilltype attribute)": [[175, "skia.PathFillType.kInverseWinding"]], "kwinding (pathfilltype attribute)": [[175, "skia.PathFillType.kWinding"]], "name (pathfilltype attribute)": [[175, "skia.PathFillType.name"]], "value (pathfilltype attribute)": [[175, "skia.PathFillType.value"]], "pathmeasure (class in skia)": [[176, "skia.PathMeasure"]], "__init__() (pathmeasure method)": [[176, "skia.PathMeasure.__init__"]], "getlength() (pathmeasure method)": [[176, "skia.PathMeasure.getLength"]], "getmatrix() (pathmeasure method)": [[176, "skia.PathMeasure.getMatrix"]], "getpostan() (pathmeasure method)": [[176, "skia.PathMeasure.getPosTan"]], "getsegment() (pathmeasure method)": [[176, "skia.PathMeasure.getSegment"]], "isclosed() (pathmeasure method)": [[176, "skia.PathMeasure.isClosed"]], "kgetposandtan_matrixflag (pathmeasure attribute)": [[176, "skia.PathMeasure.kGetPosAndTan_MatrixFlag"]], "kgetposition_matrixflag (pathmeasure attribute)": [[176, "skia.PathMeasure.kGetPosition_MatrixFlag"]], "kgettangent_matrixflag (pathmeasure attribute)": [[176, "skia.PathMeasure.kGetTangent_MatrixFlag"]], "nextcontour() (pathmeasure method)": [[176, "skia.PathMeasure.nextContour"]], "setpath() (pathmeasure method)": [[176, "skia.PathMeasure.setPath"]], "getposandtan (class in skia.pathmeasure)": [[177, "skia.PathMeasure.GetPosAndTan"]], "__init__() (getposandtan method)": [[177, "skia.PathMeasure.GetPosAndTan.__init__"]], "kgetposandtan_matrixflag (getposandtan attribute)": [[177, "skia.PathMeasure.GetPosAndTan.kGetPosAndTan_MatrixFlag"]], "kgetposition_matrixflag (getposandtan attribute)": [[177, "skia.PathMeasure.GetPosAndTan.kGetPosition_MatrixFlag"]], "kgettangent_matrixflag (getposandtan attribute)": [[177, "skia.PathMeasure.GetPosAndTan.kGetTangent_MatrixFlag"]], "name (getposandtan attribute)": [[177, "skia.PathMeasure.GetPosAndTan.name"]], "value (getposandtan attribute)": [[177, "skia.PathMeasure.GetPosAndTan.value"]], "pathop (class in skia)": [[178, "skia.PathOp"]], "__init__() (pathop method)": [[178, "skia.PathOp.__init__"]], "kdifference_pathop (pathop attribute)": [[178, "skia.PathOp.kDifference_PathOp"]], "kintersect_pathop (pathop attribute)": [[178, "skia.PathOp.kIntersect_PathOp"]], "kreversedifference_pathop (pathop attribute)": [[178, "skia.PathOp.kReverseDifference_PathOp"]], "kunion_pathop (pathop attribute)": [[178, "skia.PathOp.kUnion_PathOp"]], "kxor_pathop (pathop attribute)": [[178, "skia.PathOp.kXOR_PathOp"]], "name (pathop attribute)": [[178, "skia.PathOp.name"]], "value (pathop attribute)": [[178, "skia.PathOp.value"]], "pathsegmentmask (class in skia)": [[179, "skia.PathSegmentMask"]], "__init__() (pathsegmentmask method)": [[179, "skia.PathSegmentMask.__init__"]], "kconic_pathsegmentmask (pathsegmentmask attribute)": [[179, "skia.PathSegmentMask.kConic_PathSegmentMask"]], "kcubic_pathsegmentmask (pathsegmentmask attribute)": [[179, "skia.PathSegmentMask.kCubic_PathSegmentMask"]], "kline_pathsegmentmask (pathsegmentmask attribute)": [[179, "skia.PathSegmentMask.kLine_PathSegmentMask"]], "kquad_pathsegmentmask (pathsegmentmask attribute)": [[179, "skia.PathSegmentMask.kQuad_PathSegmentMask"]], "name (pathsegmentmask attribute)": [[179, "skia.PathSegmentMask.name"]], "value (pathsegmentmask attribute)": [[179, "skia.PathSegmentMask.value"]], "pathverb (class in skia)": [[180, "skia.PathVerb"]], "__init__() (pathverb method)": [[180, "skia.PathVerb.__init__"]], "kclose (pathverb attribute)": [[180, "skia.PathVerb.kClose"]], "kconic (pathverb attribute)": [[180, "skia.PathVerb.kConic"]], "kcubic (pathverb attribute)": [[180, "skia.PathVerb.kCubic"]], "kline (pathverb attribute)": [[180, "skia.PathVerb.kLine"]], "kmove (pathverb attribute)": [[180, "skia.PathVerb.kMove"]], "kquad (pathverb attribute)": [[180, "skia.PathVerb.kQuad"]], "name (pathverb attribute)": [[180, "skia.PathVerb.name"]], "value (pathverb attribute)": [[180, "skia.PathVerb.value"]], "makefractalnoise() (perlinnoiseshader static method)": [[181, "skia.PerlinNoiseShader.MakeFractalNoise"]], "maketurbulence() (perlinnoiseshader static method)": [[181, "skia.PerlinNoiseShader.MakeTurbulence"]], "perlinnoiseshader (class in skia)": [[181, "skia.PerlinNoiseShader"]], "__init__() (perlinnoiseshader method)": [[181, "skia.PerlinNoiseShader.__init__"]], "makefromdata() (picture static method)": [[182, "skia.Picture.MakeFromData"]], "makefromstream() (picture static method)": [[182, "skia.Picture.MakeFromStream"]], "makeplaceholder() (picture static method)": [[182, "skia.Picture.MakePlaceholder"]], "picture (class in skia)": [[182, "skia.Picture"]], "__init__() (picture method)": [[182, "skia.Picture.__init__"]], "approximatebytesused() (picture method)": [[182, "skia.Picture.approximateBytesUsed"]], "approximateopcount() (picture method)": [[182, "skia.Picture.approximateOpCount"]], "cullrect() (picture method)": [[182, "skia.Picture.cullRect"]], "makeshader() (picture method)": [[182, "skia.Picture.makeShader"]], "playback() (picture method)": [[182, "skia.Picture.playback"]], "ref() (picture method)": [[182, "skia.Picture.ref"]], "serialize() (picture method)": [[182, "skia.Picture.serialize"]], "unique() (picture method)": [[182, "skia.Picture.unique"]], "uniqueid() (picture method)": [[182, "skia.Picture.uniqueID"]], "unref() (picture method)": [[182, "skia.Picture.unref"]], "picturerecorder (class in skia)": [[183, "skia.PictureRecorder"]], "__init__() (picturerecorder method)": [[183, "skia.PictureRecorder.__init__"]], "beginrecording() (picturerecorder method)": [[183, "skia.PictureRecorder.beginRecording"]], "finishrecordingasdrawable() (picturerecorder method)": [[183, "skia.PictureRecorder.finishRecordingAsDrawable"]], "finishrecordingaspicture() (picturerecorder method)": [[183, "skia.PictureRecorder.finishRecordingAsPicture"]], "finishrecordingaspicturewithcull() (picturerecorder method)": [[183, "skia.PictureRecorder.finishRecordingAsPictureWithCull"]], "getrecordingcanvas() (picturerecorder method)": [[183, "skia.PictureRecorder.getRecordingCanvas"]], "pixelgeometry (class in skia)": [[184, "skia.PixelGeometry"]], "__init__() (pixelgeometry method)": [[184, "skia.PixelGeometry.__init__"]], "kbgr_h_pixelgeometry (pixelgeometry attribute)": [[184, "skia.PixelGeometry.kBGR_H_PixelGeometry"]], "kbgr_v_pixelgeometry (pixelgeometry attribute)": [[184, "skia.PixelGeometry.kBGR_V_PixelGeometry"]], "krgb_h_pixelgeometry (pixelgeometry attribute)": [[184, "skia.PixelGeometry.kRGB_H_PixelGeometry"]], "krgb_v_pixelgeometry (pixelgeometry attribute)": [[184, "skia.PixelGeometry.kRGB_V_PixelGeometry"]], "kunknown_pixelgeometry (pixelgeometry attribute)": [[184, "skia.PixelGeometry.kUnknown_PixelGeometry"]], "name (pixelgeometry attribute)": [[184, "skia.PixelGeometry.name"]], "value (pixelgeometry attribute)": [[184, "skia.PixelGeometry.value"]], "pixelref (class in skia)": [[185, "skia.PixelRef"]], "__init__() (pixelref method)": [[185, "skia.PixelRef.__init__"]], "pixmap (class in skia)": [[186, "skia.Pixmap"]], "__init__() (pixmap method)": [[186, "skia.Pixmap.__init__"]], "addr() (pixmap method)": [[186, "skia.Pixmap.addr"]], "addr16() (pixmap method)": [[186, "skia.Pixmap.addr16"]], "addr32() (pixmap method)": [[186, "skia.Pixmap.addr32"]], "addr64() (pixmap method)": [[186, "skia.Pixmap.addr64"]], "addr8() (pixmap method)": [[186, "skia.Pixmap.addr8"]], "alphatype() (pixmap method)": [[186, "skia.Pixmap.alphaType"]], "bounds() (pixmap method)": [[186, "skia.Pixmap.bounds"]], "colorspace() (pixmap method)": [[186, "skia.Pixmap.colorSpace"]], "colortype() (pixmap method)": [[186, "skia.Pixmap.colorType"]], "computebytesize() (pixmap method)": [[186, "skia.Pixmap.computeByteSize"]], "computeisopaque() (pixmap method)": [[186, "skia.Pixmap.computeIsOpaque"]], "dimensions() (pixmap method)": [[186, "skia.Pixmap.dimensions"]], "erase() (pixmap method)": [[186, "skia.Pixmap.erase"]], "extractsubset() (pixmap method)": [[186, "skia.Pixmap.extractSubset"]], "getalphaf() (pixmap method)": [[186, "skia.Pixmap.getAlphaf"]], "getcolor() (pixmap method)": [[186, "skia.Pixmap.getColor"]], "height() (pixmap method)": [[186, "skia.Pixmap.height"]], "info() (pixmap method)": [[186, "skia.Pixmap.info"]], "isopaque() (pixmap method)": [[186, "skia.Pixmap.isOpaque"]], "readpixels() (pixmap method)": [[186, "skia.Pixmap.readPixels"]], "refcolorspace() (pixmap method)": [[186, "skia.Pixmap.refColorSpace"]], "reset() (pixmap method)": [[186, "skia.Pixmap.reset"]], "rowbytes() (pixmap method)": [[186, "skia.Pixmap.rowBytes"]], "rowbytesaspixels() (pixmap method)": [[186, "skia.Pixmap.rowBytesAsPixels"]], "scalepixels() (pixmap method)": [[186, "skia.Pixmap.scalePixels"]], "setcolorspace() (pixmap method)": [[186, "skia.Pixmap.setColorSpace"]], "shiftperpixel() (pixmap method)": [[186, "skia.Pixmap.shiftPerPixel"]], "tobytes() (pixmap method)": [[186, "skia.Pixmap.tobytes"]], "width() (pixmap method)": [[186, "skia.Pixmap.width"]], "writable_addr() (pixmap method)": [[186, "skia.Pixmap.writable_addr"]], "crossproduct() (point static method)": [[187, "skia.Point.CrossProduct"]], "distance() (point static method)": [[187, "skia.Point.Distance"]], "dotproduct() (point static method)": [[187, "skia.Point.DotProduct"]], "length() (point static method)": [[187, "skia.Point.Length"]], "make() (point static method)": [[187, "skia.Point.Make"]], "normalize() (point static method)": [[187, "skia.Point.Normalize"]], "offset() (point static method)": [[187, "skia.Point.Offset"]], "point (class in skia)": [[187, "skia.Point"]], "__init__() (point method)": [[187, "skia.Point.__init__"]], "cross() (point method)": [[187, "skia.Point.cross"]], "distancetoorigin() (point method)": [[187, "skia.Point.distanceToOrigin"]], "dot() (point method)": [[187, "skia.Point.dot"]], "equals() (point method)": [[187, "skia.Point.equals"]], "fx (point attribute)": [[187, "skia.Point.fX"]], "fy (point attribute)": [[187, "skia.Point.fY"]], "isfinite() (point method)": [[187, "skia.Point.isFinite"]], "iszero() (point method)": [[187, "skia.Point.isZero"]], "iset() (point method)": [[187, "skia.Point.iset"]], "length() (point method)": [[187, "skia.Point.length"]], "negate() (point method)": [[187, "skia.Point.negate"]], "normalize() (point method)": [[187, "skia.Point.normalize"]], "offset() (point method)": [[187, "skia.Point.offset"]], "scale() (point method)": [[187, "skia.Point.scale"]], "set() (point method)": [[187, "skia.Point.set"]], "setabs() (point method)": [[187, "skia.Point.setAbs"]], "setlength() (point method)": [[187, "skia.Point.setLength"]], "setnormalize() (point method)": [[187, "skia.Point.setNormalize"]], "x() (point method)": [[187, "skia.Point.x"]], "y() (point method)": [[187, "skia.Point.y"]], "crossproduct() (point3 static method)": [[188, "skia.Point3.CrossProduct"]], "dotproduct() (point3 static method)": [[188, "skia.Point3.DotProduct"]], "length() (point3 static method)": [[188, "skia.Point3.Length"]], "make() (point3 static method)": [[188, "skia.Point3.Make"]], "point3 (class in skia)": [[188, "skia.Point3"]], "__init__() (point3 method)": [[188, "skia.Point3.__init__"]], "cross() (point3 method)": [[188, "skia.Point3.cross"]], "dot() (point3 method)": [[188, "skia.Point3.dot"]], "fx (point3 attribute)": [[188, "skia.Point3.fX"]], "fy (point3 attribute)": [[188, "skia.Point3.fY"]], "fz (point3 attribute)": [[188, "skia.Point3.fZ"]], "isfinite() (point3 method)": [[188, "skia.Point3.isFinite"]], "length() (point3 method)": [[188, "skia.Point3.length"]], "makescale() (point3 method)": [[188, "skia.Point3.makeScale"]], "normalize() (point3 method)": [[188, "skia.Point3.normalize"]], "scale() (point3 method)": [[188, "skia.Point3.scale"]], "set() (point3 method)": [[188, "skia.Point3.set"]], "x() (point3 method)": [[188, "skia.Point3.x"]], "y() (point3 method)": [[188, "skia.Point3.y"]], "z() (point3 method)": [[188, "skia.Point3.z"]], "makeempty() (rrect static method)": [[189, "skia.RRect.MakeEmpty"]], "makeoval() (rrect static method)": [[189, "skia.RRect.MakeOval"]], "makerect() (rrect static method)": [[189, "skia.RRect.MakeRect"]], "makerectxy() (rrect static method)": [[189, "skia.RRect.MakeRectXY"]], "rrect (class in skia)": [[189, "skia.RRect"]], "__init__() (rrect method)": [[189, "skia.RRect.__init__"]], "contains() (rrect method)": [[189, "skia.RRect.contains"]], "dump() (rrect method)": [[189, "skia.RRect.dump"]], "dumphex() (rrect method)": [[189, "skia.RRect.dumpHex"]], "dumptostring() (rrect method)": [[189, "skia.RRect.dumpToString"]], "getbounds() (rrect method)": [[189, "skia.RRect.getBounds"]], "getsimpleradii() (rrect method)": [[189, "skia.RRect.getSimpleRadii"]], "gettype() (rrect method)": [[189, "skia.RRect.getType"]], "height() (rrect method)": [[189, "skia.RRect.height"]], "inset() (rrect method)": [[189, "skia.RRect.inset"]], "iscomplex() (rrect method)": [[189, "skia.RRect.isComplex"]], "isempty() (rrect method)": [[189, "skia.RRect.isEmpty"]], "isninepatch() (rrect method)": [[189, "skia.RRect.isNinePatch"]], "isoval() (rrect method)": [[189, "skia.RRect.isOval"]], "isrect() (rrect method)": [[189, "skia.RRect.isRect"]], "issimple() (rrect method)": [[189, "skia.RRect.isSimple"]], "isvalid() (rrect method)": [[189, "skia.RRect.isValid"]], "kcomplex_type (rrect attribute)": [[189, "skia.RRect.kComplex_Type"]], "kempty_type (rrect attribute)": [[189, "skia.RRect.kEmpty_Type"]], "klasttype (rrect attribute)": [[189, "skia.RRect.kLastType"]], "klowerleft_corner (rrect attribute)": [[189, "skia.RRect.kLowerLeft_Corner"]], "klowerright_corner (rrect attribute)": [[189, "skia.RRect.kLowerRight_Corner"]], "kninepatch_type (rrect attribute)": [[189, "skia.RRect.kNinePatch_Type"]], "koval_type (rrect attribute)": [[189, "skia.RRect.kOval_Type"]], "krect_type (rrect attribute)": [[189, "skia.RRect.kRect_Type"]], "ksimple_type (rrect attribute)": [[189, "skia.RRect.kSimple_Type"]], "ksizeinmemory (rrect attribute)": [[189, "skia.RRect.kSizeInMemory"]], "kupperleft_corner (rrect attribute)": [[189, "skia.RRect.kUpperLeft_Corner"]], "kupperright_corner (rrect attribute)": [[189, "skia.RRect.kUpperRight_Corner"]], "makeoffset() (rrect method)": [[189, "skia.RRect.makeOffset"]], "offset() (rrect method)": [[189, "skia.RRect.offset"]], "outset() (rrect method)": [[189, "skia.RRect.outset"]], "radii() (rrect method)": [[189, "skia.RRect.radii"]], "readfrommemory() (rrect method)": [[189, "skia.RRect.readFromMemory"]], "rect() (rrect method)": [[189, "skia.RRect.rect"]], "setempty() (rrect method)": [[189, "skia.RRect.setEmpty"]], "setninepatch() (rrect method)": [[189, "skia.RRect.setNinePatch"]], "setoval() (rrect method)": [[189, "skia.RRect.setOval"]], "setrect() (rrect method)": [[189, "skia.RRect.setRect"]], "setrectradii() (rrect method)": [[189, "skia.RRect.setRectRadii"]], "setrectxy() (rrect method)": [[189, "skia.RRect.setRectXY"]], "transform() (rrect method)": [[189, "skia.RRect.transform"]], "type() (rrect method)": [[189, "skia.RRect.type"]], "width() (rrect method)": [[189, "skia.RRect.width"]], "writetomemory() (rrect method)": [[189, "skia.RRect.writeToMemory"]], "corner (class in skia.rrect)": [[190, "skia.RRect.Corner"]], "__init__() (corner method)": [[190, "skia.RRect.Corner.__init__"]], "klowerleft_corner (corner attribute)": [[190, "skia.RRect.Corner.kLowerLeft_Corner"]], "klowerright_corner (corner attribute)": [[190, "skia.RRect.Corner.kLowerRight_Corner"]], "kupperleft_corner (corner attribute)": [[190, "skia.RRect.Corner.kUpperLeft_Corner"]], "kupperright_corner (corner attribute)": [[190, "skia.RRect.Corner.kUpperRight_Corner"]], "name (corner attribute)": [[190, "skia.RRect.Corner.name"]], "value (corner attribute)": [[190, "skia.RRect.Corner.value"]], "type (class in skia.rrect)": [[191, "skia.RRect.Type"]], "kcomplex_type (type attribute)": [[191, "skia.RRect.Type.kComplex_Type"]], "kempty_type (type attribute)": [[191, "skia.RRect.Type.kEmpty_Type"]], "klasttype (type attribute)": [[191, "skia.RRect.Type.kLastType"]], "kninepatch_type (type attribute)": [[191, "skia.RRect.Type.kNinePatch_Type"]], "koval_type (type attribute)": [[191, "skia.RRect.Type.kOval_Type"]], "krect_type (type attribute)": [[191, "skia.RRect.Type.kRect_Type"]], "ksimple_type (type attribute)": [[191, "skia.RRect.Type.kSimple_Type"]], "make() (rsxform static method)": [[192, "skia.RSXform.Make"]], "makefromradians() (rsxform static method)": [[192, "skia.RSXform.MakeFromRadians"]], "rsxform (class in skia)": [[192, "skia.RSXform"]], "__init__() (rsxform method)": [[192, "skia.RSXform.__init__"]], "fscos (rsxform attribute)": [[192, "skia.RSXform.fSCos"]], "fssin (rsxform attribute)": [[192, "skia.RSXform.fSSin"]], "ftx (rsxform attribute)": [[192, "skia.RSXform.fTx"]], "fty (rsxform attribute)": [[192, "skia.RSXform.fTy"]], "rectstaysrect() (rsxform method)": [[192, "skia.RSXform.rectStaysRect"]], "set() (rsxform method)": [[192, "skia.RSXform.set"]], "setidentity() (rsxform method)": [[192, "skia.RSXform.setIdentity"]], "toquad() (rsxform method)": [[192, "skia.RSXform.toQuad"]], "totristrip() (rsxform method)": [[192, "skia.RSXform.toTriStrip"]], "rtreefactory (class in skia)": [[193, "skia.RTreeFactory"]], "__init__() (rtreefactory method)": [[193, "skia.RTreeFactory.__init__"]], "intersects() (rect static method)": [[194, "skia.Rect.Intersects"]], "make() (rect static method)": [[194, "skia.Rect.Make"]], "makeempty() (rect static method)": [[194, "skia.Rect.MakeEmpty"]], "makeiwh() (rect static method)": [[194, "skia.Rect.MakeIWH"]], "makeltrb() (rect static method)": [[194, "skia.Rect.MakeLTRB"]], "makesize() (rect static method)": [[194, "skia.Rect.MakeSize"]], "makewh() (rect static method)": [[194, "skia.Rect.MakeWH"]], "makexywh() (rect static method)": [[194, "skia.Rect.MakeXYWH"]], "rect (class in skia)": [[194, "skia.Rect"]], "__init__() (rect method)": [[194, "skia.Rect.__init__"]], "asscalars() (rect method)": [[194, "skia.Rect.asScalars"]], "bottom() (rect method)": [[194, "skia.Rect.bottom"]], "centerx() (rect method)": [[194, "skia.Rect.centerX"]], "centery() (rect method)": [[194, "skia.Rect.centerY"]], "contains() (rect method)": [[194, "skia.Rect.contains"]], "dump() (rect method)": [[194, "skia.Rect.dump"]], "dumphex() (rect method)": [[194, "skia.Rect.dumpHex"]], "fbottom (rect attribute)": [[194, "skia.Rect.fBottom"]], "fleft (rect attribute)": [[194, "skia.Rect.fLeft"]], "fright (rect attribute)": [[194, "skia.Rect.fRight"]], "ftop (rect attribute)": [[194, "skia.Rect.fTop"]], "height() (rect method)": [[194, "skia.Rect.height"]], "inset() (rect method)": [[194, "skia.Rect.inset"]], "intersect() (rect method)": [[194, "skia.Rect.intersect"]], "intersects() (rect method)": [[194, "skia.Rect.intersects"]], "isempty() (rect method)": [[194, "skia.Rect.isEmpty"]], "isfinite() (rect method)": [[194, "skia.Rect.isFinite"]], "issorted() (rect method)": [[194, "skia.Rect.isSorted"]], "join() (rect method)": [[194, "skia.Rect.join"]], "joinnonemptyarg() (rect method)": [[194, "skia.Rect.joinNonEmptyArg"]], "joinpossiblyemptyrect() (rect method)": [[194, "skia.Rect.joinPossiblyEmptyRect"]], "left() (rect method)": [[194, "skia.Rect.left"]], "makeinset() (rect method)": [[194, "skia.Rect.makeInset"]], "makeoffset() (rect method)": [[194, "skia.Rect.makeOffset"]], "makeoutset() (rect method)": [[194, "skia.Rect.makeOutset"]], "makesorted() (rect method)": [[194, "skia.Rect.makeSorted"]], "offset() (rect method)": [[194, "skia.Rect.offset"]], "offsetto() (rect method)": [[194, "skia.Rect.offsetTo"]], "outset() (rect method)": [[194, "skia.Rect.outset"]], "right() (rect method)": [[194, "skia.Rect.right"]], "round() (rect method)": [[194, "skia.Rect.round"]], "roundin() (rect method)": [[194, "skia.Rect.roundIn"]], "roundout() (rect method)": [[194, "skia.Rect.roundOut"]], "set() (rect method)": [[194, "skia.Rect.set"]], "setbounds() (rect method)": [[194, "skia.Rect.setBounds"]], "setboundscheck() (rect method)": [[194, "skia.Rect.setBoundsCheck"]], "setboundsnocheck() (rect method)": [[194, "skia.Rect.setBoundsNoCheck"]], "setempty() (rect method)": [[194, "skia.Rect.setEmpty"]], "setiwh() (rect method)": [[194, "skia.Rect.setIWH"]], "setltrb() (rect method)": [[194, "skia.Rect.setLTRB"]], "setwh() (rect method)": [[194, "skia.Rect.setWH"]], "setxywh() (rect method)": [[194, "skia.Rect.setXYWH"]], "sort() (rect method)": [[194, "skia.Rect.sort"]], "toquad() (rect method)": [[194, "skia.Rect.toQuad"]], "top() (rect method)": [[194, "skia.Rect.top"]], "width() (rect method)": [[194, "skia.Rect.width"]], "x() (rect method)": [[194, "skia.Rect.x"]], "y() (rect method)": [[194, "skia.Rect.y"]], "refcnt (class in skia)": [[195, "skia.RefCnt"]], "__init__() (refcnt method)": [[195, "skia.RefCnt.__init__"]], "ref() (refcnt method)": [[195, "skia.RefCnt.ref"]], "unique() (refcnt method)": [[195, "skia.RefCnt.unique"]], "unref() (refcnt method)": [[195, "skia.RefCnt.unref"]], "refcntbase (class in skia)": [[196, "skia.RefCntBase"]], "__init__() (refcntbase method)": [[196, "skia.RefCntBase.__init__"]], "ref() (refcntbase method)": [[196, "skia.RefCntBase.ref"]], "unique() (refcntbase method)": [[196, "skia.RefCntBase.unique"]], "unref() (refcntbase method)": [[196, "skia.RefCntBase.unref"]], "region (class in skia)": [[197, "skia.Region"]], "__init__() (region method)": [[197, "skia.Region.__init__"]], "cliperator() (region method)": [[197, "skia.Region.cliperator"]], "computeregioncomplexity() (region method)": [[197, "skia.Region.computeRegionComplexity"]], "contains() (region method)": [[197, "skia.Region.contains"]], "getboundarypath() (region method)": [[197, "skia.Region.getBoundaryPath"]], "getbounds() (region method)": [[197, "skia.Region.getBounds"]], "intersects() (region method)": [[197, "skia.Region.intersects"]], "iscomplex() (region method)": [[197, "skia.Region.isComplex"]], "isempty() (region method)": [[197, "skia.Region.isEmpty"]], "isrect() (region method)": [[197, "skia.Region.isRect"]], "iterator() (region method)": [[197, "skia.Region.iterator"]], "kdifference_op (region attribute)": [[197, "skia.Region.kDifference_Op"]], "kintersect_op (region attribute)": [[197, "skia.Region.kIntersect_Op"]], "klastop (region attribute)": [[197, "skia.Region.kLastOp"]], "kopcnt (region attribute)": [[197, "skia.Region.kOpCnt"]], "kreplace_op (region attribute)": [[197, "skia.Region.kReplace_Op"]], "kreversedifference_op (region attribute)": [[197, "skia.Region.kReverseDifference_Op"]], "kunion_op (region attribute)": [[197, "skia.Region.kUnion_Op"]], "kxor_op (region attribute)": [[197, "skia.Region.kXOR_Op"]], "op() (region method)": [[197, "skia.Region.op"]], "quickcontains() (region method)": [[197, "skia.Region.quickContains"]], "quickreject() (region method)": [[197, "skia.Region.quickReject"]], "readfrommemory() (region method)": [[197, "skia.Region.readFromMemory"]], "set() (region method)": [[197, "skia.Region.set"]], "setempty() (region method)": [[197, "skia.Region.setEmpty"]], "setpath() (region method)": [[197, "skia.Region.setPath"]], "setrect() (region method)": [[197, "skia.Region.setRect"]], "setrects() (region method)": [[197, "skia.Region.setRects"]], "setregion() (region method)": [[197, "skia.Region.setRegion"]], "spanerator() (region method)": [[197, "skia.Region.spanerator"]], "swap() (region method)": [[197, "skia.Region.swap"]], "translate() (region method)": [[197, "skia.Region.translate"]], "writetomemory() (region method)": [[197, "skia.Region.writeToMemory"]], "cliperator (class in skia.region)": [[198, "skia.Region.Cliperator"]], "__init__() (cliperator method)": [[198, "skia.Region.Cliperator.__init__"]], "done() (cliperator method)": [[198, "skia.Region.Cliperator.done"]], "next() (cliperator method)": [[198, "skia.Region.Cliperator.next"]], "rect() (cliperator method)": [[198, "skia.Region.Cliperator.rect"]], "iterator (class in skia.region)": [[199, "skia.Region.Iterator"]], "__init__() (iterator method)": [[199, "skia.Region.Iterator.__init__"]], "done() (iterator method)": [[199, "skia.Region.Iterator.done"]], "next() (iterator method)": [[199, "skia.Region.Iterator.next"]], "rect() (iterator method)": [[199, "skia.Region.Iterator.rect"]], "reset() (iterator method)": [[199, "skia.Region.Iterator.reset"]], "rewind() (iterator method)": [[199, "skia.Region.Iterator.rewind"]], "rgn() (iterator method)": [[199, "skia.Region.Iterator.rgn"]], "op (class in skia.region)": [[200, "skia.Region.Op"]], "__init__() (op method)": [[200, "skia.Region.Op.__init__"]], "kdifference_op (op attribute)": [[200, "skia.Region.Op.kDifference_Op"]], "kintersect_op (op attribute)": [[200, "skia.Region.Op.kIntersect_Op"]], "klastop (op attribute)": [[200, "skia.Region.Op.kLastOp"]], "kreplace_op (op attribute)": [[200, "skia.Region.Op.kReplace_Op"]], "kreversedifference_op (op attribute)": [[200, "skia.Region.Op.kReverseDifference_Op"]], "kunion_op (op attribute)": [[200, "skia.Region.Op.kUnion_Op"]], "kxor_op (op attribute)": [[200, "skia.Region.Op.kXOR_Op"]], "name (op attribute)": [[200, "skia.Region.Op.name"]], "value (op attribute)": [[200, "skia.Region.Op.value"]], "spanerator (class in skia.region)": [[201, "skia.Region.Spanerator"]], "__init__() (spanerator method)": [[201, "skia.Region.Spanerator.__init__"]], "next() (spanerator method)": [[201, "skia.Region.Spanerator.next"]], "make() (svgcanvas static method)": [[202, "skia.SVGCanvas.Make"]], "svgcanvas (class in skia)": [[202, "skia.SVGCanvas"]], "__init__() (svgcanvas method)": [[202, "skia.SVGCanvas.__init__"]], "kconverttexttopaths_flag (svgcanvas attribute)": [[202, "skia.SVGCanvas.kConvertTextToPaths_Flag"]], "knoprettyxml_flag (svgcanvas attribute)": [[202, "skia.SVGCanvas.kNoPrettyXML_Flag"]], "makefromstream() (svgdom static method)": [[203, "skia.SVGDOM.MakeFromStream"]], "svgdom (class in skia)": [[203, "skia.SVGDOM"]], "__init__() (svgdom method)": [[203, "skia.SVGDOM.__init__"]], "containersize() (svgdom method)": [[203, "skia.SVGDOM.containerSize"]], "ref() (svgdom method)": [[203, "skia.SVGDOM.ref"]], "render() (svgdom method)": [[203, "skia.SVGDOM.render"]], "rendernode() (svgdom method)": [[203, "skia.SVGDOM.renderNode"]], "setcontainersize() (svgdom method)": [[203, "skia.SVGDOM.setContainerSize"]], "unique() (svgdom method)": [[203, "skia.SVGDOM.unique"]], "unref() (svgdom method)": [[203, "skia.SVGDOM.unref"]], "samplingoptions (class in skia)": [[204, "skia.SamplingOptions"]], "__init__() (samplingoptions method)": [[204, "skia.SamplingOptions.__init__"]], "deserialize() (shader static method)": [[205, "skia.Shader.Deserialize"]], "shader (class in skia)": [[205, "skia.Shader"]], "__init__() (shader method)": [[205, "skia.Shader.__init__"]], "getflattenabletype() (shader method)": [[205, "skia.Shader.getFlattenableType"]], "gettypename() (shader method)": [[205, "skia.Shader.getTypeName"]], "isaimage() (shader method)": [[205, "skia.Shader.isAImage"]], "isopaque() (shader method)": [[205, "skia.Shader.isOpaque"]], "kcolorfilter_type (shader attribute)": [[205, "skia.Shader.kColorFilter_Type"]], "kdrawlooper_type (shader attribute)": [[205, "skia.Shader.kDrawLooper_Type"]], "kdrawable_type (shader attribute)": [[205, "skia.Shader.kDrawable_Type"]], "kimagefilter_type (shader attribute)": [[205, "skia.Shader.kImageFilter_Type"]], "kmaskfilter_type (shader attribute)": [[205, "skia.Shader.kMaskFilter_Type"]], "kpatheffect_type (shader attribute)": [[205, "skia.Shader.kPathEffect_Type"]], "makewithcolorfilter() (shader method)": [[205, "skia.Shader.makeWithColorFilter"]], "makewithlocalmatrix() (shader method)": [[205, "skia.Shader.makeWithLocalMatrix"]], "ref() (shader method)": [[205, "skia.Shader.ref"]], "serialize() (shader method)": [[205, "skia.Shader.serialize"]], "unique() (shader method)": [[205, "skia.Shader.unique"]], "unref() (shader method)": [[205, "skia.Shader.unref"]], "type (class in skia.shader)": [[206, "skia.Shader.Type"]], "make() (shadermaskfilter static method)": [[207, "skia.ShaderMaskFilter.Make"]], "shadermaskfilter (class in skia)": [[207, "skia.ShaderMaskFilter"]], "__init__() (shadermaskfilter method)": [[207, "skia.ShaderMaskFilter.__init__"]], "blend() (shaders static method)": [[208, "skia.Shaders.Blend"]], "color() (shaders static method)": [[208, "skia.Shaders.Color"]], "empty() (shaders static method)": [[208, "skia.Shaders.Empty"]], "lerp() (shaders static method)": [[208, "skia.Shaders.Lerp"]], "shaders (class in skia)": [[208, "skia.Shaders"]], "__init__() (shaders method)": [[208, "skia.Shaders.__init__"]], "make() (size static method)": [[209, "skia.Size.Make"]], "makeempty() (size static method)": [[209, "skia.Size.MakeEmpty"]], "size (class in skia)": [[209, "skia.Size"]], "__init__() (size method)": [[209, "skia.Size.__init__"]], "equals() (size method)": [[209, "skia.Size.equals"]], "fheight (size attribute)": [[209, "skia.Size.fHeight"]], "fwidth (size attribute)": [[209, "skia.Size.fWidth"]], "height() (size method)": [[209, "skia.Size.height"]], "isempty() (size method)": [[209, "skia.Size.isEmpty"]], "iszero() (size method)": [[209, "skia.Size.isZero"]], "set() (size method)": [[209, "skia.Size.set"]], "setempty() (size method)": [[209, "skia.Size.setEmpty"]], "toceil() (size method)": [[209, "skia.Size.toCeil"]], "tofloor() (size method)": [[209, "skia.Size.toFloor"]], "toround() (size method)": [[209, "skia.Size.toRound"]], "width() (size method)": [[209, "skia.Size.width"]], "makefromfile() (stream static method)": [[210, "skia.Stream.MakeFromFile"]], "stream (class in skia)": [[210, "skia.Stream"]], "__init__() (stream method)": [[210, "skia.Stream.__init__"]], "duplicate() (stream method)": [[210, "skia.Stream.duplicate"]], "fork() (stream method)": [[210, "skia.Stream.fork"]], "getlength() (stream method)": [[210, "skia.Stream.getLength"]], "getmemorybase() (stream method)": [[210, "skia.Stream.getMemoryBase"]], "getposition() (stream method)": [[210, "skia.Stream.getPosition"]], "haslength() (stream method)": [[210, "skia.Stream.hasLength"]], "hasposition() (stream method)": [[210, "skia.Stream.hasPosition"]], "isatend() (stream method)": [[210, "skia.Stream.isAtEnd"]], "move() (stream method)": [[210, "skia.Stream.move"]], "peek() (stream method)": [[210, "skia.Stream.peek"]], "read() (stream method)": [[210, "skia.Stream.read"]], "readbool() (stream method)": [[210, "skia.Stream.readBool"]], "readpackeduint() (stream method)": [[210, "skia.Stream.readPackedUInt"]], "reads16() (stream method)": [[210, "skia.Stream.readS16"]], "reads32() (stream method)": [[210, "skia.Stream.readS32"]], "reads8() (stream method)": [[210, "skia.Stream.readS8"]], "readscalar() (stream method)": [[210, "skia.Stream.readScalar"]], "readu16() (stream method)": [[210, "skia.Stream.readU16"]], "readu32() (stream method)": [[210, "skia.Stream.readU32"]], "readu8() (stream method)": [[210, "skia.Stream.readU8"]], "rewind() (stream method)": [[210, "skia.Stream.rewind"]], "seek() (stream method)": [[210, "skia.Stream.seek"]], "skip() (stream method)": [[210, "skia.Stream.skip"]], "makefromfile() (streamasset static method)": [[211, "skia.StreamAsset.MakeFromFile"]], "streamasset (class in skia)": [[211, "skia.StreamAsset"]], "__init__() (streamasset method)": [[211, "skia.StreamAsset.__init__"]], "duplicate() (streamasset method)": [[211, "skia.StreamAsset.duplicate"]], "fork() (streamasset method)": [[211, "skia.StreamAsset.fork"]], "getlength() (streamasset method)": [[211, "skia.StreamAsset.getLength"]], "getmemorybase() (streamasset method)": [[211, "skia.StreamAsset.getMemoryBase"]], "getposition() (streamasset method)": [[211, "skia.StreamAsset.getPosition"]], "haslength() (streamasset method)": [[211, "skia.StreamAsset.hasLength"]], "hasposition() (streamasset method)": [[211, "skia.StreamAsset.hasPosition"]], "isatend() (streamasset method)": [[211, "skia.StreamAsset.isAtEnd"]], "move() (streamasset method)": [[211, "skia.StreamAsset.move"]], "peek() (streamasset method)": [[211, "skia.StreamAsset.peek"]], "read() (streamasset method)": [[211, "skia.StreamAsset.read"]], "readbool() (streamasset method)": [[211, "skia.StreamAsset.readBool"]], "readpackeduint() (streamasset method)": [[211, "skia.StreamAsset.readPackedUInt"]], "reads16() (streamasset method)": [[211, "skia.StreamAsset.readS16"]], "reads32() (streamasset method)": [[211, "skia.StreamAsset.readS32"]], "reads8() (streamasset method)": [[211, "skia.StreamAsset.readS8"]], "readscalar() (streamasset method)": [[211, "skia.StreamAsset.readScalar"]], "readu16() (streamasset method)": [[211, "skia.StreamAsset.readU16"]], "readu32() (streamasset method)": [[211, "skia.StreamAsset.readU32"]], "readu8() (streamasset method)": [[211, "skia.StreamAsset.readU8"]], "rewind() (streamasset method)": [[211, "skia.StreamAsset.rewind"]], "seek() (streamasset method)": [[211, "skia.StreamAsset.seek"]], "skip() (streamasset method)": [[211, "skia.StreamAsset.skip"]], "makefromfile() (streammemory static method)": [[212, "skia.StreamMemory.MakeFromFile"]], "streammemory (class in skia)": [[212, "skia.StreamMemory"]], "__init__() (streammemory method)": [[212, "skia.StreamMemory.__init__"]], "duplicate() (streammemory method)": [[212, "skia.StreamMemory.duplicate"]], "fork() (streammemory method)": [[212, "skia.StreamMemory.fork"]], "getlength() (streammemory method)": [[212, "skia.StreamMemory.getLength"]], "getmemorybase() (streammemory method)": [[212, "skia.StreamMemory.getMemoryBase"]], "getposition() (streammemory method)": [[212, "skia.StreamMemory.getPosition"]], "haslength() (streammemory method)": [[212, "skia.StreamMemory.hasLength"]], "hasposition() (streammemory method)": [[212, "skia.StreamMemory.hasPosition"]], "isatend() (streammemory method)": [[212, "skia.StreamMemory.isAtEnd"]], "move() (streammemory method)": [[212, "skia.StreamMemory.move"]], "peek() (streammemory method)": [[212, "skia.StreamMemory.peek"]], "read() (streammemory method)": [[212, "skia.StreamMemory.read"]], "readbool() (streammemory method)": [[212, "skia.StreamMemory.readBool"]], "readpackeduint() (streammemory method)": [[212, "skia.StreamMemory.readPackedUInt"]], "reads16() (streammemory method)": [[212, "skia.StreamMemory.readS16"]], "reads32() (streammemory method)": [[212, "skia.StreamMemory.readS32"]], "reads8() (streammemory method)": [[212, "skia.StreamMemory.readS8"]], "readscalar() (streammemory method)": [[212, "skia.StreamMemory.readScalar"]], "readu16() (streammemory method)": [[212, "skia.StreamMemory.readU16"]], "readu32() (streammemory method)": [[212, "skia.StreamMemory.readU32"]], "readu8() (streammemory method)": [[212, "skia.StreamMemory.readU8"]], "rewind() (streammemory method)": [[212, "skia.StreamMemory.rewind"]], "seek() (streammemory method)": [[212, "skia.StreamMemory.seek"]], "skip() (streammemory method)": [[212, "skia.StreamMemory.skip"]], "makefromfile() (streamrewindable static method)": [[213, "skia.StreamRewindable.MakeFromFile"]], "streamrewindable (class in skia)": [[213, "skia.StreamRewindable"]], "__init__() (streamrewindable method)": [[213, "skia.StreamRewindable.__init__"]], "duplicate() (streamrewindable method)": [[213, "skia.StreamRewindable.duplicate"]], "fork() (streamrewindable method)": [[213, "skia.StreamRewindable.fork"]], "getlength() (streamrewindable method)": [[213, "skia.StreamRewindable.getLength"]], "getmemorybase() (streamrewindable method)": [[213, "skia.StreamRewindable.getMemoryBase"]], "getposition() (streamrewindable method)": [[213, "skia.StreamRewindable.getPosition"]], "haslength() (streamrewindable method)": [[213, "skia.StreamRewindable.hasLength"]], "hasposition() (streamrewindable method)": [[213, "skia.StreamRewindable.hasPosition"]], "isatend() (streamrewindable method)": [[213, "skia.StreamRewindable.isAtEnd"]], "move() (streamrewindable method)": [[213, "skia.StreamRewindable.move"]], "peek() (streamrewindable method)": [[213, "skia.StreamRewindable.peek"]], "read() (streamrewindable method)": [[213, "skia.StreamRewindable.read"]], "readbool() (streamrewindable method)": [[213, "skia.StreamRewindable.readBool"]], "readpackeduint() (streamrewindable method)": [[213, "skia.StreamRewindable.readPackedUInt"]], "reads16() (streamrewindable method)": [[213, "skia.StreamRewindable.readS16"]], "reads32() (streamrewindable method)": [[213, "skia.StreamRewindable.readS32"]], "reads8() (streamrewindable method)": [[213, "skia.StreamRewindable.readS8"]], "readscalar() (streamrewindable method)": [[213, "skia.StreamRewindable.readScalar"]], "readu16() (streamrewindable method)": [[213, "skia.StreamRewindable.readU16"]], "readu32() (streamrewindable method)": [[213, "skia.StreamRewindable.readU32"]], "readu8() (streamrewindable method)": [[213, "skia.StreamRewindable.readU8"]], "rewind() (streamrewindable method)": [[213, "skia.StreamRewindable.rewind"]], "seek() (streamrewindable method)": [[213, "skia.StreamRewindable.seek"]], "skip() (streamrewindable method)": [[213, "skia.StreamRewindable.skip"]], "makefromfile() (streamseekable static method)": [[214, "skia.StreamSeekable.MakeFromFile"]], "streamseekable (class in skia)": [[214, "skia.StreamSeekable"]], "__init__() (streamseekable method)": [[214, "skia.StreamSeekable.__init__"]], "duplicate() (streamseekable method)": [[214, "skia.StreamSeekable.duplicate"]], "fork() (streamseekable method)": [[214, "skia.StreamSeekable.fork"]], "getlength() (streamseekable method)": [[214, "skia.StreamSeekable.getLength"]], "getmemorybase() (streamseekable method)": [[214, "skia.StreamSeekable.getMemoryBase"]], "getposition() (streamseekable method)": [[214, "skia.StreamSeekable.getPosition"]], "haslength() (streamseekable method)": [[214, "skia.StreamSeekable.hasLength"]], "hasposition() (streamseekable method)": [[214, "skia.StreamSeekable.hasPosition"]], "isatend() (streamseekable method)": [[214, "skia.StreamSeekable.isAtEnd"]], "move() (streamseekable method)": [[214, "skia.StreamSeekable.move"]], "peek() (streamseekable method)": [[214, "skia.StreamSeekable.peek"]], "read() (streamseekable method)": [[214, "skia.StreamSeekable.read"]], "readbool() (streamseekable method)": [[214, "skia.StreamSeekable.readBool"]], "readpackeduint() (streamseekable method)": [[214, "skia.StreamSeekable.readPackedUInt"]], "reads16() (streamseekable method)": [[214, "skia.StreamSeekable.readS16"]], "reads32() (streamseekable method)": [[214, "skia.StreamSeekable.readS32"]], "reads8() (streamseekable method)": [[214, "skia.StreamSeekable.readS8"]], "readscalar() (streamseekable method)": [[214, "skia.StreamSeekable.readScalar"]], "readu16() (streamseekable method)": [[214, "skia.StreamSeekable.readU16"]], "readu32() (streamseekable method)": [[214, "skia.StreamSeekable.readU32"]], "readu8() (streamseekable method)": [[214, "skia.StreamSeekable.readU8"]], "rewind() (streamseekable method)": [[214, "skia.StreamSeekable.rewind"]], "seek() (streamseekable method)": [[214, "skia.StreamSeekable.seek"]], "skip() (streamseekable method)": [[214, "skia.StreamSeekable.skip"]], "string (class in skia)": [[215, "skia.String"]], "__init__() (string method)": [[215, "skia.String.__init__"]], "append() (string method)": [[215, "skia.String.append"]], "appendhex() (string method)": [[215, "skia.String.appendHex"]], "appends32() (string method)": [[215, "skia.String.appendS32"]], "appends64() (string method)": [[215, "skia.String.appendS64"]], "appendscalar() (string method)": [[215, "skia.String.appendScalar"]], "appendu32() (string method)": [[215, "skia.String.appendU32"]], "appendu64() (string method)": [[215, "skia.String.appendU64"]], "appendunichar() (string method)": [[215, "skia.String.appendUnichar"]], "c_str() (string method)": [[215, "skia.String.c_str"]], "contains() (string method)": [[215, "skia.String.contains"]], "endswith() (string method)": [[215, "skia.String.endsWith"]], "equals() (string method)": [[215, "skia.String.equals"]], "find() (string method)": [[215, "skia.String.find"]], "findlastof() (string method)": [[215, "skia.String.findLastOf"]], "insert() (string method)": [[215, "skia.String.insert"]], "inserthex() (string method)": [[215, "skia.String.insertHex"]], "inserts32() (string method)": [[215, "skia.String.insertS32"]], "inserts64() (string method)": [[215, "skia.String.insertS64"]], "insertscalar() (string method)": [[215, "skia.String.insertScalar"]], "insertu32() (string method)": [[215, "skia.String.insertU32"]], "insertu64() (string method)": [[215, "skia.String.insertU64"]], "insertunichar() (string method)": [[215, "skia.String.insertUnichar"]], "isempty() (string method)": [[215, "skia.String.isEmpty"]], "prepend() (string method)": [[215, "skia.String.prepend"]], "prependhex() (string method)": [[215, "skia.String.prependHex"]], "prepends32() (string method)": [[215, "skia.String.prependS32"]], "prepends64() (string method)": [[215, "skia.String.prependS64"]], "prependscalar() (string method)": [[215, "skia.String.prependScalar"]], "prependunichar() (string method)": [[215, "skia.String.prependUnichar"]], "remove() (string method)": [[215, "skia.String.remove"]], "reset() (string method)": [[215, "skia.String.reset"]], "resize() (string method)": [[215, "skia.String.resize"]], "set() (string method)": [[215, "skia.String.set"]], "size() (string method)": [[215, "skia.String.size"]], "startswith() (string method)": [[215, "skia.String.startsWith"]], "swap() (string method)": [[215, "skia.String.swap"]], "make() (strokepatheffect static method)": [[216, "skia.StrokePathEffect.Make"]], "strokepatheffect (class in skia)": [[216, "skia.StrokePathEffect"]], "__init__() (strokepatheffect method)": [[216, "skia.StrokePathEffect.__init__"]], "getinflationradius() (strokerec static method)": [[217, "skia.StrokeRec.GetInflationRadius"]], "strokerec (class in skia)": [[217, "skia.StrokeRec"]], "__init__() (strokerec method)": [[217, "skia.StrokeRec.__init__"]], "applytopaint() (strokerec method)": [[217, "skia.StrokeRec.applyToPaint"]], "applytopath() (strokerec method)": [[217, "skia.StrokeRec.applyToPath"]], "getcap() (strokerec method)": [[217, "skia.StrokeRec.getCap"]], "getinflationradius() (strokerec method)": [[217, "skia.StrokeRec.getInflationRadius"]], "getjoin() (strokerec method)": [[217, "skia.StrokeRec.getJoin"]], "getmiter() (strokerec method)": [[217, "skia.StrokeRec.getMiter"]], "getresscale() (strokerec method)": [[217, "skia.StrokeRec.getResScale"]], "getstyle() (strokerec method)": [[217, "skia.StrokeRec.getStyle"]], "getwidth() (strokerec method)": [[217, "skia.StrokeRec.getWidth"]], "hasequaleffect() (strokerec method)": [[217, "skia.StrokeRec.hasEqualEffect"]], "isfillstyle() (strokerec method)": [[217, "skia.StrokeRec.isFillStyle"]], "ishairlinestyle() (strokerec method)": [[217, "skia.StrokeRec.isHairlineStyle"]], "kfill_initstyle (strokerec attribute)": [[217, "skia.StrokeRec.kFill_InitStyle"]], "kfill_style (strokerec attribute)": [[217, "skia.StrokeRec.kFill_Style"]], "khairline_initstyle (strokerec attribute)": [[217, "skia.StrokeRec.kHairline_InitStyle"]], "khairline_style (strokerec attribute)": [[217, "skia.StrokeRec.kHairline_Style"]], "kstrokeandfill_style (strokerec attribute)": [[217, "skia.StrokeRec.kStrokeAndFill_Style"]], "kstroke_style (strokerec attribute)": [[217, "skia.StrokeRec.kStroke_Style"]], "kstylecount (strokerec attribute)": [[217, "skia.StrokeRec.kStyleCount"]], "needtoapply() (strokerec method)": [[217, "skia.StrokeRec.needToApply"]], "setfillstyle() (strokerec method)": [[217, "skia.StrokeRec.setFillStyle"]], "sethairlinestyle() (strokerec method)": [[217, "skia.StrokeRec.setHairlineStyle"]], "setresscale() (strokerec method)": [[217, "skia.StrokeRec.setResScale"]], "setstrokeparams() (strokerec method)": [[217, "skia.StrokeRec.setStrokeParams"]], "setstrokestyle() (strokerec method)": [[217, "skia.StrokeRec.setStrokeStyle"]], "initstyle (class in skia.strokerec)": [[218, "skia.StrokeRec.InitStyle"]], "__init__() (initstyle method)": [[218, "skia.StrokeRec.InitStyle.__init__"]], "kfill_initstyle (initstyle attribute)": [[218, "skia.StrokeRec.InitStyle.kFill_InitStyle"]], "khairline_initstyle (initstyle attribute)": [[218, "skia.StrokeRec.InitStyle.kHairline_InitStyle"]], "name (initstyle attribute)": [[218, "skia.StrokeRec.InitStyle.name"]], "value (initstyle attribute)": [[218, "skia.StrokeRec.InitStyle.value"]], "style (class in skia.strokerec)": [[219, "skia.StrokeRec.Style"]], "khairline_style (style attribute)": [[219, "skia.StrokeRec.Style.kHairline_Style"]], "makefrombackendrendertarget() (surface static method)": [[220, "skia.Surface.MakeFromBackendRenderTarget"]], "makefrombackendtexture() (surface static method)": [[220, "skia.Surface.MakeFromBackendTexture"]], "makenull() (surface static method)": [[220, "skia.Surface.MakeNull"]], "makeraster() (surface static method)": [[220, "skia.Surface.MakeRaster"]], "makerasterdirect() (surface static method)": [[220, "skia.Surface.MakeRasterDirect"]], "makerastern32premul() (surface static method)": [[220, "skia.Surface.MakeRasterN32Premul"]], "makerendertarget() (surface static method)": [[220, "skia.Surface.MakeRenderTarget"]], "surface (class in skia)": [[220, "skia.Surface"]], "__init__() (surface method)": [[220, "skia.Surface.__init__"]], "asyncrescaleandreadpixels() (surface method)": [[220, "skia.Surface.asyncRescaleAndReadPixels"]], "characterize() (surface method)": [[220, "skia.Surface.characterize"]], "draw() (surface method)": [[220, "skia.Surface.draw"]], "flush() (surface method)": [[220, "skia.Surface.flush"]], "flushandsubmit() (surface method)": [[220, "skia.Surface.flushAndSubmit"]], "generationid() (surface method)": [[220, "skia.Surface.generationID"]], "getbackendrendertarget() (surface method)": [[220, "skia.Surface.getBackendRenderTarget"]], "getbackendtexture() (surface method)": [[220, "skia.Surface.getBackendTexture"]], "getcanvas() (surface method)": [[220, "skia.Surface.getCanvas"]], "height() (surface method)": [[220, "skia.Surface.height"]], "imageinfo() (surface method)": [[220, "skia.Surface.imageInfo"]], "iscompatible() (surface method)": [[220, "skia.Surface.isCompatible"]], "kdiscardwrite_backendhandleaccess (surface attribute)": [[220, "skia.Surface.kDiscardWrite_BackendHandleAccess"]], "kdiscard_contentchangemode (surface attribute)": [[220, "skia.Surface.kDiscard_ContentChangeMode"]], "kflushread_backendhandleaccess (surface attribute)": [[220, "skia.Surface.kFlushRead_BackendHandleAccess"]], "kflushwrite_backendhandleaccess (surface attribute)": [[220, "skia.Surface.kFlushWrite_BackendHandleAccess"]], "klinear (surface attribute)": [[220, "skia.Surface.kLinear"]], "knoaccess (surface attribute)": [[220, "skia.Surface.kNoAccess"]], "kpresent (surface attribute)": [[220, "skia.Surface.kPresent"]], "kretain_contentchangemode (surface attribute)": [[220, "skia.Surface.kRetain_ContentChangeMode"]], "ksrc (surface attribute)": [[220, "skia.Surface.kSrc"]], "makeimagesnapshot() (surface method)": [[220, "skia.Surface.makeImageSnapshot"]], "makesurface() (surface method)": [[220, "skia.Surface.makeSurface"]], "notifycontentwillchange() (surface method)": [[220, "skia.Surface.notifyContentWillChange"]], "peekpixels() (surface method)": [[220, "skia.Surface.peekPixels"]], "props() (surface method)": [[220, "skia.Surface.props"]], "readpixels() (surface method)": [[220, "skia.Surface.readPixels"]], "recordingcontext() (surface method)": [[220, "skia.Surface.recordingContext"]], "ref() (surface method)": [[220, "skia.Surface.ref"]], "replacebackendtexture() (surface method)": [[220, "skia.Surface.replaceBackendTexture"]], "toarray() (surface method)": [[220, "skia.Surface.toarray"]], "unique() (surface method)": [[220, "skia.Surface.unique"]], "unref() (surface method)": [[220, "skia.Surface.unref"]], "width() (surface method)": [[220, "skia.Surface.width"]], "writepixels() (surface method)": [[220, "skia.Surface.writePixels"]], "asyncreadresult (class in skia.surface)": [[221, "skia.Surface.AsyncReadResult"]], "__init__() (asyncreadresult method)": [[221, "skia.Surface.AsyncReadResult.__init__"]], "count() (asyncreadresult method)": [[221, "skia.Surface.AsyncReadResult.count"]], "data() (asyncreadresult method)": [[221, "skia.Surface.AsyncReadResult.data"]], "rowbytes() (asyncreadresult method)": [[221, "skia.Surface.AsyncReadResult.rowBytes"]], "backendhandleaccess (class in skia.surface)": [[222, "skia.Surface.BackendHandleAccess"]], "__init__() (backendhandleaccess method)": [[222, "skia.Surface.BackendHandleAccess.__init__"]], "kdiscardwrite_backendhandleaccess (backendhandleaccess attribute)": [[222, "skia.Surface.BackendHandleAccess.kDiscardWrite_BackendHandleAccess"]], "kflushread_backendhandleaccess (backendhandleaccess attribute)": [[222, "skia.Surface.BackendHandleAccess.kFlushRead_BackendHandleAccess"]], "kflushwrite_backendhandleaccess (backendhandleaccess attribute)": [[222, "skia.Surface.BackendHandleAccess.kFlushWrite_BackendHandleAccess"]], "name (backendhandleaccess attribute)": [[222, "skia.Surface.BackendHandleAccess.name"]], "value (backendhandleaccess attribute)": [[222, "skia.Surface.BackendHandleAccess.value"]], "backendsurfaceaccess (class in skia.surface)": [[223, "skia.Surface.BackendSurfaceAccess"]], "__init__() (backendsurfaceaccess method)": [[223, "skia.Surface.BackendSurfaceAccess.__init__"]], "knoaccess (backendsurfaceaccess attribute)": [[223, "skia.Surface.BackendSurfaceAccess.kNoAccess"]], "kpresent (backendsurfaceaccess attribute)": [[223, "skia.Surface.BackendSurfaceAccess.kPresent"]], "name (backendsurfaceaccess attribute)": [[223, "skia.Surface.BackendSurfaceAccess.name"]], "value (backendsurfaceaccess attribute)": [[223, "skia.Surface.BackendSurfaceAccess.value"]], "contentchangemode (class in skia.surface)": [[224, "skia.Surface.ContentChangeMode"]], "__init__() (contentchangemode method)": [[224, "skia.Surface.ContentChangeMode.__init__"]], "kdiscard_contentchangemode (contentchangemode attribute)": [[224, "skia.Surface.ContentChangeMode.kDiscard_ContentChangeMode"]], "kretain_contentchangemode (contentchangemode attribute)": [[224, "skia.Surface.ContentChangeMode.kRetain_ContentChangeMode"]], "name (contentchangemode attribute)": [[224, "skia.Surface.ContentChangeMode.name"]], "value (contentchangemode attribute)": [[224, "skia.Surface.ContentChangeMode.value"]], "rescalegamma (class in skia.surface)": [[225, "skia.Surface.RescaleGamma"]], "__init__() (rescalegamma method)": [[225, "skia.Surface.RescaleGamma.__init__"]], "klinear (rescalegamma attribute)": [[225, "skia.Surface.RescaleGamma.kLinear"]], "ksrc (rescalegamma attribute)": [[225, "skia.Surface.RescaleGamma.kSrc"]], "name (rescalegamma attribute)": [[225, "skia.Surface.RescaleGamma.name"]], "value (rescalegamma attribute)": [[225, "skia.Surface.RescaleGamma.value"]], "surfacecharacterization (class in skia)": [[226, "skia.SurfaceCharacterization"]], "__init__() (surfacecharacterization method)": [[226, "skia.SurfaceCharacterization.__init__"]], "cachemaxresourcebytes() (surfacecharacterization method)": [[226, "skia.SurfaceCharacterization.cacheMaxResourceBytes"]], "colorspace() (surfacecharacterization method)": [[226, "skia.SurfaceCharacterization.colorSpace"]], "createbackendformat() (surfacecharacterization method)": [[226, "skia.SurfaceCharacterization.createBackendFormat"]], "createcolorspace() (surfacecharacterization method)": [[226, "skia.SurfaceCharacterization.createColorSpace"]], "createfbo0() (surfacecharacterization method)": [[226, "skia.SurfaceCharacterization.createFBO0"]], "createresized() (surfacecharacterization method)": [[226, "skia.SurfaceCharacterization.createResized"]], "height() (surfacecharacterization method)": [[226, "skia.SurfaceCharacterization.height"]], "ismipmapped() (surfacecharacterization method)": [[226, "skia.SurfaceCharacterization.isMipMapped"]], "istextureable() (surfacecharacterization method)": [[226, "skia.SurfaceCharacterization.isTextureable"]], "isvalid() (surfacecharacterization method)": [[226, "skia.SurfaceCharacterization.isValid"]], "refcolorspace() (surfacecharacterization method)": [[226, "skia.SurfaceCharacterization.refColorSpace"]], "surfaceprops() (surfacecharacterization method)": [[226, "skia.SurfaceCharacterization.surfaceProps"]], "usesglfbo0() (surfacecharacterization method)": [[226, "skia.SurfaceCharacterization.usesGLFBO0"]], "vulkansecondarycbcompatible() (surfacecharacterization method)": [[226, "skia.SurfaceCharacterization.vulkanSecondaryCBCompatible"]], "width() (surfacecharacterization method)": [[226, "skia.SurfaceCharacterization.width"]], "surfaceprops (class in skia)": [[227, "skia.SurfaceProps"]], "__init__() (surfaceprops method)": [[227, "skia.SurfaceProps.__init__"]], "flags() (surfaceprops method)": [[227, "skia.SurfaceProps.flags"]], "isusedeviceindependentfonts() (surfaceprops method)": [[227, "skia.SurfaceProps.isUseDeviceIndependentFonts"]], "kusedeviceindependentfonts_flag (surfaceprops attribute)": [[227, "skia.SurfaceProps.kUseDeviceIndependentFonts_Flag"]], "kusedistancefieldfonts_flag (surfaceprops attribute)": [[227, "skia.SurfaceProps.kUseDistanceFieldFonts_Flag"]], "pixelgeometry() (surfaceprops method)": [[227, "skia.SurfaceProps.pixelGeometry"]], "flags (class in skia.surfaceprops)": [[228, "skia.SurfaceProps.Flags"]], "kusedeviceindependentfonts_flag (flags attribute)": [[228, "skia.SurfaceProps.Flags.kUseDeviceIndependentFonts_Flag"]], "create() (tablemaskfilter static method)": [[229, "skia.TableMaskFilter.Create"]], "createclip() (tablemaskfilter static method)": [[229, "skia.TableMaskFilter.CreateClip"]], "creategamma() (tablemaskfilter static method)": [[229, "skia.TableMaskFilter.CreateGamma"]], "makecliptable() (tablemaskfilter static method)": [[229, "skia.TableMaskFilter.MakeClipTable"]], "makegammatable() (tablemaskfilter static method)": [[229, "skia.TableMaskFilter.MakeGammaTable"]], "tablemaskfilter (class in skia)": [[229, "skia.TableMaskFilter"]], "__init__() (tablemaskfilter method)": [[229, "skia.TableMaskFilter.__init__"]], "deserialize() (textblob static method)": [[230, "skia.TextBlob.Deserialize"]], "makefrompostext() (textblob static method)": [[230, "skia.TextBlob.MakeFromPosText"]], "makefrompostexth() (textblob static method)": [[230, "skia.TextBlob.MakeFromPosTextH"]], "makefromrsxform() (textblob static method)": [[230, "skia.TextBlob.MakeFromRSXform"]], "makefromstring() (textblob static method)": [[230, "skia.TextBlob.MakeFromString"]], "makefromtext() (textblob static method)": [[230, "skia.TextBlob.MakeFromText"]], "textblob (class in skia)": [[230, "skia.TextBlob"]], "__init__() (textblob method)": [[230, "skia.TextBlob.__init__"]], "bounds() (textblob method)": [[230, "skia.TextBlob.bounds"]], "deref() (textblob method)": [[230, "skia.TextBlob.deref"]], "getintercepts() (textblob method)": [[230, "skia.TextBlob.getIntercepts"]], "ref() (textblob method)": [[230, "skia.TextBlob.ref"]], "refcntgreaterthan() (textblob method)": [[230, "skia.TextBlob.refCntGreaterThan"]], "serialize() (textblob method)": [[230, "skia.TextBlob.serialize"]], "unique() (textblob method)": [[230, "skia.TextBlob.unique"]], "uniqueid() (textblob method)": [[230, "skia.TextBlob.uniqueID"]], "unref() (textblob method)": [[230, "skia.TextBlob.unref"]], "iter (class in skia.textblob)": [[231, "skia.TextBlob.Iter"]], "run (class in skia.textblob.iter)": [[232, "skia.TextBlob.Iter.Run"]], "__init__() (run method)": [[232, "skia.TextBlob.Iter.Run.__init__"]], "fglyphcount (run attribute)": [[232, "skia.TextBlob.Iter.Run.fGlyphCount"]], "fglyphindices (run attribute)": [[232, "skia.TextBlob.Iter.Run.fGlyphIndices"]], "ftypeface (run attribute)": [[232, "skia.TextBlob.Iter.Run.fTypeface"]], "textblobbuilder (class in skia)": [[233, "skia.TextBlobBuilder"]], "__init__() (textblobbuilder method)": [[233, "skia.TextBlobBuilder.__init__"]], "allocrun() (textblobbuilder method)": [[233, "skia.TextBlobBuilder.allocRun"]], "allocrunpos() (textblobbuilder method)": [[233, "skia.TextBlobBuilder.allocRunPos"]], "allocrunposh() (textblobbuilder method)": [[233, "skia.TextBlobBuilder.allocRunPosH"]], "allocrunrsxform() (textblobbuilder method)": [[233, "skia.TextBlobBuilder.allocRunRSXform"]], "make() (textblobbuilder method)": [[233, "skia.TextBlobBuilder.make"]], "textencoding (class in skia)": [[234, "skia.TextEncoding"]], "__init__() (textencoding method)": [[234, "skia.TextEncoding.__init__"]], "kglyphid (textencoding attribute)": [[234, "skia.TextEncoding.kGlyphID"]], "kutf16 (textencoding attribute)": [[234, "skia.TextEncoding.kUTF16"]], "kutf32 (textencoding attribute)": [[234, "skia.TextEncoding.kUTF32"]], "kutf8 (textencoding attribute)": [[234, "skia.TextEncoding.kUTF8"]], "name (textencoding attribute)": [[234, "skia.TextEncoding.name"]], "value (textencoding attribute)": [[234, "skia.TextEncoding.value"]], "tilemode (class in skia)": [[235, "skia.TileMode"]], "__init__() (tilemode method)": [[235, "skia.TileMode.__init__"]], "kclamp (tilemode attribute)": [[235, "skia.TileMode.kClamp"]], "kdecal (tilemode attribute)": [[235, "skia.TileMode.kDecal"]], "klasttilemode (tilemode attribute)": [[235, "skia.TileMode.kLastTileMode"]], "kmirror (tilemode attribute)": [[235, "skia.TileMode.kMirror"]], "krepeat (tilemode attribute)": [[235, "skia.TileMode.kRepeat"]], "name (tilemode attribute)": [[235, "skia.TileMode.name"]], "value (tilemode attribute)": [[235, "skia.TileMode.value"]], "make() (trimpatheffect static method)": [[236, "skia.TrimPathEffect.Make"]], "trimpatheffect (class in skia)": [[236, "skia.TrimPathEffect"]], "__init__() (trimpatheffect method)": [[236, "skia.TrimPathEffect.__init__"]], "kinverted (trimpatheffect attribute)": [[236, "skia.TrimPathEffect.kInverted"]], "knormal (trimpatheffect attribute)": [[236, "skia.TrimPathEffect.kNormal"]], "mode (class in skia.trimpatheffect)": [[237, "skia.TrimPathEffect.Mode"]], "__init__() (mode method)": [[237, "skia.TrimPathEffect.Mode.__init__"]], "kinverted (mode attribute)": [[237, "skia.TrimPathEffect.Mode.kInverted"]], "knormal (mode attribute)": [[237, "skia.TrimPathEffect.Mode.kNormal"]], "name (mode attribute)": [[237, "skia.TrimPathEffect.Mode.name"]], "value (mode attribute)": [[237, "skia.TrimPathEffect.Mode.value"]], "equal() (typeface static method)": [[238, "skia.Typeface.Equal"]], "makedefault() (typeface static method)": [[238, "skia.Typeface.MakeDefault"]], "makedeserialize() (typeface static method)": [[238, "skia.Typeface.MakeDeserialize"]], "makefromdata() (typeface static method)": [[238, "skia.Typeface.MakeFromData"]], "makefromfile() (typeface static method)": [[238, "skia.Typeface.MakeFromFile"]], "makefromname() (typeface static method)": [[238, "skia.Typeface.MakeFromName"]], "typeface (class in skia)": [[238, "skia.Typeface"]], "uniqueid() (typeface static method)": [[238, "skia.Typeface.UniqueID"]], "__init__() (typeface method)": [[238, "skia.Typeface.__init__"]], "copytabledata() (typeface method)": [[238, "skia.Typeface.copyTableData"]], "countglyphs() (typeface method)": [[238, "skia.Typeface.countGlyphs"]], "counttables() (typeface method)": [[238, "skia.Typeface.countTables"]], "fontstyle() (typeface method)": [[238, "skia.Typeface.fontStyle"]], "getbounds() (typeface method)": [[238, "skia.Typeface.getBounds"]], "getfamilyname() (typeface method)": [[238, "skia.Typeface.getFamilyName"]], "getfamilynames() (typeface method)": [[238, "skia.Typeface.getFamilyNames"]], "getkerningpairadjustments() (typeface method)": [[238, "skia.Typeface.getKerningPairAdjustments"]], "getpostscriptname() (typeface method)": [[238, "skia.Typeface.getPostScriptName"]], "gettabledata() (typeface method)": [[238, "skia.Typeface.getTableData"]], "gettablesize() (typeface method)": [[238, "skia.Typeface.getTableSize"]], "gettabletags() (typeface method)": [[238, "skia.Typeface.getTableTags"]], "getunitsperem() (typeface method)": [[238, "skia.Typeface.getUnitsPerEm"]], "getvariationdesignparameters() (typeface method)": [[238, "skia.Typeface.getVariationDesignParameters"]], "getvariationdesignposition() (typeface method)": [[238, "skia.Typeface.getVariationDesignPosition"]], "isbold() (typeface method)": [[238, "skia.Typeface.isBold"]], "isfixedpitch() (typeface method)": [[238, "skia.Typeface.isFixedPitch"]], "isitalic() (typeface method)": [[238, "skia.Typeface.isItalic"]], "kdoincludedata (typeface attribute)": [[238, "skia.Typeface.kDoIncludeData"]], "kdontincludedata (typeface attribute)": [[238, "skia.Typeface.kDontIncludeData"]], "kincludedataiflocal (typeface attribute)": [[238, "skia.Typeface.kIncludeDataIfLocal"]], "makeclone() (typeface method)": [[238, "skia.Typeface.makeClone"]], "ref() (typeface method)": [[238, "skia.Typeface.ref"]], "serialize() (typeface method)": [[238, "skia.Typeface.serialize"]], "unichartoglyph() (typeface method)": [[238, "skia.Typeface.unicharToGlyph"]], "unicharstoglyphs() (typeface method)": [[238, "skia.Typeface.unicharsToGlyphs"]], "unique() (typeface method)": [[238, "skia.Typeface.unique"]], "uniqueid() (typeface method)": [[238, "skia.Typeface.uniqueID"]], "unref() (typeface method)": [[238, "skia.Typeface.unref"]], "serializebehavior (class in skia.typeface)": [[239, "skia.Typeface.SerializeBehavior"]], "__init__() (serializebehavior method)": [[239, "skia.Typeface.SerializeBehavior.__init__"]], "kdoincludedata (serializebehavior attribute)": [[239, "skia.Typeface.SerializeBehavior.kDoIncludeData"]], "kdontincludedata (serializebehavior attribute)": [[239, "skia.Typeface.SerializeBehavior.kDontIncludeData"]], "kincludedataiflocal (serializebehavior attribute)": [[239, "skia.Typeface.SerializeBehavior.kIncludeDataIfLocal"]], "name (serializebehavior attribute)": [[239, "skia.Typeface.SerializeBehavior.name"]], "value (serializebehavior attribute)": [[239, "skia.Typeface.SerializeBehavior.value"]], "makecopy() (vertices static method)": [[240, "skia.Vertices.MakeCopy"]], "vertices (class in skia)": [[240, "skia.Vertices"]], "__init__() (vertices method)": [[240, "skia.Vertices.__init__"]], "approximatesize() (vertices method)": [[240, "skia.Vertices.approximateSize"]], "bounds() (vertices method)": [[240, "skia.Vertices.bounds"]], "deref() (vertices method)": [[240, "skia.Vertices.deref"]], "klast_vertexmode (vertices attribute)": [[240, "skia.Vertices.kLast_VertexMode"]], "ktrianglefan_vertexmode (vertices attribute)": [[240, "skia.Vertices.kTriangleFan_VertexMode"]], "ktrianglestrip_vertexmode (vertices attribute)": [[240, "skia.Vertices.kTriangleStrip_VertexMode"]], "ktriangles_vertexmode (vertices attribute)": [[240, "skia.Vertices.kTriangles_VertexMode"]], "ref() (vertices method)": [[240, "skia.Vertices.ref"]], "refcntgreaterthan() (vertices method)": [[240, "skia.Vertices.refCntGreaterThan"]], "unique() (vertices method)": [[240, "skia.Vertices.unique"]], "uniqueid() (vertices method)": [[240, "skia.Vertices.uniqueID"]], "unref() (vertices method)": [[240, "skia.Vertices.unref"]], "vertexmode (class in skia.vertices)": [[241, "skia.Vertices.VertexMode"]], "__init__() (vertexmode method)": [[241, "skia.Vertices.VertexMode.__init__"]], "klast_vertexmode (vertexmode attribute)": [[241, "skia.Vertices.VertexMode.kLast_VertexMode"]], "ktrianglefan_vertexmode (vertexmode attribute)": [[241, "skia.Vertices.VertexMode.kTriangleFan_VertexMode"]], "ktrianglestrip_vertexmode (vertexmode attribute)": [[241, "skia.Vertices.VertexMode.kTriangleStrip_VertexMode"]], "ktriangles_vertexmode (vertexmode attribute)": [[241, "skia.Vertices.VertexMode.kTriangles_VertexMode"]], "name (vertexmode attribute)": [[241, "skia.Vertices.VertexMode.name"]], "value (vertexmode attribute)": [[241, "skia.Vertices.VertexMode.value"]], "vkformat (class in skia)": [[242, "skia.VkFormat"]], "__init__() (vkformat method)": [[242, "skia.VkFormat.__init__"]], "name (vkformat attribute)": [[242, "skia.VkFormat.name"]], "value (vkformat attribute)": [[242, "skia.VkFormat.value"]], "vkimagelayout (class in skia)": [[243, "skia.VkImageLayout"]], "__init__() (vkimagelayout method)": [[243, "skia.VkImageLayout.__init__"]], "name (vkimagelayout attribute)": [[243, "skia.VkImageLayout.name"]], "value (vkimagelayout attribute)": [[243, "skia.VkImageLayout.value"]], "sizeofpackeduint() (wstream static method)": [[244, "skia.WStream.SizeOfPackedUInt"]], "wstream (class in skia)": [[244, "skia.WStream"]], "__init__() (wstream method)": [[244, "skia.WStream.__init__"]], "byteswritten() (wstream method)": [[244, "skia.WStream.bytesWritten"]], "flush() (wstream method)": [[244, "skia.WStream.flush"]], "newline() (wstream method)": [[244, "skia.WStream.newline"]], "write() (wstream method)": [[244, "skia.WStream.write"]], "write16() (wstream method)": [[244, "skia.WStream.write16"]], "write32() (wstream method)": [[244, "skia.WStream.write32"]], "write8() (wstream method)": [[244, "skia.WStream.write8"]], "writebigdecastext() (wstream method)": [[244, "skia.WStream.writeBigDecAsText"]], "writebool() (wstream method)": [[244, "skia.WStream.writeBool"]], "writedecastext() (wstream method)": [[244, "skia.WStream.writeDecAsText"]], "writehexastext() (wstream method)": [[244, "skia.WStream.writeHexAsText"]], "writepackeduint() (wstream method)": [[244, "skia.WStream.writePackedUInt"]], "writescalar() (wstream method)": [[244, "skia.WStream.writeScalar"]], "writescalarastext() (wstream method)": [[244, "skia.WStream.writeScalarAsText"]], "writestream() (wstream method)": [[244, "skia.WStream.writeStream"]], "writetext() (wstream method)": [[244, "skia.WStream.writeText"]], "hasalpha() (yuvainfo static method)": [[245, "skia.YUVAInfo.HasAlpha"]], "numchannelsinplane() (yuvainfo static method)": [[245, "skia.YUVAInfo.NumChannelsInPlane"]], "numplanes() (yuvainfo static method)": [[245, "skia.YUVAInfo.NumPlanes"]], "planedimensions() (yuvainfo static method)": [[245, "skia.YUVAInfo.PlaneDimensions"]], "yuvainfo (class in skia)": [[245, "skia.YUVAInfo"]], "__init__() (yuvainfo method)": [[245, "skia.YUVAInfo.__init__"]], "computetotalbytes() (yuvainfo method)": [[245, "skia.YUVAInfo.computeTotalBytes"]], "dimensions() (yuvainfo method)": [[245, "skia.YUVAInfo.dimensions"]], "hasalpha() (yuvainfo method)": [[245, "skia.YUVAInfo.hasAlpha"]], "height() (yuvainfo method)": [[245, "skia.YUVAInfo.height"]], "k410 (yuvainfo attribute)": [[245, "skia.YUVAInfo.k410"]], "k411 (yuvainfo attribute)": [[245, "skia.YUVAInfo.k411"]], "k420 (yuvainfo attribute)": [[245, "skia.YUVAInfo.k420"]], "k422 (yuvainfo attribute)": [[245, "skia.YUVAInfo.k422"]], "k440 (yuvainfo attribute)": [[245, "skia.YUVAInfo.k440"]], "k444 (yuvainfo attribute)": [[245, "skia.YUVAInfo.k444"]], "kcentered (yuvainfo attribute)": [[245, "skia.YUVAInfo.kCentered"]], "kmaxplanes (yuvainfo attribute)": [[245, "skia.YUVAInfo.kMaxPlanes"]], "kuyv (yuvainfo attribute)": [[245, "skia.YUVAInfo.kUYV"]], "kuyva (yuvainfo attribute)": [[245, "skia.YUVAInfo.kUYVA"]], "kunknown (yuvainfo attribute)": [[245, "skia.YUVAInfo.kUnknown"]], "kyuv (yuvainfo attribute)": [[245, "skia.YUVAInfo.kYUV"]], "kyuva (yuvainfo attribute)": [[245, "skia.YUVAInfo.kYUVA"]], "ky_uv (yuvainfo attribute)": [[245, "skia.YUVAInfo.kY_UV"]], "ky_uv_a (yuvainfo attribute)": [[245, "skia.YUVAInfo.kY_UV_A"]], "ky_u_v (yuvainfo attribute)": [[245, "skia.YUVAInfo.kY_U_V"]], "ky_u_v_a (yuvainfo attribute)": [[245, "skia.YUVAInfo.kY_U_V_A"]], "ky_vu (yuvainfo attribute)": [[245, "skia.YUVAInfo.kY_VU"]], "ky_vu_a (yuvainfo attribute)": [[245, "skia.YUVAInfo.kY_VU_A"]], "ky_v_u (yuvainfo attribute)": [[245, "skia.YUVAInfo.kY_V_U"]], "ky_v_u_a (yuvainfo attribute)": [[245, "skia.YUVAInfo.kY_V_U_A"]], "numchannelsinplane() (yuvainfo method)": [[245, "skia.YUVAInfo.numChannelsInPlane"]], "numplanes() (yuvainfo method)": [[245, "skia.YUVAInfo.numPlanes"]], "origin() (yuvainfo method)": [[245, "skia.YUVAInfo.origin"]], "planeconfig() (yuvainfo method)": [[245, "skia.YUVAInfo.planeConfig"]], "planedimensions() (yuvainfo method)": [[245, "skia.YUVAInfo.planeDimensions"]], "sitingx() (yuvainfo method)": [[245, "skia.YUVAInfo.sitingX"]], "sitingy() (yuvainfo method)": [[245, "skia.YUVAInfo.sitingY"]], "subsampling() (yuvainfo method)": [[245, "skia.YUVAInfo.subSampling"]], "width() (yuvainfo method)": [[245, "skia.YUVAInfo.width"]], "yuvcolorspace() (yuvainfo method)": [[245, "skia.YUVAInfo.yuvColorSpace"]], "planeconfig (class in skia.yuvainfo)": [[246, "skia.YUVAInfo.PlaneConfig"]], "__init__() (planeconfig method)": [[246, "skia.YUVAInfo.PlaneConfig.__init__"]], "kuyv (planeconfig attribute)": [[246, "skia.YUVAInfo.PlaneConfig.kUYV"]], "kuyva (planeconfig attribute)": [[246, "skia.YUVAInfo.PlaneConfig.kUYVA"]], "kunknown (planeconfig attribute)": [[246, "skia.YUVAInfo.PlaneConfig.kUnknown"]], "kyuv (planeconfig attribute)": [[246, "skia.YUVAInfo.PlaneConfig.kYUV"]], "kyuva (planeconfig attribute)": [[246, "skia.YUVAInfo.PlaneConfig.kYUVA"]], "ky_uv (planeconfig attribute)": [[246, "skia.YUVAInfo.PlaneConfig.kY_UV"]], "ky_uv_a (planeconfig attribute)": [[246, "skia.YUVAInfo.PlaneConfig.kY_UV_A"]], "ky_u_v (planeconfig attribute)": [[246, "skia.YUVAInfo.PlaneConfig.kY_U_V"]], "ky_u_v_a (planeconfig attribute)": [[246, "skia.YUVAInfo.PlaneConfig.kY_U_V_A"]], "ky_vu (planeconfig attribute)": [[246, "skia.YUVAInfo.PlaneConfig.kY_VU"]], "ky_vu_a (planeconfig attribute)": [[246, "skia.YUVAInfo.PlaneConfig.kY_VU_A"]], "ky_v_u (planeconfig attribute)": [[246, "skia.YUVAInfo.PlaneConfig.kY_V_U"]], "ky_v_u_a (planeconfig attribute)": [[246, "skia.YUVAInfo.PlaneConfig.kY_V_U_A"]], "name (planeconfig attribute)": [[246, "skia.YUVAInfo.PlaneConfig.name"]], "value (planeconfig attribute)": [[246, "skia.YUVAInfo.PlaneConfig.value"]], "siting (class in skia.yuvainfo)": [[247, "skia.YUVAInfo.Siting"]], "__init__() (siting method)": [[247, "skia.YUVAInfo.Siting.__init__"]], "kcentered (siting attribute)": [[247, "skia.YUVAInfo.Siting.kCentered"]], "name (siting attribute)": [[247, "skia.YUVAInfo.Siting.name"]], "value (siting attribute)": [[247, "skia.YUVAInfo.Siting.value"]], "subsampling (class in skia.yuvainfo)": [[248, "skia.YUVAInfo.Subsampling"]], "__init__() (subsampling method)": [[248, "skia.YUVAInfo.Subsampling.__init__"]], "k410 (subsampling attribute)": [[248, "skia.YUVAInfo.Subsampling.k410"]], "k411 (subsampling attribute)": [[248, "skia.YUVAInfo.Subsampling.k411"]], "k420 (subsampling attribute)": [[248, "skia.YUVAInfo.Subsampling.k420"]], "k422 (subsampling attribute)": [[248, "skia.YUVAInfo.Subsampling.k422"]], "k440 (subsampling attribute)": [[248, "skia.YUVAInfo.Subsampling.k440"]], "k444 (subsampling attribute)": [[248, "skia.YUVAInfo.Subsampling.k444"]], "kunknown (subsampling attribute)": [[248, "skia.YUVAInfo.Subsampling.kUnknown"]], "name (subsampling attribute)": [[248, "skia.YUVAInfo.Subsampling.name"]], "value (subsampling attribute)": [[248, "skia.YUVAInfo.Subsampling.value"]], "defaultcolortypefordatatype() (yuvapixmapinfo static method)": [[249, "skia.YUVAPixmapInfo.DefaultColorTypeForDataType"]], "numchannelsanddatatype() (yuvapixmapinfo static method)": [[249, "skia.YUVAPixmapInfo.NumChannelsAndDataType"]], "yuvapixmapinfo (class in skia)": [[249, "skia.YUVAPixmapInfo"]], "__init__() (yuvapixmapinfo method)": [[249, "skia.YUVAPixmapInfo.__init__"]], "computetotalbytes() (yuvapixmapinfo method)": [[249, "skia.YUVAPixmapInfo.computeTotalBytes"]], "datatype() (yuvapixmapinfo method)": [[249, "skia.YUVAPixmapInfo.dataType"]], "initpixmapsfromsingleallocation() (yuvapixmapinfo method)": [[249, "skia.YUVAPixmapInfo.initPixmapsFromSingleAllocation"]], "issupported() (yuvapixmapinfo method)": [[249, "skia.YUVAPixmapInfo.isSupported"]], "isvalid() (yuvapixmapinfo method)": [[249, "skia.YUVAPixmapInfo.isValid"]], "kfloat16 (yuvapixmapinfo attribute)": [[249, "skia.YUVAPixmapInfo.kFloat16"]], "klast (yuvapixmapinfo attribute)": [[249, "skia.YUVAPixmapInfo.kLast"]], "kmaxplanes (yuvapixmapinfo attribute)": [[249, "skia.YUVAPixmapInfo.kMaxPlanes"]], "kunorm10_unorm2 (yuvapixmapinfo attribute)": [[249, "skia.YUVAPixmapInfo.kUnorm10_Unorm2"]], "kunorm16 (yuvapixmapinfo attribute)": [[249, "skia.YUVAPixmapInfo.kUnorm16"]], "kunorm8 (yuvapixmapinfo attribute)": [[249, "skia.YUVAPixmapInfo.kUnorm8"]], "numplanes() (yuvapixmapinfo method)": [[249, "skia.YUVAPixmapInfo.numPlanes"]], "planeinfo() (yuvapixmapinfo method)": [[249, "skia.YUVAPixmapInfo.planeInfo"]], "rowbytes() (yuvapixmapinfo method)": [[249, "skia.YUVAPixmapInfo.rowBytes"]], "yuvcolorspace() (yuvapixmapinfo method)": [[249, "skia.YUVAPixmapInfo.yuvColorSpace"]], "yuvainfo() (yuvapixmapinfo method)": [[249, "skia.YUVAPixmapInfo.yuvaInfo"]], "datatype (class in skia.yuvapixmapinfo)": [[250, "skia.YUVAPixmapInfo.DataType"]], "__init__() (datatype method)": [[250, "skia.YUVAPixmapInfo.DataType.__init__"]], "kfloat16 (datatype attribute)": [[250, "skia.YUVAPixmapInfo.DataType.kFloat16"]], "klast (datatype attribute)": [[250, "skia.YUVAPixmapInfo.DataType.kLast"]], "kunorm10_unorm2 (datatype attribute)": [[250, "skia.YUVAPixmapInfo.DataType.kUnorm10_Unorm2"]], "kunorm16 (datatype attribute)": [[250, "skia.YUVAPixmapInfo.DataType.kUnorm16"]], "kunorm8 (datatype attribute)": [[250, "skia.YUVAPixmapInfo.DataType.kUnorm8"]], "name (datatype attribute)": [[250, "skia.YUVAPixmapInfo.DataType.name"]], "value (datatype attribute)": [[250, "skia.YUVAPixmapInfo.DataType.value"]], "all() (supporteddatatypes static method)": [[251, "skia.YUVAPixmapInfo.SupportedDataTypes.All"]], "supporteddatatypes (class in skia.yuvapixmapinfo)": [[251, "skia.YUVAPixmapInfo.SupportedDataTypes"]], "__init__() (supporteddatatypes method)": [[251, "skia.YUVAPixmapInfo.SupportedDataTypes.__init__"]], "enabledatatype() (supporteddatatypes method)": [[251, "skia.YUVAPixmapInfo.SupportedDataTypes.enableDataType"]], "supported() (supporteddatatypes method)": [[251, "skia.YUVAPixmapInfo.SupportedDataTypes.supported"]], "allocate() (yuvapixmaps static method)": [[252, "skia.YUVAPixmaps.Allocate"]], "fromdata() (yuvapixmaps static method)": [[252, "skia.YUVAPixmaps.FromData"]], "fromexternalmemory() (yuvapixmaps static method)": [[252, "skia.YUVAPixmaps.FromExternalMemory"]], "fromexternalpixmaps() (yuvapixmaps static method)": [[252, "skia.YUVAPixmaps.FromExternalPixmaps"]], "yuvapixmaps (class in skia)": [[252, "skia.YUVAPixmaps"]], "__init__() (yuvapixmaps method)": [[252, "skia.YUVAPixmaps.__init__"]], "isvalid() (yuvapixmaps method)": [[252, "skia.YUVAPixmaps.isValid"]], "numplanes() (yuvapixmaps method)": [[252, "skia.YUVAPixmaps.numPlanes"]], "plane() (yuvapixmaps method)": [[252, "skia.YUVAPixmaps.plane"]], "planes() (yuvapixmaps method)": [[252, "skia.YUVAPixmaps.planes"]], "yuvainfo() (yuvapixmaps method)": [[252, "skia.YUVAPixmaps.yuvaInfo"]], "yuvcolorspace (class in skia)": [[253, "skia.YUVColorSpace"]], "__init__() (yuvcolorspace method)": [[253, "skia.YUVColorSpace.__init__"]], "kbt2020_yuvcolorspace (yuvcolorspace attribute)": [[253, "skia.YUVColorSpace.kBT2020_YUVColorSpace"]], "kidentity_yuvcolorspace (yuvcolorspace attribute)": [[253, "skia.YUVColorSpace.kIdentity_YUVColorSpace"]], "kjpeg_yuvcolorspace (yuvcolorspace attribute)": [[253, "skia.YUVColorSpace.kJPEG_YUVColorSpace"]], "klastenum_yuvcolorspace (yuvcolorspace attribute)": [[253, "skia.YUVColorSpace.kLastEnum_YUVColorSpace"]], "krec601_yuvcolorspace (yuvcolorspace attribute)": [[253, "skia.YUVColorSpace.kRec601_YUVColorSpace"]], "krec709_yuvcolorspace (yuvcolorspace attribute)": [[253, "skia.YUVColorSpace.kRec709_YUVColorSpace"]], "name (yuvcolorspace attribute)": [[253, "skia.YUVColorSpace.name"]], "value (yuvcolorspace attribute)": [[253, "skia.YUVColorSpace.value"]], "__init__() (gpubackendapi method)": [[254, "skia.gpuBackendApi.__init__"]], "gpubackendapi (class in skia)": [[254, "skia.gpuBackendApi"]], "kdawn (gpubackendapi attribute)": [[254, "skia.gpuBackendApi.kDawn"]], "kmetal (gpubackendapi attribute)": [[254, "skia.gpuBackendApi.kMetal"]], "kmock (gpubackendapi attribute)": [[254, "skia.gpuBackendApi.kMock"]], "kvulkan (gpubackendapi attribute)": [[254, "skia.gpuBackendApi.kVulkan"]], "name (gpubackendapi attribute)": [[254, "skia.gpuBackendApi.name"]], "value (gpubackendapi attribute)": [[254, "skia.gpuBackendApi.value"]]}})